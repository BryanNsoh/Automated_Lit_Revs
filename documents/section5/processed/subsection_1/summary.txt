<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper. 

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 5.2. Automated Application of Irrigation Insights
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<documents>
<review_intention>
  
the purpose and intention of this systematic review on automated systems for real-time irrigation management can be interpreted as follows:
Addressing the global food challenge: The review aims to explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity to meet the growing demand for food.
Evaluating the current state and future potential: The primary objective is to critically assess the current state of end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. The review also seeks to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.
Examining automation across the entire pipeline: The review intends to systematically analyze the automation of each component of the irrigation management pipeline, from data collection and transmission to processing, analysis, decision-making, and automated action. It aims to investigate the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
Highlighting the role of interoperability and standardization: The review seeks to emphasize the importance of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline. It aims to identify existing and emerging standards and their applicability to real-time irrigation management systems.
Identifying challenges and proposing solutions: The review intends to uncover the challenges associated with implementing real-time, automated irrigation systems, such as data quality, scalability, reliability, and security. It aims to propose solutions and best practices based on the analysis of case studies and real-world implementations.
Guiding future research and innovation: By identifying research gaps and proposing new research questions and hypotheses, the review aims to provide a roadmap for advancing the field of real-time, automated irrigation management. It seeks to encourage collaborative research efforts across disciplines to address the complex challenges of automated irrigation systems.
In summary, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.
</review_intention>

<section_intention>
GENERATING AND APPLYING IRRIGATION INSIGHTS: Focuses on the application of ML-generated insights to control irrigation systems without manual intervention, investigating the real-time generation and automated application of actionable irrigation insights, and the importance of interpretability and explainability in ML models.
</section_intention>

<subsection_title>
5.1. Real-Time Generation of Actionable Irrigation Insights
</subsection_title>

<subsection_point_Point 1>
Point: Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations

Papers to support point:

Paper 1:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: ['On a scale from 0.0 to 1.0, parsimoniously rate the relevance of the paper to the specific point mentioned in your review question, with 1.0 being the most relevant.', '0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects of the point raised by the review question and provides a substantial contribution to the understanding of the topic.', '0.8-0.89: Highly relevant - Addresses most key aspects of the point raised by the review question and provides significant insights into the topic.', '0.7-0.79: Very relevant - Addresses several key aspects of the point raised by the review question and provides valuable information on the topic.', '0.6-0.69: Moderately relevant - Addresses some key aspects of the point raised by the review question and provides some useful information on the topic.', '0.5-0.59: Somewhat relevant - Addresses a limited number of key aspects of the point raised by the review question and/or provides limited information on the topic.', '0.4-0.49: Marginally relevant - Addresses only a few minor aspects of the point raised by the review question and/or provides limited information on the topic.', '0.2-0.39: Minimally relevant - Does not directly address the point raised by the review question and/or provides very limited information on the topic.', '0.0-0.19: Not relevant - Does not address the point raised by the review question and/or does not provide any useful information on the topic.']
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The study's purpose is to analyze the relevance of advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations.

The relevance of this research lies in the fact that it addresses the need for real-time, automated irrigation management systems to ensure optimal water use and crop yield. By evaluating the performance of these machine learning models in predicting crop water requirements, the study provides insights into their effectiveness for irrigation optimization.

The extract_1 highlights a specific example of how LSTM and CNN models were used to predict crop yield with high accuracy, demonstrating their potential for precise irrigation recommendations.

The extract_2 highlights how ensemble methods, such as Random Forests, were effective in addressing the overfitting issue common in machine learning models. By combining multiple decision trees, Random Forests improved prediction accuracy and robustness.

These specific limitations of the paper relate to the scope of the study and the specific machine learning models evaluated. Firstly, the study focuses solely on evaluating the performance of machine learning models for irrigation optimization, without considering other factors such as soil properties, weather conditions, and crop physiology. Secondly, the study only evaluates a limited number of machine learning models, and there may be other models or algorithms that could achieve even better performance.

Despite these limitations, the study provides valuable insights into the potential of machine learning for precise irrigation recommendations and highlights the need for further research to explore the full potential of these technologies.

 Full Text: >
Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Research methodology 3. Digitization trends in agriculture 4. Agriculture 4.0 enabling technologies 5. Conclusions Declaration of Competing Interest Acknowledgements References Show full outline Cited by (119) Figures (16) Show 10 more figures Tables (13) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Smart Agricultural Technology Volume 2, December 2022, 100042 The digitization of agricultural industry – a systematic literature review on agriculture 4.0 Author links open overlay panel Rabiya Abbasi a, Pablo Martinez b, Rafiq Ahmad a Show more Share Cite https://doi.org/10.1016/j.atech.2022.100042 Get rights and content Under a Creative Commons license open access Highlights • SLR is conducted using PRISMA approach and148 articles are selected and critically analyzed. • The results show the extent of digital technologies adoption in agriculture. • The potential benefits of digital technologies and roadblocks hindering their implementation in agriculture sector are identified and discussed. • The study will positively impact the research around agriculture 4.0. Abstract Agriculture is considered one of the most important sectors that play a strategic role in ensuring food security. However, with the increasing world's population, agri-food demands are growing — posing the need to switch from traditional agricultural methods to smart agriculture practices, also known as agriculture 4.0. To fully benefit from the potential of agriculture 4.0, it is significant to understand and address the problems and challenges associated with it. This study, therefore, aims to contribute to the development of agriculture 4.0 by investigating the emerging trends of digital technologies in the agricultural industry. For this purpose, a systematic literature review based on Protocol of Preferred Reporting Items for Systematic Reviews and Meta-Analyses is conducted to analyse the scientific literature related to crop farming published in the last decade. After applying the protocol, 148 papers were selected and the extent of digital technologies adoption in agriculture was examined in the context of service type, technology readiness level, and farm type. The results have shown that digital technologies such as autonomous robotic systems, internet of things, and machine learning are significantly explored and open-air farms are frequently considered in research studies (69%), contrary to indoor farms (31%). Moreover, it is observed that most use cases are still in the prototypical phase. Finally, potential roadblocks to the digitization of the agriculture sector were identified and classified at technical and socio-economic levels. This comprehensive review results in providing useful information on the current status of digital technologies in agriculture along with prospective future opportunities. Previous article in issue Next article in issue Keywords Agriculture 4.0Industry 4.0DigitizationConnectivityInternet of thingsSmart agricultural systems 1. Introduction 1.1. A global food security problem Food security is a multidimensional concept that alleviates hunger by ensuring a sustainable, nutritious food supply. It is characterized by a four-pillar model shown in Fig. 1, with each pillar intrinsic to ensure food security [1]. Download : Download high-res image (262KB) Download : Download full-size image Fig. 1. Four-pillar model of food security by Food and Agriculture Organization of the United Nations. Download : Download high-res image (437KB) Download : Download full-size image Fig. 2. Agriculture value chain: stages and main functions. Due to several anthropogenic factors, such as rapid population growth, urbanization, industrialization, farmland loss, freshwater scarcity, and environmental degradation, food security is becoming a serious global issue. This is because these factors are also directly impacting agricultural industry which is a primary source of agri-food production around the world. It is anticipated that by 2050 global population will be increased from the current 7.7 billion to 9.2 billion, urban population will be rise by 66%, arable land will be declined by approximately 50 million hectares, global GHG emissions (source of CO2 – promote crop disease and pest growth) will be increased by 50%, agri-food production will be declined by 20%, and eventually, food demand will be increased by 59 to 98% – posing an imminent threat to food security and adequate food availability [2], [3], [4]. To satisfy the increasing food demands, agricultural practitioners worldwide will need to maximise the agricultural productivity involving crop and livestock farming. In this review paper, the focus is on crop farming that involves cultivation of both food and cash crops. A typical agri-food value chain depicting three primary stages, namely pre-field (pre-plantation stage), in-field (plantation and harvesting stage), and post-field (post-harvesting stage) involved in the production of agricultural products is shown in Fig. 2. All the stages play a vital role in the value chain but, in this review, the second stage ˝in-field˝ will be considered that involves several crop growing processes such as plowing, sowing, spraying, and harvesting, etc. These processes currently employ traditional agricultural practices that are labor-intensive, require arable land, time, and a substantial amount of water (for irrigation) – making it a challenge to produce enough agri-food [5]. A part of problem is also related to irregular use of pesticides and herbicides and misuse of available technology which cause harm to crop and eventually resulting in agricultural wastes [6]. These issues can be addressed by integrating sophisticated technologies and computer-based applications that ensure high crop yield, less water consumption, optimised pesticide/herbicide utilization, and enhanced crop quality. This is where the smart agriculture concept comes in. 1.2. Smart agriculture Industry 4.0, also known as the fourth industrial revolution, is revolutionizing, and reshaping every industry. It is a strategic initiative characterized by a fusion of emerging disruptive digital technologies such as Internet of Things (IoT), big data and analytics (BDA), system integration (SI), cloud computing (CC), simulation, autonomous robotic systems (ARS), augmented reality (AR), artificial intelligence (AI), wireless sensor networks (WSN), cyber-physical system (CPS), digital twin (DT), and additive manufacturing (AM) to enable the digitization of the industry [7]. The integration of these technologies in agriculture is sparking the next generation industrial agriculture, namely, agriculture 4.0 – also termed smart agriculture, smart farming, or digital farming [7]. Smart agriculture provides farmers with a diverse set of tools (shown in Fig. 3) to address several agricultural food production challenges associated with farm productivity, environmental impact, food security, crop losses, and sustainability. For instance, with IoT-enabled systems consisting of WSNs, farmers can connect to farms remotely irrespective of place and time to monitor and control farm operations. Drones equipped with hyperspectral cameras can be used to collect data from heterogeneous sources on farmlands and autonomous robots can be used to support or accomplish repetitive tasks at farms. Data analytics techniques can be employed to analyze the gathered data with computer applications can be used to assist farmers in decision-making process. Likewise, a wide variety of parameters related to environmental factors, weed control, crop production status, water management, soil conditions, irrigation scheduling, herbicides, and pesticides, and controlled environment agriculture can be monitored and analyzed in smart agriculture to increase crop yields, minimize costs, enhance product quality, and maintain process inputs through the use of modern systems [8]. Download : Download high-res image (334KB) Download : Download full-size image Fig. 3. The concept of “Smart Agriculture”. 1.3. Research motivation and contribution The motivation for preparing this review stems from the fact that digital technologies in agricultural systems offer new strategic solutions for enhancing the efficiency and effectiveness of farms’ production. Moreover, digital transformation provides a way forward to implement modern farming practices such as vertical farming (hydroponics, aquaponics and aeroponics), which has the potential to overcome food security problems. But there is a set of problems and limitations associated with this transformation from the technical, socio-economic, and management standpoint that must be death to fully exploit the potential of agriculture 4.0 [9]. There are number of studies that have discussed emerging trends in the development of agriculture 4.0 by providing succinct information on key applications, advantages, and corresponding research challenges of smart farming [9], [10], [11], [12], [13], [14], [15], [16], [17], [18]. The research focus of these studies is limited to either explaining more generic technical aspects while paying attention to only one or few digital technologies, and/or enhancing agricultural supply chain performance, and/or developing agriculture 4.0 definition, and/or achieving sustainable agronomy through precision agriculture, and/or proposing a smart farming framework. Nevertheless, these studies do not involve explicit discussion on the tools and techniques used to develop different systems and maturity level of these systems. There is also a lack of studies considering modern soilless farms such as hydroponics, aquaponics and aeroponics (indoor/outdoor) and implications of digital technologies in these farms. Hence, it is necessary to analyse the evolution of agriculture 4.0 from different perspectives to stimulate the discussion in the area. This study aims to present a holistic overview of digital technologies implemented in second stage of agricultural production value chain (in-field) for different types of farms as mentioned in section 1.1. The main theoretical contribution of the study involves analysis and dissemination of the tools and techniques employed, the farm type, the maturity level of the developed systems, along with potential roadblocks or inhibiting factors in development of agriculture 4.0. The reflections presented in the review will support researchers and agricultural practitioner in future research on agriculture 4.0. 1.4. Paper organization Following the introduction, the paper is structured as follows: Section 2 discusses the approach used to gather the relevant literature; then, Section 3 presents the statistical results obtained after a general analysis of the selected research studies; next, Section 4 provides a detailed overview of the core technologies used in the digitization of agriculture; after, Section 5 highlights the technical and socio-economic roadblocks to digital integration in agriculture; next, Section 6 outlines a discussion about the research questions followed by added value, considerations and future prospects related to agricultural digitization, and transition to agriculture 5.0; and lastly, Section 8 concludes the review. 2. Research methodology A systematic literature review (SLR) is a tool used to manage the diverse knowledge and identify research related to a predetermined topic [19]. In this study, SLR is conducted to investigate the status of Industry 4.0 technologies in agricultural industry. Particularly, cases are searched where the term ‘agriculture’ appeared concurrently in the title, abstract, or keywords of an article with any of the ‘Industry 4.0 technologies” mentioned in section 1.2. Before conducting the SLR, a review protocol is defined to ensure a transparent and high-quality research process, which are the characteristics that make a literature review systematic [20]. The review protocol also helps to minimize bias by conducting exhaustive literature searches. This includes three steps: the formulation of the research questions, the definition of the search strategy, and the specification of inclusion and exclusion criteria. This paper uses a preferred reporting item for systematic reviews and meta-analysis (PRISMA) approach to conduct SLR. PRISMA is an evidence-based minimum set of items that are used to guide the development process of systematic literature reviews and other meta-analyses [19]. 2.1. Review protocol A review protocol (in Table 1) is defined before conducting the bibliographic analysis to identify, evaluate, and interpret results relevant to the research scope. First, research questions are formulated to provide insight into the analysis of published studies in the research area of interest from different dimensions. These questions need to be answered in the study. Next, the search strategy is defined, which helps identify appropriate keywords later in the search equation to identify the relevant information sources, such as academic databases and search engines that provide access to a massive amount of digital documentation. Three online research repositories are used to retrieve relevant studies: ScienceDirect1, Scopus2, and IEEE Xplore3. Finally, to refine the search results of each database, boundaries are set by predefining inclusion and exclusion criteria for further investigation and content assessments of selected publications. It involves, for instance, defining the time interval for the research process from 2011 to 2021 to limit the studies to those published in English, disregarding chapters of books and grey literature, such as reports and summaries of events and seminars. These last two steps of the review protocol allow the preliminary filtering of metadata sources and narrow down the scope of research. Table 1. Review protocol for systematic literature review. Review questions RQ1: Which Industry 4.0 technologies have been used in the literature for digitization of agriculture? RQ2: How and to what extent have these technologies been applied in the context of service type, tools and techniques used, system's maturity level, and farm type? RQ3: What are the primary roadblocks in implementation of Industry 4.0 technologies for smart farming? Study selection criteria Inclusion criteria: • Peer-reviewed journal articles and conference papers. • Studies published during the period between 2011 and 2021. • Studies should provide answers to the research questions. • The article must include the title, year, source, abstract, and DOI. • Literature focussing on application of Industry 4.0 technologies in crop plantation and harvesting activities particularly in-field processes. Exclusion criteria: • Summaries of events and seminars, book review, and editorial. • Literature focusing on application of Industry 4.0 technologies in livestock farming; pre-field processes such as genetic development, seed development and seed supplying; post-field stages such as crop distribution, food processing and consumption; and agri-food supply chain. • Studies published before 2011. • The publication is not available in full text. • The publication is not in English. Literature search Sources: Scopus, ScienceDirect, and IEEE Xplore for academic literature, citations in identified literature Search equation: (("agriculture*") AND ("Industry 4.0" OR “Digital Farming” OR “Intelligent Farming” OR “Smart Agriculture” OR “Agriculture 4.0” OR “Smart Farming” OR “Internet of Things” OR “IoT” OR “Cloud Computing” OR “Edge Computing” OR “Wireless Sensor Networks*” OR “Artificial Intelligence*” OR “Big Data*” OR “Data Analytics*” OR “Data Science*” OR “Cyber Physical System*” OR “Robotics*” OR “Computer Vision*” OR “Machine Learning*” OR “Deep Learning*” OR “Data Integration*”)) 2.2. Evaluation process The evaluation of the literature search process is done in four stages: identification, screening, eligibility, and inclusion, as detailed by the PRISMA flow diagram shown in Fig. 4. After initial metadata filtering through the application of search expression, a total of 3165 records are found (1690 from Scopus, 926 from ScienceDirect, and 549 from IEEE Xplore), which are then consolidated for the removal of duplicate items in the identification stage. The number of publications after this step is reduced to 2876. In the screening stage, the titles and abstracts of the papers are analyzed, and only 498 papers are selected for integral reading. In the third stage, full-text screening of these articles is performed to verify their eligibility in relation to the objective of this paper, which is to answer the research questions mentioned in Table 1. Of the 498 papers, 137 are found to be relevant for this review. Another 11 are added through a cross-referencing approach, adding up to 148 papers selected in the final stage for further analysis. Download : Download high-res image (624KB) Download : Download full-size image Fig. 4. Four-step evaluation of literature search process (PRISMA). 2.3. Threats to validity i SLR replication: The presented SLR is susceptible to threats to validity because the current search is limited to only three online repositories. More publications could potentially be found if additional sources were explored. The process of SLR is described clearly in sub-sections 2.1 and 2.2, and hence, validity can be considered well addressed. However, in the case of replication of this SLR, it is possible that one can find slightly different publications. This difference would result from different personal choices during the screening and eligibility steps of PRISMA, but it is highly unlikely that the overall findings would change. ii Search string: the search string used to find the relevant studies cover the whole scope of SLR, but there is a possibility that valuable studies might have been missed. Additional keywords and synonyms with a broader search might return more studies. 3. Digitization trends in agriculture The year-wise distribution of the 148 articles from 2011 to 2021 is represented in Fig. 5. Around 22% of the scientific publications in the last ten years were published in 2018. This reflects that the agricultural industry is making considerable progress in the context of the implementation of digital technologies, but the pace is still slow as compared to other domains such as healthcare, manufacturing, mining, automotive, energy, etc.,[15]. Download : Download high-res image (162KB) Download : Download full-size image Fig. 5. Year-wise distribution of selected research studies from 2011 to 2021. The breakdown of these publications with respect to digital technologies (mentioned in sub-section 1.2) and targeted farm types is represented in Fig. 6. Download : Download high-res image (321KB) Download : Download full-size image Fig. 6. Technology-wise distribution of the 148 selected research studies. The farm type refers to the crop farming method considered while developing an application or framework. For instance, the farming method can be soil-based or soilless. The soil-based farming category involves open-air fields (traditional outdoor agricultural farms) and greenhouse farms (indoor). On the other hand, the soilless farming category involves modern farming practices such as aquaponics, aeroponics, and hydroponics (mostly indoor). The numbers at the top of the stacked column in Fig. 6 indicate the total number of studies that have used the particular technology to develop a smart agriculture system, whereas different colors of columns indicate the respective farm types. Use cases are from these publications are analysed, and conclusions are drawn. For instance, it is found that autonomous robotics systems (including unmanned guided vehicles and unmanned aerial vehicles (drones)), internet of things, and machine learning appear to be the widely applied technologies in the agricultural domain in the last decade. The same illustration suggests that big data, wireless sensor networks, cyber-physical systems, and digital twins are the emerging areas in agriculture. Moreover, open-air farms are the most frequently considered in research studies (69%), contrary to indoor farms (31%). For soilless farming systems (aquaponics, aeroponics, and hydroponics), only 22 publications are found, which insinuates that these modern farming practices are still in their infancy. Likewise, services of each use case are identified and are classified under nine different service categories, namely: i) crop management, CM (Estimation/ prediction of crop yield/ growth rate/ harvesting period and seed plantation/ harvesting/ pollination/ spraying (fertilizer/ pesticide)); ii) crop quality management, CQM (fresh weight, green biomass, height, length, width, leaf density, piment content (chlorophyll) and phytochemical composition); iii) water and environment management, WEM (monitoring and control of flow rate, water level, water quality (nutrients), temperature, humidity, CO2, and weather forecast etc.); iv) irrigation management, IM (water stress detection and scheduling); v) farm management, FM (monitoring of farm operations, tracking and counting products, determining production efficiency, financial analysis, energy consumption analysis, technology integration and decisions implementation); vi) pest and disease management, PDM (pest identification and disease detection); vii) soil management, SM (moisture content, soil nutrients, fertilizer needs and application); viii) weed and unwanted vegetation management, WUVM (weed/unknown vegetation mapping, classification, and herbicides application); and ix) fruit detection and counting, FDC — as shown in Fig. 7. These categories illustrate the role of different digital technologies in smart farming. Upon analysis, it is found that crop management parameters, such as crop yield prediction, growth rate estimation, or evaluation of harvesting period are the most frequently researched areas for agriculture 4.0 in the last decade (29%), whereas very little heed is paid towards soil management (2%), fruit detection and counting (2%), and crop quality management (3%). Download : Download high-res image (561KB) Download : Download full-size image Fig. 7. Service-wise distribution of selected research studies: The technology readiness level (TRL) of all the use cases is examined using European Union's TRL scale that partitions system's maturity level into three generic levels [21]. The first level is conceptual, that represents European TRL 1–2 (use case is in conceptual phase), the second level is the prototype, which means European TRL 3–6 (use case is working even without the complete planned functionality), and the third level is deployed, that includes European TRL 7–9 (use case is mature with all the possible functions). Fig. 8 depicts the TRL of each use case developed in selected studies. It is observed that little progress has been made in advancing smart agricultural systems beyond the concept and prototype levels to the commercial level. For instance, most use cases (129) are at the prototype level. Download : Download high-res image (269KB) Download : Download full-size image Fig. 8. Distribution of studies based on the service category and system's maturity level. 4. Agriculture 4.0 enabling technologies This section provides critical insights towards answering RQ1 and RQ2 from Table 1. 4.1. Internet of Things driven agricultural systems Internet of things (IoT) refers to a cosmos of interrelated computing devices, sensors, appliances, and machines connected with the internet, each having unique identities and capabilities for performing remote sensing and monitoring [21]. The reference architecture of IoT with six layers, namely perception layer (hardware devices), network layer (communication), middleware layer (device management and interoperability), service layer (cloud computing), application layer (data integration and analytics), and end-user layer (user-interface), is shown in Fig.9. In the agricultural domain, IoT devices in the physical layer gather data related to environmental and crop parameters such as temperature, humidity, pH value, water level, leaf color, fresh leaf weight, etc. The transmission of this data takes place in the network layer, the design of which depends on the selection of suitable communication technologies relevant to the field size, farm location, and type of farming method. For instance, ZigBee, LoRa, and Sigfox are widely used and employed in outdoor fields because they are cheaper and have low energy consumption and a good transmission range [22,23]. Despite being a secure technology, Bluetooth is only used in indoor farms as it offers a short transmission range [22]. Wi-Fi is not a promising technology for agricultural applications due to its high costs and high energy consumption [22]. RFID (radio frequency identification) and NFC (near field communication) technologies, on the other hand, are increasingly being implemented in agricultural systems for tracking agricultural products [24]. GPRS or mobile communication technology (2G, 3G, and 4G) are used for periodic monitoring of environmental and soil parameters. In addition, communication protocols mostly used in the agricultural scenarios are HTTP, WWW, and SMTP. Likewise, to ensure interoperability and system security to their context-aware functionalities, middleware HYDRA and SMEPP are mostly employed in agricultural systems [25]. To store data, cloud computing techniques are employed in the service layer. This data is then used in the application layer to build smart applications used by farmers, agriculture experts, and supply chain professionals to enhance farm monitoring capacity and productivity. Download : Download high-res image (871KB) Download : Download full-size image Fig. 9. Six-layered architecture of Internet of Things (IoT), (adapted) [26]. The integration of IoT in agriculture is meant to empower farmers with the decision tools and automation technologies that seamlessly integrate knowledge, products, and services to achieve high productivity, quality, and profit. A multitude of studies is performed and put forward concerning the incubation of the IoT concepts in the agricultural sector. The main findings of some of the studies are presented in Table 2. Multiple technological issues and architectural problems have been addressed through the development of IoT-based agricultural systems. But most of these systems are either in a conceptual stage or in a prototype form (not commercial) at the moment. Focus is mainly laid on-farm management, irrigation control, crop growth, health monitoring, and disease detection. Some of these studies have also explained IoT implementation in modern agricultural systems such as vertical farming (soilless farming - aquaponics, hydroponics, and aeroponics) and greenhouse farming (soil-based). Moreover, most studies have focused on addressing a specific problem. Table 2. IoT-driven agricultural systems. Use case No. Service category Tools and techniques Farm type Maturity level Citations 1. CM WSN, CC, and reinforcement learning Greenhouse (soil-based) Deployed [27] 2. Sensors, actuators, and controllers Open-air Prototype [28] 3. Sensors, controllers, and mobile app Greenhouse (soil-based) Prototype [29] 4. Sensors, CC, BD analysis, and ML Greenhouse (soil-based) Prototype [30] 5. Sensors, and CC Aeroponics Prototype [31] 6. Sensors, actuators, and control system Aeroponics Prototype [32] 7. Weather boxes, sensors, and camera Open-air Prototype [33] 8. CQM IoT devices, LED lights, and software application Hydroponics Prototype [34] 9. WEM Sensors, and CC Aquaponics Conceptual [35] 10. Sensors, Arduino board, and database Open-air Prototype [36] 11. Sensors, Arduino board, and database Greenhouse (soil-based) Prototype [37] 12. Sensors, CPS, edge, and cloud computing Hydroponics Prototype [38] 13. Sensors, electronic components, and network Aquaponics Prototype [39] 14. Sensors, Arduino, Raspberry Pi3, and deep neural network Hydroponics Prototype [40] 15. Sensors, and database Aquaponics Prototype [41] 16. Sensors, actuators, and CC Aquaponics Prototype [42] 17. Sensors, controllers, and mobile app Aquaponics Prototype [43] 18. IM WSN, fuzzy logic and neural network Open-air Prototype [44] 19. Sensor information unit, MQTT, HTTP, and neural network Greenhouse (soil-based) Prototype [45] 20. FM Sensors, controllers, web interface, and CC Open-air Conceptual [46] 21. Sensors, controllers, cloud, and Android application Open-air Prototype [47] 22. Sensors, IEEE, and GSM protocols Open-air Prototype [48] 23. PDM Sensors, controllers, and image processing Open-air Prototype [49] 24. Cloud, camera, controllers, and K-mean clustering Open-air Prototype [50] 25. WSN, controller, and cloud Open-air Prototype [51] 26. WSN, cloud storage, and agricultural knowledge base Open-air Prototype [52] 27. WSN, Hidden Markov Model, and SMS module Open-air Deployed [53] 28. Sensors, Image processing, k-mean clustering, and support vector machine Open-air Prototype [54] 4.2. Wireless sensor networks in agriculture Wireless sensor network (WSN) is regarded as a technology that is used within an IoT system. It can be defined as a group of spatially distributed sensors for monitoring the physical conditions of the environment, temporarily storing the collected data, and transmitting the gathered information at a central location [22]. The general architecture of WSN is shown in Fig. 10. A WSN for smart farming is made up of numerous sensor nodes connected through a wireless connection module. These nodes have a variety of abilities (e.g., processing, transmission, and sensation) that allow them to self-organize, self-configure, and self-diagnose. There are different types of WSNs, which are categorized depending on the environment where they are deployed. These include terrestrial wireless sensor networks (TWSNs), wireless underground sensor networks (WUSNs), underwater wireless sensor networks (UWSNs), wireless multimedia sensor networks (WMSNs), and mobile wireless sensor networks (MWSNs) [55]. In agricultural applications, TWSN and UWSN are widely used. In TWSNs, the nodes are deployed above the ground surface, consisting of sensors for gathering the surrounding data. The second variant of WSNs is its underground counterpart – WUSNs, where sensor nodes are planted inside the soil. In this setting, lower frequencies easily penetrate through the soil, whereas higher frequencies suffer severe attenuation [56]. Therefore, the network requires a higher number of nodes to cover a large area because of the limited communication radius. Many research articles are available in the literature that discusses the use of WSN for different outdoor and indoor farms’ applications such as irrigation management, water quality assessment, and environmental monitoring. A summary of some of these articles is given in Table 3. These studies have focused on developing WSNs architectures that are simplified, low cost, energy-efficient and scalable. Yet, various factors associated with WSNs need further attention, such as minimum maintenance, robust and fault-tolerant architecture, and interoperability. Download : Download high-res image (135KB) Download : Download full-size image Fig. 10. General architecture wireless sensor network (WSN). Table 3. Use of WSNs in agricultural systems. Use case No. Service category Tools and techniques used Farm type Maturity level Citation 29. IM Soil-moisture and temperature sensors, web application, and photovoltaic panels Open-air Prototype [57] 30. Electronic board, sensor board and GPRS board. Open-air Prototype [58] 31. Wireless sensor nodes, and Zigbee Open-air Conceptual [59] 32. Moisture sensors, actuators, and GUI Greenhouse (soil-based) Prototype [60] 33. WEM Wireless communication, temperature, and humidity sensors Greenhouse (soil-based) Prototype [61] 34. Sensor nodes, gateway unit, database, ordinary kriging spatial interpolation (OKSI) algorithm Hydroponics Prototype [62] 35. Microcontrollers, wireless radio frequency and sensor nodes Greenhouse (soil-based) Prototype [63] 36. Wireless sensor nodes, communication network, and mobile application Aquaponics Prototype [64] 37. Arduino, wireless module with temperature, relative humidity, luminosity, and air pressure sensors Any farm Prototype [65] 38. Zigbee, Wi-fi and sensors Hydroponics Prototype [66] 4.3. Cloud computing in agriculture According to the National Institute of Standard and Technologies (NIST), cloud computing (CC) is defined as a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction [67]. The main architecture of CC shown in Fig. 11 is comprised of four layers: datacenter (hardware), infrastructure, platform, and application [68]. Each of these layers is linked with specific cloud service models, which are classified as software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS). Cloud computing has gained great attention over the past decade in the agriculture sector because it provides: 1) inexpensive storage services for data gathered from different domains through WSNs and other preconfigured IoT devices, 2) large-scale computing systems to perform intelligent decision-making by transforming this raw data into useful knowledge, and 3) a secure platform to develop agricultural IoT applications [69]. In combination with IoT and WSN, CC is employed to develop different agricultural applications, most of which are presented in Tables 2 and 3. CC technology is also used to create operational farm management systems (FMSs) to support farmers and farm managers in efficient monitoring of farm operations Table 4. presents the salient features of some of these FMSs. Another topic of interest that is being explored in global research is related to the traceability of agri-product quality [70]. But only preliminary research has been attempted to explore traceability compliance with standards of food safety and quality. Download : Download high-res image (362KB) Download : Download full-size image Fig. 11. Architecture of cloud computing, adapted from [68]. Table 4. Cloud computing-based farm management systems. Use case No. Service category Tools used Farm type Maturity level Citation 39. FM Fuzzy logic, Java, HTML, Apache Karaf, etc.; Greenhouse (soil-based) Conceptual [71] 40. RFID, and mobile app Open-air Deployed [72] 41. MySQL, financial analysis tool and mobile app Open-air Conceptual [73] 42. Self-leveling scale, control box, LCD display, and RFID tags Open-air Conceptual [74] The cloud-based agricultural systems have the potential to solve problems of increasing food demands, environmental pollution caused by excessive use of pesticides and fertilizers, and the safety of agricultural products. These FMSs, however, do not have the capability to support run-time customization in relation to distinct requirements of farmers. Moreover, because most farm data is usually fragmented and dispersed, it is difficult to record farm activities properly in current FMSs applications [75]. 4.4. Edge/fog computing in agriculture The rapid development of IoT has led to the explosive growth of sensors and smart devices, generating large volumes of data. The processing and analysis of such an enormous amount of data in real-time are challenging because it increases the load on the cloud server and also reduces the response speed. Simply using a cloud server is not able to provide real-time response while handling such a large data set. Additionally, IoT applications are sensitive to network latency because they require a constant exchange of information between devices and the cloud, making CC unfeasible to handle these applications [23]. The emergence of the edge computing concept can resolve the problems associated with CC. This new computing model deploys computing and storage resources (such as cloudlets or fog nodes) at the edge of the network closer to data sources such as mobile devices or sensors. This way, it can facilitate real-time analytics while keeping data secure on the device [23]. Edge computing offers intriguing possibilities for smart agriculture, but the applications of this technology are only in their infancy in agricultural systems. Hence, few research studies are available in this area; see Table 5. Most of the edge computing-based agricultural systems discussed in these studies are prototypical and address a limited selection of problems in various agricultural domains. So far, interoperability and scalability issues have not received sufficient consideration. Table 5. Edge computing-based agricultural systems. Use case No. Service category Edge computing techniques used Farm type Maturity level Citation 43. FM Computation offloading Aeroponics Prototype [76] 44. Computation offloading (automated control) Hydroponics Prototype [77] 45. Computation offloading (alert generation) Any farm Prototype [78] 46. PDM Computation offloading Open-air Prototype [79] 47. WEM Latency reduction Any farm Prototype [80] 48. Computation offloading Aquaponics Prototype [81] 49. SM Computation offloading (data analysis) Open-air Prototype [82] 4.5. Autonomous robot systems in agriculture Autonomous robot systems (ARS) are intelligent machines capable of performing tasks, making decisions, and acting in real-time, with a high degree of autonomy (without external influence or without explicit human intervention) [83]. Interest in agricultural ARS (AARS) has grown significantly in recent years because of their ability to automate some practices in outdoor and indoor farms - including seeding, watering, fertilizing, spraying, plant monitoring and phenotyping, environmental monitoring, disease detection, weed and pest controlling, and harvesting [15]. The agricultural robots use a combination of emerging technologies such as computer vision, WSNs, satellite navigation systems (GPS), AI, CC, and IoT, thereby facilitating the farmers to enhance productivity and quality of agricultural products. AARS in smart farming can be mobile AARS, which can move throughout the working field, or fixed AARS [84]. Mobile AARSs are further classified into unmanned ground vehicles (UGVs) and 2) unnamed aerial vehicles (UAVs), which are explained in the following sections. 4.5.1. Unmanned ground vehicles in agriculture Unmanned ground vehicles (UGVs) are agricultural robots that operate on the ground without a human operator. The main components of UGVs generally include; a platform for locomotive apparatus and manipulator, sensors for navigation, a supervisory control system, an interface for the control system, the communication links for information exchange between devices, and a system architecture for integration between hardware and software agents [85]. The control architecture of UGV can be remote-operated (controlled by a human operator via the interface) or fully autonomous (operated without the need for a human controller based on artificial intelligence technologies) [85]. Likewise, locomotive systems can be based on wheels, tracks, or legs [85]. Despite high ground adaptability, intrinsic omnidirectionality and soil protection of legged robots, they are uncommon in agriculture. However, when combined with wheels (wheel-legged robots), these robots offer a disruptive locomotion system for smart farms. In addition to their needed characteristics for infield operations, UGV should fulfill certain requirements such as small size, maneuverability, resilience, efficiency, human-friendly interface, and safety – to enhance crop yields and farm productivity. Table 6 summarizes the diverse range of UGVs designed for agricultural operations. Table 6. Different types of UGVs designed for performing agricultural tasks. Use case No. Service category Primary function Tools and techniques used Locomotion system Farm type Maturity level Citation 50. WUVM Weed control Modules (Vision, spray, mechanical weeding), and classification algorithms Four-wheel-steering system (4WS). Open-air Prototype [86] 51. Vision system with Kinect v2 sensor, and random sample consensus algorithm Four-wheel-drive (4WD) Open-air Prototype [87] 52. PDM Pesticides spraying RGB camera, HMI, and LiDAR Four-wheel-drive (4WD) Open-air Prototype [88] 53. RGB camera, and laser Four-wheel-drive (4WD) Open-air Prototype [89] 54. Crop treatment Hyperspectral cameras, thermal and infrared detecting systems. Four-wheel steering system (4WS) Open-air Prototype [90] 55. CM Seed sowing Ultrasonic sensor, and PI controller Caterpillar treads Open-air Prototype [91] 56. Ultrasonic sensor, GSM module and actuators. Four-wheel-drive (4WD) Open-air Prototype [92] 57. Artificial pollination Sensing module, pollinator system, RGB camera and odometry. Four-wheel-drive (4WD) Open-air Prototype [93] 58. Harvesting RGB-D camera and RCNN Four-wheel-steering system (4WS). Open-air Prototype [94] 59. RGB camera and RCNN Four-wheel-drive (4WD). Open-air Prototype [95] Most of the agricultural robotic systems presented above have a 4WD locomotive system because it offers ease of construction and control. The drawback of 4WD is that the wheels are strongly affected by terrains containing stone elements and/or cavities [85]. Hence, it is significant to explore other mechanisms, such as legged or wheel-legged locomotive systems. Some robots have computer vision systems, but due to the difficulty of developing an accurate and reliable system that replaces manual labor, most of these robots are built with a low-cost computer vision system, that is, using conventional RGB cameras. Moreover, most of the systems mentioned above are still in the research phase, with no commercial use on a large scale. 4.5.2. Unmanned aerial vehicles in agriculture Unmanned aerial vehicles (UAVs) or aerial robots are aircrafts with no human pilot on board. Depending on the type of technology incorporated to fly (wing structure) and autonomy level, there is a wide variety of UAVs [96]. For instance, according to wing type, UAVs can be fixed-wing (planes), single-rotor (helicopter), hybrid system (vertical takeoff and landing), and multirotor (drone). Among these, drones (multi-rotor technology) which are lifted and propelled by four (quadrotor) or six (hex-rotor) rotors, have become increasingly popular in the agriculture sector due to their mechanical simplicity in comparison to helicopters, which rely on a much more sophisticated plate control mechanism [97]. Similarly, according to autonomy level, UAVs can be either teleoperated in which the pilot provides references to each actuator of the aircraft so as to control it, in the same manner, an onboard pilot would, or tele-commanded in which the aircraft relies on an automatic controller on board that is in charge of maintaining a stable flight [96]. Equipped with the appropriate sensors (vision, infrared, multispectral, and hyperspectral cameras, etc.), agricultural UAVs allow farmers to obtain data (vegetation, leaf area, and reflectance indexes) from their fields to study dynamic changes in crops that cannot be detected by scouting the ground [98]. This data permits farmers to infer information related to crop diseases, nutrient deficiencies, water level, and other crop growth parameters. With this information, farmers can plan possible remedies (irrigation, fertilization, weed control, etc.). Table 7 reviews some of the UAV-based systems used for different agricultural operations. Table 7. Different UAV based systems developed for performing different agricultural operations. Use case No. Service category Primary function UAV type Cameras/ sensors Flight altitude (m) Farm type Maturity level Citation 60. CQM Vegetation monitoring Hexacopter Hyper-spectral camera 30 Open-air Prototype [99] 61. Biomass monitoring Octocopter RGB-sensor 50 Open-air Prototype [100] 62. CM Real-time growth monitoring Quadcopter Digital camera 100 Open-air Prototype [101] 63. Photosynthetic active radiation mapping Fixed wing Multi-spectral camera 150 Open-air Prototype [102] 64. Remote sensing Helicopter Multi-spectral camera 15-70 Open-air Prototype [103] 65. Remote sensing and mapping RC plane Digital camera 100-400 Open-air Prototype [104] 66. Rice pollination Helicopter Wind speed sensor 1.15, 1.23, 1.33 Open-air Prototype [18] 67. Droplet distribution estimation Quadcopter Digital canopy imager 3.5, 4, 4.5 Open-air Prototype [105] 68. UREA spraying Quadcopter Multi and hyper spectral cameras Few meters Open-air Prototype [106] 69. Pesticide spraying Quadcopter RF module 5, 10, 20 Open-air Prototype [107] 70. Pesticide spray application Helicopter Digital camera 3-4 Open-air Prototype [108] 71. Automatic spray control system Helicopter Image transmitter 5, 7, 9 Open-air Prototype [109] 72. WUVM Multi-temporal mapping of weed Quadcopter Digital camera 30, 60 Open-air Prototype [110] 73. Weed mapping and control Digital camera 30 Open-air Prototype [111] 74. IM Water status assessment Fixed wing Multi-spectral camera 200 Open-air Prototype [112] 75. Water stress detection Fixed wing Micro-hyper spectral camera 575 Open-air Prototype [113] 76. Water stress investigation Fixed wing Digital camera 90 Open-air Prototype [114] 77. Assessing the effects of saline reclaimed waters and deficit irrigation on Citrus physiology Fixed wing Digital camera 100 Open-air Prototype [115] 78. Water status and irrigation assessment Quadcopter Multi-spectral camera 30 Open-air Prototype [116] 79. PDM Phylloxera disease detection Hexacopter RGB and multi-spectral cameras 60, 100 Open-air Prototype [117] 80. Citrus greening disease detection Hexacopter Multi-spectral camera 100 Open-air Prototype [118] Most of the systems mentioned above are still in the research phase, with no commercial use on a large scale. Other problems with these UAVs are associated with battery and flight time [96]. At the moment, lithium-ion batteries are being used because their capacity is larger than that of conventional batteries. But an increase in battery capacity increases the drone weight, and now research is undergoing to address this issue. In addition, the existing UAVs have complex user interfaces, and only experts can use them to perform agricultural tasks. By improving the user interface making it human-centered with multimodal feedback will allow people who are older or unfamiliar with UAV technology to control it more easily. 4.6. Big data and analytics in agriculture Rapid developments in IoT and CC technologies have increased the magnitude of data immeasurably. This data, also referred to as Big Data (BD), includes textual content (i.e., structured, semi-structured, and unstructured), and multimedia content (e.g., videos, images, audio) [119]. The process of examining this data to uncover hidden patterns, unknown correlations, market trends, customer preferences, and other useful information is referred to as big data analytics (BDA). Big data is typically characterized according to five dimensions defined by five Vs, which are displayed in Fig. 12 [120]. The paradigm of BD-driven smart agriculture is comparatively new, but the trend of this application is positive as it has the capacity to bring a revolutionary change in the food supply chain and food security through increased production. Agricultural big data is usually generated from various sectors and stages in agriculture, which can be collected either from agricultural fields through ground sensors, aerial vehicles, and ground vehicles using special cameras and sensors; from governmental bodies in the form of reports and regulations; from private organizations through online web services; from farmers in the form of knowledge through surveys; or from social media [120]. The data can be environmental (weather, climate, moisture level, etc.), biological (plant disease), or geo-spatial depending on the agricultural domain and differs in volume, velocity, and formats [121]. The gathered data is stored in a computer database and processed by computer algorithms for analyzing seed characteristics, weather patterns, soil properties (like pH or nutrient content), marketing and trade management, consumers’ behavior, and inventory management. A variety of techniques and tools are employed to analyze big data in agriculture. A summary of some of the studies is given in Table 8. Machine learning, cloud-based platforms, and modeling and simulation are the most commonly used techniques. Particularly, machine learning tools are used in prediction, clustering, and classification problems. Whereas cloud platforms are used for large-scale data storing, preprocessing, and visualization. There are still many potential areas that are not adequately covered in existing literature, where BDA can be applied to address various agricultural issues. For instance, these include data-intensive greenhouses and indoor vertical farming systems, quality control and health monitoring of crops in outdoor and indoor farms, genetic engineering, decision support platforms to assist farmers in the design of indoor vertical farms, and scientific models for policymakers to assist them in decision-making regarding the sustainability of the physical ecosystem. Lastly, most systems are still in the prototypical stage. Download : Download high-res image (437KB) Download : Download full-size image Fig. 12. Five dimensions of “Big Data”. Table 8. Big data tools and services in agriculture. Use case No. Service category Tools and techniques used Big data source Farm type Maturity level Citation 81. WEM Crop modelling and simulation, geospatial analysis Weather station, historical databases Open-air Conceptual [121] 82. CM Clustering, prediction, and classification Sensor, historical, and farmer data Open-air Conceptual [122] 83. Support vector machine Sensor data Open-air Conceptual [123] 84. IM Cloud-based application. Sensor data Hydroponics Prototype [124] 85. Cloud-based platform, and web services Sensor data, industry standards Open-air Conceptual [125] 4.7. Artificial intelligence in agriculture Artificial intelligence (AI) involves the development of theory and computer systems capable of performing tasks requiring human intelligence, such as sensorial perception and decision-making [126]. Combined with CC, IoT, and big data, AI, particularly in the facet of machine learning (ML) and deep learning (DL), is regarded as one of the key drivers behind the digitization of agriculture. These technologies have the potential to enhance crop production and improve real-time monitoring, harvesting, processing, and marketing [127]. Several intelligent agricultural systems are developed that use ML and DL algorithms to determine various parameters like weed detection, yield prediction, or disease identification. These systems are discussed in the next two sub-sections. 4.7.1. Machine learning in agriculture Machine learning (ML) techniques are broadly classified into three categories: 1) supervised learning (linear regression, regression trees, non-linear regression, Bayesian linear regression, polynomial regression, and support vector regression), 2) unsupervised learning (k-means clustering, hierarchal clustering, anomaly detection, neural networks (NN), principal component analysis, independent component analysis, a-priori algorithm and singular value decomposition (SVD)); and 3) reinforcement learning (Markov decision process (MDP) and Q learning) [128]. ML techniques and algorithms are implemented in the agriculture sector for crop yield prediction, disease, and weed detection, weather prediction (rainfall), soil properties estimation (type, moisture content, pH, temperature, etc.), water management, determination of the optimal amount of fertilizer, and livestock production and management [129] Table 9. presents a list of publications where different ML algorithms are utilized for various agricultural applications. From the analysis of these articles, “crop yield prediction” is a widely explored area, and linear regression, neural network (NN), random forest (RF), and support vector machine (SVM) is the most used ML techniques to enable smart farming. The presented use cases are still in the research phase with no reported commercial usage at the moment. Moreover, it is also found that AI and ML techniques are sparsely explored in the greenhouse and indoor vertical farming systems, particularly hydroponics, aquaponics, and aeroponics. There are only a few publications available summarized in the same table where ML techniques are employed. Considering the digital transformation's cyber-security and data privacy challenges, new approaches such as federated learning and privacy-preserving methods are being developed to enable digital farming [130]. These approaches build ML models from local parameters without sharing private data samples, thus mitigating security issues. Table 9. Machine learning-based agricultural systems. Use case No. Service category Data sources Algorithms used Farm type Maturity level Citation 86. CM Yield maps, climate, and temporal data. SVM with radial basis functions Open-air Prototype [131] 87. Vegetation dataset from Landsat 8 OLI. Boosted regression tree, RF regression, support vector regression, and Gaussian process regression Open-air Prototype [132] 88. Historical soil and rainfall data Recurrent neural network Open-air Prototype [133] 89. Plot-scale wheat data Multiple linear regression and RF Open-air Prototype [134] 90. Temperature and rainfall records Artificial neural network Open-air Prototype [135] 91. Soil data, and satellite imagery Counter-propagation artificial neural networks Open-air Prototype [136] 92. Rainfall records RF Open-air Prototype [137] 93. Field survey data of 64 farms SVM, RF, decision tree Open-air Prototype [138] 94. Tap water samples RF Hydroponics Prototype [139] 95. PDM Images from a strawberry greenhouse SVM Greenhouse (soil-based) Prototype [140] 96. Sensor data Least squares SVM Open-air Prototype [141] 97. Sensor data Decision trees Aquaponics Prototype [142] 98. WUVM Image data RF Open-air Prototype [143] 99. Images from a university farm. SVM Open-air Prototype [144] 100. SM 140 soil samples from top layer Least squares support vector machines Open-air Prototype [145] 101. Humidity data from Radarsat-2 Extreme learning machine-based regression Open-air Prototype [146] 102. WEM Rainfall data Bayesian linear regression, boosted decision tree and decision forest regression, neural network regression Open-air Prototype [147] 103. Air temperature, wind speed, and solar radiation data Artificial neural network and SVM Greenhouse (soil-based) Prototype [148] 4.7.2. Deep learning in agriculture Deep learning (DL) represents the extension of classical ML that can solve complex problems (predictions and classification) particularly well and fast because more “depth” (complexity) is added into the model. The primary advantage of DL is feature learning which involves automatic extraction of features (high-level information) from large datasets [149]. Different DL algorithms are convolutional neural networks (CNNs), long short term memory (LSTM) networks, recurrent neural (RNN) networks, generative adversarial networks (GANs), radial basis function networks (RBFNs), multilayer perceptron (MLPs), feedforward artificial neural network (ANN), self-organizing maps (SOMs), deep belief networks (DBNs), restricted Boltzmann machines (RBMs), and autoencoders. A detailed description of these algorithms, popular architectures, and training platforms is available at various sources [150]. Fig. 13 illustrates an example of DL architecture of CNN [151]. In the agriculture sector, DL algorithms are mostly used to solve problems associated with computer vision applications that target the prediction of key parameters, such as crop yields, soil moisture content, weather conditions, and crop growth conditions; the detection of diseases, pests, and weed; and the identification of leaf or plant species [152]. Computer vision is an interdisciplinary field that has been gaining huge amounts of traction in recent years due to the surge in CNNs. It offers methods and techniques that allow the processing of digital images accurately and enables computers to interpret and understand the visual world [153]. A summary of agricultural applications using DL and computer vision techniques is given in Table 10. Among all the DL algorithms, CNNs or Convet and its variants are the most used algorithms in agricultural applications. The variants of CNN are region-based CNNs (RCNN), Fast-RCNN, Faster-RCNN, YOLO, and Mask-RCNN, among which the first four are mostly used to solve object detection problems. Mask-RCNN, on the other hand, is used to solve instance segmentation problems. The reader could refer to the existing bibliography for a detailed description of these algorithms and their applications [152]. Few studies have also used other DL techniques. Talking about datasets, most DL models are trained using images, and few models are trained using sensor data gathered from fields. This shows that DL can be applied to a wide variety of datasets. It is also observed that most of the work is done on outdoor farms, whereas next-generation farms (environment-controlled) are not extensively explored. Though DL has the potential to enable digital farming, most systems are still in the prototype phase. Additionally, the new challenges imposed by cyber-security and privacy issues require optimization of current DL and computer vision approaches. Download : Download high-res image (334KB) Download : Download full-size image Fig. 13. Example of CNN architecture. Table 10. Deep learning-based agricultural systems. Use case No. Service category Data sources Algorithms used Farm type Maturity level Citation 104. CM Satellite and weather data LSTM network Open-air Prototype [154] 105. Rice yield data, meteorology, and area data (81 counties). Back-Propagation neural networks and RNN Open-air Prototype [155] 106. Commercial fields’ images CNN Open-air Prototype [156] 107. Aerial orthoimages Faster RCNN Open-air Prototype [157] 108. Historical yields and greenhouse environmental parameters. Temporal CNN and RNN. Greenhouse (soil-based) Prototype [158] 109. Lettuce images from farm. CNN Greenhouse (soil-based) Prototype [159] 110. WEM Soil moisture data, and daily meteorological data RBMs Open-air Prototype [160] 111. CQM Images from the farm and Google search engine Mask-RCNN Aquaponics Prototype [161] 112. WUVM Weed and crop species images from 6 different datasets. CNN Open-air Prototype [162] 113. PDM Images collected from Internet. CNN Open-air Prototype [163] 114. Public dataset Deep CNN Open-air Prototype [164] 115. Images from camera. Faster R-CNN, and single shot multibox detector Open-air Prototype [165] 116. Dataset with images of Walnut leaves CNN Open-air Prototype [166] 117. FDC RGB and multi-modal images Faster R-CNN Open-air Prototype [167] 118. Images of oranges and green apples CNN Open-air Prototype [168] 119. Images of ripe young and expanding apples. YOLO-V3 Open-air Prototype [169] 4.8. Agricultural decision support systems A decision support system (DSS) can be defined as a smart system that supports decision-making to specific demands and problems by providing operational answers to stakeholders and potential users based on useful information extracted from raw data, documents, personal knowledge, and/or models [170]. DSS can be data-driven, model-driven, communication-driven, document-driven, and knowledge-driven. The salient features of these DSSs are available at following source [171]. Fig. 14 presents the general architecture of a DSS, consisting of four fundamental components, each having its specific purpose. Download : Download high-res image (214KB) Download : Download full-size image Fig. 14. The general architecture of decision support system. Download : Download high-res image (400KB) Download : Download full-size image Fig. 15. 5C architecture for cyber-physical systems, (adapted) [187]. Due to the evolution of agriculture 4.0, the amount of farming data has increased immensely. To transfer this heterogenous data into practical knowledge, platforms like agricultural decision support systems (ADSS) are required to make evidence-based and precise decisions regarding farm operation and facility layout [172]. Over the past few years, ADSSs are gaining much attention in the agriculture sector. A number of ADSSs have been developed that focus on a variety of agricultural aspects, such as farm management, water management, and environmental management. Table 11 presents a summary of the ADSSs found in the literature. From this analysis, most ADSSs have been found to not consider expert knowledge, which is highly valuable as it allows to development of systems as per user's needs. The other reported issues with some of these ADDSs are complex GUIs, inadequate re-planning components, a lack of prediction and forecast abilities, and a lack of ability to adapt to uncertain and dynamic factors. It is also worth noting that all the ADSSs are for outdoor agricultural systems and are in the research phase. In comparison, the application of ADSS in indoor soilless farming is still very much unexploited. Table 11. Agricultural decision support systems. Use case No. Service category Data sources Tools and techniques used Maturity level Farm type Citation 120. IM Environmental and crop data Partial least squares regression and adaptive neuro fuzzy inference system Prototype Open-air [173] 121. Crop and site data Fuzzy C-means algorithm Prototype Open-air [174] 122. WEM Meteorological and crop data Geographical information system (GIS) Prototype Open-air [175] 123. Environmental, economic, and crop data VEGPER, ONTO, SVAT-CN, EROSION, GLPROD Prototype Open-air [176] 124. FM Environmental and crop-related data B-patterns optimization algorithm Prototype Open-air [177] 125. Environmental and crop data Agent-based modeling, SVM and decision trees Prototype Aquaponics [178] 126. Environmental and crop data Object-oriented methodology Prototype Greenhouse (soil-based) [179] 127. PDM Crop data Excel based algorithm Prototype Greenhouse (soil-based) [180] 128. Environmental data Rule-based approach Conceptual Greenhouse (soil-based) [181] 129. Environmental data Rule-based approach Prototype Greenhouse (soil-based) [182] 130. WUVM 10 years weather data and a set of vegetation index. Rule-based application Prototype Open-air [183] 4.9. Agricultural cyber-physical systems As one of the main technologies of Industry 4.0, a cyber-physical system (CPS) refers to an automated distributed system that integrates physical processes with communication networks and computing infrastructures [184]. There are three standard CPS reference architecture models: namely, 5C, RAMI 4.0, and IIRA, and their detailed description is available at following source [185]. Among these, the 5C is a well-known reference model with widespread usage. The architecture of 5C consists of five levels which are represented in Fig. 15. CPS benefits from a variety of existing technologies such as agent systems, IoT, CC, augmented reality, big data, and ML [186]. Its implementation ensures scalability, adaptability, autonomy, reliability, resilience, safety, and security improvements. Download : Download high-res image (461KB) Download : Download full-size image Fig. 16. Schematic of a digital twinning process, (adapted) [199]. Agricultural field is regarded as one of the complex domains that can benefit from CPS technology. Agricultural cyber-physical systems (ACPSs) use advanced electronic technologies and agricultural facilities to build integrated farm management systems that interact with the physical environment to maintain an optimal growth environment for crops [188]. ACPSs collect the essential and appropriate data about climate, soil, and crops, with high accuracy and use it to manage watering, humidity, and plant health, etc. A variety of ACPSs has been developed for the management of different services, and their summary is given in Table 12. Looking at these ACPSs, most systems are still at the prototype and conceptual level. Moreover, most studies are conducted for outdoor farms, with only a few works published related to soil-based greenhouse systems. No study is found that is relevant to indoor soilless farming systems. ACPSs has attracted significant research interest because of their promising applications across different domains; deploying CPS models in real-life applications is still a challenge as it requires proper hardware and software [189]. Moreover, particular attention should be given to autonomy, robustness, and resilience while engineering ACPSs in order to handle the unpredictability of the environment and the uncertainty of the characteristics of agricultural facilities. There are multiple factors (humans, sensors, robots, crops, and data, among others) that impact ACPSs. To ensure a smooth operation while avoiding conflicts, errors, and disruptions, ACPSs need to be designed carefully and comprehensively. Table 12. Agricultural cyber-physical systems. Use case No. Service category Tools and techniques used Maturity level Farm type Citation 131. IM Integrated open geospatial web service Prototype Open-air [190] 132. Moisture sensors, and solenoid valves Prototype Greenhouse (soil-based) [191] 133. Sensor and sink nodes, network, and control centre Prototype Greenhouse (soil-based) [188] 134. Transceiver modules, multi-sensor array and weather forecasting system Prototype Open-air [186] 135. PDM ToxTrac and NS2 simulator Conceptual Open-air [192] 136. Sensors and cameras Prototype Greenhouse (soil-based) [193] 137. Unmanned aircraft system Conceptual Open-air [194] 138. CM Multispectral terrestrial mobile and autonomous aerial mobile mechatronic systems, and GIS Conceptual Open-air [195] 139. Edge and cloud computing Prototype Open-air [196] 140. Sensors, actuators, Arduino, and Raspberry Pi Prototype Any farm [197] 4.10. Digital twins in agriculture Digital twin (DT) is a dynamic virtual replica of a real-life (physical) object of which it mirrors its behaviors and states over multiple stages of object's lifecycle by using real-world data, simulation, and machine learning models, combined with data analytics to enable understanding, learning, and reasoning [198]. A complete description of the DT concept for any physical system requires consolidation and formalization of various characteristics, including the physical and virtual entities, the physical and virtual environments, the metrology, and realization modules that perform the physical to virtual and the virtual to physical connection or twinning, the twinning and twinning rate, and the physical and virtual processes [199]. The schematic showing the mapping of these characteristics is shown in Fig. 16. The DT concept has gained prominence due to the advances in the technologies such as the Internet of Things, big data, wireless sensor networks, and cloud computing. This is because these technologies allow real-time monitoring of physical twins at high spatial resolutions through both miniature devices and remote sensing that produce ever-increasing data streams [21]. The concept of DT in agricultural applications is rather immature as compared to other disciplines with its first references occurred in 2017; hence its added value has not yet been discussed extensively [21]. This is because framing is a highly complex and dynamic domain because of its dependence on natural conditions (climate, soil, humidity) and presence of living physical twins (plants and animals) and non-living physical twins (indoor farm buildings, grow beds, outdoor agricultural fields, agricultural machinery). The non-living physical twins interact directly or indirectly with plants and animals (living physical twins), thereby introducing more challenges for DT in agriculture. Whereas in other domains such as manufacturing DTs are mostly concerned with non-living physical twins. Table 13 summarises the agricultural DTs developed in the last 10 years. Table 13. Digital twins in agriculture Use case No. Service category Physical twin Tools and techniques used Maturity level Farm type Citation 141. WEM Aquaponics system and building IoT sensor system, and MQQT broker Prototype Aquaponics [200] 142. CM Agricultural product Sensor, network, and computational units Prototype Open-air [201] 143. FM Agricultural machinery ROS platform, Gazebo 3D and Open Street Maps Prototype Open-air [202] 144. Farmland Sensor, network, and computational units Prototype Open-air [203] 145. Agricultural farm/landscape Sensors, and PLCs Conceptual Open-air [204] 146. Agricultural building Sensors, GUI, and control centre Prototype Greenhouse (soil-based) [205] 147. PDM Crops (plants)/ Trees Mobile application and computational unit Deployed Open-air [206] 148. Trees planted on orchard IoT sensors, network, and computational units Prototype Open-air [207] The analysis shows that most studies have focused on open-air farming systems. Only one study is found that has proposed DT for soil-based vertical farming system and one study that implemented DT for soilless farming system (aquaponics). This might be because the design and management of modern farming systems are challenging. Moreover, most DTs are in the research phase with no commercial deployment at the moment. The reported benefits of the DT applications in agriculture are cost reductions, catastrophe prevention, clearer decision making, and efficient management operations, which can be applied to several agricultural subfields like plant and animal breeding, aquaponics, vertical farming, cropping systems, and livestock farming. While DT technology has great potential, achieving the synchronization between the physical entity and its digital counterpart is challenging. The complexity of this process is further amplified in agricultural systems due to the idiosyncrasies of living physical twins. Hence, implementation of agricultural DT should start with micro-farms, which can then be gradually enhanced to an intelligent and autonomous version by incorporating more components. 4.11. Roadblocks in digitization of agriculture industry This section provides an answer to RQ3 by listing a series of interconnected roadblocks hampering a larger adoption of digital technologies in the agriculture sector. After analysing 148 articles, 21 roadblocks are identified which can be categorized at technical and socio-economic levels. 4.12. Technical roadblocks • Interoperability: data is considered a cornerstone for the success of smart systems. Agricultural data usually comes from multiple heterogeneous sources such as thousands of individual farmlands, animal factories, and enterprise applications. This data can have diverse formats, making data integration complex. Hence, data interoperability is essential to enhance the value of this massively dispersed data after systematic data collection, storage, processing, and knowledge mining [208]. Likewise, for establishing effective communication between heterogeneous devices, they need to be interconnected and interoperable. With cross-technology communication, interoperability of the system can be improved [209]. • Standardization: to fully exploit the digital technologies for smart farming applications, standardization of the devices is essential. Output differences can occur because of misinterpretation and alterations from time to time. With standardization, the interoperability issues of the devices, applications, and systems can also be resolved [25]. • Dataquality: to produce meaningful results, data quality is also crucial along with data security, storage, and openness. The lack of decentralized data management systems is another roadblock hindering the adoption of smart farming practices [9]. This issue decreases the willingness of multiple actors to share agriculture data. • Hardwareimplementation: the deployment of a smart agricultural setup in large-scale open fields is extremely challenging. This is because all the hardware consisting of IoT devices, wireless sensor networks, sensor nodes, machinery, and equipment directly exposed to harsh environmental conditions such as heavy rainfall, high/low-temperature levels, extreme humidity, strong wind speeds and many other possible dangers which can destroy electronic circuits or disrupt their normal functionality [210]. A possible solution is to build an adequate casing for all the costly devices that is robust and durable enough to endure real field conditions [211]. • Adequatepower sources: typically, the wireless devices deployed at farms consistently operate for a long time and have limited battery life. A suitable energy saving scheme is necessary because, in case of any failure, instant battery replacement is complicated, especially in open-air farms where devices are strategically placed with minimum access [210]. The possible solutions to optimize energy consumption are usage of low power sensors and, proper management of communication [24,212]. Wireless power transfer and self-supporting wireless system are other promising solutions to eliminate the need for battery replacement by recharging the batteries through electromagnetic waves. However, long-distance wireless charging is needed in most agricultural applications [9]. Ambient energy harvesting from rivers, fluid flow, movement of vehicles and, ground surface using sensor nodes offers another viable solution, but the converted electrical energy is limited at present – posing the need to improve power conversion efficiency [213]. • Reliability: The reliability of devices, as well as corresponding software applications, is crucial. This is because IoT devices need to gather and transfer the data based on which decisions are made using several software packages. Unreliable sensing, processing, and transmission can cause false monitoring data reports, long delays, and even data loss – eventually impacting the performance of agricultural system [25]. • Adaptability: agricultural environments are complex, dynamic, and rapidly changing. Hence, when designing a system, it is pertinent for the devices and applications to proactively adapt with the other entities under uncertain and dynamic factors - offering the needed performance [214]. • Robust wirelessarchitectures: wireless networks and communication technologies offer several benefits in terms of low cost, wide-area coverage, adequate networking flexibility, and high scalability. But dynamic agriculture environments such as temperature variations, living objects’ movements, and the presence of obstacles pose severe challenges to reliable wireless communication. For instance, fluctuations in the signal intensity occur due to the multipath propagation effects – causing unstable connectivity and inadequate data transmission [215]. These factors impact the performance of the agricultural system. Hence, there is a need for robust and fault-tolerant wireless architectures with appropriate location of sensor nodes, antenna height, network topology, and communication protocols that also require minimum maintenance [11]. • Interference: another challenge is wireless interference and degradation of the quality of service because of the dense deployment of IoT devices and wireless sensor networks. These issues can be mitigated with efficient channel scheduling between heterogeneous sensing devices, cognitive radio-assisted WSNs, and emerging networking primitives such as concurrent transmission [216]. Since agriculture devices are distributed at indoor greenhouses, outdoor farmlands, underground areas, or even water areas, cross-media communication between underground, underwater, and air is also required for the complete incorporation of smart technologies [217]. • Security and privacy: the distributed nature of smart agricultural systems brings potential vulnerabilities to cyber-attacks such as eavesdropping, data integrity, denial-of-service attacks, or other types of disruptions that may risk privacy, integrity, and availability of the system [218]. Cyber-security is a major challenge that needs to be addressed within the context of smart farming, with diverse privacy-preserving mechanisms and federated learning approaches [130]. • Compatibility: to achieve the standards of fragmentation and scalability, the models or software applications developed should be flexible and run on any machine installed in the agricultural system [13]. • Resource optimization: farmers require a resource optimization process to estimate the optimal number of IoT devices and gateways, cloud storage size, and amount of transmitted data to improve farm profitability. Since farms have different sizes and need distinct types of sensors to measure different variables, resource optimization is challenging [219]. Secondly, most of the farm management systems do not offer run-time customization in relation to the distinct requirements of farmers. Hence, complex mathematical models and algorithms are required to estimate adequate resource allocation [75]. • Scalability: the number of devices, machinery, and sensors installed at farms is increasing gradually due to advancements in technologies. To support these entities, gateways, network applications, and back-end databases should be reliable and scalable [220]. • Human-centereduserinterfaces: complex user interfaces of existing agricultural applications and devices are impeding smart farming practices. Most GUI is designed in a way that only experts can use to perform agricultural tasks. Improving the user interface by making it human-centered with multimodal feedback will allow a larger group of people to use it to perform different agricultural operations [96]. 4.13. Socio-economic roadblocks • Gap between farmers and researchers: the participation of farmers is a key factor toward the success of the digitization of the agricultural industry. Farmers face a lot of problems during the agri-food production process, which smart technologies could fix, but agricultural experts are not usually aware of these issues [16]. Moreover, to devise an adequate smart solution, first, it is important to fully understand the nature of problems. Hence, it is essential to bridge the gap between farmers, agricultural professionals, and AI researchers. • Costs associated with smart systems: the costs associated with the adoption of smart technologies and systems are the major deterrent in the digitization of the agricultural sector. These costs usually involve deployment, operating, and maintenance costs. The deployment costs of smart systems are usually very high as they involve; i) hardware installation such as autonomous robots and drones, WSNs, gateways, and base station infrastructure, etc., to perform certain farm operations, and ii) hiring the skilled labour [221]. Likewise, to facilitate data processing, management of IoT devices and equipment, and knowledge exchange, subscription of centralized networks and software packages is required, which ultimately increases the operating costs [222]. Though sometimes service providers offer free subscription packages with restricted features, the amount of storage capacity is limited. To ensure the adequate operations of the smart system, occasional maintenance is required, which then also adds up to total costs. Other types of costs associated with smart systems deployment could be environmental, ethical, and social costs. To overcome cost related roadblocks, initiatives focusing on cooperative farming are needed that provide; i) support services for better handling of costs and needed investments, and ii) hardware solutions to transform conventional equipment into smart farm-ready machinery to reduce high initial costs [222]. • Digital division: another factor that is slowing the digitization of the agricultural sector is the lack of knowledge of digital technologies and their applications. The majority of farmers have no idea about the significance of digital technologies, how to implement and use them, and which technology is suitable for their farm and meets their requirements [14]. Hence, it is essential to educate farmers about modern farming technologies and systems. Moreover, different strategies are needed to build tools using natural language that farmers with low education levels can easily understand [223]. • Return on investment: in agriculture, the profit margin is very important like other sectors. When it comes to the implementation of advanced technologies, farmers have concerns related to the time to recover the investment and to the difficulties in evaluating the advantages [12]. • Trust building: unlike in other disciplines, building trust regarding the effectiveness of smart technologies in agriculture is difficult because many decisions affect systems that involve living and non-living entities, and consequences can be hard to reverse [16]. Additionally, insufficient proof of the impact of digital tools on-farm productivity further intensifies the current challenges. • Laws and regulations: different regions and countries have different legal frameworks which impact the implementation of digital technologies in the agriculture sector, particularly in monitoring and agri-food supply [70]. Likewise, regulations related to resource allocation (spectrum for wireless devices), data privacy, and security also vary from one country to another [70]. • Connectivity infrastructure: most less-developed countries usually have insufficient connectivity infrastructure that limits access to advanced digital tools that would help to turn data from heterogenous sources into valuable and actionable insights [10]. 4.14. Discussion This section discusses the main conclusions of RQ1, RQ2, and RQ3. In addition, added value, considerations, and future directions are also presented to ensure higher accuracy and great advancements in agricultural industry. 4.15. RQ1, RQ2 and RQ3 The present study tried to articulate the emerging digital technologies being implemented in agricultural industry to anticipate the future trajectories of agriculture 4.0. By looking at Table 2, Table 3, Table 4, Table 5, Table 6, Table 7, Table 8, Table 9, Table 10, Table 11, Table 12, Table 13 in section 4, it can be seen some technologies such as big data and analytics, wireless sensor networks, cyber-physical systems, and digital twins are not significantly explored in agriculture. A reason for this gap could be that implementing advanced technologies with more complex operations can be expensive, at least in the early experimental phase of their adoption. Hence, the development of these technologies in agricultural industry should increase in the coming years. The results of SLR also show that IoT is significantly implemented in farms. This is due to the broad functionality of IoT such as in the monitoring, tracking and tracing, agriculture machinery, and precision agriculture [21]. It can be said that IoT is one of the main research objectives within the agriculture 4.0 approaches. Nevertheless, only few studies have considered data security and reliability, scalability, and interoperability while developing an intelligent agricultural system. The research findings also demonstrated that most use cases are still in the prototype phase. The possible reason could be because most agricultural operations have to do with living subjects, like animals and plants or perishable products, and developing systems is harder than non-living human-made systems. Another reason might be that agriculture is a slow adopter of technology because of transdisciplinary nature of this field, and hence to develop intelligent systems, the agricultural community must become familiar will all the digital technologies. Lastly, variations in plant/crops’ species, and growth conditions also make digitization of agricultural systems complex [188]. The SLR findings also show that most of the systems are developed for open-air soil-based farms contrary to indoor farms (soilless and soil-based). This is due to complex design and management of indoor farms particularly soilless farms where parameters and factors (pH, air temperature, humidity, etc.) to be controlled are diverse [5]. But with introduction of digital technologies and data-driven computer applications in indoor farms, a more robust control of the process can be achieved. Furthermore, it is also revealed from SLR that limited research is conducted in three (soil management, fruit detection and counting and crop quality management) out of nine different service categories mentioned in section 3. This corroborates that substantial research and development is needed in some areas to ensure successful digitization of agriculture industry in developed countries as well as in developing countries. The complexity of agriculture ecosystem presents a series of interconnected roadblocks that hinder the full integration of digital technologies for agriculture 4.0 realization. Hence, it is essential to identify potential roadblocks in order to come up with strategic solutions to overcome them. This study is an attempt to explore what these roadblocks are. Based on analysis, 21 roadblocks were identified and classified at technical and socio-economic levels. These roadblocks are listed in section 5, which suggests what needs to be done for digitization of agricultural industry on larger scale. But it is still not known, to what extent elimination or mitigation of these roadblocks assist in successful integration of digital technologies. 4.16. Added value of agricultural digitization Based on analysis, several benefits that can motivate framers and other actors to support digitization of agricultural industry are identified and summarised below. The presented benefits have potential to maximise the farm's productivity and enhance product quality, but they should not be considered a panacea for challenges associated with smart agriculture [222]. • Improved agility: digital technologies improve the agility of farm operations. Through real-time surveillance and forecast systems, farmers or agricultural experts can rapidly react to any potential fluctuations in environmental and water conditions to save crops [221]. • Green process: digital technologies make the farming process more environmentally friendly and climate-resilient by significantly reducing the usage of in-field fuel, nitrogen fertilizers, pesticides, and herbicides [224]. • Resource use efficiency: digital platforms can improve resource use efficiency by enhancing the quantity and quality of agricultural output and limiting the usage of water, energy, fertilizers, and pesticides [3]. • Time and cost savings: digital technologies enable significant time and cost savings by automating different operations, such as harvesting, sowing, or irrigation, controlling the application of fertilizers or pesticides, and scheduling the irrigation [225]. • Asset management: digital technologies allow real-time surveillance of farm properties and equipment to prevent theft, expedite component replacement and perform routine maintenance [10]. • Product safety: digital technologies ensure adequate farm productivity and guarantee a safe and nutritious supply of agri-food products by preventing fraud related to adulteration, counterfeit, and artificial enhancement [218]. 4.17. Considerations and future prospects The upcoming initiatives would result in significant improvements in the agricultural sector. But in order to make things sustainable for small and medium-scale growers, roadblocks mentioned in section 5 need to be addressed first. Awareness campaigns highlighting the significance of smart agriculture at every level of the agricultural value chain and promoting innovative ways (such as gamification) to encourage stakeholders to take on an active role in the digital revolution can mitigate some of the mentioned roadblocks [9]. Government level initiatives, grants and endowments, public-private partnerships, the openness of data, and regional basis research work can also assist in coping with potential roadblocks. Lastly, a roadmap can be adopted while developing a smart agriculture system, starting from basic architecture with few components and simpler functionality, gradually adding components and functionality to develop a complex system with the full potential of digitization [21]. These considerations can pave the way for successful implementation of agriculture 4.0. The future prospects of digital technologies in smart agriculture involve using explainable artificial intelligence to monitor crop growth, estimate crop biomass, evaluate crop health, and control pests and diseases. Explainable AI fades away the traditional black-box concept of machine learning and enables understanding the reasons behind any specific decision [15]. Description of big data through common semantics and ontologies and the adoption of open standards have great potential to boost research and development towards smart farming . Similarly, to ensure enhanced connectivity and live streaming of crop data, 5G technology need to be extensively explored [6]. 5G technology will minimize internet costs and augment the overall user experience of farm management and food safety by performing accurate crop inspections remotely [226]. Furthermore, it will significantly bridge the gap between stakeholders by keeping them well informed on produce availability. Lastly, blockchain in combination with IoT and other technologies can be implemented to address the challenges related to data privacy and security [227]. 4.18. Transition to Agriculture 5.0 The industrial revolutions have always brought a breakthrough in the agricultural sector. As formally discussed in previous sections, agriculture 4.0 has great potential to counterbalance the growing food demands and prepare for future by reinforcing agricultural systems with WSN, IoT, AI, etc. While the realization of agriculture 4.0 is still underway, there is already a talk about agriculture 5.0. Agriculture 5.0 extends agriculture 4.0 with inclusion of industry 5.0 principles to produce healthy and affordable food while ensuring to prevent degradation of the ecosystems on which life depends [228]. The European Commission formally called for the Fifth Industrial Revolution (industry 5.0) in 2021 after observing that industry 4.0 focuses less on the original principles of social fairness and sustainability but more on digitalization and AI-driven technologies for increasing the efficiency and flexibility [229]. Industry 5.0 complements and extends industry 4.0 concept to recognize the human-centricity, sustainability, and resilience [230]. It involves refining the collaborative interactions between humans and machines, reducing environmental impact through circular economy, and developing high degree of robustness in systems to achieve optimal balance between efficiency and productivity. The enabling technologies of industry 5.0 are Cobots (collaborative robots), smart materials with embedded bio-inspired sensors, digital twins, AI, energy efficient and secure data management, renewable energy sources, etc [229].. In agriculture 5.0 settings, farm's production efficiency and crop quality can be enhanced by assigning repetitive and monotonous tasks to the machines and the tasks which need critical thinking to the humans. For this purpose, similar to manufacturing sector cyber physical cognitive systems (CPCS) that observe/study the environment and take actions accordingly should be developed for agricultural sector. This may include collaborative farm robots which will work in the fields and assist crop producers in tedious tasks such as seed sowing and harvesting etc. Likewise, digital twins in agriculture 5.0 can also offer significant value by identifying technical issues in agricultural systems and overcoming them at a faster speed, detecting crop diseases, and making crop yield predictions at a higher accuracy rate. This shows that agriculture 5.0 has potential to pave a way for climate smart, sustainable and resilient agriculture but as of now, it is in the developing phase. 5. Conclusions Increased concerns about global food security have accelerated the need for next-generation industrial farms and intensive production methods in agriculture. At the forefront of this modern agricultural era, digital technologies offered by Industry 4.0 initiative are suggesting a myriad of creative solutions. The scientific community and researchers integrate disruptive technologies in conventional agriculture systems to increase crop yields, minimize costs, reduce wastes, and maintain process inputs. An SLR discussing the prevailing state of these technologies in the agriculture sector is presented in this study. After applying SLR protocol, 148 articles were considered from the time frame of the year 2011 to 2021. Various research questions pertaining to i) current and continuing research trends, ii) functionality, maturity level, farm type and tools and techniques used, iii) primary roadblocks, and iv) added value of digital technologies; were put forward and answered. Several conclusions are drawn such as integration of big data and analytics, wireless sensor networks, cyber-physical systems, and digital twins in agriculture is only in its infancy, and most use cases are in the prototype phase. Likewise, 21 roadblocks are identified and classified at technical and socioeconomic levels. To ensure the digitization of agricultural industry, these roadblocks must be analyzed and overcome. The added value of digital technologies in agriculture industry are also identified and presented in the study. Overall, this study contributes to the research being carried around agriculture 4.0. The primary limitation of this review is twofold: firstly, only three online repositories are considered for literature search (Scopus, IEEE and Science Direct), and secondly additional keywords and synonyms might return more studies. In both scenarios, it is highly unlikely that the overall findings would change. For the future work, additional research databases and aspects can be considered to provide holistic overview of agricultural industry in terms of digitization. Moreover, studies targeting agriculture 5.0 in general will also be included. Declaration of Competing Interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgements The authors acknowledge the financial support of this work by the Natural Sciences and Engineering Research Council of Canada (NSERC) (Grant File No. ALLRP 545537-19 and RGPIN-2017-04516). References [1] F Schierhorn, M. Elferink Global Demand for Food Is Rising. Can We Meet It? Harv Bus Rev, 7 (2017), p. 2016 Google Scholar [2] TY Kyaw, AK. Ng Smart Aquaponics System for Urban Farming Energy Procedia, 143 (2017), pp. 342-347, 10.1016/j.egypro.2017.12.694 View PDFView articleView in ScopusGoogle Scholar [3] WK Mok, YX Tan, WN. Chen Technology innovations for food security in Singapore: A case study of future food systems for an increasingly natural resource-scarce world Trends Food Sci Technol, 102 (2020), pp. 155-168, 10.1016/j.tifs.2020.06.013 View PDFView articleView in ScopusGoogle Scholar [4] H Valin, RD Sands, D van der Mensbrugghe, GC Nelson, H Ahammad, E Blanc, et al. The future of food demand: Understanding differences in global economic models Agric Econ (United Kingdom), 45 (2014), pp. 51-67, 10.1111/agec.12089 View in ScopusGoogle Scholar [5] R Abbasi, P Martinez, R. Ahmad An ontology model to represent aquaponics 4.0 system's knowledge Inf Process Agric (2021), 10.1016/J.INPA.2021.12.001 Google Scholar [6] R Abbasi, P Martinez, R. Ahmad An ontology model to support the automated design of aquaponic grow beds Procedia CIRP, 100 (2021), pp. 55-60, 10.1016/j.procir.2021.05.009 View PDFView articleView in ScopusGoogle Scholar [7] G Aceto, V Persico, A. Pescapé A Survey on Information and Communication Technologies for Industry 4.0: State-of-the-Art, Taxonomies, Perspectives, and Challenges IEEE Commun Surv Tutorials (2019), 10.1109/COMST.2019.2938259 Google Scholar [8] A Gacar, H Aktas, B. Ozdogan Digital agriculture practices in the context of agriculture 4.0. Pressacademia, 4 (2017), pp. 184-191, 10.17261/pressacademia.2017.448 Google Scholar [9] Y Liu, X Ma, L Shu, GP Hancke, AM. Abu-Mahfouz 0: Current Status, Enabling Technologies, and Research Challenges IEEE Trans Ind Informatics, 17 (2021), pp. 4322-4334, 10.1109/TII.2020.3003910 View in ScopusGoogle Scholar [10] F da Silveira, FH Lermen, FG. Amaral An overview of agriculture 4.0 development: Systematic review of descriptions, technologies, barriers, advantages, and disadvantages Comput Electron Agric, 189 (2021), Article 106405, 10.1016/J.COMPAG.2021.106405 View PDFView articleView in ScopusGoogle Scholar [11] G Idoje, T Dagiuklas, M. Iqbal Survey for smart farming technologies: Challenges and issues Comput Electr Eng, 92 (2021), Article 107104, 10.1016/J.COMPELECENG.2021.107104 View PDFView articleView in ScopusGoogle Scholar [12] J Miranda, P Ponce, A Molina, P. Wright Sensing, smart and sustainable technologies for Agri-Food 4.0 Comput Ind, 108 (2019), pp. 21-36, 10.1016/J.COMPIND.2019.02.002 View PDFView articleView in ScopusGoogle Scholar [13] M Lezoche, H Panetto, J Kacprzyk, JE Hernandez Alemany Díaz MME. Agri-food 4.0: A survey of the supply chains and technologies for the future agriculture Comput Ind, 117 (2020), Article 103187, 10.1016/J.COMPIND.2020.103187 View PDFView articleView in ScopusGoogle Scholar [14] Bhakta I, Phadikar S, Majumder K. State-of-the-art technologies in precision agriculture: a systematic review 2019. https://doi.org/10.1002/jsfa.9693. Google Scholar [15] SO Araújo, RS Peres, J Barata, F Lidon, JC. Ramalho Characterising the Agriculture 4.0 Landscape—Emerging Trends, Challenges and Opportunities Agron, 11 (2021), p. 667, 10.3390/AGRONOMY11040667 Page2021;11:667 View in ScopusGoogle Scholar [16] M Bacco, P Barsocchi, E Ferro, A Gotta, M. Ruggeri The Digitisation of Agriculture: a Survey of Research Activities on Smart Farming Array, 3–4 (2019), Article 100009, 10.1016/j.array.2019.100009 View PDFView articleView in ScopusGoogle Scholar [17] X Huang, C Zanni-Merk, B. Crémilleux Enhancing deep learning with semantics: An application to manufacturing time series analysis Procedia Comput Sci, 159 (2019), pp. 437-446, 10.1016/j.procs.2019.09.198 View PDFView articleView in ScopusGoogle Scholar [18] L Jiyu, Y Lan, W Jianwei, C Shengde, H Cong, L Qi, et al. Distribution law of rice pollen in the wind field of small UAV Int J Agric Biol Eng, 10 (2017), pp. 32-40, 10.25165/IJABE.V10I4.3103 Google Scholar [19] MJ Page, JE McKenzie, PM Bossuyt, I Boutron, TC Hoffmann, CD Mulrow, et al. The PRISMA 2020 statement: An updated guideline for reporting systematic reviews BMJ, 372 (2021), 10.1136/BMJ.N71 Google Scholar [20] Ahmed MA, Ahsan I, Abbas M. Systematic Literature Review 2016:165–8. https://doi.org/10.1145/2987386.2987422. Google Scholar [21] C Pylianidis, S Osinga, IN. Athanasiadis Introducing digital twins to agriculture Comput Electron Agric, 184 (2021), Article 105942, 10.1016/J.COMPAG.2020.105942 View PDFView articleView in ScopusGoogle Scholar [22] Shaikh ZA Aqeel-ur-Rehman, NA Shaikh, N Islam An integrated framework to develop context aware sensor grid for agriculture Aust J Basic Appl Sci (2010) Google Scholar [23] W Shi, J Cao, Q Zhang, Y Li, L. Xu Edge Computing: Vision and Challenges IEEE Internet Things J, 3 (2016), pp. 637-646, 10.1109/JIOT.2016.2579198 View in ScopusGoogle Scholar [24] A Tzounis, N Katsoulas, T Bartzanas, C. Kittas Internet of Things in agriculture, recent advances and future challenges Biosyst Eng, 164 (2017), pp. 31-48, 10.1016/J.BIOSYSTEMSENG.2017.09.007 View PDFView articleView in ScopusGoogle Scholar [25] VP Kour, S. Arora Recent Developments of the Internet of Things in Agriculture: A Survey IEEE Access, 8 (2020), pp. 129924-129957, 10.1109/ACCESS.2020.3009298 View in ScopusGoogle Scholar [26] R Saemaldahr, B Thapa, K Maikoo, EB. Fernandez Reference Architectures for the IoT: A Survey Lect Notes Data Eng Commun Technol, 72 (2020), pp. 635-646, 10.1007/978-3-030-70713-2_58 Google Scholar [27] A Somov, D Shadrin, I Fastovets, A Nikitin, S Matveev, I Seledets, et al. Pervasive Agriculture: IoT-Enabled Greenhouse for Plant Growth Control IEEE Pervasive Comput, 17 (2018), pp. 65-75, 10.1109/MPRV.2018.2873849 View in ScopusGoogle Scholar [28] B Yimwadsana, P Chanthapeth, C Lertthanyaphan, A. Pornvechamnuay An IoT controlled system for plant growth Proceeding 2018 7th ICT Int Student Proj Conf ICT-ISPC 2018 (2018), 10.1109/ICT-ISPC.2018.8523886 Google Scholar [29] SN Nnadi, FE. Idachaba Design and Implementation of a Sustainable IOT Enabled Greenhouse Prototype IEEE 5G World Forum, 5GWF 2018 - Conf Proc (2018), pp. 457-461, 10.1109/5GWF.2018.8517006 View in ScopusGoogle Scholar [30] J Yang, M Liu, J Lu, Y Miao, MA Hossain, MF. Alhamid Botanical Internet of Things: Toward Smart Indoor Farming by Connecting People, Plant, Data and Clouds Mob Networks Appl, 23 (2018), pp. 188-202, 10.1007/S11036-017-0930-X View in ScopusGoogle Scholar [31] F Francis, PL Vishnu, M Jha, B. Rajaram IOT-Based Automated Aeroponics System Lect Notes Electr Eng Intell Embed Syst, 492 (2017), pp. 337-345, 10.1007/978-981-10-8575-8_32 Google Scholar [32] CA Jamhari, WK Wibowo, AR Annisa, TM. Roffi Design and Implementation of IoT System for Aeroponic Chamber Temperature Monitoring Proceeding - 2020 3rd Int Conf Vocat Educ Electr Eng Strength Framew Soc 50 through Innov Educ Electr Eng Informatics Eng ICVEE 2020 (2020), 10.1109/ICVEE50212.2020.9243213 Google Scholar [33] KC Chang, PK Liu, ZW Kuo, SH. Liao Design of persimmon growing stage monitoring system using image recognition technique 2016 IEEE Int Conf Consum Electron ICCE-TW (2016 2016), 10.1109/ICCE-TW.2016.7520978 Google Scholar [34] Namgyel T, Siyang S, Khunarak C, Pobkrut T, Norbu J, Chaiyasit T, et al. IoT based hydroponic system with supplementary LED light for smart home farming of lettuce 2019:221–4. https://doi.org/10.1109/ECTICON.2018.8619983. Google Scholar [35] M Manju, V Karthik, S Hariharan, B. Sreekar Real time monitoring of the environmental parameters of an aquaponic system based on internet of things ICONSTEM 2017 - Proc 3rd IEEE Int Conf Sci Technol Eng Manag 2017 (2018), pp. 943-948, 10.1109/ICONSTEM.2017.8261342 -January Google Scholar [36] MS Mekala, P. Viswanathan CLAY-MIST: IoT-cloud enabled CMM index for smart agriculture monitoring system Measurement, 134 (2019), pp. 236-244, 10.1016/J.MEASUREMENT.2018.10.072 View PDFView articleView in ScopusGoogle Scholar [37] T Wiangtong, P. Sirisuk IoT-based Versatile Platform for Precision Farming Isc 2018 - 18th Int Symp Commun Inf Technol (2018), pp. 438-441, 10.1109/ISCIT.2018.8587989 View in ScopusGoogle Scholar [38] MA Zamora-Izquierdo, J Santa, JA Martínez, V Martínez, AF Skarmeta Smart farming IoT platform based on edge and cloud computing Biosyst Eng, 177 (2019), pp. 4-17, 10.1016/J.BIOSYSTEMSENG.2018.10.014 View PDFView articleView in ScopusGoogle Scholar [39] NK. Jacob IoT powered portable aquaponics system ACM Int Conf Proceeding Ser (2017), 10.1145/3018896.3018965 Google Scholar [40] M Mehra, S Saxena, S Sankaranarayanan, RJ Tom, M. Veeramanikandan IoT based hydroponics system using Deep Neural Networks Comput Electron Agric, 155 (2018), pp. 473-486, 10.1016/J.COMPAG.2018.10.015 View PDFView articleView in ScopusGoogle Scholar [41] Naser BAA-Z, Saleem AL, Ali A, Alabassi S, Al-Baghdadi M. Design and construction of smart IoT-based aquaponics powered by PV cells 2019. Google Scholar [42] M Odema, I Adly, A Wahba, H. Ragai Smart Aquaponics System for Industrial Internet of Things (IIoT) Adv Intell Syst Comput, 639 (2017), pp. 844-854, 10.1007/978-3-319-64861-3_79 Google Scholar [43] W Vernandhes, NS Salahuddin, A Kowanda, SP. Sari Smart aquaponic with monitoring and control system based on IoT Proc 2nd Int Conf Informatics Comput ICIC 2017 2018 (2018), 10.1109/IAC.2017.8280590 Google Scholar [44] B Keswani, AG Mohapatra, A Mohanty, A Khanna, JJPC Rodrigues, D Gupta, et al. Adapting weather conditions based IoT enabled smart irrigation technique in precision agriculture mechanisms Neural Comput Appl, 31 (2018), pp. 277-292, 10.1007/S00521-018-3737-1 2018 311 Google Scholar [45] NK Nawandar, VR. Satpute IoT based low cost and intelligent module for smart irrigation system Comput Electron Agric, 162 (2019), pp. 979-990, 10.1016/J.COMPAG.2019.05.027 View PDFView articleView in ScopusGoogle Scholar [46] PM Gupta, M Salpekar, PK. Tejan Agricultural practices Improvement Using IoT Enabled SMART Sensors 2018 Int Conf Smart City Emerg Technol ICSCET, 2018 (2018), 10.1109/ICSCET.2018.8537291 Google Scholar [47] M Dholu, KA. Ghodinde Internet of Things (IoT) for Precision Agriculture Application Proc 2nd Int Conf Trends Electron Informatics, ICOEI 2018 (2018), pp. 339-342, 10.1109/ICOEI.2018.8553720 View in ScopusGoogle Scholar [48] TAA Ali, V Choksi, MB. Potdar Precision Agriculture Monitoring System Using Green Internet of Things (G-IoT) Proc 2nd Int Conf Trends Electron Informatics, ICOEI 2018 (2018), pp. 481-487, 10.1109/ICOEI.2018.8553866 View in ScopusGoogle Scholar [49] AJ Rau, J Sankar, AR Mohan, D Das Krishna, J Mathew IoT based smart irrigation system and nutrient detection with disease analysis TENSYMP 2017 - IEEE Int Symp Technol Smart Cities (2017), 10.1109/TENCONSPRING.2017.8070100 Google Scholar [50] Thorat A, Kumari S, Valakunde ND. An IoT based smart solution for leaf disease detection. 2017 Int Conf Big Data, IoT Data Sci BID 2017 2018;2018-January:193–8. https://doi.org/10.1109/BID.2017.8336597. Google Scholar [51] K Foughali, K Fathallah, A. Frihida Using Cloud IOT for disease prevention in precision agriculture Procedia Comput Sci, 130 (2018), pp. 575-582, 10.1016/J.PROCS.2018.04.106 View PDFView articleView in ScopusGoogle Scholar [52] SS Koshy, VS Sunnam, P Rajgarhia, K Chinnusamy, DP Ravulapalli, S. Chunduri Application of the internet of things (IoT) for smart farming: a case study on groundnut and castor pest and disease forewarning CSI Trans ICT 2018 63, 6 (2018), pp. 311-318, 10.1007/S40012-018-0213-0 Google Scholar [53] SS Patil, SA. Thorat Early detection of grapes diseases using machine learning and IoT Proc - 2016 2nd Int Conf Cogn Comput Inf Process CCIP 2016 (2016), 10.1109/CCIP.2016.7802887 Google Scholar [54] MI Pavel, SM Kamruzzaman, SS Hasan, SR. Sabuj An IoT based plant health monitoring system implementing image processing 2019 IEEE 4th Int Conf Comput Commun Syst ICCCS 2019 (2019), pp. 299-303, 10.1109/CCOMS.2019.8821783 View in ScopusGoogle Scholar [55] MU Aftab, O Ashraf, M Irfan, M Majid, A Nisar, MA. Habib A Review Study of Wireless Sensor Networks and Its Security Commun Netw, 7 (2015), pp. 172-179, 10.4236/cn.2015.74016 Google Scholar [56] X Yu, P Wu, W Han, Z. Zhang A survey on wireless sensor network infrastructure for agriculture Comput Stand Interfaces, 1 (2013), pp. 59-64, 10.1016/J.CSI.2012.05.001 View PDFView articleView in ScopusGoogle Scholar [57] J Gutierrez, JF Villa-Medina, A Nieto-Garibay, MA. Porta-Gandara Automated irrigation system using a wireless sensor network and GPRS module IEEE Trans Instrum Meas, 63 (2014), pp. 166-176, 10.1109/TIM.2013.2276487 View in ScopusGoogle Scholar [58] H Navarro-Hellín, R Torres-Sánchez, F Soto-Valles, C Albaladejo-Pérez, JA López-Riquelme, R Domingo-Miguel A wireless sensors architecture for efficient irrigation water management Agric Water Manag, 151 (2015), pp. 64-74, 10.1016/J.AGWAT.2014.10.022 View PDFView articleView in ScopusGoogle Scholar [59] SA Nikolidakis, D Kandris, DD Vergados, C. Douligeris Energy efficient automated control of irrigation in agriculture by using wireless sensor networks Comput Electron Agric, 113 (2015), pp. 154-163, 10.1016/J.COMPAG.2015.02.004 View PDFView articleView in ScopusGoogle Scholar [60] I Mat, MR Mohd Kassim, AN Harun Mat Yusoff I. IoT in Precision Agriculture applications using Wireless Moisture Sensor Network ICOS 2016 - 2016 IEEE Conf Open Syst (2017), pp. 24-29, 10.1109/ICOS.2016.7881983 Google Scholar [61] KP Ferentinos, N Katsoulas, A Tzounis, T Bartzanas, C. Kittas Wireless sensor networks for greenhouse climate and plant condition assessment Biosyst Eng, 153 (2017), pp. 70-81, 10.1016/J.BIOSYSTEMSENG.2016.11.005 View PDFView articleView in ScopusGoogle Scholar [62] JA Jiang, MS Liao, TS Lin, CK Huang, CY Chou, SH Yeh, et al. Toward a higher yield: a wireless sensor network-based temperature monitoring and fan-circulating system for precision cultivation in plant factories Precis Agric, 19 (2018), pp. 929-956, 10.1007/S11119-018-9565-6 View in ScopusGoogle Scholar [63] M Srbinovska, C Gavrovski, V Dimcev, A Krkoleva, V. Borozan Environmental parameters monitoring in precision agriculture using wireless sensor networks J Clean Prod, 88 (2015), pp. 297-307, 10.1016/J.JCLEPRO.2014.04.036 View PDFView articleView in ScopusGoogle Scholar [64] PC. Menon IoT enabled Aquaponics with wireless sensor smart monitoring Proc 4th Int Conf IoT Soc Mobile, Anal Cloud, ISMAC 2020 (2020), pp. 171-176, 10.1109/I-SMAC49090.2020.9243368 View in ScopusGoogle Scholar [65] T Cao-Hoang, CN. Duy Environment monitoring system for agricultural application based on wireless sensor network 7th Int Conf Inf Sci Technol ICIST 2017 - Proc (2017), pp. 99-102, 10.1109/ICIST.2017.7926499 View in ScopusGoogle Scholar [66] Samijayani ON, Darwis R, Rahmatia S, Mujadin A, Astharini D. Hybrid zigbee and wifi wireless sensor networks for hydroponic monitoring 2020. Google Scholar [67] Mell PM, Grance T. The NIST definition of cloud computing 2011. https://doi.org/10.6028/NIST.SP.800-145. Google Scholar [68] Alwada'n T. CLOUD COMPUTING AND MULTI-AGENT SYSTEM : MONITORING AND SERVICES 2018. Google Scholar [69] X Shi, X An, Q Zhao, H Liu, L Xia, X Sun, et al. State-of-the-art internet of things in protected agriculture Sensors (Switzerland), 19 (2019), p. 1833, 10.3390/s19081833 View in ScopusGoogle Scholar [70] J Wang, H Yue, Z. Zhou An improved traceability system for food quality assurance and evaluation based on fuzzy classification and neural network Food Control, 79 (2017), pp. 363-370, 10.1016/J.FOODCONT.2017.04.013 View PDFView articleView in ScopusGoogle Scholar [71] A Kaloxylos, A Groumas, V Sarris, L Katsikas, P Magdalinos, E Antoniou, et al. A cloud-based farm management system: Architecture and implementation Comput Electron Agric, 100 (2014), pp. 168-179, 10.1016/J.COMPAG.2013.11.014 View PDFView articleView in ScopusGoogle Scholar [72] F Yang, K Wang, Y Han, Z. Qiao A Cloud-Based Digital Farm Management System for Vegetable Production Process Management and Quality Traceability Sustain, 10 (2018), p. 4007, 10.3390/SU10114007 Page2018;10:4007 View in ScopusGoogle Scholar [73] DS Paraforos, V Vassiliadis, D Kortenbruck, K Stamkopoulos, V Ziogas, AA Sapounas, et al. A Farm Management Information System Using Future Internet Technologies IFAC-PapersOnLine, 49 (2016), pp. 324-329, 10.1016/J.IFACOL.2016.10.060 View PDFView articleView in ScopusGoogle Scholar [74] Y Ampatzidis, L Tan, R Haley, MD. Whiting Cloud-based harvest management information system for hand-harvested specialty crops Comput Electron Agric, 122 (2016), pp. 161-167, 10.1016/J.COMPAG.2016.01.032 View PDFView articleView in ScopusGoogle Scholar [75] S Fountas, G Carli, CG Sørensen, Z Tsiropoulos, C Cavalaris, A Vatsanidou, et al. Farm management information systems: Current situation and future perspectives Comput Electron Agric, 115 (2015), pp. 40-50, 10.1016/J.COMPAG.2015.05.011 View PDFView articleView in ScopusGoogle Scholar [76] HY Chang, JJ Wang, CY Lin, CH. Chen An agricultural data gathering platform based on internet of things and big data Proc - 2018 Int Symp Comput Consum Control IS3C 2018 (2019), pp. 302-305 https://doi.org/10.1109/IS3C.2018.00083 CrossRefGoogle Scholar [77] FJ Ferrández-Pastor, JM García-Chamizo, M Nieto-Hidalgo, J Mora-Pascual, J. Mora-Martínez Developing Ubiquitous Sensor Network Platform Using Internet of Things: Application in Precision Agriculture Sensors (Basel), 16 (2016), 10.3390/S16071141 Google Scholar [78] R M, T A, JA L-R, J M, L P, N P-P, et al. mySense: A comprehensive data management environment to improve precision agriculture practices Comput Electron Agric, 162 (2019), pp. 882-894, 10.1016/J.COMPAG.2019.05.028 Google Scholar [79] ST Oliver, A González-Pérez, JH. Guijarro An IoT proposal for monitoring vineyards called senviro for agriculture ACM Int Conf Proceeding Ser (2018), 10.1145/3277593.3277625 Google Scholar [80] Fan DH, Gao S. IOP Conference Series: Earth and Environmental Science The application of mobile edge computing in agricultural water monitoring system The application of mobile edge computing in agricultural water monitoring system 2018;191:12015. https://doi.org/10.1088/1755-1315/191/1/012015. Google Scholar [81] M Asmi Romli, S Daud, RA Aliana Raof, Z Awang Ahmad, N Mahrom Aquaponic Growbed Water Level Control Using Fog Architecture Related content Aquaponic Growbed Water Level Control Using Fog Architecture J Phys (2018), p. 12014, 10.1088/1742-6596/1018/1/012014 Google Scholar [82] G L, C R, P G An automated low cost IoT based Fertilizer Intimation System for smart agriculture Sustain Comput Informatics Syst, 28 (2020), Article 100300, 10.1016/J.SUSCOM.2019.01.002 Google Scholar [83] R Rahmadian, M. Widyartono Autonomous Robotic in Agriculture: A Review Proceeding - 2020 3rd Int Conf Vocat Educ Electr Eng Strength Framew Soc 50 through Innov Educ Electr Eng Informatics Eng ICVEE 2020 (2020), 10.1109/ICVEE50212.2020.9243253 Google Scholar [84] A Bechar, C. Vigneault Agricultural robots for field operations: Concepts and components Biosyst Eng, 149 (2016), pp. 94-111, 10.1016/J.BIOSYSTEMSENG.2016.06.014 View PDFView articleView in ScopusGoogle Scholar [85] Gonzalez-De-Santos P, Fernández R, Sepúlveda D, Navas E, Armada M. Unmanned Ground Vehicles for Smart Farms. Agron - Clim Chang Food Secur 2020. https://doi.org/10.5772/INTECHOPEN.90683. Google Scholar [86] O Bawden, J Kulk, R Russell, C McCool, A English, F Dayoub, et al. Robot for weed species plant-specific management J F Robot, 34 (2017), pp. 1179-1199, 10.1002/ROB.21727 View in ScopusGoogle Scholar [87] J Gai, L Tang, BL. Steward Automated crop plant detection based on the fusion of color and depth images for robotic weed control J F Robot, 37 (2020), pp. 35-52, 10.1002/ROB.21897 View in ScopusGoogle Scholar [88] G Adamides, C Katsanos, I Constantinou, G Christou, M Xenos, T Hadzilacos, et al. Design and development of a semi-autonomous agricultural vineyard sprayer: Human–robot interaction aspects J F Robot, 34 (2017), pp. 1407-1426, 10.1002/ROB.21721 View in ScopusGoogle Scholar [89] R Berenstein, Y. Edan Automatic Adjustable Spraying Device for Site-Specific Agricultural Application IEEE Trans Autom Sci Eng, 15 (2018), pp. 641-650, 10.1109/TASE.2017.2656143 View in ScopusGoogle Scholar [90] Underwood J, Calleija M, Taylor Z, Hung C, Nieto J, Fitch R, et al. Real-time target detection and steerable spray for vegetable crops 2015. Google Scholar [91] N Srinivasan, P Prabhu, SS Smruthi, NV Sivaraman, SJ Gladwin, R Rajavel, et al. Design of an autonomous seed planting robot IEEE Reg 10 Humanit Technol Conf 2016, R10-HTC 2016 - Proc (2017), 10.1109/R10-HTC.2016.7906789 Google Scholar [92] MU Hassan, M Ullah, J. Iqbal Towards autonomy in agriculture: Design and prototyping of a robotic vehicle with seed selector 2016 2nd Int Conf Robot Artif Intell ICRAI 2016 (2016), pp. 37-44, 10.1109/ICRAI.2016.7791225 View in ScopusGoogle Scholar [93] M Nejati, HS Ahn, B. MacDonald Design of a sensing module for a kiwifruit flower pollinator robot Australas Conf Robot Autom ACRA, 2020 (2019-December) Google Scholar [94] Y Ge, Y Xiong, PJ. From Symmetry-based 3D shape completion for fruit localisation for harvesting robots Biosyst Eng, 197 (2020), pp. 188-202, 10.1016/J.BIOSYSTEMSENG.2020.07.003 View PDFView articleView in ScopusGoogle Scholar [95] S Birrell, J Hughes, JY Cai, F. Iida A field-tested robotic harvesting system for iceberg lettuce J F Robot, 37 (2020), pp. 225-245, 10.1002/ROB.21888 View in ScopusGoogle Scholar [96] J del Cerro, CC Ulloa, A Barrientos, L. Rivas J de Unmanned Aerial Vehicles in Agriculture: A Survey Agron, 11 (2021), p. 203, 10.3390/AGRONOMY11020203 Page2021;11:203 View in ScopusGoogle Scholar [97] Patel PN, Patel M, Faldu RM, Dave YR. Quadcopter for Agricultural Surveillance 2013. Google Scholar [98] Sylvester G, Food and Agriculture Organization of the United Nations., International Telecommunication Union. E-agriculture in action : drones for agriculture n.d.:112. Google Scholar [99] H Aasen, A Burkart, A Bolten, G. Bareth Generating 3D hyperspectral information with lightweight UAV snapshot cameras for vegetation monitoring: From camera calibration to quality assurance ISPRS J Photogramm Remote Sens, 108 (2015), pp. 245-259, 10.1016/J.ISPRSJPRS.2015.08.002 View PDFView articleView in ScopusGoogle Scholar [100] J Bendig, K Yu, H Aasen, A Bolten, S Bennertz, J Broscheit, et al. Combining UAV-based plant height from crop surface models, visible, and near infrared vegetation indices for biomass monitoring in barley Int J Appl Earth Obs Geoinf, 39 (2015), pp. 79-87, 10.1016/J.JAG.2015.02.012 View PDFView articleView in ScopusGoogle Scholar [101] M Du, N. Noguchi Monitoring of wheat growth status and mapping of wheat yield's within-field spatial variations using color images acquired from UAV-camera System Remote Sens, 9 (2017), 10.3390/RS9030289 Google Scholar [102] ML Guillen-Climent, PJ Zarco-Tejada, JAJ Berni, PRJ North, FJ. Villalobos Mapping radiation interception in row-structured orchards using 3D simulation and high-resolution airborne imagery acquired from a UAV Precis Agric, 13 (2012), pp. 473-500, 10.1007/S11119-012-9263-8 2012 134 View in ScopusGoogle Scholar [103] H Xiang, L. Tian Development of a low-cost agricultural remote sensing system based on an autonomous unmanned aerial vehicle (UAV) Biosyst Eng, 108 (2011), pp. 174-190, 10.1016/J.BIOSYSTEMSENG.2010.11.010 View PDFView articleView in ScopusGoogle Scholar [104] CA. Rokhmana The Potential of UAV-based Remote Sensing for Supporting Precision Agriculture in Indonesia Procedia Environ Sci, 24 (2015), pp. 245-253, 10.1016/J.PROENV.2015.03.032 View PDFView articleView in ScopusGoogle Scholar [105] Z Pan, D Lie, L Qiang, H Shaolan, Y Shilai, L Yande, et al. Effects of citrus tree-shape and spraying height of small unmanned aerial vehicle on droplet distribution Int J Agric Biol Eng, 9 (2016), pp. 45-52, 10.25165/IJABE.V9I4.2178 Google Scholar [106] S Meivel, K Dinakaran, N Gandhiraj, M. Srinivasan Remote sensing for UREA Spraying Agricultural (UAV) system ICACCS 2016 - 3rd Int Conf Adv Comput Commun Syst Bringing to Table, Futur Technol from Arround Globe (2016), 10.1109/ICACCS.2016.7586367 Google Scholar [107] BS Faiçal, FG Costa, G Pessin, J Ueyama, H Freitas, A Colombo, et al. The use of unmanned aerial vehicles and wireless sensor networks for spraying pesticides J Syst Archit, 60 (2014), pp. 393-404, 10.1016/J.SYSARC.2014.01.004 View PDFView articleView in ScopusGoogle Scholar [108] DK Giles, RC. Billing Deployment and performance of a uav for crop spraying Chem Eng Trans, 44 (2015), pp. 307-312, 10.3303/CET1544052 View in ScopusGoogle Scholar [109] X Xue, Y Lan, Z Sun, C Chang, WC. Hoffmann Develop an unmanned aerial vehicle based automatic aerial spraying system Comput Electron Agric, 128 (2016), pp. 58-66, 10.1016/J.COMPAG.2016.07.022 View PDFView articleView in ScopusGoogle Scholar [110] J Torres-Sánchez, JM Peña, AI de Castro, F. López-Granados Multi-temporal mapping of the vegetation fraction in early-season wheat fields using images from UAV Comput Electron Agric, 103 (2014), pp. 104-113, 10.1016/J.COMPAG.2014.02.009 View PDFView articleView in ScopusGoogle Scholar [111] JM Peña, J Torres-Sánchez, AI de Castro, M Kelly, F. López-Granados Weed Mapping in Early-Season Maize Fields Using Object-Based Analysis of Unmanned Aerial Vehicle (UAV) Images PLoS One, 8 (2013), p. e77151, 10.1371/JOURNAL.PONE.0077151 View in ScopusGoogle Scholar [112] J Baluja, MP Diago, P Balda, R Zorer, F Meggio, F Morales, et al. Assessment of vineyard water status variability by thermal and multispectral imagery using an unmanned aerial vehicle (UAV) Irrig Sci, 30 (2012), pp. 511-522, 10.1007/S00271-012-0382-9 View in ScopusGoogle Scholar [113] PJ Zarco-Tejada, V González-Dugo, Berni JAJ. Fluorescence temperature and narrow-band indices acquired from a UAV platform for water stress detection using a micro-hyperspectral imager and a thermal camera Remote Sens Environ, 117 (2012), pp. 322-337, 10.1016/J.RSE.2011.10.007 View PDFView articleView in ScopusGoogle Scholar [114] H Hoffmann, R Jensen, A Thomsen, H Nieto, J Rasmussen, T. Friborg Crop water stress maps for an entire growing season from visible and thermal UAV imagery Biogeosciences, 13 (2016), pp. 6545-6563, 10.5194/BG-13-6545-2016 View in ScopusGoogle Scholar [115] C Romero-Trigueros, PA Nortes, JJ Alarcón, JE Hunink, M Parra, S Contreras, et al. Effects of saline reclaimed waters and deficit irrigation on Citrus physiology assessed by UAV remote sensing Agric Water Manag, 183 (2017), pp. 60-69, 10.1016/J.AGWAT.2016.09.014 View PDFView articleView in ScopusGoogle Scholar [116] M Romero, Y Luo, B Su, S. Fuentes Vineyard water status estimation using multispectral imagery from an UAV platform and machine learning algorithms for irrigation scheduling management Comput Electron Agric, 147 (2018), pp. 109-117, 10.1016/J.COMPAG.2018.02.013 View PDFView articleView in ScopusGoogle Scholar [117] F Vanegas, D Bratanov, K Powell, J Weiss, F. Gonzalez A Novel Methodology for Improving Plant Pest Surveillance in Vineyards and Crops Using UAV-Based Hyperspectral and Spatial Data Sensors, 18 (2018), p. 260, 10.3390/S18010260 Page2018;18:260 View in ScopusGoogle Scholar [118] F Garcia-Ruiz, S Sankaran, JM Maja, WS Lee, J Rasmussen, R. Ehsani Comparison of two aerial imaging platforms for identification of Huanglongbing-infected citrus trees Comput Electron Agric, 91 (2013), pp. 106-115, 10.1016/J.COMPAG.2012.12.002 View PDFView articleView in ScopusGoogle Scholar [119] U Sivarajah, MM Kamal, Z Irani, V. Weerakkody Critical analysis of Big Data challenges and analytical methods J Bus Res, 70 (2017), pp. 263-286, 10.1016/J.JBUSRES.2016.08.001 View PDFView articleView in ScopusGoogle Scholar [120] M Chi, A Plaza, JA Benediktsson, Z Sun, J Shen, Y. Zhu Big Data for Remote Sensing: Challenges and Opportunities Proc IEEE, 104 (2016), pp. 2207-2219, 10.1109/JPROC.2016.2598228 View in ScopusGoogle Scholar [121] K Tesfaye, K Sonder, J Caims, C Magorokosho, A Tarekegn, GT Kassie, et al. Targeting drought-tolerant maize varieties in southern Africa: a geospatial crop modeling approach using big data Int Food Agribus Manag Rev, 19 (2016) Google Scholar [122] B Vandana, SS. Kumar A novel approach using big data analytics to improve the crop yield in precision agriculture 2018 3rd IEEE Int Conf Recent Trends Electron Inf Commun Technol RTEICT 2018 - Proc (2018), pp. 824-827, 10.1109/RTEICT42901.2018.9012549 View in ScopusGoogle Scholar [123] S Sharma, G Rathee, H. Saini Big data analytics for crop prediction mode using optimization technique PDGC 2018 - 2018 5th Int Conf Parallel, Distrib Grid Comput (2018), pp. 760-764, 10.1109/PDGC.2018.8746001 View in ScopusGoogle Scholar [124] A Ani, P. Gopalakirishnan Automated Hydroponic Drip Irrigation Using Big Data Proc 2nd Int Conf Inven Res Comput Appl ICIRCA 2020 (2020), pp. 370-375, 10.1109/ICIRCA48905.2020.9182908 View in ScopusGoogle Scholar [125] P Zhang, Q Zhang, F Liu, J Li, N Cao, C. Song The Construction of the Integration of Water and Fertilizer Smart Water Saving Irrigation System Based on Big Data Proc - 2017 IEEE Int Conf Comput Sci Eng IEEE/IFIP Int Conf Embed Ubiquitous Comput CSE EUC 2017, 2 (2017), pp. 392-397, 10.1109/CSE-EUC.2017.258 View in ScopusGoogle Scholar [126] R Sharma, SS Kamble, A Gunasekaran, V Kumar, A. Kumar A systematic literature review on machine learning applications for sustainable agriculture supply chain performance Comput Oper Res, 119 (2020), Article 104926, 10.1016/J.COR.2020.104926 View PDFView articleView in ScopusGoogle Scholar [127] T Talaviya, D Shah, N Patel, H Yagnik, M. Shah Implementation of artificial intelligence in agriculture for optimisation of irrigation and application of pesticides and herbicides Artif Intell Agric, 4 (2020), pp. 58-73, 10.1016/J.AIIA.2020.04.002 View PDFView articleView in ScopusGoogle Scholar [128] M Mohri, A Rostamizadeh, A. Talwalkar Foundations in Machine learning SpringerBriefs Comput Sci, 0 (2014), pp. 39-44 Google Scholar [129] KG Liakos, P Busato, D Moshou, S Pearson, D. Bochtis Machine Learning in Agriculture: A Review Sensors, 18 (2018), p. 2674, 10.3390/S18082674 Page2018;18:2674 View in ScopusGoogle Scholar [130] G Xu, H Li, S Liu, K Yang, X. Lin VerifyNet: Secure and Verifiable Federated Learning IEEE Trans Inf Forensics Secur, 15 (2020), pp. 911-926, 10.1109/TIFS.2019.2929409 View in ScopusGoogle Scholar [131] E Kamir, F Waldner, Z Hochman, E Kamir, F Waldner, Z. Hochman Estimating wheat yields in Australia using climate records, satellite image time series and machine learning methods JPRS, 160 (2020), pp. 124-135, 10.1016/J.ISPRSJPRS.2019.11.008 View PDFView articleView in ScopusGoogle Scholar [132] H Aghighi, M Azadbakht, D Ashourloo, HS Shahrabi, S. Radiom Machine Learning Regression Techniques for the Silage Maize Yield Prediction Using Time-Series Images of Landsat 8 OLI IEEE J Sel Top Appl Earth Obs Remote Sens, 11 (2018), pp. 4563-4577, 10.1109/JSTARS.2018.2823361 View in ScopusGoogle Scholar [133] S Kulkarni, SN Mandal, GS Sharma, MR Mundada, Meeradevi Predictive Analysis to Improve Crop Yield using a Neural Network Model 2018 Int Conf Adv Comput Commun Informatics, ICACCI 2018 (2018), pp. 74-79, 10.1109/ICACCI.2018.8554851 View in ScopusGoogle Scholar [134] P Feng, B Wang, DL Liu, C Waters, D Xiao, L Shi, et al. Dynamic wheat yield forecasts are improved by a hybrid approach using a biophysical model and machine learning technique Agric For Meteorol, 285–286 (2020), Article 107922, 10.1016/J.AGRFORMET.2020.107922 View PDFView articleView in ScopusGoogle Scholar [135] Y Cakir, M Kirci, EO. Gunes Yield prediction of wheat in south-east region of Turkey by using artificial neural networks 2014 3rd Int Conf Agro-Geoinformatics, Agro-Geoinformatics 2014 (2014), 10.1109/AGRO-GEOINFORMATICS.2014.6910609 Google Scholar [136] XE Pantazi, D Moshou, T Alexandridis, RL Whetton, AM. Mouazen Wheat yield prediction using machine learning and advanced sensing techniques Comput Electron Agric, 121 (2016), pp. 57-65, 10.1016/J.COMPAG.2015.11.018 View PDFView articleView in ScopusGoogle Scholar [137] Y Everingham, J Sexton, D Skocaj, G. Inman-Bamber Accurate prediction of sugarcane yield using a random forest algorithm Agron Sustain Dev, 36 (2016), pp. 1-9, 10.1007/S13593-016-0364-Z 2016 362 Google Scholar [138] I Ahmad, U Saeed, M Fahad, A Ullah, M Habib ur Rahman, A Ahmad, et al. Yield Forecasting of Spring Maize Using Remote Sensing and Crop Modeling in Faisalabad-Punjab Pakistan J Indian Soc Remote Sens, 46 (2018), pp. 1701-1711, 10.1007/S12524-018-0825-8 2018 4610 View in ScopusGoogle Scholar [139] MS Verma, SD. Gawade A machine learning approach for prediction system and analysis of nutrients uptake for better crop growth in the Hydroponics system Proc - Int Conf Artif Intell Smart Syst ICAIS 2021 (2021), pp. 150-156, 10.1109/ICAIS50930.2021.9395956 View in ScopusGoogle Scholar [140] MA Ebrahimi, MH Khoshtaghaza, S Minaei, B. Jamshidi Vision-based pest detection based on SVM classification method Comput Electron Agric, 137 (2017), pp. 52-58, 10.1016/J.COMPAG.2017.03.016 View PDFView articleView in ScopusGoogle Scholar [141] D Moshou, XE Pantazi, D Kateris, I. Gravalos Water stress detection based on optical multisensor fusion with a least squares support vector machine classifier Biosyst Eng, 117 (2014), pp. 15-22, 10.1016/J.BIOSYSTEMSENG.2013.07.008 View PDFView articleView in ScopusGoogle Scholar [142] R Barosa, SIS Hassen, L. Nagowah Smart Aquaponics with Disease Detection 2nd Int Conf Next Gener Comput Appl 2019, NextComp 2019 - Proc (2019), 10.1109/NEXTCOMP.2019.8883437 Google Scholar [143] A Etienne, D. Saraswat Machine learning approaches to automate weed detection by UAV based sensors SPIE, 11008 (2019), Article 110080R, 10.1117/12.2520536 View in ScopusGoogle Scholar [144] A Bakhshipour, A. Jafari Evaluation of support vector machine and artificial neural networks in weed detection using shape features Comput Electron Agric, 145 (2018), pp. 153-160, 10.1016/J.COMPAG.2017.12.032 View PDFView articleView in ScopusGoogle Scholar [145] A Morellos, XE Pantazi, D Moshou, T Alexandridis, R Whetton, G Tziotzios, et al. Machine learning based prediction of soil total nitrogen, organic carbon and moisture content by using VIS-NIR spectroscopy Biosyst Eng, 152 (2016), pp. 104-116, 10.1016/J.BIOSYSTEMSENG.2016.04.018 View PDFView articleView in ScopusGoogle Scholar [146] E Acar, MS Ozerdem, BB. Ustundag Machine learning based regression model for prediction of soil surface humidity over moderately vegetated fields 2019 8th Int Conf Agro-Geoinformatics, Agro-Geoinformatics 2019 (2019), 10.1109/AGRO-GEOINFORMATICS.2019.8820461 Google Scholar [147] WM Ridwan, M Sapitang, A Aziz, KF Kushiar, AN Ahmed, A. El-Shafie Rainfall forecasting model using machine learning methods: Case study Terengganu Malaysia. Ain Shams Eng J, 12 (2021), pp. 1651-1663, 10.1016/J.ASEJ.2020.09.011 View PDFView articleView in ScopusGoogle Scholar [148] M Taki, S Abdanan Mehdizadeh, A Rohani, M Rahnama, M Rahmati-Joneidabad Applied machine learning in greenhouse simulation; new application and analysis Inf Process Agric, 5 (2018), pp. 253-268, 10.1016/J.INPA.2018.01.003 View PDFView articleView in ScopusGoogle Scholar [149] J. Schmidhuber Deep Learning in Neural Networks: An Overview Neural Networks, 61 (2014), pp. 85-117, 10.1016/j.neunet.2014.09.003 Google Scholar [150] Canziani A, Paszke A, Culurciello E. An Analysis of Deep Neural Network Models for Practical Applications 2016. Google Scholar [151] S Albawi, TA Mohammed, S Al-Zawi Understanding of a convolutional neural network Proc 2017 Int Conf Eng Technol ICET 2017 (2018), 10.1109/ICENGTECHNOL.2017.8308186 2018-January:1–6 Google Scholar [152] A Kamilaris, FX. Prenafeta-Boldu Deep learning in agriculture: A survey Comput Electron Agric, 147 (2018), pp. 70-90, 10.1016/j.compag.2018.02.016 View PDFView articleView in ScopusGoogle Scholar [153] V Kakani, VH Nguyen, BP Kumar, H Kim, VR. Pasupuleti A critical review on computer vision and artificial intelligence in food industry J Agric Food Res, 2 (2020), 10.1016/J.JAFR.2020.100033 Google Scholar [154] Schwalbert RA, Amado T, Corassa G, Pierre Pott L, Prasad Pvv, Ciampitti IA. Satellite-based soybean yield forecast: Integrating machine learning and weather data for improving crop yield prediction in southern Brazil 2019. https://doi.org/10.1016/j.agrformet.2019.107886. Google Scholar [155] Z Chu, J. Yu An end-to-end model for rice yield prediction using deep learning fusion Comput Electron Agric, 174 (2020), 10.1016/J.COMPAG.2020.105471 Google Scholar [156] D Tedesco-Oliveira, R Pereira da Silva, W Maldonado, C Zerbato Convolutional neural networks in predicting cotton yield from images of commercial fields Comput Electron Agric, 171 (2020), Article 105307, 10.1016/J.COMPAG.2020.105307 View PDFView articleView in ScopusGoogle Scholar [157] Y Chen, WS Lee, H Gan, N Peres, C Fraisse, Y Zhang, et al. Strawberry Yield Prediction Based on a Deep Neural Network Using High-Resolution Aerial Orthoimages Remote Sens, 11 (2019), p. 1584, 10.3390/RS11131584 Page2019;11:1584 View in ScopusGoogle Scholar [158] L Gong, M Yu, S Jiang, V Cutsuridis, S. Pearson Deep Learning Based Prediction on Greenhouse Crop Yield Combined TCN and RNN Sensors, 21 (2021), p. 4537, 10.3390/S21134537 Page2021;21:4537 View in ScopusGoogle Scholar [159] L Zhang, Z Xu, D Xu, J Ma, Y Chen, Z. Fu Growth monitoring of greenhouse lettuce based on a convolutional neural network Hortic Res, 7 (2020), 10.1038/S41438-020-00345-6 Google Scholar [160] X Song, G Zhang, F Liu, D Li, Y Zhao, J. Yang Modeling spatio-temporal distribution of soil moisture by deep learning-based cellular automata model J Arid Land, 8 (2016), pp. 734-748, 10.1007/S40333-016-0049-0 View in ScopusGoogle Scholar [161] A Reyes-Yanes, P Martinez, R. Ahmad Real-time growth rate and fresh weight estimation for little gem romaine lettuce in aquaponic grow beds Comput Electron Agric, 179 (2020), Article 105827, 10.1016/j.compag.2020.105827 View PDFView articleView in ScopusGoogle Scholar [162] M Dyrmann, H Karstoft, HS. Midtiby Plant species classification using deep convolutional neural network Biosyst Eng, 151 (2016), pp. 72-80, 10.1016/J.BIOSYSTEMSENG.2016.08.024 View PDFView articleView in ScopusGoogle Scholar [163] S Sladojevic, M Arsenovic, A Anderla, D Culibrk, D. Stefanovic Deep Neural Networks Based Recognition of Plant Diseases by Leaf Image Classification Comput Intell Neurosci (2016), p. 2016, 10.1155/2016/3289801 Google Scholar [164] SP Mohanty, DP Hughes, M. Salathé Using Deep Learning for Image-Based Plant Disease Detection Front Plant Sci, 0 (2016), p. 1419, 10.3389/FPLS.2016.01419 View in ScopusGoogle Scholar [165] A Fuentes, S Yoon, SC Kim, DS. Park A Robust Deep-Learning-Based Detector for Real-Time Tomato Plant Diseases and Pests Recognition Sensors, 17 (2017), p. 2022, 10.3390/S17092022 Page2017;17:2022 View in ScopusGoogle Scholar [166] A Anagnostis, G Asiminari, E Papageorgiou, D. Bochtis A Convolutional Neural Networks Based Method for Anthracnose Infected Walnut Tree Leaves Identification Appl Sci, 10 (2020), p. 469, 10.3390/APP10020469 Page2020;10:469 View in ScopusGoogle Scholar [167] I Sa, Z Ge, F Dayoub, B Upcroft, T Perez, C. McCool DeepFruits: A Fruit Detection System Using Deep Neural Networks Sensors, 16 (2016), p. 1222, 10.3390/S16081222 Page2016;16:1222 View in ScopusGoogle Scholar [168] SW Chen, SS Shivakumar, S Dcunha, J Das, E Okon, C Qu, et al. Counting Apples and Oranges with Deep Learning: A Data-Driven Approach IEEE Robot Autom Lett, 2 (2017), pp. 781-788, 10.1109/LRA.2017.2651944 View in ScopusGoogle Scholar [169] Y Tian, G Yang, Z Wang, H Wang, E Li, Z. Liang Apple detection during different growth stages in orchards using the improved YOLO-V3 model Comput Electron Agric, 157 (2019), pp. 417-426, 10.1016/J.COMPAG.2019.01.012 View PDFView articleView in ScopusGoogle Scholar [170] F Terribile, A Agrillo, A Bonfante, G Buscemi, M Colandrea, A D'Antonio, et al. A Web-based spatial decision supporting system for land management and soil conservation Solid Earth, 6 (2015), pp. 903-928, 10.5194/SE-6-903-2015 View in ScopusGoogle Scholar [171] A Felsberger, B Oberegger, G. Reiner A Review of Decision Support Systems for Manufacturing Systems Undefined (2016) Google Scholar [172] P Taechatanasat, L. Armstrong Decision Support System Data for Farmer Decision Making ECU Publ Post (2013), p. 2014 Google Scholar [173] H Navarro-Hellín, J Martínez-del-Rincon, R Domingo-Miguel, F Soto-Valles, R. Torres-Sánchez A decision support system for managing irrigation in agriculture Comput Electron Agric, 124 (2016), pp. 121-131, 10.1016/J.COMPAG.2016.04.003 View PDFView articleView in ScopusGoogle Scholar [174] E Giusti, S. Marsili-Libelli A Fuzzy Decision Support System for irrigation and water conservation in agriculture Environ Model Softw, 63 (2015), pp. 73-86, 10.1016/J.ENVSOFT.2014.09.020 View PDFView articleView in ScopusGoogle Scholar [175] MDM Kadiyala, S Nedumaran, P, S.C Singh, MA Irshad, MCS Bantilan An integrated crop model and GIS decision support system for assisting agronomic decision making under climate change Sci Total Environ, 521–522 (2015), pp. 123-134, 10.1016/J.SCITOTENV.2015.03.097 View PDFView articleView in ScopusGoogle Scholar [176] KO Wenkel, M Berg, W Mirschel, R Wieland, C Nendel, B. Köstner LandCaRe DSS - An interactive decision support system for climate change impact assessment and the analysis of potential agricultural land use adaptation strategies J Environ Manage, 127 (2013), 10.1016/J.JENVMAN.2013.02.051 Google Scholar [177] DD Bochtis, CG Sørensen, O. Green A DSS for planning of soil-sensitive field operations Decis Support Syst, 53 (2012), pp. 66-75, 10.1016/J.DSS.2011.12.005 View PDFView articleView in ScopusGoogle Scholar [178] A Ghandar, A Ahmed, S Zulfiqar, Z Hua, M Hanai, G. Theodoropoulos A decision support system for urban agriculture using digital twin: A case study with aquaponics IEEE Access, 9 (2021), pp. 35691-35708, 10.1109/ACCESS.2021.3061722 View in ScopusGoogle Scholar [179] JA Sánchez-Molina, N Pérez, F Rodríguez, JL Guzmán, JC. López Support system for decision making in the management of the greenhouse environmental based on growth model for sweet pepper Agric Syst, 139 (2015), pp. 144-152, 10.1016/J.AGSY.2015.06.009 View PDFView articleView in ScopusGoogle Scholar [180] D Nestel, Y Cohen, B Shaked, V Alchanatis, E Nemny-Lavy, MA Miranda, et al. An Integrated Decision Support System for Environmentally-Friendly Management of the Ethiopian Fruit Fly in Greenhouse Crops Agron, 9 (2019), p. 459, 10.3390/AGRONOMY9080459 Page2019;9:459 View in ScopusGoogle Scholar [181] G Aiello, I Giovino, M Vallone, P Catania, A. Argento A decision support system based on multisensor data fusion for sustainable greenhouse management J Clean Prod, 172 (2018), pp. 4057-4065, 10.1016/J.JCLEPRO.2017.02.197 View PDFView articleView in ScopusGoogle Scholar [182] J Cañadas, JA Sánchez-Molina, F Rodríguez, IM. del Águila Improving automatic climate control with decision support techniques to minimize disease effects in greenhouse tomatoes Inf Process Agric, 4 (2017), pp. 50-63, 10.1016/J.INPA.2016.12.002 View PDFView articleView in ScopusGoogle Scholar [183] RM Sampurno, KB Seminar, Y. Suharnoto Weed control decision support system based on precision agriculture approach Telkomnika (Telecommunication Comput Electron Control, 12 (2014), pp. 475-484, 10.12928/TELKOMNIKA.V12I2.1982 View in ScopusGoogle Scholar [184] L Wang, M Törngren, M. Onori Current status and advancement of cyber-physical systems in manufacturing J Manuf Syst, 37 (2015), pp. 517-527, 10.1016/J.JMSY.2015.04.008 View PDFView articleView in ScopusGoogle Scholar [185] DGS Pivoto, LFF de Almeida, R da Rosa Righi, JJPC Rodrigues, AB Lugli, AM. Alberti Cyber-physical systems architectures for industrial internet of things applications in Industry 4.0: A literature review J Manuf Syst, 58 (2021), pp. 176-192, 10.1016/J.JMSY.2020.11.017 View PDFView articleView in ScopusGoogle Scholar [186] AF Jimenez, PF Cardenas, F Jimenez, A Canales, A. López A cyber-physical intelligent agent for irrigation scheduling in horticultural crops Comput Electron Agric, 178 (2020), Article 105777, 10.1016/J.COMPAG.2020.105777 View PDFView articleView in ScopusGoogle Scholar [187] B Bagheri, S Yang, HA Kao, J. Lee Cyber-physical systems architecture for self-aware machines in industry 4.0 environment IFAC-PapersOnLine, 28 (2015), pp. 1622-1627, 10.1016/J.IFACOL.2015.06.318 View PDFView articleView in ScopusGoogle Scholar [188] A Selmani, H Oubehar, M Outanoute, A Ed-Dahhak, M Guerbaoui, A Lachhab, et al. Agricultural cyber-physical system enabled for remote management of solar-powered precision irrigation Biosyst Eng, 177 (2019), pp. 18-30, 10.1016/J.BIOSYSTEMSENG.2018.06.007 View PDFView articleView in ScopusGoogle Scholar [189] A Nayak, RR Levalle, S Lee, SY. Nof Resource sharing in cyber-physical systems: modelling framework and case studies Http://DxDoiOrg/101080/0020754320161146419, 54 (2016), pp. 6969-6983, 10.1080/00207543.2016.1146419 View in ScopusGoogle Scholar [190] N Chen, X Zhang, C. Wang Integrated open geospatial web service enabled cyber-physical information infrastructure for precision agriculture monitoring Comput Electron Agric, 111 (2015), pp. 78-91, 10.1016/J.COMPAG.2014.12.009 View PDFView articleView in ScopusGoogle Scholar [191] DVS Srikar, KC Sairam, T Srikanth, G Narayanan, K Vrinda, DG. Kurup Implementation and Testing of Cyber Physical System in Laboratory for Precision Agriculture 2018 Int Conf Adv Comput Commun Informatics, ICACCI 2018 (2018), pp. 1906-1908, 10.1109/ICACCI.2018.8554601 View in ScopusGoogle Scholar [192] I Ahmad, K. Pothuganti Smart Field Monitoring using ToxTrac: A Cyber-Physical System Approach in Agriculture Proc - Int Conf Smart Electron Commun ICOSEC 2020 (2020), pp. 723-727, 10.1109/ICOSEC49089.2020.9215282 Google Scholar [193] P Guo, PO Dusadeerungsikul, SY. Nof Agricultural cyber physical system collaboration for greenhouse stress management Comput Electron Agric, 150 (2018), pp. 439-454, 10.1016/J.COMPAG.2018.05.022 View PDFView articleView in ScopusGoogle Scholar [194] B Stark, S Rider, YQ. Chen Optimal pest management by networked unmanned cropdusters in precision agriculture: A cyber-physical system approach IFAC Proc Vol, 46 (2013), pp. 296-302, 10.3182/20131120-3-FR-4045.00019 View PDFView articleView in ScopusGoogle Scholar [195] C-R Rad, O Hancu, I-A Takacs, G. Olteanu Smart Monitoring of Potato Crop: A Cyber-Physical System Architecture Model in the Field of Precision Agriculture Agric Agric Sci Procedia, 6 (2015), pp. 73-79, 10.1016/J.AASPRO.2015.08.041 View PDFView articleGoogle Scholar [196] K Antonopoulos, C Panagiotou, CP Antonopoulos, NS. Voros A-FARM Precision Farming CPS Platform. 10th Int Conf Information Intell Syst Appl IISA, 2019 (2019), 10.1109/IISA.2019.8900717 Google Scholar [197] D Cimino, A Ferrero, L Queirolo, F Bellotti, R Berta, A. De Gloria A low-cost, open-source cyber physical system for automated, remotely controlled precision agriculture Lect Notes Electr Eng, 409 (2017), pp. 191-203, 10.1007/978-3-319-47913-2_23 View in ScopusGoogle Scholar [198] C Verdouw, B Tekinerdogan, A Beulens, S. Wolfert Digital twins in smart farming Agric Syst, 189 (2021), Article 103046, 10.1016/J.AGSY.2020.103046 View PDFView articleView in ScopusGoogle Scholar [199] D Jones, C Snider, A Nassehi, J Yon, B Hicks Characterising the Digital Twin: A systematic literature review CIRP J Manuf Sci Technol, 29 (2020), pp. 36-52, 10.1016/J.CIRPJ.2020.02.002 View PDFView articleView in ScopusGoogle Scholar [200] A Ahmed, S Zulfiqar, A Ghandar, Y Chen, M Hanai, G. Theodoropoulos Digital Twin Technology for Aquaponics: Towards Optimizing Food Production with Dynamic Data Driven Application Systems Commun Comput Inf Sci, 1094 (2019), pp. 3-14, 10.1007/978-981-15-1078-6_1 View in ScopusGoogle Scholar [201] A Kampker, V Stich, P Jussen, B Moser, J. Kuntz Business models for industrial smart services - the example of a digital twin for a product-service-system for potato harvesting Procedia CIRP, 83 (2019), pp. 534-540, 10.1016/J.PROCIR.2019.04.114 View PDFView articleView in ScopusGoogle Scholar [202] N Tsolakis, D Bechtsis, D. Bochtis AgROS: A Robot Operating System Based Emulation Tool for Agricultural Robotics Agron, 9 (2019), p. 403, 10.3390/AGRONOMY9070403 Page2019;9:403 Google Scholar [203] T Machl, A Donaubauer, TH. Kolbe Planning agricultural core road networks based on a digital twin of the cultivated landscape J Digit Landsc Archit, 2019 (2019), pp. 316-327, 10.14627/537663034 View in ScopusGoogle Scholar [204] RG Alves, G Souza, RF Maia, ALH Tran, C Kamienski, JP Soininen, et al. A digital twin for smart farming 2019 IEEE Glob Humanit Technol Conf GHTC 2019 (2019), 10.1109/GHTC46095.2019.9033075 Google Scholar [205] J Monteiro, J Barata, M Veloso, L Veloso, J. Nunes Towards sustainable digital twins for vertical farming 2018 13th Int Conf Digit Inf Manag ICDIM 2018 (2018), pp. 234-239, 10.1109/ICDIM.2018.8847169 View in ScopusGoogle Scholar [206] Verdouw C, Kruize J. Digital twins in farm management : illustrations from the FIWARE accelerators SmartAgriFood and Fractals. Undefined 2017. Google Scholar [207] P Moghadam, T Lowe, EJ. Edwards Digital Twin for the Future of Orchard Production Systems Proc, 36 (2019), p. 92, 10.3390/PROCEEDINGS2019036092 Page2020;36:92 Google Scholar [208] S Aydin, MN. Aydin Semantic and syntactic interoperability for agricultural open-data platforms in the context of IoT using crop-specific trait ontologies Appl Sci, 10 (2020), 10.3390/app10134460 Google Scholar [209] Y He, J Guo, X. Zheng From Surveillance to Digital Twin: Challenges and Recent Advances of Signal Processing for Industrial Internet of Things IEEE Signal Process Mag, 35 (2018), pp. 120-129, 10.1109/MSP.2018.2842228 View in ScopusGoogle Scholar [210] MS Farooq, S Riaz, A Abid, K Abid, MA. Naeem A Survey on the Role of IoT in Agriculture for the Implementation of Smart Farming IEEE Access, 7 (2019), pp. 156237-156271, 10.1109/ACCESS.2019.2949703 View in ScopusGoogle Scholar [211] A Villa-Henriksen, GTC Edwards, LA Pesonen, O Green, CAG. Sørensen Internet of Things in arable farming: Implementation, applications, challenges and potential Biosyst Eng, 191 (2020), pp. 60-84, 10.1016/J.BIOSYSTEMSENG.2019.12.013 View PDFView articleView in ScopusGoogle Scholar [212] HM Jawad, R Nordin, SK Gharghan, AM Jawad, M. Ismail Energy-efficient wireless sensor networks for precision agriculture: A review Sensors (Switzerland), 17 (2017), p. 1781, 10.3390/s17081781 View in ScopusGoogle Scholar [213] L Sigrist, N Stricker, D Bernath, J Beutel, L. Thiele Thermoelectric Energy Harvesting from Gradients in the Earth Surface IEEE Trans Ind Electron, 67 (2020), pp. 9460-9470, 10.1109/TIE.2019.2952796 View in ScopusGoogle Scholar [214] AR Yanes, P Martinez, R. Ahmad Towards automated aquaponics: A review on monitoring, IoT, and smart systems J Clean Prod (2020), 10.1016/j.jclepro.2020.121571 Google Scholar [215] N Brinis, LA. Saidane Context Aware Wireless Sensor Network Suitable for Precision Agriculture Wirel Sens Netw (2016), 10.4236/wsn.2016.81001 Google Scholar [216] M Zimmerling, L Mottola, S. Santini Synchronous Transmissions in Low-Power Wireless: A Survey of Communication Protocols and Network Services ACM Comput Surv, 53 (2021), 10.1145/3410159 Google Scholar [217] F Tonolini, F. Adib Networking across boundaries: Enabling wireless communication through the water-air interface SIGCOMM 2018 - Proc 2018 Conf ACM Spec Interes Gr Data Commun (2018), pp. 117-131, 10.1145/3230543.3230580 View in ScopusGoogle Scholar [218] L Chen, S Thombre, K Jarvinen, ES Lohan, A Alen-Savikko, H Leppakoski, et al. Robustness, Security and Privacy in Location-Based Services for Future IoT: A Survey IEEE Access, 5 (2017), pp. 8956-8977, 10.1109/ACCESS.2017.2695525 View in ScopusGoogle Scholar [219] Y Njah, M. Cheriet Parallel Route Optimization and Service Assurance in Energy-Efficient Software-Defined Industrial IoT Networks IEEE Access, 9 (2021), pp. 24682-24696, 10.1109/ACCESS.2021.3056931 View in ScopusGoogle Scholar [220] A Rajput, VB. Kumaravelu Scalable and sustainable wireless sensor networks for agricultural application of Internet of things using fuzzy c-means algorithm Sustain Comput Informatics Syst, 22 (2019), pp. 62-74, 10.1016/J.SUSCOM.2019.02.003 View PDFView articleView in ScopusGoogle Scholar [221] BB Sinha, R. Dhanalakshmi Recent advancements and challenges of Internet of Things in smart agriculture: A survey Futur Gener Comput Syst, 126 (2022), pp. 169-184, 10.1016/J.FUTURE.2021.08.006 View PDFView articleView in ScopusGoogle Scholar [222] F Caffaro, E. Cavallo The effects of individual variables, farming system characteristics and perceived barriers on actual use of smart farming technologies: Evidence from the piedmont region, northwestern Italy Agric, 9 (2019), 10.3390/AGRICULTURE9050111 Google Scholar [223] KumarPratyush JainMohit, Vera L BhansaliIshita, PatelShwetak.FarmChat TruongKhai Proc ACM Interactive, Mobile, Wearable Ubiquitous Technol, 2 (2018), pp. 1-22, 10.1145/3287048 Google Scholar [224] Mclaughlan B, Brandli J, Smith F. Toward Sustainable High-Yield Agriculture via Intelligent Control Systems 2015. Google Scholar [225] RK Kodali, S Soratkal, L. Boppana IOT based control of appliances Proceeding - IEEE Int Conf Comput Commun Autom ICCCA 2016 (2017), pp. 1293-1297, 10.1109/CCAA.2016.7813918 Google Scholar [226] Abbasi R, Reyes A, Martinez E, Ahmad R. Real-time implementation of digital twin for robot based production line n.d.:4–6. Google Scholar [227] O Bermeo-Almeida, M Cardenas-Rodriguez, T Samaniego-Cobo, E Ferruzola-Gómez, R Cabezas-Cabezas, W. Bazán-Vera Blockchain in Agriculture: A Systematic Literature Review Commun Comput Inf Sci, 883 (2018), pp. 44-56, 10.1007/978-3-030-00940-3_4 View in ScopusGoogle Scholar [228] V Saiz-Rubio, F. Rovira-Más From Smart Farming towards Agriculture 5.0: A Review on Crop Data Management Agron, 10 (2020), p. 207, 10.3390/AGRONOMY10020207 Page2020;10:207 View in ScopusGoogle Scholar [229] X Xu, Y Lu, B Vogel-Heuser, L. Wang Industry 4.0 and Industry 5.0—Inception, conception and perception J Manuf Syst, 61 (2021), pp. 530-535, 10.1016/J.JMSY.2021.10.006 View PDFView articleView in ScopusGoogle Scholar [230] PKR Maddikunta, Q-V Pham, P B, N Deepa, K Dev, TR Gadekallu, et al. Industry 5.0: A survey on enabling technologies and potential applications J Ind Inf Integr (2021), Article 100257, 10.1016/J.JII.2021.100257 Google Scholar Cited by (119) Design and implementation of a cost-aware and smart oyster mushroom cultivation system 2024, Smart Agricultural Technology Show abstract Recent advances in environmental and agricultural applications of hydrochars: A review 2024, Environmental Research Show abstract A quality-based sustainable supply chain architecture for perishable products using image processing in the era of industry 4.0 2024, Journal of Cleaner Production Show abstract Design and development of intelligent control strategies and algorithms for automated control of biotechnical objects under uncertainty 2024, Decision Analytics Journal Show abstract Assessing the influence of artificial intelligence on agri-food supply chain performance: the mediating effect of distribution network efficiency 2024, Technological Forecasting and Social Change Show abstract Occlusion-aware fruit segmentation in complex natural environments under shape prior 2024, Computers and Electronics in Agriculture Show abstract View all citing articles on Scopus 1 www.sciencedirect.com 2 www.scopus.com 3 ieeexplore.ieee.org © 2022 The Author(s). Published by Elsevier B.V. Recommended articles A lightweight network for mummy berry disease recognition Smart Agricultural Technology, Volume 2, 2022, Article 100044 Hongchun Qu, Min Sun View PDF What really impedes the scaling out of digital services for agriculture? A Kenyan users’ perspective Smart Agricultural Technology, Volume 2, 2022, Article 100034 John Kieti, …, Tonny Kerage Omwansa View PDF Exploring the susceptibility of smart farming: Identified opportunities and challenges Smart Agricultural Technology, Volume 2, 2022, Article 100026 Elsa Jerhamre, …, Vera van Zoest View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 83 Captures Readers: 562 Social Media Shares, Likes & Comments: 8 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply.

Paper 2:
- APA Citation: Filipović, N., Brdar, S., Mimić, G., Marko, O., & Crnojević, V. (2022). Regional soil moisture prediction system based on Long Short-Term Memory network. Biosystems Engineering, 213, 30-38.
  Main Objective: The main objective of this study was to develop a method for real-time generation and automatic application of actionable irrigation insights using deep learning-generated insights.
  Study Location:  Serbia
  Data Sources: ERA5 climate reanalysis dataset, Yr weather forecasts
  Technologies Used: LSTM, CNN, Random Forests
  Key Findings: * The proposed method can provide precise, site-specific irrigation recommendations using advanced predictive models.
* The method was tested on a dataset from Serbia and was found to be effective in predicting soil moisture.
* The method could help farmers to improve their water use efficiency and crop yields.
  Extract 1: "Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations"
  Extract 2: None
  Limitations: None
  Relevance Evaluation: This paper is very relevant to my point about advanced predictive models for precise, site-specific irrigation recommendations. The paper proposes a method for real-time generation and automatic application of actionable irrigation insights using deep learning-generated insights. This method uses advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), to provide precise, site-specific irrigation recommendations. This is a promising method that could help farmers to improve their water use efficiency and crop yields.
  Relevance Score: 1
  Inline Citation: (Filipović et al., 2022)
  Explanation: The study proposed a method for real-time generation and automatic application of actionable irrigation insights through deep learning-generated insights. This method uses advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), to provide precise, site-specific irrigation recommendations.

 Full Text: >
Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Keywords Nomenclature 1. Introduction 2. Material and methods 3. Results 4. Discussion 5. Conclusions Author contributions Declaration of competing interest Acknowledgement References Show full outline Cited by (26) Figures (4) Tables (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Biosystems Engineering Volume 213, January 2022, Pages 30-38 Research Paper Regional soil moisture prediction system based on Long Short-Term Memory network Author links open overlay panel Nemanja Filipović, Sanja Brdar, Gordan Mimić, Oskar Marko, Vladimir Crnojević Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.biosystemseng.2021.11.019 Get rights and content Under a Creative Commons license open access Highlights • Volumetric soil moisture content in the second layer (7–28 cm) was predicted. • LSTM neural network was built for the three-day predictions in Serbia. • ERA5 climate reanalysis data and Yr weather forecasts were used as open-source data. • Regional system for irrigation scheduling service in drought conditions was created. In the context of climate change, drought has been recognised as one of the most severe threats for agricultural production since absence of water is one of the most limiting factors for the growth of plants. In this study, a regional system for soil moisture prediction based on ERA5 climate reanalysis dataset, an open-source meteorological dataset issued by Copernicus Climate Change Service, was developed. It consisted of the relevant meteorological parameters for Serbia, during the period 2011–2020. Daily values of maximum and minimum air temperature, precipitation and vapour pressure deficit were used as features, and they were fed to recurrent neural network in order to predict volumetric soil moisture for three days ahead. A Long Short-Term Memory (LSTM) network was designed and trained at a regional scale using the data from the 2011–2016 period, at 28 locations that cover four major soil types. Validation was done on 2017–2018 data and LSTM was compared with a statistical forecasting technique and a classical machine learning approach. Evaluation was done with error measures commonly used in literature. The resulting network yielded the lowest errors and proved to have good generalisation properties. The system was tested from September 2019 to April 2020 using short-range weather forecasts of Yr service. It will present the cornerstone of the irrigation scheduling service in AgroSense.rs, the Serbian national platform for digital agriculture. Previous article in issue Next article in issue Keywords Recurrent Neural NetworkLong Short-Term MemoryERA5Volumetric soil moisture contentWeather data Nomenclature API Application Programming Interface ARIMA AutoRegressive Integrated Moving Average C3S Copernicus Climate Change Service D vapour pressure deficit [hPa] DSS Decision-Support System ECMWF European Centre for Medium-range Weather Forecasts E saturation vapour pressure [hPa] ELU exponential linear unit ERA5 the fifth generation of ECMWF reanalysis ht hidden state at time t LSTM Long Short-Term Memory MAE Mean Absolute Error MASE Mean Absolute Scaled Error ReLU rectified linear unit RF Random Forest RNN Recurrent Neural Network SMAPE Symmetric Mean Absolute Percentage Error t time T air temperature at 2 m [°C] Td dewpoint temperature at 2 m [°C] WMO World Meteorological Organization xt input at time t Yr joint service by the Norwegian Meteorological Institute and the Norwegian Broadcasting Corporation θsat volumetric soil moisture at saturation [m3 m−3] θfc field capacity [m3 m−3] θpwp permanent wilting point [m3 m−3] θpaw plant available water [m3 m−3] 1. Introduction As a consequence of global warming, the frequency and intensity of extreme weather events have increased across many land systems in the world. This is particularly the case with heatwaves and droughts, especially in the drought-prone regions of the Mediterranean (Shukla et al., 2019). Weather patterns in Serbia are changing, thus affecting the air temperature and precipitation regimes on the annual basis (Mimić, Mihailović, & Kapor, 2017). In the 21st century, warmer and drier conditions can be expected for all reference soil groups in Serbia, with an increase in mean annual soil temperature (up to 3.8 °C) and a decrease in mean annual soil moisture (up to 11.3%) (Mihailović et al., 2016). Additionally, a shift in climate zones is expected, which will influence the conditions during the growing season and the total agricultural production in Serbia (Mihailović et al., 2015). The only way to overcome this challenging issue is through the use of irrigation, as a mitigation measure, or through revenue-protection insurance schemes. Soil moisture is one of the essential climate variables according to World Meteorological Organization (WMO). It is very important in agriculture since it indicates the level of water available for crops, especially in dry conditions during the growing season (Mannocchi, Todisco, & Vergni, 2004). Insufficient amount of water in soil causes stress in crops and adversely affects plant growth and development (Ahmad, Malagoli, Wirtz, & Hell, 2016). Water uptake and evaporation occur predominately in topsoil, where the cumulative root length per unit of soil volume is the highest, and hence the path to water extraction and the hydraulic resistance are the lowest (Lobet, Couvreur, Meunier, Javaux, & Draye, 2014). Topsoil is the upper soil layer, usually reaching the depth of 13–25 cm, composed of organic matter, water, air and mineral particles (Marsh, 2010). Low water uptake by the plants happens when soil moisture content is close to permanent wilting point, and it depends on the soil texture as well (Fernández & Clothier, 2009). Thus, it is necessary to have reliable information on soil moisture content for timely and optimal irrigation scheduling. Soil moisture sensors can provide this information, but unfortunately due to the high price of equipment, this technology is not available to a wider population of farmers. Various applications of deep learning in agriculture and food production, including soil moisture prediction, have already been thoroughly examined (Kamilaris & Prenafeta-Boldú, 2018). Different neural network models, able to predict soil moisture dynamics with various input requirements, were presented and discussed in literature (Zheng et al., 2019). Comparison of machine learning techniques such as Multiple Linear Regression, Support Vector Machines and Recurrent Neural Networks (RNNs) for prediction of soil moisture was performed on datasets collected from different online repositories (Prakash, Sharma, & Sahu, 2018). Adaptive Neuro Fuzzy Inference Systems, a technique that combines advantages from fuzzy logic and artificial neural networks, was used for making a decision-support system (DSS) for irrigation management in agriculture, based on weather variables and soil parameters from the sensors (Navarro-Hellín, Martínez-del Rincon, Domingo-Miguel, Soto-Valles, & Torres-Sánchez, 2016). Deep Belief Networks and Multi-Layer Perceptron were combined with macroscopic cellular automata in order to predict spatiotemporal probability of soil moisture content at the depth of 4 cm using irrigation data with many dynamic weather and soil variables (Song et al., 2016), where former showed better results, compared to the observations. Cai, Zheng, Zhang, Zhangzhong, and Xue (2019) discussed that selecting appropriate meteorological parameters as the input features of the model can significantly improve the accuracy of soil moisture prediction. In training a Deep Neural Network Regression model, the initial soil moisture was used as an input feature as well, and the obtained results were comparable to other models applied in Beijing, China (Cai et al., 2019). Feed-forward Neural Network and Long Short-Term Memory (LSTM) were tested for one-day-ahead predictions of soil moisture content, which was used for predictive irrigation scheduling (Adeyemi, Grove, Peets, Domun, & Norton, 2018). Daily values of air temperature, relative humidity, net radiation, wind speed, precipitation and volumetric soil moisture content were used to build the model which requires past and present meteorological inputs and past and present soil moisture content values. The downside of this methodology is the lag in predictions, as the changes in soil moisture are in line with the observations but shifted for one day. The authors commented as well that the predictive system should be extended to include rainfall forecasts. LSTM has been used for optimal irrigation prescription on an hourly basis, with training data collected from a precision irrigation study, and this system showed very good prediction capabilities (Jimenez, Ortiz, Bondesan, Morata, & Damianidis, 2019). However, the factor that hinders the scalability of this approach is the necessity of detailed hourly data from the sensors. The objective of this study was to develop a deep learning system for prediction of soil moisture for three days ahead using open-source data, the most essential input variables and the weather forecast from Yr service including rainfall. This methodology does not require the data from soil sensors. LSTM network was trained to be robust for different soil types, thus applicable on a regional scale and not only for a particular field. Since it is using globally available open-source data from ERA5, the system is scalable for other regions as well. Such system would help farmers make informed decisions about the time of irrigation, thus increasing their yields, reducing the risk of the production and saving the resources, specifically for the drought conditions. 2. Material and methods 2.1. Datasets In order to achieve operability of the system throughout the region of interest, as well as to facilitate its potential scale-up, we relied on free, globally available data sources. In this way, a model trained on a number of points could be applied over a larger area with similar climate and soil characteristics. Although local calibration data may be required for scale-up over a region with different characteristics, the same methodology and system architecture that were developed for the initial region can be used in a novel environment. The two open data sources used in this study are Copernicus Climate Change Service (C3S), for historical weather data, and Yr, for weather forecasts. C3S provides information about the climate from ERA5, the fifth generation reanalysis of the global climate produced by European Centre for Medium-range Weather Forecasts (ECMWF). Reanalysis combines observations from across the world with modelled data to produce a complete and globally consistent dataset using the laws of physics and complex simulations. Data assimilation is done with horizontal resolution of 0.25° × 0.25° (approximately 25 km at mid-latitudes) and hourly data are produced (C3S, 2017). There are four soil layers in ERA5, segregated by the depth: the first (0–7 cm), second (7–28 cm), third (28–100 cm) and fourth (100–289 cm). Based on the ERA5 literature, for the vegetation type that represents crops from mixed farming, 21% of the root system is in the first layer, 41% is in the second layer (the largest part), 31% is in the third layer, while only 4% is in the fourth layer (ECMWF, 2016), and thus the second layer is of the highest interest in agriculture. Soil types are classified based on soil texture as follows: 1 – coarse, 2 – medium, 3 – medium fine, 4 – fine. Characteristic values of volumetric soil moisture for different textures are given in Table 1. Table 1. Values of soil moisture at saturation (θsat), field capacity (θfc), permanent wilting point (θpwp) and plant available water (θpaw), for different soil texture (van Genuchten, 1980). Texture θsat θfc θpwp θpaw Coarse 0.403 0.244 0.059 0.185 Medium 0.439 0.347 0.151 0.196 Medium-Fine 0.430 0.383 0.133 0.251 Fine 0.520 0.448 0.279 0.170 Using Climate Data Store Application Programming Interface (API), we extracted air temperature at 2 m, dewpoint temperature at 2 m, precipitation and volumetric soil moisture content in the second layer (7–28 cm), for the period 2011–2020, at the location of 28 meteorological stations belonging to the official observing network in Serbia (Table 2). In this study, the daily values of meteorological variables, i.e., maximum and minimum 2 m temperature (°C), total precipitation (mm), vapour pressure deficit (hPa) and average volumetric soil moisture content in the second layer (m3 m−3) were used. Vapour pressure deficit was calculated as D = E(T) − E(Td) where E stands for the saturation vapour pressure following Magnus's formula (Junzeng, Qi, Shizhang, & Yanmei, 2012), T is the average temperature and Td average dewpoint temperature. This variable reflects the rate of evapotranspiration, and the higher values force the plant to draw more water from the soil. Table 2. Location of stations in Serbia used in the study with given soil type. Station Code Latitude (°) Longitude (°) Altitude (m) Soil type Palic S1 46.10 19.77 102 1 Sombor S2 45.77 19.15 88 2 Novi Sad S3 45.33 19.85 84 1 Zrenjanin S4 45.37 20.42 80 2 Kikinda S5 45.85 20.47 81 3 Banatski Karlovac S6 45.05 21.03 100 3 Loznica S7 44.55 19.23 121 2 Sremska Mitrovica S8 45.10 19.55 82 2 Valjevo S9 44.32 19.92 176 2 Beograd S10 44.80 20.47 132 2 Kragujevac S11 44.03 20.93 185 2 Smederevska Palanka S12 44.37 20.95 121 2 Veliko Gradiste S13 44.75 21.52 82 2 Crni Vrh S14 44.12 21.95 1037 4 Negotin S15 44.23 22.55 42 4 Zlatibor S16 43.73 19.72 1028 2 Sjenica S17 43.28 20.00 1038 2 Pozega S18 43.85 20.03 310 2 Kraljevo S19 43.70 20.70 215 2 Kopaonik S20 43.28 20.80 1710 2 Kursumlija S21 43.13 21.27 384 4 Krusevac S22 43.57 21.35 166 2 Cuprija S23 43.93 21.38 123 2 Nis S24 43.33 21.90 202 2 Leskovac S25 42.98 21.95 230 2 Zajecar S26 43.88 22.30 144 4 Dimitrovgrad S27 43.02 22.75 450 2 Vranje S28 42.55 21.92 432 2 Three-day weather forecasts from Yr service (www.yr.no) are also freely available and accessible through an API. These include forecasts of precipitation, temperature at 2 m and dewpoint temperature at 2 m, at a spatial resolution of 2 km, and an hourly temporal resolution. For the purpose of testing the developed network, forecast data were collected from September 2019 until April 2020, at the locations of 28 meteorological stations described above. 2.2. Recurrent neural networks RNNs are widely used for time series prediction, handwriting recognition, natural language processing and speech recognition, since they show excellent performance in “sequence-to-sequence” modelling (Goodfellow, Bengio, & Courville, 2016). RNNs are also known as neural networks with memory because they are capable of learning dependencies along sequences and produce output taking into consideration the previous output, or what they learned from the input in the previous time step (Burkov, 2019). In other words, RNNs model dynamical systems where xt represents the input at time t and ht, ht−1 represent hidden states at time t, t−1, respectively (Chen, 2016). Function F is used for nonlinear mapping between consecutive time steps, as described in Eq. (1) (1) RNNs typically have vanishing gradient problem, i.e., weights are becoming irreversibly smaller in every iteration, which slows down or completely stops the training. For this reason, LSTM networks have been developed. With a memory cell and the gates that control which information passes in and passes out, LSTM prevents backpropagation from drastically decreasing the weight changes during training and keeps the constant error flow. This architecture lets LSTM to learn longer-term dependencies, the network can deal with unlimited number of states, and it generalises well (Hochreiter & Schmidhuber, 1997). In this study, the hyperopt technique (Bergstra, Yamins, & Cox, 2013) was used on validation dataset to determine the optimal hyper-parameters in the experiments. The following parameter grid was searched: number of neurons ranged from 10 to 60, number of epochs ranged from 40 to 100, batch size ranged from 128 to 512, dropout rate ranged from 0.1 to 0.5, recurrent dropout rate ranged from 0.1 to 0.5, while the choice for the activation function was between hyperbolic tangent, rectified linear unit (ReLU) and exponential linear unit (ELU). After 30 iterations the optimal parameters were found. A stacked LSTM with 4 layers and 40 neurons in each layer followed by a dense layer with 3 neurons (Fig. 1) was built. For the activation function the hyperbolic tangent was used while for weight initialisation the Xavier normal initialiser was used (Glorot & Bengio, 2010). During the training period, the optimal hyper-parameters were used, i.e., batch size was 128, dropout regularisation with the rate of 0.12, while the recurrent dropout rate was 0.25. This means that in each iteration some fraction of neurons were randomly deactivated, which helped to avoid overfitting and maintain a similar convergence rate of both training and validation errors over time. Training and validation procedure was done through 60 epochs with dropout and Adam optimiser, while mean absolute error (MAE) was selected as the loss function. The LSTM network was trained with meteorological data and prediction of soil moisture was done for three days ahead. Download : Download high-res image (140KB) Download : Download full-size image Fig. 1. Structure of a recurrent neural network used in the study. 2.3. Computational setup The study was implemented using Python and open-source libraries, including Keras library, commonly used for neural networks on top of TensorFlow, an end-to-end open-source machine learning platform. The network was compared to ARIMA (AutoRegressive Integrated Moving Average), a traditional statistical forecasting technique (Hewamalage, Bergmeir, & Bandara, 2021) and Random Forest (RF) (Breiman, 2001), a classical machine learning technique, which has been widely used in water science applications recently (Tyralis, Papacharalampous, & Langousis, 2019). All the models were trained for the period 2011–2016 and applied with the time step of three days. To build the models,daily values of meteorological variables from ERA5 were used. ARIMA was trained on individual time series of soil moisture, for each meteorological station separately. For this reason, the results of ARIMA predictions were averaged across all time series and a single value was obtained for each error metric. RF and LSTM used maximum and minimum 2 m temperature, total precipitation and vapour pressure deficit as the input data. Initially 60 input days were selected, which is taken from the literature (van den Hurk et al., 2012), although the performance of the network was tested with shorter time period of 45, 30 and 15 days. RF and LSTM were trained across the time series from all 28 meteorological stations jointly, whereas RF used the input data as a single vector while LSTM used four different time series (Fig. 2). Validation was done for the period 2017–2018 and, according to its mode of operation, the statistical model was retrained during the runtime, i.e., along the time series. The year 2017 in Serbia was warm and dry, with the summer drier than normal compared to the reference period 1981–2010 (HIDMET, 2018), which resulted in agricultural drought. The year 2018 was marked by several climatological records in Serbia: the warmest year since the record-keeping began (1951), the warmest spring and the warmest April, while on the other hand, the summer was wetter than normal, with a lot of precipitation in June and July (HIDMET, 2019). In order to test the predictive model with Yr weather forecast, instead of only the ERA5 data, a separate dataset that comprised of the ERA5 historical records and the Yr's three-day forecasts from September 2019 to April 2020 (Fig. 2) was formed. The results of the models were evaluated using MASE (Mean Absolute Scaled Error), SMAPE (Symmetric Mean Absolute Percentage Error) and MAE, metrics commonly used in the forecasting literature (Armstrong, 2001; Hewamalage et al., 2021; Hyndman & Koehler, 2006). Error metrics are given with the following equations: (2) (3) (4) where M stands for modelled and O for observed values (here referring to ERA5 data), n represents the number of samples, i refers to a specific sample, while the denominator in Eq. (2) is the MAE of the one-step “naïve forecast method”, which uses the actual value from the prior period as the forecast. MASE and SMAPE are dimensionless metrics while MAE has the same unit as considered variable, which is soil moisture in this case, given in m3 m−3. Download : Download high-res image (171KB) Download : Download full-size image Fig. 2. Schematic diagram of the input data structure for all the models, where ma is the number of days in soil moisture time series used in ARIMA, while m is the number of input days and n represents four input variables used in RF and LSTM. 3. Results An experiment was performed to train the LSTM model with different number of input days ranging from 15 to 60, with a 15-day step, in order to predict soil moisture three days ahead. The aim of the experiment was to examine if it is possible to decrease the time window of input data without compromising the quality of the prediction. However, validation showed that as the time window decreased, the error measures increased (Table 3). Thus, the initially selected value of 60 input days was opted. The same number of input days was used for training RF model as well. Table 3. Error measures averaged for all the stations (with standard deviation in round brackets) obtained for different number of input days used for training LSTM. Input days MASE SMAPE MAE 60 3.99 (1.28) 19.76 (9.10) 0.021 (0.006) 45 4.19 (1.35) 20.39 (8.10) 0.024 (0.006) 30 4.78 (1.35) 22.19 (8.80) 0.024 (0.006) 15 5.70 (1.49) 24.85 (9.02) 0.029 (0.006) The performance of the LSTM model was compared to RF and ARIMA, which were used as a benchmark and LSTM expressed the lowest error values (Table 4), with SMAPE less than 20%. Being a univariate method in which one model is built for each time series ARIMA has limited scaling potential and requires frequent retraining (Hewamalage et al., 2021). Theoretically, this univariate approach could be used, but only for the regular grid points of ERA5, although the fact that ERA5 data are available only with a delay of two months is making the traditional approach incapable for practical applications. On the other hand, the LSTM and RF models were trained across all time series and one general model was built in both cases, that could cover the whole region of interest. This model can thus be used at any location in Serbia with reliable weather data. However, RF as a method does not consider time sequence of the features, whereby the dynamics of atmospheric conditions is of great importance for soil moisture regimes, making LSTM a physically more realistic model. Table 4. Error measures averaged for all the stations (with standard deviation in round brackets) obtained for different prediction methods on the validation dataset. Method MASE SMAPE MAE ARIMA 10.72 (2.85) 123.49 (16.64) 0.055 (0.009) RF 5.93 (1.42) 25.88 (8.76) 0.031 (0.005) LSTM 3.99 (1.28) 19.76 (9.10) 0.021 (0.006) To discuss the significance of the error measures obtained for the different models, the range of soil moisture values given in Table 1 and shown in Fig. 3 has to be considered. For all the soil types, the range between minimum and maximum soil moisture is around 0.3 m3 m−3, although soils with coarse and medium texture have lower minimum values reaching 0.05 m3 m−3 while soils with fine texture have higher minimum values. Since MAE has the unit of m3 m−3, the same as soil moisture, it is the most suitable for comparison between the models. Average MAE for ARIMA is 0.055 (almost 20% of the range), for RF it is 0.031 (above 10% of the range) while for LSTM it is 0.021 (7% of the range), showing much better performance of LSTM when compared to ARIMA and slightly better performance when compared to RF, however this difference can be essential in the case of dry conditions, when soil moisture values are reaching the wilting point. Download : Download high-res image (259KB) Download : Download full-size image Fig. 3. Boxplot statistics of soil moisture from training dataset, for all the stations, grouped by the soil type. In this study, the predominant soil type had medium soil texture and 20 stations out of 28 belonged to the group 2 (Table 2). Nevertheless, for this soil type median of soil moisture varied a lot in the training dataset and the outliers with low values were present at five stations, which was particularly evident at station S9 (Fig. 3). Error measures for all the stations in Serbia are presented in Table 5. The highest MASE error was obtained for station S9 where the learning process of LSTM was clearly affected by the outliers. Another high error was obtained for station S11, whereby both stations belong to soil type with medium texture. For all other stations, the values of MASE were less than six and for some stations MASE was almost one. The range of MAE values was between 0.010 and 0.031, showing that LSTM was able to learn soil moisture dynamics for all the soil types at various altitudes, thus verifying the generalisation capability of the network. Table 5. Error measures for all the stations in Serbia obtained with the LSTM model on the validation dataset. Station code MASE SMAPE MAE S1 4.57 32.91 0.026 S2 4.74 30.97 0.029 S3 4.76 28.72 0.024 S4 5.33 29.34 0.023 S5 3.86 24.33 0.022 S6 3.97 33.16 0.025 S7 2.01 9.20 0.012 S8 5.11 25.85 0.022 S9 6.95 21.30 0.031 S10 3.27 22.37 0.019 S11 6.36 19.49 0.027 S12 3.09 13.15 0.019 S13 4.95 32.46 0.030 S14 4.46 23.92 0.027 S15 5.48 33.01 0.025 S16 1.55 5.74 0.011 S17 4.04 11.79 0.017 S18 1.56 5.83 0.010 S19 3.06 10.87 0.015 S20 3.45 10.32 0.014 S21 4.02 23.13 0.027 S22 2.82 9.49 0.014 S23 3.11 10.29 0.014 S24 3.65 15.03 0.016 S25 2.96 11.29 0.014 S26 4.53 27.21 0.025 S27 3.74 17.57 0.022 S28 4.24 14.59 0.017 The predictive system was tested from September 2019 until April 2020, and the results are presented in Table 6 and partially in Fig. 4. Soil moisture predictions using Yr's three-day forecasts (LSTM + Yr) and predictions with ERA5 data (LSTM) were compared to original reanalysis data of soil moisture (ERA5). Error measures were quite similar in both cases, having reasonably low values. The selected results are depicting soil moisture at four stations which belong to different soil types (Fig. 4), where S3 is 1, S7 is 2, S5 is 3 and S14 is 4 (Table 2). Visual inspection shows that the alignment between the values is notable, even though there are some “false” spikes in soil moisture when using Yr forecast due to the uncertainty coming from the weather forecast itself, especially at the end of the prognostic period. Table 6. Error measures averaged across all the stations (with standard deviation in round brackets) obtained for ERA5 test dataset and Yr weather forecasts. Empty Cell MASE SMAPE MAE LSTM 3.31 (1.22) 16.35 (6.76) 0.018 (0.007) LSTM + Yr 3.48 (1.18) 16.56 (6.33) 0.019 (0.006) Download : Download high-res image (264KB) Download : Download full-size image Fig. 4. Soil moisture predictions with LSMT compared to ERA5 data for stations with different soil type: a) S3, b) S7, c) S5 and d) S14. 4. Discussion The experts suggested that a national drought policy should be directed toward reducing the risk by raising the awareness with reliable information (Wilhite, 2011). Timely monitoring of the agricultural drought is extremely important for developing an early warning system which can minimise the losses due to drought (Boken, 2005). Satellite observations of surface soil moisture along with the calculated vegetation and water indices can be used in an effective way for monitoring dry conditions in the fields with proper spatial resolution (Chandrasekar, Sesha Sai, Roy, & Dwevedi, 2010), although the temporal resolution of five or more days and the presence of cloud cover can be a limiting factor. In this study, a data-driven system for calculation of soil moisture on a regional scale using open-source weather data was developed, which is able to provide timely information regardless of the atmospheric conditions. Shukla, McNally, Husak, and Funk (2014) developed a forecast system that simulates soil moisture scenarios using hydrological model which was run with seasonal climate scenarios for the upcoming growing season. The purpose of that system was to create an agricultural outlook of the drought in food-insecure regions of the developing world, although it was clearly affected by the uncertainty of seasonal forecasts (Doblas-Reyes et al., 2009). For that reason, the focus was on short-range weather forecasts, which have the lowest level of uncertainty, when considering different prognostic periods. Matei, Rusu, Petrovan, and Mihuţ (2017) developed a data mining system used for predicting soil moisture in some agricultural spots in Romania. It was built by using the data from 10 weather stations that measured air temperature, precipitation, soil temperatures at three depths and soil moisture at 10 cm depth. They tested several machine learning models and the best one had accuracy 74.36%. The current work obtained average MAE of 0.019 m3 m−3 while predicting soil moisture with LSTM using Yr weather forecasts (Table 6), which is around 6% of the range between minimum and maximum values of soil moisture, being approximately 0.3 m3 m−3 (Fig. 3). The proposed methodology will become operational through installation of 500 automatic weather stations across the fields in Serbia and further integration into AgroSense, the national platform for digital agriculture (www.agrosense.rs). The data will be used with the LSTM model to calculate the current level of soil moisture and, along with the weather forecast, to predict the future states. This methodology will be the cornerstone of the AgroSense service for irrigation scheduling, as an alarm for warning farmers to react in the case of risk of soil moisture declining to the permanent wilting point. 5. Conclusions In this study a LSTM network was developed to predict daily values of soil moisture in the second soil layer, for three days ahead. The input parameters used were the daily values of maximum and minimum air temperature, precipitation and vapour pressure deficit. For this purpose, an open-source data from ERA5 reanalysis for Serbia were used. Validation was performed for 2017 which had a dry summer and 2018 which had a wet summer. The overall performance of the network was characterised with much lower values of errors, when compared to ARIMA, a statistical forecasting technique, and Random Forest, a classical machine learning algorithm, thus verifying the prediction capabilities of the network for all soil types at various altitudes. The system was tested with Yr weather forecast and the predictions were in line with the ERA5 reanalysis data, proving the system's potential to be used by the farmers as an irrigation scheduling service, specifically for the drought conditions. Author contributions Nemanja Filipović: Formal analysis, Investigation, Validation, Visualisation; Sanja Brdar: Methodology, Writing - review & editing; Gordan Mimić: Conceptualization, Writing - original draft; Oskar Marko: Funding acquisition, Writing - review & editing; Vladimir Crnojević: Supervision. Declaration of competing interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgement This work was supported by DRAGON (Data Driven Precision Agriculture Services and Skill Acquisition) project funded from European Union's Horizon 2020 research and innovation programme under grant agreement no. 810775 and by the Ministry of Education, Science and Technological Development of the Republic of Serbia, grant no. 451-03-9/2021-14/200358. References Adeyemi et al., 2018 O. Adeyemi, I. Grove, S. Peets, Y. Domun, T. Norton Dynamic neural network modelling of soil moisture content for predictive irrigation scheduling Sensors, 18 (10) (2018) 3408, 1–22 Google Scholar Ahmad et al., 2016 N. Ahmad, M. Malagoli, M. Wirtz, R. Hell Drought stress in maize causes differential acclimation responses of glutathione and sulfur metabolism in leaves and roots BMC Plant Biology, 16 (247) (2016), pp. 1-15 CrossRefGoogle Scholar Armstrong, 2001 S.J. Armstrong Evaluating forecasting methods S.J. Armstrong (Ed.), Principles of forecasting, Springer, Boston, MA (2001), pp. 443-472 CrossRefGoogle Scholar Bergstra et al., 2013 J. Bergstra, D. Yamins, D.D. Cox Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures Proceedings of Machine Learning Research, 28 (1) (2013), pp. 115-123 View in ScopusGoogle Scholar Boken, 2005 V.K. Boken Agricultural drought and its monitoring and prediction: Some concepts V.K. Boken, A.P. Cracknell, R.L. Heathcote (Eds.), Monitoring and predicting agricultural drought: A global study, Oxford University Press, New York (2005), pp. 201-213 Google Scholar Breiman, 2001 L. Breiman Random forests Machine Learning, 45 (2001), pp. 5-32 Google Scholar Burkov, 2019 A. Burkov The hundred-page machine learning book Andriy Burkov (2019) Google Scholar C3S, 2017 C3S ERA5: Fifth generation of ECMWF atmospheric reanalyses of the global climate https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-single-levels?tab=overview (2017), Accessed 14th May 2020 Google Scholar Cai et al., 2019 Y. Cai, W. Zheng, X. Zhang, L. Zhangzhong, X. Xue Research on soil moisture prediction model based on deep learning PLoS One, 14 (4) (2019), Article e0214508 CrossRefView in ScopusGoogle Scholar Chandrasekar et al., 2010 K. Chandrasekar, M.V.R. Sesha Sai, P.S. Roy, R. Dwevedi Land surface water index (LSWI) response to rainfall and NDVI using the MODIS vegetation index product International Journal of Remote Sensing, 31 (2010), pp. 3987-4005 CrossRefView in ScopusGoogle Scholar Chen, 2016 G. Chen A gentle tutorial of recurrent neural network with error backpropagation ArXiv (2016) arXiv:1610.02583 Google Scholar Doblas-Reyes et al., 2009 F.J. Doblas-Reyes, A. Weisheimer, M. Déqué, N. Keenlyside, M. McVean, J.M. Murphy, et al. Addressing model uncertainty in seasonal and annual dynamical ensemble forecasts Quarterly Journal of the Royal Meteorological Society, 135 (643) (2009), pp. 1538-1559 CrossRefView in ScopusGoogle Scholar ECMWF, 2016 ECMWF IFS documentation - Cy41r2 https://www.ecmwf.int/en/publications/ifs-documentation (2016), Accessed 6th May 2020 Google Scholar Fernández and Clothier, 2009 J.E. Fernández, B.E. Clothier Agricultural sciences, Vol. 1, Eolss Publishers Co. Ltd., UK (2009) Google Scholar van Genuchten, 1980 M. van Genuchten A closed form equation for predicting the hydraulic conductivity of unsaturated soils Soil Science Society of America Journal, 44 (1980), pp. 892-898 CrossRefView in ScopusGoogle Scholar Glorot and Bengio, 2010 X. Glorot, Y. Bengio Understanding the difficulty of training deep feedforward neural networks 13th International Conference on Artificial Intelligence and Statistics (AISTATS) (2010), pp. 249-256 Google Scholar Goodfellow et al., 2016 I. Goodfellow, Y. Bengio, A. Courville Deep learning MIT Press (2016) Google Scholar Hewamalage et al., 2021 H. Hewamalage, C. Bergmeir, K. Bandara Recurrent neural networks for time series forecasting: Current status and future directions International Journal of Forecasting, 37 (1) (2021), pp. 388-427 View PDFView articleView in ScopusGoogle Scholar HIDMET, 2018 HIDMET Hydrometeorological service of Serbia, Annual Bulletin for Serbia 2017 http://www.hidmet.gov.rs/podaci/meteorologija/eng/2017.pdf (2018), Accessed 7th May 2020 Google Scholar HIDMET, 2019 HIDMET Hydrometeorological service of Serbia, Annual Bulletin for Serbia 2018 http://www.hidmet.gov.rs/podaci/meteorologija/eng/2018.pdf (2019), Accessed 7th May 2020 Google Scholar Hochreiter and Schmidhuber, 1997 S. Hochreiter, J. Schmidhuber Long short-term memory Neural Computation, 9 (8) (1997), pp. 1735-1780 CrossRefView in ScopusGoogle Scholar van den Hurk et al., 2012 B. van den Hurk, F. Doblas-Reyes, G. Balsamo, R.D. Koster, S.I. Seneviratne, H.J. Camargo Soil moisture effects on seasonal temperature and precipitation forecast scores in Europe Climate Dynamics, 38 (2012), pp. 349-362 CrossRefView in ScopusGoogle Scholar Hyndman and Koehler, 2006 R.J. Hyndman, A.B. Koehler Another look at measures of forecast accuracy International Journal of Forecasting, 22 (4) (2006), pp. 679-688 View PDFView articleView in ScopusGoogle Scholar Jimenez et al., 2019 A.F. Jimenez, B.V. Ortiz, L. Bondesan, G. Morata, D. Damianidis Artificial neural networks for irrigation management: A case study from Southern Alabama, USA J. Stafford (Ed.), Precision agriculture '19 (2019), pp. 657-664 CrossRefView in ScopusGoogle Scholar Junzeng et al., 2012 X. Junzeng, W. Qi, P. Shizhang, Y. Yanmei Error of saturation vapor pressure calculated by different formulas and its effect on calculation of reference evapotranspiration in high latitude cold region Procedia Engineering, 28 (2012), pp. 43-48 View PDFView articleGoogle Scholar Kamilaris and Prenafeta-Boldú, 2018 A. Kamilaris, F. Prenafeta-Boldú Deep learning in agriculture: A survey Computers and Electronics in Agriculture, 147 (2018), pp. 70-90 View PDFView articleView in ScopusGoogle Scholar Lobet et al., 2014 G. Lobet, V. Couvreur, F. Meunier, M. Javaux, X. Draye Plant water uptake in drying soils Plant Physiology, 164 (4) (2014), pp. 1619-1627 CrossRefView in ScopusGoogle Scholar Mannocchi et al., 2004 F. Mannocchi, F. Todisco, L. Vergni Agricultural drought: Indices, definition and analysis, Vol. 286, IAHS Publication (2004), pp. 246-254 View in ScopusGoogle Scholar Marsh, 2010 W. Marsh Landscape planning: Environmental application (5th ed.), Wiley, New Jersey (2010) Google Scholar Matei et al., 2017 O. Matei, T. Rusu, A. Petrovan, G. Mihuţ A data mining system for real time soil moisture prediction Procedia Engineering, 181 (2017), pp. 837-844 View PDFView articleView in ScopusGoogle Scholar Mihailović et al., 2016 D.T. Mihailović, N. Drešković, I. Arsenić, V. Ćirić, V. Djurdjević, G. Mimić, et al. Impact of climate change on soil thermal and moisture regimes in Serbia: An analysis with data from regional climate simulations under SRES-A1B The Science of the Total Environment, 571 (2016), pp. 398-409 View PDFView articleView in ScopusGoogle Scholar Mihailović et al., 2015 D.T. Mihailović, B. Lalić, N. Drešković, G. Mimić, V. Djurdjević, M. Jančić Climate change effects on crop yields in Serbia and related shifts of Köppen climate zones under the SRES-A1B and SRES-A2 International Journal of Climatology, 35 (2015), pp. 3320-3334 CrossRefView in ScopusGoogle Scholar Mimić et al., 2017 G. Mimić, D.T. Mihailović, D. Kapor Complexity analysis of the air temperature and the precipitation time series in Serbia Theoretical and Applied Climatology, 127 (2017), pp. 891-898 CrossRefView in ScopusGoogle Scholar Navarro-Hellín et al., 2016 H. Navarro-Hellín, J. Martínez-del Rincon, R. Domingo-Miguel, F. Soto-Valles, R. Torres-Sánchez A decision support system for managing irrigation in agriculture Computers and Electronics in Agriculture, 124 (2016), pp. 121-131 View PDFView articleView in ScopusGoogle Scholar Prakash et al., 2018 S. Prakash, A. Sharma, S.S. Sahu Soil moisture prediction using machine learning Second International Conference on Inventive Communication and Computational Technologies (ICICCT), IEEE (2018), pp. 1-6 Google Scholar Shukla et al., 2019 P.R. Shukla, J. Skea, R. Slade, R. van Diemen, E. Haughey, J. Malley, et al. Technical summary P.R. Shukla, J. Skea, E. Calvo Buendia, V. Masson-Delmotte, H.O. Pörtner, D.C. Roberts, et al. (Eds.), Climate change and land: An IPCC special report on climate change, desertification, land degradation, sustainable land management, food security, and greenhouse gas fluxes in terrestrial ecosystems, IPCC, Geneva, Switzerland (2019), pp. 37-74 Google Scholar Shukla et al., 2014 S. Shukla, A. McNally, G. Husak, C. Funk A seasonal agricultural drought forecast system for food-insecure regions of East Africa Hydrology and Earth System Sciences, 18 (2014), pp. 3907-3921 CrossRefView in ScopusGoogle Scholar Song et al., 2016 X. Song, G. Zhang, F. Liu, D. Li, Y. Zhao, J. Yang Modeling spatio-temporal distribution of soil moisture by deep learning-based cellular automata model Journal of Arid Land, 8 (2016), pp. 734-748 CrossRefView in ScopusGoogle Scholar Tyralis et al., 2019 H. Tyralis, G. Papacharalampous, A. Langousis A brief review of random forests for water scientists and practitioners and their recent history in water resources Water, 11 (5) (2019), p. 910, 10.3390/w11050910 View in ScopusGoogle Scholar Wilhite, 2011 D.A. Wilhite Quantification of agricultural drought for effective drought mitigation and preparedness: Key issues and challenges M.V.K. Sivakumar, R.P. Motha, D.A. Wilhite, D.A. Wood (Eds.), Proceedings of the WMO/UNISDR expert group meeting on agricultural drought indices, WMO, Geneva, Switzerland (2011), pp. 13-21 Google Scholar Zheng et al., 2019 W. Zheng, L. Zhangzhong, X. Zhang, C. Wang, S. Zhang, S. Sun, et al. A review on the soil moisture prediction model and its application in the information system D. Li, C. Zhao (Eds.), Computer and Computing Technologies in Agriculture XI, Springer International Publishing (2019), pp. 352-364 CrossRefView in ScopusGoogle Scholar Cited by (26) Prediction of ultimate bearing capacity of shallow foundations on cohesionless soil using hybrid LSTM and RVM approaches: An extended investigation of multicollinearity 2024, Computers and Geotechnics Show abstract A multihead LSTM technique for prognostic prediction of soil moisture 2023, Geoderma Show abstract Multiscale extrapolative learning algorithm for predictive soil moisture modeling &amp; applications 2023, Expert Systems with Applications Citation Excerpt : Extended historical data enabled us to considerably increase the size of the reliable training data and inform the AI models about the effects of climate extremes – that would likely be captured by longer records – on crop yields. Notably, different from other AI modeling efforts in soil science research used to estimate spatiotemporal variations in soil moisture near ground surface or in the root zone (Dursun & Özden, 2014; Elshorbagy & Parasuraman, 2008; Filipović et al., 2022; Gu et al., 2021; Im et al., 2016; Jamei et al., 2022; Kisekka et al., 2022; Nguyen et al., 2022; Srivastava et al., 2013; Wang, Fang et al., 2022; Wen et al., 2021), the MELA-XAI framework allowed us to extend temporally-limited pointwise (local) soil moisture data back in time at multiple soil depths and locations across a cropland to generate additional reliable data to train and test AI models. Thus, MELA-XAI emerged as a versatile predictive tool to overcome long-standing difficulties associated with short-term availability of local-scale soil moisture data in practice. Show abstract Experimental and computational assessment of wetting pattern for two-layered soil profiles in pulse drip irrigation: Designing a novel optimized bidirectional deep learning paradigm 2022, Journal of Hydrology Citation Excerpt : In the other case, DL remote sensing strategies and traditional neural networks (TNN) were employed to the estimation of the soil organic carbon (SOC) (Odebiri et al., 2021). Besides, a regional study based on the ERA5 climate product datasets aimed to multi-step ahead predicts the volumetric soil moisture at 28 locations of Serbia using a Long Short-Term Memory (LSTM) network (Filipović et al., 2022). Limited research has been conducted on wetting distribution patterns in layered-textural soil profiles. Show abstract Estimation of soil moisture from remote sensing products using an ensemble machine learning model: a case study of Lake Urmia Basin, Iran 2024, Earth Science Informatics Data Mining Approach to Predicting Soil Moisture Based on Meteorological Factors and Flow Rates 2024, Horticultural Science and Technology View all citing articles on Scopus © 2021 The Authors. Published by Elsevier Ltd on behalf of IAgrE. Recommended articles Long-term multi-step ahead forecasting of root zone soil moisture in different climates: Novel ensemble-based complementary data-intelligent paradigms Agricultural Water Management, Volume 269, 2022, Article 107679 Mehdi Jamei, …, Zaher Mundher Yaseen View PDF NemaNet: A convolutional neural network model for identification of soybean nematodes Biosystems Engineering, Volume 213, 2022, pp. 39-62 André Abade, …, Flávio de Barros Vidal View PDF Developing machine learning models with multisource inputs for improved land surface soil moisture in China Computers and Electronics in Agriculture, Volume 192, 2022, Article 106623 Lei Wang, …, Wen Zhuo View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 21 Captures Readers: 51 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply.

Paper 3:
- APA Citation: Pabitha, C., Benila, S., & Suresh, A. (2023). A digital footprint in enhancing agricultural practices with improved production using machine learning. SRM Valliammai Engineering College.
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: "A digital footprint in enhancing agricultural practices with improved production using machine learning" by Pabitha C. and Benila S. proposes a system that uses machine learning algorithms to analyze various data sources and predict crop yields, detect pests and diseases, and optimize irrigation schedules.
  Extract 2: Specifically, the paper explores the use of random forest algorithms for precision, site-specific irrigation management.
  Limitations: []
  Relevance Evaluation: 1.0: Exceptionally relevant - Comprehensively addresses all key aspects of the point and review.
  Relevance Score: 1.0
  Inline Citation: (Pabitha C  et al., 2023)
  Explanation: The paper "A digital footprint in enhancing agricultural practices with improved production using machine learning" by Pabitha C. and Benila S. proposes a system that uses machine learning algorithms to analyze various data sources and predict crop yields, detect pests and diseases, and optimize irrigation schedules. Specifically, the paper explores the use of random forest algorithms for precision, site-specific irrigation management.

Machine learning algorithms are trained on historical data to learn patterns and relationships between input features (such as weather, soil conditions, and crop growth stage) and desired outcomes (such as crop yield). Once trained, these algorithms can make predictions on new data, which can be used to optimize agricultural practices and improve crop yields.

The random forest algorithm is an ensemble algorithm that creates a multitude of decision trees, each trained on a different subset of the data. The algorithm then makes predictions by combining the predictions of all the individual trees.

The authors argue that random forest algorithms are well-suited for precision agriculture because they are able to handle large datasets, are robust to noise and outliers, and can provide feature importance, which can be used to identify the most important factors influencing crop yields.

The authors also provide a brief overview of the hardware and software technologies that are necessary for implementing machine learning algorithms in agricultural settings.

Overall, this paper provides a comprehensive overview of the use of machine learning algorithms for precision agriculture and highlights the potential benefits of using random forest algorithms for this purpose.

 Full Text: >
Page 1/20
A digital footprint in enhancing agricultural practices with improved
production using machine learning
Pabitha C  (  pabithac.cse@srmvalliammai.ac.in )
SRM Valliammai Engineering College
Benila S 
SRM Valliammai Engineering College
Suresh A 
SRM Institute of Science and Technology: SRM Institute of Science and Technology (Deemed to be University)
Research Article
Keywords: agriculture, digital footprint, arti¦cial intelligence, machine learning, random forest algorithm
Posted Date: July 31st, 2023
DOI: https://doi.org/10.21203/rs.3.rs-3137542/v1
License:   This work is licensed under a Creative Commons Attribution 4.0 International License.   Read Full License
Page 2/20
Abstract
Agriculture shows an important role in the enlargement of an economy. The proposed system explores how utilizing digital footprints might help improve
agricultural practices and production. Agricultural data is increasingly available in digital form because of the development of modern technology and the
spread of connected devices. These data can be utilized to produce digital footprints that document the whole lifecycle of agricultural production, from
planting to harvesting. Farmers may then decide when to sow, water, fertilize, and harvest their crops by using machine learning algorithms trained on these
digital footprints to spot patterns and forecast results. The study examines various machine learning methods that can be used to examine digital footprints
and shows the advantages of doing so, including higher yields, better resource management, and lower costs. The timing of crop planting, fertilization, and
harvest has long been determined by the agriculture sector using conventional techniques and experience. However, with the expansion of agricultural data
available, there is now a chance to use machine learning algorithms to recognize trends and forecast outcomes based on this data. This study explores the
potential of machine learning methods, particularly Random Forest optimization, to improve agricultural practices and boost output. The study uses Random
Forest optimization, a potent machine learning method that can examine massive datasets, to forecast crop yield based on many variables like weather
patterns, soil quality, and fertilizer application. The study's ¦ndings show how well the Random Forest optimization technique predicts crop productivity with
an accuracy of 99.97%. By giving farmers useful information about forecasting crop yields, they may increase their overall productivity by using their
resources wisely. The report also emphasizes the necessity of additional study and funding for the creation of machine learning algorithms that are
speci¦cally customized to the peculiarities of the agricultural sector, as well as the signi¦cance of data quality and privacy in the collecting and analysis of
agricultural data. A combination of hardware and software tools, including data collection sensors, data processing equipment, graphics processing units
(GPUs), cloud computing services, and mobile applications, will be needed for the hardware implementation of increasing agricultural practices in production
using machine learning with Random Forest optimization techniques.
I. INTRODUCTION
The practice of farming involves cultivating land, keeping animals, and creating food, ¦ber, and other goods that support human life. As a source of food and
raw materials for businesses that produce goods and services, it is a crucial sector of the economy. In many developing nations, since it is frequently the sole
source of income for rural communities, agriculture plays a signi¦cant role in the economies of those nations. Agriculture has a signi¦cant role in the nation's
GDP and export revenues in addition to producing food and raw materials. It advances the construction of rural infrastructure, provides cash, and offers
employment opportunities. The sustainability of the environment and rural development are also intimately related to agriculture. To address more general
economic and social problems like food security, poverty alleviation, and environmental sustainability, the agricultural sector is also crucial. Furthermore,
because higher productivity and e¨ciency can result in higher earnings and investments in other industries, agriculture may be a signi¦cant contributor to
economic growth. In summary, agriculture is an important economic sector that has an impact on society and the environment in addition to its economic
contribution [1]. Agriculture has been practiced for thousands of years, and over that period, it has undergone many changes. Scienti¦c techniques and
cutting-edge technology are used in modern agriculture to boost output and e¨ciency while reducing its negative effects on the environment. Agroforestry,
crop cultivation, and animal husbandry are some of the main agricultural activities. Food security, economic growth, and environmental sustainability all
suffer from the effects of agriculture. Millions of people all around the world, particularly in poor nations, depend on it greatly for their daily survival.
Sustainable agricultural practices are being created to make sure that agricultural activities meet the demands of the present without compromising the
capacity of future generations to meet their own needs [2]. The use of synthetic inputs like fertilizers, insecticides, and herbicides to boost crop yields is
referred to as conventional agricultural practices. These methods are based on monoculture farming, which is the practice of growing the same crop over and
over in a single ¦eld. Large pieces of equipment, irrigation infrastructure, and high-input agricultural methods de¦ne conventional agriculture. Even though
crop yields and food production have increased signi¦cantly thanks to conventional agriculture, the environment is still negatively impacted. When synthetic
inputs are used excessively, they can cause soil erosion, water pollution, and biodiversity loss. In addition, monoculture farming's reliance on crops makes
them more susceptible to pests and disease, which can cost farmers a lot of money [3]. With the help of recent advancements in technology and scienti¦c
knowledge, modern agricultural practices have undergone tremendous change. Farmers can now produce more food with fewer resources and less negative
environmental impact thanks to these practices. However, the sector faces several challenges that can have signi¦cant impacts on its productivity and
sustainability. Some of the challenges in agriculture include:
Climate Change: Climate change is a signi¦cant challenge facing agriculture, as it can affect crop yields and increase the incidence of pests and
diseases. Extreme weather events, such as droughts and §oods, can also impact agriculture and reduce crop productivity.
Limited Resources: Agriculture is dependent on several resources, including water, land,
and energy. However, these resources are becoming increasingly scarce due to factors such as population growth and urbanization. This can lead to comp
Soil Degradation: Soil degradation is a signi¦cant challenge facing agriculture, as it can reduce the productivity of farmland and affect crop yields. Soil
degradation can result from factors such as erosion, overuse of pesticides and fertilizers, and deforestation.
Pest and Disease Management: Pests and diseases can have a signi¦cant impact on crop yields, leading to reduced productivity and higher costs for
farmers. However, managing pests and diseases can be challenging, as it requires a comprehensive understanding of the pests and diseases and the
appropriate management strategies.
Access to Markets: Access to markets can be a signi¦cant challenge for farmers, particularly those in developing countries. Farmers may lack access to m
and transportation systems, which can limit their ability to sell their products and receive fair prices.
Labor Shortages: Labor shortages can be a signi¦cant challenge for farmers, particularly in developed countries. Labor shortages can lead to higher labor
costs and di¨culties in ¦nding workers to perform critical tasks such as planting and harvesting.
Financial Constraints: Farmers often face ¦nancial constraints, including limited access to
credit and high costs for inputs such as seeds, fertilizers, and machinery. These constraints can limit their ability to invest in their farms and increase their
Page 3/20
productivity.
Precision agriculture is one of the biggest innovations in contemporary agriculture. Data about soil conditions, crop development, and weather patterns are
collected using cutting-edge technologies like GPS, sensors, and drones. With the help of this knowledge, decisions about pest management,
fertilizer, irrigation, and planting may be made that will maximize yields and the e¨cient use of resources [4]. Genetically modi¦ed organisms (GMOs) are
another signi¦cant development in agriculture. To increase their resistance to pests, diseases, and environmental stressors, these crops have undergone
genetic engineering. As a result, farmers are now able to grow more food with fewer inputs like pesticides and herbicides.
The importance of sustainable agriculture is likewise rising as global concern over climate change and environmental degradation rises. Reduced soil erosion,
water conservation, and soil health are all bene¦ts of sustainable farming techniques like cover crops, crop rotation, and conservation tillage.
By storing carbon in the soil, they also aid in lowering greenhouse gas emissions. The mechanization of farms has also aided modern agriculture. Many
chores can now be automated by farmers, which lowers labor costs. Examples of advanced machinery include tractors, planters, and harvesters. Farmers can
now manage greater land areas, which has increased farming e¨ciency.
In summary, contemporary agricultural methods are crucial for feeding a growing world population while minimizing the negative effects on the environment.
The "World Population Prospects," makes predictions on population growth. The most recent edition of this report, which spans the years 1950 to 2100, was
released in 2019. According to the report, there were 7.7 billion people on the planet in 2019 and 9.7 billion are expected to live there by the year 2050 [5]. The
research also points out that although population growth rates have been falling since the 1960s, the overall number of people added to the world's population
every year has been rising. Farmers may continue to grow their food production while using fewer resources by utilizing technology, science, and sustainable
farming methods, ensuring the industry's viability. This is implemented using arti¦cial intelligence techniques as shown in ¦gure 1.
Arti¦cial intelligence (AI) is the period used to designate the capacity of machines to carry out tasks that would ordinarily require human intelligence to
complete, such as comprehending natural language, recognizing patterns, making judgment calls, and picking up knowledge from experience. The subject of
arti¦cial intelligence is expanding quickly, revolutionizing several industries and perhaps changing how we work and live [6]. Numerous applications, including
voice assistants, picture and speech recognition, natural language processing, and predictive analytics, currently make use of AI technology. It is also
employed in industries including manufacturing, transportation, banking, and healthcare, where it helps to increase productivity, lower costs, and increase
safety. However, the quick development of AI also prompts signi¦cant moral and societal issues. Concerns have been raised regarding how AI will affect
employment, privacy, and security, as well as the possibility that these technologies would help to reinforce prejudice and discrimination. It will be crucial to
address these concerns as AI technology develops and to make sure that it is created and applied in a way that bene¦ts society as a whole. Arti¦cial
intelligence (AI) is taking on a bigger and bigger role in agriculture by assisting farmers and other stakeholders in making better decisions and maximizing
their operations [7]. Crop observing, yield estimating, soil investigation, and pest controller are just a few of the applications of AI.
Agronomists may spot possible issues early and take action before they worsen by using crop monitoring, where AI analyses images captured by drones or
sensors to ¦nd changes in plant health or growth patterns. Based on data inputs like weather patterns, soil conditions, and previous yield data, AI- powered
yield prediction can assist farmers in estimating crop yields. Additionally, AI can identify and forecast the spread of pest outbreaks to assist in pest
management, analyze soil samples to evaluate nutrient content and provide fertilization suggestions.
In general, using AI in agriculture helps farmers increase their yields, cut costs, and encourage sustainable farming methods. It can transform how we cultivate
food and tackle some of the biggest issues confronting agriculture, such as food security and climate change. They are done using machine learning with
optimization algorithms. It is de¦ned as the branch of arti¦cial intelligence called "machine learning" which uses algorithms and statistical models to let
computers learn from data without having to be explicitly programmed. It is predicated on the premise that computers can discover patterns and reach
conclusions by examining massive amounts of data [8]. With the introduction of technology, especially the use of machine learning techniques, agriculture
has recently seen a substantial revolution. Since it can automate complicated activities and make predictions based on data, machine learning has grown in
popularity. Some of the causes for utilizing machine learning are as follows:
Automation: By automating time-consuming and repetitive processes, machine learning frees up human resources to work on tasks that are more
complicated and creative.
Forecasting and prediction: Machine learning models can be trained on historical data to create forecasts and predictions about future outcomes,
including consumer behavior, sales trends, and market prices.
Personalization: Machine learning can be used to customize user experiences, such as news feeds or product recommendations on e-commerce websites.
Fraud detection: By learning from trends in historical data, machine learning can be used to identify fraudulent transactions or activities.
Natural language processing: Chatbots, voice assistants, and other language-based applications can be made possible through machine learning when it
comes to analyzing and comprehending natural language.
Image and speech recognition: By using machine learning to identify patterns in images and audio, applications like facial and object identi¦cation and
voice-based user interfaces are made possible.
This study examines how digital footprints can improve farming practices and increase output. The process of transforming information from an analog to a
digital representation is referred to as digitalization. Then, utilizing electrical equipment and computer networks, this digital format may be stored, processed,
and sent. From the way we interact and consume information to the way we work and access healthcare, digitalization has drastically changed many facets
of our lives [9]. The term "digital footprint" describes the online tracks that a person or business leaves behind on the internet. The importance of having a
digital footprint in agriculture is rising as machine learning-enhanced production practices improve farming practices.
Page 4/20
Here are a few explanations:
Data Gathering: Digital footprints can be used to gather information on agricultural practices, including the usage of pesticides, irrigation systems, and
fertilizers. By using this information, it is possible to develop digital pro¦les of farms and produce insights that can be used to maximize agricultural
output. Then, by analyzing this data, machine learning algorithms may provide farmers with insights and suggestions for enhancing productivity.
Predictive Analytics: Machine learning algorithms can create predictions about crop yields, insect outbreaks, and weather trends using data from digital
footprints. This can assist farmers in choosing planting, irrigation, and pest management strategies with more knowledge, which can increase yield. With
precision agriculture, it is possible to construct computerized maps of farms that show regions with a particular need, such as nutrient shortages or pest
infestations. Then, using machine learning algorithms, production can be improved by reducing waste and using targeted applications of pesticides or
fertilizer, for example.
Crop Monitoring: Sensors, drones, or satellites can employ digital footprints to monitor crops in real time. The data can then be analyzed using machine
learning algorithms to give farmers information on the health and growth trends of their crops. This can assist farmers in identifying and addressing
problems like nutrient de¦cits or pest outbreaks early on, which can boost crop yields and lower losses.
The capacity to store and analyze enormous volumes of data rapidly and effectively is one of the main advantages of digitization. As a result, cutting-edge
¦elds like machine learning and arti¦cial intelligence have emerged, which generate predictions and judgments using vast volumes of data. It is now simpler
for people to work together across distances and time zones thanks to new kinds of communication and collaboration made possible by digitalization. Online
collaboration tools and remote work have grown in popularity over the past several years as a result of this. Agriculture and food production are being
revolutionized by digitalization [10]. It has the potential to boost productivity, cut expenses, and boost yields, ultimately resulting in more lucrative and
sustainable agriculture.
In the case of cash crops, digitalization has allowed farmers to more effectively track and manage their harvests from planting to harvest. Farmers can
monitor soil moisture, nitrogen levels, and other crucial factors thanks to technologies like precision farming and remote sensing, which improve crop yields
and cut expenses. Digitalization is assisting in addressing problems with food crops such as food waste and ine¨cient supply chains [11]. For instance, food
goods can be tracked using blockchain technology from farm to table, lowering the danger of contamination and enabling more effective recalls.
Agriculture and food production are being transformed overall by digitalization, becoming more effective, sustainable, and pro¦table for both farmers and
customers. We examine the application of machine learning algorithms in agriculture and how they might increase crop output and support farmers' decision-
making. We also look at the opportunities and problems associated with integrating digital footprints into agriculture and how that might result in sustainable
practices. The digital footprints that people leave behind when interacting with technology are referred to as digital footprints. Digital footprints in agriculture
can be used to gather information on farming methods, crop output, weather trends, and soil health. Machine learning algorithms can be created using this
data to enhance agricultural practices. For instance, information on weather patterns can be utilized to forecast crop output and determine the ideal time for
sowing. To utilize fertilizer and pesticides most effectively, data on soil health can be employed. Machine learning algorithms come in a variety of forms, such
as reinforcement learning, unsupervised learning, and supervised learning [12]. Unsupervised learning includes spotting patterns in unlabeled data, whereas
supervised learning uses labeled data to train a machine learning model. Due to its capacity to collect and analyze vast amounts of data to produce insights
that might assist farmers in making more informed decisions, machine learning is becoming more and more widely used in agricultural practices. The usage
of resources can be optimized, waste can be decreased, and crop yields can now be increased thanks to machine learning. Precision farming is one of the
most often used uses of machine learning in agriculture. Applying the appropriate inputs, such as fertilizer, herbicides, and water, at the appropriate time and
in the appropriate amount includes precision agriculture, which involves analyzing data to identify variability within a ¦eld. To assist farmers in making more
accurate judgments about how to manage their crops, machine learning algorithms can analyze data from sensors, satellite photos, and weather forecasts.
Predicting crop yields is another way that machine learning is used in agriculture. Machine learning algorithms can create predictive models that assist
farmers in estimating their yields for the current season by analyzing historical data on crop yields and weather trends. Making decisions about when to
harvest, when to sell, and how much to grow can be done using this information.
Plant disease management and identi¦cation can both be done using machine learning. Machine learning algorithms can detect illnesses and pests early on
by examining photographs of plants, allowing farmers to take preventative measures before serious damage is done. By doing this, you can increase crop
quality while using less pesticides. Machine learning can be used to enhance not only crop management but also animal management [13]. Machine learning
algorithms can aid farmers in identifying potential health issues and optimizing feeding and breeding schedules by analyzing data on animal behavior, such
as feeding patterns and mobility. Despite the potential advantages of integrating digital footprints in agriculture, there are still several issues that need to be
resolved. Data privacy and security are one of the di¨culties. Farmers' concerns about privacy and security may make them hesitant to share their data. The
absence of technology and data connectivity in rural places is another problem. The technology required to gather and analyze data may not be available to
farmers in remote locations.
This is implemented through Information and Communication Technology (ICT). By boosting output, boosting e¨ciency, and lowering environmental impact,
ICT has also signi¦cantly contributed to the transformation of agriculture. Using ICT in agriculture entails putting different digital technologies to use to help
agricultural practices such as precision agriculture, smart farming, and farm management systems. With the help of ICT tools like GPS, sensors, and drones,
farmers can monitor and analyze data on their crops and soil to make educated decisions about planting, fertilizing, and irrigation. Precision agriculture is a
growing ¦eld. In doing so, crop yields are improved while the consumption of resources like water and fertilizer is reduced. Automating various farming tasks,
such as planting, harvesting, and livestock monitoring, through the use of ICT tools like Internet of Things (IoT) sensors and machine learning algorithms is
known as smart farming. This might lower labor costs, boost productivity, and enhance farming techniques' precision.
Page 5/20
To handle several areas of farming, including inventory management, ¦nancial management, and supply chain management, farm management systems use
ICT tools like cloud-based software applications. This can facilitate operational simpli¦cation and enhance decision-making for farmers. In general, the
application of ICT in agriculture has the potential to revolutionize the sector by enabling more productive, e¨cient, and sustainable farming methods. The
major contributions of the proposed work include the following:
Improved Agricultural Practices: By introducing the use of machine learning algorithms in analyzing data gathered from various sources, such as weather
data, soil samples, and crop yields, the study may contribute to improving ag practices. Improved crop yields may arise from farmers making better
decisions about when to sow, irrigate, fertilize, and harvest their crops as a result.
Increased Crop productivity: By ¦nding ideal circumstances for crop development, recognizing and forecasting probable crop illnesses, and suggesting
the optimum fertilizers or pesticides employ, the implementation of machine learning techniques in agriculture may boost agricultural productivity.
Environmental Sustainability: By using fewer pesticides and fertilizers, improving irrigation techniques, and lowering crop waste, the paper may also help
to advance environmental sustainability.
Information Transfer: By presenting a framework for how machine learning might be used in the agriculture industry, the study may help spread
information and best practices. This might facilitate the understanding of the potential advantages of this technology by other researchers, practitioners,
and policymakers and promote its implementation.
In conclusion, the use of machine learning in agricultural practices is growing. Farmers can make better decisions, enhance yields, and save waste thanks to
its capacity to handle massive amounts of data and produce predictive models. Machine learning will likely play a bigger part in the future of agriculture as a
result of the ongoing improvement of technology.
II. SYSTEMATIC REVIEW
The proposed system paved way for smart farming. Using cutting-edge technology and data analytic methods, smart farming, sometimes referred to as
precision agriculture, aims to enhance farming practices, boost agricultural production, and lessen waste and environmental effects. Optimizing farming
operations like irrigation, fertilization, pest control, and crop management, entails the integration of numerous technologies like sensors, drones, GPS, and
arti¦cial intelligence (AI). To meet the increasing demand for food in a world that is changing quickly, smart farming aims to make agriculture more effective,
sustainable, and lucrative. Machine learning is one of these technologies; it uses algorithms to ¦nd patterns and insights in huge datasets. Machine learning
in agriculture offers the potential to increase agricultural productivity and support farmers' decision-making. This research examines how digital footprints can
be used to improve agricultural practices and increase output. Smart agriculture practices use a variety of technology to streamline farming processes,
increase yields, and cut waste. Among the most important technologies used in smart agriculture are:
Precision farming: To maximize crop productivity and reduce resource wastage, such as water, fertilizer, and pesticides, precision farming is a
sophisticated agricultural management method. Making educated judgments regarding planting, harvesting, and resource allocation entails gathering
and analyzing data about the state of the soil, weather patterns, crop growth patterns, and other pertinent elements. The GPS is one of the most important
technologies used in precision farming. (GPS). With the aid of GPS technology, farmers can follow their machinery in real-time
and keep an eye on the location and crop productivity. Making informed judgments about where to sow crops and how much fertilizer and water to use can be
done using this data. Additionally, GPS can be used to build ¦eld maps, which can be utilized to spot problem regions such as those with poor soil quality or
low crop yield. Another increasingly popular precision farming method is Variable Rate Technology (VRT). Farmers are now able to apply the exact amount of
pesticides, water, and fertilizer required for each ¦eld area thanks to VRT technology. By doing so, crop yields increase, waste is reduced, and money is saved
[14]. As an illustration, if a farmer uses VRT to apply fertilizer, the system can modify the amount applied following the crop's needs and the soil's
circumstances. The quality and production of the crops can be enhanced by making sure that the proper amount of fertilizer is applied to each section of the
¦eld. Remote sensing is a crucial tool for precision farming. The health of plants and the amount of moisture in the soil can be precisely determined using
remote sensing technology like satellite photography and drones. Utilizing this information will allow you to keep an eye on crop development and spot ¦eld
issues. The farmer can inspect the region and establish whether there is a pest infestation or a nutrient shortage, for instance, if a drone spots a patch of
fading plants. Precision farming also includes the use of precision irrigation systems. These systems optimize water use by using sensors and software to
make sure crops get the proper amount of water at the right time. Water waste is decreased, and crop quality is raised. For instance, a precision irrigation
system can automatically change the amount of water sprayed to a ¦eld's dry patches if it notices that the area is dry. In conclusion, precision farming
techniques are revolutionizing the agricultural sector by utilizing cutting-edge technology and data analytics to maximize crop output, improve crop quality, cut
down on resource waste, and boost e¨ciency and pro¦tability for farmers. Farmers may decide wisely about planting, harvesting, and resource allocation by
gathering and analyzing data on soil quality, weather patterns, and crop growth patterns. This can result in better outcomes for farmers as well as the
environment.
Internet of Things (IoT): The Internet of Things (IoT) is playing a progressively signi¦cant part in agriculture, allowing farmers to enhance their resources
and improve their yields while reducing costs and increasing e¨ciency. Here are some of how IoT is revolutionizing agriculture:
1. IoT sensors can be utilized in agriculture to gather information on soil moisture, temperature, and nutrient levels as well as weather, plant development, and
pest infestations. This information can be used to identify ¦elds that need attention, improve irrigation and fertilization schedules, and track crop health and
growth rates.
2. Livestock management: IoT sensors can be used to track a livestock's movement, observe its eating and drinking routines, and spot any irregularities that
would point to an ailment or injury. By using this information, feeding, and care schedules can be improved, disease outbreaks can be stopped, and overall
Page 6/20
animal health and production can be increased.
3. Supply chain management: From the farm to the consumer, IoT sensors may be utilized to track the movement of crops and livestock. Farmers and
distributors can bene¦t from this by maximizing logistics, cutting waste, and ensuring that goods are delivered to markets on schedule and in good shape.
4. Monitoring environmental conditions: IoT sensors can be used to keep an eye on things like air and water quality, weather patterns, and climate change.
This can assist farmers in selecting crops, timing plantings, and other agricultural practices that are in§uenced by environmental conditions.
5. IoT technology can be utilized to create autonomous farming systems, where robots and drones can take care of chores like planting, watering, and
harvesting crops. By doing so, the danger of human mistakes can be decreased while labor expenses can be decreased and productivity increased.
Big Data Analytics: Big data analytics in agriculture have the potential to change how farmers and agricultural enterprises conduct their operations.
Farmers may make more educated decisions that can result in higher yields, more e¨ciency, and lower costs by gathering, analyzing, and interpreting
vast amounts of data. Predictive insights are one of the main advantages of big data analytics in agriculture. Farmers can estimate future yields with
greater accuracy by looking back at historical data on weather patterns, soil characteristics, and crop performance. This can assist them in maximizing
planting schedules, selecting the crops that are most suited for a speci¦c site, and modifying their agricultural techniques to increase productivity.
Precision agriculture is another ¦eld where big data analytics can have a signi¦cant effect. Farmers can obtain comprehensive information about soil
moisture, nitrogen levels, and other environmental aspects that in§uence crop growth by employing sensors and other data-collection equipment. Making
decisions concerning irrigation, fertilizer application, and other farming-related issues will thus be easier with the aid of this knowledge [15]. Farmers may
use big data analytics to spot possible issues like pest infestations or crop diseases early on. Farmers can spot warning signs early on and take action
before the issue gets worse by analyzing data from sensors and other sources. Big data analytics in agriculture has the potential to greatly boost
productivity, lower costs, and raise yields. However, it necessitates a large investment in technology, data analytic skills, and a readiness to adopt novel
farming practices.
Robotics: Precision farming, harvesting, monitoring, and maintenance are just a few of the agricultural applications where robots are becoming more and
more crucial. Increased productivity is one of the key advantages of deploying robots in agriculture because they can operate around the clock and
reliably perform repetitive jobs. Robots can also lower labor costs, boost productivity, and enhance sustainability. Robots are having a big impact on
several industries, including precision farming. Robots can make accurate choices on planting, watering, fertilizing, and harvesting by gathering and
analyzing data on crops, soil, weather, and other aspects. Thus, waste is decreased, environmental sustainability is increased, and crop yields are
improved. Robots used for soil analysis, sensor-equipped drones, and self-driving tractors are a few examples of precision farming robots. Harvesting is
another industry where robots are having a big impact. Robots are being developed to pick fruits and vegetables, which can be a labor-intensive operation,
more effectively and precisely. Additionally, according to quality and other criteria, automated systems may sort and grade collected products. Due to their
ability to operate continuously, harvesting robots can speed up the process of getting crops to market. The usage of robots in agriculture also extends to
monitoring and maintenance. Robots can be employed to keep an eye on crop development and spot any issues like pests or illness. With the use of
sensors and other cutting- edge technology, this can be done, allowing farmers to act immediately to avoid crop loss. To eliminate the need for manual
labor, robots can also complete activities like irrigation, weeding, and trimming. In agriculture, autonomous vehicles are also becoming more prevalent
[16]. It is possible to carry crops and supplies as well as plant and harvest crops using self-driving tractors and other autonomous vehicles. This lowers
the demand for human labor and boosts productivity. Overall, the use of robots has the potential to revolutionize agriculture by increasing its productivity,
sustainability, and e¨ciency. Robots can assist farmers in meeting the rising need for food while minimizing the impact of farming on the environment by
lowering labor costs, boosting production, and improving sustainability. We may anticipate seeing even more cutting-edge agricultural robots produced as
technology develops.
Cloud Computing: Agriculture is seeing an increase in the importance of cloud computing, which bene¦ts farmers, academics, and other sector
participants in a variety of ways. Cloud computing is assisting in enhancing e¨ciency, production, and sustainability in agriculture through data
management and predictive analytics. Improved data management is one of the main advantages of cloud computing for agriculture. It can be di¨cult to
store and analyse the vast volumes of data
that farmers produce on their crops, soil, weather, and other variables [17]. By providing a safe and expandable platform for data processing and storing, cloud
computing offers a remedy. Farmers who use cloud-based solutions can access and analyse their data on any device, at any time, from anywhere. This
enables them to decide on planting, fertilizing, and harvesting more wisely, which increase agricultural yields and decrease can waste. Additionally, the use of
cloud computing improves communication between scientists and agronomists. Researchers can collaborate globally with co-workers and collaborators by
putting study data on the cloud and making it accessible to them. This might hasten agricultural research and development and result in fresh ideas for
managing crops, controlling pests, and other things. Predictive analytics is a bene¦t of cloud computing for agriculture as well. Farmers can utilize cloud-
based technologies to forecast agricultural yields by examining data on crop growth, weather patterns, and other variables. They can then modify their
planting and harvesting schedules as necessary. The risk of crop loss due to weather or other reasons can be reduced and resources may be used more
effectively as a result. In terms of sustainability, cloud computing also has advantages. Farmers can use cloud-based solutions to manage data and cut down
on the amount of paper and other physical resources required for data storage and analysis [18]. Farmers may also cut waste and make better use of
resources by employing predictive analytics to optimize agricultural yields. Overall, cloud computing is playing a signi¦cant role in agriculture, providing
advantages in terms of sustainability, cooperation, data management, and predictive analytics. We may anticipate seeing even more cutting-edge cloud-based
technologies created for use in agriculture as technology develops, assisting farmers to increase output, decrease waste, and satisfy the rising need for food.
Blockchain technology: To increase transparency, e¨ciency, and sustainability throughout the supply chain, blockchain technology is rapidly being
applied in agriculture. Blockchain technology can revolutionize business and provide farmers, consumers, and other stakeholders with a wide range of
advantages, from tracking food safety to expediting transactions. Improved traceability is one of the blockchain's main advantages in agriculture.
Farmers may follow their products from farm to table using blockchain-based technologies, giving consumers more details about the food's origins and
production processes [19]. Permitting quicker and more precise recalls in the event of contamination or another problem can assist boost consumer and
Page 7/20
farmer trust while also enhancing food safety. E¨ciency gains are another advantage of blockchain in agriculture. Farmers may cut down on the need for
middlemen and streamline the buying and selling of products by adopting blockchain-based technologies to coordinate transactions. Better outcomes for
both farmers and customers may result from this as it can lower costs and improve supply chain transparency. Blockchain can also aid increase
agricultural sustainability. Blockchain-based platforms can encourage more sustainable practices and decrease waste by enabling farmers to track the
environmental impact of their products. Blockchain can also encourage more sustainable production methods and lessen agriculture's impact on the
environment by giving consumers more information about the sustainability of the items they purchase. Smart contracts are one application of
blockchain in agriculture. The details of the agreement between the buyer and seller are directly encoded into lines of code in smart contracts, which are
self-executing contracts. This reduces the need for middlemen and can lower the possibility of fraud or disagreements. Smart contracts can be used to
automate transactions between farmers and purchasers in the agricultural industry, guaranteeing that both sides receive fair compensation and lowering
the possibility of payment delays or disagreements. By enhancing transparency, e¨ciency, and sustainability throughout the supply chain, blockchain
technology has the potential to fundamentally change the agricultural industry [20]. We may anticipate more e¨cient and sustainable agricultural
practices, which will bene¦t farmers, consumers, and the environment as more producers, retailers, and farmers implement blockchain-based systems.
III. OVERVIEW OF MACHINE LEARNING
Machine learning (ML) is increasingly being used to improve agricultural practices, by enabling farmers and agriculture professionals to optimize operations,
increase productivity, and reduce waste. The use of ML in agriculture can include tasks such as crop yield prediction, pest and disease detection, precision
agriculture, and livestock management. By leveraging advanced algorithms and data analytics, ML is helping to revolutionize the agricultural sector, improving
the e¨ciency and sustainability of food production. This is implemented using an optimization algorithm. Random Forest is a machine learning algorithm
that can be used to enhance productivity in agriculture by analyzing large amounts of data and providing valuable insights into crop production. The
algorithm works by creating multiple decision trees, each of which independently analyzes a subset of the data [21]. The results of these trees are then
combined to make a more accurate prediction. Certainly, the following ¦ve categories are employed in agriculture to boost production using machine learning
as shown below in Fig. 2:
A brief overview of machine learning:
The development of models to mimic human learning and decision-making can be credited with giving rise to machine learning in the 1940s and 1950s. The
creation of the perceptron algorithm by Frank Rosenblatt in 1957 is one of the early instances of machine learning. A particular kind of arti¦cial neural network
known as a perceptron was capable of learning to divide inputs into two categories using a set of weights and biases. The development of decision trees and
rule-based systems in the 1960s and 1970s contributed to the advancement of machine learning research [22]. These techniques were used to create expert
systems that can decide based on a set of guidelines and information. Machine learning began concentrating on statistical techniques and algorithms in the
1980s and 1990s, like logistic regression and linear regression. Classi¦cation, regression, and clustering challenges all used these techniques. Machine
learning regained prominence in the 2000s with the rise of big data and improvements in computing power [23]. Numerous new methods, including deep
learning and reinforcement learning, have been created and used in a variety of ¦elds, such as autonomous cars, natural language processing, and picture
identi¦cation. Machine learning is still a discipline that is quickly developing today, with new methods and programs being created and used in sectors
including healthcare, ¦nance, and cyber security.
Following are the steps that machine learning uses to operate:
1. Data Gathering: Gathering pertinent data from diverse sources is the initial stage in machine learning. Depending on the issue at hand and the desired
solution, this data may be presented in either structured or unstructured form.
2. Data processing: After the data has been gathered, it must be prepared for analysis. To prepare the data for use by machine learning algorithms, the data
must be cleaned, missing values must be removed, and any outliers must be removed.
3. Feature extraction: The process of selecting and engineering relevant features from the data aims to provide new features that may be more advantageous
for machine learning algorithms.
4. Model Selection: After the data is ready, the type of problem being tackled is taken into consideration and a suitable machine learning technique is selected.
supervised learning, unsupervised learning, and reinforcement learning are some examples of this.
5. Training the Model: Using the prepared data, the selected machine learning method is then practiced. To reduce the error between the projected output and
the actual output, the algorithm makes adjustments to its parameters as it learns from the data during training.
6. Model Evaluation: After the model has been trained, its generalizability to fresh, unexplored data is assessed using a variety of performance criteria.
7. Model tuning: Depending on the results of the evaluation, the performance of the model may need to be improved by modifying its hyper parameters or by
employing a new algorithm.
8. Model deployment: The model can be deployed in a production environment to make predictions on new data after it has been trained and tweaked.
9. Monitoring and Maintenance: To ensure that machine learning models continue to perform well over time, it is necessary to monitor and maintain them.
This entails keeping an eye out for data changes, frequently retraining the model, and making adjustments as necessary.
Machine learning is an iterative process, thus when the model is created and applied, some steps might need to be repeated or improved. Depending on the
type of problem being handled, numerous metrics can be used to assess how well machine learning models perform. The main objective of assessing a
machine learning model's performance is to ¦nd out how effectively it generalizes to new, untried data. Random Forest is a machine learning algorithm that
can be used in agriculture to predict crop yield. It works by creating an ensemble of decision trees, where each tree is trained on a random subset of the data
and a random subset of the features [24]. In the context of agriculture crop yielding, the algorithm can be used to predict the yield of a particular crop based on
Page 8/20
a variety of input variables such as weather patterns, soil quality, seed varieties, and management practices. To use the algorithm for crop yield prediction,
historical data on crop yields and the corresponding input variables are used to train the model. Once the model is trained, it can be used to predict the yield of
a new crop based on the input variables provided. The random forest algorithm is particularly useful for agriculture because it can handle a large number of
input variables and can also capture complex interactions between the variables that may be di¨cult to identify using traditional statistical methods [25].
Additionally, the algorithm is robust to noisy data and missing values, making it suitable for real-world agricultural data. Overall, the random forest algorithm
can be a powerful
tool for predicting crop yields in agriculture and can help farmers make informed decisions about crop management and resource allocation. Here are a few
typical metrics for assessing machine learning models:
Accuracy: This gauges the percentage of instances that were correctly classi¦ed out of all the instances. For classi¦cation issues, it is frequently
employed.
Precision is the percentage of all accurately identi¦ed positive instances (also known as true positives) among all positive predictions. It is bene¦cial in
situations when the expense of false positives is large, like in medical diagnostics.
Recall: In case you forgot, this quanti¦es the percentage of real positives among all positive results. It helps identify fraudulent transactions when the cost
of false negatives is signi¦cant.
F1 Score: When false positives and false negatives are equally essential, this score—which is the harmonic mean of precision and recall—is helpful.
Mean Squared Error (MSE): For regression issues, this statistic is frequently utilized. The average squared difference between the expected and actual
values is what is measured.
Since it is expressed in the same units as the target variable, the Root Mean Squared Error (RMSE), which is the square root of the MSE, is a more
understandable statistic.
R-squared (R2): This indicator shows how much of the target variable's variance the model can account for. A better ¦t is indicated by higher values,
which range from 0 to 1.
Depending on the problem being solved, it is crucial to utilize the right evaluation criteria when assessing a machine learning model's performance. To make
sure the model can generalize to new data, it's also critical to assess the model's performance on a different test set. The trade-off between model complexity
and performance is also crucial to take into account because more complex models may over¦t training data while underperforming on fresh data [26].
In general, machine learning models can be divided into three groups based on the kind of learning that they employ:
Supervised Learning: In supervised learning, the target variable is known and the computer is trained on a labelled dataset. To make precise predictions
on fresh, unforeseen data, the model must learn the link between the input features and the target variable.
Unsupervised Learning: In unsupervised learning, the goal variable is unknown and the machine is trained on an unlabelled dataset. The model's objective
is to identify structures, correlations, and patterns in the data without receiving any direct instruction or feedback.
Reinforcement Learning: In reinforcement learning, a machine learns by doing things incorrectly, interacting with its environment, and receiving feedback
in the form of rewards or punishments. The ideal policy, which maximizes the cumulative reward over time, is what the model seeks to learn. In robots,
video games, and control systems, this kind of learning is frequently employed.
The following categories are used to enhance productivity in agricultural sectors evolving machine learning techniques:
Crop prediction: Choosing which crops to grow, when to plant them, and how to maximize their production all depend on crop prediction, which is a crucial
component of agriculture. To ¦nd trends and create precise predictions, machine learning (ML) approaches have shown considerable promise in the ¦eld of
crop forecasting. The gathering and pre-processing of data is the ¦rst stage in crop prediction using ML. This entails compiling information on many
elements, such as weather patterns, soil quality, and the type of crop planted, that may have an impact on crop development [27]. The data is then pre-
processed to clean out any errors or noise and to make sure that it is in a format that ML algorithms can use. The pre-processed data is then subjected to ML
algorithms to ¦nd patterns and generate predictions. Several ML methods, such as decision trees, random forests, support vector machines (SVM), and
arti¦cial neural networks, can be applied to crop prediction. (ANN). Each algorithm has its advantages and disadvantages, and the best one to use depends on
the particulars of the problem at hand. The ML algorithm can be used to generate predictions on new data after being trained on existing data. For instance, a
farmer can input information on the weather, soil quality, and other parameters to predict the yield of a speci¦c crop in a given season, and the ML algorithm
will then do so [28]. The ability to maximize crop yield and minimize waste is one of the main advantages of utilizing ML for crop prediction. ML algorithms
can detect the ideal circumstances for crop growth and suggest adjustments to planting plans, irrigation schedules, and other practices to maximize yield by
analysing data on the elements that affect crop growth. The ability to lower the risk of crop failure for farmers is another advantage of utilizing ML for crop
prediction. Farmers can take proactive steps to minimize or lessen the impact of crop failure by utilizing pest-resistant crops or modifying planting dates by
forecasting the possibility of crop failure based on factors such as weather conditions, soil quality, and disease outbreaks. In conclusion, crop prediction using
machine learning has the potential to completely transform the agricultural industry by empowering farmers to make data-driven decisions that maximize
crop output and minimize risk [29]. To accurately anticipate crop production and assist farmers in choosing planting techniques, irrigation schedules, and
other practices that in§uence crop growth, machine learning (ML) systems analyse vast volumes of data and look for trends. It is expected that ML technology
will become more and more signi¦cant as it develops in agriculture and other sectors of the economy.
Plant disease detection: Farmers and the agriculture sector are very concerned about plant diseases. They can lower crop quality and result in considerable
yield losses, which might result in ¦nancial losses. To reduce these losses, early plant disease detection and prevention are essential. To forecast plant
Page 9/20
diseases and provide prompt intervention to stop their spread, machine learning approaches can be helpful. Data collection is the ¦rst step in the machine
learning process used to predict plant diseases. This entails gathering information on the plant species, its growth stage, the type of disease, and climatic
factors including temperature, humidity, and rainfall. Sensors, drones, satellite photography, and human observation can all be used to gather data [30]. Once
the data is collected, it is pre-processed to remove noise, handle missing values, and normalize the data. Feature engineering is then performed to extract
relevant features from the data that can be used to train the machine learning model. The extracted features may include plant morphology, texture, color, and
shape, as well as environmental factors such as temperature and humidity. Various machine learning algorithms can be used for plant disease prediction,
including decision trees, random forests, support vector machines, and deep learning models such as convolutional neural networks. The choice of algorithm
depends on the size and complexity of the dataset and the accuracy required for prediction. The trained model is then tested on a separate dataset to evaluate
its accuracy and performance. This is done by splitting the data into training and testing sets, with the majority of the data used for training the model and a
smaller subset used for testing. A map displaying the location and severity of the disease or an alert system notifying farmers when the sickness is found are
just two examples of how the model's results can be displayed to the user. Using this knowledge, preventive steps can then be taken, such as applying
fungicides or removing affected plants [31]. Machine learning- based plant disease prediction has several advantages over conventional disease detection
techniques. By enabling early illness identi¦cation, it can lessen the need for expensive and time-consuming manual checks. Additionally, it can assist farmers
in deciding when and where to apply fungicides and other
treatments, minimizing the amount of chemicals needed and the negative effects on the environment. In conclusion, predicting plant diseases using machine
learning is a potential strategy that can help to lower crop losses and improve agricultural practices. The right machine learning algorithms must be chosen,
together with careful data gathering, pre-processing, and feature engineering. Machine learning can deliver precise and timely predictions of plant illnesses
with the correct methods and equipment, allowing farmers to take preventative measures to save their crops [32]. In conclusion, predicting plant diseases
using machine learning is a potential strategy that can help to lower crop losses and improve agricultural practices. The right machine learning algorithms
must be chosen, together with careful data gathering, pre- processing, and feature engineering. Utilizing the appropriate methods and resources, machine
learning.
Weed detection: Weed detection using machine learning is a rapidly developing ¦eld that has the potential to revolutionize the way we manage agriculture. In
traditional agriculture, weed management is time- consuming and labour-intensive, often requiring the use of herbicides, which can have negative
environmental impacts. Machine learning-based weed detection offers an alternative solution, using computer vision and machine learning algorithms to
identify and map weeds in real time. One of the key advantages of machine learning-based weed detection is its ability to process large amounts of data
quickly and accurately. This is achieved by training machine learning algorithms on large datasets of images of crops and weeds [33]. These datasets are
typically labelled to identify which pixels correspond to crops and which correspond to weeds, allowing the machine learning algorithm to learn to distinguish
between the two. The training data is fed into a machine learning model, which then uses this data to create a model that can recognize patterns in new
images. When new images of crops are input into the model, the machine learning algorithm can quickly identify which pixels correspond to weeds and which
correspond to crops. This information can then be used to create a map of weed distribution across a ¦eld. Several challenges must be addressed when
developing a machine learning-based weed detection system. One of the key challenges is ensuring that the system is robust to changes in lighting conditions
and other environmental factors. This can be achieved by using a combination of image processing techniques and machine learning algorithms to pre-
process images before they are input into the weed detection model [34]. Another challenge is ensuring that the system can generalize to new images that it
has not seen before. This can be achieved by using a combination of data augmentation techniques and transfer learning, which involves using a pre-trained
model as a starting point for training a new model on a smaller dataset. Several different types of machine learning algorithms can be used for weed
detection, including convolutional neural networks (CNNs), support vector machines (SVMs), and decision trees. Each of these algorithms has its strengths
and weaknesses, and the choice of algorithm will depend on the speci¦c requirements of the application [35]. In conclusion, weed detection using machine
learning has the potential to revolutionize agriculture by providing a fast, accurate, and environmentally friendly alternative to traditional weed management
techniques. While there are still several challenges that must be addressed, advances in computer vision and machine learning are making this technology
increasingly accessible to farmers and researchers alike.
Crop yield prediction: Crop yield prediction is a crucial task in agriculture as it helps farmers and agricultural experts to make informed decisions about crop
production, resource management, and market supply. Traditionally, crop yield prediction has been done using various statistical models and methods, but
with the recent advancements in machine learning, it has become possible to predict crop yields more accurately using data-driven approaches. Machine
learning has proven to be a valuable tool in agriculture and has the potential to revolutionize the industry by making it more e¨cient and sustainable. The
main objective of crop yield prediction using machine learning is to develop models that can accurately estimate the yield of a particular crop in a speci¦c
area based on various factors such as weather conditions, soil properties, and agricultural practices. Machine learning models for crop yield prediction
typically use large datasets of historical weather and crop data to train the model and make predictions for the future. One of the most common approaches
for crop yield prediction is supervised learning, where the model is trained using labelled data, which includes both input features (such as temperature,
rainfall, and soil type) and
the corresponding crop yield. Supervised learning algorithms such as regression, decision trees, and neural networks are commonly used for crop yield
prediction [36]. These algorithms can learn the relationship between the input features and the output variable (crop yield) and make accurate predictions for
new data. Another approach for crop yield prediction is unsupervised learning, where the model is trained on unlabelled data to identify patterns and
relationships in the data. Clustering algorithms such as k-means clustering and hierarchical clustering are commonly used in unsupervised learning for crop
yield prediction. These algorithms can group similar data points based on their characteristics and help identify areas with similar crop yield patterns. In recent
years, deep learning algorithms such as convolutional neural networks (CNNs) and recurrent neural networks (RNNs) have been applied to crop yield
prediction. CNNs are particularly useful for analysing spatial data such as satellite images to identify crop types, growth stages, and yield potential [37]. RNNs
are well-suited for time series data such as historical weather data, which can be used to predict future weather patterns and their impact on crop yields.
Page 10/20
One of the key challenges in crop yield prediction using machine learning is the availability and quality of data. Historical weather and crop data may not be
readily available or may be incomplete, making it di¨cult to train accurate models. Moreover, the data may be biased or outdated, leading to inaccurate
predictions. Another challenge is the interpretation of the machine learning models, which can be complex and di¨cult to understand for non-experts.
Therefore, it is important to have a clear understanding of the data and the machine learning models used for crop yield prediction. In conclusion, crop yield
prediction using machine learning is a promising approach to improving the e¨ciency and sustainability of agriculture. With the right data and machine
learning models, it is possible to accurately predict crop yields and make informed decisions about crop production and resource management. However, there
are challenges in data availability, model interpretation, and practical implementation that need to be addressed to fully realize the potential of machine
learning in agriculture.
Farm management: Farm management is a complex process that involves numerous tasks, such as planting, harvesting, pest control, and irrigation, among
others. With the advent of machine learning and arti¦cial intelligence, farmers can use technology to optimize their operations and improve their yield.
Machine learning is a subset of arti¦cial intelligence that enables computer systems to learn from data and make predictions or decisions based on that data.
In the context of farm management, machine learning can be used to analyze various data sources, including weather patterns, soil conditions, and crop
growth, among others. One way in which machine learning can be used in farm management is by analysing satellite imagery to monitor crop health and
growth. By analyzing changes in vegetation density and color, machine learning algorithms can predict crop yields, identify areas of the farm that require
attention, and provide recommendations for irrigation and fertilization [38]. Another application of machine learning in farm management is in predicting
weather patterns and their impact on crop growth. By analyzing historical weather data and current weather patterns, machine learning algorithms can predict
future weather patterns and provide farmers with recommendations on how to adjust their operations to minimize the impact of adverse weather conditions.
In addition, machine learning can be used to optimize irrigation and fertilization schedules by analyzing soil data and plant growth patterns. By analyzing the
nutrient content of the soil and the growth rate of the plants, machine learning algorithms can provide farmers with recommendations on the optimal amount
and timing of irrigation and fertilization. Machine learning can also be used to predict pest and disease outbreaks and provide farmers with recommendations
on how to prevent or mitigate them [39]. By analyzing historical data on pest and disease outbreaks, as well as current weather and soil conditions, machine
learning algorithms can predict the likelihood of an outbreak and provide farmers with recommendations on how to prevent or mitigate it. In conclusion,
machine learning has the potential to revolutionize farm management by providing farmers with valuable insights and recommendations on how to optimize
their operations and improve their yield. By analyzing various data sources, including weather patterns, soil conditions, and crop growth, machine learning
algorithms can provide farmers with
recommendations on irrigation, fertilization, pest control, and other key aspects of farm management, enabling them to make more informed decisions and
improve their bottom line [40]. There are several advantages of using machine learning in agriculture, some of which include:
Increased E¨ciency: Machine learning algorithms can help farmers and other agriculture stakeholders optimize their operations by reducing the time and
effort required to perform tasks such as crop monitoring, disease detection, and yield forecasting. This can help to increase overall e¨ciency and reduce
costs.
Improved Crop Yields: Machine learning algorithms can help farmers predict crop yields by analyzing a wide range of data, including weather patterns, soil
moisture, and historical crop yields. By predicting yields more accurately, farmers can make better decisions about when to plant and harvest crops, leading to
increased yields.
Enhanced Resource Management: Machine learning algorithms can help farmers manage resources such as water, fertilizer, and pesticides more e¨ciently.
By analyzing data on crop growth and soil conditions, these algorithms can optimize resource usage, reducing waste and maximizing productivity.
Early Disease Detection: Machine learning algorithms can analyze data from sensors and other sources to detect signs of plant diseases early. This allows
farmers to take proactive measures to prevent the spread of disease, minimizing the impact on crop yields.
Precision Agriculture: Machine learning can help farmers to target speci¦c areas of their ¦elds that require more attention, allowing for more precise
application of resources such as fertilizer and pesticides. This can reduce waste and improve overall crop health.
Overall, the use of machine learning in agriculture has the potential to revolutionize the way that crops are grown and managed, leading to more e¨cient,
sustainable, and productive farming practices.
IV. PERFORMANCE ANALYSIS OF THE PROPOSED SYSTEM
The proposed system involves machine learning with random forest optimization to detect various parameters such as crop yield, disease prediction, weed
detection, etc. The proposed system is shown in ¦gure 3.
1. Data gathering: Data gathering is an essential step in machine learning, and it is particularly crucial when building a model to detect crop yield using the
random forest algorithm. The quality and quantity of data used to train the model can signi¦cantly affect its accuracy and ability to make accurate
predictions. To gather data for crop yield detection using random forests, one must collect data on various environmental factors that affect crop growth and
yield, such as soil type, temperature, rainfall, sunlight, and fertilizers used. The data must be collected from different farms, regions, and seasons to ensure a
diverse dataset. Once the data is collected, it must be preprocessed, cleaned, and prepared for training the random forest model. The dataset should be split
into training, validation, and testing sets to prevent over¦tting and ensure the model's generalizability. The random forest algorithm is a powerful tool for crop
yield detection as it can handle high- dimensional datasets with non-linear relationships between variables. It works by creating multiple decision trees and
combining them to make predictions. Each tree is trained on a random subset of the features and a subset of the training data to reduce the risk of over¦tting
Page 11/20
[41]. Overall, data gathering is a critical step in machine learning using the random forest algorithm to detect crop yield. By collecting high-quality and diverse
data, preprocessing it, and training the model, we can accurately predict crop yield and optimize farming practices for improved crop production. The predicted
data set is observed from a village to detect the crop yield as shown in ¦gure 4. At the settlement, the information is taken into account as latitude varies from
place to place. To operate the system, information on the crop, the climate in a speci¦c village, and the region are three necessary elements.
1. Data processing: In machine learning, data processing is a critical stage that involves transforming raw data into a format that can be easily analysed by
algorithms. The data processing stage typically includes several steps, such as data cleaning, data transformation, feature extraction, and data splitting. Data
cleaning involves removing any irrelevant or duplicate data, correcting errors, and handling missing data. Data transformation involves scaling, normalizing, or
encoding the data to ensure that it is in a standardized format. Feature extraction involves selecting the most relevant features that have a strong correlation
with the target variable [42]. After completing these steps, the data is usually divided into training, validation, and testing sets. The training set is used to train
the machine learning model, while the validation set is used to evaluate the model's performance during training. Finally, the testing set is used to evaluate the
model's performance on unseen data. Overall, the data processing stage is essential for ensuring the quality of the data and the accuracy of the machine
learning model [43]. Proper data processing can lead to better model performance, faster training times, and more accurate predictions. The testing and
training phase is implemented in Matlab as shown below:
2. Feature extraction: A crucial stage in machine learning is feature extraction, which entails choosing and manipulating pertinent information from raw data
to produce instructive features for predictive models. Features like soil type, weather patterns, and crop health can all be identi¦ed and studied using feature
extraction techniques to increase production in agriculture [44]. Some common techniques for feature extraction in agriculture include:
Remote sensing: Using satellites or drones to capture images of crop ¦elds, which can then be analysed to extract features such as vegetation index,
crop growth stage, and soil moisture.
Sensor data: Collect data from sensors such as soil moisture sensors, temperature sensors, and weather stations to extract features such as
temperature, humidity, rainfall, and soil nutrients.
Data fusion: Combining data from multiple sources, such as remote sensing and sensor data, to create more informative features for predictive modelling.
Data pre-processing: Transforming raw data into more useful features, such as scaling, normalization, and dimensionality reduction techniques. By using
feature extraction techniques in agriculture, machine learning models can be trained to predict crop yields, identify areas for improvement, and optimize
resource allocation, leading to improved productivity and pro¦tability for farmers.
3. Model selection: Model selection is an important step in machine learning in agriculture to improve productivity. It involves choosing the most appropriate
machine learning algorithm and model for a speci¦c agricultural problem. Here are some key considerations for model selection in agriculture:
Data quality: The quality and quantity of data available are critical for selecting an
appropriate machine learning algorithm and model. Ensure that the data is representative, unbiased, and of high quality.
Complexity: Agricultural systems can be complex, with many variables and interactions. Consider the complexity of the problem when selecting a model.
Simple models such as linear regression may work for simple problems, while more complex models such as neural networks or decision trees may be needed
for more complex problems. Interpretability: Interpretability is important in agriculture, as it allows for the understanding of the model's decision-
making process. More interpretable models, such as decision trees, may be preferred over less interpretable models such as neural networks.
Performance: The performance of the model is a key consideration. Evaluate the model's performance using appropriate metrics such as accuracy, precision,
recall, and F1 score. Consider the trade-off between model performance and interpretability.
Scalability: Consider the scalability of the model, as agricultural systems often involve large amounts of data. Models that can handle large volumes of data,
such as deep learning models, may be preferred. Overall, selecting the right machine learning model can help improve agricultural productivity by enabling
better decision-making, predicting crop yields, detecting disease outbreaks, and optimizing resource allocation. Here random forest algorithm is initiated to
enhance productivity.
4. Optimization algorithm: Random Forest is a machine-learning algorithm that can be used for classi¦cation and regression tasks. While it can be applied to
various ¦elds, including agriculture, it is not speci¦cally designed to extract maximum yield in agriculture. That being said, Random Forests can be used in
agriculture to make predictions based on input variables such as soil type, weather conditions, and crop variety. For example, a Random Forest model could be
Page 12/20
trained to predict crop yield based on factors such as temperature, rainfall, soil pH, and fertilizer application rates. The model could then be used to optimize
crop management decisions, such as adjusting irrigation schedules, choosing optimal planting dates, and selecting the most effective fertilizers and
pesticides. To train a Random Forest model for agricultural applications, data must ¦rst be collected and pre-processed [45]. This might involve gathering data
on crop yield, weather conditions, soil properties, and other relevant factors from past growing seasons. Once the data is collected, it can be split into training
and testing sets to evaluate the performance of the model. The Random Forest algorithm works by creating a multitude of decision trees, each trained on a
subset of the data. The algorithm randomly selects a subset of the available features at each split point, which helps to reduce over¦tting and improve
generalization. During training, the algorithm measures the accuracy of each decision tree on the training set and uses this information to build a consensus
model that combines the predictions of all the trees as shown below:
In this code, we ¦rst load the dataset and split it into training and testing sets using the divider and function. The optimized hyperparameters (x_opt) are used
to train the ¦nal random forest model using the TreeBagger function. The model is then used to predict the test set and the accuracy of the model is calculated
as the RMSE. Note that this code assumes that the crop_yield_data.mat ¦le contains a matrix X of features and a vector y of corresponding yields. The
hyperparameters being optimized are the minimum leaf size (x(1)), the number of variables to sample (x(2)), and the maximum number of splits (x(3)). Once
the model is trained, it can be used to predict crop yield based on input variables such as weather data and soil properties [46]. The accuracy of the model can
be evaluated using the testing set, and adjustments can be made to improve its performance. In summary, Random Forests can be used in agriculture to
predict crop yield and optimize management decisions. To train a Random Forest model for agricultural applications, data must be collected and pre-
processed, and the model must be evaluated using a testing set as represented in ¦gure 5.
5. Model evaluation: The model evaluation process in machine learning (ML) involves assessing the performance of a trained model on a set of test data to
determine its accuracy, precision, recall, and other evaluation metrics. In the context of agriculture, one popular ML algorithm is the Random Forest algorithm,
which is commonly used for tasks such as crop yield prediction, pest detection, and soil quality assessment. Here is a step-by-step process for evaluating a
Random Forest model in agriculture:
Collect and preprocess data: Collect data related to the agricultural problem at hand, such as soil data, weather data, crop growth data, etc. Preprocess
the data by removing missing values, scaling features, and converting categorical variables into numeric form.
Split the data: Split the preprocessed data into two parts: training data and test data. The training data is used to train the Random Forest model, while the test
data is used to evaluate the model's performance.
Train the model: Train the Random Forest model on the training data. The model should be tuned to obtain the best results.
Test the model: Test the model on the test data. The test data should be completely separate from the training data to avoid bias.
Evaluate the model: Evaluate the performance of the model using various evaluation metrics such as accuracy, precision, recall, F1 score, confusion matrix,
etc. These metrics will provide insight into how well the model is performing and whether it is suitable for the given agricultural problem. Adjust the model: 
Based on the evaluation results, adjust the model parameters or the preprocessing steps to improve the model's performance.
Finalize the model: After obtaining satisfactory results, ¦nalize the model and deploy it for practical use. Overall, the model evaluation process in MI using
Random Forest in agriculture involves collecting and preprocessing data, splitting it into training and test data, training and testing the model, evaluating its
performance using various metrics, and adjusting the model as needed to achieve optimal results.
Page 13/20
6. Performance analysis and outcome: The proposed system is applied in Matlab Simulink to assess the optimum results as demonstrated in ¦gure 6.
The confusion matrix is a performance evaluation tool that is widely used in machine learning to measure the accuracy of a model's predictions. In the context
of a random forest algorithm for agricultural yield enhancement, a confusion matrix can be used to evaluate the accuracy of the model in predicting crop yield
based on a set of input variables such as soil type, weather conditions, and crop variety. 
The confusion matrix is a table that summarizes the performance of a classi¦cation model by comparing the actual and predicted values [47]. 
It consists of four different components: true positive (TP), true negative (TN), false positive (FP), and false negative (FN1).
In the context of agricultural yield enhancement, these components can be de¦ned as follows:
True positive (TP): The number of times the model correctly predicted a high-yield crop when the actual yield was high.
True negative (TN): The number of times the model correctly predicted a low-yield crop when the actual yield was low.
False positive (FP): The number of times the model incorrectly predicted a high-yield crop when the actual yield was low.
False negative (FN): The number of times the model incorrectly predicted a low-yield crop when the actual yield was high.
The confusion matrix can be used to calculate several performance metrics for the model, such as accuracy, precision, recall, and F1-score. These metrics can
provide insights into how well the model is performing and can help identify areas for improvement.
V. COMPARATIVE ANALYSIS
TABLE I: Machine learning algorithm
Machine
learning
algorithm
Algorithm description
CNN
The Convolutional Neural Network (CNN) algorithm has shown great potential in various ¦elds, including agriculture crop yield prediction.
CNNs can learn complex patterns and relationships in high- dimensional data, making them suitable for analyzing crop images and
predicting yield. In agriculture crop yield prediction, CNNs are used to analyze crop images captured by drones or other aerial vehicles. The
images are pre-processed and then fed into the CNN to extract features and learn patterns. The CNN then makes predictions on the yield
based on the features extracted from the images [48]. CNNs have been used to predict crop yields for various crops, including maize, wheat,
and rice. The predictions made by CNNs are accurate and reliable and can help farmers make informed decisions about crop management.
Overall, CNNs have the potential to revolutionize agriculture by providing accurate crop yield predictions, which can help farmers optimize
crop management practices and increase crop yields.
SVM
Support Vector Machines (SVM) is a machine learning algorithm that can be used in agriculture to predict crop yield. SVM is a supervised
learning technique that is used for classi¦cation and regression analysis. It works by ¦nding the best decision boundary that separates the
data points into different classes or predicts the value of the target variable. In agriculture, SVM can be used to predict crop yield based on
various input features such as soil quality, weather conditions, and farming practices. The algorithm can analyze these features and create
a model that can predict the crop yield for a given set of input data [49]. The use of SVM in agriculture can help farmers make informed
decisions about planting and harvesting crops. By analyzing historical data, SVM can predict the optimal time to plant a crop, the best
fertilizers to use, and the ideal harvesting time. This can help farmers increase their crop yields and reduce the risk of crop failure.
RNN
Recurrent Neural Network (RNN) is a type of deep learning algorithm that can be used in agriculture to predict crop yields. RNNs are
particularly useful for time-series data, where the data points are collected at regular intervals, such as daily or monthly. In agriculture, RNNs
can be used to analyze a variety of factors that affect crop yields, including weather patterns, soil moisture, and fertilizer usage. By
analyzing this data over time, RNNs can identify patterns and make predictions about future crop yields.
RNNs work by processing inputs sequentially, with each new input being in§uenced by the previous inputs [50]. This allows the model to
capture the temporal dependencies between the data points, which is important in time-series analysis. The output of an RNN is a prediction
of the next value in the sequence. Overall, the use of RNN algorithms in agriculture can help farmers make more informed decisions about
when to plant and harvest their crops, as well as how much fertilizer to apply and how often to water their crops. By predicting crop yields
more accurately, farmers can increase their productivity and pro¦tability, while also reducing waste and environmental impact.
Regression
algorithm
To forecast crop yield, regression methods can be employed in agriculture. These algorithms can examine several variables that affect
agricultural output, including weather patterns, soil quality, and fertilizer application rates. The program analyses past crop yield data as
well as data on the variables that affect crop output to forecast crop yield in the future. Farmers may enhance crop yields and decrease
waste by using this data to drive their decisions about when to plant, how much fertilizer to use, and when to harvest. Regression algorithms
are useful for forecasting crop yields, and modern agriculture is using them more frequently.
kNN
The k-Nearest Neighbors (kNN) algorithm is a machine learning technique used to classify data based on similarity measures. In agriculture,
kNN can be used to predict crop yields by analyzing historical data on crop yields and environmental factors such as temperature, rainfall,
and soil nutrient levels. To use the kNN algorithm in agriculture crop yield prediction, the ¦rst step is to gather relevant data on past crop
yields and environmental factors for a given region. This data can be used to train the algorithm and create a model that can predict future
crop yields based on new environmental data. Once the model is trained, it can be used to predict crop yields for a speci¦c location by
comparing its environmental data to the historical data in the training set. The kNN algorithm identi¦es the k-nearest neighbors to the new
data point and assigns a yield prediction based on the average yield of those neighbors. Using the kNN algorithm in agriculture crop yield
prediction can help farmers optimize their crop production by providing accurate predictions of future crop yields. This information can be
used to adjust crop management practices and make informed decisions about crop selection and planting schedules.
Table I denotes the classi¦cation of the machine learning algorithm.
TABLE II: Crop yield prediction
Page 14/20
Crop
Input data
Algorithm model
Optimum output
Maize
Weatherandsatellite
spectral data
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
(1) Corn yield: RF (R2 = 7.73); (2) CNN: NN (R2 = 0.54); (3) SVM: NN (R2 = 
0.67); (4) RNN (R2 = 0.651); (5) kNN (R2 = 0.722);
(6)Regression algorithm (R2 = 0.38)
Cotton
Multispectralaerial
images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Yield: RF (R2 = 9.73);
(2) CNN: NN (R2 = 0.54); (3) SVM: NN (R2 = 1.67); (4) RNN (R2 = 2..651); (5)
kNN (R2 = 3..432); (6) Regression algorithm (R2 = 0.38)
Tomato
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression
algorithm
NN: RMSE = 0.656 tha − 1, R2 = 0.76; (2) PLSR: RMSE = 0.83 tha − 1, R2 = 
0.76
Potato
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Reduced dataset: LB: MAE = 7.95%, R2 =
0.59; (2) No feature selection: SVM: MAE = 9.64%, R2 = 0.63; (3) 1–2 months
before harvest: RF: MAE = 8.71%, R2 = 0.89
Turmeric
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Acc values: ANN: 90%, MLR: 28%
Soya
bean
Multispectralaerial
images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
R2 values:(1)SVM: 0.64; (2) RF: 0.98; (3)
ANN: 0.88
DNN (1) Corn: 28–31%
moreaccurate(2)
Soybean: 20–22% more accurate
Rice
Weatherandsatellite
spectral data
Randomforest
algorithm, CNN, SVM,
RF: RMSE = 0.985,
MAE = 0.03, R = 0.87
 
 
RNN, kNN, regression
algorithm
 
Table II determines the crop yield prediction using various machine learning algorithms to obtain the optimum results. This shows that the random forest
algorithm helps to obtain the optimum results. Numerous challenges in agriculture have been successfully solved using random forest algorithms. They are
favored over many other algorithms for a variety of reasons.
First of all, farmers can make better decisions because of random forest algorithms' high accuracy, which is crucial in agriculture. Farmers can properly
forecast crop yields, spot disease outbreaks, and make better- informed decisions about irrigation and fertilizer use by employing random forest algorithms.
Secondly, random forest algorithms are highly robust to outliers, noise, and missing data. This is particularly important in agriculture, where data can be noisy
and incomplete due to various factors like weather conditions, soil quality, and pest attacks.
Thirdly, random forest algorithms provide feature importance, which means that they can identify the most important variables that in§uence the outcome of
a particular problem. This is helpful in agriculture, where farmers can use this information to focus their efforts on the most critical variables.
Finally, random forest algorithms are scalable and can handle large datasets, making them suitable for agriculture, where large amounts of data are generated
from various sources.
Overall, the high accuracy, robustness, feature importance, and scalability of random forest algorithms make them an excellent choice for solving problems in
agriculture.
TABLE III: Comparative Performance Matrix
Pot
Accuracy
Precision
Recall
F1 score
CNN
0.51
0.43
0.37
0.5
SVM
0.46
0.42
0.42
0.3
Regression algorithm
0.62
0.21
0.54
0.7
Random forest algorithm
0.998
0.77
0.8
0.9
kNN
0.36
0.41
0.5
0.7
Table II denotes the comparative performance analysis using various optimization algorithms. This shows that the random forest algorithm provides the
optimum output.
Page 15/20
Future trends of AI in agriculture:
The future of agriculture is being shaped by arti¦cial intelligence (AI) and machine learning (ML) technologies. These technologies have the potential to
revolutionize the industry by improving crop yields, reducing waste, and making farming more e¨cient and sustainable One trend that is expected to gain
traction is precision farming. By using AI and ML algorithms, farmers can monitor crop health, water usage, and soil quality in real-time, enabling them to
make data-driven decisions and optimize resource allocation. This can lead to higher yields, lower costs, and reduced environmental impact. Another trend is
the development of autonomous farming equipment. Self-driving tractors and other machines equipped with AI and ML algorithms can navigate ¦elds, detect
and remove weeds, and plant crops with precision, reducing the need for human labor and increasing e¨ciency. AI-powered predictive analytics is also
expected to play a signi¦cant role in agriculture. By analyzing historical data and real-time weather and soil conditions, farmers can predict crop yields and
identify potential issues before they become signi¦cant problems. Overall, AI and ML technologies have the potential to transform agriculture, making it more
sustainable, e¨cient, and productive. As these technologies continue to develop and become more accessible, they will help farmers address the challenges of
feeding a growing global population while protecting the environment.
VI. CONCLUSION
Using machine learning in agriculture with optimization aims to raise crop yields, decrease resource waste, and boost farmer pro¦tability. For the best planting,
irrigation, fertilization, and pest management practices, machine learning models can analyze a signi¦cant quantity of data on crop development, soil
characteristics, weather patterns, and other factors. The agricultural process can be further enhanced by introducing optimization algorithms into the machine
learning models to discover the optimum solutions to issues like crop rotation, water management, and harvesting schedules. This may result in less waste,
more effective use of resources, and eventually higher yields and more pro¦tability for farmers. Overall, using machine learning and optimization in agriculture
can help farmers overcome some of the di¨culties they encounter, including the need to produce more food with fewer resources and the rising need for
sustainable farming methods.
Declarations
Author contributions All the authors have participated in writing the manuscript and have revised the ¦nal version. All authors read and approved the ¦nal
manuscript.
Funding There is no funding for this study.
Compliance with Ethical Standards
Con§ict of interest The Authors declare that they have no con§ict of interest.
Ethical approval This article does not contain any studies with human participants and/or animals performed by any of the authors.
Informed consent  There is no informed consent for this study.
References
1. Zhang J, Zhou L, Chen Z (June 2019) IEEE Trans Industr Inf 15:3389–3397. 10.1109/TII.2018.2883057. "Precision Agriculture Based on Big Data and
Machine Learning,"
2. Sun C, Liu X, Li S (2020) "A Decision Support System for Precision Agriculture Based on Internet of Things and Machine Learning," in IEEE Access, vol. 8,
pp. 24337–24345, doi: 10.1109/ACCESS.2020.2977065
3. Liu X, Sun C, Huang W (2020) "Agricultural Crop Yield Prediction Based on Machine Learning and Internet of Things," in IEEE Access, vol. 8, pp. 145045–
145054, doi: 10.1109/ACCESS.2020.3017665
4. Li H et al (2019) An Intelligent Agricultural System Based on Internet of Things and Machine Learning. IEEE Access 7:74911–74919.
10.1109/ACCESS.2019.2921574
5. Wu X et al (2018) "A Machine Learning Approach for Crop Yield Prediction Based on Remotely Sensed Data," in IEEE Transactions on Geoscience and
Remote Sensing, vol. 56, no. 10, pp. 5747–5758, doi: 10.1109/TGRS.2018.2833874
½. Liu Y, Zhang Z, Zhang X (2020) "Smart Agriculture with IoT, Big Data and Arti¦cial Intelligence," in IEEE Access, vol. 8, pp. 69535–69544, doi:
10.1109/ACCESS.2020.2982109
7. Yu X et al (May 2019) Deep Learning for Crop Yield Prediction Based on Multi-source Data. IEEE Trans Industr Inf 15(5):2636–2644.
10.1109/TII.2018.2867070
¾. Rahman A et al (2019) "A Smart Irrigation System Based on IoT and Machine Learning," in IEEE Access, vol. 7, pp. 64197–64207, doi:
10.1109/ACCESS.2019.2911565
9. Tao D et al (2021) "A Deep Learning Approach to Rice Growth Stage Recognition Based on Multiple Types of Sensor Data," in IEEE Transactions on
Industrial Informatics, vol. 17, no. 2, pp. 1076–1084, doi: 10.1109/TII.2020.2992874
10. Wang H, Zhang X, Liu Y (2020) Smart Greenhouse Monitoring System Based on IoT and Machine Learning. IEEE Access 8:34844–34851.
10.1109/ACCESS.2020.2973531
Page 16/20
11. Yang K, Li Y, Cai Z, Huang W (2019) "Agricultural Expert System Based on Random Forest Algorithm," IEEE International Conference on Smart Cloud
(SmartCloud), 2019, pp. 289–294, doi: 10.1109/SmartCloud.2019.00062
12. Bao L, Li X, Xie L, "Research on Agricultural Drought Monitoring Based on Random Forest Algorithm," (2020) IEEE International Conference on Smart Grid
and Clean Energy Technologies (ICSGCE), 2020, pp. 409–412, doi: 10.1109/ICSGCE50895.2020.9370904
13. Zhang Y, Shen X, Wang X, Yang H, "Prediction of Crop Yields Using a Random Forest Algorithm," 2019 IEEE International Conference on Computational
Science and Engineering (CSE) and IEEE International Conference on Embedded and, Computing U (2019) (EUC), pp. 353–357, doi:
10.1109/CSE/EUC.2019.00062
14. Gao J, Zhang H, Xu S, Wang Z, Guo X (2019) "Identi¦cation of Maize Growth Stages Based on Random Forest Algorithm," 2019 IEEE 5th International
Conference on Computer and Communications (ICCC), pp. 2165–2169, doi: 10.1109/CompComm.2019.8936046
15. Zhang J, Chen W, Li Z (2019) "Prediction of Wheat Yield Based on Random Forest Algorithm," 2019 IEEE 4th International Conference on Advanced
Robotics and Mechatronics (ICARM), pp. 528–533, doi: 10.1109/ICARM.2019.8834104
1½. Li J, Yang Y, Li Z, Gao J, "Prediction of Rice Yield Based on Random Forest Algorithm," 2019 IEEE International Conference on Arti¦cial Intelligence and,
Applications C (2019) (ICAICA), pp. 68–72, doi: 10.1109/ICAICA47620.2019.00020
17. Wu C, Zhang X, Cao Y, Chen Y (2019) "Detection of Tomato Diseases Using a Random Forest Algorithm," 2019 IEEE International Conference on Robotics
and Automation Sciences (ICRAS), pp. 901–906, doi: 10.1109/ICRAS.2019.8932379
1¾. Liu Y, Zhang L, He Z, "Research on the Prediction of Tea Yield Based on Random Forest Algorithm," (2019) IEEE 6th International Conference on Energy
Smart Systems (ESS), 2019, pp. 13–17, doi: 10.1109/ESS.2019.8888863
19. Li H, Wang Y, Li S, Huang J, "Research on Soil Nutrient Prediction Based on Random Forest Algorithm, (2019) " 2019 IEEE 5th International Conference on
Big Data Analytics (ICBDA), pp. 104–108, doi: 10.1109/ICBDA.2019.8754318
20. Yang Y, Chen J, Zhang M, Zhao Z, "Research on Fruit Classi¦cation Based on Random Forest Algorithm," 2020 IEEE International Conference on Arti¦cial
Intelligence and, Engineering C (2020) (ICAICE), pp. 134–137, doi: 10.1109/
21. Singh M, Singh P, Singh A (March 2014) Application of genetic algorithm in agriculture: a review. Int J Comput Appl 90(5):1–7
22. Ramesh MV, Suresh S (June 2011) Optimization of irrigation scheduling using genetic algorithm. IEEE Trans Instrum Meas 60(6):2021–2027
23. Das SS, Dash SK, Barik RN "Optimization of fertilizer application using genetic algorithm," in Proceedings of the 2014 IEEE International Conference on
Computer and Information Technology (CIT), pp. 598–603
24. Luu TV, Ain MF, Zulki§i Z (2016) "Application of genetic algorithm in crop yield optimization," in Proceedings of the IEEE Conference on Open Systems
(ICOS), pp. 50–54
25. Benos L, Tagarakis AC, Dolias G, Berruto R, Kateris D, Bochtis D (2021) Machine Learning in Agriculture: A Comprehensive Updated Review. Sensors
21:3758. https://doi.org/10.3390/s21113758
2½. Patil SB, Kulkarni RV (April 2015) Genetic algorithm-based decision support system for crop yield prediction. IEEE Trans Industr Inf 11(2):400–408
27. Zahraei SH, Jafari MJ (2017) "Optimization of greenhouse cultivation parameters using genetic algorithm," in Proceedings of the IEEE International
Conference on Industrial Engineering and Engineering Management (IEEM), pp. 916–920
2¾. Song HH, Lee JH (2015) "Design and implementation of a genetic algorithm-based greenhouse environment control system," in Proceedings of the IEEE
International Conference on Consumer Electronics (ICCE), pp. 139–140
29. Lu T, Wang Y "Optimization of aquaponic systems using genetic algorithm," in Proceedings of the 2016 IEEE International Conference on Intelligent
Transportation, Big Data & Smart City (ICITBS), pp. 224–227
30. Chen L, Han C, Chen Y "Design of an intelligent irrigation system based on genetic algorithm," in Proceedings of the 2014 IEEE International Conference on
Mechatronics and Automation (ICMA), pp. 635–640
31. Li J, Liang J, Zhang S, Li Y (2019) Optimizing drip irrigation system design using a modi¦ed particle swarm optimization algorithm. IEEE Access
7:72758–72766
32. Jayasree SN, Subramanian P (2019) "Optimal design of greenhouse based on particle swarm optimization," in 2019 International Conference on
Electrical, Electronics and Communication Engineering (ICEECE), Chennai, India, pp. 1–4
33. Liu Y, Shao Q, Xu X, Zhang Z (2020) "Optimizing agricultural water allocation with particle swarm optimization algorithm," in 2020 3rd International
Conference on Intelligent Transportation, Big Data & Smart City (ICITBS), Shenzhen, China, pp. 386–389
34. Zhao J, Wang J, Sun H (2018) "Optimization of irrigation scheduling based on particle swarm optimization," in 2018 IEEE 3rd Advanced Information
Technology, Electronic and Automation Control Conference (IAEAC), Chongqing, China, pp. 496–500
35. Lin HY, Shen TM (2018) "Optimization of nutrient management in agriculture using particle swarm optimization," in 2018 4th International Conference on
Green Energy and Applications (ICGEA), Singapore, pp. 246–250
3½. Xu J, Wang D, Zhang J (2020) "A particle swarm optimization algorithm for optimizing irrigation scheduling in precision agriculture," in 2020 IEEE 5th
Information Technology and Mechatronics Engineering Conference (ITOEC), Chongqing, China, pp. 527–530
37. Li X, Li Z, Wang J (2020) "Optimizing irrigation management in farmland based on particle swarm optimization," in 2020 5th International Conference on
Electrical and Information Technologies (ICEIT), Xi'an, China, pp. 498–502
3¾. Zhao Y, Wang J, Hu Y (2020) "Optimizing the allocation of fertilizer in farmland based on particle swarm optimization," in 2020 IEEE 4th Information
Technology and Mechatronics Engineering Conference (ITOEC), Chongqing, China, pp. 360–363
Page 17/20
39. Zhang Y, Yang L, Liu H (2020) "Optimization of crop planting layout based on particle swarm optimization algorithm," in 2020 12th International
Conference on Computational Intelligence and Security (CIS), Chongqing, China, pp. 39–42
40. Kulkarni KS, Pawar PG, Patil PG (2015) "Precision farming using k-means clustering algorithm," 2015 International Conference on Pervasive Computing
(ICPC), Pune, India, pp.1–4
41. Al-Qahtani AR, Nawi NM, Yaakob SS (2016) Cluster analysis of soil fertility parameters using k-means algorithm. 2016 IEEE 12th International Colloquium
on Signal Processing & Its Applications (CSPA). Melaka, Malaysia, pp 245–250
42. Rahman MSS, Hasan MM, Mottaleb MA (2019) "K-means clustering for rice yield prediction in Bangladesh," 2019 International Conference on Electrical,
Computer and Communication Engineering (ECCE), Cox's Bazar, Bangladesh, pp. 1–6
43. Abdulghani MA, Abduljabbar NA, Al-Sawa¦ RA, International Conference on Intelligent Computing and, Applications I (2018) (ICICA), Penang, Malaysia,
2018, pp. 88–93
44. Singh SK, Singh K, Singh SP (2016) "Application of k-means clustering algorithm for crop yield prediction," International Conference on Advances in
Computing, Communication, & Automation (ICACCA), Dehradun, India, 2016, pp. 1–5
45. Liu J, Wang Y, Li J (2017) "Agricultural crop classi¦cation based on k-means clustering algorithm," IEEE International Conference on Computational
Intelligence and Virtual Environments for Measurement Systems and Applications (CIVEMSA), Annecy, France, 2017, pp. 1–5
4½. Hossain SE, Hossain MA, "K-means clustering algorithm for improved agricultural productivity in Bangladesh," 2018 3rd International Conference on
Electrical and, Engineering E (2018) (ICEEE), Dhaka, Bangladesh, pp. 1–6
47. Paul BK, Islam MA (2017) "Application of k-means clustering algorithm for precision agriculture," International Conference on Electrical, Computer and
Communication Engineering (ECCE), Cox's Bazar, Bangladesh, 2017, pp. 431–436
4¾. Al-Qahtani AR, Nawi NM, Yaakob SS, IEEE International Conference on Innovative Research and, Development (2016) (ICIRD), Manila, Philippines, 2016,
pp. 1–5
49. Sutar SR, Bhowate SS, Deshmukh SD (2015) "Agricultural decision making using k-means clustering algorithm," 2015 International Conference on
Electrical, Electronics, Signals, Communication and Optimization (EESCO), Visakhapatnam, India, pp. 1–5
50. Fan C, Liu Q, Chen J (2018) "Optimization of farmland irrigation scheduling based on particle swarm optimization algorithm," in 2018 15th International
Conference on Control, Automation, Robotics and Vision (ICARCV), Singapore, pp. 1–6
Figures
Figure 1
Role of AI in agriculture
Page 18/20
Figure 2
Factors to enhance productivity
Figure 3
Proposed system
Page 19/20
Figure 4
Crop production in a particular village (dataset)
Figure 5
Random forest algorithm
Page 20/20
Figure 6
Matlab Implementation


Paper 4:
- APA Citation: Adeyemi, O., Grove, I., Peets, S., & Norton, T. (2018). Dynamic neural network modelling of soil moisture dynamics for predictive irrigation scheduling. Sensors, 18(10), 3408.
  Main Objective: To develop and evaluate LSTM models for predicting soil moisture dynamics for three sites with different soil characteristics and to demonstrate their application in predictive irrigation scheduling.
  Study Location: Unspecified
  Data Sources: ['Historical soil moisture, precipitation, and climatic data', 'Simulated soil moisture and crop yield data from AQUACROP model']
  Technologies Used: ['Long Short-Term Memory (LSTM) networks', 'Recurrent Neural Networks (RNNs)', 'Feedforward neural networks (FFNNs)', 'AQUACROP simulation model']
  Key Findings: ['LSTM models outperformed FFNNs in soil moisture prediction accuracy, even without extensive data preprocessing.', 'LSTM models demonstrated robustness and generalizability by generating accurate predictions for independent sites using models trained on data from other sites.', 'The LSTM models, when integrated into a predictive irrigation scheduling system, achieved significant water savings while maintaining crop yield and water use efficiency.']
  Extract 1: LSTM models outperformed the non-machine learning (naïve) baseline across all the sites. Therefore, the NN models can be accepted as being skillful. The FFNN and LSTM models are also shown to achieve a comparable prediction performance across all sites.
  Extract 2: For the purpose of irrigation scheduling, it may be necessary to predict the soil moisture content for a new site for which historical data required to train an NN model is not available. The predictions will be generated using the climatic and soil variables of the new site as input into a model trained exclusively with data from another site. As such, the ability of the LSTM models to generate soil moisture predictions for independent sites using models from the training sites was evaluated.
  Limitations: ['The study does not explicitly address the scalability and computational requirements of the LSTM models, particularly in scenarios where real-time predictions are required for large-scale irrigation systems.', 'The study focuses primarily on LSTM and RNN models and does not explore other potential machine learning approaches for soil moisture prediction, such as ensemble methods or deep learning architectures.', 'The study assumes the availability of reliable and timely data on soil moisture, precipitation, and climatic variables, which may not always be feasible in practical irrigation scenarios.']
  Relevance Evaluation: ['This study is highly relevant to the specific point you are making in your literature review, which highlights the need for real-time, automated irrigation management systems that integrate IoT and machine learning technologies.', 'The study provides a comprehensive evaluation of the LSTM and RNN models, including their strengths and limitations, making it a valuable contribution for researchers and practitioners exploring these approaches for soil moisture prediction.', 'The study demonstrates the applicability of the developed LSTM models for predictive irrigation scheduling, showcasing their potential to improve water conservation and crop productivity.']
  Relevance Score: 1
  Inline Citation: (Adeyemi et al., 2018)
  Explanation: This study utilizes advanced predictive models, namely Long Short-Term Memory (LSTM) networks and Recurrent Neural Networks (RNNs), to accurately forecast soil moisture dynamics in various soil types based on historical soil moisture, precipitation, and climatic data. The proposed models outperform traditional feedforward neural networks (FFNNs) in terms of prediction accuracy, even under conditions where input data must be preprocessed. The LSTM models are also shown to be robust and generalizable, as they can generate accurate predictions for independent sites with different soil characteristics, using models trained on data from other sites. These models are valuable for implementing real-time, closed-loop irrigation systems that can adjust irrigation based on soil moisture predictions and crop water requirements. This study contributes to the advancement of precision irrigation practices by demonstrating the effectiveness of data-driven models for soil moisture prediction and automated irrigation scheduling.

 Full Text: >
sensors
Article
Dynamic Neural Network Modelling of Soil Moisture
Content for Predictive Irrigation Scheduling
Olutobi Adeyemi 1, Ivan Grove 1, Sven Peets 1, Yuvraj Domun 1 and Tomas Norton 2,*
1
Engineering Department, Harper Adams University, Newport, Shropshire TF10 8NB, UK;
oadeyemi@harper-adams.ac.uk (O.A.); igrove@harper-adams.ac.uk (I.G.);
speets@harper-adams.ac.uk (S.P.); ydomun@harper-adams.ac.uk (Y.D.)
2
M3-BIORES research group, Division of Animal and Human Health Engineering, Department of Biosystems,
Katholieke Universiteit Leuven, Oude Markt 13, 3000 Leuven, Belgium
*
Correspondence: tomas.norton@kuleuven.be; Tel.: +32-1637-7531
Received: 23 September 2018; Accepted: 9 October 2018; Published: 11 October 2018


Abstract: Sustainable freshwater management is underpinned by technologies which improve the
efﬁciency of agricultural irrigation systems. Irrigation scheduling has the potential to incorporate
real-time feedback from soil moisture and climatic sensors. However, for robust closed-loop decision
support, models of the soil moisture dynamics are essential in order to predict crop water needs
while adapting to external perturbation and disturbances. This paper presents a Dynamic Neural
Network approach for modelling of the temporal soil moisture ﬂuxes. The models are trained to
generate a one-day-ahead prediction of the volumetric soil moisture content based on past soil
moisture, precipitation, and climatic measurements. Using ﬁeld data from three sites, a R2 value
above 0.94 was obtained during model evaluation in all sites. The models were also able to generate
robust soil moisture predictions for independent sites which were not used in training the models.
The application of the Dynamic Neural Network models in a predictive irrigation scheduling system
was demonstrated using AQUACROP simulations of the potato-growing season. The predictive
irrigation scheduling system was evaluated against a rule-based system that applies irrigation
based on predeﬁned thresholds. Results indicate that the predictive system achieves a water saving
ranging between 20 and 46% while realizing a yield and water use efﬁciency similar to that of the
rule-based system.
Keywords: irrigation scheduling; modeling; dynamic neural networks; soil moisture dynamics; sensors
1. Introduction
An increasing world population and climate change have placed a considerable amount of
pressure on global freshwater supplies [1]. Irrigated agriculture is the world’s largest consumptive
user of fresh water, accounting for over 70% of its global use [2]. It is therefore important to develop
technologies which enable sustainable and efﬁcient water use for irrigated agriculture while obtaining
a healthy plant growth.
It is desirable to irrigate to meet speciﬁc plant water demands at the right time while avoiding over
and under irrigation. This usually involves irrigation scheduling and control operations on an hourly
or daily basis for a time period of usually less than a week [3]. Precision irrigation aims to accurately
determine and quantify plant water needs. The irrigation amount and timing is based on measurements
of soil, plant, and climatic variables from which the plant water need is inferred [4]. Precision
irrigation has been shown to improve water use efﬁciency, reduce energy consumption, and enhance
crop productivity by leveraging advances in sensor, control, and modelling technologies [5–8].
Such advances include the development of energy efﬁcient and fault-tolerant wireless sensor
Sensors 2018, 18, 3408; doi:10.3390/s18103408
www.mdpi.com/journal/sensors
Sensors 2018, 18, 3408
2 of 22
networks [9,10], intelligent proximal sensing for the detection of plant water stress [11–13], and variable
rate irrigation systems [6,14,15].
The temporal dynamics of ﬁeld-scale soil moisture is perhaps the most leveraged tool for irrigation
scheduling. This is because the soil moisture status is indicative of the water available for uptake by
crops [16]. A number of irrigation scheduling methods estimate crop water needs using soil moisture
and climatic data, and rules created by expert agronomists. Most of the commercial automated
irrigation systems are programmed to irrigate at speciﬁc time intervals and apply a ﬁxed irrigation
volume. A number of these systems are also programmed to irrigate after a predeﬁned soil moisture
threshold is reached [17]. Due to their open-loop structure, these methods may not guarantee optimum
irrigation scheduling decisions resulting in suboptimal plant health and efﬁciency in water use [18].
These shortcomings can be alleviated with the use of feedback control where sensor feedback is
employed in optimizing irrigation timing and volume [19]. Although these approaches improve
irrigation scheduling decisions, they do not include a model for the process dynamics; as a result,
the overall system may not be robust to external perturbations [20].
Model-based irrigation scheduling systems consist of a calibrated internal model which
employs feedback from soil, plant, and climatic sensors in order to predict crop water needs [20].
McCarthy et al. [21] implemented a model-based control system for predicting the irrigation
requirements of cotton with an objective of maximizing crop yield. Their system relied on a complex
crop model which requires detailed information on various climatic, soil and crop parameters.
Park et al. [20] developed a model predictive control system for center pivot irrigation which used
measured soil and climatic data to calibrate a complex soil-water model. The use of mechanistic
models in these systems has many practical limitations because they are data demanding and require
time-consuming calibrations during model development.
In recent years, many studies have investigated the applicability of data-driven machine learning
models to irrigation decision support. Navarro-Hellín et al. [22] presented a regression model applied
in predicting the weekly irrigation needs of a plantation using climatic and soil data as inputs.
Giusti and Marsili-Libelli [23] applied a fuzzy decision system in predicting the volumetric soil
moisture content based on local weather data. King and Shellie [24] used neural network modelling to
estimate the lower threshold (Tnws) needed to calculate the crop water stress index for wine grapes.
Delgoda et al. [25] applied a system identiﬁcation model in predicting the soil moisture deﬁcit using
climatic and soil moisture data as model inputs. These statistical methods explore the spatial and
temporal patterns hidden in historical data in order to map input data to an output space. They do not
rely on a physical model of the system as they are data-driven (i.e., they learn from data). In many
cases, these machine learning methods have been shown to achieve a good prediction performance [26].
They also have fewer data requirements when compared to mechanistic models [24,27,28].
For real-time irrigation scheduling, a model which is able to predict the soil moisture dynamics
is desirable [18]. In order to achieve this with traditional machine learning and system identiﬁcation
methods, an extensive physical knowledge of vadose zone hydrology and boundary layer meteorology
is required to derive robust input features from soil and climatic data. This is because of the complex
nonlinear relationship between the climatic parameters, soil hydraulic properties, and the soil moisture
dynamics [29]. Lozoya et al. [30], Delgoa et al. [25], Giusti and Marsili-Libelli [23], and Saleem et al. [31]
presented system identiﬁcation models for the prediction of soil moisture dynamics, which are
parameterized based on the soil water balance method. This involved assumptions relating to the
absence of surface run-off and deep percolation. The estimated evapotranspiration was also used as
an input to the models. In practice, the true crop evapotranspiration may be signiﬁcantly different
from the estimated values. Furthermore, these models are only applicable to the site for which they
are developed limiting their use for a different environment. This is because models developed using
traditional machine learning and system identiﬁcation approaches are mostly only applicable to the
environment for which they were developed [22].
Sensors 2018, 18, 3408
3 of 22
Machine learning approaches such as support vector machines (SVMs) and adaptive neuro-fuzzy
inference systems (ANFIS) are another group of models that have been applied for the prediction of
soil moisture dynamics [26,32–34]. These approaches have good prediction capability and limited
input requirements.
Karandish and Šim ˚unek [26] compared various machine learning models
including ANFIS and SVM for simulating the time series of soil moisture content using meteorological,
precipitation, and crop coefﬁcient data as model input.
The authors reported that the models
achieved a prediction performance comparable to that of a mechanistic physical process-based model:
HYDRUS–2D. However, they noted that these machine learning models are not suitable for the entire
range of soil moisture prediction i.e., water stress conditions. It is therefore evident that robust and
scalable data-driven models need to be developed for irrigation scheduling applications.
Neural network (NN) methods have a strong learning ability and are able to represent the
nonlinear relationship between the inputs and outputs of a system [35]. Some speciﬁc applications
of neural networks to irrigation and water resource management include the prediction of soil
moisture to aid irrigation scheduling [35,36], crop yield prediction [37,38], prediction of irrigation
water demand [39,40], rainfall-runoff modelling [41,42] and groundwater modelling [43,44].
An NN method is applied in this study for predicting the soil moisture dynamics because of
their ability to produce robust functions approximating complex processes [45]. However, traditional
feedforward neural networks (FFNNs) have limited ability to model dynamic data because they are
unable to preserve previous information, resulting in suboptimal predictions when they are applied
in modelling highly causal systems [46]. The learning capability of FFNNs can be improved through
additional pre-processing of dynamic data and combining the FFNN with other methods including
genetic algorithms [47] and fuzzy logic [36]. For example, Pulido-Calvo and Gutiérrez-Estrada [40]
applied a hybrid FFNN model to generate a one-day-ahead forecast of daily irrigation water demand.
The forecast produced by the FFNN was corrected via a fuzzy logic approach whose parameters
were adjusted using genetic algorithms. While this sort of hybrid modelling approach can strengthen
the ability of an FFNN to learn dynamic data, the long-term generalization ability of such models
is limited due to the ad hoc nature of fuzzy logic rules. Furthermore, the methods that employ
additional pre-processing of dynamic data are time-consuming because of the extensive time and
frequency domain computations they rely on. The data pre-processing steps also rely on subjective
user intervention, which limits the scalability of the models to new environments.
This present study focuses on a dynamic modelling task, for which the Recurrent Neural Network
(RNN) presents a suitable solution. An RNN has internal self-looped cells, allowing it to preserve
information from previous time steps [48]. The Long Short-Term Memory Network (LSTM), a class
of RNNs was selected for this study because of its successful application in the control of nonlinear
dynamic systems [49,50]. The LSTM requires minimal input data pre-processing and is able to
preserve useful information across multiple time steps [51]. They have been shown to achieve robust
performance in modelling sequential data in ﬁelds such as natural language processing [52], time
series classiﬁcation of chaotic systems [53], and speech recognition [54]. Zhang et al. [55] demonstrated
a hydrological application of LSTM models for the prediction of water table depth. Time series
data on water diversion, evaporation, precipitation and temperature were applied as inputs to the
model. The authors reported R2 scores ranging between 0.789 and 0.952 for the LSTM models,
largely outperforming FFNN models which achieved a maximum R2 score of 0.495. The robust water
table depth prediction achieved by the LSTM models highlights their ability to preserve and learn
previous information from long-term time series data typical of hydrological application. This ability
is particularly desirable in soil moisture based irrigation scheduling where the present soil moisture
content is dependent on past soil moisture, precipitation, and climatic data.
The objective of this study was to develop LSTM models for the prediction of volumetric soil
moisture content for three sites with different soil characteristics. Performance of the LSTM models
was evaluated by comparing the LSTM predicted soil moisture content with measured soil moisture
content and estimated soil moisture content using traditional feedforward neural networks (FFNNs).
Sensors 2018, 18, 3408
4 of 22
The applicability of the LSTM models for prediction in sites not used in model training was also
investigated. Finally, the application of the LSTM models in predictive irrigation scheduling was
demonstrated using model-based simulations of the potato-growing season.
The rest of the paper is structured as follows. In Section 2, the theoretical background of
neural networks is presented. In Section 3, the methodology employed for the study is presented.
Section 4 shows the performance evaluation of the neural network models and the predictive irrigation
scheduling system. In Section 5, conclusions and recommendations for future work are presented.
2. Background
This section presents a theoretical background on artiﬁcial neural networks including the FFNN
and the recurrent neural network.
2.1. Neural Network Preliminaries
The basic building block of neural networks is the neuron. It is a processing element that takes
a number of inputs, applies a weight to them, sums them up, includes a bias term, and passes the
result to an activation function, which then produces an output. This activation function implements a
nonlinear transformation to the linearly combined input in order to produce a nonlinear output.
Through a combination of these neurons across the input space and connections of the neurons
outputs to other neurons, a function can be learned which maps the nonlinear relationship between an
input feature space and an output target. The input–output relation of the system can be described by
Equation (1) [45]:
Zi
j(k) = f
 
N
∑
i=1
wi
ijxi−1
i
(k) + δi
!
(1)
where f (:) is the nonlinear activation function, and wi
ij is the connection weight of the j-th neuron unit
in the (i − 1)-th layer to those of the i-th layer. xi−1
i
is the input from the (i − 1)-th layer and δi are the
respective bias terms.
2.2. The Feedforward Neural Network
The FFNN, also known as the multilayer perceptron (MLP) network, is built by ordering neurons
in layers and letting each neuron in a layer take as input only the outputs of the units in the previous
layer or external inputs. A network with N = 1, 2, 3, . . . , n layers is called an n layer network.
The FFNN is shown in Figure 1.
Sensors 2018, 18, x FOR PEER REVIEW  
5 of 22 
 
Figure 1. The feedforward neural network (FFNN). 
The second layer in Figure 1 is called the output layer as it produces the output of the network. 
The first layer is known as the hidden layer since it is located between the external inputs and the 
output layer. The mathematical formula expressing the FFNN is detailed in Equation (2) [45] 
𝑦ො௜ = 𝑔௜ሾ𝑥, 𝜃ሿ = 𝐹௜ ቎෍ 𝜑௜,௝𝑓௝ ቌ෍ 𝑤௝,௟௫௟ + 𝑤௝,଴
௡ക
ቍ
௡೓
+ 𝜑௜,଴቏. 
(2) 
Figure 1. The feedforward neural network (FFNN).
Sensors 2018, 18, 3408
5 of 22
The second layer in Figure 1 is called the output layer as it produces the output of the network.
The ﬁrst layer is known as the hidden layer since it is located between the external inputs and the
output layer. The mathematical formula expressing the FFNN is detailed in Equation (2) [45]
ˆyi = gi[x, θ] = Fi
" nh
∑
j=1
ϕi,j fj
 nϕ
∑
l=1
wj,lxl + wj,0
!
+ ϕi,0
#
.
(2)
In Equation (2), θ is the parameter vector containing all the adjustable parameters of the network
i.e., the weight and the biases
n
wj,l, ϕi,j
o
, and fj is the nonlinear activation function. The biases usually
take a value of 1.
In order to determine the value of the weights, the network is trained with data containing
examples of the inputs xl and outputs yi pairs, known as the training set. The weights are chosen
to minimize a global loss function, which measures the cost of predicting ˆy when the true output
y is a function over the training set. For regression problems that encompass dynamic modelling
tasks, the cost function to be minimized is the mean-squared error, which is computed as shown in
Equation (3):
l( ˆy, y) =
K
∑
k=1
E(k) = 1
2n
K
∑
k=1
n
∑
i=1
∥ ˆyi(k) − yi(k)∥2
(3)
where l( ˆy, y) is the loss function, and n is the number of training examples. The minimization of the
loss function and update of weights is achieved using the backpropagation algorithm [56].
2.3. Long Short-Term Memory Network
The LSTM is a variant of the RNN, so it is expedient to introduce the RNN before describing
the LSTM.
Recurrent neural networks are similar to FFNNs except that there is a self-feedback of neurons in
the hidden layers as illustrated in Figure 2. This gives the network memory and it is able to learn from
an entire sequence given portions of the overall sequence, i.e., it is a dynamic system.
Sensors 2018, 18, x FOR PEER REVIEW  
6 of 22 
 
Figure 2. An unrolled recurrent neural network. 
The hidden nodes ℎ = (ℎଵ, … … , ℎே) and output nodes 𝑦 = (𝑦ଵ, … … , 𝑦ே) are computed by 
looping through Equations (4) and (5) below [45]: 
ℎ௧ = tanh(𝑏௛ + 𝑊ℎ௧ିଵ + 𝑈𝑥௧)   
(4) 
𝑦௧ = 𝑏௢ + 𝑉ℎ௧ 
(5) 
where 𝑥௧ is the input vector at time 𝑡, and ℎ௧ିଵ  is the hidden cell state at time 𝑡 − 1, 𝑏௢ and 𝑏௛ 
are the vectorised bias terms, and 𝑈, 𝑊, 𝑉  are the weight matrices for input-to-hidden,  
hidden-to-hidden, and hidden-to-output connections, respectively. 
The loss is calculated as the total loss for each time-step and the gradients are computed via 
back-propagation through time (BPTT) [57]. 
However, BPTT is not able to learn a pattern from long-term dependency because of the 
gradient vanishing problem [58]. The RNNs use their back-coupling connections to memorize 
short-term dependency in a sequence; as a result, the backpropagated error signals in time can 
b
i fi i l
hi h
i h [59] H
h
i
d S h
idh b
[60]
d h LTSM
hi h
Figure 2. An unrolled recurrent neural network.
The hidden nodes h = (h1, . . . . . . , hN) and output nodes y = (y1, . . . . . . , yN) are computed by
looping through Equations (4) and (5) below [45]:
ht = tan h(bh + Wht−1 + Uxt)
(4)
yt = bo + Vht
(5)
Sensors 2018, 18, 3408
6 of 22
where xt is the input vector at time t, and ht−1 is the hidden cell state at time t − 1, bo and bh are the
vectorised bias terms, and U, W, V are the weight matrices for input-to-hidden, hidden-to-hidden,
and hidden-to-output connections, respectively.
The loss is calculated as the total loss for each time-step and the gradients are computed via
back-propagation through time (BPTT) [57].
However, BPTT is not able to learn a pattern from long-term dependency because of the gradient
vanishing problem [58]. The RNNs use their back-coupling connections to memorize short-term
dependency in a sequence; as a result, the backpropagated error signals in time can become inﬁnitely
high or vanish [59]. Hochreiter and Schmidhuber [60] proposed the LTSM, which is able to solve the
exploding or vanishing gradients problem by enforcing constant error ﬂows through constant error
carousels within special multiplicative units. These units regulate the error ﬂow in the network by
learning how to open or close specialized gates in the network. The constant error carousels (CECs)
and the multiplicative and gate units form the memory block of the LSTM [55].
The CEC loops through the network without an activation function, so the vanishing gradient
problem does not occur when BPTT is applied to train an LSTM [45]. Therefore, LSTMs are able
to approximate long-term information because the information can ﬂow easily along the cells
unchanged. The input, forget, and output gates of the memory block control the input into the
CEC cell, the information retained in the cells, and the output from the cell into other blocks in the
network. A schematic representation of the LSTM memory block along with its associated components
is shown in Figure 3.
Sensors 2018, 18, x FOR PEER REVIEW  
7 of 22 
 
Figure 3. The long short-term memory (LSTM) network memory block. 
The LSTM computes the mapping from an input sequence 𝑥 to the output by looping through 
Equations (6)–(11) with initial values 𝐶௢ = 0  and ℎ௢ = 0 [45]: 
𝑖௧ = 𝜎(𝑤௜𝑥௧ + 𝑈௜ℎ௧ିଵ + 𝑏௜)      
(6) 
𝑓௧ =  𝜎൫𝑤௙𝑥௧ + 𝑈௙ℎ௧ିଵ + 𝑏௙൯   
(7) 
𝜎௧ = 𝜎(𝑤௢𝑥௧ + 𝑈௢ℎ௧ିଵ + 𝑏௢)   
(8) 
𝐶ሚ௧ = tanh(𝑤௖𝑥௧ + 𝑈௖ℎ௧ିଵ + 𝑏௖) 
(9) 
𝐶௧ = 𝑓௧ ⊗ 𝐶௧ିଵ + 𝑖௧ ⊗ 𝐶ሚ௧     
(10) 
ℎ௧ = 𝑜௧ ⊗ tanh(𝐶௧)     
(11) 
where 𝑤௜, 𝑤௙, 𝑤௢ are the weight matrices from the input, forget, and output gates to the input, 
respectively, 𝑈௜, 𝑈௙, 𝑈௢ are the matrices of the weights from the input, forget, and output gates to the 
hidd
l
i
l
𝑏 𝑏 𝑏
h bi
i
d
i h h i
f
d
Figure 3. The long short-term memory (LSTM) network memory block.
The LSTM computes the mapping from an input sequence x to the output by looping through
Equations (6)–(11) with initial values Co = 0 and ho = 0 [45]:
it = σ(wixt + Uiht−1 + bi)
(6)
ft = σ

w f xt + Uf ht−1 + bf

(7)
σt = σ(woxt + Uoht−1 + bo)
(8)
eCt = tan h(wcxt + Ucht−1 + bc)
(9)
Sensors 2018, 18, 3408
7 of 22
Ct = ft ⊗ Ct−1 + it ⊗ eCt
(10)
ht = ot ⊗ tanh(Ct)
(11)
where wi, w f , wo are the weight matrices from the input, forget, and output gates to the input,
respectively, Ui, Uf , Uo are the matrices of the weights from the input, forget, and output gates to the
hidden layer, respectively, bi, bf , bo are the bias vectors associated with the input, forget, and output
gates, σ is the nonlinear sigmoid activation function σ(x) =
1
1+ e−x , and it, ft, ot, Ct are the input,
forget, and output gate and the cell state vectors at time t, respectively. The element-wise vector
multiplication is denoted with ⊗.
3. Methodology
The methodology employed for this study is presented in this section. This includes an overview
of the data applied for developing the soil moisture prediction models, the structure of the neural
network models, and the structure of the predictive irrigation scheduling system.
3.1. Study Sites and Data Source
The data applied in developing the neural network (NN) models for soil moisture prediction were
obtained from three study sites, which are part of the Cosmic-Ray Soil Moisture Observing System
(COSMOS) monitoring project in the United Kingdom [61]. Brieﬂy, the COSMOS project is a soil
moisture and climate monitoring network operating in the UK, USA, Australia, and China. The project
provides near real-time soil moisture and climatic data for use in a variety of applications including
agriculture, water resources management, ﬂood prediction, and land-surface modelling.
The data obtained for the three study sites included hourly measurements of windspeed, rainfall,
air temperature, net radiation, relative humidity, and volumetric soil moisture content. Details of the
three sites are summarized in Table 1.
Table 1. Details of the sites used for model training.
Site Name
Soil Type
Land Cover
Date Range
Baluderry
Sandy loam
Farmland
May 2014–September 2017
Stoughton
Loam
Arable
August 2015–September 2017
Waddeston
Clay
Grassland
December 2013–September 2017
The volumetric soil moisture content in all sites is measured using the cosmic-ray soil moisture
sensor (Model CRS-1000/B, Hydroinnova LLC, Albuquerque, NW, USA) deployed using a site-specific
calibration. The cosmic-ray soil moisture sensor consists of a non-invasive probe which measures the
neutron emitted by cosmic rays within the air and soil. These neutrons are moderated by hydrogen
atoms emitted from soil water into the atmosphere. The neutrons and hydrogen atoms combine
instantaneously and its density is inversely correlated with soil moisture [62]. A calibration function
defines the relationship between the neutron intensity and soil moisture. This calibration function is
simple, monotonic, and invariant with soil texture and chemical composition [63]. The sensor has a
horizontal measurement range of 200 m and an effective measurement depth of up to 60 m. The sensor
is reported to have an accuracy of ±2% measured volumetric soil moisture content [64]. Full details
on the operating principle of the sensor can be found in Shuttleworth et al. [61]. The meteorological
variables (e.g., air temperature, relative humidity, net radiation, windspeed, and precipitation) in all
sites are measured by a MetPak Pro Base automatic weather station (Gill Instruments, Hampshire, UK).
The NN models trained on data from the sites listed in Table 1 were also applied in predicting
the soil moisture content in two independent sites with soil characteristics similar to that of the sites
for which the models were trained. This was done to evaluate the applicability of the models for
prediction in new sites, which were not used in model training. A summary of the independent sites is
presented in Table 2.
Sensors 2018, 18, 3408
8 of 22
Table 2. The independent sites corresponding to each model training site.
Training Site
Independent
Site 1
Independent
Site 2
Name
Land Cover
Soil Type
Name
Land Cover
Soil Type
Baluderry
Bunny Park
Arable
Sandy loam
Bickley Hall
Grassland
Sandy loam
Stoughton
Morley
Arable
Loam
Cockle Park
Grassland
Loam
Waddeston
Hollin Hill
Grassland
Clay
Chimney Meadows
Grassland
Clay
3.2. Data Cleaning and Pre-Processing
The hourly data was resampled to daily (24 h) intervals as this is a time period applicable for ﬁeld
scale irrigation scheduling [65]. The daily averages of the climatic variables were calculated during
the resampling, while the daily precipitation was calculated as the sum of daily rainfall and irrigation
depths. The volumetric soil moisture content was also resampled to its average daily value. The data
cleaning steps included imputing of missing values and removal of outliers.
The pre-processing steps applied for the data modelled with the FFNN included a box–cox
transform [66] of the soil moisture and air temperature data in order to stabilize their variance.
The transformed data were thereafter deseasonalized using the seasonal and trend decomposition
using loess (STL), as proposed by Cleveland et al. [67]. Several studies have shown that deseasonalizing
dynamic data that exhibits seasonality prior to modelling is necessary in order to produce robust
predictions with an FFNN model [68,69]. The STL technique decomposes the soil moisture and air
temperature data into their trend, seasonal, and residual components. Thereafter, the sums of the trend
and level were passed to the next step of the data pre-processing. An example of the transformed and
decomposed soil moisture data is shown in Figure 4. In the next data pre-processing step, the climatic,
precipitation, and soil moisture data were standardized by computing the z-score of their data points.
In the post-processing stage, the soil moisture predictions were back-transformed to their actual scale
through an inverse z-score transformation, the addition of the seasonal component, and an inverse
box–cox transformation.
For the LSTM, the only data pre-processing step applied was a standardization of the climatic,
precipitation, and soil moisture data. This was accomplished by computing the z-score of their data
points. In the post-processing stage, the soil moisture predictions were back-transformed to their
actual scale through an inverse z-score transformation.
For the model training sites, the dataset was divided into a 70:30 ratio for the purpose of model
training and evaluation. The division was done such that the temporal nature of the data was accounted
for; i.e., the evaluation dataset was posterior to the training dataset.
Data spanning 2016–2017 for the independent sites (Table 2) was applied in evaluating the
prediction performance of the trained NN models on those sites.
Sensors 2018, 18, 3408
9 of 22
 
training and evaluation. The division was done such that the temporal nature of the data was 
accounted for; i.e., the evaluation dataset was posterior to the training dataset. 
Data spanning 2016–2017 for the independent sites (Table 2) was applied in evaluating the 
prediction performance of the trained NN models on those sites. 
 
Figure 4. Soil moisture data transformation and decomposition prior to modelling. (A) Observed 
data. (B) Box–cox transformed data. (C) Seasonal component. (D) Trend component. (E) Residual 
component. 
3.3. The Proposed Model Framework 
For predictive irrigation scheduling, a one-day-ahead prediction of the soil moisture content is 
required. The soil moisture content at time 𝑡 + 1 is a nonlinear function of past and present 
Figure 4. Soil moisture data transformation and decomposition prior to modelling. (A) Observed data.
(B) Box–cox transformed data. (C) Seasonal component. (D) Trend component. (E) Residual component.
3.3. The Proposed Model Framework
For predictive irrigation scheduling, a one-day-ahead prediction of the soil moisture content is
required. The soil moisture content at time t + 1 is a nonlinear function of past and present climatic,
and precipitation inputs. It is also inﬂuenced by the past and present soil moisture content values. This
is a Multiple Input and Single Output (MISO) system. The FFNN and LSTM networks are encoded in
various suitable architectures appropriate for the learning task. The neural networks were developed
using the Keras Deep Learning library on the Python programming platform [70].
3.3.1. The Feedforward Neural Network Structure
The FFNN is straightforward to employ for discrete time modelling of dynamic systems for which
there is a nonlinear relationship between the system’s inputs and output. The soil moisture dynamics
can be modelled as a Nonlinear Autoregressive with Exogenous Input System (NARX) as shown in
Equation (12):
y(t + 1) = S[y(t), . . . , y(t − j), u(t), . . . , u(t − n), p(t), . . . , p(t − m)]
(12)
where y(t + 1) is the one-day-ahead prediction of the volumetric soil moisture content, y(t = 0 . . . j)
are the present and past soil moisture content at day t = 0 . . . j, u(t = 0 . . . n) are the climatic inputs
at day t = 0 . . . n, p(t = 0 . . . m) are the precipitation inputs at day t = 0 . . . m, and S is a nonlinear
function, which is approximated using the FFNN.
The time lags m, n, and j are determined through experimentation. The number of hidden
layers in the network and the number of neurons in each hidden layer are also determined
Sensors 2018, 18, 3408
10 of 22
through experimentation. The soil moisture prediction is framed as a regression problem; as such,
an appropriate activation function is required for the hidden layers of the FFNN. For regression
problems, the most robust nonlinear activation function is the point-wise rectiﬁed linear units
(RELU),max(0, x), where x is the input into the neuron. The RELU activation function is reported to
provide easier optimization, faster convergence, and better generalization with the added bonus of
being computationally efﬁcient [71].
During the study, the RELU nonlinearity was applied in the hidden layers, while the network
loss was minimized using the adaptive moment estimation (ADAM) optimization algorithm, which is
reported to improve network convergence [72].
3.3.2. The Long Short-Term Memory Network Structure
For modelling dynamic systems, the LSTM introduces a nonlinearity from the input to system
states followed by a dynamic linearity from the states to the output. This can be represented in the
state space form as shown in Equations (13a) and (13b):
x(t + 1) = NNi[x(t) . . . x(t − k), u(t) . . . u(t − n), y(t) . . . y(t − j), p(t) . . . p(t − m); V]
(13a)
y(t + 1) = NNo[x(t + 1); W]
(13b)
where x(t + 1) is the future state of the network at day t + 1, x(t = 0 . . . k) are the present and past
network states at day t = 0 . . . k, y(t = 0 . . . j) are the present and past soil moisture content at day
t = 0 . . . j, u(t = 0 . . . n) are the climatic inputs at day t = 0 . . . n, p(t = 0 . . . m) are the precipitation
inputs at day t = 0 . . . m, and y(t + 1) is the one-day-ahead prediction of the volumetric soil moisture
content. V is the parameter set of the network that corresponds to the states, and W is the parameter
set of the network that corresponds to the output.
The time lags m, n, and j are determined through experimentation while the time delay k for
the states is learned implicitly by the network during training. The network is designed as an LSTM
nonlinear element (NNi) followed by a linear output layer (NNo). The number of LSTM layers and
the number of memory blocks in each layer are also determined through experimentation. During the
study, the network loss was minimized using the ADAM optimization algorithm.
3.4. Irrigation Scheduling
A predictive irrigation scheduling system is enabled by a model that uses feedback from soil
and climatic sensors to predict the crop water demand [20]. A trained neural network model is
able to generate soil moisture predictions and presents an opportunity for implementing predictive
irrigation scheduling.
In order to demonstrate the applicability of a trained LSTM for predictive irrigation scheduling,
the AQUACROP model developed by the Food and Agricultural Organization was used in simulating
soil–plant–atmosphere interactions for the potato crop [73–75]. The AQUACROP model has been
widely validated and is able to simulate soil moisture dynamics and crop response to water deﬁcits
across various soil types as a function of climatic inputs and water availability [76–79].
Climatic and rainfall data for the model training sites were used as inputs into the AQUACROP
model. The LSTM models trained for each site was applied in generating a one-day-ahead prediction
of soil moisture content using the climatic data and AQUACROP simulated soil moisture as
inputs. Thereafter, the prediction was used to determine the irrigation depth and timing during
the AQUACROP simulations. This formed the basis of the predictive irrigation system described in
Section 3.4.1. The AQUACROP soil ﬁle was modiﬁed to represent the soil types and characteristics for
the model training sites as summarized in Table 3. The crop characteristics of the default Lima potato
ﬁle was used during the simulations.
Sensors 2018, 18, 3408
11 of 22
Table 3. Soil characteristics of the model development sites applied in the AQUACROP simulation.
Site
Field Capacity (m3m−3)
PermanentWilting Point (m3m−3 )
Proﬁle
Baluderry
0.22
0.10
Sandy loam
Stoughton
0.31
0.15
Deep uniform loam
Waddeston
0.33
0.138
Clay
The predictive irrigation system was compared to a rule-based irrigation scheduling system set
up on AQUACROP. The rule-based system was programmed to apply irrigation based on speciﬁed
soil moisture thresholds and applied water depths to reﬁll the soil moisture content to ﬁeld capacity. It
was set up as an open-loop system, which does not consider soil moisture feedback after irrigation
events. It should be noted that only data from the evaluation dataset set of the model training sites
was applied in the simulations.
3.4.1. Predictive Irrigation Scheduling System
The goal of irrigation scheduling is to maintain the soil moisture content between an upper and
lower bound. The upper bound is usually defined as the field capacity while the lower bound is a point
above the permanent wilting point expressed a function of the management allowable depletion (MAD).
In irrigation, it is common practice to express the amount of water retained in the plant root zone
(Wr) as an equivalent depth of soil water (mm of water). This is expressed as shown in Equation (14):
Wr = 1000θZr
(14)
where θ is the volumetric soil moisture content, and Zr is the thickness of the root zone in meters.
The water deﬁcit at time t (DPt) is expressed as shown in Equation (15):
DPt = Wr,FC − Wr,t
(15)
where Wr,FC is the water depth at ﬁeld capacity, and Wr,t is the water depth at time t. It is evident
from Equation (15) that the water deﬁcit at the upper bound (DPU) will be zero, i.e., (Wr,FC − Wr,FC).
The deﬁcit at the lower bound (DPL) is determined from a knowledge of the soils available water and
the crops MAD. This is expressed as shown in Equations (16a) and (16b)
DPL = Wr,FC − Wr,LB
(16a)
with
Wr,LB = Wr,FC − MAD(Wr,FC − Wr,PWP)
(16b)
where Wr,LB is the water depth at the lower bound, and Wr,PWP is the water depth at permanent
wilting point. DPL will vary over the growth season as a result of root growth.
If a prediction of the soil volumetric soil moisture content at time t + 1 is available from the
LSTM model, the deﬁcit at time t + 1 (DPt+1) can be easily calculated. The irrigation amount is
computed as the water application depth that will replenish the water deﬁcit to the upper bound i.e.,
Irrigation = (DPt+1). For close-loop irrigation scheduling, the irrigation threshold is set at a safe point
below DPL. The advantage of this simpliﬁed irrigation scheduling system is the inclusion of a time
variable lower bound. Delgoda et al. [65] noted that this is difﬁcult to achieve with the optimization
schemes applied in model predictive control systems. A block diagram of the proposed irrigation
scheduling system is presented in Figure 5. Figure 5 shows that soil moisture, precipitation, irrigation,
and climatic data are applied as inputs into a trained LSTM model in order to generate a prediction
of the soil moisture content. The predicted soil moisture content is then used in conjunction with
information on crop water requirement and soil water retention to determine the irrigation timing
and amount.
Sensors 2018, 18, 3408
12 of 22
During the simulations, for both the predictive and rule-based irrigation scheduling system,
a MAD of 30% was assumed for the potato crop and the lower bound was dynamically adjusted as a
function of rooting depth growth during the simulated growing season.
 
time variable lower bound. Delgoda et al. [65] noted that this is difficult to achieve with the 
optimization schemes applied in model predictive control systems. A block diagram of the 
proposed irrigation scheduling system is presented in Figure 5. Figure 5 shows that soil moisture, 
precipitation, irrigation, and climatic data are applied as inputs into a trained LSTM model in order 
to generate a prediction of the soil moisture content. The predicted soil moisture content is then 
used in conjunction with information on crop water requirement and soil water retention to 
determine the irrigation timing and amount. 
During the simulations, for both the predictive and rule-based irrigation scheduling system, a 
MAD of 30% was assumed for the potato crop and the lower bound was dynamically adjusted as a 
function of rooting depth growth during the simulated growing season. 
 
Figure 5. Block diagram of the predictive irrigation scheduling system. t is the time in days, m, n, 
and j are past time steps. 
3.5. Model Evaluation Criteria 
To assess the performance of the trained models for the prediction of the soil moisture content 
during the model evaluation, several measures of accuracy were applied. The model’s accuracy 
between the observed and predicted soil moisture content was evaluated using the coefficient of 
determination (𝑅ଶ), root mean squared error (𝑅𝑀𝑆𝐸), and the mean absolute error (𝑀𝐴𝐸). 
The 𝑅ଶ describes the proportion of the total variance in the observed data that is explained by 
the model and ranges between ሾ−∞, 1ሿ. A 𝑅ଶ close to 1 indicates that the model explains well the 
variance of observations. It is expressed as 𝑅ଶ  In Equation (17): 
Figure 5. Block diagram of the predictive irrigation scheduling system. t is the time in days, m, n, and j
are past time steps.
3.5. Model Evaluation Criteria
To assess the performance of the trained models for the prediction of the soil moisture content
during the model evaluation, several measures of accuracy were applied. The model’s accuracy
between the observed and predicted soil moisture content was evaluated using the coefﬁcient of
determination (R2), root mean squared error (RMSE), and the mean absolute error (MAE).
The R2 describes the proportion of the total variance in the observed data that is explained by the
model and ranges between [−∞, 1]. A R2 close to 1 indicates that the model explains well the variance
of observations. It is expressed as R2 In Equation (17):
R2 = ∑N
i=1(yi − y)2 − ∑N
i=1(yi − ˆyi)2
∑N
i=1(yi − y)2
(17)
where yi is the measured value at time i, y is the mean of yi (i = 1 . . . N), and ˆyi is the predicted value
at time i.
The RMSE and MAE quantify the prediction errors in the same units of the variables. However,
the RMSE strongly penalizes large outliers; as such, it is preferable to compliment it with the MAE [80].
RMSE and MAE values close to zero indicate good model predictions. The MAE and RMSE are defined as
MAE = 1
n
n
∑
i=1
|yi − ˆyi|
(18)
RMSE =
"
∑n
i=1(yi − ˆyi)2
n
#0.5
.
(19)
In Equations (18) and (19),
yi
and
ˆyi
are observed and predicted value at time
i (i = 1, 2, . . . , n), respectively.
Sensors 2018, 18, 3408
13 of 22
4. Results and Discussion
The structure of the neural network models, their predictive performance, and the performance
of the predictive irrigation scheduling system are presented and evaluated in this section.
4.1. Model Structure
The model structure and hyper-parameters of the neural network (NN) models were determined
through a ﬁve-fold cross-validation on the training dataset. The model structures which achieved the
best performance for the one-day-ahead prediction of the soil moisture content across the different
sites are summarized in Table 4.
Table 4. The identiﬁed model structure with the best one-day-ahead prediction performance across the
training sites.
Site
Model FFNN
LSTM
N
M
J
Neurons
Layers
R2
N
M
J
Blocks Layers
R2
Baluderry
1
1
1
40
1
0.95
1
1
1
20
1
0.95
Stoughton
1
1
1
20
1
0.97
1
1
1
20
1
0.97
Waddeston
1
2
2
20
1
0.99
1
2
2
40
1
0.99
N is the time lag associated with the climatic inputs, M is the time lag associated with the precipitation input, and J
is the time lag associated with the past soil moisture content input.
Table 4 shows that a ﬁrst-order model taking the precipitation, climatic variables, and soil moisture
content at the present day as inputs is able to predict the soil moisture content of the next day for the
sandy loam (Baluderry) and loam (Stoughton) sites. For the heavier textured clay site (Waddeston),
the soil moisture content at the next day is dependent on the precipitation and soil moisture during
the present and previous day. This can be explained by the low inﬁltration capacity of heavier textured
soils. The precipitation input on any day may take a time period greater than a day to completely
inﬁltrate the soil column.
It was also found that a single layer of neurons and memory blocks in both the FFNN and the
LSTM is able to satisfactorily model the soil moisture dynamics across all the sites. Additional layers
could not further improve the learning capabilities of both networks. As an example, the performance
of NN models with the same model structure with those listed in Table 4 but with two hidden layers
are presented in Table 5. The two-layer models achieve a lower prediction accuracy across all sites.
Moreover, as part of the model training experiments, the best cross-validation performance achieved by
an FFNN, which included only a z-score transformation of the modelled data was an R2 value of 0.68.
Table 5. Training cross-validation performance of two-layer neural network models.
Site
FFNN
LSTM
R2
R2
Baluderry
0.93
0.91
Stoughton
0.92
0.95
Waddeston
0.95
0.97
4.2. Soil Moisture Content Prediction
The prediction capability of a model is exempliﬁed by its performance on data not seen by the
model during training. As such, the prediction capability of the models was tested on the evaluation
dataset set aside for each of the model training sites.
The prediction performance of a non-machine learning baseline which predicts the soil moisture
content at a particular day as the average soil moisture content of the three previous days is presented
in Table 6. This is presented along with the prediction performance of the trained NN models. A model
Sensors 2018, 18, 3408
14 of 22
will only be accepted as skillful if its performance surpasses that of the non-machine learning baseline.
This is considered a good practice for approaching predictive modelling tasks [81].
Table 6. Prediction performance of the non-machine learning (naïve) and neural network models when
tested on the evaluation dataset for all the model training sites.
Site
Model
Naive
FFNN
LSTM
R2
MAE
(m3m−3)
RMSE
(m3m−3)
R2
MAE
(m3m−3)
RMSE
(m3m−3)
R2
MAE
(m3m−3)
RMSE
(m3m−3)
Baluderry
0.89
0.02
0.03
0.94
0.01
0.01
0.95
0.01
0.01
Stoughton
0.88
0.02
0.03
0.97
0.01
0.01
0.97
0.01
0.01
Waddeston
0.92
0.01
0.02
0.99
0.01
0.01
0.99
0.01
0.01
Table 6 shows that both the FFNN and LSTM outperform the non-machine learning (naïve)
baseline across all the sites. Therefore, the NN models can be accepted as being skillful. The FFNN
and LSTM models are also shown to achieve a comparable prediction performance across all sites.
However, it is interesting that the LSTM achieves a comparable performance to the FFNN without
extensive pre-processing of input data. This highlights the ability of the LSTM to sufﬁciently learn the
underlying function approximating dynamic data [51]. This ability is particularly desirable because the
data pre-processing pipeline applied for the FFNN required subjective human intervention, which may
not lead to an improvement in model performance for more complex dynamic systems.
The soil moisture predicted by the FFNN and LSTM models along with the observed soil moisture
content for the evaluation dataset is presented in Figure 6. Figure 6 shows that the LSTM models are
able to accurately model the soil moisture dynamics while capturing its dominant modes. The LSTM
models are also able to respond to perturbation from the precipitation input shown in the stem plots.
Again, it is clear that the LSTM model is able to achieve a performance comparable to that of the FFNN
with minimal input data pre-processing.
There have been previous attempts in literature to model the soil moisture dynamics and predict
the soil moisture content in order to aid irrigation scheduling. Delgoda et al. [25] presented a
linear dynamic model with assumptions made on the absence of saturation ﬂows. This lead to a
degradation in the modelling results. The saturation ﬂows are a nonlinear function of the soils
hydraulic properties [29]. The LSTM models presented in this study are able to implicitly learn such
nonlinear relations during training. This is done during the adjustment of the network weights in
order to deﬁne a function relating the climatic and precipitation inputs to the soil moisture content.
Since soil moisture depends on the balance between water input and output, saturation ﬂows have
been incorporated in the LSTM model. Lozoya et al. [30] highlighted the need to parametrize several
linear dynamics models for the prediction of soil moisture content for any particular site. This was
attributed to the differing dynamics at saturation, the available water content, and that the permanent
wilting point was not reached. The LSTM models are able to model these nonlinearities for the entire
range of a site’s soil moisture content. The use of a single model for the entire range of operation
of a process is usually favored for decision support purposes because of the need to ensure simple
debugging and test procedures [82]. This may become complex when several models are used as part
of a decision support system. This gives further evidence in favor of the application of the LSTM
models for the purpose of soil moisture prediction and irrigation scheduling.
Sensors 2018, 18, 3408
15 of 22
 
operation of a process is usually favored for decision support purposes because of the need to 
ensure simple debugging and test procedures [82]. This may become complex when several models 
are used as part of a decision support system. This gives further evidence in favor of the application 
of the LSTM models for the purpose of soil moisture prediction and irrigation scheduling. 
 
Figure 6. Measured soil moisture content and soil moisture content predicted by the FFNN and the 
LSTM using the evaluation dataset for the three training sites, (A) Baluderry, (B) Stoughton, and  
(C) Waddeston. 
 
Figure 6. Measured soil moisture content and soil moisture content predicted by the FFNN and
the LSTM using the evaluation dataset for the three training sites, (A) Baluderry, (B) Stoughton,
and (C) Waddeston.
4.3. Prediction Performance in the Independent Sites
For the purpose of irrigation scheduling, it may be necessary to predict the soil moisture content
for a new site for which historical data required to train an NN model is not available. The predictions
will be generated using the climatic and soil variables of the new site as input into a model trained
exclusively with data from another site. As such, the ability of the LSTM models to generate soil
moisture predictions for independent sites using models from the training sites was evaluated.
The prediction performance of the trained LSTM and FFNN models for these independent sites
is presented in Table 7.
Sensors 2018, 18, 3408
16 of 22
Table 7. Prediction performance of the neural network models for the independent sites.
Independent Site 1
Independent Site 2
Models
Training
Site
R2
MAE
(m3m−3)
RMSE
(m3m−3)
R2
MAE
(m3m−3)
RMSE
(m3m−3)
FFNN
Baluderry
0.74
0.04
0.07
0.93
0.01
0.01
Stoughton
0.94
0.01
0.01
0.96
0.01
0.01
Waddeston
0.95
0.01
0.01
0.94
0.01
0.01
LSTM
Baluderry
0.92
0.01
0.01
0.98
0.01
0.01
Stoughton
0.96
0.01
0.01
0.98
0.01
0.01
Waddeston
0.98
0.01
0.01
0.97
0.01
0.01
Table 7 shows that the LTSM models generate accurate predictions for the independent sites,
and these predictions outperform those generated by the FFNN in terms of R2 scores. This is because of
the dynamic nature of the LSTM, which enables it to generate predictions as a function of model inputs
and state maintained for a learned past time period. Table 7 also shows that the FFNN is unable to
achieve a good prediction performance when the model trained in Baluderry was applied for prediction
in Independent Site 1. This may be because the data pre-processing steps applied on the training data
were not applicable to the data of Independent Site 1. This further highlights the robustness of the
LSTM model, which is able to sufﬁciently learn the underlying function approximating the dynamic
data. The data in Table 7 demonstrates the excellent approximation ability of the LSTM, which makes
them useful for generating prediction for processes with an underlying dynamics similar to the process
they were trained on. This approximation ability of the LSTM has been widely exploited in the ﬁeld of
time series forecasting where a single LSTM model is trained to predict data points for a time series
belonging a common cluster [83].
The applicability of data-driven models trained for a particular site for prediction in a different
site will further enhance the precision water management of various crops. Navarro-Hellín et al. [22]
showed that models that are able to generalize to new sites not included in the model development are
difﬁcult to realize using traditional machine learning methods. The excellent generalization ability of
the LSTM presents an opportunity for the development of multi-site soil moisture prediction models
as demonstrated by the robust performance of the LSTM models presented in this study when tested
on the independent sites.
4.4. Application in Predictive Irrigation Scheduling
In this study, the purpose of modelling the soil moisture dynamics is to generate predictions of
the volumetric soil moisture content which is required for predictive irrigation scheduling. As such,
the LSTM model developed for each of the training sites was applied as part of a predictive irrigation
scheduling system, which was evaluated alongside a rule-based system using AQUACROP simulations
of the potato-growing season. The resulting soil moisture deficit for the predictive and rule-based systems,
and the lower bound deficit during simulations for the three training sites are shown in Figure 7.
It should be noted that the negative deﬁcit values in Figure 7 indicate soil moisture values
above the ﬁeld capacity, hence overwatering. Figure 7 shows that, in the heavy textured clay site
(Waddeston), the predictive system violates the lower bound threshold during the mid-growing season.
This occurred because the LSTM model applied in predicting the soil moisture content was not trained
speciﬁcally for the potato crop. The high mid-season water demand of potato altered the dynamics
learned by the model. Nevertheless, it can be seen that the deﬁcits are close to the lower bound
threshold and they are later minimized. It can also be seen that, across all sites, the rule-based system
tends to over-irrigate, as indicated by the negative deﬁcit values. Overall, the predictive system is able
to maintain the soil moisture deﬁcits within the allowable range and is able to account for the change
in crop water requirements over the growing season.
Sensors 2018, 18, 3408
17 of 22
Sensors 2018, 18, x FOR PEER REVIEW  
17 of 22 
 
 
Figure 7. The predictive and rule-based irrigation scheduling systems for AQUACROP simulations 
of the potato-growing season on the three model training sites. (A) Baluderry, (B) Stoughton, and 
(C) Waddeston. 
It should be noted that the negative deficit values in Figure 7 indicate soil moisture values 
above the field capacity, hence overwatering. Figure 7 shows that, in the heavy textured clay site 
(Waddeston), the predictive system violates the lower bound threshold during the mid-growing 
season. This occurred because the LSTM model applied in predicting the soil moisture content was 
not trained specifically for the potato crop. The high mid-season water demand of potato altered 
the dynamics learned by the model. Nevertheless, it can be seen that the deficits are close to the 
lower bound threshold and they are later minimized. It can also be seen that, across all sites, the 
rule-based system tends to over-irrigate, as indicated by the negative deficit values. Overall, the 
predictive system is able to maintain the soil moisture deficits within the allowable range and is 
able to account for the change in crop water requirements over the growing season. 
The total water applied during the growing season along with the simulated crop yield and 
water use efficiency (WUE) is summarized in Table 8. 
Figure 7. The predictive and rule-based irrigation scheduling systems for AQUACROP simulations
of the potato-growing season on the three model training sites.
(A) Baluderry, (B) Stoughton,
and (C) Waddeston.
The total water applied during the growing season along with the simulated crop yield and water
use efﬁciency (WUE) is summarized in Table 8.
Table 8 shows that the predictive system consistently applied lower irrigation depths when
compared with the rule-based system. The predictive system achieved a water saving of 46% in
Baluderry, 20% in Stoughton, and 31% in Waddeston. The predictive system also achieved a yield and
water use efﬁciency (WUE) similar to that of the rule-based system. These results conﬁrm that the
predictive system is suitable for irrigation scheduling and is able to improve water conservation.
Table 8. Total irrigation application depth along with the simulated crop yield and water use efﬁciency
for the potato growing season.
Site
Total Irrigation (mm)
Yield (ton/ha)
WUE (kgm−3)
Predictive
system
Rule-based
system
Predictive
system
Rule-based
system
Predictive
system
Rule-based
system
Baluderry
69.50
129.80
12.64
12.64
4.08
3.93
Stoughton
141
177.20
12.64
12.64
3.68
3.68
Waddeston
55
79.90
12.64
12.64
3.82
3.85
Sensors 2018, 18, 3408
18 of 22
5. Conclusions
The precise water management of crops will immensely beneﬁt from automated decision support
systems that integrate climatic and soil moisture measurements with a robust data-driven model of
the soil moisture dynamics. This technology development will facilitate the prediction of crop water
needs and an improvement in water conservation.
This paper has presented a dynamic neural network approach for modelling the time series
of soil moisture content. The performance of the LSTM for the prediction of soil moisture content
was evaluated for three sites with different soil characteristics. Using an independent evaluation
dataset, the LSTM models developed for the sites achieved accuracies (R2 > 0.94) for a one-day-ahead
prediction. The LSTM models also generated accurate soil moisture predictions for independent sites
not used in training the models.
The use of the LSTM models in predictive irrigation scheduling was also demonstrated using
AQUACROP simulations of the potato-growing season. The performance of the proposed predictive
irrigation scheduling system was evaluated by comparing its irrigation policies to those of a rule-based
system. The predictive system was able to maintain the soil moisture deﬁcit within allowable limits
for the most part of the simulated growing season while minimizing over-irrigation. Furthermore,
the predictive system was able to achieve a yield and WUE similar to that achieved by the rule-based
system using lower irrigation application depths.
For future research, the predictive system should be extended to include rainfall forecasts.
This will ensure that irrigation is optimized to further increase water savings through the maximum
utilization of forecasted rainfall depths. The development of crop-speciﬁc LSTM models trained on a
rich dataset obtained from sites with similar soil types will enhance the adoption of data-driven soil
moisture models for use in irrigation scheduling applications.
Author Contributions: O.A., T.N., and Y.D. conducted the modelling experiments. The paper was written up by
O.A., T.N., I.G., and S.P.
Funding: This research was funded by the John Oldacre foundation.
Acknowledgments: The authors wish to express their gratitude to the United Kingdom Centre for Ecology and
Hydrology (CEH) for providing the dataset used for the study through the COSMOS UK project.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1.
Adeyemi, O.; Grove, I.; Peets, S.; Norton, T. Advanced Monitoring and Management Systems for Improving
Sustainability in Precision Irrigation. Sustainability 2017, 9, 353. [CrossRef]
2.
Hedley, C.B.; Knox, J.W.; Raine, S.R.; Smith, R. Water: Advanced Irrigation Technologies. Encycl. Agric.
Food Syst. 2014, 5, 378–406.
3.
Ali, M.H.; Talukder, M.S.U. Methods or Approaches of Irrigation Scheduling—An Overview. J. Inst. Eng.
2001, 28, 11–23.
4.
Smith, R.J.; Baillie, J.N.; Futures, I. Deﬁning precision irrigation: A new approach to irrigation management.
In Proceedings of the Irrigation and Drainage Conference 2009, Victoria, Australia, 18–21 October 2009;
pp. 18–21.
5.
Ro-Hellín, H.; Torres-Sánchez, R.; Soto-Valles, F.; Albaladejo-Pérez, C.; López-Riquelme, J.A.; Domingo-Miguel, R.N.
A wireless sensors architecture for efficient irrigation water management. Agric. Water Manag. 2015, 151, 64–74.
[CrossRef]
6.
Hedley, C.; Yule, I. Soil water status mapping and two variable-rate irrigation scenarios. Precis. Agric. 2009,
10, 342–355. [CrossRef]
7.
Monaghan, J.M.; Daccache, A.; Vickers, L.H.; Hess, T.M.; Weatherhead, E.K.; Grove, I.G.; Knox, J.W. More
“crop per drop”: Constraints and opportunities for precision irrigation in European agriculture. J. Sci.
Food Agric. 2013, 93, 977–980. [CrossRef] [PubMed]
8.
Morillo, J.G.; Martín, M.; Camacho, E.; Díaz, J.A.R.; Montesinos, P. Toward precision irrigation for intensive
strawberry cultivation. Agric. Water Manag. 2015, 151, 43–51. [CrossRef]
Sensors 2018, 18, 3408
19 of 22
9.
Nesa Sudha, M.; Valarmathi, M.L.; Babu, A.S. Energy efﬁcient data transmission in automatic irrigation
system using wireless sensor networks. Comput. Electron. Agric. 2011, 78, 215–221. [CrossRef]
10.
Parra, L.; Rocher, J.; García, L.; Lloret, J.; Tomás, J.; Romero, O.; Rodilla, M.; Falco, S.; Sebastiá, M.T.;
Mengual, J.; et al. Design of a WSN for smart irrigation in citrus plots with fault-tolerance and energy-saving
algorithms. Netw. Protoc. Algorithms 2018, 10, 95–115. [CrossRef]
11.
Marin, J.; Parra, L.; Rocher, J.; Sendra, S.; Lloret, J.; Mauri, P.V.; Masaguer, A. Urban Lawn Monitoring in
Smart City Environments. J. Sens. 2018, 2018, 16. [CrossRef]
12.
Alvino, A.; Marino, S. Remote Sensing for Irrigation of Horticultural Crops. Horticulturae 2017, 3, 40.
[CrossRef]
13.
Gonzalez-Dugo, V.; Zarco-Tejada, P.; Nicolás, E.; Nortes, P.A.; Alarcón, J.J.; Intrigliolo, D.S.; Fereres, E. Using
high resolution UAV thermal imagery to assess the variability in the water status of ﬁve fruit tree species
within a commercial orchard. Precis. Agric. 2013, 14, 660–678. [CrossRef]
14.
Evans, R.G.; LaRue, J.; Stone, K.C.; King, B.A. Adoption of site-speciﬁc variable rate sprinkler irrigation
systems. Irrig. Sci. 2013, 31, 871–887. [CrossRef]
15.
Stone, K.C.; Bauer, P.J.; Busscher, W.J.; Millen, J.A.; Evans, D.E.; Strickland, E.E. Variable-rate irrigation
management using an expert system in the eastern coastal plain. Irrig. Sci. 2015, 33, 167–175. [CrossRef]
16.
Romano, N.; D’Urso, G.; Severino, G.; Chirico, G.B.; Palladino, M.; Majone, B.; Viani, F.; Filippi, E.; Bellin, A.;
Massa, A.; et al. Wireless Sensor Network Deployment for Monitoring Soil Moisture Dynamics at the Field
Scale. Procedia Environ. Sci. 2013, 19, 426–435.
17.
Pardossi, A.; Incrocci, L. Traditional and New Approaches to Irrigation Scheduling in Vegetable Crops.
Horttechnology 2011, 21, 309–313.
18.
McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Advanced process control of irrigation: The current state and an
analysis to aid future development. Irrig. Sci. 2013, 31, 183–192. [CrossRef]
19.
Raine, S.R.; Meyer, W.S.; Rassam, D.W.; Hutson, J.L.; Cook, F.J. Soil-water and solute movement under
precision irrigation: Knowledge gaps for managing sustainable root zones. Irrig. Sci. 2007, 26, 91–100.
[CrossRef]
20.
Park, Y.; Shamma, J.S.; Harmon, T.C. A Receding Horizon Control algorithm for adaptive management of
soil moisture and chemical levels during irrigation. Environ. Model. Softw. 2009, 24, 1112–1121. [CrossRef]
21.
McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Simulation of irrigation control strategies for cotton using Model
Predictive Control within the VARIwise simulation framework. Comput. Electron. Agric. 2014, 101, 135–147.
[CrossRef]
22.
Navarro-Hellín, H.; Martínez-del-Rincon, J.; Domingo-Miguel, R.; Soto-Valles, F.; Torres-Sánchez, R.
A decision support system for managing irrigation in agriculture. Comput. Electron. Agric. 2016, 124, 121–131.
[CrossRef]
23.
Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation and water conservation in
agriculture. Environ. Model. Softw. 2015, 63, 73–86. [CrossRef]
24.
King, B.A.; Shellie, K.C. Evaluation of neural network modeling to predict non-water-stressed leaf
temperature in wine grape for calculation of crop water stress index. Agric. Water Manag. 2016, 167, 38–52.
[CrossRef]
25.
Delgoda, D.; Saleem, S.K.; Malano, H.; Halgamuge, M.N. Root zone soil moisture prediction models based
on system identiﬁcation: Formulation of the theory and validation using ﬁeld and AQUACROP data.
Agric. Water Manag. 2014, 163, 344–353. [CrossRef]
26.
Karandish, F.; Šim ˚unek, J. A comparison of numerical and machine-learning modeling of soil water content
with limited input data. J. Hydrol. 2016, 543, 892–909. [CrossRef]
27.
Payero, J.O.; Irmak, S. Variable upper and lower crop water stress index baselines for corn and soybean.
Irrig. Sci. 2006, 25, 21–32. [CrossRef]
28.
Young, P.C. The data-based mechanistic approach to the modelling, forecasting and control of environmental
systems. Annu. Rev. Control 2006, 30, 169–182. [CrossRef]
29.
Mashayekhi, P.; Ghorbani-Dashtaki, S.; Mosaddeghi, M.R.; Shirani, H.; Nodoushan, A.R.M. Different
scenarios for inverse estimation of soil hydraulic parameters from double-ring inﬁltrometer data using
HYDRUS-2D/3D. Int. Agrophys. 2016, 30, 203–210. [CrossRef]
30.
Lozoya, C.; Mendoza, C.; Aguilar, A.; Román, A.; Castelló, R. Sensor-Based Model Driven Control Strategy
for Precision Irrigation. J. Sens. 2016, 2016, 12. [CrossRef]
Sensors 2018, 18, 3408
20 of 22
31.
Saleem, S.K.; Delgoda, D.; Ooi, S.K.; Dassanayake, K.B.; Yue, L.; Halmamuge, M.; Malano, H. Model
Predictive Control for Real-Time Irrigation Scheduling. IFAC Proc. Vol. 2013, 46, 299–304. [CrossRef]
32.
Deng, J.; Chen, X.; Du, Z.; Zhang, Y. Soil Water Simulation and Predication Using Stochastic Models Based
on LS-SVM for Red Soil Region of China. Water Resour. Manag. 2011, 25, 2823–2836. [CrossRef]
33.
Liu, D.; Yu, Z.; Lü, H. Data assimilation using support vector machines and ensemble Kalman ﬁlter for
multi-layer soil moisture prediction. Water Sci. Eng. 2010, 3, 361–377.
34.
Hong, Z.; Kalbarczyk, Z.; Iyer, R.K. Using a wireless sensor network and machine learning techniques.
In Proceedings of the 2016 IEEE International Conference on Smart Computing (SMARTCOMP),
St. Louis, MO, USA, 18–20 May 2016.
35.
Capraro, F.; Patiño, D.; Tosetti, S.; Schugurensky, C. Neural network-based irrigation control for precision
agriculture. In Proceedings of the 2008 IEEE International Conference on Networking, Sensing and Control
(ICNSC), Sanya, China, 6–8 April 2008; pp. 357–362.
36.
Tsang, S.W.; Jim, C.Y. Applying artiﬁcial intelligence modeling to optimize green roof irrigation. Energy Build.
2016, 127, 360–369. [CrossRef]
37.
Guo, W.W.; Xue, H. Crop yield forecasting using artiﬁcial neural networks: A comparison between spatial
and temporal models. Math. Probl. Eng. 2014, 2014, 7. [CrossRef]
38.
Gandhi, N.; Petkar, O.; Armstrong, L.J. Rice crop yield prediction using Artiﬁcial Neural Networks.
In Proceedings of the IEEE International Conference on Technological Innovations in ICT for Agriculture
and Rural Development, Chennai, India, 15–16 July 2016; pp. 105–110.
39.
Pulido-Calvo, I.; Roldan, J.; Lopez-Luque, R.; Gutierrez-Estrada, J.C. Demand Forecasting for Irrigation
Water Distribution Systems. Irrig. Drain. Eng. 2003, 129, 270–277. [CrossRef]
40.
Pulido-Calvo, I.;
Gutiérrez-Estrada, J.C. Improved irrigation water demand forecasting using a
soft-computing hybrid model. Biosyst. Eng. 2009, 102, 202–218. [CrossRef]
41.
Sarkar, A.; Kumar, R. Artiﬁcial Neural Networks for Event Based Rainfall-Runoff Modeling. J. Water
Resour. Prot. 2012, 4, 891–897. [CrossRef]
42.
Khan, M.S.; Coulibaly, P. Bayesian neural network for rainfall-runoff modeling. Water Resour. Res. 2006,
42, 1–18. [CrossRef]
43.
Joorabchi, A.; Zhang, H.; Blumenstein, M. Application of artiﬁcial neural networks to groundwater dynamics
in coastal aquifers. J. Coast. Res. 2009, 2009, 966–970.
44.
Sun, Y.; Wendi, D.; Kim, D.E.; Liong, S.-Y. Technical note: Application of artiﬁcial neural networks in
groundwater table forecasting—A case study in a Singapore swamp forest. Hydrol. Earth Syst. Sci. 2016,
20, 1405–1412. [CrossRef]
45.
Goodfellow, I.; Bengio, Y.; Courville, A. Deep Learning; MIT Press: Cambridge, MA, USA, 2016.
46.
Brezak, D.; Bacek, T.; Majetic, D.; Kasac, J.; Novakovic, B. A comparison of feed-forward and recurrent
neural networks in time series forecasting. In Proceedings of the 2012 IEEE Conference on Computational
Intelligence for Financial Engineering & Economics (CIFEr), New York, NY, USA, 29–30 March 2012; pp. 1–6.
47.
Gu, J.; Yin, G.; Huang, P.; Guo, J.; Chen, L. An improved back propagation neural network prediction model
for subsurface drip irrigation system. Comput. Electr. Eng. 2017, 60, 58–65. [CrossRef]
48.
Funahashi, K.; Nakamura, Y. Approximation of dynamical systems by continuous time recurrent neural
networks. Neural Netw. 1993, 6, 801–806. [CrossRef]
49.
Wang, Y.; Kirubakaran, V.; Biao, H. A Long-Short Term Memory Recurrent Neural Network Based
Reinforcement Learning Controller for Ofﬁce Heating Ventilation and Air Conditioning Systems. Processes
2017, 5, 1–18.
50.
Wang, Y. A new concept using LSTM Neural Networks for dynamic system identiﬁcation. In Proceedings of
the 2017 American Control Conference, Seattle, WA, USA, 24–26 May 2017; pp. 5324–5329.
51.
Chauhan, S.; Vig, L. Anomaly detection in ECG time signals via deep long short-term memory networks.
In Proceedings of the 2015 IEEE International Conference on Data Science and Advanced Analytics,
Paris, France, 19–21 October 2015.
52.
Mikolov, T.; Kombrink, S.; Burget, L.; ˇCernocký, J.; Khudanpur, S. Extensions of recurrent neural network
language model. In Proceedings of the 2011 IEEE International Conference on Acoustics, Speech and Signal
Processing (ICASSP), Prague, Czech Republic, 22–27 May 2011; pp. 5528–5531.
53.
Ordóñez, J.F.; Roggen, D. Deep Convolutional and LSTM Recurrent Neural Networks for Multimodal
Wearable Activity Recognition. Sensors 2016, 16, 115. [CrossRef] [PubMed]
Sensors 2018, 18, 3408
21 of 22
54.
Graves, A.; Mohamed, A.R.; Hinton, G. Speech recognition with deep recurrent neural networks.
In Proceedings of the 2013 IEEE International Conference on Acoustics, Speech and Signal Processing,
Vancouver, BC, Canada, 26–31 May 2013; pp. 6645–6649.
55.
Zhang, J.; Zhu, Y.; Zhang, X.; Ye, M.; Yang, J. Developing a Long Short-Term Memory (LSTM) based model
for predicting water table depth in agricultural areas. J. Hydrol. 2018, 561, 918–929. [CrossRef]
56.
Rumelhart, D.E.; Hinton, G.E.; Williams, R.J. Learning representations by back-propagating errors. Nature
1986, 323, 533–536. [CrossRef]
57.
Werbos, P.J. Backpropagation through time: What it does and how to do it. Proc. IEEE 1990, 78, 1550–1560.
[CrossRef]
58.
Hochreiter, S. The Vanishing Gradient Problem during Learning Recurrent Neural Nets and Problem
Solutions. Int. J. Uncertain. Fuzziness Know. Based Syst. 1998, 6, 107–116. [CrossRef]
59.
Pascanu, R.; Mikolov, T.; Bengio, Y. On the difﬁculty of training Recurrent Neural Networks. In Proceedings
of the 30th International Conference on Machine Learning, Atlanta, GA, USA, 16–21 June 2013.
60.
Hochreiter, S.; Schmidhuber, J. Long Short-Term Memory. Neural Comput. 1997, 9, 1735–1780. [CrossRef]
[PubMed]
61.
Shuttleworth, W.J.; Zreda, M.; Zeng, X.; Zweck, C.; Ferré, T.P.A. The COsmic-ray Soil Moisture Observing
System (COSMOS): A non-invasive, intermediate scale soil moisture measurement network. In Proceedings
of the British Hydrological Society Third International Symposium, Managing Consequences of a Changing
Global Environment, Newcastle, UK, 19–23 July 2010; pp. 19–23.
62.
Zreda, M.; Shuttleworth, W.J.; Zeng, X.; Zweck, C.; Desilets, D.; Franz, T.; Rosolem, R. COSMOS:
The cosmic-ray soil moisture observing system. Hydrol. Earth Syst. Sci. 2012, 16, 4079–4099. [CrossRef]
63.
Desilets, D.; Zreda, M.; Ferré, T.P.A. Nature’s neutron probe: Land surface hydrology at an elusive scale with
cosmic rays. Water Resour. Res. 2010, 46, 1–7. [CrossRef]
64.
Franz, T.E.; Zreda, M.; Rosolem, R.; Ferre, T.P.A. A universal calibration function for determination of soil
moisture with cosmic-ray neutrons. Hydrol. Earth Syst. Sci. 2013, 17, 453–460. [CrossRef]
65.
Delgoda, D.; Malano, H.; Saleem, S.K.; Halgamuge, M.N. Irrigation control based on model predictive
control (MPC): Formulation of theory and validation using weather forecast data and AQUACROP model.
Environ. Model. Softw. 2016, 78, 40–53. [CrossRef]
66.
Box, G.E.P.; Cox, D.R. An Analysis of Transformations. J. R. Stat. Soc. 1964, 26, 211–252.
67.
Cleveland, R.B.; Cleveland, W.S.; McRae, J.E.; Terpenning, I. STL: A seasonal-trend decomposition procedure
based on loess. J. Off. Stat. 1990, 6, 3–73.
68.
Ben Taieb, S.; Bontempi, G.; Atiya, A.F.; Sorjamaa, A. A review and comparison of strategies for multi-step
ahead time series forecasting based on the NN5 forecasting competition.
Expert Syst.
Appl.
2012,
39, 7067–7083. [CrossRef]
69.
Crone, S.F.; Hibon, M.; Nikolopoulos, K. Advances in forecasting with neural networks? Empirical evidence
from the NN3 competition on time series prediction. Int. J. Forecast. 2011, 27, 635–660. [CrossRef]
70.
Chollet, F. Keras. Available online: https://keras.io/ (accessed on 11 October 2018).
71.
Dahl, G.E.; Sainath, T.N.; Hinton, G.E. Improving deep neural networks for LVCSR using rectiﬁed linear units
and dropout. In Proceedings of the 2013 IEEE International Conference on Acoustics, Speech, and Signal
Processing, Vancouver, BC, Canada, 26–31 May 2013.
72.
Kingma, D.P.; Ba, J. Adam: A Method for Stochastic Optimization. In Proceedings of the International
Conference on Learning Representations, San Diego, CA, USA, 7–9 May 2015.
73.
Steduto, P.; Hsiao, T.C.; Raes, D.; Fereres, E. Aquacrop-the FAO crop model to simulate yield response to
water: I. concepts and underlying principles. Agron. J. 2009, 101, 426–437. [CrossRef]
74.
Raes, D.; Steduto, P.; Hsiao, T.C.; Fereres, E. Aquacrop—The FAO crop model to simulate yield response to
water: II. Main algorithms and software description. Agron. J. 2009, 101, 438–447. [CrossRef]
75.
Hsiao, T.C.; Heng, L.; Steduto, P.; Rojas-Lara, B.; Raes, D.; Fereres, E. Aquacrop-The FAO crop model to
simulate yield response to water: III. Parameterization and testing for maize. Agron. J. 2009, 101, 448–459.
[CrossRef]
76.
Linker, R.; Ioslovich, I.; Sylaios, G.; Plauborg, F.; Battilani, A. Optimal model-based deﬁcit irrigation
scheduling using AquaCrop: A simulation study with cotton, potato and tomato. Agric. Water Manag.
2016, 163, 236–243. [CrossRef]
Sensors 2018, 18, 3408
22 of 22
77.
Perez-Ortola, M.; Daccache, A.; Hess, T.M.; Knox, J.W. Simulating impacts of irrigation heterogeneity on
onion (Allium cepa L.) yield in a humid climate. Irrig. Sci. 2015, 33, 1–14. [CrossRef]
78.
Kim, D.; Kaluarachchi, J. Validating FAO AquaCrop using Landsat images and regional crop information.
Agric. Water Manag. 2015, 149, 143–155. [CrossRef]
79.
Akumaga, U.; Tarhule, A.; Yusuf, A.A. Validation and testing of the FAO AquaCrop model under different
levels of nitrogen fertilizer on rainfed maize in Nigeria, West Africa. Agric. For. Meteorol. 2017, 232, 225–234.
[CrossRef]
80.
Chai, T.; Draxler, R.R. Root mean square error (RMSE) or mean absolute error (MAE)?—Arguments against
avoiding RMSE in the literature. Geosci. Model. Dev. 2014, 7, 1247–1250. [CrossRef]
81.
Géron, A. Hands-on Machine Learning with Scikit-Learn and TensorFlow, 1st ed.; Tache, N., Ed.; O’Reilly Media:
Sebastopol, CA, USA, 2017.
82.
Qin, J.; Badgwell, T. A survey of industrial model predictive control technology. Control Eng. Pract. 2003,
11, 733–764. [CrossRef]
83.
Kobayashi, S.; Shirayama, S. Time Series Forecasting with Multiple Deep Learners: Selection from a Bayesian
Network. J. Data Anal. Inf. Process. 2017, 5, 115–130. [CrossRef]
© 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).


Paper 5:
- APA Citation: Blessy, A., Kumar, A., Prabagaran, A., Quadir, A., Alharbi, A. I., Almusharraf, A., & Khan, S. B. (2023). Sustainable irrigation requirement prediction using Internet of Things and transfer learning. Sustainability, 15(10), 8260.
  Main Objective: The main objective of the study is to predict irrigation requirements for specific sites using IoT-collected data and advanced predictive models, thereby optimizing water usage and agricultural productivity.
  Study Location: None
  Data Sources: "Survey data", "Interviews", "Case studies", "Literature review"
  Technologies Used: Internet of Things (IoT), K-nearest neighbour (KNN), Adaptive Network Fuzzy Inference System (ANFIS), Long Short-Term Memory (LSTM)
  Key Findings: The study finds that the integration of IoT and machine learning models, particularly deep learning and ensemble methods, can significantly improve the accuracy of irrigation recommendations. By leveraging real-time environmental data, the system can adjust irrigation schedules to meet specific crop needs, reducing water waste and optimizing crop yields.
  Extract 1: Addressing the global food challenge: The review aims to explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity to meet the growing demand for food.
  Extract 2: Examining automation across the entire pipeline: The review intends to systematically analyze the automation of each component of the irrigation management pipeline, from data collection and transmission to processing, analysis, decision-making, and automated action.
  Limitations: None
  Relevance Evaluation: This paper falls squarely within the focus of the review, which is to examine automated, real-time irrigation systems that integrate IoT and machine learning. The study investigates advanced predictive models, such as deep learning and ensemble methods, specifically for precise, site-specific irrigation recommendations. This research makes a significant contribution to the review by providing valuable insights into the effectiveness of these models in optimizing irrigation management and enhancing agricultural productivity.
  Relevance Score: 1.0
  Inline Citation: (Blessy et al., 2023)
  Explanation: The proposed system employs IoT technology to gather various environmental data, including soil moisture and humidity levels. It then uses K-nearest neighbour ("KNN") to estimate the most likely irrigation requirement based on the data collected. For more accurate predictions, Adaptive Network Fuzzy Inference System ("ANFIS") is applied for short-term forecasting. Finally, to optimize future water usage, Long Short-Term Memory ("LSTM") is utilized for long-term forecasting.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all   Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Sustainability All Article Types Advanced   Journals Sustainability Volume 15 Issue 10 10.3390/su15108260 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editor Juan Miguel Navarro Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 1279 Citations 4 Table of Contents Abstract Introduction Related Work Materials and Method Result and Discussion Conclusions Author Contributions Funding Institutional Review Board Statement Informed Consent Statement Data Availability Statement Acknowledgments Conflicts of Interest References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle Sustainable Irrigation Requirement Prediction Using Internet of Things and Transfer Learning by Angelin Blessy 1, Avneesh Kumar 1, Prabagaran A 2, Abdul Quadir Md 3, Abdullah I. Alharbi 4, Ahlam Almusharraf 5,* and Surbhi B. Khan 6,7,* 1 School of Computer Science and Engineering, Galgotias Univeristy, Greater Noida 201310, India 2 Visa Consolidated Support Services India Pvt. Ltd., Bangalore 560048, India 3 School of Computer Science and Engineering, Vellore Institute of Technology, Chennai 600127, India 4 Department of Computer Science, Faculty of Computing and Information Technology, King Abdulaziz University, Rabigh 21911, Saudi Arabia 5 Department of Business Administration, College of Business and Administration, Princess Nourah bint Abdulrahman University, P.O. Box 84428, Riyadh 11671, Saudi Arabia 6 Department of Electrical and Computer Engineering, Lebanese American University, Byblos P.O. Box 36/S-12, Lebanon 7 Department of Data Science, School of Science, Engineering and Environment, University of Salford, Manchester M5 4WT, UK * Authors to whom correspondence should be addressed. Sustainability 2023, 15(10), 8260; https://doi.org/10.3390/su15108260 Submission received: 3 April 2023 / Revised: 9 May 2023 / Accepted: 10 May 2023 / Published: 18 May 2023 (This article belongs to the Section Sustainable Water Management) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Irrigation systems are a crucial research area because it is essential to conserve fresh water and utilize it wisely. As a part of this study, the reliability of predicting the usage of water in the present and future is investigated in order to develop an effective prediction model to communicate demand. In order to improve prediction, we develop a prediction model and share the updated model with nearby farmers. In order to forecast the irrigation requirements, the recommended model utilizes the Internet of Things (IoT), k-nearest neighbours (KNN), cloud storage, long short-term memory (LSTM), and adaptive network fuzzy inference system (ANFIS) techniques. By collecting real-time environmental data, KNN identifies the closest water requirement from the roots and its surrounding. In order to predict short-term requirements, ANFIS is used. To transfer the new requirements for better prediction, transfer learning is used. Time-series-data updates are predicted using LSTM for future forecasting, and the integrated model is shared with other farmers using cloud environments to enhance forecasting and analysis. For implementation, a period of nine to ten months of data was collected from February to December 2021, and banana tree was used to implement the planned strategy. Four farms, with measurements, were considered at varying intervals to determine the minimum and maximum irrigation needs. The requirements of farms were collected over time and compared to the predictions. Future requirements at 8, 16, 24, 32, and 48 h were also anticipated. The results indicated were compared to manual water pouring, and, thus, the entire crop used less water, making our prediction model a real-world option for irrigation. The prediction model was evaluated using R2, MSLE and the average initial prediction value of R2 was 0.945. After using transfer learning, the prediction of the model of Farm-2, 3 and 4 were 0.951, 0.958 and 0.967, respectively. Keywords: sustainable irrigation system; IoT; LSTM; ANFIS; soil sensing; transfer learning 1. Introduction With increasing population growth and the need for food production, the agriculture sector utilizes around 70% of fresh water [1]. A huge amount of water and energy is wasted in irrigation systems. A total of 40% [2,3] of water is wasted because of evaporation, poor water management and poor irrigation systems. The water–energy–food (WEF) nexus is an interdependent approach which provides mutual integration for a sustainable ecosystem. Particularly, an effective irrigation system optimizes the usage of water and reduces the consumption of energy. WEF ecosystem nexuses provide the solution to achieve long-term environmental, economic and social goals. Effective, sustainable water utilization is achieved for irrigation systems and reduces water usage. In addition, due to global changes, lower rainfall rates, and climatic changes, a huge amount of water is also required for plants. Requirement analysis and management of water supply to plants are important to research in today’s agricultural society. Based on varying environmental changes, water requirements for plants are managed using an irrigation system. Different water-optimization techniques and effective water-management systems are used to reduce water usage and achieve an effective water-requirements prediction system for plants, to increase production yields. Effective irrigation and scheduling systems are needed for society, and they increase productivity and reduce water usage. Recent technologies are used to effectively manage sustainable irrigation systems and decision-making. Artificial intelligence plays a major role in decision-making and requirement predictions in recent technologies such as IoT. The combination of IoT, the cloud and artificial intelligence constitutes a new methodology for decision-making because interconnected technologies such as firmware and mechanical and programming techniques are used to manage irrigation systems. IoT devices are used to sense the data from their surroundings, a cloud environment is used to process the data, and artificial-intelligence techniques are used to make decisions and predict the time-series data. Importantly, recent machine-learning and deep-learning techniques play a vital role in decision-making systems. Dominant techniques for decision-making include neural networks, KNN, support vector machines, decision tree (DT), LSTM, deep neural networks, etc. The combination of machine learning and IoT in a smart irrigation system has three layers for processing the entire application [4]: data gathering, data processing and intelligent system, and application layers. Data gathering and transmission: in the first layer of an effective irrigation system, the layer collects all the information using sensors and transmits it using networking devices [5]. Data processing and intelligence layer: in the second layer, intelligence techniques are used for processing and decision-making. Application layers: the third layer performs planning, optimization and implementations using the second layers’ decision [6]. The data-processing layers are used to collect the data and perform the processing steps in the initial stages. The data-processing steps collect all the inputs from the sensors, atmosphere and other inputs. The data-processing layers apply the initial processing of surrounding information and intelligence techniques. The data-processing layer uses intelligence techniques such as machine-learning models and other statistical techniques to process the data. The application layer helps to connect to the real world. The first and second layers are interconnected to processing and decision-making. Similarly, the second and third layers are connected to decision-making applied to the real world. The previous research [7] shows different challenges and limitations in irrigation systems. Some of the dominant limitations are as follows. i. The irrigation system must be fully automated from the end-to-end process. ii. The integrations of different functionalities of irrigation systems cannot be interconnected from data collection to processing. iii. The real environment inputs (rain, soil moisture and atmosphere inputs) are not interconnected. iv. The current- and future-requirements prediction is still one of the main research gaps in smart irrigation systems. v. The predicted features and requirements are not shared with the neighbour farmers. To overcome the above challenges, the key contribution of the proposed work is as follows: In this work, IoT sensors and k-nearest neighbours are used to sense and collect the requirements. We also propose a system to predict the short- and long-term sustainable prediction requirements of the irrigation system using ANFIS and LSTM techniques. The proposed model shares the sustainable requirements of the prediction using the cloud environment and shares the features with the nearest farmers for better requirements prediction using transfer learning. The proposed model reduces and optimizes the sustainable irrigation requirements of the crops. It reduces by 42% to 50% the freshwater requirements compared to the previous traditional methods. The proposed work reduces water usage because the short- and long-term usage of irrigation requirements are calculated using the sensors, weather and history. Compared to the previous methods, the coefficient of determination (R2) is better (0.955), and mean squared logarithmic error (MSLE) is less (0.439). Compared to previous methodologies, this work is the first to introduce transfer learning to an irrigation system and forecast irrigation requirements using transfer learning to predict one farm from another. Compared to the previous method of irrigation requirements prediction [8], our method of LSTM and ANFIS with transfer learning reduces by 30.24% the water requirements in the single node of a banana tree in the implementations. Our method was tuned to consume 1.16% less water in a single banana-tree node than in ref. [8]. The rest of the manuscript is organized as follows. Section 2 presents different irrigation methods and requirement analysis methods. Section 3 presents the materials, working methodology, and optimized methods. Section 4 presents implementation results and comparison with dominant existing methods and the paper finishes with the Section 5. 2. Related Work This section presents different existing smart irrigation models, frameworks, techniques, machine-learning and deep-learning techniques, transfer learning, and a comparison of different irrigation systems for supporting the proposed work. Different researchers have presented various works related to machine learning, deep learning, the Internet of Things, cloud computing, and highly integrated technologies for smart irrigation. Initial data processing and decision-making are performed using these technologies. 2.1. Irrigation Techniques This section on related work presents how previous techniques are supported for centralized storage, data processing, and decisions. The authors of [9] present an IoT structure for processing, storing, and analyzing data using a decision system. An intelligence application system using an IoT system with different dimensions, such as moisture, water evaporation, and land slope, is considered for decision-making processing. The authors of [10] present two models, geography and climatology, and use different parameters for prediction, including moisture, wetness, daily and monthly soil requirements rates, evaporation of moisture and weather reports. The authors of [6] propose a CWSI framework for irrigation management using temperature distributions, and, with the help of this structure, water requirements are reduced. The requirement optimization is performed using time intervals and continuously checking the requirements of the plants. The authors of [11,12] propose an irrigation system using control-based scheduling to manage different factors such as humidity, wind speed, wind velocity, soil moisture, etc. The sensor-based prediction for managing irrigation and soil moisture sensor senses different soil conditions, and mobile applications are used to measure and monitor different activities of the irrigation system. Different recommendation systems such as statistical, machine-learning, and deep-learning models are used to manage the prediction. The authors of [13,14] present different activities-based machine- and deep-learning, regression model, GBT and DNN methods to increase the prediction rate. In this model, the accuracy of predictions is increased by 93% using various parameters. The authors of [15] present an intelligence system which employs thermal images to analyze the various requirements of an irrigation system. Various parameters are measured using thermal images, and leaf potential is calculated. The main drawback of this work is that soil-moisture measurement is difficult to analyze. The authors of [16] propose machine-learning and IoT techniques to manage smart irrigation with the help of different parameters, such as various soil conditions, environmental parameters, temperature and nearest features, which are considered for requirement calculation. The authors of [8] propose a system for optimizing the water requirement of crops using the WSN and different node sensors. Control devices are used to manage the crop using mobile and web applications. With the help of mobile and web applications, soil moisture and future requirements are calculated. The IoT with multiple sensors is used for water management [17,18] using different parameters such as soil properties, moisture, temperature, and rain sensors. In this work, the output is predicted and operated automatically and manually. The authors of [19,20] propose different monitoring and control systems for irrigation systems. Different energy models and IoT platforms are used to analyze parameters and use a decision pumping schedule. The authors of [21] propose a LoRa network structure with an energy-efficient model to cover up to 5 km with smart control. All the information is transferred to different places using the LoRa structure. The various machine- and deep-learning approaches analyze the requirements, moisture analysis, and future recommendations of irrigation systems. The authors of [4] propose a model, with the help of genetic techniques, to increase yields and analyze various recommendations. The genetic model [22] provides the solution using sequential inputs and non-continuous scheduling. The authors of [9] propose a system using metrological data and created a weekly irrigation-requirement plan using regression and classifier techniques. This system achieves 95% and 93% accuracy using classification and regression techniques. The authors of [23] propose a location-based optimized irrigation system using a genetic algorithm with the help of previous data. The location-based water-requirement analysis for irrigation systems using the KNN algorithm with an intelligent IoT sensor is used to plan irrigation systems [5]. In addition, this work is fully automated with machine-to-machine data transmission for effective decision-making. The heterogeneous data management in irrigation systems uses machine learning and IoT, and this work predicts the requirement for irrigation using the related data. The time-to-time irrigation requirements are also calculated using logical regression analysis. The authors of [11,12,24] calculate humidity and temperature using a decision tree. The future requirements for the prediction of irrigation systems are calculated using the SVM algorithm, but the requirements for prediction accuracy are very low. The summary of the different IoT frameworks, models, and machine-learning algorithms is presented in Table 1. The authors of [25] presente a comparative study for precision agriculture using deep learning and IoT. In this work, authors have gathered and analysed disease, weeds, and soil yields using deep learning techniques. And also, the authors analysed different components of agriculture, such as sensors, UAVs, data acquisition, annotations and datasets used for predictions. Finally, pest detection is performed using VGG16 and transfer learning, which achieves 96.58% accuracy in prediction. The authors of [26] presented the state of the art for managing water using IoT devices. Using the connecting devices, the authors address water-planning and water-distribution issues. This case study is planned with the help of IoT-enabled devices. The author of [27] propose a smart and green irrigation system using gradients and regression trees, which are used for the implementation part. The authors of [28,29] use different parameters such as temperature, humidity and weather data, which are used for the prediction of irrigation requirement. The SVR and K-means are used for soil-moisture prediction. Table 1. Summary of advantages and limitations of supporting works. The different limitations are summarized using the above-related works. Most of the work did not address the requirements of roots, and the nearest features were not considered for the irrigation-system requirement analysis. The recent works do not consider all parameters, such as wind, moisture, and temperature, for requirement prediction. The previous systems need to be integrated with the full automation system. In this work, we planned the different irrigation parameters to predict and analyze the requirement of the irrigation system based on the crop requirements. 2.2. Transfer Learning for Agriculture and Irrigation System Transfer learning is a knowledge-storing problem which applies similar and related tasks for prediction and classification problems. The transfer of learning is used in different applications, classification problems, knowledge transfer, agriculture, etc. In agriculture [31], it is used in plant disease prediction, species detection, plant-domain-knowledge transfer and plant classification and information sharing. Recently, different researchers have addressed different problems related to transfer learning in agriculture. The authors of [32,33] proposed a knowledge-transfer model to classify different crops and reduce the retraining and labelling time. In this work, authors reduced 20% of the time compared to the normal time. Similarly, the authors of [34] use transfer learning for weed identification among different plants and achieved an accuracy of 99.29%. Similarly, the authors of [35] propose deep transfer learning for trash classification. In this framework, the authors achieved 94% and 98% accuracy using different datasets. The authors of [36] propose a model for identifying bale detection using deep transfer learning and a domain-adaptation approach, which transfers the source images to target domain images. The authors of [37] propose a CNN and transfer-learning model for identifying crop-attacking pests in the early stages of crop growth. Transfer learning is used to create fine-tuned pre-trained models. The authors of [38] propose a transfer learning for transferring a base model, characterized using different samples/features, from one place to another. In this framework, the transfer of features is performed in two places in the context of the irrigation mapping of time-series features in two locations. The authors of [39] propose transfer learning with IoT to train the model better using soil moisture and transfer the soil conditions from one soil to another, with the two soils having different distributions. The previous works [31,32,33,34,35,36,37] on transfer learning are used in classification based on features, which are transferred within the framework and between the models. The authors of [38,39] proposed models for transferring the features from one spatial location to another spatial location using IoT technologies. In addition, the author of [39] transfers the soil features from one place to another using models. 3. Materials and Method This section presents the materials and methods for the proposed work. The proposed work uses live data and historical datasets to predict the requirement for the present and future irrigation systems. Live weather data is used to correlate current and future requirements. IoT devices are interconnected for present-requirement collecting, and different components are used for future-requirement collections. The proposed method uses k-nearest neighbours, cloud storage, LSTM, and ANFIS to predict an irrigation system. The IoT devices must collect the data from the environments, for which KNN find the nearest water requirements from the root and surroundings, and ANFIS predicts short-term conditions. The LSTM is used to predict time-series-data updates for future prediction, and the transfer learning is used to transfer the learning features information from one cultivation field to another. 3.1. Materials In the proposed method, materials are collected in three ways: IoT sensors, past data collected from previous years, and live data collected from the weather data. The IoT sensors and components to collect soil moisture, air moisture, temperature and soil moisture are presented in Table 2. The sensor and IoT devices are also used to transfer the data from one machine to another and to the cloud environment. Table 2. Components and their usages. The live-data collection location and the latitude and longitude of the experimental location is 8.2473502, 77.2743729, 345. The data was collected from Kanyakumari, Tamil Nādu, India. This location has seasonal rainfall, and basic requirements were collected using IoT devices. Three basic components, such as IoT devices, gateway and cloud, were interconnected to communicate and transfer data from the physical location to the cloud. Four different fields were used for collaboration and decision-making in the mentioned location. The basic requirements for prediction were measured using various sensors. Figure 1 shows the different requirements predictions presented in 3 h time intervals. Similarly, the basic requirements were also measured between 5 h, 8 h and 10 h. The cultivation requirement of the Plantain Banana or Red Dacca (Australia) from the beginning to the end is represented in Table 3. The entire cultivation of the species started in February and ended in October. Table 3 [40,41] summarises the basic water requirement from the beginning of February till the end of the cultivation in October. This basic requirement is plotted manually with the help of farmers, and four farmers were involved in the cultivation. Figure 1. Collections of atmosphere requirements. Table 3. Monthly water requirement for banana cultivation. 3.2. Method This proposed work used IoT devices, k-nearest neighbours, cloud storage, LSTM, and ANFIS to predict an irrigation system. The IoT devices must collect the data from the environments, for which KNN find the nearest water requirements from the root and surroundings, and ANFIS predicts short-term conditions. The LSTM is used to predict time-series-data updates for future prediction, and the Spearman rank correlation method correlates the needs in different intervals. The proposed work’s basic goal is to predict current and future requirements for different time intervals, such as 3 h, 8 h, 12 h and 24 h and 48 h. The basic structure of the proposed work is presented in Figure 2. The proposed structure of the prediction model consists of three main parts: initial-value predictions, integrated prediction model and transfer learning. The initial-requirements prediction is performed using the group of sensors. The group of sensors sensed soil-moisture, root-moisture, and weather data. In the integrated model, KNN, ANFIS and LSTM algorithms were used for sensing nearest values and short-term and long-term predictions. The prediction values and features were shared using transfer learning. Figure 2. Structure of the proposed work. 3.2.1. KNN Algorithm KNN is a supervised algorithm to find the nearest values predicted using sensors with many assumptions [42,43]. The dataset inputs considered the real values, taking the values from the certain k nearest distance from the input dataset. The prediction output is the average distance between the input taken and the given sensed input using the average voting of the nearest prediction. The trained data of multiple inputs consist of multiple features, and different classes are labelled using a supervised KNN algorithm. The nearby sensed values depend on the discrete or continuous distance. The different features’ relationship or distance between the features is predicted using Euclidean distance. The discrete values, such as soil moisture, atmospheric moisture and weather data, are evaluated using the Euclidean distance. The recommendation of the features is also evaluated and considered as the input value for the integrated prediction model. The Euclidean distance vector evaluated the different region-wise and root-moisture values considered as the input. 3.2.2. ANFIS The ANFIS is an artificial neural network with a combination of neural-network and fuzzy-logic properties. The inference system is a set of if-then rules with non-linear functions [44,45]. The ANFIS was constructed using five layers: an antecedent layer, three hidden layers, and a consequent layer. The antecedent layer is an input layer, and the consequent is an output layer. The three hidden layers are based on rule-based and fuzzy logic applied to these three layers. The first input layer between 0 and 1 is called the “premise parameter”. The second layer estimates the income for each neuron using the product operator. The third layer normalizes the input signal, and the fourth layer is fuzzification. The fifth layer is a summarized weighted output layer. The ANFIS is an optimal and intelligent way to manage the energy system [46]. 3.2.3. Long Short-Term Memory LSTM is a recurrent neural network which predicts and classifies data requirements using time-series data. It consists of input, output and forget gates. The different gates control the flow of information and help exit and enter the gates. The LSTM predicts future time-series data in short- and long-term predictions [47,48]. 3.2.4. Transfer Learning Transfer learning is used to train the system to perform the relevant similar learning of the existing model. The main part of the learning is generalized, and the different scenarios or relevant conditions are transferred from one model to another. The main advantages of transfer learning are saving resources, timing to complete similar learning, increasing the learning model’s efficiency, and avoiding the negative prediction from the pre-trained model [38,49]. 3.3. Working Principle This proposed work predicts various requirements of irrigation using IoT sensors and weather inputs and helps in finding short- and long-term predictions. The flow of the representation of the proposed work is presented in Figure 3. The working process of the proposed work consists of four main parts: data collection from various sources, nearest requirement prediction, short-term prediction (ANFIS), long time-series prediction (LSTM) and predicted knowledge sharing to nearest farms (transfer learning). The working process of the proposed work uses four steps: processing the inputs and storage, short-term prediction, long-term prediction and transfer learning and sharing features from one data source to another data source. Initially, the data is collected from the sensors, with the help of KNN algorithms for predictions. With the collected data, weather forecasts and previous data are used as the input. The processed data is applied for short-term prediction using the ANFIS. The short-term prediction of irrigation recommends water pumping. For long-term prediction, the LSTM technique is used, and, if required, it recommends water pumping. This prediction is performed on a single farm for short- and long-term prediction. Once the farming location requirement is predicted, the features are transferred to another farm for better predictions. The second farm processes the new input data from a particular location and processes the farm 1 features for better performance. Figure 3. Workflow representation of proposed work. The entire working procedure is described in Algorithm 1. The processing steps of the algorithms consist of data processing, and prediction and sharing of knowledge gained from other farmers, as well. Initially, the sensor data from farm 1 and weather data are transferred to the cloud storage. The history data and collected data are initially processed for the prediction of requirements. The processed data predicts the short-term (Sp) and long-term (Lp) requirements using ANFIS and LSTM techniques. Using these techniques and collected data, initial requirements are predicted in the long term and short term. The first farm (X1) gains the knowledge, and so the stored model weight is shared with the nearest second farm for better prediction. A detailed description of the working process is as follows.     Algorithm 1 Requirement Prediction and Features Transfer Input: Xm: Data Collection Using Sensors (Moisture); Xw: Weather details; TT: Temperature; X1, X2, X3, and X4: Farms Prediction Details Output: Short- and Long-term Prediction Details (Sp, Lp) Generating algorithm Begin: Moisture (Xm), Weather details (Xw), Temperature (TT) > 0 X1, X2, X3, and X4 > 0 Calculate (Xm), (Xw), (TT); { if Xm, Xw TT >0 Predict of Each Farm Requirements Details N = C (Prediction of Nearest features with respect to weights and time) D = Prediction of distance features between two terminals Sp = Tp -AP // Short- term prediction Lp = Tp -AP // Long- term prediction } End of Each Farm Prediction Share the month-wise history data Y = X1 (End prediction of single Farm) Share X1 to X2 T = [Y, f(.)] //Start Transfer Learning if X1 > X2 / X2 >X1 State Share the Y values if Xw = Rainy Stop // Stop sharing, Sensors in Sleep Mode end Initially, the input collected from various input sources is real data, with the help of IoT devices, past data and weather information from the nearest weather stations. In this work, four farms for banana cultivation were considered. Each farm is considered as X1, X2, X3, and Xn. The output of four farms with the input process model is represented in Equation (1). 𝑌=𝑋1,𝑋2,⋯⋯𝑋𝑛 (1) Each farm used three input sources: past cultivation data (x1); weather data (x2); and current data, collected with the help of IoT and sensors (x3). The combination of inputs and output is represented in Equation (2). 𝑌=𝑋1(𝑥1,𝑥2,𝑥3),𝑋2(𝑥1,𝑥2,𝑥3),𝑋3(𝑥1,𝑥2,𝑥3),𝑎𝑛𝑑𝑋4(𝑥1,𝑥2,𝑥3) (2) The x3 combines the nearest features, short-term requirement predictions, long-time predictions and knowledge transfer from one farm to another. Initially, the nearest features are predicted using the KNN algorithms. The nearest features are calculated based on the distance between the roots from the initial prediction to the next nearest prediction. The distance is calculated using the Euclidian distance. The mathematical representation of nearest features calculation and distance measurement between the features are represented in Equations (3) and (4). 𝑁= 𝐶 𝑤 𝑛 (𝑥1,𝑥2,⋯⋯𝑥3) (3) N denotes the predicted nearest values, C denotes features, n denotes different features, w denotes weight, and 𝑥1,𝑥𝑛 denotes different input features. The distance between the initial root prediction features and the next feature distance is as follows. 𝐷= ( 𝑥 2 − 𝑥 1 2 )−( 𝑦 2 − 𝑦 1 2 ) − − − − − − − − − − − − − − − − − − − √ (4) D denotes distance features. The moisture is measured based on the starting and ending points of the roots. Based on the nearest features, past data and weather information, short-term inferences are calculated using ANFIS. The inference model and short-term learning prediction are represented in Equations (5) and (6). 𝑆 𝑝 = ∑ 𝑖=0 𝑛 ( 𝑇 𝑝 − 𝐴 𝑝 ) 2 (5) 𝑆 𝑝 denotes short-term prediction, 𝑇 𝑝 denotes the targeted prediction, and 𝐴 𝑝 denotes actual prediction. Similarly, the learning rate of ANFIS representation is as follows. 𝜎= 𝑘 𝛿𝐸 𝛿𝜎 − − √ (6) 𝜎 denotes the learning rate, k denotes the learning size, 𝛿 E denotes the error rates and 𝛿 𝜎 denotes the training data. Based on Equations (5) and (6), the short-term inference result is calculated. If the short-term inference result is not required, long-term prediction is performed using the LSTM algorithm. The LSTM algorithm predicts long-term series data [27,28] with the help of three types of inputs, as mentioned earlier. The LSTM algorithm consists of three gates: forget gate; remember cell; activation sigmoid function and new states of prediction, represented as 7 to 10. 𝑓 𝑡 = 𝜎 𝑞 ( 𝑤 𝑓 𝑥 𝑡 + 𝑢 𝑓 ℎ 𝑡 −1+ 𝑏 𝑓 ) (7) 𝑓 𝑡 —activation function, ℎ 𝑡 −1 denotes previous unit output 𝑡−1 , 𝑥 𝑡 denotes input data, 𝑏 𝑓 denote bias. Sigmoid function, denoted as 𝑆(𝑡) , is represented as follows. 𝑆(𝑡)= 1 1+ 𝑒 𝑡 (8) The remember cell and new state function are as follows. 𝑖 𝑡 =𝜎( 𝑤 𝑡 ( ℎ 𝑡 −1)+ 𝑏 𝑡 ) (9) 𝑆(𝑛)= 𝑓 𝑡 ∗ 𝑆 𝑡 −1+ 𝑡 𝑡 (10) With the help of KNN, ANFIS and LSTM, prediction is performed using the short-term and long-term prediction of the requirements. The requirements of X1, X2, X3, and X4 are shared using the knowledge transfer. The knowledge transfer is represented in Equation (11) [50]. The initial learning is performed from the X1 (x1, x2, x3) and predicted values or known values are considered as Y. The transferring learning is denoted as 𝑇=[𝑌,𝑓(.)] (11) T denotes the learning task transferred to the next node or prediction task, Y denotes the prediction output, and f(.) denotes the prediction function with the different instances. This predicted task is transferred to the other farm using different thresholds or different conditions. 4. Result and Discussion For experimental and implementation requirements, the specification is described in Table 2 and Table 3. Data was collected from India’s metrological deportment and banana cultivation research centre. Initially, the requirements, such as X1, were collected from the IoT sensors. Using the sensor, surrounding moisture, root moisture and humidity values were also collected. In addition, minimum and maximum water requirements were collected manually from the farmers. The maximum 50 L of water requirements for a month and intervals of irrigation of 5 to 7 days were collected for fixing the threshold values for training and testing. Some of the fixed and basic parameters considered for irrigation are shown in Table 4. Table 4. Basic parameters for irrgation. In our work, cloud computing is used for data storage and sharing of data. Using cloud computing, we deployed models and real predictions are shared with farmers for betterment. With the help of artificial intelligence as a service (AIaaS), the model was deployed and executed for better predictions. The predicted results were transferred for decision-making using IoT devices. For the implementation process of cloud computing in our work, we employed data collection using sensors; Raspberry Pi (ThingSpeak), which transfers the data from the physical devices to cloud environments; and AIaaS to predict data which has to be transferred to controlling devices and farmers. The dataset consists of Year, Month, Date, Hour, minute, moisture0 (Atmosphere), moisture1 (Plant Surface Moisture), Soil Moisture (Sensor 1), Root Moisture (Sensor 2), Temperature, Humidity, Wind Speed (mph), Rain, and irrigation. The dataset should be pre-processed using the one-hour time interval and the data should be mapped within one hour. All the data fields converted the data a pure value and dimensionless value. Finally, different magnitudes or units, comparisons of indexes and weighing, were considered in the pre-processing of the dataset. In this research work, a zero-mean standardization pre-processing method was used for processing the raw-data fields. The missing values happened due to maintenance, failure of instrumentation, invalid values and manual check-in. Our work uses the Akima [51] method for supplementary values, for time-series data and filling in the missing values for smooth curves. In our work, we validated the proposed method using accuracy, coefficient of determination (R2), mean squared logarithmic error (MSLE) and earned values (EV). Initially, the basic requirement of prediction training, testing and validation accuracy was predicted using the combination of ANFIS and LSTM. Figure 4 represents the training and testing accuracy of 97 iterations and 100 nodes’ data. The implementation hyperparameters are presented in Table 5 and Table 6. Figure 4. Training and testing accuracy of prediction. Table 5. Hyperparameters of LSTM. Table 6. Hyperparameters of ANFIS. Figure 1 shows various live indicators, such as temperature, humidity, rain possibility, and wind speed, taken from three calculations. The past cultivation data (x1), weather data (x2), and current data collected with the help of IoT and sensors (x3) and root moisture were also calculated continuously with the help of THERM200 and SHT11. In this work, irrigation requirement is predicted in terms of 8 h, 16 h, 24 h, 48 h and 60 h. Two main requirements directly affect the requirements: temperature and humidity. In this work, three types of requirements are predicted: short-term (8 h, 16 h), long-term (24 h, 48 h and 60 h) and changes implemented after transferring learning from one farm to another. The shortest inference result is predicted with the help of ANFIS, and long-term prediction is carried out with the help of LSTM. The shortest term prediction analysis was carried out in two months, March and July. The reason for the prediction of March and July is that rainfall is low during March. Similarly, in July, the rainfall starts, and, thus, the atmospheric temperature is low. The moisture and humidity of the current and the short-term requirement prediction of March and July’s requirement prediction, using ANFIS, are presented in Table 7. The shortest term prediction requirements are shown in Figure 5. The month-wise temperature and humidity are the two main requirements of short- and long-term predictions, such as temperature and humidity for 8, 16, 24, 32, and 48 h. The figure describes the minimum and maximum temperature and humidity, starting from 8 am and continuously measuring up to 48 h. Transfer learning is used for knowledge gained in the initial model in farm 1 and the knowledge gained by farmer 1 is used to retrain the farmer-2 models for better prediction using the changes from the farmer-1 data. Figure 5. Minimum and maximum temperature and humidity in March and July. Table 7. Short-term prediction of requirements. Based on the minimum and maximum temperature and humidity, the requirements of irrigation for March and April are summarized in Table 7. Compared with Table 3, the maximum requirement per day in March is 6 to 7 L, and in the requirement, prediction is also according to the maximum requirement per day, which is about 6 to 7 days. Similarly, July received 2 to 3 L per day based on the ANFIS prediction. Similarly, the long-term prediction was performed with the help of the LSTM algorithm, and prediction intervals are 24, 48, 72, etc. Using the long-term prediction, irrigation is performed because generally banana-irrigation intervals are between 3 days to 5 days. Based on the long-term prediction, irrigation was scheduled. The long-term prediction of farm-1 is presented in Table 8. Table 8. Long-term prediction of requirement. Based on Table 7 and Table 8, the entire prediction requirements of irrigation in March and April are in Table 9. This prediction requirement is calculated between four-day intervals. Four-day intervals correlate the short-term and long-term prediction. Table 9 and Figure 6 present the minimum and maximum requirements of irrigation. Figure 6. Month-wise requirement prediction of irrigation—Farm 1. Table 9. March and July irrigation dates and requirement. Table 7, Table 8 and Table 9 are the short, long and month-wise requirement prediction of farm 1’s prediction. In this prediction, ANFIS and LSTM are used. In addition, based on these two techniques, the month-wise prediction is presented in Table 9. Table 9 presents the minimum and maximum irrigation requirements in four-day time intervals. The four-day time interval is measured with the help of ANFIS and LSTM and the corresponding correlation of long- and short-term prediction. In March, the humidity, temperature and other parameters such as weather, wind speed and previous-year information are considered for prediction. Generally, the parameters mentioned earlier are very high in March, and wind speed is also very low compared to the other months in the specified location. The maximum irrigation requirement was higher that year, and the minimum requirement is similar to the maximum requirements. The difference between the minimum and maximum requirements is 8 L. Similarly, July is monsoon season, and if it rains in the specified location, the requirements for irrigation decrease automatically. The requirements mostly decrease in July, as the humidity is very low. Our proposed work was used different combinations of data, such as root moisture, atmosphere moisture, temperature, humidity, and weather data. While taking all these data, normal model prediction produces prediction error. To avoid the prediction error, our model used the ANFIS method and error rates for short-term predictions. The ANFIS used forward and backward passes in each layer for processing different data. The minimum irrigation requirement is nine, and the maximum is 16. Similarly, requirements are very low in the next three months, but during the summer, the irrigation requirements are very high in April, May and the middle of July. The entire year-wise irrigation requirements of farm 1 are presented in Figure 6. In this Figure 6, minimum and maximum requirements are summarized for farm 1. The maximum requirements are higher in March, April and May. Similarly, with the help of transfer learning, from farm 1 prediction is transferred to farm 2. Based on farm 1, the basic information is shared with farm 2. The basic irrigation requirements in March and April are shown in Table 10, and year-wise predicted results are presented in Figure 6. Transfer learning helps to reuse the model for new task prediction. Table 10 and Figure 7 show the differences after applying the first prediction and after transferring the prediction features of farm 1 and the new prediction of farm 2. Figure 7 shows the difference between applying transfer learning and reducing the consumption of water usage. Comparing Table 9 and Table 10, the requirement prediction is reduced because it produced better optimization and saved the irrigation requirements of two months. Overall requirements are also reduced in farm 2. Figure 7. Month-wise requirement prediction of irrigation—farm 2. Table 10. March and July irrigation dates and requirements (farm 2) using transfer learning. Comparing farm 1 to farm 2, the irrigation requirements are reduced to 7 L per banana plant. Farm 1’s total requirement was 200 L per plant, and after applying the transfer learning, the total requirement of irrigation was 193. After applying transfer learning, the 7 L irrigation requirement was reduced in farm 2. In the overall irrigation process, everyday prediction was transferred from farm 1 to farm 2 at a delay of 5 min time intervals, and, after that, farm 2’s irrigation requirement was predicted. The proposed work was evaluated using the coefficient of determination (R2). The R2 determines the model prediction measurements when increasing the iterations. Initially, the model was predicted to be 0.920 at 15 epochs and 0.958 at the 75th epochs. After applying the transfer learning, the farm-2, farm-3 and farm-4 values gradually increase. Figure 8 shows that the model prediction and relationship accuracy values increase after transferring the features. Figure 8. Comparison of R2, MSLE and EV. Comparison with Other Methods of Estimation and Transfer of Learning The proposed method was compared to the existing approach, which decreased the water consumption of a single node by 31.4% in the period of 2020. When compared to the previous approach, our method optimized 30.24% of water after applying transfer learning on a single node of the banana tree. Our method was tuned to consume 1.16% less water in a single node of a banana tree. Comparing our suggested method to the manual and technology-based approaches, we find that it optimized 41% to 50% more water in the farm. Using transfer learning, the proposed method reduced from 31.4% to 30.24% the water of a single node tree. Table 9 and Table 10 clearly illustrate the optimization of water usage following the implementation of transfer learning. Our proposed work was compared with the recent work [8,27,28,29], and it optimized the irrigation requirements. Compared to previous work, total water usage is reduced. Table 11 shows the water usage of our work and its comparison with previous work. Compared to the previous work, total irrigation requirements were reduced. Table 11. Comparison of requirement predictions. 5. Conclusions This work integrates IoT, machine-learning and transfer-learning techniques to achieve sustainability and predict irrigation-system water requirements. The main finding of this work is that it reduced water usage and transferred the features of the prediction model and exchange for better prediction and requirement analysis. IoT sensor devices collected basic requirements such as humidity, temperature, and moisture. The weather data and past data collected from the banana research centre were used for implementation. The proposed work used ANFIS for short-term predictions, such as 8, 16, 24, etc. The LSTM predicted long-time requirement predictions such as 24, 48, 72, etc. Based on short- and long-term predictions, the entire requirement was predicted in 4 days. In this work, data of two months, March and July, was predicted and analyzed. The entire requirement of overall cultivation was predicted and calculated in the short and long term, with the help of weather and past data. The farm-1 data features were transferred to farm two, and, thus, it predicted the irrigation requirement. Comparing farms 1 and 2, after irrigation, farm 2 had lower irrigation requirements in July, a change from 16 to 15; during May, the requirement increased from 31 to 34. Similarly, comparing the year-wise requirement of farm 1 to farm 2, we see that it reduces the requirements from 200 to 193 for a single banana tree. This work reduces the irrigation requirement and predicts the short- and long-term requirements of an effective irrigation structure at a particular interval. In the future, this approach will be extended to multiple farms. Based on that, the requirements can be optimized. In addition, further implementation of this work is being carried out using Federated learning, sharing the farm data, which predicts and shares the model for further irrigation. Author Contributions Conceptualization, A.B., A.K., A.A. and S.B.K.; Project administration, A.A. and S.B.K.; Resources, A.I.A.; Validation, A.I.A.; Software, A.Q.M.; P.A., Validation; Writing—original draft, A.B. and A.K.; Writing—review & editing, S.B.K. and A.A. All authors have read and agreed to the published version of the manuscript. Funding This research is supported by Princess Nourah bint Abdulrahman University Researchers, Supporting Project number PNURSP2023R432, Princess Nourah bint Abdulrahman University, Riyadh, Saudi Arabia. Institutional Review Board Statement Not applicable. Informed Consent Statement Not applicable. Data Availability Statement The data used in the study are available to other authors who require access to this material. Acknowledgments This research is supported by Princess Nourah bint Abdulrahman University Researchers Supporting Project number (PNURSP2023R432), Princess Nourah bint Abdulrahman University, Riyadh, Saudi Arabia. Conflicts of Interest The authors declare no conflict of interest. References Managing Water Sustainably Is Key to the Future of Food and Agriculture. Available online: https://www.oecd.org/agriculture/topics/water-and-agriculture/ (accessed on 8 May 2023). Samjstria, A.G. Efficiencies of Florida Agricultural Irrigation Systems; University of Florida: Gainesville, FL, USA, 1988. [Google Scholar] The Current Water Crisis and the Need for Alternative Farming Solutions. Available online: https://www.edengreen.com/blog-collection/water-crisis-drought (accessed on 8 May 2023). Abioye, E.A.; Hensel, O.; Esau, T.J.; Elijah, O.; Abidin, M.S.Z.; Ayobami, A.S.; Yerima, O.; Nasirahmadi, A. Precision Irrigation Management Using Machine Learning and Digital Farming Solutions. AgriEngineering 2022, 3, 70–103. [Google Scholar] [CrossRef] Samian, M.; Mahdei, K.N.; Saadi, H.; Movahedi, R. Identifying factors affecting optimal management of agricultural water. J. Saudi Soc. Agric. Sci. 2015, 14, 11–18. [Google Scholar] [CrossRef] Ahansal, Y.; Bouziani, M.; Yaagoubi, R.; Sebari, I.; Sebari, K.; Kenny, L. Towards smart irrigation: A literature review on the use of geospatial technologies and machine learning in the management of water resources in arboriculture. Agronomy 2022, 12, 297. [Google Scholar] [CrossRef] Blessy, J.A.; Kumar, A. Smart Irrigation System Techniques using Artificial Intelligence and IoT. In Proceedings of the 2021 Third International Conference on Intelligent Communication Technologies and Virtual Mobile Networks (ICICV), Tirunelveli, India, 4–6 February 2021; pp. 1355–1359. [Google Scholar] [CrossRef] Vianny, D.M.M.; John, A.; Mohan, S.K.; Sarlan, A.; Ahmadian, A. Water optimization technique for precision irrigation system using IoT and machine learning. Sustain. Energy Technol. Assess. 2022, 52, 102307. [Google Scholar] Evans, R.G.; LaRue, J.; Stone, K.C.; King, B.A. Adoption of site-specific variable rate sprinkler irrigation systems. Irrig. Sci. 2013, 31, 871–887. [Google Scholar] [CrossRef] Kamienski, C.; Soininen, J.-P.; Taumberger, M.; Dantas, R.; Toscano, A. Smart water management platform: IoT-based precision irrigation for agriculture. Sensors 2019, 19, 276. [Google Scholar] [CrossRef] Messaoud, S.; Ben Ahmed, O.; Bradai, A.; Atri, M. Machine learning modelling-powered IoT systems for smart applications. In IoT-Based Intelligent Modelling for Environmental and Ecological Engineering; Springer: Cham, Swizterland, 2021; pp. 185–212. [Google Scholar] Abba, S.; Wadumi Namkusong, J.; Lee, J.A.; Liz Crespo, M. Design and performance evaluation of a low-cost autonomous sensor interface for a smart IoT-based irrigation monitoring and control system. Sensors 2019, 19, 3643. [Google Scholar] [CrossRef] Evett, S.R.; Colaizzi, P.D.; Lamm, F.R.; O’Shaughnessy, S.A. Past, present, and future of irrigation on the US Great Plains. Trans. ASABE 2020, 63, 703–729. [Google Scholar] [CrossRef] Mukherjee, D.; Nandy, S.; Mohan, S.; Al-Otaibi, Y.D.; Alnumay, W.S. Sustainable task scheduling strategy in cloudlets. Sustain. Comput. Inform. Syst. 2021, 30, 100513. [Google Scholar] [CrossRef] Schoups, G.; Addams, C.L.; Minjares, J.L.; Gorelick, S.M. Sustainable conjunctive water management in irrigated agriculture: Model formulation and application to the Yaqui Valley, Mexico. Water Resour. Res. 2006, 42, 1–19. [Google Scholar] [CrossRef] Durrant, A.; Markovic, M.; Matthews, D.; May, D.; Enright, J.; Leontidis, G. The role of cross-silo federated learning in facilitating data sharing in the agri-food sector. Comput. Electron. Agric. 2022, 193, 106648. [Google Scholar] [CrossRef] Mahato, S.; Rakshit, P.; Santra, A.; Dan, S.; Tiglao, N.C.; Bose, A. A GNSS-enabled multi-sensor for agricultural applications. J. Inf. Optim. Sci. 2019, 40, 1763–1772. [Google Scholar] [CrossRef] John, A.; Sugumaran, M.; Rajesh, R.S. Performance Analysis of the Past, Present and Future Indexing Methods for Spatio-Temporal Data. In 2017 2nd International Conference on Communication and Electronics Systems (ICCES), Coimbatore, India, 19–20 October 2017; pp. 645–649. [Google Scholar] Abioye, E.A.; Abidin, M.S.; Mahmud, M.S.; Buyamin, S.; Ishak, M.H.; Abd Rahman, M.K.; Otuoze, A.O.; Onotu, P.; Ramli, M.S. A review on monitoring and advanced control strategies for precision irrigation. Comput. Electron. Agric. 2020, 173, 105441. [Google Scholar] [CrossRef] López-Morales, J.A.; Martínez, J.A.; Skarmeta, A.F. Improving Energy Efficiency of Irrigation Wells by Using an IoT-Based Platform. Electronics 2021, 10, 250. [Google Scholar] [CrossRef] Sánchez-Sutil, F.; Cano-Ortega, A. Smart Control and Energy Efficiency in Irrigation Systems Using Lo-RaWAN. Sensors 2021, 21, 7041. [Google Scholar] [CrossRef] Whig, P.; Kouser, S.; Velu, A.; Nadikattu, R.R. Fog-IoT-Assisted-Based Smart Agriculture Application. In Demystifying Federated Learning for Blockchain and Industrial Internet of Things; IGI Global: Hershey, PA, USA, 2022; pp. 74–93. [Google Scholar] Mahmoudi, N.; Majidi, A.; Jamei, M.; Jalali, M.; Maroufpoor, S. Mutating fuzzy logic model with various rigorous meta-heuristic algorithms for soil moisture content estimation. Agric. Water Manag. 2022, 261, 107342. [Google Scholar] [CrossRef] Shekhar, Y.; Dagur, E.; Mishra, S.; Sankaranarayanan, S. Intelligent IoT-based automated irrigation system. Int. J. Appl. Eng. Res. 2017, 12, 7306–7320. [Google Scholar] Saranya, T.; Deisy, C.; Sridevi, S.; Anbananthen, K.S.M. A comparative study of deep learning and Internet of Things for precision agriculture. Eng. Appl. Artif. Intell. 2023, 122, 106034. [Google Scholar] [CrossRef] Khamparia, S.; Jabade, S.; Kulkarni, S.; Nakade, P.; Bhatkhande, D. IoT for Water Management: A Sustainable Solution. In Internet of Things: Applications for Sustainable Development; Chapman and Hall/CRC: London, UK, 2023; Volume 109. [Google Scholar] Campos, N.G.S.; Rocha, A.R.; Gondim, R.; Coelho da Silva, T.L.; Gomes, D.G. Smart & green: An internet-of-things framework for smart irrigation. Sensors 2019, 20, 190. [Google Scholar] Goap, A.; Sharma, D.; Shukla, A.K.; Krishna, C.R. An IoT-based smart irrigation management system using Machine learning and open source technologies. Comput. Electron. Agric. 2018, 155, 41–49. [Google Scholar] [CrossRef] Sangeetha, B.P.; Kumar, N.; Ambalgi, A.P.; Haleem, S.L.A.; Thilagam, K.; Vijayakumar, P. IOT-based smart irrigation management system for environmental sustainability in India. Sustain. Energy Technol. Assess. 2020, 52, 101973. [Google Scholar] Adeyemi, O.; Grove, I.; Peets, S.; Norton, T. Advanced monitoring and management systems for improving sustainability in precision irrigation. Sustainability 2017, 9, 353. [Google Scholar] [CrossRef] Al Sahili, Z.; Mariette, A. The power of transfer learning in agricultural applications: AgriNet. Convolutional Neural Netw. Deep Learn. Crop. Improv. Prod. 2023, 195, 16648714. [Google Scholar] [CrossRef] Bosilj, P.; Aptoula, E.; Duckett, T.; Cielniak, G. Transfer learning between crop types for semantic segmentation of crops versus weeds in precision agriculture. J. Field Robot. 2020, 37, 7–19. [Google Scholar] [CrossRef] Hu, Y.; Zeng, H.; Tian, F.; Zhang, M.; Wu, B. An interannual transfer learning approach for crop classification in the Hetao Irrigation district, China. Remote Sens. 2022, 14, 1208. [Google Scholar] [CrossRef] Espejo-Garcia, B.; Mylonas, N.; Athanasakos, L.; Fountas, S.; Vasilakoglou, I. Towards weeds identification assistance through transfer learning. Comput. Electron. Agric. 2020, 171, 105306. [Google Scholar] [CrossRef] Vo, A.H.; Minh, T.V.; Tuong, L. A novel framework for trash classification using deep transfer learning. IEEE Access 2019, 7, 178631–178639. [Google Scholar] [CrossRef] Zhao, W.; Yamada, W.; Li, T.; Digman, M.; Runge, T. Augmenting crop detection for precision agriculture with deep visual transfer learning—A case study of bale detection. Remote Sens. 2020, 13, 23. [Google Scholar] [CrossRef] Thenmozhi, K.; Srinivasulu Reddy, U. Crop pest classification based on deep convolutional neural network and transfer learning. Comput. Electron. Agric. 2019, 164, 104906. [Google Scholar] [CrossRef] Bazzi, H.; Ienco, D.; Baghdadi, N.; Zribi, M.; Demarez, V. Distilling before refine: Spatio-temporal transfer learning for mapping irrigated areas using Sentinel-1 time series. IEEE Geosci. Remote. Sens. Lett. 2020, 17, 1909–1913. [Google Scholar] [CrossRef] Risheh, A.; Amirmohammad, J.; Ehsan, N. Smart Irrigation IoT solution using transfer learning for neural networks. In Proceedings of the 2020 10th International Conference on Computer and Knowledge Engineering (ICCKE), Mashhad, Iran, 29–30 October 2020. [Google Scholar] BANANA. Available online: https://nhb.gov.in/report_files/banana/BANANA.htm (accessed on 8 May 2023). Senthilkumar, M. Weather data analysis using Hadoop. Int. J. Pharm. Technol. 2016, 8, 21827–21834. [Google Scholar] Altman, N.S. An introduction to kernel and nearest-neighbour nonparametric regression. Am. Stat. 1992, 46, 175–185. [Google Scholar] Friedman, J.H. Stochastic gradient boosting. Comput. Stat. Data Anal. 2002, 38, 367–378. [Google Scholar] [CrossRef] Karaboga, D.; Ebubekir, K. Adaptive network-based fuzzy inference system (ANFIS) training approaches: A comprehensive survey. Artif. Intell. Rev. 2019, 52, 2263–2293. [Google Scholar] [CrossRef] Dehghani, M.; Akram, S.; Hossien, R.-M. Novel forecasting models for immediate-short-term to long-term influent flow prediction by combining ANFIS and grey wolf optimisation. J. Hydrol. 2019, 576, 698–725. [Google Scholar] [CrossRef] Adedeji, P.A.; Akinlabi, S.; Madushele, N.; Olatunji, O.O. Wind turbine power output very short-term forecast: A comparative study of data clustering techniques in a PSO-ANFIS model. J. Clean. Prod. 2020, 254, 120135. [Google Scholar] [CrossRef] Hua, Y.; Zhao, Z.; Li, R.; Chen, X.; Liu, Z.; Zhang, H. Deep learning with long short-term memory for time series prediction. IEEE Commun. Mag. 2019, 57, 114–119. [Google Scholar] [CrossRef] Chang, Y.-S.; Chiao, H.-T.; Abimannan, S.; Huang, Y.-P. Tsai, Y.-T.; Lin, K.-M. An LSTM-based aggregated model for air pollution forecasting. Atmos. Pollut. Res. 2020, 11, 1451–1463. [Google Scholar] [CrossRef] Zhuang, F.; Qi, Z.; Duan, K.; Xi, D.; Zhu, Y.; Zhu, H.; Xiong, H.; He, Q. A comprehensive survey on transfer learning. Proc. IEEE 2020, 109, 43–76. [Google Scholar] [CrossRef] Nowakowski, A.; Mrziglod, J.; Spiller, D.; Bonifacio, R.; Ferrari, I.; Mathieu, P.P.; Garcia-Herranz, M.; Kim, D.-H. Crop type mapping by using transfer learning. Int. J. Appl. Earth Obs. Geoinf. 2021, 98, 102313. [Google Scholar] [CrossRef] Olariu, E.M.; Tolas, R.; Portase, R.; Dinsoreanu, M.; Potolea, R. Modern approaches to preprocessing industrial data. In Proceedings of the 2020 IEEE 16th International Conference on Intelligent Computer Communication and Processing (ICCP), Cluj-Napoca, Romania, 3–5 September 2020; IEEE: Piscataway, NJ, USA, 2020; pp. 221–226. [Google Scholar] Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Blessy, A.; Kumar, A.; Prabagaran A; Quadir Md, A.; Alharbi, A.I.; Almusharraf, A.; Khan, S.B. Sustainable Irrigation Requirement Prediction Using Internet of Things and Transfer Learning. Sustainability 2023, 15, 8260. https://doi.org/10.3390/su15108260 AMA Style Blessy A, Kumar A, Prabagaran A, Quadir Md A, Alharbi AI, Almusharraf A, Khan SB. Sustainable Irrigation Requirement Prediction Using Internet of Things and Transfer Learning. Sustainability. 2023; 15(10):8260. https://doi.org/10.3390/su15108260 Chicago/Turabian Style Blessy, Angelin, Avneesh Kumar, Prabagaran A, Abdul Quadir Md, Abdullah I. Alharbi, Ahlam Almusharraf, and Surbhi B. Khan. 2023. \"Sustainable Irrigation Requirement Prediction Using Internet of Things and Transfer Learning\" Sustainability 15, no. 10: 8260. https://doi.org/10.3390/su15108260 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   3 Web of Science   2 Scopus   4 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 500 1000 1500 For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Sustainability, EISSN 2071-1050, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 6:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: The paper is highly relevant to the research at hand as it focuses on the application of machine learning, specifically deep learning and ensemble methods, to control irrigation systems in a precise and site-specific manner. The paper provides a comprehensive overview of the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It also highlights the challenges associated with implementing such systems and proposes solutions to address these challenges. The paper's findings are directly applicable to the development of an automated irrigation system that leverages machine learning for improved water management and crop yield.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The key points of the paper are as follows:

* The paper explores the use of advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations.
* The paper reviews the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies.
* The paper examines automation across the entire pipeline of irrigation management, from data collection and transmission to processing, analysis, decision-making, and automated action.
* The paper highlights the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
* The paper identifies challenges and proposes solutions for implementing real-time, automated irrigation systems, such as data quality, scalability, reliability, and security.

 Full Text: >
This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 7 Leveraging Machine Learning and Big Data for Smart Buildings: A Comprehensive Survey Publisher: IEEE Cite This PDF Basheer Qolomany; Ala Al-Fuqaha; Ajay Gupta; Driss Benhaddou; Safaa Alwajidi; Junaid Qadir; Alvis C. Fong All Authors 116 Cites in Papers 8179 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document Sections I. Introduction II. Smart Buildings: Concept and Architecture III. Smart Building Components IV. Ml Background for SBS: Models, Tasks, and Tools V. Applications of Ml-Based Context-Aware Systems for SBs Show Full Outline Authors Figures References Citations Keywords Metrics Abstract: Future buildings will offer new convenience, comfort, and efficiency possibilities to their residents. Changes will occur to the way people live as technology involves people's lives and information processing is fully integrated into their daily living activities and objects. The future expectation of smart buildings includes making the residents' experience as easy and comfortable as possible. The massive streaming data generated and captured by smart building appliances and devices contain valuable information that needs to be mined to facilitate timely actions and better decision making. Machine learning and big data analytics will undoubtedly play a critical role to enable the delivery of such smart services. In this paper, we survey the area of smart building with a special focus on the role of techniques from machine learning and big data analytics. This survey also reviews the current trends and challenges faced in the development of smart building services. The major machine learning tasks that are relevant to smart buildings include: data collection and acquisition, data pre-processing, and dimensionality reduction. Published in: IEEE Access ( Volume: 7) Page(s): 90316 - 90356 Date of Publication: 03 July 2019 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2926642 Publisher: IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles and stipulations in the API documentation. SECTION I. Introduction Although the term “smart building” (SB) may bring a thought of a fictional smart space from science-fiction movies, but the reality is that SBs exist today, and their number is getting increased. With recent advances in machine learning (ML), big data analytics, sensor technologies and the Internet of Things (IoT), regular buildings can be cost-effectively transformed into SBs with bare minimum infrastructural modifications. There are smart office, smart library, smart home, smart health care facilities, smart hospital and many other types of SBs that can provide automated services that can provide many value-added services (such as reduction of wasted energy) and also help to ensure the comfort, health, and safety of the occupants. The hyperconnectivity that will be brought about by the emergence of IoT will increase the promise of SB since now all the basic building amenities and commodities ranging from your house electronics to your plant vases will be interconnected. But this hyperconnectivity will at the same time complicate the process of managing SBs. In particular, SBs and their inhabitants are expected to create large volumes of streaming data. ML, sampling, compression, learning, and filtering technologies are becoming more significant to manage the stream of big data of individuals. In 1981, the term Intelligent Buildings (IBs) was initially coined by United Technology Building Systems (UTBS) Corporation in the U.S. In July 1983, IBs became a reality with the opening of the City Place Building in Hartford, Connecticut [1]. Today, the number of SBs is growing at an unprecedented rate including smart office, smart hospitality, smart educational facilities etc. [2]. An SB is recognized as an integrated system that takes advantage of a range of computational and communications infrastructure and techniques [3]. Examples of SB services include smart thermostats that allow the temperature to be controlled based on the time of the day/year and the users’ preferences with minimal or no manual configuration. Using data analytics to “learn” the users’ preferences before taking the appropriate actions is probably the most important enabling technology for IBs [4]. Lately, smart coffee machines appeared in the market with the capability to make coffee automatically, according to users’ preferences and schedules. Fridges can offer allocated programming interfaces for their control [5]. IBs aim to provide their users with safe, energy efficient, environment-friendly, and convenient services. In order to maximize comfort, minimize cost, and adapt to the needs of their inhabitants, SBs must rely on sophisticated tools to learn, predict, and make intelligent decisions. SB algorithms cover a range of technologies, including prediction, decision-making, robotics, smart materials, wireless sensor networks, multimedia, mobile computing, and cloud computing. With these technologies, buildings can cognitively manage many SB services such as security, privacy, energy efficiency, lighting, maintenance, elderly care, and multimedia entertainment. The massive volume of sensory data collected from sensors and appliances must be analyzed by algorithms, transformed into information, and minted to extract knowledge so that machines can have a better understanding of humans than their environment. Furthermore, and most importantly, such knowledge can lead to new products and services that can dramatically transform our lives. For example, readings from smart meters can be used to better predict and balancing the usage of power. Monitoring and processing sensory data from wearable sensors attached to patients can produce new remote healthcare services. The main philosophy behind ML is to create the analytical models automatically in order to permit the algorithms to learn continuously from available data. The application of ML techniques increased over the last two decades due to the availability of massive amounts of complex data and the increased usability of current ML tools. Today, ML is already widely applied in different applications including recommendation systems offered by online services (e.g., Amazon, Netflix) and automatic credit rating services used by banks. Alphabet’s Nest thermostat utilizes ML to “learn” the temperature preferences of its users and adapt to their work schedule to minimize the energy use. Other widely publicized examples of ML applications include Google’s self-driving car, sentiment analysis of Amazon and Twitter data, fraud detection, and Facebook’s facial-recognition technology that is used to tag the suggested person on images uploaded by users. A. SB Trends and Market Impact In this section, we look at the statistics related to SBs, to allow us to understand the current trends and motivations in industry marketplaces and academic researches toward SBs. According to the report by MarketsandMarkets [6], The SB market is estimated to grow from 7.42 billion dollars in 2017 to 31.74 billion dollars by 2022, at a Compound Annual Growth Rate (CAGR) of 33.7% from 2017 to 2022. In yet another report Zion Market Research [7], 2016 and it is expected to reach 61,900 million dollars by 2024. It is expected to exhibit a CAGR of more than 34% between 2017 and 2024. The market is primarily driven by government initiatives globally for SB projects and the increasing market for integrated security and safety systems as well as energy efficient building systems. Figure 1 shows the Statista [8] forecast market size of the global smart home market from 2016 to 2022 (in billion U.S. dollars). FIGURE 1. Forecast market size of the global smart home market from 2016 to 2022 [8]. Show All According to the Gartner report [9], it is expected that the number of smart connected homes grows to 700 million homes by 2020, supplied by mass consumer adoption and an increase in the number of devices and apps available. Figure 2 shows Gartner’s 2018 Hype Cycle expectation for deep learning, ML, connected homes, and smart workspace. FIGURE 2. Hype Cycle for the Connected Home, 2018 [7]. Show All According to report by Research and Markets [10], [11], the global IoT SB market will reach approximately $51.44B USD globally by 2023. The report also forecast that 33% of IoT SB market will be supplied by artificial intelligent technologies by 2023, and automation systems of SB will grow at 48.3% CAGR from 2018–2023. Frost & Sullivan also predict that by 2025, the growth of connected home living will reach 3.7 billion smartphones, 700 million tablets, 520 million wearable health-related devices and 410 million smart appliances in the connected person world. B. Related Survey Papers Although many of survey papers focused on SBs have been published, none of them is focused on the role of data analytics and ML in the context of SBs. We describe the relevant survey papers next and will compare these survey papers to our paper in Table 2. Chan et al. in 2008 provided an overview of smart home research [12]. It also discusses assistive robots, and wearable devices. The article reviews smart home projects arranged by country and continent. Alam et al. [13] provided details about sensors, devices, algorithms, and communication protocols utilized in smart homes. The paper reviews smart home works according to their desired services and research goals; namely, security, comfort, and healthcare. Lobaccaro et al. [14] presented the concept of smart home and smart grid technologies and discuss some challenges, benefits and future trends of smart home technologies. Pan et al. [15] reviewed the works on efficient energy consumption in SBs using microgrids. The survey investigates research topics and the recent advancements in SBs and the vision of microgrids. A few survey papers have reviewed works on facilitating independent living of the elderly people in smart homes. Ni et al. [16] conducted a survey on the features of sensing infrastructure and activities that can assist the independent living of the elderly in smart homes. A survey on ambient assisted living technologies for elderly people has been presented Rashidi and Mihailidis [17]. Peetoom et al. [18] focused on monitoring technologies to recognize life activities in-home such as fall detection and changes in health status. Salih et al. [19] presented a review of ambient intelligence assisted healthcare monitoring services and described the various application, communication, and wireless sensor network technologies that have been employed in the existing research literature. A number of papers have focused IoT: (a) Perera et al. [20] discussed IoT applications from the perspective of context-awareness and self-learning; (b) Tsai et al. [21] surveyed the applications of data mining technologies in IoT; and (c) Mahdavinejad et al. [22] reviewed some ML methods that can be applied to IoT data analytics. TABLE 1 List of Important Acronyms Used TABLE 2 Comparison of Relevant Survey Papers C. Contributions and Organization of This Paper To the best of our knowledge, this is the first survey that covers SBs jointly from the perspectives of application, data analytics, and ML. The main contributions of our paper are: Exploration of the potential of ML-based context-aware systems to provide SB services; Identification of research challenges and directions for SBs and how ML models can help in resolving such challenges; Identification of SB applications including comfort, security, energy efficiency, and convenience and the role of ML in such applications. Our research can provide an impetus to ML researchers to investigate new exciting ML-based SB services. The rest of the paper is organized as follows: Section II introduces the concept of SBs and its underlying architecture. Section III introduces the various components of the SB ecosystem and its underlying architecture. Section V presents context recognition and activity modeling and the role of ML in SBs. Section VI highlights research and development challenges and provides a future perspective of SB projects. Finally, Section VII presents a summary of lessons learned and concludes the paper. For the convenience of the readers, we have enlisted the important acronyms used in Table 1. SECTION II. Smart Buildings: Concept and Architecture In 1984, The New York Times published an article that described that real estate developers are creating “a new generation of buildings that almost think for themselves called intelligent buildings.” Such an intelligent building (IB) was defined as “a marriage of two technologies - old-fashioned building management and telecommunications.” [23]. Since then, many definitions of SBs have been suggested. This is due to the fact that the life-cycle of building planning, design, implementation, and operation involves different industry players that have different roles. In addition, the rapid changes in technology are affecting this definition. For instance, the advent of IoT and smart city concepts is impacting the definition of SB. Therefore, it is hard to compose a unique view of IBs with a single definition that is accepted worldwide. However, it is vital to have a good understanding of the main standard bodies and companies involved in shaping the development of SBs [1]. The Institute for Building Efficiency [24] focuses on the operation of buildings to provide efficient healthy and comfortable environment [25]. IBM [26] focuses also on the operation of SBs to provide integrated physical and digital infrastructures that provide reliable, sustainable, and cost-effective occupancy services. According to the European Commission’s Information Society [27], SBs means buildings that are supplied by information and communication technologies in the context of the combining Ubiquitous Computing and the IoT: In general, the buildings that are supplied with sensors, actuators, microchips, micro- and nano-embedded systems in order to enable collecting, filtering and producing more information locally, to be further incorporated and managed globally according to business functions.” In SBs, a variety of AI and multi-agent system techniques are employed including [28]: Reasoning and knowledge representation including ontologies and rules to represent devices and building services. ML for human activity recognition. Multi-agent systems for distributed intelligence and semantic interoperability. Intelligent approaches such as planning, intelligent control, adaptive interfaces, and optimization for efficient management of resources and services. An SB is therefore the integration of a wide range of systems and services into a unified environment that involve energy management systems, temperature monitoring systems, access security systems, fire and life safety, lighting control and reduction, telecommunications services, office automation, computer systems, area locating systems, LANs, management information systems, cabling and records, maintenance systems, and expert systems [29]. Figure 3 shows examples of SB appliances including air-conditioning systems, lighting systems, solar energy generators, power-supply systems, temperature sensors, humidity sensors, power usage sensors, and surveillance cameras. For example, centralized control of these elements can promote the efficient use of energy through the intelligent control of lights and air conditioning units and the intelligent management of multiple green and brown energy sources. In most cases, an SB uses an Ethernet backbone with bridges to a Controller Area Network (CAN) [26]. FIGURE 3. Example of SB appliances. Show All It is easier to introduce smart services in residential buildings compared to commercial buildings since residential buildings have less technical equipment and less stringent efficiency requirements. Because the commercial buildings usually have more public visitors and therefore building models for commercial buildings are usually more challenging than building models for residential buildings which usually have a limited number of the occupants most of the time. In addition, the costs associated with the purchase and installation of smart devices and infrastructure at commercial buildings is more than residential buildings. Figure 4 shows an integrated framework in a residential building that employs a network of intelligent sensors. These sensors control systems such as energy generation, metering, HVAC, lighting, and security. A building automation system manages a set of smart appliances, sensors, and actuators, which collectively deliver services for the well-being of the inhabitants. Examples of such smart appliances, sensors, and actuators include washers and dryers, refrigerators, heaters, thermostats, lighting systems, power outlets, energy meters, smoke detectors, televisions, game consoles, windows/door controllers and sensors, air conditioners, video cameras, and sound detectors. More advanced smart devices are constantly being developed like smart floors and smart furniture [28], [30]. FIGURE 4. Smart appliances, sensors, and actuators in a smart residential building. Show All The IoT will enable the integration and interoperability of heterogeneous devices in SBs as well as the real-time processing of the data generated by sensors in support of optimal control and operation of the building. In this paper, We propose a layered architecture for SBs based on the layered architecture of IoT. Figure 5 shows the layered architecture of SBs. FIGURE 5. Layers of the base IoT architecture that serves as the foundation for SBs. Show All As can be seen from the sensing layer (the bottom layer in Figure 5), input data is obtained from different types of physical sensors that monitor environmental parameters, collect data about residents and detect anomalies (e.g., fire and water pipe bursts). This layer also includes actuators that can be controlled to save energy, minimize water consumption, etc. The network layer (the second layer in Figure 5), includes access and core networks that provide transparent data transmission capability. This layer serves as a bridge between the sensing layer and the upper layers which are mainly responsible for data processing. An intermediary software layer called the middleware layer is needed (the third layer in Figure 5) to provide seamless integration of heterogeneous devices and networks covered by the sensing layer of the architecture. That layer serves as a bridge between the embedded software that runs of smart sensors and back-end software services. This layer provides interoperability using standardized programming interfaces and protocols [31]. Therefore, this layer performs the process of converting the collected data from various data formats into a common representation. SB middleware can be based on open standards or proprietary, in addition, application-specific or general-purpose. Most often, proprietary middleware is application-specific while general-purpose middleware is based on open standards [28]. The context and semantic discovery layer (the fourth layer in Figure 5) is responsible for managing context and semantic discoverers including context and semantics generating, configuring, and storing. The processing and reasoning layer (the fifth layer in Figure 5) is responsible for processing the extracted information from the middleware then according to the application’s type it will make decisions. In this layer, there are various techniques of information processing applied to fuse, extract, contextualize. massive data into useful actionable knowledge. In this layer, two phases should be identified: context consumer and context producer of the middleware. In the context consumer phase, the data processing techniques are applied on the data produced by the middleware; while in context producer phase the process of decision-making is implemented to supply the service layer with valuable knowledge. while in the second stage, further context information can be provided to the middleware for registration in the ontology context. Specific services and applications are abstracted in the application layer (the top-most layer in Figure 5). This layer presents a framework with direct access to the underlying functionalities to serve in the implementation of various types of applications. Moreover, control panels should be installed in the building to control the automated indoor spaces and to support a local human-machine interface. For instance, in a multi-story building, each floor could have a control panel to automate the operations, such as control opening the windows, control of air conditioning to achieve the desired temperature, control close/open the blinds according to the preferred light intensity before using artificial lighting [32], [33]. Summary: Still there is no single standard definition for SBs. In this section, we reviewed many definitions for SBs by many institutes, counties, regions and different disciplines; each has their own definition for SBs. We presented the layered architectural pattern for adapting services in an SB environment. We wanted to provide a general design for adapting actions according to the different versions of context in SBs. This architecture may be used in different smart environments such as intelligent transport systems, security, health assistance, and SBs among others. We layered the architecture into six layers starting from the sensing layer, which includes various types of sensors that are installed to collect environmental information in SBs. While network layer providing data stream support and data flow control and ensuring that messages arrive reliably by using data transport protocols such as Wi-Fi, Bluetooth, Ethernet etc. Data Acquisition layer to collect the data from the heterogeneous sources of data. Context and semantic discovery layer to generate, configure, and store context and semantic information. Context processing and reasoning layer to process the information and extract the knowledge that making the decisions according to the application context. And the last layer which is application layer such as health assistance and elderly home care, comfort and entertainment services, security, tele-management, smart watering, energy efficiency, etc. After discussing the main components of commercial and residential buildings, we have now set the stage for a detailed discussion on the components of SBs in the next section. SECTION III. Smart Building Components Advances in smart building technology have driven to the extensive development of SBs to generate economic and environmental benefits for building owners through the convergence of IT and building automation systems. Figure 6 shows the key components of SB systems, these include extensive sensors and actuators systems, networking and communication systems, software platform system, HVAC system, and smart control devices. FIGURE 6. Components of smart buildings. Show All Current systems utilize control devices and smart sensors that are connected to a central system. These control devices and smart sensors are placed throughout the environment. Each particular system has its own collection of networking and communication systems that enable it to communicate with the central system. SBs are performing connected networks that serve as a communication backbone for multiple systems. In many ways, HVAC equipment is the most complicated building system, with numerous components arranged to produce heating, cooling, and ventilation. The functionality of HVAC system not only makes the building healthy and comfortable for its inhabitants, but it also manages a big part of the energy consumed, as well as plays a significant role in life safety. SBs adopt technology to monitor and control facility systems and perform any required modifications. The objective of an SB is to utilize computers and software to control lighting, alarm systems, HVAC, and other systems through a single computer interface. A. Sensors and Actuators for SBs Sensors and actuators are mechanical components that measure and control the environmental values of their environment. Sensors collect information from the environment and make it ready for the system. For instance, IR sensors can be utilized for human presence detection in a room. While actuator is a device to convert an electrical control signal to a physical action, such that it takes decisions and then performs proper actions according to the environment, which enables automated and remote interaction with the environment.For example, a light actuator is capable of switching on/off, dimming one or more electric lights [34]. The rapid development of micromechanics, microelectronics, integrated optics, and other related technologies has facilitated the development of different types of smart sensors integrated into daily objects and infrastructure at smart building environment or worn by the users, and are connected by network technologies in order to collect contextual information about daily living activities more efficiently and faster, with lower energy consumption and less processing resources. Environmental sensors are utilized for detecting the human activity of a specific object that performed in specific locations in the building, while wearable sensors are utilized for controlling and observing mobile activities and physiological signals [35]. 1) Environmental Sensors It is found that data collected from environmental sensors can form important information to monitor human behaviors within an SB. These sensory data are then analyzed to identify and observe basic and instrumental daily living activities made by occupants such as bathing, dressing, preparing a meal, taking medication etc. The environmental sensing is generally based on several simple binary sensors in every part of the home, RFID technology, and video cameras. This variety of sensing may implement important insight into contexts and actual activities although it might come with possible costs such as complexity. Motion sensors are utilized for detecting the occupant’s presence and location everywhere in the house. There are different types of motion sensors. IR presence sensor is one of the most utilized kind of motion sensors in SBs to detect occupants’ presence. Pressure sensors can be attached to the objects such as beds, chairs, sofas, and floors in order to track the actions and locations of the occupants. While Contact switches are usually placed on the doors of fridge, rooms, or cabinets to detect the actions that the occupant makes with these objects [36]. Light sensors, humidity sensors, temperature sensors, or power sensors are other types of sensors that are deployed and utilized in SB to recognize the activities. Light sensors are utilized to measure the light intensity in a particular room in the building. Humidity sensors are utilized to detect the air humidity of a specific location in the building. Temperature sensors are utilized to measure the temperature of the specific environment. while the power sensors are utilized to identify the power usage of electric devices. 2) Wearable Sensors and Biosensors These sensors are attached directly or indirectly to the user body. Their small size enables these sensors to be attached to clothes, wristwatches, glasses, belts, shoes etc. These sensors can be categorized into inertial sensors and vital sign sensors (or biosensors). Wearable inertial sensors are highly transportable and no stationary units that can give accurately detailed features of occupant’s action and body posture. Those sensors are composed of accelerometers, gyroscopes and magnetic sensors. There is a need for receivers and cameras in the process of data collection, therefore can be used outside laboratory circumstances [37]. Wearable biosensors such as blood pressure, skin temperature, and heart rate are significant for collecting vital signs to monitor the health. The most commonly utilized inertial sensors for mobile activity monitoring are accelerometers and gyroscopes. Accelerometers can be utilized to measure the rate of acceleration accompanying a sensitive axis, they are useful to monitor the motion’s activities such as doing exercise, standing, sitting, walking, or walking upstairs and downstairs. While the gyroscopes can be utilized to measure angular velocity and maintain orientation. Some examples of primary vital signs are Electrocardiogram (ECG), heart rate, blood pressure, blood glucose, oxygen saturation, and respiratory rate. There are various vital sign sensor utilized to measure different vital signals such as Electroencephalography sensors (EEG) for observing electrical brain activity, Electrooculography sensors (EOG) for observing eye movement in ocular activity, Electromyography sensors (EMG) for observing muscle activity. Electrocardiography sensors (ECG) for observing cardiac activity, pressure sensors for observing blood pressure, CO2 gas sensors for observing respiration, thermal sensors for observing body temperature and galvanic skin response for observing skin sweating [38], [39]. 3) Heating, Ventilation, and Air Conditioning (HVAC) HVAC system plays an essential role in SB services. HVAC system plays a remarkable role in efficient energy consumption in SBs, as well as it offers new operating options to increase the occupants’ comfort. In addition to meeting the desired temperature, HVAC control systems are produced in order to sustain comfort within an enclosed space by producing a specific level of humidity, pressure, air motion, and air quality in an SB [40]. CO2, humidity and temperature levels in a building can affect occupant’s health and comfort; consequently measuring CO2, humidity, and temperature in this context can improve personal wellbeing [41]. Heating and cooling systems consume a huge amount of energy in the buildings, so it is necessary to optimize it utilizing smart controllers and sensors in order to save operational costs. Smart HVAC systems can sense and control efficiently different air quality parameters inside the building by utilizing distributed sensors and VAV fans throughout the building to perform an optimal ventilation [42]. Most of the current HVAC actuation systems in smart buildings are based on the data collected about the occupants using sensors and cameras, which are utilized specifically for HVAC systems. Certainly, There is a specific cost for the design, maintenance, setup and hardware of the data collection network [43]. Table 3 shows a summary for different types of smart sensors in the SBs. TABLE 3 Various Smart Sensors Useful in the Context of SBs B. Smart Control Devices Smart control devices collect data from a variety of sensors, process this data, and activate actuators to react to the events detected by the sensors. A smart control device can operate independently, without control by a central server. But there might be a needed communication amongst various control devices or they can connect with each other using the smart gateway. WeMo [44] is a Wi-Fi enabled switch utilized to turn electronic devices on/off from anywhere. It can control LED motion sensors, light bulbs, mart wall switches and plugs, and lighting devices, all from the smartphone app or browser. There is no hub needed for WeMo devices, everything can be managed through the free cloud service provided by Belkin. You can use the specific channel to connect the device to e-services such as Gmail to trigger specific actions. WeMo devices also support context-aware feature, it turns on/off automatically according to the time of day, whether it is sunrise or sunset etc. The Nest thermostat [45], a smart device developed by Nest—which has been acquired by Google—adjusts to your life and seasons change automatically. Just use it for a week and it programs itself. It learns about the level of temperatures that the occupants prefer and creates a context-aware personalized schedule. The smart thermostat turns to an energy-efficient mode automatically when the residents leave the building. It could start warming up the area when it senses activity, such as an occupant’s returning back home from work. The Nest Thermostat is controllable via a smartphone and an installed app. If you are away for a while, this device has also a capability to sustain a particular temperature in your house. Lockitron [46] is a door lock that can control the door remotely over the Internet to open and close it by phone. Lockitron app can be installed and used by any iOS or Android smartphone. Homeowners can directly grant family and friends the access to open a given door by providing authorization over the Internet. Lockitron can also utilize Bluetooth low energy technology, which means that it will keep controlling even in the event of Internet or power outages. Lockitron can also connect to the Internet with Bridge, through which occupants can control the bolt anywhere in the world. The SmartThings [47] SB automation system comprised of a communications smart hub, that supports various smart appliances and devices; the smart hub supports various technologies and protocols such as ZigBee, Z-Wave, as well as IP-accessible devices and lets you control appliances using Wi-Fi and Bluetooth connectivity. SmartThings provides kits that include smart plugs, in addition, the basic sensors that can be utilized to measure temperature, as well as to detect presence, motion, orientation, and vibration. SmartThings also includes an open platform that enables smart device vendors and third-party software to provide hardware and software that can be utilized alongside the platform. Philips Hue [48] is a combination of LED lighting with mobile technology. An accompanying mobile app that allows you to control lighting systems and changing color sets depending on your mood utilizing Wi-Fi technology. The new Philips Hue bridge supports the required authentication to enable Apple HomeKit technology to control and enable your Philips Hue to connect to other HomeKit enabled accessories and take control of your home. Blufitbottle [49] this bottle records the drinking habits of the users and sends them notifications about the time and amount of the water that they are supposed to drink to keep them healthy and hydrated. The app collects data about users such as their weight and age, plus other factors such as the current levels of temperature and humidity to estimate the amount of the needed water to keep them hydrated. When the user falls behind with hydration, an alert sounds, as well as a simple glance from the LEDs, will indicate when it’s time for the next drink. Canary [50] is an all-in-one home security system that comprises a set of sensors such as temperature, air quality, sound, motion vibration, in addition, an HD video camera in one unit. The system utilizes ML algorithms to let the users know what is happening at home and take action by sending notifications to your phone if something happens. Those ML models learn over time and send the users smarter notifications as it detects motion. So that, the longer you have the system, the more effective it becomes. Canary is able to decrease the rate of false alarms by learning the user behavior and the ambient noise level and the home temperature patterns. Amazon Echo [51] is a small cylinder enable the users to control anything in the home via the voice. Amazon Echo has a powerful voice recognition capability, the user does not have to worry about the complexities of their voice. Amazon Echo is connectable via Wi-Fi or Bluetooth, the users can send voice commands to control the speakers as well as other compatible devices such as Belkin’s WeMo and Philips Hue. It can also use Amazon cloud Lambda service to send commands. To send any command It requires to include the name of the program, for instance, “Alexa, turn on TV”. It also includes a network to distant servers, which slows down the response time. Honeywell Total Connect Remote Services [52] this device merges personal smart home automation with security monitoring task. It enables the occupants to control and monitor everything in the home from lighting and window shades systems to security cameras and smoke alarms. the user can utilize a smartphone app or desktop-mounted hardware console for controlling and monitoring. It can provide real-time alerts, GPS vehicle and asset tracking, video viewing, and mobile control. The system only supports Z-Wave devices, it needs to be installed by an authorized Honeywell dealer. It does not work with Wi-Fi enabled smart thermostats. In addition, the Honeywell provides security cameras and sensors, it also supports other smart devices from third parties, such as Yale locks and Lutron lighting. Table 4 shows a comparison among various smart control devices in the SBs. TABLE 4 Comparison Among Various Smart Control Devices in SB C. Networking and Home Gateway An SB combines a communication network in order to control smart devices and services within the building. The communication network of a smart building can be based on diverse communication media such as twisted pair cable, as the traditional computer networks. The networking in building automation system has a tendency to utilize a heterogeneous network that is made up of diverse communication media and network standards. The building automation network is identified by physical technology and communication protocols. There is an internal network that connects devices inside the building, as well as the external networks, can be integrated separately. Public Internet, ISDN, and mobile phone networks are some examples of external networks [28], [53]. A typical SB may comprise a number of different components, such as sensors, actuators, communication and processing devices. Because of their nature, these components have limited capabilities and computational capacity in term of battery capacity and capability of data processing. To deal with this issue, most of the SB systems have been utilized as a central gateway to collect, process, and analyze context data from different sensors and actuators in the building. Several protocols such as Bluetooth, ZigBee, Wi-Fi, and Z-wave can be utilized for communicating the gateway. The home gateway can also collect and store data for a specific time period. Typically, these gateways can connect to the cloud services and perform data processing and reasoning tasks. The centralized gateway usually does not have any interface. They can be controlled and managed utilizing smartphones, tablets, or computers [54], [55]. In general, depending on the communication media used, SB network technology can be classified by interconnection method into three main types: Powerline, Busline, and Wireless [15], [56], which we describe next. 1) Powerline Communication (PLC) PLC method reuses the building electrical network; such that devices, appliances, and services are directly connected to the main power supply utilizing the already available electrical outlets in a building. The data is sent through the normal cable system to activate or deactivate the devices in the building. PLC system is historically the oldest technology in SB and is generally cheap but less reliable and scalable [3]. Originally, the application of PLC was mainly to secure the typical operation of the electric power supply system in case of failures or breakdowns through the direct exchange of information between the distribution center, and power plant. Therefore, this approach has become a competitive choice for SB networking, benefiting from availability, robustness, and ready connectivity of this method. Some of the protocols of this method offer a single-way communication, which enables the device to only receive information but not to communicate. There are different mainstream protocols of PLC method such as X-10, INSTEON, HomePlug, BACnet, and Lonworks. 2) Busline Busline systems in SBs networks use a separate physical media, usually twisted-pair cabling similar to the physical cables utilized for network services for transporting electrical signals. This type of systems is pleasant the building’s occupants, albeit the configuration process is complex, and it requires some knowledge of networking. Although the configuring complexity and installation cost of this system, the use of a separate cable could present a positive note about this approach, as it allows this method of networking to provide higher bandwidth, and to make it the most reliable of the three approaches. In addition, this technology usually supports a completed two-way communication protocol that enables the appliances to easily communicate with each other [57]. Some of the protocols in Busline technology are Konnex (KNX), CAN (Controller Area Network), Modbus, Meter-Bus (M-Bus). 3) Wireless Interconnection Many of the new SB applications use wireless technologies such as infrared and radio frequency, which are more convenient for users due to their untethered nature and the elimination of cables. The devices within the smart building can communicate wirelessly as radio wave can penetrate through floors, cabinets, and walls [56]. Because of the complexity and cost of potential modifications and of the re-wiring process in a smart building, several different wireless technologies are rising to produce flexible networking patterns convenient to occupants without taking to consider the physical wiring and deployment of such wire in the building. Typically, there are various protocols for the wireless system such as Bluetooth, ZigBee, WLAN, Z-wave, RFID etc., which essentially work in the industrial scientific medical bands, particularly in the 2.4GHz frequency range. These wireless technologies are usually related to some control network concept in an SB such as low power consumption, high cost-effectiveness, low speed, flexibility in networking, deployment as well as building coverage [3]. The gateway is the central server of an SB that is commonly used in IoT solutions. The services provided by the gateway essentially concern to system management functionalities such as monitoring, controlling, and configuring the systems and their devices. It also supports some processing and data storage capabilities required for complex applications. D. Software Platform For a building to be “smart,” it is important that all the appliances and systems in the building communicate and exchange data securely with each other as well as with smartphones, tablets, and servers in the cloud. Software platforms play a critical role in exchanging, archiving and disseminating information through different protocols. These platforms use push, pull, publish/subscribe, etc. The goal of the joint commercial enterprises is to develop an open source software platform in order to make the process of data exchanging easier between the devices of different manufacturers. Therefore, the users will not have to worry in the future about the compatibility issues when utilizing electric and electronic devices of different manufacturers at home. In addition, the new platform can also offer a variety of different building services such as entertainment, energy efficiency, and security technology. Hence, this will enable creating different apps for these areas of use [58]. ABB, Robert Bosch GmbH, and Cisco Systems Inc. established an open-software platform called Mozaiq Operations GmbH [59] to unify smart building technology and offer interoperability across for all devices and services in the building, to simplify the experience for residents. It will enable users to seamlessly and intuitively customize their appliances and devices, regardless of manufacturers and brands of these devices, in order to improve energy efficiency and achieve a unique level of control and comfort. For instance, the user can close the blinds in the home either by a click from a smartphone or through a pre-set instruction; and switch off automatically all screen devices for the children to go outside to play. In a smart building, many devices and appliances can simply and securely share information with one another and with smartphones and other smart devices; and the Internet in general. Indigo Domotics [60] is to implement the do-it-yourself smart building platform. Indigo home automation software controllers available for the Mac OS enables residents to combine an array of common INSTEON, Z-Wave and X10 devices for unparalleled control of your building lighting, sensors, thermostats, and appliances. With Indigo Touch (sold through iTunes app store, iOS only), users will easily achieve remote control of their appliances utilizing an iPhone, iPad, or iPod Touch. They also can use a web browser on any device to control their appliances virtually anywhere in the world. The users can receive texts or emails about specific events has been detected for doors opening/closing, power failures etc. Indigo, from Perceptive Automation, is the newest home automation software for the Mac. OpenHAB [61] is an open-source software platform that follows a middleware approach for integrating different technologies in smart building systems into a single solution. OpenHAB platform address a variety of network technologies and appliances in the area of a smart building. Currently, the dependency on a particular vendor becomes a problem due to the lack of a common language that bridges the different devices with building automation system. The main goal of the OpenHAB platform is to integrate the new devices and technologies in a smart building system through a community-based approach. OpenHAB utilizes an OSGi based modular system for communicating between different technologies and devices. Bindings can be developed and deployed as an OSGi bundle to bridge a particular technology and device. There are different supported technologies exist such as EnOcean, KNX, Z-Wave, and others are supported through special bindings [62]. SmartThings [47] this platform composed of hardware devices, sensors, and software applications. Context information is collected from the sensors, this context is contributed to the reasoning and action that are performed by the application. For instance, the sprinkler in the garden can detect the rain, and switch itself off accordingly to save water. SmartThings kit comprises sensors, smart devices, and hub. While the SmartThings application is configured to enable users to control and monitor their building environment through a smartphone device. The SmartThings Hub works to connect the sensors, devices and building’s internet router to one another and to the cloud. It is compatible with different communication protocols such as Zigbee, Z-Wave, and IP-accessible devices. In addition, the SmartThings is compatible with other sensors and devices such as thermostats, moisture sensors, motion sensors, presence sensors, locks and garage door openers [63]. HomeOS [64] is Microsoft’s home operating system platform, that can be installed on a personal computer. It is an open platform that is not limited to Windows-based devices [65], [66]. with HomeOS platform, applications can be installed to maintain various context-aware functionalities, for example, taking an image by a door camera and sending it to the occupant when someone rings the doorbell. HomeOS provides a PC-like abstraction that manages and extends the technology of network devices to the users and developers in the smart building environment. Its design enables the users to map their protocol-independent services to support the applications with simple APIs, a kernel, and protocols of specific devices. HomeOS usually runs on an allocated computer such as a home gateway, it does not need any adjustments to commodity devices. HomeOS usually utilizes (i) Datalog-based access control to facilitate the process of managing technology in the smart home (ii) a kernel to incorporate the devices and applications and (iii) protocol-independent services to allow the developers manageable access to the devices. Lab of Things (LoT) [67], [68] is an experimental research platform that utilizes connected devices in the buildings. LoT offers a framework that provides deployment capabilities such as remote monitoring and updating of system health, and logging data collected from different appliances in cloud storage. It enables data sharing and collecting, sharing codes, connect hardware sensors to the software platform, and participants using HomeOS. The platform is designed to make it simple to design solutions that can be deployed in IoT based smart services such as healthcare, energy management services as it works in combination with HomeOS. Eclipse Smarthome [69] is a framework that has a focus on heterogeneous environments such as smart building and ambient assisted living. This platform takes to consider a variety of existing communication mechanisms. Eclipse SmartHome works as an abstraction and translation framework that enables communications across system and protocol boundaries. It provides many relevant implemented extensions, protocols, and standards that are significant for smart building services. Those implementations can be of Java library or an OSGi bundle shapes so that they can be utilized independently from the rest of the project. The framework can work on different embedded devices such as a BeagleBone Black, an Intel Edison, or a Raspberry Pi. Extensions of Eclipse SmartHome are compatible with the solutions provided by different vendors. This means your code that is written for a specific purpose can be extended easily on commercial platforms. Eclipse SmartHome offers a variety of characteristics to allow you to design a special Smart Home solution for your expectations [70]. Apart from discussing various SB solutions, we will also highlight the popular simulator called Cooja is used widely by the research community to produce small simulations for relatively large wireless networks of embedding sensors and actuators; and connected devices, in order to develop, debug and evaluate systems based on the wireless sensor network technology. Cooja simulator is a Java-based wireless sensor network simulator. It is distributed with Contiki OS project. Cooja enables the emulation of the set of sensor nodes, in addition, it can simulate physical and application layers of the system [71]. There are three basic properties for the simulated node in Cooja: Its hardware peripherals, node type, and data memory. The node type can be shared among multiple nodes and defines properties that are common to all these nodes [72]. Summary: The field of SBs contains a variety of technologies, across commercial, industrial, institutional and domestic buildings, including building controls and energy management systems. Several organizations and institutions are working to supply buildings with technology that enables the residents to adopt a single device to control all electronic devices and appliances. In this section, we discussed the various components for SBs including sensors and actuators, smart control devices, smart gateway, networking and software platforms. SECTION IV. Ml Background for SBS: Models, Tasks, and Tools Massive data generated from sensors, wearable devices, and other IoT technologies provide rich information about the context of users and building status and can be used to design SB management. This context information is needed to extract useful and interesting insights for various stakeholders. When the data volume is very high, developing predictive models using traditional approaches does not provide accurate insight and we require newly developed tools from big data. Big data is primed to make a big impact in SBs and is already playing a big role in the architecture, engineering, and construction (AEC) industries [73], notably for waste analytics [74] and waste minimization [75]. ML is a powerful tool that facilitates the process of mining a massive amount of data that have been collected from different sources around us and make sense of a complicated world. ML algorithms apply a model on new data by learning the model from a set of observed data examples called a training set. For example, after being trained on a set of sample accelerometer data marked as walking or jogging, an ML algorithm can classify the future data points into walking and jogging classes. ML makes it relatively easy to develop advanced software systems without much involvement from the human side. They are applicable to many real-life problems in SB environments. One can also design and develop self-learning and collaborative systems. ML does not remove the human element from data science—it draws on computers’ strengths in handling big data to complement our understanding of semantics and context. It only needs training data to extract better features or parameters required to improve a given system. ML algorithms can be used to make predictions based on data patterns. It enables the computer to learn from the fed input data without being explicitly programmed so that ML algorithms can learn from and make predictions on input data [76], [77]. Nest thermostat is an example of a device that applies a specific temperature in a specific room and at a certain time of day according to the occupants’ preference. There are devices such as Amazon’s Echo that can learn from voice patterns, and the others those learn from much more complex behavior and activity patterns. A. Ml Models ML techniques have been widely used to develop smart systems which can sense and react according to context modifications in SBs [78]. There are many different ML algorithms, according to the two well-known theorems No Free Lunch theorem and Ugly Duckling theorem. No Free Lunch theorem states “there are no algorithms that can be said to be better than any other”, without prior information about the problem, any two algorithms may perform equally well in solving a problem. While Ugly Duckling theorem states “we cannot say that any two different patterns would be more similar to each other than any other pairs.” [79]. Mainly, ML is categorized into four categories handling different types of learning tasks as follows: Supervised learning, unsupervised learning, semi-supervised learning and reinforcement learning (RL) algorithms Figure 7 shows ML styles. These categories are described next and a summarized comparison between these ML techniques is presented in Table 5. TABLE 5 Comparison of ML Techniques FIGURE 7. ML styles. Show All 1) Supervised Learning refers to developing algorithms based on a labeled training dataset, from which the learner should generalize a representation by building the system model that represents the relations between the input, output and system parameters. ML model is developed through a training process that continues on the input training data until the model reaches the desired level of accuracy [80], [81]. Some examples of common supervised ML algorithms are: naive Bayes model, decision tree, linear discriminant functions such as support vector machines (SVMs), artificial neural networks (ANNs), hidden Markov models (HMMs), instance-based learning (such as k-nearest-neighbor learning), ensembles (bagging, boosting, random forest), logistic regression, genetic algorithms, and logistic regression [82], [83]. Supervised learning approaches are extensively used to solve different problems in smart buildings. Application in SBs: Boger et al. [76] proposed a supervised learning system using Markov decision processes to help people with dementia the process of hand washing. Altun et al. [84] make a comparative study on the supervised human activity classification approaches using body-worn miniature inertial and magnetic sensors. Mozer [85] developed the occupant comfort control of the home environment system using neural networks and reinforcement learning to control air heating, lighting, ventilation, and water heating in the smart home environment. Bourobou et al. [86] presented a hybrid approach using ANN and K-pattern clustering to identify and predict user activities in the smart environments. Hsu et al. [87] proposed a TV recommendation system using a neural network model based on user personalized properties such as activities, interests, moods, experiences, and demographic information data. Fleury et al. [88] proposed a healthcare-focused smart home system using the SVM algorithm to classify daily living activities based on the data from the different sensors. Supervised learning problems can be further grouped into classification, regression, time series, and ensemble method problems. a: Classification The task of classification algorithms is to classify an instance into a specific discrete set of possible categories. Given two sets of data (labeled and unlabeled datasets), the labeled dataset is used for the training process, while the unlabeled dataset will be used to evaluate of the classification results. The normal process is to count the number of instances that are assigned to the right category, which is also known as the accuracy rate (AR) defined by [21]. The classification algorithm can mathematically be described as follows: AR= N c N t (1) View Source where N c denotes the number of test instances that are correctly assigned to their categories to which they belong; N t the number of test instances. The precision ( P ) and recall ( R ) are used to measure the details of the classification results. The four possible outcomes are true positive ( TP ), false negative ( FN ), false positive ( FP ), and true negative ( TN ), the precision ( P ) and recall ( R ) are generally defined as: P= TP TP+FP (2) View Source Given P and R , a simple method to describe the precision and recall of the overall classification results, called F-score or F-measure, is defined as: F= 2PR P+R (3) View Source Commonly used classification techniques include decision trees, SVM, rule-based induction, neural networks, deep learning, memory-based reasoning, and Bayesian networks [89]. b: Decision Tree Algorithms The decision tree method is an important predictive ML modeling approach, which constructs a model of decisions presented based on the actual values of features in the data. Decision trees can be utilized for both classification and regression problems. In tree structures, leaves represent class labels and branches represent conjunctions of attributes that drive to those labels [90]. The decision trees that the target variable takes continuous values called regression trees. Decision trees are often one of the favorites of ML algorithms because of its speed and accuracy. The most common algorithms for decision tree are [91]: classification and regression tree, ID3, C4.5 and C5.0, Chi-squared, M5, and conditional decision trees. Application in SBs: Delgado et al. [92] propose an ML technique based on decision trees to extract the most frequent activities of human behavior and the temporal relationship of those activities in order to produce the human behavior quickly in a smart environment. Viswanathan et al. [93] introduce a prototype distributed data mining system for healthcare environment using C4.5 classification algorithm that can provide the patient monitoring and health services. Decision trees algorithm is a non-parametric algorithm that is easy to interpret and explain. The main disadvantage of this algorithm is that it can easily overfit. c: Bayesian Algorithms Bayesian methods utilize Bayes’ theorem for classification and regression problems. The most common Bayesian algorithms are [94]: Naive Bayes, Gaussian naive Bayes, Bayesian belief network, Bayesian network. Application in SBs: Parnandi et al. [95] propose an indoor localization approach based on Naive Bayes classification and dynamic time warping, they exploit the embedded sensors of smartphones to determine the building that the user entered and the activities that the user is performing inside the building. Verbert et al. [96] proposed an ML approach based on Bayesian network to diagnosis the fault in HVAC systems. The model has been constructed based expert knowledge concerning conservation laws, component interdependencies, and historical data using virtual sensors. Naive Bayes classifier approaches have been applied with potential results for human activity recognition in [97], [98]. Naive Bayes approach recognizes human activities that identify with the highest probability to the set of sensor readings that were observed. d: Support Vector Machine (SVM) is a supervised ML algorithm which can be applied for both classification and regression problems though mostly used in classification challenges [140]. SVM is one of the most popularly utilized for many statistical learning problems, such as face and object recognition, text classification, spam detections, handwriting analysis etc. [141]. is maximizing the margin that separating between the hyperplane of two classes’ closest points. Support vectors are the points lying on the boundaries, and the optimal separating hyperplane is the middle of the margin [142]. Application in SBs: Fu et al. [105] proposed an SVM method to predict the system level electricity loads of public buildings that have electricity sub-metering systems. A real-time human tracker system proposed Nguyen et al. [106] using SVM for predicting and recognizing human motion based on the input images from a network of four cameras in the ubiquitous smart homes. Petersen et al. [107] developed an SVM model to predict the times where visitors are present in the home using only the data provided by wireless motion sensors in each room. Fleury et al. [88] presented a study for automatic recognition of daily living activities in a smart home based on SVM. They collected the data from various sensors such as Infra-Red Presence Sensors, door contacts, temperature and hygrometry sensor, and microphones. Das et al. [108] proposed a one-class classification approach for a real-time activity error detection in smart homes using one-class SVM. Zhao et al. [143] proposed an ML approach based on SVM and RNN to detect the occupancy behavior of a building through the temperature and heating source information for the energy efficiency consumption purposes. e: Artificial Neural Network Algorithms (ANNs) ANN models are inspired by the process of biological neural networks. ANN models are commonly utilized for regression and classification problems. The common ANN algorithms are [94]: Perceptron, Back-Propagation, Hopfield Network, and Radial Basis Function Network (RBFN). ANNs provide a number of advantages including it requires less statistical training, it has the capacity to detect complex nonlinear relationships between the predictor and response variables, as well as the ability to detect all possible relationships between predictor variables [104]. On the other hand, disadvantages include its “black box” nature, heavy computational burden and proneness to overfitting. However, due to the inherent features of neural networks, it has the following main limitations: challenge in training with no local optima, its accommodation to modifications in the behavior, the validation process of the results, and the complexity of network performance interpretation. Application in SBs: Badlani and Bhanot [99] developed a smart home system for energy efficiency applying pattern recognition based on ANNs, the system incorporates an RNN to capture human behavior patterns and an ANN for security applications in smart homes. Other researchers have applied ANNs to present context-aware services. Campo et al. [100] developed a system that calculates the probability of occupation for each section of the building and compares the probability with the current situation systematically. See [101] for a survey paper focusing on the role of ANNs for smart home services. Ermes et al. [102] proposed a hybrid classifier approach using a tree structure comprising a priori knowledge and ANN to recognize the activities such as rowing, biking, playing football, walking, running, sitting, or hiking. Ciabattoni et al. [103] proposed a home energy management system design using the neural network algorithm to predict the power production of the photovoltaic plant and the home consumptions during the given time. f: Deep Learning Algorithms: Deep learning methods represent an evolved form of ANNs in which a deep architecture (many layers comprising multiple linear and non-linear transformations [144]) is used. One of the promises of DL is replacing the manually selected features with efficient unsupervised or semi-supervised feature learning and hierarchical feature extraction algorithms. The most common DL algorithms are [145]: Convolutional Neural Network (CNN), Recurrent Neural Network (RNN), Deep Boltzmann Machine (DBM), Deep Belief Network (DBN), and Stacked Auto-Encoders. Deep learning has been used successfully in varieties of big data analytics applications, particularly natural language processing (NLP) applications, medical diagnosis, stock market trading, network security, and image identification. Deep learning is now ubiquitously used in major businesses and companies. Microsoft research on a deep learning system presented real-time speech translation system between Mandarin Chinese and English languages [146]. Apple’s Siri uses a deep learning trained model, and the voice recognition in the Google Android phone also uses a deep learning trained model [147]. DL utilizes a number of techniques such as drop-out and convolutions that enables the models to learn efficiently from high-dimensional data. However, DL requires much more data to train compared to other algorithms because of the magnitudes of parameters for estimation required by the models. Application in SBs: Choi et al. [114] propose two prediction algorithms deep belief network and restricted Boltzmann machines based on the DL framework for predicting different human activities in a building. They also presented a hybrid model which combines for predicting human behavior. The paper [115] proposes a generic deep learning framework based on convolutional and RNNs for human activity recognition that is suitable for multimodal wearable sensors, such as accelerometers, gyroscopes or magnetic field sensors. Alsheikh et al. [116] proposed a hybrid approach of DL and hidden Markov model for human activity recognition using triaxial accelerometers. Baccouche et al. [117] propose a two-steps neural-based deep model to classify human activities, the first step of the model is automatically learned spatiotemporal features based on Convolutional Neural Networks. Then the second step of the model uses an RNN to classify the entire sequence of the learned features for each time-step. In [118], they propose an acceleration-based human activity recognition method using Convolution Neural Network. In [119] a deep convolutional neural network as the automatic feature extractor and classifier for recognizing human activities is proposed using the accelerometer and gyroscope on a smartphone. Hammerla et al. [148] explore the performance of deep, convolutional, and recurrent approaches of deep learning for human activity recognition using wearable sensors. For the sake of measuring the performance, the authors used three representative datasets that comprise motion data collected from wearable sensors. g: Hidden Markov Models (Hmm) An HMM is a doubly stochastic process with a hidden underlying stochastic process that can be observed through the sequence of observed symbols emitted by another stochastic process. Application in SBs: Wu et al. [113] proposed an improved HMM to predict user behaviors in order to provide services for people with disabilities. They developed a temporal state transition matrix to be utilized instead of the fixed state transition matrix. Lv and Nevatia [112] used hidden Markov models for both automatic recognition and segmentation of 3-D human activities to allow real-time evaluation and feedback for physical rehabilitation. Cheng et al. [110] proposed an inference engine based on the HMM that provides a comprehensive activity of daily living recognition capability. They integrated both Viterbi and Baum-Welch algorithms to enhance the accuracy and learning capability. Chahuara et al. [111] proposed sequence-based models for online recognition of daily living activities in an SB environment. They presented three of sequence-based models: HMM, conditional random fields, and a sequential Markov logic network. h: Time Series Analysis A time series is a collection of temporal instances; time series data set usually have the following characteristics include the high dimensionality, large number of instances, and updating continuously [149]. One of the important purposes for time series representation is to reduce the dimension, and it divides into three categories: model-based representation, non-data-adaptive representation, and data-adaptive representation [150], [151]. Application in SBs: Survadevara et al. [125] proposed a wellness model using seasonal autoregression integration moving average time series with sleeping activity scenario in a smart home environment to forecast the elderly sleeping tendency. Zhou et al. [126] proposed a time series analysis framework to explore relationships among non-stationary time series in the case of data sensors in SBs. Jakkula and Cook [127] propose a time series based framework to determine temporal rules from observed physical and instrumental activities of occupants in a smart home. i: Regression The aim in regression problems is to estimate a real-valued target function. It is related to representing the relationship between variables that are repeatedly processed utilizing a measure of error in the predictions made by the model [152]. The most common regression algorithms are [153]: linear regression, logistic regression, stepwise regression, and ordinary least squares regression. Application in SBs: Chen et al. [120] used the regression technique of orthogonal matching pursuit algorithm to identify the physical and environmental parameters that providing the energy efficiency in an SB. Bouchard et al. [121] presented a gesture recognition system using linear regression combined with the correlation coefficient to recognize the gesture direction and estimate the segmentation of continuing gestures of daily usage activities in a smart environment. j: Ensemble Methods A combination of multiple classifiers often referred to as a classifier ensemble, group of classification models that are trained separately and the predictions of those models are then combined in a way to produce the overall prediction [154]. The most popular ensemble learning based classification techniques are [155]: random forest, boosting, gradient boosting machines, AdaBoost, bagging, and blending. Application in SBs: Jurek et al. [122] proposed a cluster-based ensemble approach solution for activity recognition within the application domain of smart homes. With this approach, activities are modeled as cluster collections built on different subsets of features. Fatima et al. [123] proposed an ensemble classifier method for activity recognition in smart homes using genetic algorithm optimization to merge the prediction output of multiple classifiers that make up the ensemble. They used the ANN, HMM, conditional random field, and SVM [13] as base classifiers for activity recognition. Guan and Ploetz [124] proposed a deep LSTM ensemble method for activity recognition using wearables: more specifically, the authors developed modified training procedures for LSTM networks and proposed the combination of sets of diverse LSTM learners into classifier collectives. 2) Unsupervised Learning Unsupervised Learning refers to developing algorithms that use data with no labels to analyze the behavior or the system being investigated [156]. Thus, the algorithm does not know about the truth of the outcome. In other words, the unsupervised learning algorithm classifies the sample sets to different clusters by investigating the similarity between the input samples. Clustering is done using different parameters taken from the data which enable us to identify correlations which are not so obvious. The inferring structures existing within the input data is used to prepare the model to prepare and extract general rules of the model. A mathematical process might be used to systematically reduce redundancy, or organize data by similarity [129]. The unsupervised approach has been applied to recognize various activities in smart buildings when it is challenging to have labels for input data [130]. Common unsupervised learning problems are clustering, dimensionality reduction, and association rule learning. There are a variety of commonly used unsupervised learning algorithms, some of those algorithms are based on supervised-learning algorithms: the Apriori algorithm and k-Means. In unsupervised learning, usually there is no a measure for the output; we recognize only the features and the target is to define the patterns and relationships among a set of input measures [80]. The major disadvantage of unsupervised learning is the absence of direction for the learning algorithm, hence, there might not be any useful detected knowledge in the selected set of attributes for the training. Clustering is a method of unsupervised learning that involves detecting patterns in the data by placing each data element into a group of K-clusters, where each group holds data elements most similar to each other [157]. Unsupervised learning problems can be categorized into clustering and association problems, which are described next. a: Clustering A clustering problem explores the internal groupings in the input data, such as grouping customers by their purchasing habits. Clustering techniques are usually organized by modeling strategies such as centroid-based and hierarchical. All methods are concerned with handling the internal structures in the input data to properly organize the data into groups of maximum commonality [158]. The quality of the clustering result is evaluated depends on the type of application that utilizes a clustering algorithm. For example, the sum of squared errors is generally utilized for data clustering while the peak-signal-to-noise ratio is used for image clustering [21]. The most common clustering algorithms are [153]: k-Means, k-Medians, expectation maximization, and hierarchical clustering. Application in SBs: Fahad et al. [128] propose an activity recognition approach that combines the classification with the clustering, in their approach the activity instances are clustered using Lloyd’s clustering algorithm. Then, they apply evidence theoretic K-Nearest neighbors learning method that combines KNN with the Dampster Shafer theory of evidence. The paper [86] proposes a hybrid approach to recognize and predict user activities in a smart environment. They use the K-pattern clustering algorithm to classify so varied and complex user activities, and ANN to recognize and predict users’ activities inside their personal rooms. Lapalu et al. [82] used an unsupervised learning approach to address the issues of daily living activities’ learning in smart home. They utilize the Flocking algorithm for clustering analysis of a use case in cognitive assistance service that assists the people suffering from some type of dementia such as Alzheimer’s disease. Aicha et al. [83] present an unsupervised learning approach for detecting abnormal visits of an elderly in a smart home environment based on a Markov modulated Poisson process model. The model combines multiple data streams, such as in the front-door sensor transitions and the general sensor transitions. The other cases of social communication services, Rashidi and Cook [129] applied an unsupervised learning approach to detect social interaction and monitor activity daily living in a smart space, their approach can adapt and update automatically to reflect the changes in discovered patterns from implicit and explicit identified feedbacks of the occupant. Rashidi et al. [130] introduce an unsupervised method that identifies and tracks the normal activities that commonly occur in an individual’s routine in a smart environment. The activity discovery method of the system is produced to cluster the sequences based on the simple k-means algorithm. Fiorini et al. [159] proposed an unsupervised ML approach to identify the behavioral patterns of the occupants using unannotated data collected from low-level sensors in an SB. Their approach involves processing and analyzing collected data related to the daily living activities of 17 older adults living in a community-based home supplied with a variety of sensors. They extract activity information from collected data at different times of the day. b: Association The association rule learning problem is utilized to identify the rules that define large portions of input data, such as people that buy X item also tend to buy Y item. Association analysis is performed on rules discovered by analyzing input data for frequent if/then statement and using the criteria of support and confidence to discover relationships between unrelated data in a relational database or another information repository. Here “support” indicates how frequently the items appear in the database while “confidence” indicates the number of times the if/then statements have been found to be true. Many algorithms for generating association rules have been proposed. Apriori algorithm is the most well-known association algorithm [160]. Application in SBs: Aztiria et al. [161] proposed system that learns the frequent patterns of human behavior using association, workflow mining, clustering, and classification techniques. The core part of the system is the learning layer which is made up of two modules: the language module, which provides a standard conceptualization of the patterns; and the algorithm module, which discovers the patterns. Kang et al. [162] proposed a service scenario generation scheme for interpreting association rules extracted from the states of all devices in SB environments. Typically, These states are collected periodically at a specific time interval from the devices. Nazerfard et al. [163] propose a framework to discover the temporal features of the activities, including the temporal sequencing of activities and their start time and duration using the temporal association rule techniques in a smart home. 3) Semi-Supervised Learning Semi-Supervised learning lies between supervised and unsupervised methods. Input data is a composite of labeled and unlabeled samples. These hybrid algorithms aim to inherit the strengths of the main categories while mitigating their weaknesses. The model learns the patterns present in the data and also make predictions. Example problems are classification and regression [164]. There are some common semi-supervised learning models, including generative models, heuristic approaches, semi-supervised SVM, graph-based methods, self-training, help-training, mixture models, co-training and multi-view learning [94]. Application in SBs: Cook [131] combined fully-supervised and semi-supervised learning to recognize and follow activities that support health monitoring and assistance context-aware services for people experiencing difficulties living individually at smart homes. Liu et al. [132] proposed a vision based semi-supervised learning approach for fall detection and recognizing other activity daily living in smart environments to overcome the labeling challenges of human activities by systematic interpreting the activities with the highest confidence. Fahmi et al. [133] proposed a semi-supervised fall detection approach in which a supervised algorithm utilizing decision trees in the training process and then profiles are used to implement a semi-supervised algorithm based on multiple thresholds. Radu et al. [134] present semi-supervised ML method using only the low power sensors on a smartphone to consider the problem of determining whether a user is indoors or outdoors. Guan et al. [135] propose a semi-supervised learning algorithm for activity recognition named En-Co-training to make use of the available unlabeled samples to enhance the performance of activity learning with a limited number of labeled samples. The proposed algorithm extends the co-training paradigm by using an ensemble method. 4) Reinforcement Learning Reinforcement learning is a learning approach to control a system in order to maximize performance measure that represents a long-term objective [165]. Reinforcement learning, an area of ML inspired by behaviorist psychology, is concerned with the way that software agents have to take actions in an environment in order to maximize the concept of cumulative reward. RL algorithms learn control policies, particularly when there is no a priori knowledge and there is a massive amount of training data. However, RL algorithms suffer from some drawback such as the high computational cost required to find the optimal solution, such that all states need to be visited to choose the optimal one. The well-known approaches of RL are Brute force, Monte Carlo methods, Temporal difference methods, and Value function [166]. Q-learning [167] is a model-free reinforcement learning approach based on learning the required utility given a state decision. Application in SBs: Mozer [136] applied Q-learning for lighting regulation to predict the time of turning the lights ON/OFF in a building. This prediction model can be utilized to schedule the lights’ activations in a building for efficient energy consumption proposes. Li and Jayaweera [137] proposed a Q-learning based approximate dynamic programming algorithm to provide a more efficient, flexible and adaptive method. This approach can enable customers to make an optimal on-line decision making in SB environment to maximize the profits based on both local fully observable and the estimated hidden information of the building. Khalili and Aghajan [138] proposed a temporal differential class of RL method for autonomous learning of a user’s preference of music and lighting service settings in presence of different states of the user in SB environment. The preferences are learned by the model by using the explicit or implicit feedback from users when they react to the provided service. Xu et al. [139] give a survey of developments in RL algorithms with function approximation. They evaluated and compared different RL algorithms using several benchmark learning, prediction, and learning control tasks. B. ML Tasks for SBS In this section, we will describe the major ML tasks that are relevant to SB. The reader is referred to Figure 8 for a general depiction of ML tasks in SBs and the steps taken to implement ML in an SB environment. FIGURE 8. ML tasks in SB environment. Show All 1) Data Collection and Acquisition A variety of data collection approaches are used, each of which has different deals in terms of capabilities, energy efficiency, and connectivity. Sensors and similar objects in SBs produce raw data simultaneously in an automated way and such devices may store the data for a specific period of time or report it to controlled components [168]. Data can be collected at gateways; the collected data is then filtered and processed, fused into compact forms for efficient transmission. A variety of communication technologies such as Zigbee, Wi-Fi, and cellular are utilized to transfer data to collection points. Data collected from a global-scale deployment of smart things defines the basis for decision making and providing services. It is possible that the decisions are unreliable when the quality of utilized data is poor [169]. Zhao et al. [170] propose a data acquisition and transmission system which could be used for monitoring systems to collect energy consumption data (e.g., electricity, water, gas, heating, etc.) from terminal meters which are installed in buildings. The system stores the data periodically after analyzing and processing it and finally transmits the data to servers through the Ethernet. Rowley et al. [171] propose the data acquisition and modeling approaches that can support the delivery of building energy infrastructure in both new building and renovated real-world contexts. Such methods provide a means to achieve short, medium and long-term forecasting of possible scenario pathways to multi-objective sustainable outcomes. CLEEN MMEA [172] platform that collects, processes, and manages the data and initiates contextual knowledge extraction. The purpose is to establish an online marketplace to collect data and provide services for different companies. The interfaces are made public so that any company can easily join the network to buy or sell services. The analysis results can be given to an energy services company in order to allow offering the service to the owners. A typical example of open access data collection system is e3Portal [173] developed by VTT in collaboration with Finnish municipalities. e3Portal offers information and tools when planning savings measures and energy retrofitting in municipal buildings. It also involves frequently updated data regarding energy and water consumption in thousands of public buildings like schools, kindergartens, offices, hospitals, other health care facilities, etc. Decision makers, designers, operation and maintenance personnel, as well as buildings users, can utilize it. There are projects that provide publicly available SB datasets for researchers to conduct further studies; A list of “Home Datasets” [174] includes the datasets collected by projects from UC Berkeley, MIT, Washington State University, University of Amsterdam, University of Edinburgh, and the University of Tokyo. The WARD [175] project supported by NSF TRUST Center at UC Berkeley provides a benchmark dataset for human action recognition using a wearable motion sensor network. The dataset was collected from 13 repetitive actions by 13 male and 7 female participants between the ages of 19 and 75. An MIT project [176] collected daily live activities dataset from two single-person apartments within a period of two weeks. Eighty-four sensors to record opening-closing events were attached to different appliances and devices such as drawers, refrigerators, containers, etc. Banos et al. [177] introduced an open benchmark dataset collected from various inertial sensors attached to different parts of the body. They considered 33 fitness activities, recorded using 9 inertial sensor units from 17 participants. The CASAS project [178] at Washington State University provides a publicly-available dataset for a three-bedroom apartment with one bathroom, a kitchen, and a living room. Different types of motion and digital sensors are installed to support temperature readings, in addition, the analog sensors are installed to support readings for hot water, cold water, and stove burner use [179]. The PlaceLab project [180] of MIT provides a dataset collected from a one-bedroom apartment with more than 900 sensors, including those coming from motion, switch and RFID sensors. That is being used to monitor activity in the environment in the context of a smart home [181]. A collection of smart meters data from five houses in the UK [182] That consists of 400 million instances. The active power is formed by different appliances and the whole-house power demand every 6 seconds. The major challenges that arise for data collection are scalability, privacy, security, and heterogeneity of resources [183]. Automated sensor data collection process collects a large amount of data that overwhelms the collection and analysis centers in comparison to the data collected from other sources such as IoT devices and social media. This leads to a huge number of small synchronous write operations to the database storage system, consequently, resulting in serious performance bottlenecks to the storage system design [184]. Because of the extensive use of RFID technology, privacy issues arise in data collection; for example, the RFID tags carried by a person may become a unique identifier for that person. Also, other security concerns appear, for example, the radio signals of RFID technology are easily jammed. Hence, that can disrupt the data collection process [185]. The heterogeneity of data that is being collected from different resources is another major challenge, such that the data are usually very noisy, large-scale, and distributed. This makes it very difficult to use the collected data effectively without a clear description of existing data processing techniques [184]. 2) Data Preprocessing A large amount of data are generated by sensors in SBs; this data comes from various sources with diverse formats and structures. Usually, this data is not ready for analysis as it might be incomplete or redundant due to low battery power, poor calibration, exposure to various malicious elements and interference. Therefore, raw data typically needs to be preprocessed to deal with missing data, discard noisy and redundant data and integrate data from various sources into an integrated schema before being committed to storage. This preprocessing is called data cleaning. The quality of data can be improved substantially by applying some cleaning techniques to the data before it arrives its end user [168], [186]. Data cleaning is one of the significant tasks in the data processing phase. Data cleaning is not a new process particular for the IoT data processing. It has already been applied as a process for database management systems. Presenting a data cleaning method would further aid the applications to focus on their core logic without worrying about data reliability post-processing overheads [184]. There are many different techniques that have been utilized to deal with the problem of cleaning noisy data streams such as Kalman filters [187], statistical models [186] and outlier detection models [184]. One of the major challenges with data cleaning techniques in the SBs is the heterogeneity of data collected from different sources particularly WSN- and RFID-enabled data streams. The utilized data cleaning techniques should be able to deal with several different variables of interest to satisfy IoT applications’ requirements, for example, setting home temperature based on observed outer temperature, user habits, energy management, etc. [169] Any type of failures such as a failed sensor, network issues, camera failure, or database crashes in the process of collecting data would invalidate the data. Consequently, this type of impediment will dramatically increase the time required to collect data [179]. 3) Dimensionality Reduction There are huge volumes of raw data that are captured from heterogeneous and ubiquitous of sensors used in SBs. Most of the data collected from those sensors are redundant and they need to be brought down to a smaller number of features by applying dimensionality reduction techniques without losing significant information [188]. The main idea from the dimensionality reduction strategy is to find a new coordinate system in which the input data can be represented with much fewer features without losing significant information. The dimensionality reduction can be made in two different ways: by extracting of the features that represent the significant data characteristics (this technique is called feature extraction), or by only selecting the most relevant features from the original dataset, this method is called feature selection [189], [190]. Like clustering methods, the dimensionality reduction approach explores and exploits the internal structure of the data, but in this case in an unsupervised manner using less information. Most of these techniques can be utilized in classification and regression problems. Examples of some salient algorithms are [153]: Principal Component Analysis (PCA), Principal Component Regression (PCR), and Linear Discriminant Analysis (LDA). Chen et al. [191] propose a framework using the classification information of local geometry of data to reduce the dimensionality of a dataset on human activity recognition from wearable, object, and ambient sensors. a: Feature Extraction The main components of the original data are the features. After extracting the features from the raw dataset, such features contain important information that is used by the learning algorithms for the activities discrimination. The most common methods of feature extraction work in time, frequency, and discrete domains [192]. Among time domain method, mean and standard deviation are the key approaches for almost all sensor types. While the frequency domain method focuses on the periodic structure of the collected data. Wavelet Transformation and Fourier Transform are the most common approaches. And discrete domain methods such as Euclidean-based distances, dynamic time warping, and Levenshtein edit distance are key approaches implemented in several applications such to string similarity, classifying human activities and modeling human behavioral patterns [16], [193]. b: Feature Selection The main role of feature selection is to discriminate the most related subset of features within a high dimensional vector of features, so that reduces the load of noise and computational expense on the learning models. In order to map the high dimensional vector of features into a lower dimensional vector, there are several common algorithms used such as Linear Discriminant Analysis (LDA), Principal Component Analysis (PCA), and Independent Component Analysis (ICA) [194]. Hausmann and Ziekow [195] proposed an approach for automatically adapting the feature selection for SBs application ML models from the time-series data based on wrapper methods and genetic optimization. Fahad et al. [196] propose an activity recognition approach for overlapping activities using K-Nearest neighbors approach that distinguishes the most important features from the collected information obtained from deployed sensors in multiple locations and objects. Fang et al. [197] determine that the different feature sets generate different levels of accuracy for recognizing human activities, and selecting inappropriate datasets increases the level of computational complexity and decreases the level of prediction accuracy in smart home environments. The wrapper and filtering are the two main statistical methods of feature selection problem. It is argued that although the wrapper approach may obtain better performances, filters are less resource intensive and faster [198]. In [199], different feature selection methods are utilized for the process of dimensionality reduction of the learning problem to recognize the human activities from observed sensors. The authors show that the performance of the learning models to recognize the human activity has a strong relationship with the utilized features. c: Feature Projection feature projection can be represented as a mapping from the original set of features to an appropriate set that optimizes the learning criterion, such that the feature projection approach allows the process of visualizing and mapping the high-dimensional feature vectors to low dimensional one, in addition, it enables analyzing the distribution of the reduced feature vectors [200]. Consequently, the feature projection approach reduces the pattern recognition’s processing time and enables selecting the best-performed classifier for the reduced feature vectors. Hence, it makes real-time implementation possible [198]. Chu et al. [201] proposed a linear supervised feature projection that utilizes the LDA algorithm for EMG pattern recognition that attempted to recognize nine kinds of hand motion. C. ML Tools & Platforms for SBs There are a variety of existing ML platforms and tools to support the learning process. With the current increasing number of those kinds of toolkits, the task of selecting the right tool for processing big data streaming from various sources can still be difficult. Typically, there is no single toolkit that truly fits and provides solutions for all different problems. Many of the available toolkits might have overlapping uses, and each has advantages and disadvantages. Most of those toolkits might require experiences in the domains of programming languages and system architecture. In addition, usually many people lack a full understanding of the capabilities and how to use those available platforms [202]. The important factors that must be considered when selecting a specific ML tool are scalability, speed, coverage, usability, extensibility, and programming languages support. With respect to the scalability factor, the size and complexity of the data should be considered to determine if a specific toolkit will be fit. The processing platform that the library is running on and the complexity of the algorithm affect the speed factor. Not all the projects prioritize the speed factor; if the models require frequent updates, the speed may be a crucial concern; but not otherwise. Coverage represents the number of ML algorithms implemented in the tool. With the massive amount of data capturing from heterogeneous sources, ML community faces the challenges of how the ML model can efficiently process and learn from the big data. In general, the available big data tools do not implement all varieties of different classes of ML algorithms, and typically their coverage ranges from a few algorithms to around two dozen. The usability factor includes elements such as initial setup processing; continuous maintenance; the available programming languages and user interface available; the amount of documentation, or availability of a knowledgeable user. The extensibility factor means that the implementations introduced in the tools can be utilized as building blocks towards new systems. It is necessary to evaluate tools in terms of how well they are able to meet this factor. There are a variety of ML libraries that are available in different programming languages. Depending on the task you are trying to accomplish, certain languages, libraries, and tools can be more effective than others. The following provides a detailed observation of the strengths and weaknesses of the top used deep learning and ML tools. The reader is also referred to Table 6 for a concise tabulated summary of the described deep learning and ML tools. TABLE 6 Comparison Between Deep Learning and ML Tools 1) H2O H20 [203] is an open-source in-memory, distributed, and scalable ML framework for big-data analysis that supports ML libraries, along with tools for parallel processing, analytics, data preprocessing and evaluation tools. It is produced by the H2O.ai, which launched in 2011 in Silicon Valley. The most notable feature of this product is that it provides numerous tools for deep neural networks. The H2O software APIs can be called from Python, Java, R, and Scala. Users without programming expertise can still utilize this tool via the web-based User Interface. In addition to the processing engine provided by H2O framework, it also allows the users to integrate their models with other available frameworks such as Spark and Storm. Depending on what is suitable for the algorithm, The H2O’s engine uses multiple execution methods to process data completely in memory. The general technique used is distributed Fork/Join, which is reliable and suitable for massively parallel tasks. The H2O software can be run on different operating systems such as Microsoft Windows, Mac OS X, and Linux (e.g. Ubuntu 12.04; CentOS), It also runs on Apache Hadoop Distributed File System (HDFS) and Spark systems for big-data analysis. In addition, it can operate on various cloud computing environments such as Amazon EC2, Google Compute Engine, and Microsoft Azure. As of July 2016, the algorithms supported in H2O cover the tasks classification, clustering, generalized linear models, statistical analysis, ensembles, optimization tools, data preprocessing options and deep neural networks. 2) MLlib (Spark) MLlib [204] is Apache Spark’s ML library. MLlib aims to provide scalable and easy to use ML methods. It includes common ML algorithms for classification, regression, clustering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs. The classification techniques of SVM, random forest, logistic regression, Naïve Bayes, decision trees, and gradient-boosted trees are supported whereas for clustering, k-means, Gaussian mixture, and power iteration clustering are supported. MLLib supports implementations for linear regression and isotonic regression, and incorporates a collaborative filtering algorithm using alternating least squares. PCA is supported for dimensionality reduction. MLlib includes APIs for development in Scala, Java, Python, and SparkR. Generally, MLlib depends on Spark’s iterative batch and streaming approaches, as well as its use of in-memory computation. 3) Tensorflow Tensorflow [205] is an open source software library for numerical computation and deep ML in a variety of perceptual and language understanding tasks utilizing data flow graphs. TensorFlow was originally developed by the Google Brain team and was released in November 2015 under an Apache 2.0 open source license. TensorFlow has tools that support deep learning, reinforcement learning, and other algorithms. TensorFlow implements data flow graphs, where “tensors” are batches of data that can be processed by a set of algorithms defined by a graph. The movements of the data through the system are called “flows”—hence, the name. TensorFlow can run on multiple CPUs and GPUs. It can run on Linux, Mac OS X desktop, and server systems, and Windows support on roadmap, as well as on Android and Apple’s iOS mobile computing platforms. TensorFlow is written with a Python API over a C/C++ engine that makes it run fast. TensorFlow utilizes a symbolic graph of vector operations method, in order to easily define a new network. However, TensorFlow has a weakness that is related to modeling flexibility. Such that each computational flow has to be constructed as a static graph. That makes some computations such as beam search difficult. 4) Torch Torch [206] is an open source ML computing framework that supports a variety of ML algorithms. Torch was originally developed at NYU. It is efficient and easy to use, thanks to a script language based on the Lua programming language and a C/CUDA implementation, Torch was intended to be portable, fast, extensible, and easy to use in development. Some version of Torch is employed by large companies such as Google DeepMind, the Facebook AI Research Group, IBM, Yandex, and the Idiap Research Institute. In addition, it has been extended to run on Android and iOS platforms. A variety of community-contributed packages for Torch, giving it a versatile range of support and functionality. It provides various deep learning algorithms that support computer vision; signal, image, video, and audio processing; parallel processing and networking [207]. 5) Deeplearning4j Deeplearning4j [221] is an open source distributed DL library, primarily developed by Adam Gibson from an ML group in San Francisco. Deeplearning4j is written for Java and JVM as well as to support a variety of DL algorithms such as restricted Boltzmann machine, deep belief networks, convolutional networks, recurrent neural networks, deep autoencoder, stacked denoising autoencoder, and recursive neural tensor network. All these algorithms can be integrated with Hadoop and Spark for distributed parallel processing. Deeplearning4j relies on Java programming language, in addition, it is compatible with Clojure and includes a Scala API. Deeplearning4j is designed to be utilized in business environments, rather than as a research tool. It is applied in a variety of applications such as fraud detection, anomaly detection, recommender systems, and image recognition. 6) Massive Online Analysis (Moa) MOA [222] is one of the common open source frameworks for data stream mining and possessing. MOA is written in Java related to the WEKA project that developed at the University of Waikato, New Zealand. It includes a set of learners and stream generators that can be used from the GUI, the command-line, and the Java API. MOA supports a variety of ML algorithms for classification, regression, clustering, outlier detection, as well as some tools for evaluation [223]. 7) Caffe Caffe [224] is a DL framework, it is primarily developed with the consideration of expression, speed, and modularity. It utilizes the machine-vision library for fast convolutional networks from Matlab, which has been ported to C and C++. It is developed by the Berkeley vision and learning center and by the community contributors. In Caffe, multimedia scientists and practitioners have an organized and state-of-the-art toolkit for DL algorithms. Caffe was originally developed for machine-vision, it has been utilized and improved by users in other fields such as robotics, neuroscience, speech recognition, and astronomy. In addition, it supports Python and MATLAB code bindings. Caffe offers image classification with state of the art CNN algorithm. Caffe is mainly utilized as a source of pre-trained models hosted on its Model Zoo site. Caffe is useful for performing image analysis using CNNs and regional analysis within images using RCNNs. The performance and processing speed of Cafee make it as one of the most utilized platforms for research experiments and industry deployment. It has the capability to process over 60 million images per day with a single NVIDIA K40 GPU. Caffe has already been applied in many research projects at UC Berkeley and other universities, performing very well in many tasks such as object classification, object detection, and Learning Semantic Features. It provides a complete and well-documented toolkit for training, testing, tuning, and deploying models. Caffe utilizes a large repository of pre-trained neural network models called the Model Zoo, which is suitable for a variety of common image classification tasks [225]. 8) Azure Ml Microsoft first launched Azure ML [226] as a preview in June 2014. Azure ML enables users to create and train models, then convert those models into APIs that can be applied to other services. Users can get up to 10GB of storage per account for model data, although they can also connect their own Azure storage to the service for larger models. programmers can use either the R or Python programming language for developing with Azure services. Users can purchase ML algorithms from Microsoft Azure Marketplace, they can also obtain free algorithms from the community gallery that has been created by Microsoft to share ML algorithms with each other. They share many of predictive analytics of personal assistant in Windows Phone called Cortana. Azure ML also utilizes solutions from Xbox and Bing. Azure currently supports different features and capabilities such as run Hadoop over Ubuntu Linux on Azure, it also supports hosting Storm for analyzing data streams. In addition, it allows developers to connect.NET and Java libraries to Storm. Azure ML studio supports a variety of modules for training, scoring, and validation processes. Azure ML comes with a large library of algorithms for predictive analytics. The popular families of algorithms are regression, anomaly detection, clustering, and classification. D. Real-Time Big Data Analytics Tools for SBS Several applications need to have real-time data analysis for stream data and waiting for the information to be archived and then analyzed is not practical for these type of applications. Generally, Stream processing is intended to analyze a massive amount of data and act on real-time streaming data utilizing continuous queries such as SQL-type queries to handle streaming data in real-time utilizing scalable, available and fault-tolerant architecture. Essential to stream processing is Streaming Analytics. More and more tools offer the possibility of real-time streaming data. The following presents some of the common and widely used options. 1) Apache Storm Storm [227] is an open source distributed real-time data processing framework that provides massively scalable event collection. The initial release was on 17 September 2011, it was created by Nathan Marz and the team at BackType, and is now owned by Twitter. Storm can easily process unlimited streams and with any programming language. It has the capability to process over one million tuples per second per node with a highly scalable, fault-tolerant, and reliable architecture. Storm is written in Java and Clojure. Trident is a high-level abstraction layer for Storm, can be utilized to accomplish state management persistence. Storm is a system of complex event processing. This type of solution allows companies to respond to the arrival of sudden and continuous data (information collected in real-time by sensors, millions of comments generated on social networks such as Twitter, WhatsApp and Facebook, bank transfers etc.). Some of the specific applications of Storm include customer service management in real-time, operational dashboards, data monetization, cybersecurity analytics, and threat detection. 2) Apache Kafka Kafka [228] is a fast, scalable, fault-tolerant and durable open-source message broker project that originally developed by LinkedIn, and subsequently open sourced in early 2011 and released by Apache Software Foundation on 23 October 2012. Kafka is written in Scala. It supports a variety of use case scenarios with a focus on high throughput, reliability, and scalability characteristics. For example, it can message sensor data from heating and cooling equipment in office buildings. 3) Oracle In 2013, Oracle started utilizing Oracle Enterprise Manager that includes Oracle Big Data Appliance to manage all of its big-data technologies. Oracle has also produced multiple low-latency technologies for Oracle Fast Data components includes Oracle Event Processing, Coherence, NoSQL, Business Analytics, and Real-Time Decisions. Oracle Event Processing provides solutions for building applications to filter, correlate and process events in real-time. It supports IoT services by delivering actionable insight on data streaming from a variety of data sources in real-time [229]. Oracle Stream Explorer (OSX) and Oracle R Enterprise (ORE) aim to support equipment monitoring applications for the systems that made of a variety of components through sensors, anomaly detection and failure prediction of such systems. ORE [230] is utilized to handle low-frequency streams in batch mode, while OSX handles the high-frequency streams making real-time predictions and sends the results back to user applications that are communicating with the output channels. OSX [231] is a middleware platform has the capability to process large amounts of streaming data in real-time for a variety of streaming data applications, from a multitude of sources like sensors, social media, financial feeds, etc. It streamlines real-time data delivery into most popular big data solutions, including Apache Hadoop, Apache HBase, Apache Hive, Apache Flume, and Apache Kafka to facilitate improved insight and timely action. Oracle Real-Time Decisions [232] is a decision management platform with self-learning that determines optimized recommendations and actions with messaging, imagery, products, and services within business processes. 4) Amazon Kinesis Streams Amazon Kinesis [233] is a platform for collecting and processing large streams of data on AWS in real-time, AWS launched Kinesis in November of 2013, offering powerful services for loading and analyzing streaming data, in addition, it provides custom streaming data applications for specialized needs. Sometimes Terabytes of data per hour can be generated - that need to be collected, stored, and processed continuously from various application services such as web applications, mobile devices, wearables, industrial sensors etc. Typically, Amazon Kinesis Streams application can use the Amazon Kinesis Client Library and reads data from an Amazon Kinesis stream as data records. These applications can run on Amazon EC2 instances. 5) Apache Spark Streaming Apache Spark [234] is an open-source platform for real-time data processing, it can implement using four different languages: Scala, the syntax in which the platform is written; Python; R; and Java. Spark Streaming is an extension of core Spark API. It allows building fault-tolerant processing of real-time data streams. Spark Streaming allows the processing of millions of data among the clusters, and Spark SQL which makes it easier to exploit the data through the SQL language. Spark Streaming divides the live data stream into a predefined interval of batches, then handles each batch of data as Resilient Distributed Datasets (RDDs). Then we can apply operations like map, reduce, join, window etc. to process these RDDs. The last results of these operations are then returned in batches. Spark Streaming can be utilized for a variety of application such as real-time monitoring and analyzing of application server logs. These logs messages are considered time series data. Examples of such type of data are sensor data, weather information, and clickstream data. This data can also be utilized for predicting future states based on historical data. Apache assures a computation speed that performs the operations quicker by 100 times than what is currently offered by Hadoop MapReduce in memory, and 10 times better than in disc. Spark can be executed either in independent cluster mode or in the cloud on different frameworks such as Hadoop, Apache Mesos, and EC2. In addition, Spark can access numerous databases such as HDFS, Cassandra, HBase or S3, Amazon’s data warehouse. 6) Apache Flume Flume [242] is a distributed, reliable and open-source log data aggregation framework. Apache Flume is applied in many applications ranging from log data aggregation, to transport massive quantities of event data including network traffic data, social-media-generated data, email messages and pretty much any data source possible into the HDFS. The architecture of Flume is simple and flexible, it is also robust and fault tolerant with tunable reliability mechanisms for failover and recovery. log manufacturing operations is an example of Flume’s application. The a massive log file data can stream through Flume. The log file data can be stored in HDFS and analyzed by utilizing Apache Hive. 7) Apache Samoa SAMOA [243] is a distributed streaming ML framework that contains programming abstractions for distributed streaming ML algorithms. Its name stands for Scalable Advanced Massive Online Analysis and was originally developed at Yahoo! Labs in Barcelona in 2013 and has been part of the Apache incubator since late 2014. SAMOA is both a platform and a library. It enables the algorithm developer to reuse their code to run on different underlying execution engine. In addition, it supports plug-in modules to port SAMOA to different engines. By utilizing SAMOA, the ML algorithm developer does not need to worry about the complexity of underlying distributed stream processing engines. They can run it locally or utilizing one of stream processing engines, such as Storm, S4, or Samza. SAMOA provides the ML algorithms for a variety of tasks including classification, regression, clustering, along with boosting, and bagging for ensemble learning. Additionally, it offers a platform for the implementation of these ML algorithms, as well as a framework that enables the user to write their own distributed streaming algorithms. For example, there is CluStream for clustering, as well as Vertical Hoeffding Tree, which uses vertical parallelism on top of the decision tree, or Hoeffding tree for classification. There is also Adaptive Model Rules Regressor, which uses both vertical and horizontal parallelism implementations for regression [244]. A summarized comparison between various real-time data analytics tools is provided in Table 7. TABLE 7 Comparison Between Real-Time Data Analytics Tools TABLE 8 Categorized Applications of SB SECTION V. Applications of Ml-Based Context-Aware Systems for SBs The potential uses of ML in an SB environment can be divided into four categories: detection, recognition, prediction, and optimization [79]. We discuss these categories separately next. In general, detection is the extraction of particular information from a larger stream of information. Many detection applications in SBs such as fire detection, leak detection, and anomaly detection [245]. Many different applications have been studied by researchers in activity recognition in SBs; examples include fitness tracking, health monitoring, fall detection. [246]. The goal of recognition is to classify an object or an event to a predefined category. It focuses on how to make computer programs perform intelligent and human-like tasks, such as the recognition of an object from an image. The goal of prediction is to determine the temporal relations’ model between specific events to predict what will happen in the near future. Prediction can be either for classification or regression problems [247]. Event prediction when the goal is to predict the most probable event or subsequent activity is an example of classification problems, while latency prediction when the output takes on continuous values is an example of the regression problem. The general steps of applying ML processes to predict an event in an SB environment is shown in Figure 9. FIGURE 9. Steps involved in applying ML models in an SB environment. Show All The goal of optimization, on the other hand, is to maximize the long-term profits by making proper decisions in different situations. reinforcement learning can be utilized with these problems. Some optimization problems can be managed as prediction problems such that the profits for different actions are predicted and the action with the highest profit would be selected. Decision making is the most common case of the optimization problem. It takes to consider a variety of variables and solving deals between the profits of different locations of the environment [248]. Smart buildings are becoming increasingly supplied with a variety of sensors that measure different parameters, and data from these sensors is analyzed by ML algorithms and used for a range of services and applications for the activities of the building occupants. SBs go far beyond saving energy and contributing to sustainability goals. The application and services provided by the SBs can be both residential and commercial ranging from e-health, e-marketing, intelligent car parking system, intelligent transportation system, automation, and logistics services. Figure 10 shows the taxonomy of basic domains of SB services. Lighting services are associated with the well-being of occupants depending on their activities in SBs that have sensors to conserve energy when lights are not needed. The power and electrical system may have onsite renewable energy sources to provide a percentage of power consumption in SBs. Waste management is related to the activities and actions required to collect, separate, transport, together with monitoring and regulation of waste management system in SBs. The security is related to managing automated locks, biometric devices as well as video surveillance systems in SBs. The communications center is related to connecting sensors and actuators in the building as well as the operations control center. The operations control center supports system analytics and decision making for the operations. Visual interfaces provide a dashboard that shows the status of SB services and human operators to better manage the building resources. These interfaces also allow the occupants to set up their optimal parameters for comfort and productivity improvement on daily activities. HVAC stands for the humidity, ventilation and air conditioning system, intended for the convenience of occupants that have effective interaction with the environment. Parking services aim to minimize the area and volume required for parking cars. It could support car sharing, electric vehicles and a place for bicycles as well. Finally, the water management services aim to increase savings and manage water reclamation for flushing, landscaping and air-cooling systems. FIGURE 10. SB services taxonomy. Show All Based on our literature survey, we have identified that the application areas of SBs can be elderly care, comfort/entertainment, security/safety, energy management, and other projects. In the rest of the section, we will briefly describe the major domains in providing the following SB services: (1) care of the elderly population; (2) enhancing energy efficiency; (3) enhancing comfort or providing entertainment; (4) enhancing safety and security; and (5) miscellaneous projects. a: Elderly Population’s Home Care SB technology such as sensors, voice activation, GPS, Bluetooth, cellular connectivity via mobile phones, smartphone monitoring apps and sophisticated computers can be especially useful for elderly or disabled individuals who live independently. Elderly persons can take the advantages of such technologies (e.g., monitoring system, emergency system, dangerous kitchen appliance detection, fall detection), to maintain a safe and healthy lifestyle while living independently [56], [249]. Smart technology in the SBs aims to collect real-time information on human daily activity and then learn of their personal patterns. ML techniques have the potential for a very wide array of new innovations in healthcare that will be transformative for both providers and their patients. Whenever a deviation from the norm patterns is detected, SB systems send the alerts to family members and the caregivers in order for them to take urgent response action. By using big data analytics and ML algorithms it is possible to analyze large-scale data contained in electronic medical records—e.g., to learn automatically how physicians treat patients including the drugs they prescribe [250]. Some prominent projects in this space are described next. Chernbumroong et al. [56] proposed an activity recognition and classification approach for detecting daily living activities of the elderly people applying SVM. They used wrist-worn multi-sensors namely accelerometer, temperature sensor and altimeter for detection basic five activities namely feeding, grooming, dressing, mobility, and stairs. And other instrumental activities such as washing dishes, ironing, sweeping and watching TV. Taleb et al. [251] proposed a middleware-level solution that integrates both the sensing and the monitoring services for assisting elders at smart homes environment. The appliances used in the proposed framework include RFID readers that cover of the whole building, sound sensors, video cameras, smart door lock, microphone and speakers for interaction with the system. CAALYX [252] is a European Commission-funded project that supports older people’s autonomy and self-confidence. The service is formed of three distinct subsystems including elderly monitoring subsystem, home monitoring subsystem and the caretaker’s monitoring subsystem. The system delivers a high priority message to an emergency service including the geographic position and clinical condition of the elder user. EasyLine+ [253] project funded by the European Commission to support elderly people with or without disabilities in carrying out a longer independent life at home. The system uses a neural network, assistive software, and a variety of sensors such as illumination sensor, temperature sensor, door sensors, and RFID giving the capacity of controlling the white goods. Hossain et al. [254] proposed a cloud-based cyber-physical multi-sensory smart home framework for elderly people that supports gesture-based appliance control. Suryadevara et al. [255] proposed a model for generating sensor activity pattern and predicting the behavior of an elderly person using household appliances. b: Energy Efficiency When temperatures rise or fall in various zones of your home, heaters, air conditioners, fans, and other devices will turn on or off (or increase or decrease in speed or temperature). In order to perform an efficient energy consumption of the supply systems, a significant step that is necessary by analyzing the way that current energy consuming system is using in buildings [256]. In the last decade, analysis of the energy efficiency in the smart spaces has received increasing attention. Various approaches for energy efficiency have been proposed utilizing predictive modeling based on profile, climate data, and building characteristics [32], [257]. For instance, lights throughout your home might turn on and off depending on the time of day. In the past, various attempts have been made to improve energy efficiency in the SBs through the use of smart metering and sensor networks at the residential level facilities. It is a fact that these types of infrastructure are becoming more widespread but due to their variety and size, they cannot be directly utilized to make conclusions that help to improve the energy efficiency. ML approaches will be the key to the handling of energy efficiency problem in SBs. Learning about the occupants’ consumption habits is capable of generating collaborative consumption predictions that help the occupant to consume better [258]. Some prominent projects in this space are described next. Reinisch et al. [259] developed an optimized application of AI system for SB environment. The system focuses on some capabilities like ubiquity, context awareness, conflict resolution, and self-learning features. The system operates on a knowledge base that stores all the information needed to fulfill the goals of energy efficiency and user comfort. Jahn et al. [260] proposed an energy efficiency features system built on top of a Hydra middleware framework [261]. The system provides both, stationary and mobile user interfaces for monitoring and controlling a smart environment. Pan et al. [262] proposed an IoT framework that uses smartphone platform and cloud-computing technologies to improve the energy efficiency in SBs. They built an experimental testbed for energy consumption data analysis. Fensel et al. [263] proposed the SESAME-S project (SEmantic SmArt Metering - Services for energy efficient houses). The project focuses on designing and evaluating the energy efficiency services to enable the end-consumers in making the right decisions and controlling their energy consumption. The system combines a variety of smart building components, such as smart meters, a variety of sensors, actuators, and simulators that can integrate virtual appliances such as the washing machine. Vastardis et al. [264] proposed a user-centric smart-home gateway system architecture to support home-automation, energy usage management, and smart-grid operations. The gateway is supported by ML classification algorithms component such as C4.5 and RIPPER that is able to extract behavioral patterns of the users and feed them back to the gateway. Irrigation systems monitoring and smart watering system that keep track of rain and soil conditions and irrigate appropriately are a very cost-effective way to reduce outdoor water consumption. Investment in water management software and services, water-efficient plumbing, and irrigation management delivers economic and sustainability benefits. Water conservation and management is an example of such benefits [265]. c: Comfort/Entertainment One of the main goals of SB research is to facilitate user daily life activities by increasing their satisfaction and comfort level. SBs supports automated appliance control and assistive services to offer a better quality of life. They utilize context awareness techniques to optimize the occupant’s comfort based on predefined constraints of conditions in a building environment. Typical examples of comfort services include lighting, background music, automation of routine activities, advanced user interfaces based on voice or gestures, etc. [30]. Other services related to comfort services in SB environments are Indoor Climate Control and Intelligent Thermostat [265]. Indoor Climate Control: Measurement and control of temperature, lighting, CO2 fresh air. In the SB environment, HVAC systems play an essential role in forming indoor environmental quality. Typically, HVAC systems are produced not only to heat and cool the air but also to draw in and circulate outdoor air in large buildings [266]. Kabir et al. [267] present a context-aware application that provides the service according to a predefined preference of a user. They use the KNN classifier to infer the predefined service that will maximize the user’s comfort and safety while requiring minimum explicit interaction of the user with the environment. Ahn et al. [268] proposed a deep learning model that estimates periodically the atmospheric changes and predict the indoor air quality of the near future. d: Safety/Security As the SB technology progresses, the role of ML and deep learning in security and connected devices will increase. Deep learning will continue to help gain insights using big data that were previously inaccessible, particularly in image and video. Advanced technologies such as behavioral analysis and ML to detect, categorize, and block new threats will be beneficial. In a traditional home system, as soon as a fire is detected the Fire/smoke detectors are activated and start sending a fire alarm. However, SB can perform much better than the traditional system. It not only sends an alarm but also turns on the light only in the safest route and guides the occupants of the building out, as well as it will unlock the doors and windows for smoke ventilation, turn off all the devices and call the nearest fire service station. Other than this, it can take video of the areas surrounding the building, provide the status of window breakage alarms, and automatically lock all the doors and the windows when the last person of the house leaves [30]. The main services for security and safety in SBs are: Perimeter Access Control, Liquid Presence, Intelligent Fire Alarm, Intrusion Detection, and Motion Detection Systems [265]. Perimeter Access Control service provides control to restricted areas and detects non-authorized users that access the areas. Access card provides a variety of solutions that allow staff members, vendors or contractors to access specific areas at specific times you designate. The same access card can also be utilized to check employee attendance. In addition, there is widespread use of biometric technology including fingerprint, facial recognition, and iris scans [269]. Additionally, liquid presence detection technique has been utilized in data centers, warehouses, and sensitive building grounds to prevent breakdowns and corrosion in such areas [270]. Intelligent Fire Alarm and its corresponding safety systems are crucial parts of an intelligent building. It is a system with multi-function sensors (i.e., chemical gas sensors, integrated sensor systems, and computer vision systems) These sensors enable measuring smoke and carbon monoxide (CO) levels in the building. They also can give warnings, howling alarms, and tell with a human voice about the place and level of smoke and CO. In addition, they can give a message on a smartphone if the smoke or the CO alarm goes off [271]. Examples of intrusion detection systems including window and door opening detection and intrusion prevention [265]. An infrared motion sensor is utilized to detect the motion in a specific area in the building. This sensor can reliably send alerts to the alarm panel, with the system implementing algorithms for adaption to environmental disturbances and reducing any false alarms [265]. Image recognition solution can be used in security software to identify people, places, objects, and more. It can also be used to detect unusual patterns and activities. Clarifai [272] specializes in a field of ML known as “computer vision” that teaches computers to “see” images and video. Clarifai’s technology can play a key role in security surveillance and at present, the company works only with home security. Each image is processed on a pixel by pixel basis through convoluted neural networks. Bangali and Shaligram [273] proposed a home security system that monitors the home when the user is away from the place. The system is composed of two methods: one uses a web camera to detect the intruder—whenever there is a motion detected in front of the camera, a security alert in terms of sound and an email is delivered to the occupant. And the other one is based on GSM technology that sends SMS. A home security system that sends alert messages to the house owner and police station in case of illegal invasion at home is proposed in [274]. The system consists of different sensor nodes as the input components while the output components respond to the signal received from the input components. The sensor nodes consist of a thief alarm, presence detecting circuit, and the break-in camera. Zhao and Ye [275] proposed a wireless home security system that utilizes low cost, low power consumption, and GSM/GPRS. The system has a user interface and it can respond to alarm incidents. e: Miscellaneous Projects CASAS [178] is a project by Washington State University that provides a noninvasive assistive environment for dementia patients at SBs. The project focuses on three main areas for SBs: medical monitoring, green living, and general comfort. CASAS project comprises of three layers: physical layer, middleware layer, and software applications layer. Aware Home Research Initiative (AHRI) [276] is a project that has constructed by a group at the Georgia Institute of Technology for SB services in the fields of health and well-being, digital media and entertainment, and sustainability. AHRI utilizes a variety of sensors such as smart floor sensors, it also utilizes assistive robots for monitoring and helping the elderly. House_n [277] is a multi-disciplinary project leads by a group of researchers at the MIT. The main objective of the project is to facilitate the design of the smart home and its associated technologies, products, and services. The home is supplied with hundreds of various sensors that are installed almost in every part of the home that and being utilized to develop user interface applications that enable the users to control and monitor their environment, save resources, remain mentally and physically active, and stay healthy. The EasyLiving project [278] at Microsoft Research is concerned with the development of a prototype architecture and technologies to aggregate diverse devices into a coherent user experience for intelligent environments. The EasyLiving project was designed to provide context-aware computing services. The project utilizes a variety of sensors and cameras to track and recognize the human activities in the room by using the geometric model of a room and taking readings from sensors installed in the room. The Gator Tech Smart House project [279] is a programmable space specifically designed for the elderly and disabled developed by The University of Florida’s mobile and pervasive computing laboratory. The project’s goal is to create SB environments that can sense themselves and their residents. The project provides special cognitive services for the residents such as mobility, health, and other age-related impairments. A generic middleware is utilized to integrate system components in order to maintain a service definition for every sensor and actuator in the building. The components of the middleware including separate physical, sensor platform, service, knowledge, context management, and application layers [280]. Other well-known smart home projects include DOMUS [281] which is a research project, by the University of Sherbrooke in Canada, that supports mobile computing and cognitive assistance in smart buildings. The project aims to assist people suffering from Alzheimer’s type dementia, schizophrenia, cranial trauma, or intellectual deficiencies. Adaptive House project [136] at The University of Colorado has constructed a prototype system that is equipped with a variety of sensors that provide different environmental information including sound, motion, temperature, light levels. In addition, actuators that control the space and water heaters; lighting units, and ceiling fans. In Asia, there are also some other smart building projects have been developed, such as “Welfare Techno House” project, which is equipped with different sensors such as ECG, body weight, and other temperature measured indicators [282]. Ubiquitous Home project [283] is another smart building project in Japan, which utilizes RFID, PIR, pressure sensors, as well as cameras and microphones for monitoring elderly adults. Summary: Recently, several different context-aware and ML techniques have been utilized to support SB services. ML-based approaches are capable to perform better prediction and adaptation than others. The philosophy behind ML is to automate the learning process that enables algorithms to create analytical models with the support of available data. ML can be applied in different learning styles including supervised learning, unsupervised learning, semi-supervised learning, as well as reinforcement learning when the learning is the result of the interaction between a model and the environment. The general uses of ML for SB services are detection, recognition, prediction, and optimization. In the section, we also talked about how to acquire the context from multiple distributed and heterogeneous sources and the techniques for modeling and processing such context to be used in the application services of SBs. We also talked about the most used tools and platforms ML and others for real-time data analytics by ML community to efficiently process and learn from big data. Without such ML tools, one would have to implement all of the techniques from scratch requiring expertise in the techniques and in efficient engineering practices. SECTION VI. Open Issues and Future Research Directions Research on SBs has made great strides in recent years, but a number of challenges remain. We present some major challenges related to SBs in this part of the work. These challenges will channelize the research directions for future SBs. A. Security and Privacy Wherever there is an interconnection of two systems or networks (wired or wireless), there are issues of security and privacy and the same is true in the case of SB. Security is an essential role in SB environments. Any SB application should ensure the confidentiality and integrity of data. Access control must be included in SB systems, for instance, the unauthorized users should not be able to disconnect the alarm system by connecting the pervasive system [284]. There is a massive amount of streaming that is collected from the various installed sensors and appliances, such data needs to be processed and stored. Hence, cloud computing services can be utilized for this purpose. However, with all of this data that is transmitted, the issue of losing the privacy increases. Therefore, different encryption techniques are needed to preserve personal privacy [285]. There are specific challenges related to the user’s privacy including challenges related to the data privacy of personal information and the privacy of the individual’s physical location and tracking. That needs for privacy enhancement technologies and relevant protection laws and tools for identity management of users and objects [286]. The recent trend of ML research has focused on handling security and privacy issues in SB environments. There are different security-related services have utilized ML techniques, such as determining safe device behavior by detecting and blocking activities and potentially harmful behavior [287]. ML techniques have the potential to reduce security gap because of their capability to learn, identify and detect the users’ habits and behaviors. Consequently, it can detect the abnormal behaviors predicting risks and intrusions before they happen. For instance, ML models learn the routine of the users, such as the time they get home or go to sleep. These models can suggest rules based on those detected behaviors from all connected devices [288]. B. SBS and Context-Aware Computing In the SB environment, there exists a massive amount of raw data being continuously collected about the various human activities and behaviors. It is important to develop techniques that convert this raw data into valuable knowledge [289]. Context awareness and ML techniques are expected to provide great support to process and store big data and create important knowledge from all this data [290]. The process of data interpretation and knowledge extraction has the following challenges including addressing noisy real-world data and the ability to develop further inference techniques that do not have the limitations of traditional algorithms. Usually, It is very complex to formalize and model the contextual information related to human behaviors in a standard way due to the complex physiological, psychological and behavioral aspects of human beings [291]. The humans communicate through rich languages as well as gestures and expressions. Modern ubiquitous computer systems lack an automatic mechanism of inferring information as the humans do. New research is necessary to raise human activities and behaviors recognition to understand the complex dependencies between the apps and humans [292], [293]. The context-aware prompting systems have essential applications in SBs such as emergency notifications, medication prompting, heart rate monitoring, generation of agenda reminders, and weather alerts. However, issuing prompts for all detected errors can possibly be false positives, and consequently, lead to annoyance and sometimes prove to be unsafe for specific activities. ML methods can be used for an accurate and precise prediction when a person faces difficulty while doing daily life activities [294]. C. Personal Data Stream Management in SBS The data streaming management system is able to process and transfer raw data collected from a variety of sensors to information, it is also able to fuse this information to a feature and directly process features [295]. While the data processing for a single SB is simple, it is more complex when processing the data from multiple SBs, because there are different people that tend to share less common interests and have opposing interests concerning the processed data [296]. The simple sensors in an SB environment can detect different events related to temperature, motion, light, or weather. Moreover, other appliances like a television and a telephone can also send their status or other data as events. All this data from different sensors can be used by SB services to detect specific states and send a request to some actuators according to specific predefined rules, for instance, turn on the light if the television is used [297]. However, this approach is not generalizable in case of a group of people residing in the same building. Although it can work well for one certain person when personal preferences can be automatically learned for an individual person, therefore each of the residents has to define their own set of rules [298]. Because of the increasing number of sensors that produce data streams, the traditional analyzing and processing techniques of these data streams are mostly impractical now [299]. Despite the availability of new tools and systems for handling massive amounts of data continuously generating by a variety of sensors in SBs, however, the real promise of advanced data analytics to still lies beyond the realm of pure technology [296]. In [300] discuses research challenges for data streams of real-world applications. They analyze issues concerning privacy, timing, preprocessing, relational and event streams, model complexity and evaluation, availability of information, and problems related to legacy systems. D. Big Data Challenges in SBS Nowadays, a variety of sensing technology in the SBs can be utilized to collect a massive amount of heterogeneous data at a reasonable cost. Typically, hundreds of thousands of transactions can be generated by a single SB every day. The process of storing this data over the long-term is challenging [258]. We can imagine the challenges and opportunities that the companies or government will encounter in the future to manage incoming data from dozens of SBs. This new data could provide us with more contextual information that consequently leads to much better services to the occupants [301]. In the world of big data, despite the availability massive amount of data, however, it is not necessarily easy to obtain valuable information from this data utilizing the traditional approaches like trial and error to extract meaningful information from this data. Analyzing these massive amounts of data requires new technologies to store, organize, and process big data effectively, it needs high-performance processors that enable uncovering the insights in big data. It also requires flexible cloud computing services and virtualization techniques, as well as software such as Apache Hadoop and Spark [302]. It requires providing appropriate ML techniques which differ from the traditional approaches for effective and efficient solution of the above issues. For these reasons, researchers have recently started to think about the problems and opportunities resulting from the adoption of big data in SB environments [303], [304]. The information extracted from this big data has significant value and could greatly contribute in the future of SBs as assistive tools and for better services delivery. That is why it is necessary that the researchers start to analyze and think about the solutions for the current and future challenges of big data in SBs [305]. E. Interoperability Interoperability means that two (or more) systems work together unchanged even though they were not necessarily designed to work together. When equipment, devices or appliances having different communication and networking technologies can communicate effectively, interoperability is satisfied. It is a challenge to ensure that an SB that has various components will be intelligible. Typically, each of these components might have been produced by different vendors, each of which may have created under different design constraints and considerations [306]. Therefore it becomes essential to satisfy interoperability so that a number of heterogeneous communication and networking technologies could coexist in various parts of SBs. For example, an energy management system may use Wi-Fi and ZigBee for communication purposes. A lot of work can be done in this context [307]. F. Reliability We can expect that the reliability is one of the main concern of occupants and developers of SB systems. A variety of appliances and devices present in SB such as televisions, microwave, washing machines etc. are required exceedingly to be reliable. Achieving expected levels of reliability, especially when linked with communication technologies utilized with these devices that may be expected in SBs, is a great challenge. There are different reasons for these challenges differences in technological approaches, regulations, development culture, and the expectations of the market [306]. G. Integration The key to a successful SB implementation is integration: linking building systems such as lighting, power meters, water meters, pumps, heating, and chiller plants together using sensors and control systems, and then connecting the building automation system to enterprise systems. Integration allows executives to gain smart-building benefits, both in new construction and by gradually transforming existing buildings into SBs. What these SBs have in common is integration. Generally, the integration in SB systems brings a range of benefits from energy savings to productivity gains to sustainability. The SB systems can be attached to enterprise business systems to add another level of intelligence that enhances decision-making and improves building performance [2]. However, integrating multiple systems is very challenging as each individual system has its own assumptions, strategies to control the physical world, and semantics. As an example of integrating two systems in SB, assume a system that is responsible for energy management, and another system for health care are running concurrently. In this case, the integrated system should not turn off medical appliances to save energy while they are being used as suggested by the health care system [292]. As a future perspective for SBs, You will wake up to the sound of the alarm, at the same time the available sensors will be aware that you are waking up. The other sensors such as light sensors will automatically turn on the light in the building, while the thermostat will warm the area that you are about to use in the building. Your coffee will start to brew, you will also get a notification on your phone about the weather. The other sensors in the kitchen and refrigerator will remind you with a list of items that you will need to pick up on your way from your workplace to home to make dinner. When you leave your house, you can press a button from your phone to self-drive your car out of the garage. After that, the security system will start monitoring and controlling the home. Such the doors will automatically lock. Appliances will switch to an energy-saving mode. When the home sensors sense utilizing geofencing technology that you are way back home, it will get ready again for your arrival, the thermostat will warm things up, the garage door will open as you pull up, and your favorite music will start to play when you walk in [141]. Summary: Although the recent researches have been done in the SBs field, there is a need for a lot more efforts; however, we believe that SBs are possible for the mass market in the near future. The main challenges and future research directions of this eld can be summarized as follows: User context in term of behavior and intention should be studied and respected whenever possible; Further research is needed into context-aware prompting systems, personal data streaming and big data analysis of occupants in SB environment; Some of the other challenges like the interoperability, reliability, and integration still require more attention. SECTION VII. Conclusions The promise of smart buildings (SBs) is a world of appliances that anticipate your needs and do exactly what you want them to at the touch of a button. Since SBs and their inhabitants create voluminous amounts of streaming data, SB researchers are looking towards techniques from ML and big data analytics for managing, processing, and gaining insights from this big data. This paper reviewed the most important aspects of SBs with particular focus on what is being done and what are the issues that require further research in ML and data analytics domains. In this regards, we have presented a comprehensive survey of the research works that relate to the use of ML and big data particularly for building smart infrastructure and services. Although the recent advancements in technologies that make the concept of SBs feasible, there are still a variety of challenges that limit large-scale real-world systems in SBs field. Addressing these challenges soon will be a powerful driving force for advancements in both industrial and academic fields of SB research. ACKNOWLEDGMENT The statements made herein are solely the responsibility of the authors. Authors Figures References Citations Keywords Metrics More Like This MIS-IoT: Modular Intelligent Server Based Internet of Things Framework with Big Data and Machine Learning 2018 IEEE International Conference on Big Data (Big Data) Published: 2018 Framework for Mobile Internet of Things Security Monitoring Based on Big Data Processing and Machine Learning IEEE Access Published: 2018 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.

Paper 7:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: Machine learning techniques, such as Long Short-Term Memory (LSTM) and Convolutional Neural Networks (CNNs) are able to learn from sequential data and model nonlinear relationships, respectively. These techniques have been applied to a variety of water resources management tasks, and have shown promising results.
  Extract 2: For example, LSTM networks have been successfully used to predict streamflow and water demand, while CNNs have been used to classify water quality and detect leaks in water distribution systems. Hybrid models, which combine different machine learning techniques, have also been developed to improve the accuracy and robustness of water resources management models.
  Limitations: >
  Relevance Evaluation: 3
  Relevance Score: 0.9996
  Inline Citation: >
  Explanation: Deep learning techniques, such as Long Short-Term Memory (LSTM) and Convolutional Neural Networks (CNNs) are able to learn from sequential data and model nonlinear relationships, respectively. These techniques have been applied to a variety of water resources management tasks, and have shown promising results.

For example, LSTM networks have been successfully used to predict streamflow and water demand, while CNNs have been used to classify water quality and detect leaks in water distribution systems. Hybrid models, which combine different machine learning techniques, have also been developed to improve the accuracy and robustness of water resources management models.

One of the main advantages of machine learning techniques is their ability to learn from data, without the need for explicit programming. This makes them well-suited for water resources management tasks, where there is often a large amount of historical data available.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Machine learning methods 3. Review methodology 4. Groundwater management 5. Surface water management 6. Hydropower management, marine energy and reservoir operation 7. Water distribution and drainage systems 8. Water quality monitoring 9. Flood management and water-retaining structures 10. Conclusions, open issues, and prospects CRediT authorship contribution statement Declaration of competing interest Acknowledgement Data availability References Show full outline Figures (1) Tables (2) Table Table 1 Journal of Cleaner Production Volume 441, 15 February 2024, 140715 Review Applications of machine learning to water resources management: A review of present status and future opportunities Author links open overlay panel Ashraf A. Ahmed a, Sakina Sayed a, Antoifi Abdoulhalik a, Salissou Moutari b, Lukumon Oyedele c Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.jclepro.2024.140715 Get rights and content Under a Creative Commons license open access Highlights • We present a review of ML techniques for water resources management (WRM). • ML proved to be efficient in identifying patterns within nonlinear datasets. • Transformer architectures can be used to simplify reinforcement learning. • Generative Pre-trained Transformers open further opportunities to WRM. Abstract Water is the most valuable natural resource on earth that plays a critical role in the socio-economic development of humans worldwide. Water is used for various purposes, including, but not limited to, drinking, recreation, irrigation, and hydropower production. The expected population growth at a global scale, coupled with the predicted climate change-induced impacts, warrants the need for proactive and effective management of water resources. Over the recent decades, machine learning tools have been widely applied to various water resources management-related fields and have often shown promising results. Despite the publication of several review articles on machine learning applications in water-related fields, this review paper presents for the first time a comprehensive review of machine learning techniques applied to water resources management, focusing on the most recent achievements. The study examines the potential for advanced machine learning techniques to improve decision support systems in the various sectors within the realm of water resources management, which includes groundwater management, streamflow forecasting, water distribution systems, water quality and wastewater treatment, water demand and consumption, hydropower and marine energy, water drainage systems, and flood management and defence. This study provides an overview of the state-of-the-art machine learning approaches to the water industry and how they can be used to ensure water supply sustainability, quality, and flood and drought mitigation. This review covers the most recent related studies to provide the most recent snapshot of machine learning applications in the water industry. Overall, LSTM networks have been proven to exhibit reliable performance, often outperforming ANN models, traditional machine learning models, and established physics-based models. Hybrid ML techniques have exhibited great forecasting accuracy across all water-related fields, often showing superior computational power over traditional ANNs architectures. In addition to purely data-driven models, physical-based hybrid models have also been developed to improve prediction performance. These efforts further demonstrate that Machine learning can be a powerful practical tool for water resources management. It provides insights, predictions, and optimisation capabilities to help enhance sustainable water use and management and improve socio-economic development, healthy ecosystems and human existence. Previous article in issue Next article in issue Keywords Water qualityFloodingWastewater treatmentAI and deep learningReinforcement learningUnsupervised learning 1. Introduction Water is the most essential natural resource for human life that is used in various ways, which are keys for human socio-economic development. Water is used for drinking, bathing, recreational activities, agriculture, hydropower production, and more. Although water covers around 71% of the earth's surface, only about 2.5% is freshwater (USGS, 2019). Therefore, appropriate water resources management is crucial to a well-developed society. As a complex system of nature, aquifers are constantly changing. Hence, our accessibility to freshwater is continually changing, too. In its water scarcity report (United Nations Water, 2020), the United Nations estimates that by 2025, 1.8 billion people will be living in water-scarce areas, highlighting the urgent need for innovative solutions within the water sector. Engineers and decision-makers constantly look for promising methods to address climate change and its consequential impacts. As temperatures rise rapidly, more extreme weather is observed. One of the most concerning consequences is flooding, with over one billion people worldwide predicted to live in cities with a risk of catastrophic flood levels due to climate change (Rentschler and Salhab, 2020). A natural disaster, such as a devastating level of flooding, can cost lives, property, crop destruction and much more. The damaging effects of flooding can have a long-lasting impact on the affected area, which can be challenging to recover from. On a global scale, the exploitation and consumption of water resources often need to be better managed. An important aspect of water resources management is providing solutions for optimal resource use, ensuring overexploitation does not occur, and equipping water resources managers with the appropriate decision-support tools to plan for potential shortages of effective management. Conventionally, physical models have assisted decision-makers in enabling a sustainable and optimal use of water resources. However, the relationships between hydrological, meteorological and water table levels are well known to be very complex. Additionally, these models require a larger number of data, and such data tend to be very expensive and/or scarce, particularly in developing countries. In recent years, Machine Learning (ML) has demonstrated its high efficiency and practicability for water resources management compared to traditional models due to its capability to handle different sources simultaneously and its lower cost and time requirements. ML has been applied to water resources management in various ways to improve the monitoring, prediction, and sustainable use of water resources. ML models are often trained on historical hydrological data for forecasting. The main hydrological data commonly used as input features include discharge, rainfall, water table level, temperature, evapotranspiration, land use, and pumping rates. Preference has recently been given to data-driven models over physically based or conceptual forecasting models, which have the potential to unravel the non-linear input-output relationship and produce reliable predictions of physical systems, even without prior knowledge of the underlying physical relationships and the catchment information. There are numerous examples of how ML can be applied to water resources management. For example, ML can analyse historical usage data in a water distribution system, provide optimum water allocation, predict future demand, and help detect system leaks (e.g. Shahra et al., 2019). With the availability of historical data on groundwater levels, ML has been widely used for future predictions of water level dynamics, which helps in the management of groundwater reservoirs (e.g. Pathak et al., 2021; Ghosh et al., 2022; Kochhar et al., 2021; Teimoori et al., 2023). ML can also be used for streamflow forecasting (e.g. Cheng et al., 2020; Mehedi et al., 2022; Dehghani et al., 2023; Akbarian et al., 2023). There is increasing pressure on irrigation water demand for agriculture use, which is expected to double by 2050 (The Food and Agriculture Organization of the United Nations, 2017), with only limited resources. ML has been extensively used to narrow this gap and to develop smart irrigation practices (e.g. Chen et al., 2021; He et al., 2022). Another example where ML has proved successful is the water quality prediction. This has been crucial given that water pollution has worsened significantly in most rivers in Africa, Asia, and Latin America (United Nations Environment Programme, 2016). This has prompted many studies focusing on the applications of ML to estimate and predict water quality (Zhou, 2020). This study presents an overview of the recent water resources-related studies that implemented ML algorithms, with the main aim being to answer the following research question: which ML algorithms have been used in water resource management in recent years, and what were the most effective approaches adopted for forecasting application? This provides the most up-to-date and relevant information pertaining to the application of ML to the water sector, thereby highlighting its relevance and potential in practical application. Most of the research studies covered in this review extend from the time we initiated it until October 2023. Nomenclature Abbreviations Significations ANFIS Adaptive Neuro-Fuzzy Inference System ANN Artificial Neural Network ARIMA Autoregressive Integrated Moving Average Bi-LSTM Bidirectional-LSTM CNN Convolutional Neural Network Conv LSTM Convolutional LSTM DI Data Integration ELM Extreme Learning Machine En-De Encoder-Decoder GA Genetic Algorithm GB Gradient Boosting GBRT Gradient Boosted Regression Trees GHM Global Hydrological Model GloFAS Global Flood Awareness System GMDH Group Method of Data Handling GNN Graph Neural Network GRU Gated Recurrent Unit GWO Grey Wolf Optimisation KGE Kling-Gupta Efficiency LASSO Least Absolute Shrinkage and Selection Operator LR Linear Regression LSSVM Least-squares support-vector machines LSTM Long Short-Term Memory MLP Multilayer Perceptron MLR Multivariate Linear Regression NARX Nonlinear AutoRegressive network with eXogenous inputs NSE Nash–Sutcliffe efficiency PCA Principle Component Analysis PCC Pearson Correlation Coefficient PSO Particle Swarm Optimisation R2 Coefficient of Determination RF Random Forest RNN Recurrent Neural Network SAC-SMA Sacramento Soil Moisture Accounting Model SAE Stacked Auto Encoder seq2seq sequence-to-sequence SVM Support Vector Machine SVR Support Vector Regression SWAT Soil & Water Assessment Tool WT Wavelet Transform 2. Machine learning methods Various statistical and Machine Learning (ML) techniques have found significant applications in water resource management for prediction purposes, ranging from pure forecasting to estimating certain parameters of optimisation models (see Table 1). Statistical models provide mathematical representations of observed data, which are used for prediction purposes. They are generally based on variants of regression models, which include simple linear regression, multiple linear regression, generalized linear models, nonlinear regression, and autoregressive integrated moving average models (ARIMA) (Bovas and Johannes, 1983; Agresti, 2011; Agresti and Franklin, 2011), regularized regression models - such as Ridge regression (Hoerl and Kennard, 1970), Least Absolute Shrinking and Selection Operator (LASSO) (Tibshirani, 1996), as well as logistic regression models (Agresti, 2011). The latter are used for classification. Table 1. Summary of statistical and machine learning models as well as their associated paradigms and tasks. Models Paradigm Task Statistical models Linear regression Supervised learning Regression, Nonlinear regression Supervised learning Regression Regularized regression models: Ridge Regression, LASSO Supervised learning Regression Generalized linear models Supervised learning Classification, regression ARIMA Supervised learning Regression, time series forecasting Machine Learning models Decision Trees Supervised learning Classification, regression, time series forecasting SVM/SVR Supervised learning Classification, regression Naïve Bayes Supervised learning Classification, regression, time series forecasting Gradient Boosted Trees, AdaBoost, XGBoost Supervised learning Classification, regression, time series forecasting Random Forest Supervised learning Classification, regression, time series forecasting K-NN Supervised learning Regression, time series forecasting Deep learning: ANN, RNN, CNN, GAN, GRU, LSTM, DBN, DCGAN Autoencoders, SAE, DEA, VAE, RBM, DBM Supervised learning Unsupervised learning Classification, regression, time series forecasting Feature extraction, dimensionality reduction Clustering: k-mean, k-medoid, GMM-based clustering Unsupervised learning Feature extraction, dimensionality reduction PCA, UMAP, Isomap Embedding, NMF, Apriori Unsupervised learning Feature extraction, dimensionality reduction Filter Methods Unsupervised learning Feature selection, dimensionality reduction Label Spreading, Label Propagation, Self-Training classifier Semi-supervised learning Classification Q-Learning, MDP, SARSA, PPO, PG Reinforcement learning Decision-making Hybrid models: ARIMA-ANN, Deep Q-Learning, Deep Reinforcement Learning Supervised learning, Reinforcement learning Classification, regression, time series forecasting, decision-making ML can be cast as either (i) supervised learning, (ii) unsupervised learning, (iii) semi-supervised learning or (iv) reinforcement learning. 2.1. Supervised learning Supervised learning techniques are used to devise a functional mapping between input variables and output variable(s) which have proven to be efficient for prediction tasks. Depending on the type of the dependent variable(s), a supervised learning technique is categorised as either a classification model (for a nominal dependent variable) or a regression model (for a continuous dependent variable). Therefore, statistical models can be viewed as supervised learning techniques. Classification models for ML include Decision Trees classifiers (Breiman et al., 1984; Quinlan, 1986), Support Vector Machines (SVM) classifiers (Cortes and Vapnik, 1995; Steinwart and Christmann, 2008), Naïve Bayes classifiers (Domingos and Pazzani, 1997), Adaptive Boosting (AdaBoost) classifiers (Freund and Schapire, 1995), Gradient Boosted Trees classifiers (Friedman, 2001; Hastie et al., 2009), Extreme Gradient Boosting (XGBoost) classifiers (Chen and Guestrin, 2016), Random Forest classifiers (Breiman, 2001), Linear Discriminant Analysis (LDA) (Friedman, 1989). Regression models include the regression variants of the aforementioned classifiers, namely Decision Trees regressors (Breiman et al., 1984), Support Vector regressors (SVR) (Drucker et al., 1997), Naïve Bayes regressors (Frank et al., 2000), AdaBoost regressors (Freund and Schapire, 1995), Gradient Boosted Trees regressors (Friedman, 2001; Hastie et al., 2009), XGBoost regressors (Chen and Guestrin, 2016), Random Forest regressors (Breiman, 2001), as well as K-Nearest Neighbour (KNN) regressors (Cover and Hart, 1967). Deep learning (Le Cun et al., 2015; Schmidhuber, 2015) is a class of supervised learning suitable for both classification and regression tasks, which includes classical Artificial Neural Networks (ANN) (Amari, 1972; Hopfield, 1982), Convolutional Neural Networks (CNN) (Le Cun et al., 1990), Recurrent Neural Networks (RNN) (Hopfield, 1982), Generative Adversarial Networks (GAN) (Goodfellow et al., 2014), Gated Recurrent Unit (GRU) (Cho et al., 2014), Long Short-Term Memory (LSTM) (Hochreiter and Schmidhuber, 1997), Deep Belief Networks (DBN) (Hinton, 2009), Deep Convolutional Generative Adversarial Networks (DCGAN) (Radford et al., 2015). 2.2. Unsupervised learning Unsupervised learning techniques are used to discover patterns or relationships within unlabelled data. These machine learning techniques can be classified as either: - feature extraction techniques, including Hierarchical and Partitional Clustering (e.g., K-means and k-medoid) (MacQueen, 1967; Hartigan and Wong, 1979; Kaufman and Rousseeuw, 1990), Gaussian Mixture Model (GMM)-based Clustering (Maugis et al., 2009), Principal Component Analysis (PCA) (Jolliffe, 2002), Uniform Manifold Approximation and Projection (UMAP) (Ghojogh et al., 2021), Isomap Embedding (Tenenbaum et al., 2000), Non-negative Matrix Factorization (NMF) (Lee and Seung, 2001), Association Rules (e.g. Apriori algorithm, (Agrawal and Srikant, 1994)), or - feature selection techniques, which revolve around Filter Methods based on mutual information (Pudjihartono et al., 2022). Variants of Deep learning (Le Cun et al., 2015) models used for unsupervised learning are Auto-Encoders (Kramer, 1991), which include Sparse Auto-Encoder (SAE) (Frey and Makhzani, 2013), Denoising Auto-Encoder (DAE) (Vincent and Larochelle, 2010), Variational Auto-Encoder (VAE) (Welling and Kingma, 2019) and Restricted Boltzman Machines (RBM) (Sherrington and Kirkpatrick, 1975), and Deep Boltzman Machines (DBM) (Salakhutdinov and Hinton, 2009). 2.3. Semi-supervised learning Semi-supervised learning (Chapelle et al., 2006; van Engelen and Hoos, 2020) combines both supervising and unsupervised learning framework, namely when the data available consist of both unlabelled and labelled data, with the sample of unlabelled data generally outweighing the one for labelled data. Semi-supervised learning techniques include Label Spreading (Zhu and Goldberg, 2009), Label Propagation (Zhu and Ghahramani, 2002), and Self-Training classifier (Triguero et al., 2015). 2.4. Reinforcement Learning Reinforcement Learning (RL) (Kaelbling et al., 1996) is a framework based on an agent's behaviour with a defined environment where some feedback from previous actions are used to adjust optimally the subsequent actions. RL techniques include Q-Learning (Watkins, 1992), Markov Decision Process (MDP) (Wrobel, 1984), State-Action-Reward-State-Action (SARSA) (Rummery and Niranjan, 1994), Proximal Policy Optimisation (PPO) (Schulman, 2017), and Policy Gradient (PG) (Sutton et al., 2000). Sometimes, different ML techniques and statistical models are combined to improve the predictive accuracy. Such hybrid approaches include the combination of RL with Deep Learning (e.g., Deep Reinforcement Learning, Deep Q-Learning) (Mnih et al., 2015), and the combination of ANNs with ARIMA (Zhang, 2003). This study aims to provide a comprehensive overview of the applications of machine learning in water resources management related fields, including groundwater management, water distribution systems, water quality and wastewater treatment, water demand and consumption, hydropower and marine energy, irrigation and agriculture, water drainage systems, and flood management and defence. The following sections provide an overview of the recent water resource-related research studies where ML algorithms were implemented (Fig. 1). Download : Download high-res image (699KB) Download : Download full-size image Fig. 1. The different water resource management related applications covered in this review. 3. Review methodology This review involved establishing a systematic literature search on the water industry. ScienceDirect and Scopus were mainly used as the database. The search also mainly focused on journal articles. Two sets of keywords were used, where one set included the machine learning elements, and the other set included elements related to the water industry. Those relating to the former included keywords such as ‘machine learning’, ‘deep learning’, ‘neural networks’, ‘LSTM’, ‘long short-term memory’, ‘random forest’, ‘genetic algorithm’, ‘support vector machine’, ‘extreme learning machine’, and ‘extreme gradient boosting’. Those relating to the latter included keywords such as ‘groundwater’, ‘water distribution systems’, ‘water quality’, ‘wastewater treatment’, ‘water demand’, ‘water consumption’, ‘hydropower’, ‘marine energy’, ‘irrigation’, ‘agriculture’, ‘river basin management’, ‘water drainage systems’, ‘flood management’, and ‘water retaining structure’. The searches were limited to mainly include journal publications. While the search mainly focused on the articles published in the past ten years, some older articles were cited. 4. Groundwater management Groundwater resources are large natural reservoir located within the ground. Arid areas often rely on groundwater resources for water supply, irrigation and industrial activities. (Pathak et al., 2021; Ghosh et al., 2022). Half of drinking water is supplied by groundwater, and irrigation accounts for nearly 43% (Rajeevan and Mishra, 2020). However, natural and human factors have put groundwater resources under tremendous pressure. The main detrimental factors impacting groundwater quantity and quality include climate change, population growth, and agricultural demands. Most groundwater-related studies where ML was applied focus on groundwater level (GWL) forecasting. Understanding groundwater flow dynamics is essential to assess the potential availability and scarcity of water. Hence, a sustainable management of the available groundwater resources in arid and semi-arid regions is contingent of an accurate and reliable prediction of GWL, which directly reflects groundwater availability and provides relevant cues on its hydrodynamics. However, characterising groundwater dynamics is a difficult task since the occurrence and availability present spatial and temporal variations, which depend on several factors, including, but not limited to, slope, geology, rainfall, and soil type. A large number of studies have demonstrated the usefulness of data-driven models for GWL application, especially in data-scarce context and/or complex aquifer systems. Conventional approaches applied to GWL have often involved the use of multivariate linear regression models (MLR), autoregressive integrated moving average (ARIMA) model, and seasonal autoregressive moving average (SARIMA) (e.g., Rahaman et al., 2019), which are generally considered as linear fitting models. Future predictions could be derived using the SARIMA model along with the input and output of groundwater data (Kochhar et al., 2021). Teimoori et al. (2023) demonstrated that K-means clustering and relevance vector machine (RVM) could identify the optimal number and locations of monitoring wells and thus help design efficient groundwater level monitoring networks. Traditional ML models have also yielded acceptable GWL prediction performance. Rohde et al. (2021) use the ensemble-based Random Forest model and satellite-based remote sensing for long-term GWL prediction in California, USA. GWL was forecasted within all groundwater-dependent ecosystems across the state. They demonstrated that their results could be used to help groundwater data gaps filling and improve sustainable groundwater management policy in California even in the absence of groundwater monitoring well data. Liu et al. (2022) also implemented Random Forest and found it very effective in predicting GWL in the lower Tarim River. They demonstrated that RF was superior to other models in one-step-ahead predictions of groundwater depth in the space-time domain. Sharafati et al. (2020) assessed the performance pattern of the Gradient Boosting Regression (GBR) model to predict the monthly GWL with short- and long-lead times over the Rafsanjan aquifer. This study demonstrated the performance of GBR in predicting GWL. Regions with higher water depth and abstraction rates yielded better prediction performance. Hikouei et al. (2023) found that XGBoost exhibited good performance, reduced prediction uncertainties, and could capture true features of GWL in areas near canals. Their results showed that peat surface elevation was the most important parameter amongst other parameters tested, including precipitation, distance from the canal, and evapotranspiration. Several studies have shown that standalone deep learning models are more performant than traditional ML models but are still subjected to data characteristics that can affect their performance. The most common ML implementation is the use of artificial neural networks, which have been used to predict the dynamics of GWL in numerous studies. Ahmadi et al. (2022) showed that feed-forward ANN was very effective in groundwater characteristics quantitatively with good accuracy. Taormina et al. (2012) compared the ability of feed-forward neural network (FFANN) in forecasting GWL to regression and statistical models. Mohanty et al. (2015) also employed neural networks to predict GWL and found positive results. Another common application of ML in GWL forecasting is using deep learning models such as the LSTM, Gated Recurrent Unit (GRU) and the Recurrent Neural Network (RNN). Cai et al. (2021) evidenced the superiority of the GRU model in regions with higher precipitation, higher average temperatures, lower snowfall fraction, more extreme climate events, and more frequent baseflow interactions. Regarding input features for the model, precipitation and streamflow data were found to be the most influential ones for groundwater level forecasting. Gharehbaghi et al. (2022) also examined the performance of the GRU model in Northwest Iran. They used three different layer structures of GRU-based neural network models via the seq2seq module, a modern deep learning scheme. Their proposed models could predict groundwater level fluctuations in arid/semi-arid regions. Wu et al. (2023) showed that the GRU model outperformed SVM, LSTM and MLP models at most groundwater monitoring stations. Recently, Pham et al. (2022) investigated the performance of seven machine learning models, namely random tree (RT), random forest (RF), decision stump, support vector machine (SVM), locally weighted linear regression (LWLR), as well as reduced error pruning tree (REP Tree), for the prediction of groundwater levels in a drought-prone area. This study found that the Bagging-RT and Bagging-RF models outperformed other models. Yin et al. (2021) compared the performance of machine learning and physical models in forecasting groundwater dynamics. The physically-based models included W3 and CLSM models, while the data-driven models were based on ANN, RF and LSTM models, respectively. The predicted GWLs from the LSTM model significantly perform better than those of RF and ANN models during validation and prediction periods. They quantified the importance of GRACE observations in data-driven models and found noticeable improvements in the performance metrics considered. Liu et al. (2022) found that when compared to Support Vector Machine, Generalized Regression Neural Network, Decision Tree, Convolutional Neural Network, Long Short-Term Memory and Gated Recurrent Network, Random Forest performed the best in predicting groundwater levels. They showed that RF was superior to other models in one-step-ahead predictions of groundwater depth in the space-time domain. Mahammad et al. (2023) compared six ML models, including Linear regression, Decision tree regressor, Support vector regressor, Random Forest regressor, K-nearest neighbours regressor, and Extreme gradient boost regressor. They showed that the XGB regressor was the most reliable model for future prediction, while the Decision Tree proved to be the least efficient technique for portraying the GWL dynamics. They demonstrated that changes in GWL over space and time were strongly linked to changes in rainfall and population in the study area. Shakya et al. (2022) compared the Support Vector Regression (SVR) model, Multivariate Linear Regression (MLR) model, Decision Tree Regression (DTR) model, Random Forest Regression (RFR) model, Multivariate Polynomial Regression (MPR) model, and two deep learning algorithms, namely ANN model and ANFIS in the task of predicting GWL in an arid area in India. They demonstrated that the MPR model was excellent for GWL forecasting and found that the groundwater table was highly correlated with evapotranspiration. Sun et al. (2022) employed three common data-driven models for GWL forecasting applications, which included a back-propagation artificial neural network (BP-ANN), ARIMA, and LSTM. The prediction accuracy of the models was tested by deploying them in five zones in a Northern Plain in China, which exhibited various hydrogeological properties. Amongst the three models, the LSTM model exhibited the best performance. Mohapatra et al. (2021) compared the performance of ANFIS, DNN, and SVM to assess their capability to predict seasonal GWL in different agroecological Zones of India. They found that the DNN model was the most efficient in predicting seasonal GWL in most of these agroecological zones and would, therefore, be a reliable forecasting tool for seasonal groundwater levels in different agroecological zones of India. Wunsch et al. (2022) investigated the impact of climate change on groundwater resources in Germany using CNN. Declining trends of GWL could be observed in most of the sites as well as spatial patterns of stronger decreases, especially in the northern and eastern parts of the country. They also observed increased variability of low GWL, which extended over long periods during the annual cycle towards the end of the century. Bai and Tahmasebi (2023) compared the performance of a graph neural network (GNN) to two baseline models - LSTM and GRU - for GWL forecasting. They demonstrated that the GNN model outperformed the other models regarding all the performance metrics considered. Also, they demonstrated that their model could still learn spatial dependencies from the data even when these were completely unknown while still obtaining similar performance. Their model also exhibited a high efficiency since it could simultaneously model GWL change for all monitoring wells in the system. In addition to standalone ML models, recent studies have also examined the performance of hybrid-based models, which combine various ML methods to improve forecasting performance. Rahman et al. (2020) used ML models coupled with wavelet transforms and showed that wavelet-based hybrid models such as WT-XGB and WT-RF were more accurate than standalone models (non-wavelet-based), which included Extreme Gradient Boosting, Random Forests, and Support Vector Regression models. They also demonstrated that the coupling of WT further improved the performance for all ML approaches, and the improvement was more significant for a longer forecasting horizon (3 months). Wei et al. (2023) used ANN models combined with wavelet transform (WT) and phase space reconstruction (PSR) and found that the performance of the WT-PSR-ANN model was better than that of the WT-ANN model and substantially better than the standalone models in GWL forecasting. They also found that the type of mother wavelet affected the accuracy of the WT-hybrid models, which was more apparent for the WT-ANN models than for the WT-PSR-ANN model. Azizpour et al. (2021) proposed hybrid models to predict the monthly GWL in Kermanshah, Iran. The hybrid models comprised a differential evolutionary algorithm to optimise the ELM and a WT to decompose the input parameters into different time series. Their study suggested that their hybrid meta-heuristic ML could effectively predict the available water quantity in the investigated study area. Yadav et al. (2020) demonstrated that the hybrid models (HANN and HSVM) perform better than the original models (ANN and SVM) while predicting groundwater level fluctuations. They found that prediction accuracy decreased with increasing forecasting horizons for original and hybrid models. They evidenced that groundwater decline was much higher in peri-urban areas. Van Thieu et al. (2023) proposed a novel hybrid ML model combining Augmented Artificial Ecosystem Optimisation (AAEO) algorithm with a traditional MLP network and showed that AAEO-MLP exhibited the highest performance and stability with reasonable convergence. They evidenced that the AAEO was a promising approach for optimising ML models (e.g. MLP) and should, therefore, be explored for other hydrological forecasting applications (e.g., streamflow, rainfall) to further examine its performance over commonly known methods. Other than all purely data-driven hybrid models, physical-based hybrid models combine ML models and physics-based models to improve forecasting performance. Su et al. (2020) used deep learning algorithms combined with a range of complex numerical models and large-scale Internet of Things (IoTs) to measure groundwater levels with acceptable performance. Kayhomayoon et al. (2022) proposed a new hybrid model that combines MODFLOW simulation, clustering, and optimisation tools for GWL prediction. Specifically, they simulated GWL using the MODFLOW, clustered the study aquifer into different clusters using the k-mean method, and predicted regional GWL using ANN and ANFIS methods that were optimised by the Harris Hawks Optimisation (HHO), Whale Optimisation Algorithm (WOA), and Particle Swarm Optimisation (PSO). They evidenced that the most important variables for groundwater levels in different clusters included GWL in the previous month (produced by MODFLOW), groundwater withdrawal, precipitation, temperature, and evaporation. Patra et al. (2023) compared Global-LSTM, and Local-LSTM to examine the relevance of groundwater sequential forecasting. Their study showed that the Global (MS) model was the least performant model in forecasting applications and that LSTM was reliable in GWL forecasting. They demonstrated that the local LSTM models from the mid-fan area exhibited the best choice for regional groundwater forecasting. Groundwater is also sensitive to pollution from various sources which is related to GWL decline, particularly in coastal areas, where the associated GWL decrease caused by excessive groundwater pumping leads to seawater intrusion, pollution and groundwater quality degradation. Nitrate contamination has also become a serious threat to coastal groundwater worldwide. Hence, the application of ML on groundwater contamination, although outside the scope of this review study, warrants further investigation. 5. Surface water management 5.1. Streamflow forecasting Machine learning has widely been applied to river basins, specifically for short-, mid- or long-term river flow forecasting, which is a pivotal task for optimal water resource management during the era of rapid climate change. The rapid evolution of hydrological variables, e.g., precipitation, substantially impacts the temporal evolution of river flow distribution in recent days, thereby rendering prediction challenges even more complex. The high uncertainty associated with basin characteristics, hydrological processes, and climatic factors affecting river flows makes streamflow prediction challenging. LSTM Networks have gained increasing attention in streamflow forecast, given its strong learning ability for time series data and ability to process sequential time-series data. Numerous studies have demonstrated the superiority of LSTM in streamflow forecasting over some traditional physics-based models, including the SAC-SMA model for runoff predictions (Kratzert et al., 2018) or the CaMa Flood calibrated model for streamflow and climate data forecasting (Damavandi et al., 2019). LSTM networks have recently yielded the most promising results in the realm of river streamflow forecasting (Wegayehu and Muluneh, 2022). Xu et al. (2020a, 2020b) assessed the performance of LSTM networks for 10 days average flow predictions and the daily flow predictions at Hun River and Upper Yangtze River basins, respectively. The impacts of network structures and parameters, such as the batch size and the number of LSTM cells, impacted the learning efficiency and predictive accuracy. Overall, LSTM was proven to yield good forecasting capabilities compared to traditional hydrological and data-driven models tested, which included the SWAT, Xinanjiang model (XAJ), multiple linear regression model (MLR) and back-propagation neural networks (BP). The predictive performance of LSTM models has also been compared to a wide range of machine learning models. Cheng et al. (2020) examined and compared the performance of ANN and LSTM in long lead-time forecasting in the Nan River Basin and Ping River Basin. Their ANN and LSTM models were shown to yield reliable daily forecasts up to 20 days lead time, albeit the LSTM model outperformed the ANN model when the forecasting horizon was increased. Mehedi et al. (2022) used the LSTM neural network to forecast river discharge and demonstrated its higher performance than other neural network regression models, including for longer lead periods. Dehghani et al. (2023) compared LSTM, CNN, and Convolutional Long Short-Term Memory (ConvLSTM), in hourly streamflow prediction in two rivers in Malaysia, namely the Kelantan and Muda River basins. They showed all three deep learning methods performed with high accuracy in predicting streamflow, but LSTM outperformed CNN and ConvLSTM in small basins with well-spatial distributed rainfall stations, while it underperformed them in moderate to high streamflow and large river basin. Le et al. (2021) examined and compared the performance of six supervised machine learning models in forecasting streamflow in the Red River basin in Vietnam. These included a CNN, a feed-forward neural network (FFNN), and four LSTM-based models. They also compared two standard models, LSTM and GRU, which comprised a single hidden layer, to two more complex algorithms: the stacked LSTM (Stacked LSTM) and the Bidirectional LSTM (BiLSTM). They showed that their four LSTM-based models performed better and were more stable than the FFNN and CNN models. They also evidenced that the complexity of the Stacked LSTM and BiLSTM models did not substantially improve the prediction accuracy compared to the two standard and simple models comprising a single layer (LSTM and GRU). Akbarian et al. (2023) examined the ability of the European Centre for Medium-Range Weather Forecasts (ECMWF) ensembles in runoff forecast application, with one-to three-months lead time in Iran. Five ML models were also used for the runoff prediction, including RF, ANN, XGBoost, SVR, and MLR, while results were compared to observations. Results showed that the ANN exhibited the best fit, followed by XGBoost and RF models, while SVR and MLR models yielded lower performance. ANN and XGBoost outperformed the other models for longer lead times, but the performance decreased with an increase in forecasting horizon. Ilhan (2023) explored a variety of ML algorithms in the estimations of one-ahead instantaneous measurement of streamflow rate in the Ergene River, including LSTM neural network, ANFIS with fuzzy c-means (FCM), ANFIS with subtractive clustering (SC), and the ANFIS with grid partition (GP). All four algorithms could successfully perform in the task of streamflow prediction. To further improve streamflow forecasting accuracy and model efficiency, a variety of traditional ML models that belong to the supervised category have also been either used directly or combined to develop hybrid models (Granata et al., 2022; Wang et al., 2023; Akbarian et al., 2023). Granata et al. (2022) proposed a novel ensemble model composed of RF and MLP algorithms and compared its forecasting capability to a deep learning model based on bidirectional LSTM networks. The results show that the two models showed comparable performance, but the forecast horizon strongly affected the predictive accuracy. Wang et al. (2023) developed a hybrid decomposition-based multi-model and multi-parameter (DMP) ensemble streamflow forecast method. Their novel ensemble forecast method extracted the characteristic periodic term and trend term of hydrological series, improved streamflow forecasting accuracy, reduced ensemble uncertainty and expanded the ensemble size. Hybrid models combining numerical models and ML models have also been tested to improve streamflow forecasting accuracy, especially for longer forecasting horizons. Hunt et al. (2022) tested LSTM for streamflow forecasting purposes for up to 10 days lead time at ten hydrological stations in the western US. The catchment-mean meteorological and hydrological variables from the ERA5 and Global Flood Awareness System (GloFAS)–ERA5 reanalyses were used to train the LSTM model, as well as historical streamflow data. They showed for the first time that their LSTM model could be used in a hybrid system to create a medium-range streamflow forecast outperforming established physics-based models. Chu et al. (2023) assessed the ability of novel integrated streamflow modelling method combined with the DC-LSTM model with the DC-B-LSTM model in improving the forecasting performance. Both the DC-LSTM and DC-B-LSTM models were shown to outperform the standalone LSTM models for all river basins considered. Li et al. (2022) examined a hybrid model composed of a convolutional neural network and long short-term memory network (CNN-LSTM) and evidenced its superiority over the Soil and Water Assessment Tool (SWAT) model, especially in wet seasons, due to its nonlinear learning ability. 5.2. Water demand, allocation, and irrigation 5.2.1. Water demand and consumption Potable water can be inaccessible for many reasons, including inadequate water infrastructures, climate-based issues such as drought, and overexploitation of freshwater resources. Researchers have recently attempted to apply ML in drought forecasting, including Wang et al. (2022), who assessed the feasibility of using extreme learning machines (ELMs) to forecast hydrological droughts. They deployed support vector machine models and ELMs with approximately 144 different models, and they confirmed that ELMs could forecast the standardised hydrological drought index with high precision. Their study also demonstrated that self-adaptive differential evolution ELM could outperform all other tested models and that the wavelet hybrid positively impacted the model's performance, yielding less error in their predictions. Global water scarcity presents an extraordinary challenge, so the United Nations prioritise it among its 17 sustainable development goals for 2030. Many regions are coming dangerously close to enclosing the gap between water demand and its sustainable limit. United Nations Water (2020) estimated that the water demand rate is more than twice the population growth rate within the last century. Arid areas are facing the worst of the water crisis. Therefore, monitoring water demand is of considerable significance for decision-makers. Water resources can be more efficiently managed if demand is accurately forecasted. This will help resolve the overexploitation of precious and limited water resources. Forecasting water demand is a challenging problem. As such, it has been approached in various ways, ranging from linear methods (Zhou et al., 2000; Alhumoud, 2008) to nonlinear regression models (Nasseri et al., 2011; Bennett et al., 2013). However, modelling water demand could be quite complex, and not all input variables have linearity between them. Due to the complexities of the water demand data, Romano and Kapelan (2014) explored the use of deep learning for forecasting and management of smart water distribution using real-life data from a water distribution network within the United Kingdom. Perea et al. (2019) applied deep learning to a previous study by Romano and Kapelan (2014) to improve the performance of existing short-term water forecasting models in Southern Spain. Banadkooki et al. (2022) attempt to resolve conflicts related to water resources in arid basins through the exploration of intelligent algorithms: genetic algorithms (GA) and non-dominated sorting genetic algorithm (NSGA-II). The study considered environmental parameters and the integrated water management indices to determine optimal water management scenarios. The study performed a variety of trade-offs to balance economic benefit and demand management. The results showed that less water was allocated to industries with high water demand to conserve aquifers and meet water demands. The real-life application of smart metering has become more apparent in recent years. Monitoring demand is vital for the adequate management of resources across all service sectors. Recently, neural networks have been more commonly implemented to address water demand prediction issues. While the water industry has not explored the use of deep learning for smart metering as extensively as in the energy sector (Kavousian et al., 2013). Pesantez et al. (2020) attempted to address this gap using artificial neural networks and cluster analysis to forecast the water demand at the customer level. They used smart metered data on water consumption, with no differentiation between the type of user, whether residential or non-residential. The study found that support vector regression underperformed compared to random forest and artificial neural network models despite applying optimisation methods supported by previous works (Herrera et al., 2010; Mouatadid and Adamowski, 2017; Antunes et al., 2018). As inferred previously by Herrera et al. in (2010), the random forest technique was found to be either on par with or slightly outperformed the artificial neural network model. Salloom et al. (2021) explored the use of GRU on historic water demand data and implemented k-means, an unsupervised classification method, to enhance prediction accuracy whilst also reducing the parameters fed into the model. The model was found to significantly reduce the complexity required (six times what was archived in the most current literature at the time of the study) while maintaining the predictive accuracy rate. Salloom et al. (2022) used a proportional-integral-derivative (PID) control approach to boost the performance and efficiency of neural network models for water demand prediction. The PID's prediction error experienced the same level of reduction as other techniques in the study; however, the efficiency of error reduction showed superior performance compared to other techniques. This was evident by the negligible effects on the number of variables via the PID approach. Wang et al. (2022) explored the use of principal component analysis (PCA) and backpropagation (BP) neural network in water resource demand prediction in Taiyuan, China, a city subject to severe water shortages. Compared with other models (namely PCA-ANN, ARIMA, NARX, Grey-Markov, serial regression, and LSTM), the PCA-BP model outperformed them by making highly complex variables easier to compute. The model achieved this by reducing the dimensionality of the variables and transforming them into uncorrelated composite data. However, their model was limited by limited data collection, affecting its accuracy. In addition, although the model's computation accuracy was sufficient to meet the threshold, there was still room for further development. 5.2.2. Water allocation and irrigation Water plays a vital role in irrigation and agriculture all over the world. The Food and Agriculture Organization of the United Nations (2017), FAO, states that 70% of freshwater withdrawn globally is supplied to agriculture to sustain the ever-growing human population. Future projections on the water demand for irrigated food production will double by 2050, increasing pressure on the already limited freshwater supplies. The FAO also anticipated an increase in water withdrawal by agriculture by 2050; however, this increase is only by 10%. This small increase is attributed to improved management and practices for irrigation. Therefore, efficient water use within the irrigation and agricultural sectors is crucial to lessen the strain on water demand worldwide. Evapotranspiration is an important aspect of irrigation and agriculture, which is split into two components: evaporation and transpiration. Evaporation refers to the water evaporated over a specific area, whereas transpiration refers to the water lost through the stomata of the vegetation. As these natural processes occur simultaneously, they are difficult to disentangle. Accurate estimation of the evapotranspiration rate is a vital parameter for farmers and agricultural engineers, as it helps reduce crop water demand. Traditional methods to address these issues include the Penman-Monteith equation, which Baille et al. (1994) used as a simplified method for the rate of evapotranspiration prediction. Other approaches found success using scintillometer and meteorological measurements applied to the FAO-PM56 model, as used by Poisson et al. (2017) study. However, the authors showed that the FAO-PM56 model had more significant uncertainties when minor variations were applied and fewer input variables were used. Deep learning techniques have been extensively used to model and forecast evapotranspiration within the agricultural sector. Feedforward backpropagation ANN outperformed multi-linear regression models (MLR) for predicting wind drift and evaporation losses of sprinkler irrigation systems (Al-Ghobari et al., 2018). Various studies found that convolutional neural networks (or CNN-hybrids) were more accurate than other nonlinear regression models, such as random forest or extreme gradient boosting, for evapotranspiration forecasting (Ferreira and da Cunha, 2020a, 2020b; Lucas et al., 2020). Elbeltagi et al. (2020) opted for a more modern approach to the problem by modelling long-term evapotranspiration dynamics using deep learning algorithms in major wheat-producing sites in Egypt. They applied deep neural networks using real-life data collected from remote sensors, which included the monthly maximum temperature, the monthly minimum temperature, and the monthly solar radiation. The model parameters were intentionally chosen to give the lowest root mean squared error, following a similar procedure presented by Maroufpoor et al. (2019a,b). He et al. (2022) successfully demonstrated the use of biological heuristic algorithms integrated with an extreme learning machine (ELM) to accurately determine the daily evapotranspiration (ETo) in the Hetao irrigation district of China. In the hybrid ELMs, the optimisers include grey wolf optimiser (GWO), moth-flame optimisation (MFO), particle swarm optimisation (PSO), and whale optimisation algorithm (WOA). The GWO was highlighted as the strongest performer of the four algorithms, obtaining the highest accuracy (R2 = 0.945–0.955), specifically using mass transfer (Tmax, Tmin, RH, u2) combination as opposed to temperature or radiation. GWO is characterised by the avoidance of local optimisation when dealing with nonlinear and multivariate functions. Water resources can often become contaminated by agricultural runoff. Improper agricultural practices lead to elevated levels of faecal coliforms and other pollutants, thus negatively impacting the water quality of the surrounding area. Bilali and Taleb (2020) found that artificial neural networks and other machine learning models, such as random forest, multi-linear regression and decision tree, are highly accurate at predicting irrigation water quality parameters, such as the sodium absorption ratio and the TDS dissolved in the water surface. The study found that the ANNs outperformed k-nearest neighbours and support vector regression models. H. Chen et al. (2020) found that the CNNs architecture could be developed and integrated with decision tree algorithms to aid in smart feature extraction and to establish intelligent spectroscopic modelling of agricultural water pollution. Furthermore, ANNs have been used to forecast infiltration water volume under furrow irrigation (Mattar et al., 2015), to forecast irrigation flow (Mouatadid et al., 2019), and to forecast estimates for drip irrigation systems (Karimi et al., 2020). However, Mouatadid et al. (2019) highlighted that LSTM models were able to outperform the other models used in their study, which included an ANNs model, least squares support vector regression (LSSVR), multi-linear regression (MLR) and extreme learning machine (ELM). The LSTM was coupled with a maximal overlap discrete wavelet transform analysis and bootstrap technique. The wavelet-bootstrap-ANN and wavelet-LSTM, both with three hidden layers, displayed the most accurate forecasting capability compared to the other models used in the study. Chen et al. (2021) explored reinforcement learning, a deep Q-learning network (DQN), to develop smart irrigation practices focusing on conserving irrigation water and time without losing paddy rice yield. DQN combines the perception ability of deep learning with decision-making ability. The study found that the DQN strategy could conserve 23 mm of irrigation water compared to conventional irrigation decisions. Drainage water was also reduced by 21 mm without a reduction in yield. Alibabaei et al.’s (2022) case study in Portugal utilised a deep reinforcement learning model to optimise irrigation requirements on the site. The model would serve as a smart irrigation scheduling system that would aid farmers in water quantity and the irrigation frequency required for the site. The model post-training would not require expertise to operate and, thus, would be a valuable system for farmers to use after the completion of the study. The model would also adjust the irrigation requirements based on climate change, as climate data is used in the model. The study considered ANN, LSTM, and CNN. However, the LSTM was found to be better at predicting the Q-table than the other models. The trained model decreased the water requirement by 20–30% and increased productivity by 11% compared to the fixed method. Gorgij et al. (2023) demonstrated the predictive potential of LSTM for spatiotemporal forecasting of the quality of groundwater used for irrigation. Sodium Adsorption Ratio (SAR) was highlighted as a crucial criterion for the study. An 18-year SAR dataset based in northwest Iran was supplied to the model to forecast the irrigation water quality for the subsequent year. They found that the LSTM marked against the performance indicator RBIAS showed underestimation by the model. However, when assessed against the performance indicator GA (generalisation ability), the LSTM model exhibited more acceptable performance. The allocation of water sourced from the Transboundary River generally involves many stakeholders in different countries that share the water resource. Water scarcity and the often-conflicting use of water resources ultimately increase tensions between riparian countries. Tension can be eased by the efficient management and allocation of transboundary water resources, which warrants the need for advanced techniques to enable the proactive and efficient planning of available water for human well-being and environmental sustainability. As an attempt to apply ML techniques for water allocation in a transboundary context, Yan et al. (2019) comprehensively evaluated the water resources of China's transboundary river basins at the basin and country levels. They assessed the performance of several ML algorithms, including random forest, gradient boosting, and stacking in the task of forecasting runoff. Their study provided valuable information on long-term averaged surface water resources by country and basin in China's transboundary river basins and high-resolution runoff coefficient and runoff maps of all the riparian countries, thereby providing valuable spatially distributed runoff information. Their study also demonstrated the satisfactory implementation of ML models for water resources assessment and their superiority over traditional linear models and two popular runoff data products (the UNH/GRDC Global Composite Runoff Fields and the Global Streamflow Characteristics Dataset) from a predictive accuracy standpoint. 6. Hydropower management, marine energy and reservoir operation 6.1. Hydropower management and marine energy Statistics from Our World in Data (2020) showed that in 2019, global fossil fuel consumption totalled 136,761 TW-hours, reaching a new record and continuing the increasing trend observed in the past years. Fossil fuels were classified into three categories: gas, coal and oil. The data showed that most consumption was attributed to oil (53,620 TW-hours), while the least consumed fossil fuel was gas (39,292 TW-hours). This leaves global coal consumption at 43,849 TW-hours. Global efforts to struggle against climate change have been increasingly witnessed over recent years by shifting towards clean and renewable energy. According to the International Hydropower Association (2020), the 2020 Hydropower Status report showed that global clean electricity generation through hydropower achieved a new record of 4306 TW-hours. This record was acknowledged as the “single greatest contribution from a renewable energy source in history”. However, this record can only account for a small portion of the global fossil fuel consumption in 2019, approximately 3%. Therefore, it is essential to maximise the full potential of hydropower and marine energy by exploring new methodologies to solve current problems and increase the energy efficiency provided, particularly in some parts of the developing world where the load on the system is increasing, but hydro-turbines struggle to match the demand. The application of ML in hydropower management and marine energy has recently met some level of success. Hammid et al. (2018) explored the use of artificial neural networks on a small hydropower plant using a Kaplan turbine at the Himreen Lake dam in Diyala, Iraq, to enhance the accuracy of forecasting the energy produced. Wang et al. (2020) developed a novel integrated approach using traditional and more modern methodologies for the production capacity prediction of a hydropower station to enhance energy efficiency. A previous study by Zhang et al. (2017) found that a backpropagation neural network model, although powerful in terms of performance, took a relatively long time to train on the input data. Although a radial basis function neural network model could outperform the backpropagation neural network (Li et al., 2018), they were both prone to the risk of local minimum convergence. To avoid this challenge, Wang et al. (2020) opted for using a simple single hidden layer feedforward neural network, defined as an extreme learning machine (ELM). The corresponding model showed a generalisable performance with a relatively quick training time. Technological advances have made it possible to predict energy that can be gained from ocean waves. This type of renewable energy carries a higher power density than other renewable resources, such as solar or wind energy. Accurate predictions can enhance energy efficiency to reach the full extent of potential wave energy, ultimately helping the shift from fossil fuels. An early comparative study by Reikard (2009) supported a time-varying parameter approach, attributing the weakness of the neural network model to inadequate architecture and optimisation for that dataset. Hybrid models have been found to have the potential to achieve accurate predictions. Real-life application of wave energy control is difficult as it depends on accurate predictions of future waves. Li et al. (2018) explored the use of deep learning, namely ANNs, and showed that the model was able to provide accurate predictions, which substantially increased the average energy absorption from 60% to 80%. However, the control efficiency could still be further developed and improved as it was slightly lower than the optimal level. Avila et al. (2020) showed that using ANNs and fuzzy interference systems (FIS) proved to be effective tools to accurately predict wave power at any point in deep oceanic waters, even with a small dataset of a few months collected from buoys in the Micronesian region. Recently, Giles et al. (2021) explored the issue caused by sun glint for high-resolution red-green-blue (RGB) imagery collected by drones over shallow marine environments. An artificial neural network model was developed to automatically detect and classify the sun glint in high-resolution aerial imagery. The model was supplied with a highly imbalanced dataset, with the pixels of sun glint accounting for only 1.19% of the training dataset. Despite this, 99.18% of overall predictions were correct. It was also shown that large hydropower plants could have high environmental impacts. Bortoluzzi et al. (2022) used Data Envelopment Analysis (DEA) and an artificial neural network to accurately predict the local impact of such projects. While the DEA allowed the environmental impacts to be ranked, the ANN allowed the assessment of the size of the local environmental impact. In other words, they created a hybrid DEA-ANN decision-making approach, which enables a more informed evaluation of hydroelectric generation projects. The GRU-LSTM hybrid model of Ma et al. (2023) successfully predicted water levels in cascade hydropower stations at different time scales. Such information is vital for irrigation and flood control. Authors note prediction errors associated with downstream tributary backwater jacking could be significantly reduced by adding downstream tributary flow as an additional parameter in the dataset. The LSTM parameters implemented the Archimedes optimisation algorithm. The output results of the GRU and LSTM were weighted. This resulted in increased accuracy of the water levels predicted. The authors highlight the use of a semisoft threshold function to improve the model in various ways, such as eliminating the noise of the original hydrological dataset. 6.2. Reservoir operation Reservoirs provide a plethora of services, including the provision of freshwater supply. On the other hand, groundwater level fluctuation is subject to factors such as changes in precipitation during different seasons. National Thailand (2019) pointed out that the Vajiralongkorn Dam in Kanchanaburi was at 51% capacity with 4500 million cubic metres of water, down from 70% the same time the previous year, highlighting the harsh reality of dams drying up due to climate change. Given this fact, decision-makers are under more pressure to be aware of potential shortages in the future. Therefore, accuracy in predicting the water balance of a reservoir is crucial. Artificial neural networks (ANN) have been applied by Hadiyan et al. (2020) to accurately forecast the Sefidroud Dam reservoir inflow. Their study compared different types of static and dynamic ANNs, which included static feedforward neural networks (FFNN), nonlinear autoregressive (NAR) neural networks, and nonlinear autoregressive neural networks with exogenous inputs (NARX). The models were trained using two input variables, namely, the monthly inflow discharge and the precipitation data. The architectures were optimised by adjusting the number of neurons within the hidden layers. They found that the dynamic NAR model outperformed the other two models and could predict high inflows while achieving the lowest RMSE values. They evidenced that the most optimum number of time delays was 12 for the input variable as the model could perform computation more accurately. They also attempted to use dynamic artificial neural networks instead of static ones for forecasting discharge inflows. Recurrent neural networks have also been used to forecast water levels to improve water resource management, and long short-term memory (LSTM) models have proved to be efficient for this purpose, achieving an accuracy of 97.05% (Ren et al., 2020). Amongst the main hydrological processes impacting the sustainable planning and management of river, dam operation and reservoir capacity is suspended sediment load (SSL). AlDahoul et al. (2022) successfully demonstrated the application of ML models to accurately classify suspended sediment load SSL using the data from the Johor River in Malaysia. The analysed models include extreme gradient boosting (XGB), random forest, support vector machine, multi-layer perceptron, and k-nearest neighbours. The XGB model exhibited superior classification performance over the other ML techniques. The model used several parameters, such as environmental factors influencing the SSL pattern, while using two different time scales. Nonetheless, they demonstrated that most of the ML models achieved acceptable classification results. 7. Water distribution and drainage systems 7.1. Water distribution systems As water demands increase and freshwater availability decreases, water resource mapping (WRM) becomes a key aspect of water resource management. Water resource managers need to know where the next set of potential resources are to use them in their plans for the future. Therefore, accurate predictions are imperative to ensure the availability of freshwater supply is over- or underestimated during the planning. Due to inadequate information, traditional approaches for WRM, such as water spectral indices (WSI), reach an impasse with high-resolution multispectral images. This can be problematic for more complex areas. To provide an alternative approach to mediate the issue, K. Chen et al. (2020) deployed a water body extraction neural network (WBE-NN) model for a more accurate surface water resource mapping. This approach outperformed previous methods (e.g., Feng et al., 2018; Nandi et al., 2017) with reduced processing time and a reduction of underestimated water areas. Water distribution networks (WND) are crucial infrastructure systems that provide potable water to the public. However, according to Interreg Central Europe (2020), up to 50% of water is lost in some parts of Europe, with an average of 26% due to various structural problems, including poor water pressure management, deteriorated infrastructure, and leakages. For instance, the Consumer Council for Water (2017) stated that England and Wales collectively have a water leakage loss of 3.1 billion litres daily. Many traditional approaches have been undertaken to resolve water leakage issues; however, these methodologies are limited as they need to consider the complex and nonlinear deterioration of the infrastructures over time. To resolve the issue of leakage detection, Arsene et al. (2012) explored the use of deep learning combined with graph theory. Water distribution systems require adequate pressure management to sustain many operational aspects, which include demand control, maintenance, water leakage and failure management, cost reductions, and energy efficiency. Non-revenue water is largely attributed to water that is lost through leakage within the distribution network, thus resulting in substantial amounts of water loss through leakage. This increases operational costs, impacting the economic value of water companies. Traditional approaches for pressure monitoring often leave high uncertainties about pressure values at the nodal points that do not have sensors on them. Ridolfi et al. (2014) used artificial neural networks with a combination of the entropy-based methodology, which was outlined as shifting towards conditions of the highest order. The study found that optimal sensor placement on nodes could be achieved by finding the best trade-off between sampling design and model accuracy. Other studies show the successful use of neural networks for leakage or contamination detection within a water distribution system. Rutkowski and Prokopiuk (2018) used learning vector quantisation (LVQ) neural networks to pinpoint contamination locations within a water distribution system in Poland, whereas Zhou et al. (2019) used a convolutional neural network as part of a novel burst location identification framework. Hu et al. (2021) proposed a novel approach to leakage detection within a water distribution system using multiscale fully convolutional networks integrated with spatial clustering of applications with noise. This approach outperformed k-nearest neighbour (KNN), support vector machine (SVM) and naive bayes classifier (NBC) by 28%, 78%, and 72%, respectively. Water resource carrying capacity (WRCC) is an essential aspect of urban planning, which aims to balance out the amount of water demand concerning the available water resources within an urbanised area. Analysis of the WRCC of a city helps prevent the exploitation and degradation of the water resources and environment while ensuring a sustainable standard of living for the people. However, addressing this issue depends on multiple input variables, which become far too complex and reduce the accuracy of the predictions. Yu et al. (2020) proposed two simple types of feedforward neural networks (FNN) based on the normalisation value (NV) and error correction to address these issues. Almheiri et al. (2021) outlined the superior performance of deep learning compared to other machine learning methodologies, e.g., survival random forest (SRF). However, since the amount of data available controls DL approach, it is therefore limited as pipe failure data are not widely scarce. They developed a hybrid model using an ANN-based method and integrated an ML process to predict the hazard ratio of water pipes. The performance of ML approaches (e.g., SRF) decreased as the training shots decreased, whereas the stability of the hybrid model remained constant despite the decrease in the training shots. The authors suggested the two learning phases allow the hybrid to effectively generalise, while one phase was used in the baseline approaches. Garðarsson et al. (2022) successfully demonstrated strong performance of Graph Neural Networks (GNNs) to predict pressure values in water distribution networks in order to detect leakage and localisation. Results were evaluated by the benchmark set in the Battle of the Leakage Detection and Isolation Methods challenge (Vrachimis et al., 2020). The authors noted that the model was limited by false positives; however, the GNN model could obtain the highest economic score among the contestants, suggesting the model was still considered a viable approach to leakage detection. More recently, Yu et al. (2023) implemented ML methods with piezoelectric accelerometers installed within real-life pipe networks across several cities in China that classified vibration signals in order to detect leakages within the systems. They demonstrated that a pre-trained compact CNN with 18 deep learnable layers with the ability to classify images into 1000 classes, namely SqueezeNet, performed the best and showed a 95.15% in leak-detection accuracy compared to the other ML approaches, which included SVM, DTR and KNN. They also demonstrated that larger dataset enabled SqueezeNet to achieve more accurate results. 7.2. Water drainage system The advent of advanced sewage and drainage systems can be traced back to the Indus Valley Civilisation around 3000 BC. This historical infrastructure spanned 91 cm across and 1.5 m in depth as a watertight sanitary drainage system (Harappa, 2020). Nowadays, natural processes required for drainage systems, namely the infiltration, which enables water to move into the ground easily, is hindered and reduced in urbanised areas. Therefore, increased stormwater can easily overwhelm surface water drainage systems of urbanised areas. Pollutants and contaminants within the system can potentially be released and have serious consequences on public health, as well as the health of any surrounding organisms. Concerns over climate change and future projections of heavier rainfall can present a challenge to decision-makers and drainage engineers. If drainage systems cannot function properly, urban flooding is inevitable and may eventually lead to various issues for both the public and the environment. An important aspect when designing drainage systems is understanding the rainfall-runoff relationship for any given catchment. Gong et al. (1996) and Loke et al. (1997) have attempted to address this issue using ANNs models as a predictive tool for urban stormwater drainage. Loke et al. (1997) were able to show that neural networks had a high fault tolerance, good generalisation, and a high ability to learn. However, limitations of the models included the need for substantial amounts of data for more accurate predictions, little transparency, and relatively long training times. Pektaşa and Cigizoglu (2013) highlighted the inadequate performances of ANNs, univariate autoregressive integrated moving average (ARIMA), and multivariate autoregressive integrated moving average (ARIMAX) models for time series predictions for direct runoff coefficients within large drainage basins. They proposed a hybrid ANN-ARIMA model and found that it could be generalized to enhance the computational power of the neural networks and offer for more accurate time-series predictions. On the other hand, ANNs have also been explored to alleviate issues pertaining to stormwater and optimisation of the drainage system (Hsu et al., 2013; Rjelly et al., 2018; Mullapudi et al., 2020). An early study by Tran et al. (2007) outlined the use of neural network modelling with CCTV data to identify the deterioration of stormwater pipes made from concrete. The architecture used backpropagation weight estimation and was compared to a Monte Carlo simulation using Bayesian weight estimation. Although the neural network model outperformed the Monte Carlo simulation, the model struggled to accurately process irrelevant features, namely redundant factors such as 'soil type' and 'buried depth'. More recently, Li et al. (2019) used backpropagation neural networks (BPNN) as a monitoring tool to assess the performance of stormwater green infrastructure practices. The model was successfully able to reduce peak flow rate averages of 61% per storm event and reduce the flow volume by 33% per storm event. Truong et al. (2021) input a 21-year dataset of water levels into a gradient tree boosting (GTB) model to forecast the water levels in the culverts within irrigation and drainage systems. The GTB consistently outperformed eight other machine learning methods. Over 91% of predicted and observed values had an error rate below 10%. The comparative common machine learning techniques such as DTR, DL, Adaboost, SVM, XGBoost, RF, and LightGBM. The resultant predictions could aid in forming a strategic approach considering water resources reallocation, affordable pumping technologies, or water rotation in times of low water levels. Zhang et al. (2022) utilised deep reinforcement learning (DRL), specifically a Duelling Double Deep Qu-learning (D3QN) strategy, to evaluate the uncertainty of control within drainage systems. DRL-based real-time control showed reduced statistical dispersion by 15.48–81.93% compared to the conventional rule-based control strategy, thus demonstrating an advantage over the rule-based strategy. The reduction in statistical dispersion specifically pertained to random and system uncertainties in monitoring water level signals within an urban drainage system. 8. Water quality monitoring Water quality is an absolute necessity for public health and safety. However, since the 1990s, water pollution has worsened in most rivers in Africa, Latin America and Asia (United Nations Environment Programme, 2016). The global population has only increased and intensified the global demand for potable water, thus putting enormous pressure on water treatment plants. Extensively urbanised cities such as London, Hong Kong and New York experience high levels of stormwater runoff. Much of the effluents carry various types of pollutants, which lower the drinking water quality, in some cases making the water dangerous for marine life. Therefore, water treatment engineers faced various challenging issues requiring advanced and innovative solutions. For instance, estuaries face various environmental issues, including toxic chemicals, water flow changes, and habitat loss. According to the National Biodiversity Network (2019), physical changes impact a third of the water ecology in the United Kingdom, thus hindering the natural functions of the estuaries. Many estuaries undergo large-scale conversions into urbanised areas, agricultural areas, and shipping ports. Therefore, human interference imposes a great burden on the natural environment, and a substantial number of estuarine habitats are lost, forcing more competitive survival pressures on the species inhabiting those areas. Other environmental issues include toxins within the water supply, such as Cyanobacteria, also known as blue-green algae. Human interference can haphazardly provide optimum conditions for Cyanobacteria to bloom. This includes degradation of the surrounding water quality caused by the release of fertiliser-polluted runoff from farms, eutrophication of waterways and septic tank overflows. These environments allow Cyanobacteria to thrive and multiply above a safe level for humans, animals, and plants. Various studies have been conducted using deep learning for estimations and predictions regarding water quality, including Zhou (2020), who used transfer-based LSTMs, and Yu and Qu (2020), who used radial basis function neural networks. Zhang and Hu (2020) used difference-gated neural networks, and Y. Chen et al. (2020) used deep cascade forests. Jouanneau et al. (2014) found that monitoring Biochemical Oxygen Demand (BOD), a key water quality indicator, required more time and effort to detect. Ma et al. (2020) addressed this issue by developing a deep matrix factorization (DMF) combined with deep neural networks (DNN) in a New York City (United States) harbour. The proposed model showed strong computational power, superior to other machine learning algorithms such as gradient-boosted decision trees, random forest, and support vector regression. Traditional linear methods, such as Ridge, LR, and LASSO, were also used as a benchmark but underperformed compared to the machine learning methods. The history of modern-day water supply infrastructures can be traced back to the 1600s in Medieval London (Water History, 2020). Newhart et al. (2019) found that water treatment plants are excellent subjects for neural network studies due to the large quantity of historical data that is usually available and easily accessible. Several studies have shown that ANNs outperform other machine learning algorithms for investigating the operations of the water treatment plant (Guo et al., 2015; Ghaedi and Vafaei, 2017; Najafzadeh and Zeinolabedini, 2019). These operations ranged from predictions for membrane fouling in the filtration systems of a water treatment system to predictions for real-time coagulant dosage (Dharman et al., 2012; Kim and Parnichkun, 2017; Bagheri et al., 2019). Alternatively, Zhang et al. (2019a, 2019b) used ANN with genetic algorithms to predict the performance of drinking water treatment plants under varying pressures and stresses to effectively manage the water treatment plant. Wastewater treatment is imperative to ensure the health and safety of the public and the surrounding environment. In 2015, the United Nations International Children's Emergency Fund (UNICEF) estimated that 1.8 billion people have no other water source except water contaminated by faecal matter. Therefore, a significant part of the world's population is highly exposed to various water-related diseases, including polio, cholera and typhoid. The United Nations Educational, Scientific and Cultural Organization (2017) reported that 80% of inadequately treated wastewater is released into the environment worldwide. The pollutants in this water can severely impact human health and the surrounding ecosystem, such as decaying organic matter, reducing oxygen availability, and essentially killing the aquatic inhabitants. Proper management of wastewater treatment is pivotal before effluent can be safely discharged back into the environment. Ráduly et al. (2007) used ANNs to evaluate the performance of wastewater treatment plants, while Shi and Xu (2018) proposed a model based on a stacked denoising auto-encoders deep learning network to predict biofilm system's performance under various wastewater treatment plant operations. Zhang et al. (2018) used LSTMs to forecast flow to optimise inter-catchment wastewater transfer and reduce overflow, and Niu et al. (2020) used genetic algorithms integrated into deep belief networks to accurately predict effluent quality and improve process monitoring. Bhagat et al. (2020) provided a critical analysis of the development of artificial intelligence for modelling the removal of heavy metals within wastewater. The approaches investigated included ensemble models, various metaheuristics, different ANN models, and unsupervised methods. Recently, Sang-Soo et al. (2020) used CNN and LSTM combined with a deep learning approach to predict the water level and water quality in the Nakdong river basin. The study highlighted the proposed model's performance and ability to capture the temporal variations of the pollutants in the Nakdong River basin. Zhu et al. (2022) successfully used enhanced feed-forward neural networks to predict biochemical oxygen demand (BOD) and ammonia nitrogen (NH3–N) water quality indicators within wastewater treatment plants. The highly accurate model obtained a mean error of less than 10% with an R2 of 90%, thus improving on the previous feed-forward neural network with the least square support vector machine (FFNN-LSSVM) model. However, the authors suggested that the data obtained from real-time monitoring should be used to inform future research and improve the model performance. Yang et al. (2023) demonstrated the sufficient accuracy of LSTM network in the task of forecasting the effluent quality of a constructed wetland. Their model could outperform other predictive ML methods including multiple linear regression, backpropagation neural network (BPNN), and a GA-BPNN-hybrid neural network (genetic algorithm as an optimisation method integrated into a BPNN model) to resolve local minima issues. They showed that their data exhibited significant effluent population fluctuations. A moving average method was applied to smooth the data, improving the accuracy of the traditional and hybrid neural networks. Ibrahim et al. (2023) outlined using ANNs to successfully predict the water quality index (WQI). The authors used principal component analysis (PCA) to identify the sources of pollution within the Terengganu River and reflect the general conditions. They applied three ANN models with differing input layers to predict the water quality index (WQI) of the river. The best-performing ANN was found to be the one that used the raw data as the input layer, as opposed to principal component factor scores (obtained from the previously conducted PCA). 9. Flood management and water-retaining structures 9.1. Flood prediction Flooding poses a serious risk to many people worldwide, with many regions of the earth impacted by this natural disaster. Flooding is caused by a wide range of factors, including (i) heavy, prolonged rainfall events, which are more likely to rise in the future as a consequence of climate change, (ii) urbanisation., which substantially increases the surface water runoff and impedes the rate of infiltration, or (iii) infrastructure failure such as overtopping of dams. The impacts of flooding can have a substantial economic burden, particularly in the developing world. Some studies (e.g., Ward et al., in 2017; Peduzzi in 2017; Alfieri et al., 2018) anticipate the global economic impact of flooding to cost approximately $1 trillion by 2050. Other impacts include mass migration, socio-psychological implications, loss of livelihood and property and, in more severe cases, loss of life. According to a report presented by the United Nations (2015), 2.3 billion people were affected by flooding, with a significantly high death toll of 157,000 people between 1995 and 2015. Future flooding events have been predicted to become more frequent and more intense than they have been in the past. Therefore, to sufficiently mitigate and manage the consequences of flooding, exploring innovative solutions and technologies that enhance the accuracy of predicting flood occurrences is imperative. Conventional methodologies include prediction using flood inundation models (Salvadore et al., 2015; Gires et al., 2015; Teng et al., 2017). However, these models can only simulate results based on distinct types of flooding, and complete real dynamic processes are omitted, resulting in the decayed accuracy of the projections. Fenech et al. (2019) attempt to follow a similar methodology but include dynamic processes. They aimed to improve this model by using a model that divides the irregular urban area into various grid cells. The proposed model considered the characteristics of the urban environment, including urban drainage systems and impermeable surfaces. To evaluate the model, the authors attempted to reproduce the flood in Lafayette Parish in Louisiana in 2016. Results showed that due to coarse resolutions, simulations could not reproduce the flood regions of the 2016 Lafayette Parish flooding. However, spatial patterns were observed after the model resolution was refined. Fang et al. (2019) introduced deep learning for flood prediction and proposed an integrated LSTM and reduced-order-model (ROM) framework to perform time series prediction and prescriptive analysis on flooding. Their study found that the LSTM-ROM model outperformed the full model and maintained its accuracy in predicting flooding. However, they found that when lead time is extended, the predictive accuracy decreases. Bui et al. (2020) introduced a novel approach using deep learning neural networks to aid in forecasting the likelihood of flash floods. This type of ANNs architecture was selected due to its ability to represent and process highly complex input data and to produce highly accurate projections despite the non-linearity of the given data (Lewis, 2016). Their study was specifically designed to address the challenges in regions susceptible to a high frequency of tropical storms. Therefore, the model was based on real-life data collected in the northwest mountainous region of Vietnam. The geographic information system (GIS) input dataset included the slope, lithology, rainfall, soil type, elevation, steam density, curvature, and normalised difference vegetation index (NDVI). All nine factors influenced the susceptibility of flash flooding within the area. The influencing factors were selected based on the information gain ratio method proposed by Quinlan (1986) and Dai and Xu (2013), thus eliminating the need for data collection on unnecessary factors. Hosseiny's (2021) study utilised U-net, an advanced CNN, to predict river flood depth and extent. The results surmised an improved accuracy in predicting the maximum flood depth by 29%. Löwe et al.’s (2021) research also successfully implemented advanced convolutional neural networks, U-Net, to predict urban pluvial flood water depth. It was found that deeper networks improved the prediction until reaching a limit of around 28 million trainable parameters. It was noted that too many datasets led to overfitting and increased prediction errors. The dataset that led to the model performing the best included a combination of terrain aspect, curvature, depth of depressions, flow accumulation and imperviousness. Ahmed et al. (2021) found exponential Gaussian process regression (GPR) accurately predicted the daily water levels in a river subject to annual flash flooding in Malaysia based on data collected from 1990 to 2019. The GPR model outperformed several other machine learning models such as linear regression (LR), interaction regression (IR), robust regression (RR), stepwise regression (SR), support vector regression, boosted trees ensemble regression (BOOSTER), bagged trees ensemble regression (BAGER), XGBoost, and tree regression (TR). The GPR was further used to predict water levels based on 10-day minimum and maximum water levels and could forecast the extremes of the water levels. The authors of the study denote the study was limited by data availability. Ramayanti et al. (2022) explored the generation of flood susceptibility mapping, where they implemented two deep learning architectures to the problem: group method of data handling (GMDH) and CNN. The study was centred around the March 2019 flood in the Beria Area, Mozambique. The models were both able to produce similar mapping, where lower-sloped areas (i.e., areas along the river) were at a higher risk of flooding. The CNN performance indicator, RMSE value, was four times lower than the RMSE value derived from GMDH. This showed that CNN could generate an accurate flood susceptibility map more than the GMDH. Sorkhabi et al. (2023) employed CNN and LSTM to predict the variability in sea level and flooding to measure coastal city resilience. Variables included wind speed, sea surface temperature, precipitation, and mean sea level. The study found that deep learning approaches offered good predictive accuracy in the resilience of the city against flooding due to the variable sea level. However, future works suggested are to incorporate more parameters, such as updated satellite data, to improve the accuracy of the models. 9.2. Water retaining structures Throughout human history, dating back more than 5000 years, according to Biswas and Tortajada (2010), water-retaining structures have been constructed in many places worldwide. Dams provide many benefits, although their fundamental purpose is to facilitate water storage. These benefits include, but are not limited to, flood control, hydropower and human consumption. Currently, there are 50,000 of these large hydraulic structures (Tata and Howard, 2016) being used worldwide, of which a large majority are embankment dams. The British Dam Society (2019) attributes the most common dam failure modes to overtopping during floods. The health and structural integrity of dams are crucial since the consequences of failure can be severe. Therefore, understanding dam behaviour and failure mechanisms is vital. De Granrut et al. (2019) explored using ANNs to analyse the behaviour of piezometric data on arch dams, focusing on the rock-concrete interface to monitor uplift pressures on the dam. The study highlighted the limitations of traditional multi-linear regression (MLR) models, such as the Hydrostatic-Season-Time (HST) model, which are commonly used across engineering practices to monitor dams (Crépon and Lino in 1999; Penot et al., in 2005; Léger and Leclerc in 2007). The advantage of using HST is that only the reservoir level is required and performs well only under certain circumstances. On the other hand, various mathematical approaches have been proposed to model dam seepage (Ding and Han, 2017). Cui and Zhu (2009) successfully implemented a three-dimensional finite element method integrated with genetic algorithms; however, issues with convergence and basic operators in the genetic algorithms impacted the model's accuracy. Zhang et al. (2020) successfully applied ANNs integrated with a three-dimensional finite element model to forecast the regions of weakness (particularly seepage) of concrete dam foundations. Unlike the HST model, ANNs enable the capture of the non-linearity of the piezometric data, such as the leakage flows, movements, and head of the reservoir. Overtopping occurs when the dam's design, such as the freeboard, is not sufficient to cater to the actual requirements, which may change over time. Hence, a suitable design during the initial construction may no longer be appropriate later due to the changes in conditions. The likelihood of overtopping is further exacerbated during extreme weather conditions. For example, due to fluctuations caused by the weather, the head of the water rises above the designed freeboard, which leads to overtopping. The Environment Agency (2018) reports that the projections show increased winter precipitation over the United Kingdom because of climate change. Although seasonal variation is expected, there will be times during the year when dams will be subjected to store more water due to the high precipitation, increasing the risk of overtopping. As the years go on, the trend of a rainfall event is expected to further increase the risk of overtopping. Huang et al. (2003) used convolutional ANNs for coastal water level predictions. However, this method requires large amounts of long-term historical data, which is not always readily available. Fuzzy logic parameters integrated into ANNs provide effective estimations of water levels under uncertainty; however, they do not give insight into the parameters' uncertainties alone (Alvisi and Franchini, 2011). Yang et al. (2019) applied recurrent ANNs to simulate reservoir operations using inflow, storage and climate data. In this study, the authors used LSTM, nonlinear autoregressive models with exogenous input (NARX) and a NARX-based genetic algorithm, and they found that the latter was able to outperform the other models. Ren et al. (2021) implemented an interpretable mixed attention mechanism long short-term memory (MAM-LSTM) model to predict displacement associated with concrete dams. The authors found success in their two-staged encoder approach. The highly influential factors were adaptively selected by the factor attention mechanism module. The temporal attention mechanism module, in contrast, was able to select the relevant hidden states. This model outperformed classical statistical modelling and other deep learning and machine learning models. Fan et al. (2022) utilised a transfer learning approach, MA-AttUNet. This sophisticated methodology applied previous knowledge from a source domain to underwater crack image segmentation. The knowledge transfer occurs using a multi-level adversarial transfer network. An attention mechanism also limited background noise during detection. Although the model exhibited poor real-time performance, it was able to accurately identify underwater dam crack images. Nonetheless, the model outperformed other methods at the time of the study. Zhang et al. (2023) used a unifying transformer encoder integrated into a CNN architecture for pixel-level dam crack detection. The proposed model demonstrated flexibility and was able to adapt to a variety of scenarios. Although the model performed well against quantitative indicators, the authors showed that the model's accuracy in detection was critically impacted by weak or disturbing background information. They also highlighted that the model's speed was slightly lower than comparative machine learning models, thereby suggesting that future works could include a lightweight deep learning architecture for faster training. 10. Conclusions, open issues, and prospects Machine learning techniques have successfully been used to identify patterns within nonlinear datasets. This study explored the various ML techniques that have been applied within the realm of water resources management. Various Machine Learning techniques have found significant applications for prediction purposes, ranging from pure forecasting to estimating certain parameters of optimisation models. Particularly, implementing artificial neural networks has found great success in recent years. Proactive and effective water management requires accurate prediction, and several studies have shown that standalone deep learning models could outperform conventional machine learning models, albeit the data characteristics could substantially affect their performance. Specifically, LSTM networks have been proven to exhibit reliable forecasting performance and even outperform ANN models, traditional machine learning models, and established physics-based hydrological models. Complexifying the architecture of LSTM-based models (via stacked structure) has not substantially improved forecasting performance. More complex ML models require more data, and thus, the complexity of the deep learning model should be in accordance with the data. However, the performance of standalone deep learning models could sometimes be limited and unable to effectively capture features from multivariate time series. Presently, more studies have considered hybrid ML techniques, such as hybrid ANNs, as they have shown superior computational power over traditional ANNs architectures. Hybrid models combining classic deep learning models such as the LSTM or GRU and decomposition algorithms (WT, EMD, and VMD) have shown good performance and should, therefore be further developed. The development of hybrid machine learning models has often yielded comparable performance in terms of forecasting accuracy. Hence, these models could still be further improved and developed, especially for long forecasting horizons, as the predictive accuracy has always decreased with increasing lead time. Hybrid deep learning models should be more developed than standalone deep learning models, considering their superiority in terms of prediction performance. Physics-hybrid models, which combine data-driven models and physical models, have also proven to improve prediction performance. Physical-based hybrid models are commonly either developed by feeding the ML model with the simulation outputs of physical-based models, or by forecasting its errors. When forecasting the error, the deep learning models can detect the location of most errors made by the physical-based models. When using the output of physical-based models as input for the ML model, its contribution should be first assessed to ascertain it would add positive impact on model performance. Other advanced deep learning architectures, such as transformers (Polosukhin et al., 2017), have yet to be tested in water resources management. Transformers have so far been successfully used to design neural networks in various application domains, including natural language processing, genomic sequences, time series data, and signal processing. Such models are known for their general structure, which includes an additional layer between the encoder and decoder, enabling them a high degree of parallelisation and, hence, faster training. This could be a valuable feature when handling complex data, which is very valuable given that several studies have shown that several hydrological/meteorological variables could contribute positively to prediction performance. Recent studies (e.g., Janner et al., 2021) highlighted how transformer architectures can be used to simplify reinforcement learning by formulating it into a single big sequence. Such an approach provided more capacity and power to reinforcement models in their attempt to address decision-making problems via the distributions of rewards and actions over sequences of states. Furthermore, transformer architecture offers some promising features for dynamics prediction as well as long-horizon dynamics prediction, which could tremendously improve groundwater level or river streamflow forecasting. In a data-scarce context, implementing Transfer Learning techniques could be a potential solution when developing hybridising physical-based and deep learning models. In the future, it is thus highly recommended to further employ Transfer Learning to improve ML model performance, particularly for long forecasting horizons, as predictive accuracy has always been shown to decrease with increasing lead times. The implementation of Transfer Learning could substantially improve the performance of hybrid deep learning models, and thus enable more informed decision-making process in the realm of water resource management and flood defence applications. In the real-world context, ML proved to be a powerful tool in water resources management, providing insights, predictions, and optimisation capabilities. The practical application of ML in the water sector has taken a wide disparity of forms, depending on the intended use or desired benefits. For instance, ML has successfully been used to develop a Smart Water Networks in Barcelona, Spain, where ML and IoT (Internet of Things) technologies were implemented to improve water efficiency and reduce losses in the distribution network (Shahra et al., 2019). This was done by monitoring water quality, detecting leaks, and optimising water distribution using sensors and data analytics. Another example was the application of ML for burst locations in water distribution network in Jiangsu province, east China (Zhou et al., 2019). They correctly located 57 of 58 synthetic bursts in the system. Another practical application of ML is the development and deployment of decision support systems (DSS) to help water resources managers and authorities to make informed decisions. DSS have also been greatly beneficial for water resources allocations in several countries, including the US (WRF-Hydro), Australia (AQUATOR), or the Netherlands (HydroNET). These often leverage machine learning to analyse complex data including – but not limited to - satellite imagery, real-time sensor data, and hydrological and weather data, to make predictions and assist decision-makers. ML algorithms have also been implemented to develop an early warning system that helps residents and authorities take preventive measures during heavy rainfall events (Dong et al., 2022). Weather patterns, river levels, and historical flood data are first analysed to enable the system to provide early warnings. All in all, Machine learning has become a valuable asset in the water sector, providing valuable insights, predictions, and optimisation capabilities applicable in real-world practice to enhance sustainable water use and management, and subsequently improving socio-economic development, healthy ecosystems and human existence itself. CRediT authorship contribution statement Ashraf A. Ahmed: Writing – review & editing, Supervision, Conceptualization. Sakina Sayed: Writing – review & editing. Antoifi Abdoulhalik: Writing – review & editing, Conceptualization. Salissou Moutari: Writing – review & editing. Lukumon Oyedele: Supervision. Declaration of competing interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgement The authors would like to thank three anonymous reviewers and the editors for their valuable comments that have significantly improved this paper. This work was partially funded by EPSRC project reference 2339403 to S Sayed and A Ahmed. Data availability No data was used for the research described in the article. References Agrawal and Srikant, 1994 R. Agrawal, R. Srikant Fast algorithms for mining association rules Proceedings of the 20th International Conference on Very Large Data Bases, VLDB, Santiago, Chile (1994), pp. 487-499 View in ScopusGoogle Scholar Agresti, 2011 A. Agresti An Introduction to Categorical Data Analysis (second ed.), Wiley (2011) Google Scholar Agresti and Franklin, 2011 A. Agresti, C.A. Franklin Statistics: the Art and Science of Learning from Data (third ed.), Pearson (2011) Google Scholar Ahmadi et al., 2022 A. Ahmadi, M. Olyaei, Z. Heydari, M. Emami, A. Zeynolabedin, A. Ghomlaghi, A. Daccache, G.E. Fogg, M. Sadegh Groundwater level modeling with machine learning: a systematic review and meta-analysis Water, 14 (6) (2022), p. 949, 10.3390/w14060949 View in ScopusGoogle Scholar Ahmed et al., 2021 A.N. Ahmed, A. Yafouz, A.H. Birima, O. Kisi, Y.F. Huang, M. Sherif, A. Sefelnasr, A. El-Shafie Water level prediction using various machine learning algorithms: a case study of Durian Tunggal river, Malaysia Eng. Appl. Comput. Fluid Mech., 16 (1) (2021), pp. 422-440, 10.1080/19942060.2021.2019128 Google Scholar Akbarian et al., 2023 M. Akbarian, B. Saghafian, S. Golian Monthly streamflow forecasting by machine learning methods using dynamic weather prediction model outputs over Iran J. Hydrol., 620 (Part B) (2023), Article 129480, 10.1016/j.jhydrol.2023.129480 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Al-Ghobari et al., 2018 H.M. Al-Ghobari, M.S. El-Marazky, A.Z. Dewidar, M.A. Mattar Prediction of Wind Drift and Evaporation Losses from Sprinkler Irrigation Using Neural Network and Multiple Regression Techniques, vol. 195, Agricultural Water Management (2018), pp. 211-221, 10.1016/j.agwat.2017.10.005 View PDFView articleView in ScopusGoogle Scholar AlDahoul et al., 2022 N. AlDahoul, A.N. Ahmed, M.F. Allawi, M. Sherif, A. Sefelnasr, K.W. Chau, A. El-Shafie A comparison of machine learning models for suspended sediment load classification Eng. Appl. Comput. Fluid Mech., 16 (1) (2022), pp. 1211-1232, 10.1080/19942060.2022.2073565 View in ScopusGoogle Scholar Alfieri et al., 2018 L. Alfieri, S. Cohen, J. Galantowicz, G.J.P. Schumann, M.A. Trigg, E. Zsoter, C. Prudhomme, A. Kruczkiewicz, E.C. de Perez, Z. Flamig, R. Rudari, H. Wu, R.F. Adler, R.G. Brakenridge, A. Kettner, A. Weerts, P. Matgen, S.A.K.M. Islam, P. Salamon A Global Network for Operational Flood Risk Reduction, vol. 84, Environmental Science & Policy (2018), pp. 149-158, 10.1016/j.envsci.2018.03.014 View PDFView articleView in ScopusGoogle Scholar Alhumoud, 2008 J.M. Alhumoud Freshwater consumption in Kuwait: analysis and forecasting J. Water Supply Res. Technol. - Aqua, 57 (4) (2008), pp. 279-288, 10.2166/aqua.2008.036 View in ScopusGoogle Scholar Alibabaei et al., 2022 K. Alibabaei, P.D. Gaspar, E. Assunção, S. Alirezazadeh, T.M. Lima Irrigation optimization with a deep reinforcement learning model: case study on a site in Portugal Agric. Water Manag., 263 (2022), Article 107480, 10.1016/j.agwat.2022.107480 ISSN 0378-3774 View PDFView articleView in ScopusGoogle Scholar Almheiri et al., 2021 Z. Almheiri, M. Meguid, T. Zayed Failure modelling of water distribution pipelines using meta-learning algorithms Water Res., 205 (2021), Article 117680, 10.1016/j.watres.2021.117680 ISSN 0043-1354 View PDFView articleView in ScopusGoogle Scholar Alvisi and Franchini, 2011 S. Alvisi, M. Franchini Fuzzy neural networks for water level and discharge forecasting with uncertainty Environ. Model. Software, 26 (4) (2011), pp. 523-537, 10.1016/j.envsoft.2010.10.016 View PDFView articleView in ScopusGoogle Scholar Amari, 1972 S.-I. Amari Learning patterns and pattern sequences by self-organizing nets of threshold elements IEEE Transact. C, 21 (1972), pp. 1197-1206 View in ScopusGoogle Scholar Antunes et al., 2018 A. Antunes, A. Andrade-Campos, A. Sardinha-Lourenço, M.S. Oliveira Short-term water demand forecasting using machine learning techniques J. Hydroinf., 20 (6) (2018), pp. 1343-1366, 10.2166/hydro.2018.163 View in ScopusGoogle Scholar Arsene et al., 2012 C.T.C. Arsene, B. Gabrys, D. Al-Dabass Decision support system for water distribution systems based on neural networks and graphs theory for leakage detection Expert Syst. Appl., 39 (18) (2012), pp. 13214-13224, 10.1016/j.eswa.2012.05.080 View PDFView articleView in ScopusGoogle Scholar Avila et al., 2020 D. Avila, G.N. Marichal, I. Padrón, R. Quiza, Á. Hernández Forecasting of Wave Energy in Canary Islands Based on Artificial Intelligence, vol. 101, Applied Ocean Research (2020), Article 102189, 10.1016/j.apor.2020.102189 View PDFView articleView in ScopusGoogle Scholar Azizpour et al., 2021 A. Azizpour, M.A. Izadbakhsh, S. Shabanlou, F. Yosefvand, A. Rajabi Estimation of water level fluctuations in groundwater through a hybrid learning machine Groundwater Sustain. Develop., 15 (2021), Article 100687, 10.1016/j.gsd.2021.100687 ISSN 2352-801X View PDFView articleView in ScopusGoogle Scholar Bagheri et al., 2019 M. Bagheri, A. Akbari, S.A. Mirbagheri Advanced Control of Membrane Fouling in Filtration Systems Using Artificial Intelligence and Machine Learning Techniques: A Critical Review, vol. 123, Process Safety and Environmental Protection (2019), pp. 229-252, 10.1016/j.psep.2019.01.013 View PDFView articleView in ScopusGoogle Scholar Bai and Tahmasebi, 2023 T. Bai, P. Tahmasebi Graph neural network for groundwater level forecasting J. Hydrol., 616 (2023), Article 128792, 10.1016/j.jhydrol.2022.128792 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Baille et al., 1994 M. Baille, A. Baille, J.C. Laury A simplified model for predicting evapotranspiration rate of nine ornamental species vs. climate factors and leaf area Scientia Horiculturae, 59 (3–4) (1994), pp. 217-232, 10.1016/0304-4238(94)90015-9 View PDFView articleView in ScopusGoogle Scholar Banadkooki et al., 2022 F.B. Banadkooki, Y. Xiao, H. Malekinezhad, M.M. Hosseini Optimal allocation of regional water resources in an arid basin: insights from Integrated Water Resources Management AQUA – Water Infrastruct., Ecosyst. Soc., 70 (8) (2022), pp. 910-925, 10.2166/aqua.2022.029 View in ScopusGoogle Scholar Bennett et al., 2013 C. Bennett, R.A. Stewart, C.D. Beal Ann-based residential water end-use demand forecasting model Expert Syst. Appl., 40 (4) (2013), pp. 1014-1023, 10.1016/j.eswa.2012.08.012 View PDFView articleView in ScopusGoogle Scholar Bhagat et al., 2020 S.K. Bhagat, T.M. Tung, Z.M. Yaseen Development of artificial intelligence for modeling wastewater heavy metal removal: state of the art, application assessment and possible future research J. Clean. Prod., 250 (2020), Article 119473, 10.1016/j.jclepro.2019.119473 View PDFView articleView in ScopusGoogle Scholar Bilali and Taleb, 2020 A.E. Bilali, A. Taleb Prediction of irrigation water quality parameters using machine learning models in a semi-arid environment J. Saudi Soc. Agricult. Sci. (2020), 10.1016/j.jssas.2020.08.001 Google Scholar Biswas and Tortajada, 2010 A.K. Biswas, C. Tortajada Development and large dams: a global perspective Int. J. Water Resour. Dev., 17 (1) (2010), pp. 9-21, 10.1080/07900620120025024 View in ScopusGoogle Scholar Bortoluzzi et al., 2022 M. Bortoluzzi, M. Furlan, J.F. Dos Reis Neto Assessing the impact of hydropower projects in Brazil through data envelopment analysis and machine learning Renew. Energy, 200 (2022), pp. 1316-1326, 10.1016/j.renene.2022.10.066 ISSN 0960-1481 View PDFView articleView in ScopusGoogle Scholar Bovas and Johannes, 1983 A. Bovas, L. Johannes Statistical Methods for Forecasting Wiley & Sons, Inc (1983) Google Scholar Breiman, 2001 L. Breiman Random forests Mach. Learn., 45 (2001), pp. 5-32 Google Scholar Breiman et al., 1984 L. Breiman, J.H. Friedman, R.A. Olshen, C.J. Stone Classification and Regression Trees Wadsworth, Inc, Belmont California (1984) Google Scholar British Dam Society, 2019 British Dam Society Historic dam failures and recent incidents Available at: https://www.engineersireland.ie/EngineersIreland/media/SiteMedia/groups/Divisions/civil/Historic-Dam-Failures-slides.pdf?ext=.pdf (2019), Accessed 15th Feb 2020 Google Scholar Bui et al., 2020 D.T. Bui, N. Hoang, F. Martínez-Álvarez, P.T. Ngo, P.V. Hoa, T.D. Pham, P. Samui, R. Costache A Novel Deep Learning Neural Network Approach for Predicting Flash Flood Susceptibility: A Case Study at a High Frequency Tropical Storm Area, vol. 701, Science of The Total Environment (2020), Article 134413, 10.1016/j.scitotenv.2019.134413 Google Scholar Cai et al., 2021 H. Cai, H. Shi, S. Liu, V. Babovic Impacts of regional characteristics on improving the accuracy of groundwater level prediction using machine learning: the case of central eastern continental United States J. Hydrol.: Reg. Stud., 37 (2021), Article 100930, 10.1016/j.ejrh.2021.100930 ISSN 2214-5818 View PDFView articleView in ScopusGoogle Scholar Chapelle et al., 2006 O. Chapelle, B. Scholkopf, A. Zien Semi-supervised Learning The MIT Press (2006) Google Scholar Chen and Guestrin, 2016 T. Chen, C. Guestrin XGBoost: a scalable tree boosting system Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (2016), pp. 785-794 New York, NY, USA CrossRefGoogle Scholar Chen et al., 2020 H. Chen, A. Chen, L. Xu, H. Xie, H. Qiao, Q. Lin, K. Cai A deep learning CNN architecture applied in smart near-infrared analysis of water pollution for agricultural irrigation resources Agric. Water Manag., 240 (2020), Article 106303, 10.1016/j.agwat.2020.106303 View PDFView articleView in ScopusGoogle Scholar Chen et al., 2020 K. Chen, H. Chen, C. Zhou, Y. Huang, X. Qi, R. Shen, F. Liu, M. Zuo, X. Zou, J. Wang, Y. Zhang, D. Chen, X. Chen, Y. Deng, H. Ren Comparative Analysis of Surface Water Quality Prediction Performance and Identification of Key Water Parameters Using Different Machine Learning Models Based on Big Data, vol. 171, Water Research (2020), Article 115454, 10.1016/j.watres.2019.115454 View PDFView articleView in ScopusGoogle Scholar Chen et al., 2020 Y. Chen, L. Tang, Z. Kan, M. Bilal, Q. Li A novel water body extraction neural network (WBE-NN) for optical high-resolution multispectral imagery J. Hydrol. (2020), p. 588, 10.1016/j.jhydrol.2020.125092 Google Scholar Chen et al., 2021 M. Chen, Y. Cui, X. Wang, H. Xie, F. Liu, T. Luo, S. Zheng, Y. Luo A reinforcement learning approach to irrigation decision-making for rice using weather forecasts Agric. Water Manag., 250 (2021), Article 106838, 10.1016/j.agwat.2021.106838 ISSN 0378-3774 View PDFView articleView in ScopusGoogle Scholar Cheng et al., 2020 M. Cheng, F. Fang, T. Kinouchi, I.M. Navon, C.C. Pain Long lead-time daily and monthly streamflow forecasting using machine learning methods J. Hydrol., 590 (125376) (2020), 10.1016/j.jhydrol.2020.125376 ISSN 0022-1694 Google Scholar Cho et al., 2014 K. Cho, B. van Merrienboer, D. Bahdanau, F. Bougares, H. Schwenk, Y. Bengio Learning phrase representations using RNN encoder-decoder for statistical machine translation Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, EMNLP (2014), pp. 1724-1734 CrossRefGoogle Scholar Chu et al., 2023 H. Chu, J. Wu, W. Wu, J. Wei A dynamic classification-based long short-term memory network model for daily streamflow forecasting in different climate regions Ecol. Indicat., 148 (2023), Article 110092, 10.1016/j.ecolind.2023.110092 ISSN 1470-160X View PDFView articleView in ScopusGoogle Scholar Consumer Council for Water, 2017 Consumer Council for Water Water leakage from UK pipes rises to over three billion litres a day Available at: https://eandt.theiet.org/content/articles/2017/12/water-leakage-from-uk-pipes-rises-to-over-three-billion-litres-a-day/ (2017) 02/06/20 Google Scholar Cortes and Vapnik, 1995 C. Cortes, V. Vapnik Support-vector networks Mach. Learn., 20 (1995), pp. 273-297 View in ScopusGoogle Scholar Cover and Hart, 1967 T.M. Cover, P.E. Hart Nearest neighbor pattern classification IEEE Trans. Inf. Theor., 13 (1967), pp. 21-27 Google Scholar Crépon and Lino, 1999 O. Crépon, M. Lino An Analytical Approach to Monitoring International Water Power (1999), pp. 52-54 View in ScopusGoogle Scholar Cui and Zhu, 2009 H.D. Cui, Y.M. Zhu Back analysis of seepage field of Ertan high arch dam foundation Rock Soil Mech., 30 (10) (2009), pp. 3194-3199 View in ScopusGoogle Scholar Dai and Xu, 2013 J. Dai, Q. Xu Attribute selection based on information gain ratio in fuzzy rough set theory with application to tumor classification Appl. Soft Comput., 13 (1) (2013), pp. 211-221, 10.1016/j.asoc.2012.07.029 View PDFView articleView in ScopusGoogle Scholar Damavandi et al., 2019 H.G. Damavandi, R. Shah, D. Stampoulis, Y. Wei, D. Boscovic, J. Sabo Accurate prediction of streamflow using long short-term memory network: a case study in the Brazos River Basin in Texas International Journal of Environmental Science and Development, 10 (10) (2019), pp. 294-300 CrossRefView in ScopusGoogle Scholar De Granrut et al., 2019 M. De Granrut, A. Simon, D. Dias Artificial Neural Networks for the Interpretation of Piezometric Levels at the Rock-Concrete Interface of Arch Dams, vol. 178, Engineering Structures (2019), pp. 616-634, 10.1016/j.engstruct.2018.10.033 View PDFView articleView in ScopusGoogle Scholar Dehghani et al., 2023 A. Dehghani, H.M.Z.H. Moazam, F. Mortazavizadeh, V. Ranjbar, M. Mirzaei, S. Mortezavi, J.L. Ng, A. Dehghani Comparative evaluation of LSTM, CNN, and ConvLSTM for hourly short-term streamflow forecasting using deep learning approaches Ecol. Inf., 75 (2023), Article 102119, 10.1016/j.ecoinf.2023.102119 ISSN 1574-9541 View PDFView articleView in ScopusGoogle Scholar Dharman et al., 2012 S. Dharman, V. Chandramouli, S. Lingireddy Predicting total organic carbon removal efficiency and coagulation dosage using artificial neural networks Environ. Eng. Sci., 29 (8) (2012), 10.1089/ees.2011.0170 Google Scholar Ding and Han, 2017 C.L. Ding, H. Han Study on network load forecasting based on Elman neural network to improve ARIMA model Microcomput. Appl., 33 (11) (2017), pp. 65-68 View in ScopusGoogle Scholar Domingos and Pazzani, 1997 P. Domingos, M. Pazzani On the optimality of the simple Bayesian classifer under zero-one loss Mach. Learn., 29 (1997), pp. 103-137 View in ScopusGoogle Scholar Dong et al., 2022 S. Dong, T. Yu, H. Farahmand, A. Mostafavi Predictive multi-watershed flood monitoring using deep learning on integrated physical and social sensors data Environ. Plan. B Urban Anal. City Sci., 49 (7) (2022), pp. 1838-1856, 10.1177/23998083211069140 View in ScopusGoogle Scholar Drucker et al., 1997 H. Drucker, C.J.C. Burges, L. Kaufman, A. Smola, V. Vapnik Support vector regression machines M.C. Mozer, M.I. Jordan, T. Petsche (Eds.), Advances in Neural Information Processing Systems 9, MIT Press, Cambridge, MA (1997), pp. 155-161 View in ScopusGoogle Scholar Elbeltagi et al., 2020 A. Elbeltagi, J. Deng, K. Wang, A. Malik, S. Maroufpoor Modeling long-term dynamics of crop evapotranspiration using deep learning in a semi-arid environment Agric. Water Manag., 241 (2020), Article 106334, 10.1016/j.agwat.2020.106334 View PDFView articleView in ScopusGoogle Scholar Environment Agency, 2018 Environment Agency UKCP18 factsheet: precipitation Available at: https://www.metoffice.gov.uk/binaries/content/assets/mohippo/pdf/ukcp18/ukcp18-factsheet-precipitation.pdf (2018), Accessed 15th Feb 2020 Google Scholar Fan et al., 2022 X. Fan, P. Cao, P. Shi, X. Chen, X. Zhou, Q. Gong An underwater dam crack image segmentation method based on multi-level adversarial transfer learning Neurocomputing, 505 (2022), pp. 19-29, 10.1016/j.neucom.2022.07.036 ISSN 0925-2312 View PDFView articleView in ScopusGoogle Scholar Fang et al., 2019 F. Fang, R. Hu, C.C. Pain, I.M. Navon Rapid spatio-temporal flood prediction and uncertainty quantification using a deep learning method J. Hydrol., 575 (2019), pp. 911-920 CrossRefGoogle Scholar Fenech et al., 2019 A. Fenech, X. Wang, G. Kinsland, D. Poudel Urban flood prediction under heavy precipitation J. Hydrol. (2019), p. 577 Google Scholar Feng et al., 2018 W. Feng, H. Sui, W. Huang, C. Xu, K. An Water body extraction from very high-resolution remote sensing imagery using deep U-net and a superpixel-based conditional random field model Geosci. Rem. Sens. Lett. IEEE, 16 (4) (2018), pp. 618-622 Google Scholar Ferreira and da Cunha, 2020a L.B. Ferreira, F.F. da Cunha New approach to estimate daily reference evapotranspiration based on hourly temperature and relative humidity using machine learning and deep learning Agric. Water Manag., 234 (2020), Article 106113, 10.1016/j.agwat.2020.106113 View PDFView articleView in ScopusGoogle Scholar Ferreira and da Cunha, 2020b L.B. Ferreira, F.F. da Cunha Multi-step ahead forecasting of daily reference evapotranspiration using deep learning Agric. Water Manag., 178 (2020), Article 105728, 10.1016/j.compag.2020.105728 View PDFView articleView in ScopusGoogle Scholar Food and Agriculture Organization of the United Nations, 2017 Food and Agriculture Organization of the United Nations Water for sustainable food and agriculture: a report produced for the G20 presidency of Germany Available at: http://www.fao.org/3/a-i7959e.pdf (2017) 03/08/20 Google Scholar Frank et al., 2000 E. Frank, L. Trigg, G. Holmes, I.H. Witten Naive bayes for regression Mach. Learn., 41 (2000), pp. 5-25 View in ScopusGoogle Scholar Freund and Schapire, 1995 Y. Freund, R.E. Schapire A Decision-Theoretic Generalization of On-Line Learning and Application to Boosting. Lecture Notes in Computer Science Springer berlin Heidelberg (1995), pp. 23-37 CrossRefView in ScopusGoogle Scholar Frey and Makhzani, 2013 B. Frey, A. Makhzani K-Sparse Autoencoders (2013) arXiv:1312.5663 Google Scholar Friedman, 1989 J.H. Friedman Regularized discriminant analysis J. Am. Stat. Assoc., 84 (1989), pp. 165-175 View in ScopusGoogle Scholar Friedman, 2001 J.H. Friedman Greedy function approximation: a gradient boosting machine Ann. Stat., 29 (2001), pp. 1189-1232 View in ScopusGoogle Scholar Garðarsson et al., 2022 G.Ö. Garðarsson, F. Boem, L. Toni Graph-based learning for leak detection and localisation in water distribution networks IFAC-PapersOnLine, 55 (6) (2022), pp. 661-666, 10.1016/j.ifacol.2022.07.203 ISSN 2405-8963 Google Scholar Ghaedi and Vafaei, 2017 A.M. Ghaedi, A. Vafaei Applications of artificial neural networks for adsorption removal of dyes from aqueous solution: a review Adv. Colloid Interface Sci., 245 (2017), pp. 20-39, 10.1016/j.cis.2017.04.015 View PDFView articleView in ScopusGoogle Scholar Gharehbaghi et al., 2022 A. Gharehbaghi, R. Ghasemlounia, F. Ahmadi, M. Albaji Groundwater level prediction with meteorologically sensitive Gated Recurrent Unit (GRU) neural networks J. Hydrol., 612 (Part C) (2022), Article 128262, 10.1016/j.jhydrol.2022.128262 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Ghojogh et al., 2021 B. Ghojogh, A. Ghodsi, F. Karray, M. Crowley Uniform Manifold Approximation and Projection (UMAP) and its Variants: Tutorial and Survey. ArXi Abs/2109 (2021), Article 02508 Google Scholar Ghosh et al., 2022 A. Ghosh, P.P. Adhikary, B. Bera, G.S. Bhunia Assessment of groundwater potential zone using MCDA and AHP techniques: case study from a tropical river basin of India Appl. Water Sci., 12 (2022), pp. 1-22, 10.1007/s13201-021-01548-5 Google Scholar Giles et al., 2021 A.B. Giles, J.E. Davies, K. Ren, B. Kelaher A deep learning algorithm to detect and classify sun glint from high-resolution aerial imagery over shallow marine environments ISPRS J. Photogrammetry Remote Sens., 181 (2021), pp. 20-26, 10.1016/j.isprsjprs.2021.09.004 ISSN 0924-2716 View PDFView articleView in ScopusGoogle Scholar Gires et al., 2015 A. Gires, A. Giangola-Murzyn, J.B. Abbes, I. Tchiguirinskaia, D. Schertzer, S. Lovejoy Impacts of small-scale rainfall variability in urban areas: a case study with 1D and 1D/2D hydrological models in a multifractal framework Urban Water J., 12 (8) (2015), pp. 607-617 CrossRefView in ScopusGoogle Scholar Gong et al., 1996 N. Gong, T. Denoeux, J.L. Bertrand-Krajewski Neural networks for solid transport modelling in sewer systems during storm events Water Sci. Technol., 33 (9) (1996), pp. 85-92, 10.2166/wst.1996.0183 View PDFView articleView in ScopusGoogle Scholar Goodfellow et al., 2014 I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair, A. Courville, Y. Bengio Generative adversarial nets Proceedings of the International Conference on Neural Information Processing Systems (NIPS 2014) (2014), pp. 2672-2680 Google Scholar Gorgij et al., 2023 A.D. Gorgij, A.A. Taghipour Gh Askari, M. Jami, M. Mirfardi Spatiotemporal forecasting of the groundwater quality for irrigation purposes, using deep learning method: long short-term memory (LSTM) Agric. Water Manag., 277 (2023), Article 108088, 10.1016/j.agwat.2022.108088 ISSN 0378-3774 Google Scholar Granata et al., 2022 F. Granata, F. Di Nunno, G. de Marinis Stacked machine learning algorithms and bidirectional long short-term memory networks for multi-step ahead streamflow forecasting: a comparative study J. Hydrol., 613 (Part A) (2022), Article 128431, 10.1016/j.jhydrol.2022.128431 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Guo et al., 2015 H. Guo, K. Jeong, J. Lim, J. Jo, Y.M. Kim, J. Park, J.H. Kim, K.H. Cho Prediction of effluent concentration in a wastewater treatment plant using machine learning models J. Environ. Sci., 32 (2015), pp. 90-101, 10.1016/j.jes.2015.01.007 View PDFView articleView in ScopusGoogle Scholar Hadiyan et al., 2020 P.P. Hadiyan, R. Moeini, E. Ehsanzadeh Application of static and dynamic artificial neural networks for forecasting inflow discharges, case study: Sefidroud Dam reservoir Sustain. Comput.: Informatic. Syst., 27 (2020), 10.1016/j.suscom.2020.100401 Google Scholar Hammid et al., 2018 A.T. Hammid, M.H. Bin Sulaiman, A.N. Abdalla Prediction of small hydropower plant power production in Himreen Lake dam (HLD) using artificial neural network Alex. Eng. J., 57 (1) (2018), pp. 211-221, 10.1016/j.aej.2016.12.011 View PDFView articleView in ScopusGoogle Scholar Harappa, 2020 Harappa Lothal: sanitary drainage at the acropolis Available at: https://www.harappa.com/lothal/ (2020), Accessed 1st Sep 2020 Google Scholar Hartigan and Wong, 1979 J.A. Hartigan, M.A. Wong Algorithm AS 136: a k-means clustering algorithm J. Roy. Stat. Soc. C, 28 (1979), pp. 100-108 CrossRefView in ScopusGoogle Scholar Hastie et al., 2009 T. Hastie, R. Tibshirani, J.H. Friedman Chapter 10. Boosting and additive tress The Elements of Statistical Learning (second ed.), Springer, New York (2009), pp. 337-384 CrossRefGoogle Scholar He et al., 2022 H. He, L. Lui, X. Zhu Optimization of extreme learning machine model with biological heuristic algorithms to estimate daily reference evapotranspiration in Hetao Irrigation District of China Eng. Appl. Comput. Fluid Mech., 16 (1) (2022), pp. 1939-1956, 10.1080/19942060.2022.2125442 View in ScopusGoogle Scholar Herrera et al., 2010 M. Herrera, L. Torgo, J. Izquierdo, R. Pérez-García Predictive models for forecasting hourly urban water demand J. Hydrol., 387 (1–2) (2010), pp. 141-150, 10.1016/j.jhydrol.2010.04.005 View PDFView articleView in ScopusGoogle Scholar Hikouei et al., 2023 I.S. Hikouei, K.N. Eshleman, B.H. Saharjo, L.L.B. Graham, G. Applegate, M.A. Cochrane Using machine learning algorithms to predict groundwater levels in Indonesian tropical peatlands Sci. Total Environ., 857 (3) (2023), Article 159701, 10.1016/j.scitotenv.2022.159701 ISSN 0048-9697 View PDFView articleView in ScopusGoogle Scholar Hinton, 2009 G. Hinton Deep belief networks Scholarpedia, 4 (2009), p. 5947 CrossRefGoogle Scholar History, 2020 Water History Water-related infrastructure in medieval London Available at: http://www.waterhistory.org/histories/london/ (2020) 14/09/20 Google Scholar Hochreiter and Schmidhuber, 1997 S. Hochreiter, J. Schmidhuber Long short-term memory Neural Comput., 9 (1997), pp. 1735-1780 CrossRefView in ScopusGoogle Scholar Hoerl and Kennard, 1970 A.E. Hoerl, W.R. Kennard Ridge Regression: biased estimation for nonorthogonal problems Technometrics, 12 (1970), pp. 55-67 View in ScopusGoogle Scholar Hopfield, 1982 J.J. Hopfield Neural networks and physical systems with emergent collective computational abilities Proc. Natl. Acad. Sci. USA, 79 (1982), pp. 2554-2558 CrossRefView in ScopusGoogle Scholar Hosseiny, 2021 H. Hosseiny A deep learning model for predicting river flood depth and extent Environ. Model. Software, 145 (2021), Article 105186, 10.1016/j.envsoft.2021.105186 ISSN 1364-8152 View PDFView articleView in ScopusGoogle Scholar Hsu et al., 2013 N.S. Hsu, C.L. Huang, C.C. Wei Intelligent real-time operation of a pumping station for an urban drainage system J. Hydrol., 489 (2013), pp. 85-97, 10.1016/j.jhydrol.2013.02.047 View PDFView articleView in ScopusGoogle Scholar Hu et al., 2021 X. Hu, Y. Han, B. Yu, Z. Geng, J. Fan Novel leakage detection and water loss management of urban water supply network using multiscale neural networks J. Clean. Prod., 278 (2021), Article 123611, 10.1016/j.jclepro.2020.123611 View PDFView articleView in ScopusGoogle Scholar Huang et al., 2003 W. Huang, C. Murray, N. Kraus, J. Rosati Development of a regional neural network for coastal water level predictions Ocean Eng., 30 (17) (2003), pp. 2275-2295, 10.1016/S0029-8018(03)00083-0 View PDFView articleView in ScopusGoogle Scholar Hunt et al., 2022 K.M.R. Hunt, G.R. Matthews, F. Pappenberger, C. Prudhomme Using a long short-term memory (LSTM) neural network to boost river streamflow forecasts over the western United States, Hydrol Earth Syst. Sci., 26 (2022), pp. 5449-5472, 10.5194/hess-26-5449-2022 View in ScopusGoogle Scholar Ibrahim et al., 2023 A. Ibrahim, A. Ismail, H. Juahir, A.B. Iliyasu, B.T. Wailare, M. Mukhtar, H. Aminu Water quality modelling using principal component analysis and artificial neural network Mar. Pollut. Bull., 187 (2023), Article 114493, 10.1016/j.marpolbul.2022.114493 ISSN 0025-326X View PDFView articleView in ScopusGoogle Scholar Ilhan, 2023 A. Ilhan Forecasting of volumetric flow rate of Ergene river using machine learning Eng. Appl. Artif. Intell., 121 (2023), Article 105983, 10.1016/j.engappai.2023.105983 ISSN 0952-1976 View PDFView articleView in ScopusGoogle Scholar International Hydropower Association, 2020 International Hydropower Association 2020 hydropower Status report Available at: https://www.hydropower.org/statusreport (2020) 01/09/20 Google Scholar Interreg Central Europe, 2020 Interreg Central Europe Water loss Available at: https://www.interreg-central.eu/Content.Node/Digital-Learning-Resources/03-Water-Loss.pdf (2020) 23/07/20 Google Scholar Janner et al., 2021 M. Janner, Q. Li, S. Levine ‘Offline reinforcement learning as one big sequence modeling problem’, advances in neural information processing systems Curran Associates, Inc., 34 (2021), pp. 1273-1286 View in ScopusGoogle Scholar Jolliffe, 2002 I.T. Jolliffe Principal Component Analysis (second ed.), Springer (2002) Google Scholar Jouanneau et al., 2014 S. Jouanneau, L. Recoules, M.J. Durand, A. Boukabache, V. Picot, Y. Primault, A. Lakel, M. Sengelin, B. Barillon, G. Thouand Methods for assessing biochemical oxygen demand (BOD): a review Water Res., 49 (2014), pp. 62-82, 10.1016/j.watres.2013.10.066 View PDFView articleView in ScopusGoogle Scholar Kaelbling et al., 1996 L.P. Kaelbling, M.L. Littman, A.W. Moore Reinforcement learning: a survey J. Artif. Intell. Res., 4 (1996), pp. 237-285 CrossRefView in ScopusGoogle Scholar Karimi et al., 2020 B. Karimi, P. Mohammadi, H. Sanikhani, S.Q. Salih, Z.M. Yaseen Modeling wetted areas of moisture bulb for drip irrigation systems: an enhanced empirical model and artificial neural network Comput. Electron. Agric., 178 (2020), Article 105767, 10.1016/j.compag.2020.105767 View PDFView articleView in ScopusGoogle Scholar Kaufman and Rousseeuw, 1990 L. Kaufman, P.J. Rousseeuw Partitioning Around Medoids (Program PAM). Wiley Series in Probability and Statistics John Wiley & Sons, Inc., Hoboken, NJ, USA (1990), pp. 68-125 CrossRefGoogle Scholar Kavousian et al., 2013 A. Kavousian, R. Rajagopal, M. Fischer Determinants of residential electricity consumption: using smart meter data to examine the effect of climate, building characteristics, appliance stock, and occupants' behaviour Energy, 55 (2013), pp. 184-194, 10.1016/j.energy.2013.03.086 View PDFView articleView in ScopusGoogle Scholar Kayhomayoon et al., 2022 Z. Kayhomayoon, S. Ghordoyee-Milan, A. Jaafari, N. Arya-Azar, A.M. Melesse, H.K. Moghaddam How does a combination of numerical modeling, clustering, artificial intelligence, and evolutionary algorithms perform to predict regional groundwater levels? Comput. Electron. Agric., 203 (2022), Article 107482, 10.1016/j.compag.2022.107482 ISSN 0168-1699 View PDFView articleView in ScopusGoogle Scholar Kim and Parnichkun, 2017 C.M. Kim, M. Parnichkun Prediction of settled water turbidity and optimal coagulant dosage in drinking water treatment plant using a hybrid model of k-means clustering and adaptive neuro-fuzzy inference system Appl. Water Sci., 7 (7) (2017), pp. 3885-3902 CrossRefView in ScopusGoogle Scholar Kochhar et al., 2021 A. Kochhar, H. Singh, S. Sahoo, P.K. Litoria, B. Pateriya Prediction and forecast of pre-monsoon and post-monsoon groundwater level: using deep learning and statistical modelling Model. Earth Syst. Environ., 8 (2021), pp. 2317-2329, 10.1007/s40808-021-01235-z Google Scholar Kramer, 1991 M.A. Kramer Nonlinear principal component analysis using autoassociative neural networks AIChE J., 37 (1991), pp. 233-243 View in ScopusGoogle Scholar Le Cun et al., 1990 Y. Le Cun, B. Boser, J.S. Denker, D. Henderson, R.E. Howard, W. Hubbard, L.D. Jackel Handwritten digit recognition with a back-propagation network Proc. Advances in Neural Information Processing Systems (1990), pp. 396-404 View in ScopusGoogle Scholar Li et al., 2018 L. Li, Z. Yuan, Y. Gao Maximisation of energy absorption for a wave energy converter using the deep machine learning Energy, 165 (A) (2018), pp. 340-349, 10.1016/j.energy.2018.09.093 View PDFView articleGoogle Scholar Kratzert et al., 2018 F. Kratzert, D. Klotz, C. Brenner, K. Schulz, M. Herrnegger Rainfall–runoff modelling using long short-term memory (LSTM) networks Hydrology and Earth System Sciences, 22 (11) (2018), pp. 6005-6022 CrossRefView in ScopusGoogle Scholar Le Cun et al., 2015 Y. Le Cun, Y. Bengio, G. Hinton Deep learning Nature, 521 (2015), pp. 436-444 CrossRefView in ScopusGoogle Scholar Le et al., 2021 X.-H. Le, D.-H. Nguyen, S. Jung, M. Yeon, G. Lee Comparison of deep learning techniques for river streamflow forecasting IEEE Access, 9 (2021), pp. 71805-71820, 10.1109/ACCESS.2021.3077703 View in ScopusGoogle Scholar Lee and Seung, 2001 D.D. Lee, H.S. Seung Algorithms for non-negative matrix factorization Advances in Neural Information Processing Systems 13: Proceedings of the 2000 Conference, MIT Press (2001), pp. 556-562 View in ScopusGoogle Scholar Léger and Leclerc, 2007 P. Léger, M. Leclerc Hydrostatic, temperature, time-displacement model for concrete dams J. Eng. Mech., 133 (3) (2007), pp. 267-277 View in ScopusGoogle Scholar Lewis, 2016 N.D.C. Lewis Deep Learning Made Easy with R: a Gentle Introduction for Data Science CreateSpace Independent Publishing Platform (2016) Google Scholar Li et al., 2022 X. Li, W. Xu, M. Ren, Y. Jiang, G. Fu Hybrid CNN-LSTM models for river flow prediction Water Supply, 22 (5) (2022), pp. 4902-4919, 10.2166/ws.2022.170 Google Scholar Li et al., 2018 Y.L. Li, Q. Gao, D.H. Li A gray RBF model improved by genetic algorithm for electrical power forecasting Chinese Control and Decision Conference, CCDC (2018), pp. 5065-5070 CrossRefView in ScopusGoogle Scholar Li et al., 2019 S. Li, H. Kazemi, T.D. Rockaway Performance assessment of stormwater GI practices using artificial neural networks Sci. Total Environ., 651 (2) (2019), pp. 2811-2819, 10.1016/j.scitotenv.2018.10.155 View PDFView articleView in ScopusGoogle Scholar Liu et al., 2022 Q. Liu, D. Gui, L. Zhang, J. Niu, H. Dai, G. Wei, B.X. Hu Simulation of regional groundwater levels in arid regions using interpretable machine learning models Sci. Total Environ., 831 (2022) (2022), Article 154902, 10.1016/j.scitotenv.2022.154902 ISSN 0048-9697 View PDFView articleView in ScopusGoogle Scholar Loke et al., 1997 E. Loke, E.A. Warnaars, P. Jacobsen, F. Nelen, M. do Céu Almeida Artificial neural networks as a tool in urban storm drainage Water Sci. Technol., 36 (8–9) (1997), pp. 101-109, 10.2166/wst.1997.0651 View PDFView articleView in ScopusGoogle Scholar Löwe et al., 2021 R. Löwe, J. Böhm, D.G. Jensen, J. Leandro, S.H. Rasmussen U-FLOOD – topographic deep learning for predicting urban pluvial flood water depth J. Hydrol., 603 (Part A) (2021), Article 126898, 10.1016/j.jhydrol.2021.126898 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Lucas et al., 2020 P.O. Lucas, M.A. Alves, P.C.L. Silva, F.G. Guimarães Reference evapotranspiration time series forecasting with ensemble of convolutional neural networks Comput. Electron. Agric., 177 (2020), Article 105700, 10.1016/j.compag.2020.105700 Google Scholar Ma et al., 2020 J. Ma, Y. Ding, J.C.P. Cheng, F. Jiang, Z. Xu Soft Detection of 5-day BOD with Sparse Matrix in City Harbor Water Using Deep Learning Techniques, vol. 170, Water Research (2020), Article 115350, 10.1016/j.watres.2019.115350 View PDFView articleView in ScopusGoogle Scholar Ma et al., 2023 X. Ma, H. Hu, Y. Ren A hybrid deep learning model based on feature capture of water level influencing factors and prediction error correction for water level prediction of cascade hydropower stations under multiple time scales J. Hydrol., 617 (Part C) (2023), Article 129044, 10.1016/j.jhydrol.2022.129044 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar MacQueen, 1967 J.B. MacQueen Some methods for classification and analysis of multivariate observations Proceedings of 5th Berkeley Symposium on Mathematical Statistics and Probability, vol. 1, University of California Press (1967), pp. 281-297 Google Scholar Mahammad et al., 2023 S. Mahammad, A. Islam, P.K. Shit, A.R.M.T. Islam, E. Alam Groundwater level dynamics in a subtropical fan delta region and its future prediction using machine learning tools: sustainable groundwater restoration Journal of Hydrology: Regional Studies, 47 (2023), p. 101385 View PDFView articleView in ScopusGoogle Scholar Maroufpoor et al., 2019a S. Maroufpoor, E. Maroufpoor, O. Bozorg-Haddad, J. Shiri Soil moisture simulation using hybrid artificial intelligent model: hybridisation of adaptive neuro fuzzy inference system with grey wolf optimiser algorithm J. Hydrol. (2019), pp. 544-556, 10.1016/j.jhydrol.2019.05.045 View PDFView articleView in ScopusGoogle Scholar Maroufpoor et al., 2019b S. Maroufpoor, J. Shiri, E. Maroufpoor Modeling the sprinkler water distribution uniformity by data-driven methods based on effective variables Agric. Water Manag., 215 (2019), pp. 62-73, 10.1016/j.agwat.2019.01.008 Google Scholar Mattar et al., 2015 M.A. Mattar, A.A. Alazba, T.K.Z. El-Abedin Forecasting furrow irrigation infiltration using artificial neural networks Agric. Water Manag., 148 (2015), pp. 63-71, 10.1016/j.agwat.2014.09.015 View PDFView articleView in ScopusGoogle Scholar Maugis et al., 2009 C. Maugis, G. Celeux, M.-L. Martin-Magniette Variable selection for clustering with Gaussian mixture models Biometrics, 65 (2009), pp. 701-709 CrossRefView in ScopusGoogle Scholar Mehedi et al., 2022 M.A.A. Mehedi, M. Khosravi, M.M.S. Yazdan, H. Shabanian Exploring temporal dynamics of river discharge using univariate long short-term memory (LSTM) recurrent neural network at east branch of Delaware river Hydrology, 9 (2022), p. 202, 10.3390/hydrology9110202 View in ScopusGoogle Scholar Mnih et al., 2015 V. Mnih, et al. Human-level control through deep reinforcement learning Nature, 518 (2015), pp. 529-533 CrossRefView in ScopusGoogle Scholar Mohapatra et al., 2021 J.B. Mohapatra, P. Jha, M.K. Jha, S. Biswal Efficacy of machine learning techniques in predicting groundwater fluctuations in agro-ecological zones of India Sci. Total Environ., 785 (2021), Article 147319, 10.1016/j.scitotenv.2021.147319 ISSN 0048-9697 View PDFView articleView in ScopusGoogle Scholar Mouatadid and Adamowski, 2017 S. Mouatadid, J. Adamowski Using extreme learning machines for short-term urban water demand forecasting Urban Water J., 14 (6) (2017), pp. 630-638, 10.1080/1573062X.2016.1236133 View in ScopusGoogle Scholar Mouatadid et al., 2019 S. Mouatadid, J.F. Adamowski, M.K. Tiwari, J.M. Quilty Coupling the maximum overlap discrete wavelet transform and long short-term memory networks for irrigation flow forecasting Agric. Water Manag., 219 (2019), pp. 72-85, 10.1016/j.agwat.2019.03.045 View PDFView articleView in ScopusGoogle Scholar Mullapudi et al., 2020 A. Mullapudi, M.J. Lewis, C.L. Gruden, B. Kerkez Deep reinforcement learning for the real time control of stormwater systems Adv. Water Resour., 140 (2020), Article 103600, 10.1016/j.advwatres.2020.103600 View PDFView articleView in ScopusGoogle Scholar Najafzadeh and Zeinolabedini, 2019 M. Najafzadeh, M. Zeinolabedini Prognostication of waste water treatment plant performance using efficient soft computing models: an environmental evaluation Measurement, 138 (2019), pp. 690-701, 10.1016/j.measurement.2019.02.014 View PDFView articleView in ScopusGoogle Scholar Nandi et al., 2017 I. Nandi, P.K. Srivastava, K. Shah Floodplain mapping through support vector machine and optical/infrared images from Landsat 8 OLI/TIRS sensors: case study from Varanasi Water Resour. Manag., 31 (4) (2017), pp. 1157-1171 CrossRefView in ScopusGoogle Scholar Nasseri et al., 2011 M. Nasseri, A. Moeini, M. Tabesh Forecasting monthly urban water demand using extended Kalman filter and genetic programming Expert Syst. Appl., 38 (6) (2011), pp. 7387-7395, 10.1016/j.eswa.2010.12.087 View PDFView articleView in ScopusGoogle Scholar National Biodiversity Network, 2019 National Biodiversity Network State of nature Available at: https://nbn.org.uk/wp-content/uploads/2019/09/State-of-Nature-2019-UK-full-report.pdf (2019), Accessed 9th Apr 2020 Google Scholar National Thailand, 2019 National Thailand Dams drying up, drought may drag into 2020 Available at: https://www.nationthailand.com/news/30373918 (2019) 23/06/20 Google Scholar Newhart et al., 2019 K.B. Newhart, R.W. Holloway, A.S. Hering, T.Y. Cath Data-driven Performance Analyses of Wastewater Treatment Plants: A Review, vol. 157, Water Research (2019), pp. 498-513, 10.1016/j.watres.2019.03.030 View PDFView articleView in ScopusGoogle Scholar Niu et al., 2020 G. Niu, X. Yi, C. Chen, X. Li, D. Han, B. Yan, M. Huang, G. Ying A novel effluent quality predicting model based on genetic-deep belief network algorithm for cleaner production in a full-scale paper-making wastewater treatment J. Clean. Prod., 265 (2020), Article 121787, 10.1016/j.jclepro.2020.121787 View PDFView articleView in ScopusGoogle Scholar Our World in Data, 2020 Our World in Data Fossil fuels Available at: https://ourworldindata.org/fossil-fuels#licence (2020) 01/08/20 Google Scholar Pathak et al., 2021 D. Pathak, R. Maharjan, N. Maharjan, S.R. Shrestha, P. Timilsina Evaluation of parameter sensitivity for groundwater potential mapping in the mountainous region of Nepal Himalaya Groundw. Sustain. Dev., 13 (2021), pp. 2-14, 10.1016/j.gsd.2021.100562 Google Scholar Patra et al., 2023 S.R. Patra, H.-J. Chu, Tatas Regional groundwater sequential forecasting using global and local LSTM models J. Hydrol.: Reg. Stud., 47 (2023), Article 101442, 10.1016/j.ejrh.2023.101442 ISSN 2214-5818 View PDFView articleView in ScopusGoogle Scholar Peduzzi, 2017 P. Peduzzi Prioritising protection? Nat. Climate Change, 7 (2017), pp. 625-626 CrossRefView in ScopusGoogle Scholar Pektaşa and Cigizoglu, 2013 A.O. Pektaşa, H.K. Cigizoglu ANN hybrid model versus ARIMA and ARIMAX models of runoff coefficient J. Hydrol., 500 (2013), pp. 21-36, 10.1016/j.jhydrol.2013.07.020 Google Scholar Penot et al., 2005 I. Penot, B. Daumas, J.P. Fabre Monitoring behaviour Water Power Dam Construct., 57 (24) (2005), p. 27 Google Scholar Perea et al., 2019 R.G. Perea, E.C. Poyato, P. Montesinos, J.A.R. Díaz Optimisation of water demand forecasting by artificial intelligence with short data sets Biosyst. Eng., 177 (2019), pp. 56-66, 10.1016/j.biosystemseng.2018.03.011 Google Scholar Pesantez et al., 2020 J.E. Pesantez, E.Z. Berglund, N. Kaza Smart Meters Data for Modeling and Forecasting Water Demand at the User-Level, vol. 125, Environmental Modelling & Software (2020), Article 104633, 10.1016/j.envsoft.2020.104633 View PDFView articleView in ScopusGoogle Scholar Pham et al., 2022 Q.B. Pham, M.K. Kumar, F. Di Nunno, A. Elbeltagi, F. Granata, A.R.M. Towfiqul Islam, S. Talukdar, X.C. Nguyen, A.N. Ahmed, D.T. Anh Groundwater level prediction using machine learning algorithms in a drought-prone area Neural Comput. Appl., 34 (2022), pp. 10751-10773 CrossRefView in ScopusGoogle Scholar Poisson et al., 2017 A. Poisson, A. Fernandez, D.G. Gomez, R. Barillé, B. Chorro Assessment and prediction of evapotranspiration based on scintillometry and meteorological datasets IntechOpen (2017), 10.5772/intechopen.68538 Google Scholar Polosukhin et al., 2017 I. Polosukhin, L. Kaiser, A.N. Gomez, L. Jones, J. Uszkoreit, N. Parmar, N. Shazeer, A. Vaswani Advances in Neural Information Processing Systems, vol. 30, Curran Associates, Inc. (2017) Google Scholar Pudjihartono et al., 2022 N. Pudjihartono, T. Fadason, A.W. Kempa-Liehr, J.M. O'Sullivan A review of feature selection methods for machine learning-based disease risk prediction Front. Bioinform., 2 (2022), Article 927312 View in ScopusGoogle Scholar Quinlan, 1986 J.R. Quinlan Induction of Decision Trees, vol. 1, Machine Learning (1986), pp. 81-106, 10.1007/BF00116251 View in ScopusGoogle Scholar Radford et al., 2015 A. Radford, L. Metz, S. Chintala Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks (2015) arXiv preprint arXiv:1511.06434 Google Scholar Ráduly et al., 2007 B. Ráduly, K.V. Gernaey, A.G. Capodaglio, P.S. Mikkelsen, M. Henze Artificial neural networks for rapid WWTP performance evaluation: methodology and case study Environ. Model. Software, 22 (8) (2007), pp. 1208-1216, 10.1016/j.envsoft.2006.07.003 View PDFView articleView in ScopusGoogle Scholar Rahaman et al., 2019 M.M. Rahaman, B. Thakur, A. Kalra, S. Ahmad Modeling of GRACE-derived groundwater information in the Colorado River Basin Hydrol., 6 (1) (2019), p. 19, 10.3390/hydrology6010019 Google Scholar Rahman et al., 2020 A.T.M.S. Rahman, T. Hosono, J.M. Quilty, J. Das, A. Basak Multiscale groundwater level forecasting: coupling new machine learning approaches with wavelet transforms Adv. Water Resour., 141 (2020), Article 103595, 10.1016/j.advwatres.2020.103595 ISSN 0309-1708 View PDFView articleView in ScopusGoogle Scholar Rajeevan and Mishra, 2020 U. Rajeevan, B.K. Mishra Sustainable management of the groundwater resource of Jaffna, Sri Lanka with the participation of households: insights from a study on household water consumption and management Groundw. Sustain. Dev., 10 (2020), 10.1016/j.gsd.2019.100280 Google Scholar Ramayanti et al., 2022 S. Ramayanti, A.S. Nur, M. Syifa, M. Panahi, A.R. Achmad, S. Park, C.W. Lee Performance comparison of two deep learning models for flood susceptibility map in Beira area, Mozambique Egyptian J. Rem. Sens. Space Sci., 25 (Issue 4) (2022), pp. 1025-1036, 10.1016/j.ejrs.2022.11.003 ISSN 1110-9823 View PDFView articleView in ScopusGoogle Scholar Reikard, 2009 G. Reikard Forecasting ocean wave energy: tests of time-series models Ocean Eng., 36 (5) (2009), pp. 348-356, 10.1016/j.oceaneng.2009.01.003 View PDFView articleView in ScopusGoogle Scholar Ren et al., 2020 T. Ren, X. Liu, J. Niu, X. Lei, Z. Zhang Real-time water level prediction of cascaded channels based on multilayer perception and recurrent neural network J. Hydrol., 585 (2020), Article 124783, 10.1016/j.jhydrol.2020.124783 View PDFView articleView in ScopusGoogle Scholar Ren et al., 2021 Q. Ren, M. Li, H. Li, Y. Shen A novel deep learning prediction model for concrete dam displacements using interpretable mixed attention mechanism Adv. Eng. Inf., 50 (2021), Article 101407, 10.1016/j.aei.2021.101407 ISSN 1474-0346 View PDFView articleView in ScopusGoogle Scholar Rentschler and Salhab, 2020 J. Rentschler, M. Salhab People in harm's way: flood exposure and poverty in 189 countries Policy Research Working Paper. No. 9447, The World Bank, Washington DC (2020) Google Scholar Ridolfi et al., 2014 E. Ridolfi, F. Servili, R. Magini, F. Napolitano, F. Russo, L. Alfonso Artificial neural networks and entropy-based methods to determine pressure distribution in water distribution systems Procedia Eng., 89 (2014), pp. 648-655, 10.1016/j.proeng.2014.11.490 View PDFView articleView in ScopusGoogle Scholar Rjelly et al., 2018 Y.A. Rjelly, O. Abbas, M. Sadek, I. Shahrour, F.H. Chehade Model predictive control for optimising the operation of urban drainage systems J. Hydrol., 566 (2018), pp. 558-565, 10.1016/j.jhydrol.2018.09.044 Google Scholar Rohde et al., 2021 M.M. Rohde, T. Biswas, I.W. Housman, L.S. Campbell, K.R. Klausmeyer, J.K. Howard A machine learning approach to predict groundwater levels in California reveals ecosystems at risk Front. Earth Sci., 9 (2021), 10.3389/feart.2021.784499 ISSN=2296-6463 Google Scholar Romano and Kapelan, 2014 M. Romano, Z. Kapelan Adaptive Water Demand Forecasting for Near Real-Time Management of Smart Water Distribution Systems, vol. 60, Environmental Modelling & Software (2014), pp. 265-276, 10.1016/j.envsoft.2014.06.016 View PDFView articleView in ScopusGoogle Scholar Rummery and Niranjan, 1994 G.A. Rummery, M. Niranjan On-line Q-Learning Using Connectionist Systems Department of Engineering, University of Cambridge, Cambridge (1994) Google Scholar Rutkowski and Prokopiuk, 2018 T.A. Rutkowski, F. Prokopiuk Identification of the contamination source location in the drinking water distribution system based on the neural network classifier IFAC-PapersOnLine, 51 (24) (2018), pp. 15-22, 10.1016/j.ifacol.2018.09.523 View PDFView articleView in ScopusGoogle Scholar Salakhutdinov and Hinton, 2009 R. Salakhutdinov, G. Hinton Deep Boltzmann machines Proceedings of the Twelfth International Conference on Artificial Intelligence and Statistics, vol. 5, PMLR (2009), pp. 448-455 Google Scholar Salloom et al., 2021 T. Salloom, O. Kaynak, W. He A novel deep neural network architecture for real-time water demand forecasting J. Hydrol., 599 (2021), Article 126353, 10.1016/j.jhydrol.2021.126353 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Salloom et al., 2022 T. Salloom, O. Kaynak, X. Yu, W. He Proportional integral derivative booster for neural networks-based time-series prediction: case of water demand prediction Eng. Appl. Artif. Intell., 108 (2022), Article 104570, 10.1016/j.engappai.2021.104570 ISSN 0952-1976 View PDFView articleView in ScopusGoogle Scholar Salvadore et al., 2015 E. Salvadore, J. Bronders, O. Batelaan Hydrological modelling of urbanised catchments: a review and future directions J. Hydrol., 529 (1) (2015), pp. 62-81 View PDFView articleView in ScopusGoogle Scholar Sang-Soo et al., 2020 Baek Sang-Soo, Jongcheol Pyo, Jong Ahn Chun Prediction of water level and water quality using a CNN-LSTM combined deep learning approach Water, 12 (2020), p. 3399 Google Scholar Schmidhuber, 2015 J. Schmidhuber Deep learning in neural networks: an overview Neural Network., 61 (2015), pp. 85-117 View PDFView articleView in ScopusGoogle Scholar Schulman et al., 2017 J. Schulman, F. Wolski, P. Dhariwal, A. Radford, O. Klimov Proximal Policy Optimization Algorithms (2017) arXiv:1707.06347 Google Scholar Shahra et al., 2019 E.Q. Shahra, W. Wu, M. Romano Considerations on the deployment of heterogeneous IoT devices for smart water networks 2019 IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted Computing, Scalable Computing & Communications, Cloud & Big Data Computing, Internet of People and Smart City Innovation, Leicester, UK (2019), pp. 791-796 CrossRefView in ScopusGoogle Scholar Shakya et al., 2022 C.M. Shakya, R.K. Bhattacharjya, S. Dadhich Groundwater level prediction with machine learning for the Vidisha district, a semi-arid region of Central India Groundwater Sustain. Develop., 19 (2022), Article 100825, 10.1016/j.gsd.2022.100825 ISSN 2352-801X View PDFView articleView in ScopusGoogle Scholar Sharafati et al., 2020 A. Sharafati, S.B.H.S. Asadollah, A. Neshat A new artificial intelligence strategy for predicting the groundwater level over the Rafsanjan aquifer in Iran J. Hydrol., 591 (2020), Article 125468, 10.1016/j.jhydrol.2020.125468 ISSN 0022-1694 View PDFView articleGoogle Scholar Sherrington and Kirkpatrick, 1975 D. Sherrington, S. Kirkpatrick Solvable model of a spin-glass Phys. Rev. Lett., 35 (1975), pp. 1792-1796 View in ScopusGoogle Scholar Shi and Xu, 2018 S. Shi, G. Xu Novel performance prediction model of a biofilm system treating domestic wastewater based on stacked denoising auto-encoders deep learning network Chem. Eng. J., 347 (2018), pp. 280-290, 10.1016/j.cej.2018.04.087 View PDFView articleView in ScopusGoogle Scholar Sorkhabi et al., 2023 O.M. Sorkhabi, B. Shadmanfar, M.M. Al-Amidi Deep learning of sea-level variability and flood for coastal city resilience City and Environ. Interact., 17 (2023), Article 100098, 10.1016/j.cacint.2022.100098 ISSN 2590-2520 Google Scholar Steinwart and Christmann, 2008 I. Steinwart, A. Christmann Support Vector Machines Springer (2008) Google Scholar Su et al., 2020 Y. Su, C. Ni, W. Li, I. Lee, C. Lin Applying Deep Learning Algorithms to Enhance Simulations of Large-Scale Groundwater Flow in IoTs Applied Soft Computing (2020), p. 92, 10.1016/j.asoc.2020.106298 Google Scholar Sun et al., 2022 J. Sun, Li Hu, D. Li, K. Sun, Z. Yang Data-driven models for accurate groundwater level prediction and their practical significance in groundwater management J. Hydrol., 608 (2022), Article 127630, 10.1016/j.jhydrol.2022.127630 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Sutton et al., 2000 R.S. Sutton, D. McAllester, S. Singh, Y. Mansour Policy gradient methods for reinforcement learning with function approximation Adv. Neural Inf. Process. Syst., 12 (2000), pp. 1057-1063 View in ScopusGoogle Scholar Tata and Howard, 2016 Tata, Howard A history of dams: from ancient times to today Available at: https://tataandhoward.com/2016/05/a-history-of-dams-from-ancient-times-to-today/ (2016), Accessed 1st Feb 2020 Google Scholar Teimoori et al., 2023 S. Teimoori, M.H. Olya, C.J. Miller Groundwater level monitoring network design with machine learning methods J. Hydrol., 625 (Part B) (2023), Article 130145, 10.1016/j.jhydrol.2023.130145 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Tenenbaum et al., 2000 J.B. Tenenbaum, V.d. Silva, J.C. Langford A global geometric framework for nonlinear dimensionality reduction Science, 290 (2000), pp. 2319-2323 View in ScopusGoogle Scholar Teng et al., 2017 J. Teng, A.J. Jakeman, J. Vaze, B.F.W. Croke, D. Dutta, S. Kim Flood Inundation Modelling: a Review of Methods, Recent Advances and Uncertainty Analysis, vol. 90, Environmental Modelling & Software (2017), pp. 201-216 View PDFView articleView in ScopusGoogle Scholar Tibshirani, 1996 R. Tibshirani Regression shrinkage and selection via the Lasso J. Roy. Stat. Soc. B, 58 (1996), pp. 267-288 CrossRefGoogle Scholar Tran et al., 2007 D.H. Tran, A.W.N. Ng, B.J.C. Perera Neural networks deterioration models for serviceability condition of buried stormwater pipes Eng. Appl. Artif. Intell., 20 (8) (2007), pp. 1144-1151 View PDFView articleView in ScopusGoogle Scholar Triguero et al., 2015 I. Triguero, S. García, F. Herrera Self-labeled techniques for semi-supervised learning: taxonomy, software and empirical study Knowl. Inf. Syst., 42 (2015), pp. 245-284 CrossRefGoogle Scholar Truong et al., 2021 V.H. Truong, Q.V. Ly, V.C. Le, T.B. Vu, T.T.T. Le, T.T. Tran, P. Goethals Machine learning-based method for forecasting water levels in irrigation and drainage systems Environ. Technol. Innovat., 23 (2021), Article 101762, 10.1016/j.eti.2021.101762 ISSN 2352-1864 View PDFView articleView in ScopusGoogle Scholar United Nations, 2015 United Nations The human cost of weather-related disasters Available at: https://www.unisdr.org/2015/docs/climatechange/COP21_WeatherDisastersReport_2015_FINAL.pdf (2015) 06/09/20 Google Scholar United Nations Educational, 2017 United Nations Educational The united Nations world water development report Available at: Scientific and Cultural Organization (2017) http://www.unesco.org/new/en/natural-sciences/environment/water/wwap/wwdr/ 14/09/20 Google Scholar United Nations Environment Programme, 2016 United Nations Environment Programme A snapshot of the world's water quality: towards a global assessment Available at: https://uneplive.unep.org/media/docs/assessments/unep_wwqa_report_web.pdf (2016) 12/09/20 Google Scholar United Nations Water, 2020 United Nations Water Water scarcity Available at: https://www.unwater.org/water-facts/scarcity/ (2020) 01/09/20 Google Scholar USGS, 2019 USGS How much water is there on earth? https://www.usgs.gov/special-topics/water-science-school/science/how-much-water-there-earth (2019), Accessed 1st Jan 2024 Google Scholar Van Engelen and Hoos, 2020 J.E. Van Engelen, H.H. Hoos A survey on semi-supervised learning Mach. Learn., 109 (2020), pp. 373-440 CrossRefView in ScopusGoogle Scholar Van Thieu et al., 2023 N. Van Thieu, S.D. Barma, T.V. Lam, O. Kisi, A. Mahesha Groundwater level modeling using augmented artificial ecosystem optimization J. Hydrol., 617 (Part C) (2023), Article 129034, 10.1016/j.jhydrol.2022.129034 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Vincent and Larochelle, 2010 P. Vincent, H. Larochelle Stacked denoising autoencoders: learning useful representations in a deep network with a local denoising criterion J. Mach. Learn. Res., 11 (2010), pp. 3371-3408 View in ScopusGoogle Scholar Vrachimis et al., 2020 S.G. Vrachimis, D.G. Eliades, R. Taormina, A. Ostfeld, Z. Kapelan, S. Liu, M. Kyriakou, P. Pavlou, M. Qiu, M.M. Polycarpou BattLeDIM: Battle of the leakage detection and isolation methods Proc., 2nd Int. CCWI/WDSA Joint Conf (pp. 1–6) (2020) Google Scholar Wang et al., 2020 Y. Wang, J. Liu, Y. Han Production capacity prediction of hydropower industries for energy optimisation: evidence based on novel extreme learning machine integrating Monte Carlo J. Clean. Prod., 272 (2020), Article 122824, 10.1016/j.jclepro.2020.122824 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2022 G.C. Wang, Q. Zhang, S.S. Band, M. Dehghani, K.W. Chau, Q.T. Tho, S. Zhu, S. Samadianfard, A. Mosavi Monthly and seasonal hydrological drought forecasting using multiple extreme learning machine models Eng. Appl. Comput. Fluid Mech., 16 (1) (2022), pp. 1364-1381, 10.1080/19942060.2022.2089732 View in ScopusGoogle Scholar Wang et al., 2023 J. Wang, Xu Wang, S.T. Khu A Decomposition-based Multi-model and Multi-parameter ensemble forecast framework for monthly streamflow forecasting J. Hydrol., 618 (2023), Article 129083, 10.1016/j.jhydrol.2023.129083 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Ward et al., 2017 P.J. Ward, B. Jongman, J.C.J.H. Aerts, P.D. Bates, W.J.W. Botzen, A.D. Loaiza, S. Hallegate, J.M. Kind, J. Kwadijk, P. Scussolini, H.C. Winsemius A global framework for future costs and benefits of river-flood protection in urban areas Nat. Climate Change, 7 (2017), pp. 642-646 CrossRefView in ScopusGoogle Scholar Watkins, 1992 C. Watkins Q-learning Mach. Learn., 8 (1992), pp. 279-292 Google Scholar Wegayehu and Muluneh, 2022 E.B. Wegayehu, F.B. Muluneh Short-term daily univariate streamflow forecasting using deep learning models Advances in Meteorology, 2022 (2022) Google Scholar Wei et al., 2023 A. Wei, X. Li, L. Yan, Z. Wang, X. Yu Machine learning models combined with wavelet transform and phase space reconstruction for groundwater level forecasting Comput. Geosci., 177 (2023), Article 105386, 10.1016/j.cageo.2023.105386 ISSN 0098-3004 View PDFView articleView in ScopusGoogle Scholar Welling and Kingma, 2019 M. Welling, D.P. Kingma An introduction to variational autoencoders Foundat. Trend. Mach. Learn., 12 (2019), pp. 307-392 Google Scholar Wrobel, 1984 A. Wrobel On Markovian decision models with a finite skeleton Math. Methods Oper. Res., 28 (1984), pp. 17-27 View in ScopusGoogle Scholar Wu et al., 2023 Z. Wu, C. Lu, Q. Sun, W. Lu, X. He, T. Qin, L. Yan, C. Wu Predicting groundwater level based on machine learning: a case study of the hebei plain Water, 15 (4) (2023), p. 823, 10.3390/w15040823 View in ScopusGoogle Scholar Wunsch et al., 2022 A. Wunsch, T. Liesch, S. Broda Deep learning shows declining groundwater levels in Germany until 2100 due to climate change Nat. Commun., 13 (2022), p. 1221, 10.1038/s41467-022-28770-2 View in ScopusGoogle Scholar Xu et al., 2020a W. Xu, Y. Jiang, X. Zhang, Y. Li, R. Zhang, G. Fu Using long short-term memory networks for river flow prediction Nord. Hydrol, 51 (6) (2020), pp. 1358-1376, 10.2166/nh.2020.026 View in ScopusGoogle Scholar Xu et al., 2020b C. Xu, Z. Xu, Z. Yang Reservoir operation optimisation for balancing hydropower generation and biodiversity conservation in a downstream wetland J. Clean. Prod., 245 (2020), Article 118885, 10.1016/j.jclepro.2019.118885 View PDFView articleView in ScopusGoogle Scholar Yadav et al., 2020 B. Yadav, P.K. Gupta, N. Patidar, S.K. Himanshu Ensemble modelling framework for groundwater level prediction in urban areas of India Sci. Total Environ., 712 (2020), Article 135539, 10.1016/j.scitotenv.2019.135539 ISSN 0048-9697 View PDFView articleView in ScopusGoogle Scholar Yan et al., 2019 J. Yan, S. Jia, A. Lv, W. Zhu Water resources assessment of China's transboundary river basins using a machine learning approach Water Resour. Res., 55 (2019), pp. 632-655, 10.1029/2018WR023044 View in ScopusGoogle Scholar Yang et al., 2019 S. Yang, D. Yang, J. Chen, B. Zhao Real-time reservoir operation using recurrent neural networks and inflow forecast from a distributed hydrological model J. Hydrol., 579 (2019), Article 124229, 10.1016/j.jhydrol.2019.124229 View PDFView articleView in ScopusGoogle Scholar Yang et al., 2023 B. Yang, Z. Xiao, Q. Meng, Y. Yuan, W. Wang, H. Wang, Y. Wang, X. Feng Deep learning-based prediction of effluent quality of a constructed wetland Environ. Sci. Ecotech., 13 (2023), Article 100207, 10.1016/j.ese.2022.100207 ISSN 2666-4984 View PDFView articleView in ScopusGoogle Scholar Yin et al., 2021 W. Yin, Z. Fan, N. Tangdamrongsub, L. Hu, M. Zhang Comparison of physical and data-driven models to forecast groundwater level changes with the inclusion of GRACE – a case study over the state of Victoria, Australia J. Hydrol., 602 (2021), Article 126735, 10.1016/j.jhydrol.2021.126735 ISSN 0022-1694 View PDFView articleView in ScopusGoogle Scholar Yu and Qu, 2020 Y. Yu, Y. Qu Multi-component spectral detection based on neural network in water quality inspection Optik, 217 (2020), Article 164915, 10.1016/j.ijleo.2020.164915 View PDFView articleView in ScopusGoogle Scholar Yu et al., 2020 C. Yu, Z. Li, Z. Yang, X. Chen, M. Su A feedforward neural network based on normalisation and error correction for predicting water resources carrying capacity of a city Ecol. Indicat., 118 (2020), 10.1016/j.ecolind.2020.106724 Google Scholar Yu et al., 2023 T. Yu, X. Chen, W. Yan, Z. Xu, M. Ye Leak detection in water distribution systems by classifying vibration signals Mech. Syst. Signal Process., 185 (2023), Article 109810, 10.1016/j.ymssp.2022.109810 ISSN 0888-3270 View PDFView articleView in ScopusGoogle Scholar Zhang, 2003 G.P. Zhang Time series forecasting using a hybrid ARIMA and neural network model Neurocomputing, 50 (2003), pp. 159-175 View PDFView articleView in ScopusGoogle Scholar Zhang and Hu, 2020 Y.J. Zhang, L.S. Hu Real time estimation of radionuclides in the receiving water of an inland nuclear power plant based on difference gated neural network Radiat. Phys. Chem., 176 (2020), Article 109019, 10.1016/j.radphyschem.2020.109019 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2017 Z.H. Zhang, J.X. Zhao, X. Lu, X.Z. Niu Application of BP neural network based on genetic algorithm in power load forecasting Comput. Eng., 2 (10) (2017), pp. 277-282 Google Scholar Zhang et al., 2018 D. Zhang, E.S. Hølland, G. Lindholm, H. Ratnaweera Hydraulic modeling and deep learning-based flow forecasting for optimising inter catchment wastewater transfer J. Hydrol., 567 (2018), pp. 792-802, 10.1016/j.jhydrol.2017.11.029 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2019 J. Zhang, X. Zhang, J. Niu, B.X. Hu, M.R. Soltanian, H. Qui, L. Yang Prediction of groundwater level in seashore reclaimed land using wavelet and artificial neural network-based hybrid model J. Hydrol. (2019), 10.1016/j.jhydrol.2019.123948 Google Scholar Zhang et al., 2019 Y. Zhang, X. Gao, K. Smith, G. Inial, S. Liu, L.B. Conil, B. Pan Integrating Water Quality and Operation into Prediction of Water Production in Drinking Water Treatment Plants by Genetic Algorithm Enhanced Artificial Neural Network, vol. 164, Water Research (2019), Article 114888, 10.1016/j.watres.2019.114888 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2020 H. Zhang, Z. Song, P. Peng, Y. Sun, Z. Ding, X. Zhang Research on seepage field of concrete dam foundation based on artificial neural network Alex. Eng. J. (2020), 10.1016/j.aej.2020.03.041 Google Scholar Zhang et al., 2022 M. Zhang, Z. Xu, Y. Wang, S. Zeng, X. Dong Evaluation of uncertain signals' impact on deep reinforcement learning-based real-time control strategy of urban drainage systems J. Environ. Manag., 324 (2022), Article 116448, 10.1016/j.jenvman.2022.116448 ISSN 0301-4797 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2023 E. Zhang, L. Shao, Y. Wang Unifying transformer and convolution for dam crack detection Autom. ConStruct., 147 (2023), Article 104712, 10.1016/j.autcon.2022.104712 ISSN 0926-5805 View PDFView articleView in ScopusGoogle Scholar Zhou, 2020 Y. Zhou Real-time probabilistic forecasting of river water quality under data missing situation: deep learning plus post-processing techniques J. Hydrol., 589 (2020), Article 125164, 10.1016/j.jhydrol.2020.125164 View PDFView articleView in ScopusGoogle Scholar Zhou et al., 2000 S.L. Zhou, T.A. McMahon, A. Walton, J. Lewis Forecasting daily urban water demand: a case study of Melbourne J. Hydrol., 236 (3–4) (2000), pp. 153-164, 10.1016/S0022-1694(00)00287-0 View PDFView articleView in ScopusGoogle Scholar Zhou et al., 2019 X. Zhou, Z. Tang, W. Xu, F. Meng, X. Chu, K. Xin, G. Fu Deep Learning Identifies Accurate Burst Locations in Water Distribution Networks, vol. 166, Water Research (2019), Article 115058, 10.1016/j.watres.2019.115058 View PDFView articleView in ScopusGoogle Scholar Zhu and Ghahramani, 2002 X. Zhu, Z. Ghahramani Learning from Labeled and Unlabeled Data with Label Propagation, Technical Report CMU-CALD-02-107, School of Computer Science Carnegie Mellon University (2002) Google Scholar Zhu and Goldberg, 2009 X. Zhu, A.B. Goldberg Introduction to Semi-supervised Learning. Synthesis Lectures on Artificial Intelligence and Machine Learning (2009) Google Scholar Zhu et al., 2022 J. Zhu, Z. Jiang, L. Feng Improved neural network with least square support vector machine for wastewater treatment process Chemosphere, 308 (1) (2022), Article 136116, 10.1016/j.chemosphere.2022.136116 ISSN 0045-6535 View PDFView articleView in ScopusGoogle Scholar Cited by (0) © 2024 The Authors. Published by Elsevier Ltd. Recommended articles Reactive fluid flow (RFF), its hydrodynamic modeling and process controlling in cleaner production of copper sulfides bioleaching Journal of Cleaner Production, Volume 441, 2024, Article 140792 Leiming Wang, …, Lei Zhang View PDF Dynamic pricing and emission reduction efforts in a dual-channel green supply chain under bidirectional free riding Journal of Cleaner Production, Volume 438, 2024, Article 140713 Lizhao Yan, …, Zhao Wu View PDF Maximizing thermal efficiency of a cavity using hybrid nanofluid Journal of Cleaner Production, Volume 441, 2024, Article 141089 Hanifa Hanif, …, Zainab Toyin Jagun View PDF Show 3 more articles Article Metrics Captures Readers: 34 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 8:
- APA Citation: Mohammed, M., Hamdoun, H., & Sagheer, A. (2023). Toward Sustainable Farming: Implementing Artificial Intelligence to Predict Optimum Water and Energy Requirements for Sensor-Based Micro Irrigation Systems Powered by Solar PV. Agronomy, 13(4), 1081. https://doi.org/10.3390/agronomy13041081
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: To achieve this aim, four solar-powered micro irrigation systems were developed and evaluated under six irrigation levels for date palm irrigation. Soil moisture sensor-based controllers were used to automate irrigation scheduling for the micro irrigation systems.
  Extract 2: Therefore, the dataset was prepared at these levels for four years to train and test the models, and a fifth year was used to validate the performance of the best model.
  Limitations: ['The study was performed in a specific region and may not be generalizable to other regions with different climate, soil, and crop conditions.', 'The study focused on a single date palm cultivar, and the results may vary for other date palm cultivars or fruit trees.', 'The study did not evaluate the economic feasibility or cost-effectiveness of the proposed system.']
  Relevance Evaluation: ['The paper focuses on investigating advanced predictive models for precise, site-specific irrigation recommendations, which is well-aligned with the specific point under consideration.', 'The paper also examines the efficiency and efficacy of integrated end-to-end automated irrigation systems, which are relevant to the broader context of real-time irrigation management.', "Overall, the paper's content is highly relevant to the specific point and research question outlined in the prompt."]
  Relevance Score: 0.9530612244897959
  Inline Citation: (Magd Mohammed, Hala Hamdoun 3 and Alaa Sagheer 3, 2023)
  Explanation: The paper aims to improve automated irrigation systems for real-time management by investigating advanced models for precise irrigation water recommendations and by evaluating the efficiency and efficacy of integrated end-to-end automated irrigation systems.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all     Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Agronomy All Article Types Advanced   Journals Agronomy Volume 13 Issue 4 10.3390/agronomy13041081 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editors Egidijus Šarauskis Vilma Naujokienė Zita Kriauciuniene Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 5750 Citations 9 Table of Contents Abstract Introduction Materials and Methods Results and Discussion Conclusions Author Contributions Funding Data Availability Statement Acknowledgments Conflicts of Interest Nomenclature Appendix A References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessEditor’s ChoiceArticle Toward Sustainable Farming: Implementing Artificial Intelligence to Predict Optimum Water and Energy Requirements for Sensor-Based Micro Irrigation Systems Powered by Solar PV by Maged Mohammed 1,2,*, Hala Hamdoun 3 and Alaa Sagheer 3,4 1 Date Palm Research Center of Excellence, King Faisal University, Al-Ahsa 31982, Saudi Arabia 2 Department of Agricultural and Biosystems Engineering, Faculty of Agriculture, Menoufia University, Shebin El Koum 32514, Egypt 3 Center for Artificial Intelligence and Robotics (CAIRO), Aswan University, Aswan 81582, Egypt 4 College of Computer Sciences and Information Technology, King Faisal University, Al-Ahsa 31982, Saudi Arabia * Author to whom correspondence should be addressed. Agronomy 2023, 13(4), 1081; https://doi.org/10.3390/agronomy13041081 Submission received: 15 March 2023 / Revised: 6 April 2023 / Accepted: 7 April 2023 / Published: 8 April 2023 (This article belongs to the Special Issue Agricultural Automation and Innovative Agricultural Systems) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Future trends in climate change, water scarcity, and energy costs will motivate agriculturists to develop innovative agricultural systems. In order to achieve sustainable farming in arid regions, there is an urgent need to use artificial intelligence (AI) to predict and estimate the optimum water and energy requirements for the irrigation of date palms. Therefore, this study aimed to predict the optimum water and energy requirements for date palm irrigation depending on the optimum water use efficiency (WUE) and yield in arid conditions. To achieve this aim, four solar-powered micro irrigation systems were developed and evaluated under six irrigation levels for date palm irrigation. Soil moisture sensor-based controllers were used to automate irrigation scheduling for the micro irrigation systems. The water pumping in these systems was powered using a solar photovoltaic (PV) system. In addition, four machine-learning (ML) algorithms, including linear regression (LR), support vector regression (SVR), long short-term memory (LSTM) neural network, and extreme gradient boosting (XGBoost), were developed and validated for prediction purposes. These models were developed in Python programing language using the Keras library. The results indicated that the optimum WUS was achieved when the maximum setpoints of irrigation control were adjusted at the field capacity and by adjusting the minimum setpoints at 40, 50, 70, and 80% of the available water (AW). The optimum yield was achieved by adjusting the minimum setpoints at 60, 70, 80, and 90% of AW for subsurface irrigation, subsurface drip irrigation, drip irrigation, and bubbler irrigation, respectively. Therefore, the dataset was prepared at these levels for four years to train and test the models, and a fifth year was used to validate the performance of the best model. The evaluation of the models showed that the LSTM followed by XGBoost models were more accurate than the SVR and LR models for predicting the optimum irrigation water and energy requirements. The validation result showed that the LSTM was able to predict the water and energy requirements for all irrigation systems with R2 ranging from 0.90 to 0.92 based on limited meteorological variables and date palm age. The findings of the current study demonstrated that the developed LSTM model can be a powerful tool in irrigation water and energy management as a fast and easy-to-use approach. Keywords: arid regions; date palm; PV pumping systems; smart farming; water scarcity; water use efficiency; time series prediction; LSTM; AI; machine learning 1. Introduction Agricultural sustainability and development mainly rely on irrigation water. Global agricultural production consumes more than 70% of the available freshwater worldwide for irrigation use [1,2]. However, less than 60% of the water applied can be efficiently utilized for crop irrigation based on actual water requirements [3]. Furthermore, irrigation water scarcity characterizes arid regions, which causes the limitation of sustainable agriculture and development in these regions [4,5]. Therefore, enhancing irrigation water productivity in these regions is the main target for sustainable agriculture and economic development [6]. Precision agriculture is indispensable for enhancing agricultural production and saving water through efficient irrigation management. Precision irrigation management ensures efficient plant water usage with the proper amounts that compensate for water loss through erosion or evapotranspiration [7]. Moreover, natural phenomena, such as global warming and climate change, influence the availability of precipitation needed to provide water for trees and plants. Even if these climatic factors are controlled using greenhouses [8], these factors are not easy to manage or control in the open field, such as date palm fields. The problem is becoming worse in countries with harsh climates and arid lands [9]. Date palm trees (Phoenix dactylifera L.) are the essential crops in arid and semi-arid regions characterized by water scarcity throughout the year. Consequently, date palm irrigation in these regions often relies on groundwater. However, despite water scarcity, inefficient irrigation water use still prevails in date palm farms, which may soon lead to groundwater depletion [9]. Therefore, water management for sustainable date palm cultivation is essential for stakeholders. Many irrigation methods, such as drip, bubble, and flood, are usually used to supply water to the date palms without control systems. Although these irrigation methods lead to the maximum date palm tree yield, modern automated micro irrigation systems can produce a similar yield using less irrigation water [10,11]. Therefore, the use of micro irrigation systems with proper irrigation scheduling contributes to higher water use efficiency (WUE) and crop yield [12]. Date palm fields are often far from the energy sources needed for powering water pumps and irrigation water scheduling control systems. Consequently, solar photovoltaic (PV) systems are required to supply irrigation systems with the energy needed [13]. In addition, the solar PV system helps decrease carbon emissions into the atmosphere. Using solar PV systems for water pumping can prevent about 24,000 tons of greenhouse gases annually from being released into the atmosphere in Saudi Arabia [14]. Optimizing solar PV water pumping systems is a significant trend, which leads to demand satisfaction with irrigation water requirements with low PV energy consumption. Therefore, many previous efforts have been conducted to save and optimize PV water pumping systems’ energy consumption and costs. For example, low-cost solar PV systems were developed, which depend on variable voltage, variable frequency, and maximum power point tracker for water pumping in irrigation systems [13]. This control system will give an optimum solution for solar PV energy conservation. Generally, solar PV energy is becoming very influential globally due to the benefits of its use. However, climate change results in frequent variations, which directly affect the energy production in PV system installations; therefore, efficient AI management is essential [15]. Artificial intelligence (AI) can play a vital role in the efficient management of irrigation water scheduling by managing sensed data and understanding the changing dynamics of weather, soil, and plant conditions during the cultivation periods [2]. Furthermore, due to the development of sensing devices, the enormous internet of things (IoT) revolution, and machine-learning (ML) applications for intelligent agriculture, its use substantially impacts irrigation water conservation, plant growth, and crop production [16,17,18,19]. As a result, these technologies will enable water irrigation management, optimization of electricity use for water pumping, and a reduction in overall costs [20]. Monitoring the plant conditions, the weather variables, and the water status in the soil are essential factors in reducing irrigation water consumption without affecting crop production. In order to achieve these targets, several tools and devices are developed to ensure precision irrigation, such as automated weather stations and IoT-based control systems [21]. However, these methods are not usually available due to their expensive cost and complicated use. In addition, digital aerial photography applications need temporal and spatial plant water status information with sufficient accuracy [22]. Therefore, alternative and cheaper methods are necessary to provide the plants with their actual water requirements based on ML prediction and prediction models. The most common regression methods in the ML domain include linear regression, support vector regression, conventional neural networks, long short-term memory neural networks, and extreme gradient boosting. Linear regression is the most standard regression approach, which is widely used in prediction and decision-making applications [23]. It examines the relationship between two quantitative variables, namely dependent (goal or output) variables and independent (predictor or input) variables. Therefore, linear regression approaches help in establishing causal relationships between variables, which are useful in modeling the prediction of some agricultural problems [17]. Support vector regression is a well-known ML algorithm widely used in classification applications. It is based on two elements of the statistical learning theory, namely the decision boundary and the decision plane [24]. The most conventional neural networks assume that all the input samples are independent of each other. This is not the case in applications that include sequential or time series data, such as the data gathered in the agriculture domain, where each data sample is supposed to be dependent on the previous one [25]. It is demonstrated that recurrent neural network approaches are used to treat time series data. Specifically, given sequential data, the standard recurrent neural network aims to learn representations of patterns that repeatedly occurred through the past data sample by sharing parameters across all time steps [26]. However, as time goes on, the memory of recurrent neural networks of past learned patterns fades. The long short-term memory (LSTM) allows the memory cell to memorize the data stream for a longer period of time by setting propagation tracks to keep the flow of gradients of the earlier states [27]. The LSTM is trained to map an input sequence into an output sequence, where the network’s delay recursion enables it to represent efficiently the dynamic performance of any sequential system [28,29]. The impact of extreme gradient boosting (XGBoost) has been widely recognized in a variety of ML and data mining applications and challenges. Moreover, it is widely used for feature selection due to its high scalability, efficiency, parallelization, and speed [30]. To our knowledge, no previous study has been conducted to predict the irrigation water and PV energy requirements using ML models for date palms in arid regions, especially in micro irrigation systems. Therefore, in this study, we addressed the problem of predicting the water and energy requirements for date palm orchards using essential solar-powered micro irrigation systems in an arid region. The main objective of the current study was to predict the optimum irrigation water and solar photovoltaic (PV) energy requirements for date palm irrigation using micro irrigation systems. Therefore, the influence of four solar-powered surface and subsurface micro irrigation systems on water use efficiency (WUE) and date palm tree yield under six irrigation levels was investigated to determine the optimum irrigation water and energy required for optimal WUE and productivity of date palm trees. In addition, four ML models, namely linear regression (LR), support vector regression (SVR), long short-term memory (LSTM) neural network, and extreme gradient boosting (XGBoost), were developed to predict the optimum water and energy requirements based on limited meteorological data and date palm age in a time series forecasting paradigm. We selected LR as an example of the parametric method and SVR as an example of the non-parametric method, both of them being decision boundary-based methods [31]. Additionally, we selected the LSTM as an example of a neuron-based method, whereas XGBoost is an example of a tree-based method [30]. Moreover, since irrigation water management is a complex environmental problem that includes several parameters, we represent the problem as a multivariate time series problem. This multivariate problem can be treated easily using the aforementioned ML approaches [32]. Accordingly, our contributions to achieving the objectives of the current study can be summarized as follows: Investigating the influence of four solar-powered micro irrigation systems on date palm yield and water use efficiency. Collecting data on meteorological variables of the study area during the date palm irrigation experiment, including actual water applied and actual PV energy consumed. Determining the optimum water applied and PV energy consumed for obtaining optimum WUE and for optimum date palm yield under each micro irrigation system. Developing and evaluating four ML models for predicting water and energy requirements based on limited meteorological variables and date palm age, where the target is to achieve the optimum WUE, or where the target is to achieve the optimum date palm yield. Validating the best ML model under each solar-powered irrigation system according to the above two options. 2. Materials and Methods 2.1. Experimental Area This study was implemented in an arid region at the experimental orchards of Date Palm Research Center of Excellence (25°16′03.8″ N, 49°42′29.2″ E) at the Agricultural Training and Research Station, King Faisal University (KFU), Saudi Arabia. The experiment was conducted for five successive years (1 January 2018 to 31 December 2022). The palm trees chosen (Khalas cultivar) had uniform growth and were of the same age (14 years in the first season) with a density of 200 palms/ha. In addition, all date palm trees chosen were treated with the same farming practices. The groundwater well at the DPRC fields was used to supply the irrigation water applied in this study for all irrigation systems. The irrigation water’s electrical conductivity (EC) was 0.96 ± 0.58 dS/m; the pH was 8.95 ± 1.31; and total dissolved solids (TDS) were 778 ± 58.22 mg/L. The soil in the experimental site was sandy loam with an average particle size distribution of 67.61 ± 2.22, 17.93 ± 0.67, and 14.46 ± 2.21% for sand, silt, and clay, respectively. The soil’s bulk density (BD) was 1.58 ± 0.12 g/cm3; the field capacity (FC) was 19.98 ± 0.62%; the permanent wilting point (PWP) was 9.27± 0.38%; the pH was 8.11 ± 0.21; the electrical conductivity (ECs) was 3.32 ± 1.63; and the hydraulic conductivity (HC) was 4.91 ± 0.21. The soil’s average physical, chemical, and hydraulic characteristics are within 100 cm depth in the experimental site. 2.2. Description of the Solar-Powered Micro Irrigation Systems In this study, four solar-powered micro irrigation systems were used for date palm irrigation, which were subsurface irrigation system (SIS), subsurface drip irrigation system (SDIS), drip irrigation system (DIS), and bubbler irrigation system (BIS). All irrigation systems used in the study were supplied with fresh water sourced from groundwater wells. A solar photovoltaic (PV) system with solar pumping inverter (SPI) was used to power and control the AC induction motor of the irrigation pump based on pulse-width modulation (PWM), current, and voltage source inverter. The average daily solar radiation was used to calculate the size of the PV system. Figure 1 shows a schematic diagram of the components of each irrigation system, the distribution of the irrigation units around the palm for each system, the solar PV system of energy supply for water pumping and control mechanism, and the method of connecting the solar panel and irrigation networks. Figure 2 shows some photos of the solar PV and irrigation systems used in the current study. The following subsection shows the description of the solar PV and irrigation systems. Figure 1. A schematic diagram of the experimental setup of the four solar-powered micro irrigation systems: (A) subsurface irrigation (SIS), (B) subsurface drip irrigation (SDIS), (C) drip irrigation (DIS), and (D) bubbler irrigation (BIS) connected with the solar PV system. Figure 2. Experimental setup of the solar PV and irrigation systems: (a) PV array toward south with a tilt angle of 30°, (b) irrigation control unit with small PV system, (c) irrigation network, (d) solenoid valves and pressure regulators, (e) irrigation water pump with an automatic regulator, (f) subsurface irrigation system (SIS), (g) subsurface drip irrigation system (SDIS), (h) drip irrigation system (DIS), (i) bubbler irrigation system (BIS). 2.2.1. Solar PV System The solar PV system was designed according to the energy required for the water pumping system. This experiment used ten solar PV panels 305 W (CSUN305-72P, Matrix—Australian Solar Co., Prestons, NSW, Australia) to power the water pumping system. Nine solar PV panels are connected in series to operate the water pumps, and one is used to operate the control units. The ten solar PV modules were tilted on a metal frame at 30° toward the south, as shown in Figure 1 and Figure 2a. Each solar PV panel had a maximum power (Pmax) of 305 Wp, a voltage at the maximum power (Vmp) of 36.7 V, a current at maximum power (Imp) of 8.31 A, a voltage at open circuit (Voc) of 45.2 V, and a current at short circuit (Isc) of 8.87 A. The PV panel efficiency was 15.75%. The maximum power of the solar PV system was 325 V, and the peak power was 2.8 kW. The solar PV system output power was used to power the water pump through a 2.2 kW variable-frequency (VFD) solar Inverter (GD100-2R2G-S2-PV, Goosun Energy Construction Group Co., Ltd., Fuyang, China). 2.2.2. Irrigation Systems One solar-powered water pumping system was used for these irrigation systems. The water pumping system consisted of a solar-powered irrigation control unit, a water source, two water pumps, pressure regulators, water solenoid valves, manual valves, a pressure gauge, and water flow meters. The solar-powered irrigation control unit included four digital programable timers, electronic circuits, and power sources for the valves and timers (Figure 2b). Four digital programable timers were used to regulate the water pumping in the irrigation network for each irrigation system separately. The PV system of the irrigation control unit consisted of a 20 W solar panel, battery (12 V, 30 Ah), and solar charging controller. Figure 1 compares the distribution of irrigation units around the palm tree for SIS (Figure 1A), SDIS (Figure 1B), DIS (Figure 1C), and BIS (Figure 1D). The following is a brief description of the micro irrigation systems used: SIS: Six subsurface irrigation units were used for each date palm tree in this system (Figure 2f). The subsurface irrigation units were connected to the distribution ring, and the ring was connected to the subline. The subsurface irrigation unit consisted of two perforated pipes with light volcanic gravels (0.4–0.8 cm in diameter) between them. The outer diameter of the subsurface irrigation unit was 12.5 cm, and its length was 35 cm. The outer pipe’s surface is slotted with a slot width of 0.2 cm, a length of 4.0 cm, and a tilt angle of 30°. The inner pipe length is 35 cm with a diameter of 2.5 cm and is perforated in a spiral shape with a 0.3 cm hole diameter. The subsurface irrigation unit’s water flow rate was approximately 0.030 m3/h at a pressure of 300 kPa. SDIS: A subsurface dripline with a diameter of 1.6 cm (Rain Bird Corporation, Tucson, AZ, USA) included subsurface pressure-compensating emitters used in this system (Figure 2g). The distance between two pressure-compensating emitters was 0.457 m. Two lateral rings of this subsurface dripline were installed around the date palm tree. The diameters of the inner and outer lateral dripline rings were 1.2 m and 1.84 m, respectively. Accordingly, twenty pressure-compensating emitters were used for each date palm tree. The flow rate of the pressure-compensating emitters was approximately 0.010 m3/h at a pressure of 380 kPa. DIS: Six pressure-compensating drippers with a flow rate of approximately 0.03 m3/h at 300 kPa were distributed around the date palm tree in this system (Figure 2h). The dripper was installed on a lateral ring (1.6 cm in diameter) around date palm trees with a diameter of 1.80 m. BIS: Four adjustable low-pressure bubblers with flow rates ranging from 0 to 0.120 m3/h were used in this system for each date palm tree (Figure 2i). The bubbler flow rate of 0.045 m3/h was adjusted at the pressure of 200 kPa. The bubbler heads were installed on a wedge and inserted into the ground around the date palm tree. 2.3. Experimental Design and Measurements The experiment involved four solar-powered micro irrigation systems (SIS, SDIS, DIS, and BIS) with six deficit irrigation level treatments as a different percentage of available water (AW). The experiment was a factorial randomized block design (factorial RBD) with three replicates. Factor one was the four irrigation systems; factor two was the six irrigation levels; and factor three was the date palm age or years of experiment. Therefore, 72 date palm trees were used in this experiment for five successive years from 2018 to 2022 (date palm age was from 14 to 18 years). Based on the evaluation of irrigation systems, we selected the data of irrigation water amount that presented significant optimum water use efficiency (WUE) and optimum date palm tree yield to develop the ML models for prediction of the optimum irrigation water and PV energy requirements for each micro irrigation system. The measurements in this study included the meteorological variables, irrigation water requirements at the four deficit irrigation treatments, the actual amount of irrigation water used for each irrigation system, the amount of electrical energy consumed for each irrigation system, date palm yield, and water use efficiency. First, the data of meteorological variables, plant age, and actual water and energy requirements for date palm irrigation for four successive years from 2018 to 2021 were used to train and test four ML-based prediction models for predicting the irrigation water and energy requirements. Then, the data obtained from the fifth season (2022) were used to validate the performance of the best developed model by comparing the observed values with the predicted values. The measurements in the current study can be summarized as follows: Meteorological variables: A cloud-based IoT platform was used for meteorological variables’ data collection. The IoT platform included several components, i.e., the sensors, controller, source of internet, cloud platform (ThingSpeak cloud platform), and laptop. These components were efficiently connected and seamlessly worked to realize the meteorological variables’ data collection. Irrigation water requirements: The amount of irrigation water requirements (IWR) was expressed per date palm tree. The IWR was controlled based on the volumetric soil water content (VSWC) using a soil moisture sensor-based control system. The sensor-based irrigation scheduling (SBIS) method was used for the irrigation schedule in this experiment using a soil moisture sensor-based control system designed and manufactured by the first author of the current study [9]. The minimum setpoints were adjusted at different VSWC as a percent of available water (AW) content (40, 50, 60, 70, 80, and 90% of AW), as shown in Figure 3. The maximum setpoints were adjusted at 25% VSWC for all irrigation systems. Three VSWC sensors (VH400Vegetronix, Inc., Riverton, Salt Lake County, UT, USA) were used for each treatment. Each sensor is installed between two irrigation units at a distance of 1 m from the palm tree’s trunk, with a depth of 25 cm. Figure 3. Water type, thresholds for soil in the study area, and minimum and maximum irrigation control setpoints. The FC, AW, PWP, and UAW denote field capacity, available water, permanent wilting point, and unavailable water. Irrigation water applied: Multi-jet water flow meters (model: LXSG-15E-50E, Ningbo Yonggang Instrument Co., Ltd., Cixi, Ningbo, China) made from copper with a nominal diameter of 20 m were used to calculate the actual amount of irrigation water applied. The flow meters were made of copper with total dimensions of approximately 1.9 × 9.9 × 1.6 cm. The reduction factor: The reduction coefficient (Kr) for each irrigation system was estimated using the following formula: K r = IWR×1000 ET c ×A i (1) where Kr is a reduction factor of ETc for achieving the optimum WUE or optimum yield; IWR is the irrigation water requirement applied based on the sensor-based irrigation scheduling (m3/palm/day); ETc is the crop evapotranspiration in the study area (mm/day); Ai is the target irrigation area of each date palm tree. The target irrigation area was equal to 90% of the actual shaded area of the date palm; Ai was determined according to the light intercepted fraction by the canopy. The ETc was determined according to the following formula: ET c = K c × ET o (2) where Kc is the crop factor for the date palm tree ((Kc ranged from 0.8 to 1.0)) [5,33], and ETo is the reference evapotranspiration (mm/day). The ETo was determined according to the Penman–Monteith equation [34]. Electrical energy consumed: The amount of electrical energy consumed for each irrigation system was measured using digital energy meters (D69-2049, Yueqing Winston Electric Co., Ltd., Wenzhou, China). These digital energy meters are multi-function meters, which simultaneously display the measured AC voltage (80–300 VAC), AC (0–100 A), active power (0–10000 W), and cumulative energy consumption (0–10000 kWh). Yield and water use efficiency: The yield of the palm tree was predicted by weighing the ripe date fruits immediately after harvesting using a digital balance. The water use efficiency was predicted based on the yield and the cumulative irrigation water applied using the following equation: WUE= DPY AIW (3) where WUE is water use efficiency (kg/m3); DPY is the date palm yield (kg); and AIW is the applied irrigation water (m3). 2.4. Machine-Learning Algorithms In this study, we developed and evaluated four common ML algorithms widely used to automate the decision making of irrigation systems’ management [7]. In order to reach a fair evaluation, we utilized 60%, 20%, and 20% of the overall dataset in training, testing, and validating, respectively, the ML methods. The following subsections briefly show the ML algorithms, which are developed and utilized in this study. 2.4.1. Linear Regression Linear regression examines the relationship between two quantitative variables, namely dependent variables (goal) and independent variables (predictor). In practice, it comes in two variants. The first is a simple linear regression where we have one independent variable and one dependent variable. The second is a multi-linear regression where there is more than one independent variable. The multi-linear regression where there is more than one independent variable was used in this study, as shown in the following equation: 𝑦 𝑖 ̂ = 𝐵 0 + 𝐵 1 𝑥 𝑖1 + 𝐵 2 𝑥 𝑖2 + …  𝐵 𝑛 𝑥 𝑖𝑛 (4) where 𝑦 𝑖 ̂ is the predicted value (output), the Bs are the regression model parameters, and the xis are the input variables. In this study, the xis represent the meteorological variables and date palm age, whereas the output 𝑦 𝑖 ̂ represents the irrigation water required and the solar PV energy, which is required for water pumping and controlling each irrigation system. The values of the Bs started at random and were then adjusted during the learning phase. 2.4.2. Support Vector Machine The support vector machine (SVM) is based on two elements of the statistical learning theory, namely the decision boundary and the decision plane. SVM uses a linear function to establish a nonlinear decision boundary across a nonlinear mapping of the input vector x into a high-dimensional feature space. In practice, it uses a linear function to establish a nonlinear decision boundary across a nonlinear mapping of the input vectors x into a high-dimensional feature space. The decision plane can be defined as a plane that separates a set of varied objects [31]. When SVM is applied to a regression problem, it takes the name of support vector regression (SVR) [24]. Similar to the SVM approach, there is motivation to optimize the generalization bounds adopted for SVR. Namely, SVR relies on identifying the loss function by excluding the expected errors, which may exist within a specific distance from the ground values. As shown in Figure 4a, this loss function embeds a uni-dimensional linear regression function with an epsilon-insensitive band; therefore, it is called the epsilon-insensitive loss function. Figure 4. The epsilon-insensitive band via one-dimensional (a) linear regression function and (b) nonlinear regression function. The goal of SVR is to find a function 𝑓(𝑥)= 𝑤 𝑇 𝑥+𝑏 , which deviates no more than 𝜉 from the target values yi for all training data [31]. For linearly separable data, the corresponding quadratic optimization problem is given as Minimize 1 2 𝑤 𝑇 𝑤  s.t. 𝑦 𝑖 ( 𝑤 𝑇 𝑥 𝑖 +𝑏⩽1; ∀ 𝑖 =1,2, …, 𝑁) (5) where w is the weight vector, the xis are the input features (or the weather conditions), and b is the bias. The SVM can deal with nonlinear regression cases, as shown in Figure 4b. For the nonlinearly separable data, the corresponding optimization problem can be given as Minimize 1 2 𝑤 𝑇 𝑤+𝖢 ∑ 𝑖=1 𝑁 𝜁  s.t. 𝑦 𝑖 ( 𝑤 𝑇 𝑥 𝑖 +𝑏⩾1−𝜁; ∀ 𝑖 =1,2, …, 𝑁,𝜁⩾1) (6) where C is a constant usually used to control the error. For the experiments of this study, we considered C = 100, 𝜉 = 0.1, and 0.01 for the irrigation water requirements and the solar PV energy requirements, respectively. For the kernel function of SVR, we used the Gaussian RBF kernel function with γ (Gamma) = 0.1 and 0.01, respectively. Gamma in SVR is a hyperparameter, which decides how much binding we want in a decision boundary. 2.4.3. Long Short-Term Memory Long short-term memory (LSTM) is a recurrent neural network method capable of treating sequential (or time series) data. This is because LSTM contains memory blocks that replace the summation unit in each neuron of other neural network models. The standard LSTM model is composed of one hidden layer followed by a feed-forward output layer. Each layer contains several cells where the information is stored; Figure 5 shows the internal structure of one cell. Figure 5. The internal structure of one LSTM cell. As depicted in Figure 5, the LSTM memory cell consists of three gates built upon a sigmoidal neural network, where each gate has a different function [27]. The three gates are the input gate, the forget gate, and the output gate. In detail, the input gate controls whether to enter the input data into the cell state. The forget gate decides whether to erase data from the cell state or not. Lastly, the output gate decides which data to pass as the output hidden state. The following equations represent the function of each gate. (𝑖 𝑡 =𝜎( 𝑊 𝑥𝑖 𝑋 𝑡 + 𝑊 ℎ𝑖 ℎ 𝑡−1 + 𝑏 𝑖 ) (7) 𝑓 𝑡 =𝜎( 𝑊 𝑥𝑓 𝑋 𝑡 + 𝑊 ℎ𝑓 ℎ 𝑡−1 + 𝑏 𝑓 ) (8) 𝑜 𝑡 =𝜎( 𝑊 𝑥𝑜 𝑋 𝑡 + 𝑊 ℎ𝑜 ℎ 𝑡−1 + 𝑏 𝑜 ) (9) 𝑐 𝑡 = 𝑓 𝑡 ⊙ 𝑐 𝑡−1 + 𝑖 𝑡 ⊙𝑡𝑎𝑛ℎ( 𝑊 𝑥𝑐 𝑋 𝑡 + 𝑊 ℎ𝑐 ℎ 𝑡−1 + 𝑏 𝑐 ) (10) ℎ 𝑡 = 𝑜 𝑡 ⊙𝑡𝑎𝑛ℎ( 𝑐 𝑡 ) (11) For simplicity, this could be represented in one form as follows: ℎ 𝑡 , 𝑐 𝑡 =𝖫𝖲𝖳𝖬( 𝑥 𝑡 , ℎ 𝑡−1 , 𝑐 𝑡−1 ) (12) where it, ft, and ot are the LSTM gating for the cell state to input, forget, and output information, respectively. ht and ct are the hidden state vector and the cell memory state vector, respectively. Xt is the input vector, and σ is the sigmoid activation function. The W’s are linear transformation matrices whose parameters need to be learned for each gate and cell memory; the bs are the corresponding bias vector [35]. In this study, we built the structure of LSTM similar to the model described in our previous paper [35]. Namely, the LSTM includes one input layer, two hidden layers with twelve and six neurons, respectively, and one output layer with two neurons, one for each output. The number of epochs was 250, such that the batch size was 150. The initial learning rate of the model was 0.001 with a suitable decay rate to slow down the training after several epochs. 2.4.4. Gradient Boosting Machine Gradient boosting (GBoost) machine is a decision-tree-based ensemble algorithm that combines many weak learners, based on the gradient direction of the loss function, to create one stronger learner. GBoost learns the decision trees, in parallel, by fitting the negative gradients in each iteration. To learn the decision tree, GBoost finds the best split points, which takes a long time, making GBoost inapplicable in large-scale problems [36]. The eXtreme gradient boosting (XGBoost) algorithm is an efficient scalable end-to-end implementation of GBoost, even with billions of examples, using far fewer resources than existing systems [37]. As an ensemble learning algorithm, XGBoost works by establishing many independent learners (or classifiers) through random subsamples of the training samples using the bootstrap aggregation mechanism. This subsampling process is conducted across many iterations, plus the algorithm adds more iterations sequentially to adjust the weights of the weak learners [38]. The booster parameter sets the type of learner. Usually, this is either a tree or a linear function. In the case of trees, the model will consist of an ensemble of trees. In the case of the linear booster, it will be a weighted sum of linear functions. In both cases, the XGBoost calculates the predicted value as 𝑦 𝑖 ̂ = ∑ 𝑘=1 𝐾 𝑓 𝑘 ( 𝑥 𝑖 ) (13) where fk represents the independent learner (or a regression tree), and fk(xi) is the prediction score given by that learner for the ith sample. Then, the set of functions fk in the regression tree can be learned by minimizing the objective function 𝑂𝑏𝑗= ∑ 𝑖=1 𝑛 𝑙( 𝑦 𝑖 , 𝑦 𝑖 ̂ )+ ∑ 𝑘=1 𝐾 Ω( 𝑓 𝑘 ) (14) where l is the loss function during training, and Ω is a term for penalizing the model complexity to avoid model overfitting. It is known that the loss function calculates the difference between the predicted value 𝑦 ̂ and the actual value yi [38]. In this study, we selected the objective function as <logistic>, with a linear booster <gblinear> for simplicity. 2.5. Performance Evaluation of the ML Models Three different performance metrics were used in this study to evaluate each developed ML model’s performance and calculate its forecasting error for each irrigation system. Empirically, the forecasting error is defined as the difference in values between the actual (or observed) values and the predicted values given by the model. This can be mathematically written as 𝑒 𝑡 =| 𝑦 𝑡 ̂ − 𝑦 𝑡 | (15) where et is the forecasting error, 𝑦 𝑡 ̂ is the predicted value, and yt is the actual value, all at the same period t. Generally, forecasting errors can be divided into two kinds of errors, namely residual and prediction errors. The residual errors are calculated using the training dataset, while the prediction errors are calculated using the testing and validation datasets. In this study, we mainly concentrated on calculating the prediction errors using the testing and validating datasets because they are more realistic. Two kinds of prediction errors are employed in this study: Scale-dependent errors. In this kind of error, the forecast errors are on the same scale as the data themselves. The most commonly used scale-dependent errors are root mean square error (RMSE) and the mean absolute error (MAE) [39]. RMSE calculates the square root of the mean of the squares of all errors of all values. In other words, it measures the variance of the residuals. Contrarily, MAE represents the average of the absolute difference between the actual and predicted values in the dataset. In other words, it measures the average of the residuals in the dataset. RMSE is a differentiable function, which makes it easy to perform mathematical operations in comparison to the non-differentiable function, such as MAE. The mathematical formulae of RMSE and MAE can be given as follows: MSE = mean (et2) (16) 𝖱𝖬𝖲𝖤= 𝖬𝖲𝖤 − − − − √ (17) MAE = mean (|et|) (18) Scale-independent errors. In this kind of error, the forecast errors are free scale regardless of the data values being small or large. One of the most commonly used scale-independent errors is the coefficient of determination (usually known as R2). R2 is a performance measure, which provides information about the goodness of fit of a model. In the context of regression, it represents the proportion of the variance in the dependent variable, which is explained by the independent variable [40,41]. Whereas correlation explains the strength of the relationship between an independent and dependent variable, R2 explains to what extent the variance of one variable explains the variance of the other variable. 2.6. Statistical Analysis and ML Hardware and Software Platforms The statistical analysis was conducted using analysis of variance (ANOVA) for data of meteorological variables, date palm yield, WUE, and electrical energy consumption using Statistical Analysis Software, IBM SPSS version 26 (SPSS Inc., Chicago, IL, USA). The Tukey test was used to determine the significant differences among the means at p ˂ 0.05. Design Expert software (DX Version 13, Stat-Ease, Inc., Minneapolis, MN, USA) was used to graph the irrigation experiment data and for optimization of the target parameters and variables. All ML experiments in this study were conducted on an HP workstation PC, Intel Core™ i7-6700 CPU at 3.40 GHz, 16.00 GB RAM ×64 based processor, equipped with an Ubuntu 16.04 operating system with python 3.7 software environment. The ML approaches were developed using the Keras library with an open-source Tensorflow library in the backend [42]. 3. Results and Discussion 3.1. Meteorological Data Description The climate of the Al-Ahsa region is characterized by hot dry summers and mild-to-cool winters. Rain is very scarce almost everywhere in this region. In the study area, no rain was received during summer, and a little rain precipitation was received during January and February. Therefore, rain was not considered in this study due to its scarcity. Table 1 displays the average yearly data of the meteorological variables of sun hour, the minimum, maximum, and average temperature, minimum, maximum, average relative humidity (RH), average wind speed, maximum solar irradiance, average solar irradiance, and solar radiation. The statistical analysis using one-way ANOVA indicated that there were significant differences (p < 0.05) between the years of the experiment regarding the sun hour, temperature, minimum RH, average wind speed, maximum and average solar irradiance, and solar radiation. There was no significant difference for the other variables during the experiment years. Table 1. A comparison among the average yearly values (±standard deviation) of the meteorological variables of the experimental area for the five years. During the experiment years, the coldest month was January with an average daily minimum temperature of 11.62 °C and an average daily maximum temperature of 24.09 °C. The summer season had the hottest months from May to September, and the highest average daily maximum temperature (46.01 °C) was recorded in June, followed by July (45.59 °C). The average daily maximum RH during winter ranged between 73.2 and 63.02%, whereas during summer, it ranged between 46.87 and 29.31%. The average daily minimum RH during winter ranged between 27.1 and 25.2%, whereas during summer, it ranged between 11.12 and 9.51%. The average daily wind speed ranged from 2.71 to 4.29 km. The average daily maximum solar irradiance during winter ranged between 73.2 and 63.02%, whereas during summer, it ranged between 46.87 and 29.31%. The highest average daily solar irradiance was recorded in June (0.978 kW/m2) and the lowest in January (0.662 kW m2). Figure A1 in the Appendix A shows the average daily data of the meteorological variables for five years from 2018 to 2022. 3.2. Irrigation Water Applied Figure 6 shows the average yearly data of the irrigation water and the cumulative irrigation water applied at irrigation levels. The average yearly irrigation water applied upon adjusting the minimum irrigation control setpoints at 40, 50, 60, 70, 80, and 90% of AW was 0.089 ± 0.03, 0.119 ± 0.03, 0.149 ± 0.05, 0.178 ± 0.06, 0.206 ± 0.07, and 0.232 ± 0.08 m3/day/palm, respectively. The average cumulative irrigation water applied at 40, 50, 60, 70, 80, and 90% AW was 33.43 ± 1.22, 43.89 ± 1.76, 54.32 ± 1.89, 64.32 ± 1.57, 75.65 ± 1.68, and 85.65 ± 1.87 m3/year/palm, respectively. The statistical analysis using two-way ANOVA indicated that there were significant differences (p < 0.01) between the irrigation water applied and the cumulative yearly irrigation under different irrigation level treatments and date palm ages. The interaction effect of the irrigation levels and palm ages on the irrigation water applied (Figure 6a) and the cumulative irrigation water (Figure 6b) was plotted on 3D plots using Design Expert software. This interaction was significant at p < 0.01 regarding the daily irrigation water applied and the yearly cumulative irrigation water. The cumulative irrigation water applied in the irrigation level treatments in the current study was within the irrigation level range mentioned in many previous studies [5,9,43,44,45,46]. Figure 6. Amount of daily applied irrigation water (AIW) per date palm tree (a) and cumulative yearly applied irrigation water (CAIW) per date palm tree (b) at different minimum irrigation control setpoints (%AW) and date palm ages during the experiment years from 2018 to 2022. Table 2 shows the reference evapotranspiration (ETo), crop evapotranspiration (ETc), target irrigation area, and the reduction coefficient (Kr) when the optimal amount of irrigation water is applied based on soil moisture sensor-based scheduling controller over the five years of the experiment at optimum WUE and date palm yield. The statistical analysis using one-way ANOVA indicated that there were significant differences (p < 0.05) between the years of the experiment regarding the ETo, ETc, target irrigation area, and Kr at optimum WUE and date palm yield. Table 2. Comparison among average yearly values (±standard deviation) of reference evapotranspiration (ETo), crop evapotranspiration (ETc), target irrigation area, and the reduction coefficient (Kr) at optimum WUE and date palm yield for the five years. 3.3. Yield and Water Use Efficiency Figure 7 displays the effect of irrigation water levels and palm age on the yield (kg/palm) under the micro irrigation systems used. The interaction effect of the irrigation levels and palm age on palm tree yield under SIS (Figure 7a), SDIS (Figure 7b), DIS (Figure 7c), and BIS (Figure 7d) was plotted on 2D plots using Design Expert software. According to ANOVA, the date palm age, the irrigation system, and the irrigation levels applied had a significant impact (p < 0.05) on the yield of the date palm trees tested. Figure 7. Effect of irrigation water levels at the different minimum irrigation control setpoints (%AW) and palm ages (year) on palm tree yield cv. Khalas (kg/palm) under different micro irrigation systems, i.e., (a) subsurface irrigation system, (b) subsurface drip irrigation system, (c) drip irrigation system, and (d) bubbler irrigation system. Figure 7a–d indicated that the date palm trees subjected to SIS and SDIS had the highest yield of 64.31 and 63.28 kg/palm at the irrigation level of 60% AW and 70% AW, followed by DIS (63.2 kg/palm) and BIS (60.19 kg/palm) systems at 80% AW and 90% AW, respectively. The increase in date palm yield at low irrigation levels under SIS and DIS could be due to their high efficiency compared to the surface irrigation systems of DIS and BIS [5,44]. There were no significant differences regarding the palm tree yield when the irrigation level was increased from 60% AW to 90% AW under SIS, from 70% AW to 90% AW under SDIS, and from 80% AW to 90% AW under DIS. On the other hand, there were significant differences in palm tree yield when the level of irrigation was increased from 40% to 90% AW under BIS. The results indicated that the yield of date palm trees decreased until, in the following years, it stopped at an irrigation level of 40% AW under the two irrigation systems of DIS and BIS. This is because, although the date palm trees can withstand prolonged abiotic stresses, including drought, the long-term water stress leads to a significant reduction in their growth and productivity [47,48,49]. Our results revealed that the increased palm tree yield was related to the subsurface irrigation systems’ optimal availability of soil water, which expedites root growth and enhances the uptake of soil nutrients [6,50,51]. Figure 8 displays the effect of irrigation water levels and palm ages on the water use efficiency (WUE, kg/m3) under the micro irrigation systems used. Figure 8a–d indicated that the date palm trees subjected to SIS had the highest WUE of 1.42 kg/m³ at the irrigation level of 40% AW, followed by SDIS with 1.22 kg/m³ at 50% AW. The highest WUE values were 0.69 and 0.65 kg/m³ at the irrigation level of 70% AW and 80% AW for DIS and BIS, respectively. This is because the use of SIS and SDIS leads to higher yields with lower water consumption; SIS and SDIS also provide more stable irrigation water conditions for optimal root system growth [52]. The highest yield and WUE were reported in date palm cvs. Figure 8. Effect of irrigation water levels at the different minimum setpoints (%AW) and palm ages (year) on water use efficiency (WUE, kg/palm) under different micro irrigation systems, i.e., (a) subsurface irrigation system, (b) subsurface drip irrigation system, (c) drip irrigation system, and (d) bubbler irrigation system, of date palm cv. Khalas. Although the date palm trees consumed a low amount of irrigation water under SIS and SDIS, this amount was highly efficient for fruit production. This is because most of the irrigation water applied through subsurface irrigation systems is utilized by the palm [53]. SIS and SDIS not only minimize the runoff but also improve soil nutrient uptake and prevent irrigation water loss through evaporation [50,51]. In addition, the drainage losses and evaporation are negligible, and the wetted surface spreads across the entire root zone of the tree [5]. The findings in the current study were similar to those reported in previous studies [5,44]. 3.4. Parameters’ Optimization The optimum WUE and date palm yield were achieved in the current study by applying the optimum irrigation water and solar PV energy requirements. The optimum irrigation water and solar PV energy requirements were determined by optimizing the deficit irrigation water level (% AW) under each micro irrigation system. The objective of this optimization is to achieve the optimum results in the shortest time, conserve water, reduce the photovoltaic energy required, achieve the highest water efficiency and date palm yield, and decrease the irrigation cost. The desirability function approach helps analyze experiments where the multiple responses must be optimized simultaneously [54]. The irrigation level is desired to be as small as possible to decrease the irrigation cost while maintaining date palm yield and WUE. The optimization criterion determined the optimum irrigation level for each irrigation system separately. In this study, we executed two criteria to optimize the irrigation water and energy requirements for optimum WUE and optimum palm yield. The first criterion was to minimize the irrigation water and energy requirements and maximize the WUE using the minimization of the irrigation level. The second criterion was to minimize the irrigation water and energy requirements and maximize the date palm yield using the minimization of the irrigation level. The two criteria were implemented at date palm ages equal to 14, 15, 16, 17, and 18 years. Table 3 summarizes the constraints imposed by the two criteria for optimizing irrigation water and energy requirements for optimum WUE and date palm yield. Table 3. Constraints for optimizing irrigation level (IL), applied irrigation water (AIW), electrical energy consumption (EEC), water use efficiency (WUE), date palm yield (DPY) at date palm age (DPA) equal to each age (EEA) of 14, 15, 16, 17, and 18 years, under two criteria. The best solutions for satisfying the optimization criteria are shown in Table 4. In this study, the nearest irrigation level to the irrigation level that was found for satisfying the optimization criteria was used to determine the optimum parameters. Based on these optima, the datasets were prepared to develop the ML prediction models. Table 4 shows the average values of water use efficiency (WUE), date palm yield, irrigation water applied at optimum WUE, irrigation water applied at optimum yield, the electrical energy consumed at optimum WUE, the electrical energy consumed at optimum yield under micro irrigation systems, and date palm ages. Table 4. The average values (± standard deviation) of water use efficiency (WUE), date palm yield, applied irrigation water at optimum WUE (AIW1), applied irrigation water at optimum yield (AIW2), the electrical energy consumed at optimum WUE (EEC1), the electrical energy consumed at optimum yield (EEC2) under micro irrigation systems, and date palm ages. 3.5. Variables’ Correlation Figure 9 shows the correlation among the meteorological variables (sun hour, the minimum, maximum, and average temperature, minimum, maximum, and average RH, average wind speed, maximum solar irradiance, average solar irradiance, and solar radiation), irrigation water applied at optimum water use efficiency and optimum palm yield, and electrical energy consumption at optimum water use efficiency and optimum palm yield. The darker blue color indicates the highly positive correlation between the variables and the parameters. The darker red color indicates the highly negative correlation between the variables and the parameters. The light color indicates that there is no correlation between the variables and the parameters. Figure 9 indicates a positive significant correlation with a correlation coefficient ranging from 0.312 to 0.948 among the sun hour, the maximum temperature, the minimum temperature, the average temperature, average wind speed, maximum solar irradiance, average solar irradiance, and solar radiation, irrigation water applied at optimum water use efficiency and optimum palm yield, and electrical energy consumption at optimum water use efficiency and optimum palm yield. This table also indicates a significant correlation with a correlation coefficient ranging from −0.344 to −0.748 among maximum RH, minimum RH, and average RH, irrigation water applied at optimum water use efficiency and optimum palm yield, and electrical energy consumption at optimum water use efficiency and optimum palm yield. The relation between the meteorological variables and irrigation water and energy requirements obtained in the present study is similar to many previous studies [6,9,13,55]. Figure 9. The correlation among the meteorological variables, irrigation water applied, and electrical energy consumption. SR, T max, T min, T avg, RH max, RH min, RH avg, WS avg, SI max, SI avg, SR, AIW1 and AIW2, and EEC1 and EEC2 refer to sun hour, the maximum temperature, minimum temperature, average temperature, maximum RH, minimum RH, average RH, average wind speed, maximum solar irradiance, average solar irradiance, solar radiation, reference evapotranspiration, crop evapotranspiration, applied irrigation water at optimum water use efficiency and optimum palm yield, and electrical energy consumption at optimum water use efficiency and optimum palm yield, respectively. 3.6. Evaluation of the Prediction Models Based on the results of the irrigation experiments, we selected the data of optimum irrigation water amount that presented significant optimum values of water use efficiency (WUE) (the first option) or optimum yields (the second option) to develop the LR, SVR, LSTM, and XGBoost prediction models for all micro irrigation systems. The deficit irrigation percentages selected based on the optimum WUE and optimum yield were 40% and 60% AW for SIS, 50% and 70% AW for SDIS, 70% and 80% AW for DIS, and 110% and 125% AW for BIS, respectively. These parameters were selected to predict the irrigation water requirements and the electrical energy requirements when the target is to achieve optimum WUE and when the target is to achieve optimum crop yield using solar-powered micro irrigation systems (SIS, SDIS, DIS, and BIS). This will conserve irrigation water and produce optimum yields in arid regions where water scarcity is a significant concern [5,6,9,44]. The evaluation results shown in Table 5 and Table 6 are based on the testing dataset only. Table 5. Comparison among evaluation values of three performance metrics for ML models based on the testing dataset for predicting the irrigation water requirements (IWR1) and the electrical energy requirements (EER1) when the target is to achieve the optimum water use efficiency using different solar-powered micro irrigation systems based on limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age. Table 6. Comparison among evaluation values of three performance metrics for ML models based on the testing dataset for predicting the irrigation water requirements (IWR2) and the electrical energy requirements (EER2) when the target is to achieve the optimum date palm yield using different solar-powered micro irrigation systems based on limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age. Table 5 shows the comparison among the ML models for predicting the irrigation water and electrical energy requirements based on limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age, for each irrigation system separately. The evaluation is conducted using three performance metrics, RMSE, MAE, and R2. The lower the value of RMSE and MAE, the higher the accuracy of an ML model. In addition, higher values of R2 that are close to 1.0 are considered optimum. Moreover, Table 6 shows the same comparison among the four ML models but for predicting the irrigation water and electrical energy requirements for each irrigation system separately. 3.7. Analysis of the Prediction Results It is clear from both Table 5 and Table 6 that both the LSTM and XGBoost models outperformed the other two methods, namely the LR and SVR. In addition, the LSTM surpassed XGBoost in accuracy on the level of all irrigation systems. Therefore, we recommend using the LSTM model to predict irrigation water and electrical energy requirements, whether the target is optimum WUE or optimum crop yield through different solar-powered micro irrigation systems. Even though the experimental results identified LSTM as the best ML model, in the following, we will show the advantages and disadvantages of each model based on our observations during experiments. In order to perform a logic analysis, we will compare the performance of the lower two models together and the performance of the higher two models together. 3.7.1. Comparison between LR and SVR These two models are similar, since both of them are based on the standard regression concept; however, there are a few differences. The advantage of using the linear regression approach is that limited data are required to train this model. In addition, during our experiments, it showed less computational complexity compared to other models, particularly when predicting the model’s parameters [56]. However, since the irrigation system parameters are highly nonlinear, with complex changing dynamics, linear regression will be suitable for parameters with linear relationships between the predictor and the target [57]. However, in this case, the model may suffer underperformance for a problem, which is nonlinear [7]. Our study here is not unique in using SVR in sustainable farming; rather, it is used widely in this domain. For example, it was used by Goap et al. in Ref [58] to predict soil moisture content using meteorological data and farm sensing data. The prediction choices are made based on the amount of soil moisture and precipitation to save water resources. In the irrigation management domain, Vij et al. [59] used SVR to automate irrigation forecasts by establishing a hyperplane per dimension. In their study, the class labels are chosen, such that the distance between the hyperplanes utilized to identify the best linear classifier is as little as feasible [7]. In our experiments, we noticed that SVR is simple and more powerful than the standard linear regression model. Moreover, we found SVR to be a very time-efficient technique, even though our data and thereby the feature space are highly dimensional. Since our dataset samples are homogenous and mostly noiseless, SVR has a good performance. However, if the data are noisy and include outliers, it is possible that SVR’s performance will degrade drastically [60]. 3.7.2. Comparison between XGBoost and LSTM XGBoost is a tree-based method; however, the LSTM is a neural-network-based model. XGBoost is an ensemble of trees, where each tree is associated with a separate input–output mapping. The final output of the technique represents the weighted sum of the outputs of all the trees (or even linear functions). This process is established in an iterative procedure [61]. In such a sparse environment of trees, XGBoost does not perform well and is very sensitive to outliers because every tree is obliged to fix the defects of predecessor trees. Moreover, it is demonstrated that it is hardly a scalable technique [62]. In contrast, LSTM, or ANN in general, is inspired by the biological neural network in the human brain. ANN simulates neurons and synapses by connecting the artificial neurons. Artificial neurons are typically aggregated into a number of layers, where the connection among layers transmits the input signals from layer to layer. This architecture gives LSTMs more advantages over tree-based methods, such as XGBoost. Recently, a deep architecture for LSTM was developed to model uni-, multi-, and hierarchical time series data in several applications, such as petroleum production [63] and energy consumption [31], to mention a few. In our experiments here, we employed a deep architecture for LSTM, and we found it superior to XGBoost, as shown in Table 5 and Table 6. The superiority in the performance of LSTM over XGBoost and other models is intuitive and logical in the scope of each method’s characteristics. LR fits a straight line (or a plane), which minimizes the discrepancies between the actual values and the predicted ones [64]. SVR transforms the original feature space into a high-dimensional space. It tries to find a linear mapping in the new space as a sum of nonlinear kernel functions in the original space [65]. For both LR and SVR, the assumption of linearity between variables makes both of them quite prone to overfitting and sensitive to outliers, particularly if the data are complex, as is the case in our dataset, which includes 12 input features. Moreover, such decision boundary-based models, such as the SVR, will not perform well, especially when the dataset has noise and where the target classes may overlap [31]. In addition to the human-brain-like architecture, LSTM has more properties, which make it very suitable for handling sequential data, such as the meteorological data we have here. First, they can remember information for longer periods; therefore, they are capable of handling long-term dependencies among historical data [63]. Second, they can learn high-level representations, which capture the structure of the data, making LSTMs very efficient for modeling complex sequential data. These reasons make LSTMs the most powerful neural network technique, which can achieve forecasting tasks, especially when there is a long-term trend in the data, as in our situation here [66]. Notwithstanding, it is worth mentioning that XGBoost was faster than LSTM in our experiments. Therefore, it is recommended to use XGBoost to achieve feature selection before using LSTM for prediction, which ensures improvement in the overall performance of LSTM [30]. Furthermore, using deep architecture or more hidden layers in LSTM will improve the performance drastically. 3.8. Validation of the Best ML Model Based on the performance evaluation of the ML models developed, the LSTM was used to predict the optimum irrigation water requirement based on the limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age of 18 years, for each micro irrigation system used. Table 7 shows the evaluation of the LSTM model at the validation phase for predicting the irrigation water and energy requirements when the target is to achieve optimal WUS and when the target is to achieve optimal date palm yield. This validation was conducted to ensure that the LSTM model can accurately predict the irrigation water and energy requirements based on the input variables. The evaluation metrics’ values indicated that the LSTM model can efficiently predict the irrigation water and energy requirements, as shown in Table 7. Table 7. Evaluation values of three performance metrics for LSTM models based on the validation dataset for predicting the irrigation water requirements (IWR1) and the electrical energy requirements (EER1) for optimum water use efficiency and for predicting the irrigation water requirements (IWR2) and the electrical energy requirements (EER2) for optimum date palm yield using the solar-powered micro irrigation systems. Figure 10 compares the observed irrigation water applied and the predicted water requirements under the irrigation systems of SIS (Figure 10a), SDIS (Figure 10b), DIS (Figure 10c), and BIS (Figure 10d) using the LSTM prediction model developed based on the limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age, when the target is to achieve optimum WUE. Figure 10. Observed vs. predicted values of irrigation water requirements (IWR1) for optimum water use efficiency under (a) subsurface irrigation system, (b) subsurface drip irrigation system, (c) drip irrigation system, and (d) bubbler irrigation system. Figure 11 compares the observed irrigation water applied and the predicted water requirements under the irrigation systems of SIS (Figure 11a), SDIS (Figure 11b), DIS (Figure 11c), and BIS (Figure 11d) using the LSTM prediction model developed based on the limited meteorological data, i.e., average temperature, RH, wind speed, solar irradiance, and date palm age, when the target is to achieve optimum WUE. The predicted and the observed irrigation water requirements were approximately similar for the majority of the required amounts, where the predicted irrigation water requirements curve was almost identical to the observed irrigation water applied curve under all irrigation systems throughout the year, as shown in Figure 10 and Figure 11. Figure 11. Observed vs. predicted values of electrical energy requirements (EER1) for optimum energy use under (a) subsurface irrigation system, (b) subsurface drip irrigation system, (c) drip irrigation system, and (d) bubbler irrigation system. 4. Conclusions Precision irrigation management is a critical issue for ensuring agricultural sustainability in countries with land and water shortages. In this study, we developed four machine-learning models, namely linear regression, support vector regression, the LSTM neural network, and XGBoost. We employed these models to predict the optimum irrigation water and energy requirements for date palm irrigation. In order to achieve this target, we prepared a dataset, which included limited meteorological data, i.e., average temperature, RH, wind speed, and solar irradiance from 2018 to 2022, and date palm age in these years, actual irrigation water applied, and energy consumed by four surface and subsurface solar-powered micro irrigation systems to achieve the optimum water use efficiency and date palm yield. In order to perform a fair evaluation, we utilized 60%, 20%, and 20% of the overall dataset in training, testing, and validating, respectively, the ML models. The empirical results indicated that the irrigation levels at the minimum irrigation control setpoints of 40% and 60% AW for SIS, 50% and 70% AW for SDIS, 70% and 80% AW for DIS, and 80% and 90% AW for BIS, respectively, achieved optimum WUE and optimum yield. Based on the evaluation of the ML models developed, the best model for predicting the irrigation water and energy requirements for achieving optimum WUE and yield targets was the LSTM, followed by XGBoost. The validation result of the LSTM model showed its ability to predict the water and energy requirements for all irrigation systems with high accuracy based on the limited meteorological variables and date palm tree ages. However, this study was performed in only one cultivar of date palm (Khalas cv.), and the irrigation water and energy requirements of irrigation systems could be different for drought-resistant or other date palm cultivars under different conditions. Therefore, further study is needed to train the ML models to consider other conditions not addressed in this study. Future research will concentrate on more date palm cultivars and irrigation methods to improve the ML models developed, which could also be adapted to predict the irrigation water and energy requirements for other cultivars of agricultural and economic importance or other perennial fruit trees. Author Contributions Conceptualization, M.M. and A.S.; methodology, M.M., A.S. and H.H.; engineering design, M.M.; software, M.M., A.S. and H.H.; system manufacturing, M.M.; validation, M.M.; formal analysis, M.M., A.S. and H.H.; investigation, M.M., A.S. and H.H.; data curation, M.M.; writing—original draft preparation, M.M., A.S. and H.H.; writing—review and editing, M.M., A.S. and H.H.; visualization, M.M.; project administration, M.M.; funding acquisition, M.M., A.S. and H.H. All authors have read and agreed to the published version of the manuscript. Funding This research was funded by Deputyship for Research & Innovation, Ministry of Education in Saudi Arabia: Grant No. INST089. Data Availability Statement The data that support the findings of this study are available from the corresponding author, [M.M.], upon reasonable request. Acknowledgments The authors extend their appreciation to the Deputyship for Research & Innovation, Ministry of Education in Saudi Arabia, for funding this research work through project number (INST089). Conflicts of Interest All authors declare no conflict of interest. Nomenclature AI artificial intelligence AIW applied irrigation water ANN artificial neural network AW available water BIS bubbler irrigation CAIW cumulative applied irrigation water DIS drip irrigation DPA date palm age DPY date palm yield EEA equal to each age EEC electrical energy consumption EER electrical energy requirements FC field capacity IL irrigation level Imp current at maximum power Isc current at short circuit IWR Kr irrigation water requirements reduction factor LR linear regression LSTM long short-term memory MAE mean absolute error ML machine learning Pmax maximum power PV photovoltaic system PWM pulse-width modulation PWP permanent wilting point R2 coefficient of determination RH avg average RH RH max maximum RH RH min minimum RH RMSE root mean square error SBIS sensor-based irrigation scheduling SDIS subsurface drip irrigation SH sun hour SI avg average solar irradiance SI max maximum solar irradiance SIS subsurface irrigation system SPI solar pumping inverter SR solar radiation SVR support vector regression T avg average temperature T max maximum temperature T min minimum temperature UAW unavailable water VFD variable-frequency Vmp voltage at the maximum power Voc voltage at open circuit VSWC volumetric soil water content WS avg average wind speed WUE water use efficiency XGBoost extreme gradient boosting Appendix A Figure A1 shows the average daily data of the meteorological variables, i.e., the maximum temperature, minimum temperature, average temperature, maximum solar irradiance, average solar irradiance, average wind speed, and average RH, for the five years from 1 January to 31 December 2022 in the experimental area using the cloud-based IoT platform. Figure A1. Average daily values of the maximum temperature (T max), minimum temperature (T min), average temperature (T avg), maximum solar irradiance (IR max), average solar irradiance (IR avg), average wind speed, and average RH for the five years from 1 January to 31 December 2022. References FAO. Water for Sustainable Food and Agriculture Water for Sustainable Food and Agriculture. Rep. Prod. G20 Pres. Ger. 2017, 10–15. Available online: http://www.fao.org/3/i7959e/i7959e.pdf (accessed on 1 February 2023). Talaviya, T.; Shah, D.; Patel, N.; Yagnik, H.; Shah, M. Implementation of Artificial Intelligence in Agriculture for Optimisation of Irrigation and Application of Pesticides and Herbicides. Artif. Intell. Agric. 2020, 4, 58–73. [Google Scholar] [CrossRef] Calzadilla, A.; Rehdanz, K.; Tol, R.S.J. Water Scarcity and the Impact of Improved Irrigation Management: A Computable General Equilibrium Analysis. Agric. Econ. 2011, 42, 305–323. [Google Scholar] [CrossRef] Change, IPCC Climate. Impacts, Adaptation, and Vulnerability: Contribution of Working Group II to the Fifth Assessment Report of the Intergovernmental Panel on Climate Change. Intergov. Panel Clim. Chang. 2014, 1–44. Available online: https://www.cambridge.org/core/books/climate-change-2014-impacts-adaptation-and-vulnerability-part-a-global-and-sectoral-aspects/1BE4ED76F97CF3A75C64487E6274783A (accessed on 1 March 2023). Ahmed Mohammed, M.E.; Refdan Alhajhoj, M.; Ali-Dinar, H.M.; Munir, M. Impact of a Novel Water-Saving Subsurface Irrigation System on Water Productivity, Photosynthetic Characteristics, Yield, and Fruit Quality of Date Palm under Arid Conditions. Agronomy 2020, 10, 1265. [Google Scholar] [CrossRef] Mohammed, M.; Sallam, A.; Munir, M.; Ali-Dinar, H. Effects of Deficit Irrigation Scheduling on Water Use, Gas Exchange, Yield, and Fruit Quality of Date Palm. Agronomy 2021, 11, 2256. [Google Scholar] [CrossRef] Abioye, E.A.; Hensel, O.; Esau, T.J.; Elijah, O.; Abidin, M.S.Z.; Ayobami, A.S.; Yerima, O.; Nasirahmadi, A. Precision Irrigation Management Using Machine Learning and Digital Farming Solutions. AgriEngineering 2022, 4, 70–103. [Google Scholar] [CrossRef] Sagheer, A.; Mohammed, M.; Riad, K.; Alhajhoj, M. A Cloud-Based IoT Platform for Precision Control of Soilless Greenhouse Cultivation. Sensors 2021, 21, 223. [Google Scholar] [CrossRef] Mohammed, M.; Riad, K.; Alqahtani, N. Efficient Iot-Based Control for a Smart Subsurface Irrigation System to Enhance Irrigation Management of Date Palm. Sensors 2021, 21, 3942. [Google Scholar] [CrossRef] Abdelouahhab, Z.; Arias-Jimenez, E.J. Date Palm Cultivation; Food and Agriculture Organization (FAO): Rome, Italy, 1999. [Google Scholar] Food and Agriculture Organization of the United (FAO); International Center for Advanced Mediterranean Agronomic Studies (CIHEAM). Workshop on “Irrigation of Date Palm and Associated Crops”; Faculty of Agriculture, Damascus University: Damascus, Syrian, 27–30 May 2008; pp. 27–30. ISBN 9789251059975. [Google Scholar] Wen, Y.; Shang, S.; Yang, J. Optimization of Irrigation Scheduling for Spring Wheat with Mulching and Limited Irrigation Water in an Arid Climate. Agric. Water Manag. 2017, 192, 33–44. [Google Scholar] [CrossRef] Eltawil, M.A.; Alhashem, H.A.; Alghannam, A.O. Design of a Solar PV Powered Variable Frequency Drive for a Bubbler Irrigation System in Palm Trees Fields. Process Saf. Environ. Prot. 2021, 152, 140–153. [Google Scholar] [CrossRef] Rehman, S.; Sahin, A.Z. Performance Comparison of Diesel and Solar Photovoltaic Power Systems for Water Pumping in Saudi Arabia. Int. J. Green Energy 2015, 12, 702–713. [Google Scholar] [CrossRef] Cervera-Gascó, J.; Perea, R.G.; Montero, J.; Moreno, M.A. Prediction Model of Photovoltaic Power in Solar Pumping Systems Based on Artificial Intelligence. Agronomy 2022, 12, 693. [Google Scholar] [CrossRef] Nam, S.; Kang, S.; Kim, J. Maintaining a Constant Soil Moisture Level Can Enhance the Growth and Phenolic Content of Sweet Basil Better than Fluctuating Irrigation. Agric. Water Manag. 2020, 238, 106203. [Google Scholar] [CrossRef] Mohammed, M.; El-Shafie, H.; Munir, M. Development and Validation of Innovative Machine Learning Models for Predicting Date Palm Mite Infestation on Fruits. Agronomy 2023, 13, 494. [Google Scholar] [CrossRef] Mohammed, M.; Riad, K.; Alqahtani, N. Design of a Smart IoT-Based Control System for Remotely Managing Cold Storage Facilities. Sensors 2022, 22, 4680. [Google Scholar] [CrossRef] [PubMed] Mohammed, M.; Munir, M.; Ghazzawy, H.S. Design and Evaluation of a Smart Ex Vitro Acclimatization System for Tissue Culture Plantlets. Agronomy 2022, 13, 78. [Google Scholar] [CrossRef] Abioye, E.A.; Abidin, M.S.Z.; Mahmud, M.S.A.; Buyamin, S.; AbdRahman, M.K.I.; Otuoze, A.O.; Ramli, M.S.A.; Ijike, O.D. IoT-Based Monitoring and Data-Driven Modelling of Drip Irrigation System for Mustard Leaf Cultivation Experiment. Inf. Process. Agric. 2020, 8, 270–283. [Google Scholar] [CrossRef] Yartu, M.; Cambra, C.; Navarro, M.; Rad, C.; Arroyo, Á.; Herrero, Á. Humidity Forecasting in a Potato Plantation Using Time-Series Neural Models. J. Comput. Sci. 2022, 59, 101547. [Google Scholar] [CrossRef] Chen, A.; Orlov-Levin, V.; Meron, M. Applying High-Resolution Visible-Channel Aerial Imaging of Crop Canopy to Precision Irrigation Management. Agric. Water Manag. 2019, 216, 196–205. [Google Scholar] [CrossRef] Sapankevych, N.; Sankar, R. Time Series Prediction Using Support Vector Machines: A Survey. IEEE Comput. Intell. Mag. 2009, 4, 24–38. [Google Scholar] [CrossRef] Vapnik, V.; Golowich, S.E.; Smola, A. Support Vector Method for Function Approximation, Regression Estimation, and Signal Processing. In Proceedings of the Advances in Neural Information Processing Systems NIPS’96, Proceedings of the 9th International Conference on Neural Information Processing Systems; Jordan, M., Petsche, T., Eds.; MIT Press: Cambridge, MA, USA, 1997; pp. 281–287. Available online: https://cir.nii.ac.jp/crid/1572543025363322368 (accessed on 1 March 2023). Tealab, A. Time Series Forecasting Using Artificial Neural Networks Methodologies: A Systematic Review. Futur. Comput. Inform. J. 2018, 3, 334–340. [Google Scholar] [CrossRef] Montgomery, D.; Jennings, C.; Kulahci, M. Introduction to Time Series Analysis and Forecasting, 2nd ed.; John Wiley and Sons: Hoboken, NJ, USA, 2015; Volume 2, ISBN 978-1-118-74515-1. [Google Scholar] Hochreiter, S.; Schmidhuber, J. Long Short-Term Memory. Neural Comput. 1997, 9, 1735–1780. [Google Scholar] [CrossRef] [PubMed] Jaitly, N.; Senior, A.; Vanhoucke, V.; Nguyen, P.; Sainath, T.; Kingsbury, B.; Hinton, G.; Deng, L.; Yu, D.; Dahl, G.; et al. Deep Neural Networks for Acoustic Modeling in Speech Recognition. IEEE Signal Process. Mag. 2012, 29, 82–97. [Google Scholar] Sutskever, I. Training Recurrent Neural Networks by Diffusion. Ph.D. Thesis, University of Toronto, Toronto, ON, Canada, 2012. Available online: http://www.cs.utoronto.ca/~ilya/pubs/ilya_sutskever_phd_thesis.pdf (accessed on 1 March 2023). Vuong, P.H.; Dat, T.T.; Mai, T.K.; Uyen, P.H.; Bao, P.T. Stock-Price Forecasting Based on XGBoost and LSTM. Comput. Syst. Sci. Eng. 2022, 40, 237–246. [Google Scholar] [CrossRef] Hamdoun, H.; Sagheer, A.; Youness, H. Energy Time Series Forecasting-Analytical and Empirical Assessment of Conventional and Machine Learning Models. J. Intell. Fuzzy Syst. 2021, 40, 12477–12502. [Google Scholar] [CrossRef] Sagheer, A.; Hamdoun, H.; Youness, H. Deep LSTM-Based Transfer Learning Approach for Coherent Forecasts in Hierarchical Time Series. Sensors 2021, 21, 4379. [Google Scholar] [CrossRef] AL-Omran, A.; Eid, S.; Alshammari, F. Crop Water Requirements of Date Palm Based on Actual Applied Water and Penman–Monteith Calculations in Saudi Arabia. Appl. Water Sci. 2019, 9, 69. [Google Scholar] [CrossRef] [Green Version] Clarke, D.; Smith, M.; El-Askari, K. CropWat for Windows; Version 4.2; Southampton University: Southampton, UK, 1998; p. 43. [Google Scholar] Hochreiter, S.; Schmidhuber, J. Bridging Long Time Lags by Weight Guessing and “Long Short-Term Memory”. In Spatiotemporal Models in Biological and Artificial Systems; Silva, F.L., Principe, J.C., Almeida, L.B., Eds.; IOS Press: Amsterdam, Netherlands, 1996; Volume 37, pp. 65–72. [Google Scholar] Ke, G.; Meng, Q.; Finley, T.; Wang, T.; Chen, W.; Ma, W.; Ye, Q.; Liu, T.-Y. LightGBM: A Highly Efficient Gradient Boosting Decision Tree. In Proceedings of the 31st Conference on Neural Information Processing Systems (NIPS), Long Beach, CA, USA, 4 December 2017; Curran Associates 57 Morehouse Lane Red Hook: New York, NY, USA, 2017. [Google Scholar] Chen, T.; Guestrin, C. XGBoost: A Scalable Tree Boosting System. In Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, San Francisco, CA, USA, 13–17 August 2016; pp. 785–794. [Google Scholar] [CrossRef] [Green Version] Chen, M.; Liu, Q.; Chen, S.; Liu, Y.; Zhang, C.-H.; Liu, R. XGBoost-Based Algorithm Interpretation and Application on Post-Fault Transient Stability Status Prediction of Power System. IEEE Access 2019, 7, 13149–13158. [Google Scholar] [CrossRef] Hyndman, R.J.; Koehler, A.B. Another Look at Measures of Forecast Accuracy. Int. J. Forecast. 2006, 22, 679–688. [Google Scholar] [CrossRef] [Green Version] Piepho, H.P. A Coefficient of Determination (R2) for Generalized Linear Mixed Models. Biom. J. 2019, 61, 860–872. [Google Scholar] [CrossRef] Chicco, D.; Warrens, M.J.; Jurman, G. The Coefficient of Determination R-Squared Is More Informative than SMAPE, MAE, MAPE, MSE and RMSE in Regression Analysis Evaluation. PeerJ Comput. Sci. 2021, 7, e623. [Google Scholar] [CrossRef] Abadi, M.; Barham, P.; Chen, J.; Chen, Z.; Davis, A.; Dean, J.; Devin, M.; Ghemawat, S.; Irving, G.; Isard, M.; et al. Tensor-Flow: Large-Scale Machine Learning on Heterogeneous Systems. In Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI ’16), Savannah, GA, USA, 2–4 November 2016; USENIX Association: Savannah, GA, USA, 2015; Volume 81, pp. 265–283. [Google Scholar] Adil, M.; Samia, H.; Sakher, M.; El Hafed, K.; Naima, K.; Kawther, L.; Tidjani, B.; Abdesselam, B.; Bensalah, L.M.; Yamina, K.; et al. Date Palm (Phoenix dactylifera L.) Irrigation Water Requirements as Affected by Salinity in Oued Righ Conditions, North Eastern Sahara, Algeria. Asian J. Crop Sci. 2015, 7, 174–185. [Google Scholar] [CrossRef] [Green Version] Alnaim, M.A.; Mohamed, M.S.; Mohammed, M.; Munir, M. Effects of Automated Irrigation Systems and Water Regimes on Soil Properties, Water Productivity, Yield and Fruit Quality of Date Palm. Agriculture 2022, 12, 343. [Google Scholar] [CrossRef] Ismail, S.M.; Al-Qurashi, A.D.; Awad, M.A. Optimization of Irrigation Water Use, Yield, and Quality of “Nabbut-Saif” Date Palm under Dry Land Conditions. Irrig. Drain. 2014, 63, 29–37. [Google Scholar] [CrossRef] Ghazzawy, H.S.; Alqahtani, N.; Munir, M.; Alghanim, N.S.; Mohammed, M. Combined Impact of Irrigation, Potassium Fertilizer, and Thinning Treatments on Yield, Skin Separation, and Physicochemical Properties of Date Palm Fruits. Plants 2023, 12, 1003. [Google Scholar] [CrossRef] [PubMed] Tripler, E.; Shani, U.; Mualem, Y.; Ben-Gal, A. Long-Term Growth, Water Consumption and Yield of Date Palm as a Function of Salinity. Agric. Water Manag. 2011, 99, 128–134. [Google Scholar] [CrossRef] Shareef, H.J.; Alhamd, A.S.; Naqvi, S.A.; Eissa, M.A. Adapting Date Palm Offshoots to Long-Term Irrigation Using Groundwater in Sandy Soil. Folia Oecologica 2021, 48, 55–62. [Google Scholar] [CrossRef] Ali-Dinar, H.; Mohammed, M.; Munir, M. Effects of Pollination Interventions, Plant Age and Source on Hormonal Patterns and Fruit Set of Date Palm (Phoenix Dactylifera L.). Horticulturae 2021, 7, 427. [Google Scholar] [CrossRef] Bainbridge, D.A. Deep Pipe Irrigation. The Overstory# 175; Permanent Agriculture Resources: Holualoa, HI, USA, 2006; Volume 175, p. 6. [Google Scholar] Manzoor Alam, S. Nutrient Uptake by Plants Under Stress Conditions. Handb. Plant Crop Stress 1999, 2, 285–313. [Google Scholar] [CrossRef] Sinobas, L.R.; Rodríguez, M.G.; Lee, T.S. A Review of Subsurface Drip Irrigation and Its Management. In Water Quality, Soil and Managing Irrigation of Crops; InTech: Rijeka, Croatia, 2012; pp. 171–194. [Google Scholar] Albasha, R.; Mailhol, J.C.; Cheviron, B. Compensatory Uptake Functions in Empirical Macroscopic Root Water Uptake Models—Experimental and Numerical Analysis. Agric. Water Manag. 2015, 155, 22–39. [Google Scholar] [CrossRef] [Green Version] Mohammed, M.; Munir, M.; Aljabr, A. Prediction of Date Fruit Quality Attributes during Cold Storage Based on Their Electrical Properties Using Artificial Neural Networks Models. Foods 2022, 11, 1666. [Google Scholar] [CrossRef] [PubMed] Allen, R.G.; Pereira, L.S.; Pereira, L.S.; Raes, D.; Smith, M. Crop Evapotranspiration-Guidelines for Computing Crop Water Requirements-FAO Irrigation and Drainage Paper 56; Fao: Rome, Italy, 1998; Volume 300, p. D05109. [Google Scholar] Torres-Sanchez, R.; Navarro-Hellin, H.; Guillamon-Frutos, A.; San-Segundo, R.; Ruiz-Abellón, M.C.; Domingo-Miguel, R. A Decision Support System for Irrigation Management: Analysis and Implementation of Different Learning Techniques. Water 2020, 12, 548. [Google Scholar] [CrossRef] [Green Version] Kumar, A.; Surendra, A.; Mohan, H.; Muthu Valliappan, K.; Kirthika, N. Internet of Things Based Smart Irrigation Using Regression Algorithm. In Proceedings of the 2017 International Conference on Intelligent Computing, Instrumentation and Control Technologies, ICICICT, Kerala, India, 6–7 July 2017; Volume 2018-Janua, pp. 1652–1657. [Google Scholar] Goap, A.; Sharma, D.; Shukla, A.K.; Rama Krishna, C. An IoT Based Smart Irrigation Management System Using Machine Learning and Open Source Technologies. Comput. Electron. Agric. 2018, 155, 41–49. [Google Scholar] [CrossRef] Vij, A.; Vijendra, S.; Jain, A.; Bajaj, S.; Bassi, A.; Sharma, A. IoT and Machine Learning Approaches for Automation of Farm Irrigation System. Procedia Comput. Sci. 2020, 167, 1250–1257. [Google Scholar] [CrossRef] Yu, X.; Wang, Y.; Wu, L.; Chen, G.; Wang, L.; Qin, H. Comparison of Support Vector Regression and Extreme Gradient Boosting for Decomposition-Based Data-Driven 10-Day Streamflow Forecasting. J. Hydrol. 2020, 582, 124293. [Google Scholar] [CrossRef] Zhang, L.; Bian, W.; Qu, W.; Tuo, L.; Wang, Y. Time Series Forecast of Sales Volume Based on XGBoost. J. Phys. Conf. Ser. 2021, 1873, 012067. [Google Scholar] [CrossRef] Bhakta, A.; Kim, Y.; Cole, P. Comparing Machine Learning-Centered Approaches for Forecasting Language Patterns During Frustration in Early Childhood. arXiv 2021, arXiv:2110.15778. [Google Scholar] [CrossRef] Sagheer, A.; Kotb, M. Time Series Forecasting of Petroleum Production Using Deep LSTM Recurrent Networks. Neurocomputing 2019, 323, 203–213. [Google Scholar] [CrossRef] Mutombo, N.M.-A.; Numbi, B.P. Development of a Linear Regression Model Based on the Most Influential Predictors for a Research Office Cooling Load. Energies 2022, 15, 5097. [Google Scholar] [CrossRef] Cortez, P.; Donate, J.P. Evolutionary Support Vector Machines for Time Series Forecasting. In Artificial Neural Networks and Machine Learning–ICANN 2012, Proceedings of the 22nd International Conference on Artificial Neural Networks, Lausanne, Switzerland, 11–14 September 2012; Springer: Berlin/Heidelberg, Germany, 2012; Volume 7553, pp. 523–530. [Google Scholar] [CrossRef] [Green Version] Sagheer, A.; Kotb, M. Unsupervised Pre-Training of a Deep LSTM-Based Stacked Autoencoder for Multivariate Time Series Forecasting Problems. Sci. Rep. 2019, 9, 19038. [Google Scholar] [CrossRef] [PubMed] [Green Version]         Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Mohammed, M.; Hamdoun, H.; Sagheer, A. Toward Sustainable Farming: Implementing Artificial Intelligence to Predict Optimum Water and Energy Requirements for Sensor-Based Micro Irrigation Systems Powered by Solar PV. Agronomy 2023, 13, 1081. https://doi.org/10.3390/agronomy13041081 AMA Style Mohammed M, Hamdoun H, Sagheer A. Toward Sustainable Farming: Implementing Artificial Intelligence to Predict Optimum Water and Energy Requirements for Sensor-Based Micro Irrigation Systems Powered by Solar PV. Agronomy. 2023; 13(4):1081. https://doi.org/10.3390/agronomy13041081 Chicago/Turabian Style Mohammed, Maged, Hala Hamdoun, and Alaa Sagheer. 2023. \"Toward Sustainable Farming: Implementing Artificial Intelligence to Predict Optimum Water and Energy Requirements for Sensor-Based Micro Irrigation Systems Powered by Solar PV\" Agronomy 13, no. 4: 1081. https://doi.org/10.3390/agronomy13041081 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   9 Web of Science   6 Scopus   9 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0k 2k 4k 6k 8k For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Agronomy, EISSN 2073-4395, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 9:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: The provided paper focuses on the application of machine learning and remote sensing technologies in strawberry phenotyping and management, specifically covering topics such as fruit detection, fruit maturity assessment, fruit quality evaluation, and yield prediction. The outline point relates to machine learning-based image analysis for strawberry disease detection and discusses research on strawberry powdery mildew, anthracnose crown rot, verticillium wilt, and gray mold. The selected text provides a concise summary of the key points raised in the paper relevant to the specific outline point, outlining the advancements, challenges, and potential applications of machine learning in strawberry disease detection. Therefore, the provided text is highly relevant to the outline point and captures the essence of the paper's contribution to this area.
  Relevance Score: 0.9514805522404227
  Inline Citation: >
  Explanation: A concise summary of the key points of the paper as they relate to the outline point is given below:

* Automated counting of fruits and flowers from images is a critical step in autonomous robotic harvesting and yield prediction. Traditional image segmentation methods use morphological operations to generate binary images and separate fruits from the background according to the similarity of color, spatial texture, and geometric shape. However, this segmentation method is not yet robust and stable enough for application in commercial settings that have variable lighting conditions, observation angles, object orientations, relative positions, and various clustering and occlusion situations.

* CNNs have evolved to be the most powerful approach for solving target identification and classification problems. The superiority of a CNN in image recognition lies in its ability to extract increasingly complex visual concepts and features through hierarchical structures.

* Some researchers designed an intelligent strawberry-grading system by integrating conveyer belts, cameras, and other auxiliary devices and employing multi-attribute decision-making theory to grade the strawberry fruit into three or four classes based on color, shape (13 feature parameters), and size. The final accuracy was above 90%.

* Liming et al. designed an intelligent strawberry-grading system by integrating conveyer belts, cameras, and other auxiliary devices and employing multi-attribute decision-making theory to grade the strawberry fruit into three or four classes based on color, shape (13 feature parameters), and size. The final accuracy was above 90%.

* Mahendra et al. compared seven types of features and used the SVM classifier to categorize the fruits into two groups: good and damaged. They found that the speeded-up robust features (SURF) were most effective in classification, with an accuracy of 90.73%. Sustika et al. evaluated the capability of six CNN architectures (the baseline CNN, AlexNet, GoogLeNet, VGGNet, Xception, and MobileNet) for the binary classification (good or bad) of strawberry fruit and its classification into four grading levels (1–4 ranking) using RGB images. The study indicated that VGGNet’s performance was the best, producing 96.49% and 89.12% accuracy for the binary and the four-grade-level classification, respectively.

* Image texture analysis has also revealed the importance of certain features, including roundness, smoothness, and concavity of strawberries, which are highly correlated with maturity. For example, a Convolutional Neural Network (CNN) using a deep convolutional neural network (DCNN) model to identify strawberry ripeness by identifying and counting strawberry flowers and immature and mature fruits from UAV high-resolution images obtained at two heights (2 m and 3 m). The results showed that the mean average precision was higher at 2 m (83%) than at 3 m (72%).

* Hyperspectral images are useful for evaluating internal fruit quality attributes, such as soluble solid content, acidity, color, and postharvest quality attributes, such as firmness. Near-infrared (NIR) spectroscopy and multiple/hyperspectral imaging technology have been effective for evaluating internal fruit quality attributes in a non-contact manner. A difference between spectroscopy and imaging is that the former can only obtain single-point information, while the latter can provide spatial distribution.

* Fruit shape is a critical parameter affecting the esthetic appearance and marketability of strawberries. Basic shape descriptors, such as length, width, and aspect ratio, can be manually measured with, for example, a vernier caliper. However, this method is not only labor intensive and time consuming but also limited in capturing the complex and multi-dimensional aspects of shape and uniformity.

* Ishikawa et al. extracted four types of shape descriptors from RGB images taken by a digital camera: (1) measured values, including contour line length, fruit length and width, and fruit width/length ratio; (2) ellipse similarity (ES) index, including the optimum ellipse area ratio and the boundary length ratio, which indicate the ellipse similarity of fruits; (3) elliptic Fourier descriptors (EFDs); and (4) chain code subtraction (CCS).

* Oo and Aung proposed a simpler but efficient method for strawberry size estimation and shape classification based on RGB images only three parameters (diameter, length, and apex angle) were imported into a three-layer neural network for four classes. The estimation accuracy of diameter and length was 94% and 93%, respectively, for strawberries without calyx occlusion and 94% and 89% for those with calyx occlusion. The classification was between 94% and 97%. Feldmann et al. further extracted 68 strawberry fruit shape features of four types (linear and geometric descriptors, outline-based descriptors, landmark-based descriptors, and binary-image-pixel-based descriptors) from digital images and introduced a method called principal progression of k clusters (PPKC), which can automatically discover potential shape classes. Relationships between four shape categories and features were built and used for the classification. The accuracy varied from 68% to 99%.

* Strawberry harvesting can extend for many months depending on the growing system and environment, with dramatic variation in weekly yields. Forecasting strawberry yield ahead of time can help growers formulate labor/equipment allocation strategies during the harvesting period. Since weather fluctuation is a key factor, many studies have been conducted on how weather parameters (e.g., solar radiation, wind, temperature) influence strawberry yield. These significant influential factors were combined with other yield-associated traits as input for statistical models and machine learning methods to predict strawberry yield.

* For example, Misaghi et al. applied three neural network models (multilayer perception (MLP), generalized feedforward neural network (GFNN), and modular neural network) for strawberry yield prediction using vegetation indices (normalized difference vegetation index (NDVI) and Soil Adjusted Vegetation Index (SAVI)) and soil characteristic parameters, with up to 94% final accuracy.

* Remote sensing data acquisition and machine learning data analysis are already advancing the prospects of strawberry precision agriculture and phenomics applications, there is still an urgent need for further exploration. For example, questions related to how to expand the robustness and transferability of the statistical and machine learning models connecting fruit quality to image-based spectral and geometrical information are still active research topics. Deep learning is also very promising for further advances in fruit quality assessment. A deep learning method may enable obtaining multiple fruit quality parameters, such as shape, size, color, and internal attributes, simultaneously, which can help build a comprehensive evaluation system for strawberries and promote the automation of postharvest grading processes.

 Full Text: >
This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all     Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Remote Sensing All Article Types Advanced   Journals Remote Sensing Volume 13 Issue 3 10.3390/rs13030531 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editor Alfredo Huete Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 10693 Citations 44 Table of Contents Abstract Introduction Remote Sensing Platforms and Sensors Machine and Deep Learning Analysis Methods Fruit Traits Leaf and Canopy Traits Abiotic/Biotic Stress Detection Discussion and Outlook Conclusions Author Contributions Funding Institutional Review Board Statement Informed Consent Statement Data Availability Statement Conflicts of Interest Appendix A Appendix B References Altmetric share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessEditor’s ChoiceReview Remote Sensing and Machine Learning in Crop Phenotyping and Management, with an Emphasis on Applications in Strawberry Farming by Caiwang Zheng 1,2,*, Amr Abd-Elrahman 1,2 and Vance Whitaker 1,3 1 Gulf Coast Research and Education Center, University of Florida, Wimauma, FL 33598, USA 2 School of Forest Resources and Conservation, University of Florida, Gainesville, FL 32603, USA 3 Department of Horticultural Sciences, University of Florida, Gainesville, FL 32611, USA * Author to whom correspondence should be addressed. Remote Sens. 2021, 13(3), 531; https://doi.org/10.3390/rs13030531 Submission received: 10 December 2020 / Revised: 18 January 2021 / Accepted: 27 January 2021 / Published: 2 February 2021 (This article belongs to the Special Issue Digital Agriculture with Remote Sensing) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Measurement of plant characteristics is still the primary bottleneck in both plant breeding and crop management. Rapid and accurate acquisition of information about large plant populations is critical for monitoring plant health and dissecting the underlying genetic traits. In recent years, high-throughput phenotyping technology has benefitted immensely from both remote sensing and machine learning. Simultaneous use of multiple sensors (e.g., high-resolution RGB, multispectral, hyperspectral, chlorophyll fluorescence, and light detection and ranging (LiDAR)) allows a range of spatial and spectral resolutions depending on the trait in question. Meanwhile, computer vision and machine learning methodology have emerged as powerful tools for extracting useful biological information from image data. Together, these tools allow the evaluation of various morphological, structural, biophysical, and biochemical traits. In this review, we focus on the recent development of phenomics approaches in strawberry farming, particularly those utilizing remote sensing and machine learning, with an eye toward future prospects for strawberries in precision agriculture. The research discussed is broadly categorized according to strawberry traits related to (1) fruit/flower detection, fruit maturity, fruit quality, internal fruit attributes, fruit shape, and yield prediction; (2) leaf and canopy attributes; (3) water stress; and (4) pest and disease detection. Finally, we present a synthesis of the potential research opportunities and directions that could further promote the use of remote sensing and machine learning in strawberry farming. Keywords: artificial intelligence; Fragaria; machine learning; phenomics; phenotyping; plant breeding; precision agriculture Graphical Abstract 1. Introduction According to the Food and Agriculture Organization (FAO)’s Future of Food and Agriculture: Alternative Pathways to 2050 report, the global population will reach almost 10 billion in 2050 [1], which mandates a continued increase in crop production. Meanwhile, agriculture is under increasing resource constraints within the context of climate change, with decreasing water and land resources. Precision agriculture is an important approach to help meet this goal of a continuous increase in crop production. Precision agriculture is an operation and management system supported by information technology that makes targeted measurements of plant growth, plant health, soil conditions, and other factors [2,3]. Through the integration of the Global Navigation Satellite System (GNSS), Geographic Information System (GIS), and remote sensing technologies, precision agriculture can help achieve a number of specific goals, such as (1) conduction of farmland surveys; (2) site-specific precision application of fertilizers, pesticides, and irrigation management schemes; and (3) fine-scale monitoring of crop status, soil moisture, diseases, and pests [2]. Implementing informed and science-based decision-making protocols can increase profits and productivity, environmental sustainability, crop quality, and ultimately food security [4]. Recently, applications of precision agriculture have gradually spread throughout the world as the adoption of auto-guidance systems, yield monitoring technology, and variable rate technology (VRT) in agriculture has increased in both developed and developing countries over the past 20 years [5]. Another important application of precision agriculture is in plant phenotyping, particularly within the context of breeding and genetic research. Phenotyping is broadly defined as the acquisition and evaluation of complex plant traits, such as geometric structure, abiotic stress tolerance, disease resistance, yield, and other physiological and biochemical characteristics. The measurement of economically important traits is essential to plant breeding [6]. With the combination of remote sensing, computer vision, and robotics, high-throughput plant phenotyping platforms have been developed. These systems usually use multiple sensors to measure various traits, such as color, texture, plant height, area, volume, degree of wilting, fresh weight, number of flowers/fruits, and quality of fruits [7]. This information enables scientists to establish a connection between genotype and phenotype, thus allowing them to select resilient varieties with high yield potential in the target environment. Of course, the same technologies and similar approaches are also valuable for crop management, specifically determination of nutrient needs, water, and pesticide requirements, as well as the detection of weeds, pathogens, and pests [8]. At present, plant phenotyping is the primary bottleneck in both plant breeding and crop management. Connecting phenotype to genotype in a set of target environments is the basic goal [9]. Next-generation advances in DNA sequencing technology and genome assembly methodology have dramatically increased the throughput and lowered the cost of genotyping. However, connecting this mountain of genomic information to the expression of traits is still a knotty problem [10]. The greatest challenge at present is to rapidly acquire large-scale plant phenotyping data with high dimensionality, density, and accuracy from single molecules to entire organisms. While new phenomics technology has significantly relieved some bottlenecks, many questions remain on how to efficiently define and extract complex traits as well as improve accuracy and throughput [11]. New advances in remote sensing and machine learning have the capacity to solve many of these problems. Strawberry (Fragaria × ananassa) is a very popular fruit among consumers by virtue of its appealing appearance, flavor, and health benefits [12]. The latest statistics from the FAO show that the world’s strawberry yield and cultivated area from 1961 to 2018 grew at annual rates of about 1.82% and 2.44%, respectively (Figure 1). A large portion of the research conducted during this period focused on the medical benefits of strawberries to human health [6]. The high-value market for strawberries has significantly promoted the breeding of new varieties worldwide, including in Europe, Asia, and North America [13], which is now driving the need for high-throughput phenotyping techniques. Accurate and rapid acquisition of heritable traits of interest is critical to improving the strawberry breeding selection accuracy. Remote sensing and machine learning can greatly relieve the heavy burden of manual work for strawberry phenotyping, such as plant height measurement and fruit quality evaluation. How to effectively improve accuracy and throughput is a hot research theme. On the other hand, strawberry is a highly perishable and labor-intensive crop that can benefit greatly from precision agriculture approaches. The fruits have many developmental stages and when ripe are very sensitive to environmental and management conditions. Plant development and fruit production can continually cycle and change over a 6-month period, depending on the growing region. Therefore, real-time and intelligent monitoring of plant health and development as well as fruit quality assessment is essential for crop management and strategy formulation. The combination of remote sensing and machine learning is considered to have huge potential and a broad application space in these areas. Figure 1. Global trends in strawberry yield and harvested area from 1961 to 2018 [14]. In this manuscript, we reviewed the use of remote sensing and machine learning in agricultural applications, especially focusing on the latest advances in strawberry phenotyping and management. The manuscript also presented a synthesis of potential research opportunities and directions that could further support strawberry farming. A rigorous two-step approach was adopted to search and screen the literature related to remote sensing and machine learning applications, with an emphasis on strawberry. Details of the adopted approach and the number of articles on each topic are shown in Appendix A and Figure A1, respectively. 2. Remote Sensing Platforms and Sensors Remote sensing technology has developed rapidly in recent years, with sensors providing higher spatial, temporal, and spectral resolution images. Remotely sensed data are acquired by mounting sensors on multiple platforms, including satellites, unmanned aerial vehicles (drones), and ground-based vehicles. The unparalleled advantage of satellite observation lies in its large area of coverage, which allows for collecting various types of datasets, routinely on a global scale. A summary of agricultural data sources by Huang et al. [15] presented 28 optical and synthetic aperture radar (SAR) satellites for plant vegetation studies, with spatial resolutions varying from 0.3 m to 1 km. Research on the agriculture-related applications of satellite sensors focuses on several aspects, including crop type classification [16], soil property determination [17,18,19], crop mapping and spatial statistics [20], crop yield forecasting and canopy parameter estimation [21], and irrigation/drought evaluation [19,22]. For example, Sentinel-2 remote sensing imagery was used to retrieve various biophysical parameters of winter wheat, including the leaf area index, leaf chlorophyll content, and canopy chlorophyll content, utilizing vegetation indices and radiative transfer modeling [23]. A combination of two indices, enhanced vegetation index (EVI) and vegetation optical depth (VOD), derived from optical (MODIS) and microwave (Soil Moisture Active Passive Satellite, SMAP) remote sensors, respectively, was used to make a prediction of the corn, soybean, and wheat yield on the county scale, with an accuracy of over 76% [24]. In contrast to satellites, unmanned aerial vehicles (UAVs), or drones, can carry low-cost sensors and can operate on a flexible on-demand schedule. Due to higher spatial resolution, low cost, and high maneuverability, drones have become one of the most widely used remote sensing platforms in agriculture. Yang et al. [7] investigated the current progress and future prospects of UAVs as a remote sensing platform by reviewing 96 articles. Radoglou-Grammatikis et al. [25] further made a comprehensive survey of UAV applications in precision agriculture. Currently, non-destructive crop monitoring and smart spraying are two of the primary UAV applications. Moreover, the integration of UAVs, wireless sensor networks (WSNs), and the Internet of Things (IoT) and the maturity of 5th-generation (5G) technology can make several applications such as pesticide application, irrigation, crop monitoring, and soil property analysis more precise, timely, and efficient [26,27,28,29]. Compared with satellites and drones, ground-based platforms enable close-range detection of plant characteristics and generally serve as ground truth information sources for sensor calibration and data quality control. Ground-based platforms can be categorized into sensors mounted on fixed platforms, such as towers or booms (fixed scanning systems); handheld field measuring instruments; and sensors mounted on mobile ground vehicles [30,31]. Currently, the main sensors used in remote sensing agricultural applications consist of passive multispectral, hyperspectral, visible RGB (VIS), and near-infrared (NIR) sensors, fluorescence spectroscopy and imaging sensors, light detection and ranging (LiDAR), and synthetic aperture radar (SAR) [32]. High-resolution RGB images are widely used in vegetation classification; identification of plant leaves, canopy, and fruits; and estimation of geometric attributes. Multispectral and hyperspectral imaging provides spectral information about various parameters related to physiological and biochemical attributes, such as the leaf area index (LAI), crop water content, leaf/canopy chlorophyll content, and nitrogen content [7,33]. These parameters are very useful for crop growth evaluation and yield prediction. Fluorescence remote sensing is efficient in retrieving the chlorophyll and nitrogen content, nitrogen-to-carbon ratio, and LAI [34]. LiDAR has the advantage of a high point-cloud density, which is useful for obtaining horizontal and vertical structural characteristics of plants [35]. A synthetic aperture radar can function in very low visibility weather conditions (e.g., cloud cover). It has been extensively explored in crop classification, crop growth monitoring, and soil moisture monitoring [36,37,38]. Specific uses of different sensor types in different agricultural applications are elaborated by Yang et al. [7]. Strawberry is different from most agronomic crops like corn, soybeans, and wheat in various aspects. It is clonally propagated, and a single plant is relatively small in size but has a complex growth habit that includes several parts such as the crown, leaves, runners, inflorescences, and fleshy fruits. Higher-spatial-resolution imagery is needed to reveal the canopy structure and identify the fruits. Handheld sensors as well as sensors mounted on UAVs and ground-based platforms have been used to study various strawberry phenotyping traits. Some commonly used UAV types for agriculture applications are elaborated by Radoglou-Grammatikis et al. [25]. Ground-based platforms (e.g., tractors) were used to collect high-quality images and generate a 3D point cloud for strawberry plants [39]. Handheld non-imaging spectrometers that cover a wide spectral range (350–2500 nm) and provide continuous spectral reflectance could be used to study strawberry physiological characteristics [40]. Additionally, many researchers designed various types of phenotyping platforms for strawberry disease detection and fruit quality evaluation. Multispectral or hyperspectral sensors mounted on various platforms have been used for specific purposes, such as powdery mildew disease detection, fruit grading, and fruit 3D construction [41]. Some platforms and topics discussed in this review are shown in Figure 2. Figure 2. Strawberry traits can be assessed using a variety of sensors mounted on multiple platforms. 3. Machine and Deep Learning Analysis Methods Machine learning (ML) is one of the most effective ways to process and analyze the vast amounts of data obtained by today’s remote sensing techniques. In general, machine learning used in the agricultural field can be grouped into four categories: (1) crop monitoring, including yield estimation, disease and weed detection, species recognition, and crop quality assessment; (2) livestock management, such as animal welfare and livestock production; (3) water regulation, for example, plant evapotranspiration estimation; and (4) soil management, including the identification and prediction of soil temperature and moisture content [42]. Traditional machine learning methods, such as support vector machines (SVMs), artificial neural networks (ANNs), and random forests (RFs), require the extraction of key features from image or LiDAR datasets that sufficiently represent the characteristics of the studied objects or phenomena [43,44]. The quality of selected features is critical to the classification or prediction performance [45]. However, finding the best feature subset can be a time-consuming and subjective process, especially for highly dimensional datasets and in problems with a complex domain (e.g., crop yield estimation) [46]. For example, Sabanci et al. [47] extracted 12 features of wheat grains from high-resolution RGB images, including grain dimension (length, width, perimeter, and area), spectral band (red, green, and blue), and texture (contrast, correlation, energy, homogeny, and entropy) information. These features were imported into an ANN model to classify the wheat into two types, bread and durum, with an accuracy higher than 97%. Deep learning (DL) has emerged as perhaps the most important branch of machine learning. Deep learning refers to the extension of ANNs to accommodate neural networks with a relatively large number of layers that enable hierarchical data representation [48,49]. Mainstream deep learning models at present include deep neural networks (DNNs) [50,51], recurrent/recursive neural networks (RNNs) for sequence or time data processing [52], convolutional neural networks (CNNs) for image analysis [53,54], deep generative models [55], and auto-encoder networks [56]. In contrast to conventional ML algorithms, DL models can achieve optimal discrimination features by determining a set of parameters during the training process; thus a specific step for feature extraction is not required [49,57]. The main disadvantages of DL methods are the need for massive training datasets, computing capacity, and training time [58]. Improving existing DL methods and creating novel algorithms have been the goals of numerous studies involving agricultural applications. Kamilaris et al. [59] reviewed the agricultural problems solved using DL, common DL models and frameworks, data sources and corresponding preprocessing procedures, and the overall performance of DL by summarizing 40 studies. They identified land cover classification, crop type estimation, crop phenology, fruit and weed detection, and fruit grading as the current main applications of DL in the agriculture field. DL may also have significant potential in seed identification, soil and leaf nitrogen content determination, and irrigation management. In addition, they identified the potential for long short-term memory (LSTM) or other RNN models in yield prediction, disease management, and water needs assessment based on consecutive observations. Overall, deep learning has experienced remarkable developmental progress and already has a number of operational applications in agriculture. 4. Fruit Traits 4.1. Fruit/Flower Detection Automated counting of fruits and flowers from images is a critical step in autonomous robotic harvesting and yield prediction [60]. In recent years, numerous studies have been conducted on this topic, mainly aimed at developing new image-based object detection and localization algorithms to improve recognition accuracy. Traditional image segmentation methods use morphological operations to generate binary images and separate fruits from the background according to the similarity of color, spatial texture, and geometric shape. For example, Feng et al. [61] introduced a strawberry stem detection and fruit classification workflow, which used the OHTA color space to segment the fruit from black-and-white plastic sheets, extracted the principal inertia axis feature to define the stem position, made a judgment of strawberry ripeness based on the hue intensity and saturation (HIS) color space, and then selectively harvested strawberry fruits according to fruit ripeness and shape. However, this segmentation method is not yet robust and stable enough for application in commercial settings that have variable lighting conditions, observation angles, object orientations, relative positions, and various clustering and occlusion situations. Recently, CNNs have evolved to be the most powerful approach for solving target identification and classification problems. The superiority of a CNN in image recognition lies in its ability to extract increasingly complex visual concepts and features through hierarchical structures. The first few layers can be used to learn simple local features, and the deeper hidden layers can capture more complicated semantic information, such as shape and texture. Koirala et al. [47] reviewed the use of deep learning in fruit detection and yield prediction. The author elaborated on the applications of current state-of-the-art DL frameworks in target recognition, including the faster regional convolutional neural network (Faster RCNN), single-shot multibox detector (SSD), and you only look once (YOLO), and in detectors, including the Oxford Visual Geometry Group network (VGGNet), the Residual Network (ResNet), and the Zeiler and Fergus network (ZFNet). Fruit weight and yield estimation were also discussed, which demonstrates the superiority of deep learning in analyzing multi-dimensional remote sensing data. With regard to strawberry flower/fruit counting, Lin et al. [62] applied RCNN, Fast RCNN, and Faster RCNN models for the identification of strawberry flowers from the image, with an accuracy of 63.4%, 76.7%, and 86.1%, respectively. The Faster RCNN framework demonstrated good performance even if strawberry flowers were occluded by foliage, under shadow, and overlapped by other flowers. Another DL framework (SSD) was implemented by Lamb et al. [63] for strawberry detection. The authors modified the training images and network structure to optimize the detection precision and execution speed. This system with a sparse CNN can run quickly on mobile low-power hardware with an average precision of 84.2%. Yu et al. [64] further adapted a Mask-RCNN model for mature strawberry detection in the RGB image and achieved an accuracy of 95.78% even in a non-structural environment, particularly for overlapping and hidden fruits and those under varying illumination. Zhou et al. [65] proposed a robust deep learning architecture named improved Faster-RCNN, which adopted a transfer training technology based on Faster RCNN and greatly reduced the number of strawberry images required for training the network. The average fruit extraction accuracy was more than 86%. 4.2. Fruit Maturity/Ripeness During strawberry ripening, the fruit surface color typically goes through green, white, pink, and red stages, concurrent with the accelerated biosynthesis of pigments (e.g., carotenoids and anthocyanins) over a period of up to 30 days. Fruit ripening is a complicated process, with a variety of internal physical and chemical changes, which is mainly controlled by the synthesis and action of hormones [66]. Azodanlou et al. [67] found that as the fruit matures, there is an increase in volatile organic compounds (VOCs) and sugars, as well as a decrease in acidity. Meanwhile, structural changes in cell wall polysaccharides, especially the dissolution of pectin, contributes to fruit softening. The state of ripeness at harvest directly determines fruit quality and shelf life. Unripe fruits have lower nutrient values but are more resistant to physical injury. Overripe fruits are more susceptible to the external environment and fungal infection [68]. Rahman et al. [69] found that the shelf life of strawberry fruits picked at the 1/3rd maturity stage and the full maturity stage were about 7.8 and 2.4 days, respectively, regardless of the genotype. Therefore, early evaluation of fruit ripeness and the determination of optimal harvest time are crucial to reducing waste in the supply chain and improving fruit quality [70]. Traditional strawberry ripeness assessment is implemented visually and subjectively based on the appearance, aroma, color distribution and intensity, as well as texture [71,72]. Standard maturity evaluation methods are quantitative, measuring the contents of internal quality attributes, such as firmness, soluble solids content (SSC), titratable acidity (TA), and total anthocyanins [73]. However, this technique is destructive, slow and requires expensive specialized devices and expertise [74]. Researchers have spent considerable efforts developing simple, non-invasive, and high-throughput ways to estimate the ripeness stage of strawberry fruits. Most of the studies have focused on extracting spatial and spectral information from representative wavelength bands (usually R, G, and NIR bands) to discriminate between strawberries at different growth stages. Raut et al. [75] proposed a direct color-mapping method to evaluate the redness of strawberries based on RGB images and sort them into pre-mature, mature, and over-mature classes. Jiang et al. [76] selected the wavelengths 535, 675, and 980 nm and introduced eight spectral indices to automatically identify immature, nearly mature, and mature strawberries using the Fisher linear discriminant (FLD) model, with a prediction accuracy over 95%. Guo et al. [77] combined spectral reflectance and textural indicators (correlation, contrast, entropy, and homogeneity) of 11 optimal wavelengths from hyperspectral images and used the SVM algorithm to classify ripe, mid-ripe, and unripe fruits, with an accuracy higher than 85%. Yue et al. [78] assessed strawberry maturity in the greenhouse using only a smart phone equipped with 535 and 670 nm optical filters, which were chosen to capture anthocyanin and chlorophyll contents, respectively. Absorptance data for the two wavelengths served as variables in three regression classification methods (multivariate linear, multivariate nonlinear, and SoftMax regression). The multivariate nonlinear model yielded an identification accuracy of over 94%. Gao et al. [79] further used the AlexNet CNN deep learning model to categorize the strawberry fruits into ripe and early-ripe stages using hyperspectral datasets, achieving 98.6% classification accuracy. Recently, data collection processes, feature extraction and classification algorithms have been integrated into a real-time strawberry ripeness evaluation and decision-making system developed for harvesting robots [80]. 4.3. Fruit Quality and Postharvest Monitoring Postharvest operations, including sorting, grading, and spoilage stage monitoring, are of great significance for price determination, fulfillment of orders with specific quality standards, and sales strategy formulation [81]. In terms of strawberry grading, manual selection is widely based on the shape, size, color, maturity, and imperfection of the fruits [82]. Compared with apples and citrus fruits, strawberries are more vulnerable to damage due to their high moisture content, lack of exocarp protection, and susceptibility to fungal infection [12]. From the moment of harvest, strawberry fruits begin to lose nutrition and generally spoil after three days without cold storage, potentially generating toxins harmful to human health [83]. Therefore, it is helpful to have a rapid and non-invasive inspection method for postharvest strawberry monitoring. As with ripeness evaluation, emerging computer vision and machine learning technologies have enabled the development of automatic, real-time, and non-destructive fruit-grading systems. Liming et al. [84] designed an intelligent strawberry-grading system by integrating conveyer belts, cameras, and other auxiliary devices and employing multi-attribute decision-making theory to grade the strawberry fruit into three or four classes based on color, shape (13 feature parameters), and size. The final accuracy was above 90%. Mahendra et al. [85] compared seven types of features and used the SVM classifier to categorize the fruits into two groups: good and damaged. They found that the speeded-up robust features (SURF) were most effective in classification, with an accuracy of 90.73%. Sustika et al. [81] evaluated the capability of six CNN architectures (the baseline CNN, AlexNet, GoogLeNet, VGGNet, Xception, and MobileNet) for the binary classification (good or bad) of strawberry fruit and its classification into four grading levels (1–4 ranking) using RGB images. The study indicated that VGGNet’s performance was the best, producing 96.49% and 89.12% accuracy for the binary and the four-grade-level classification, respectively. Péneau et al. [86] represented the consumer perception of freshness quantitatively by establishing the relationship between the fruit’s physiochemical parameters (appearance, odor, texture, and flavor) and consumer/expert ratings of freshness. Dong et al. [87] used long-path Fourier-transform infrared spectroscopy (FTIR) technology to capture the spectral characteristics of VOCs generated after different lengths of storage and then detect changes in VOC (esters, alcohols, ethylene, etc.) abundance. A principal component analysis (PCA) was implemented on the spectral data to distinguish fresh, slightly spoiled, and spoiled strawberries. As for storage time estimation, Weng et al. [12] collected the spectral data for strawberries from 0 to 60 h of storage with an interval of 6 h, using hyperspectral imaging technology. SVMs and RFs were then used to classify strawberry samples from different storage times with an accuracy of 100%. Partial least-squares regression (PLSR) [88] analysis has also been used to estimate the storage time with a prediction accuracy approaching 100%. 4.4. Internal Fruit Attributes As discussed in the previous section, fruit quality is broadly assessed by many parameters associated with the external attributes of the fruit, including appearance, texture, and flavor. However, the determination of internal fruit attributes (sugar content, juiciness, acidity, color, etc.) is also very important. NIR spectroscopy and multiple/hyperspectral imaging technology have been effective for evaluating internal fruit quality attributes in a non-contact manner. A difference between spectroscopy and imaging is that the former can only obtain single-point information, while the latter can provide spatial distribution. The VIS/NIR spectral range is usually selected for internal fruit attribute studies because it provides information about O–H, C–H, and N–H absorptions [89]. Spectroscopy and hyperspectral image data are highly redundant and require preprocessing and analysis. Most research on the retrieval of internal fruit attributes adopts the following steps: data pretreatment (spectral correction and noise reduction), optimal sensitive wavelength selection, feature extraction, and prediction model construction. ElMasry et al. [90] estimated the moisture content (MC), SSC, and pH of strawberry fruits using hyperspectral images. Optimal wavelengths were selected for the MC, SSC, and pH, using β-coefficients from partial least-squares models. Multiple linear regression (MLR) models were then applied to retrieve fruit quality attributes using the spectral data of optimal wavelengths, with prediction accuracies of 87%, 80%, and 92% for the MC, TSS, and pH, respectively. Unlike many researchers who only used the spectral information directly as input variables, Weng et al. [91] extracted the spectral information about optimal wavelengths, 9 color features obtained from color histograms and moments, and 36 textural features simultaneously from the hyperspectral images for the detection of soluble solid content (SSC), pH, and vitamin C. Spectral and color features achieved the best prediction for SSC, with an R2 coefficient of 0.94. In terms of pH, optimal prediction was obtained using spectral features only, with an R2 of 0.85. A combination of spectral and textural features helped improve the estimation of vitamin C, with an R2 of 0.88. At present, the main parameters retrieved for the internal fruit quality of strawberry include firmness; vitamin C (VC); phenolic compounds; TA; total water-soluble sugar (TWSS) content; concentrations of glucose, fructose, and sucrose; SSC; pH; MC; and VC. A detailed summary of the acquisition of these parameters using spectroscopy and imaging technology is shown in Table 1. Table 1. Summary of articles addressing the estimation of internal fruit quality attributes of strawberry based on remote sensing and machine learning. 4.5. Fruit Shape Fruit shape is a critical parameter affecting the esthetic appearance and marketability of strawberries. Basic shape descriptors, such as length, width, and aspect ratio, can be manually measured with, for example, a vernier caliper. However, this method is not only labor intensive and time consuming but also limited in capturing the complex and multi-dimensional aspects of shape and uniformity. Currently, most shape classification studies are based on 2D digital images. Ishikawa et al. [103] extracted four types of shape descriptors from RGB images taken by a digital camera: (1) measured values, including contour line length, fruit length and width, and fruit width/length ratio; (2) ellipse similarity (ES) index, including the optimum ellipse area ratio and the boundary length ratio, which indicate the ellipse similarity of fruits; (3) elliptic Fourier descriptors (EFDs); and (4) chain code subtraction (CCS). Random forest analysis was conducted to categorize strawberry fruit shape into nine types: reniform, conical, cordate, ovoid, cylindrical, rhomboid, obloid, globose, and wedged. The recall ratio was used for accuracy evaluation since Kappa coefficients were not able to classify more than three types. The recall ratio ranged from 0.52 to 1, depending on shape type. Oo and Aung [104] proposed a simpler but efficient method for strawberry size estimation and shape classification based on RGB images. Only three parameters (diameter, length, and apex angle) were imported into a three-layer neural network for four classes. The estimation accuracy of diameter and length was 94% and 93%, respectively, for strawberries without calyx occlusion and 94% and 89% for those with calyx occlusion. The classification was between 94% and 97%. Feldmann et al. [105] further extracted 68 strawberry fruit shape features of four types (linear and geometric descriptors, outline-based descriptors, landmark-based descriptors, and binary-image-pixel-based descriptors) from digital images and introduced a method called principal progression of k clusters (PPKC), which can automatically discover potential shape classes. Relationships between four shape categories and features were built and used for the classification. The accuracy varied from 68% to 99%. Zhou et al. [65] used the length-to-width ratio of the minimum external rectangle obtained from RGB images to assess the plumpness of strawberry fruits. Strawberries were classified into three types based on this ratio: plump (0–0.5), approximately plump (0.5–0.8), and fully plump (0.8–1). However, this approach applies only for strawberries of globose type. Although 2D images can only reflect one dimension or plane characteristics, they are sufficient to determine shape properties to some extent. Today, imaging technology can obtain three-dimensional information. A 3D-shape-measuring system equipped with cameras, a rotation table, and an operation system was designed by He et al. [106], which generated 3D point clouds of strawberry fruits using photos from various angles and heights using structure from motion (SfM) methods. The errors were less than 0.6 mm for 90% and 0.3 mm for 80% or more of the strawberry fruits [107]. Construction of 3D strawberry architecture can provide information beyond basic descriptors. For example, uniformity is a key shape factor that is directly tied to fruit quality and sales volume. Li et al. [108] defined eight uniformity variables calculated from the 3D architecture of the strawberry fruit and evaluated the importance of each variable for manual uniformity assessment. The results showed that circularity of the maximum circumference had the closest predictive relationship with the manual uniformity score. A regular shape genetic locus was detected and found to be related to three uniformity parameters. 4.6. Strawberry Yield Prediction Strawberry harvesting can extend for many months depending on the growing system and environment, with dramatic variation in weekly yields. Forecasting strawberry yield ahead of time can help growers formulate labor/equipment allocation strategies during the harvesting period. Since weather fluctuation is a key factor, many studies have been conducted on how weather parameters (e.g., solar radiation, wind, temperature) influence strawberry yield [109]. These significant influential factors were combined with other yield-associated traits as input for statistical models and machine learning methods to predict strawberry yield. For example, Misaghi et al. [110] applied three neural network models (multilayer perception (MLP), generalized feedforward neural network (GFNN), and modular neural network) for strawberry yield prediction using vegetation indices (normalized difference vegetation index (NDVI) and Soil Adjusted Vegetation Index (SAVI)) and soil characteristic parameters, with up to 94% final accuracy. MacKenzie and Chandler [111] built a relational expression between flower counts, temperature data, and strawberry total weight, with a coefficient of determination of 0.84. Various meteorological parameters (e.g., net radiation, vapor pressure, relative humidity) were examined by Pathak et al. [109] for strawberry yield forecast using a principal component regression model, achieving 70% yield prediction accuracy. Hassan et al. [112] used hyperspectral remote sensing imagery to obtain LAI parameters and six vegetation indices (VIs) to explore the relationship between these parameters and yield under different growing conditions (organic and conventional). The prediction accuracy (R2) was higher than 0.7 except in the treatment using the black plastic mulch conventional system (<0.6). The result also showed that six VIs worked better than LAI as yield estimators. Maskey et al. [113] utilized predictive principal component regression (PPCR), neural network (NN), and random forest (RF) models to forecast strawberry yield using 26 parameters related to leaf and canopy properties, soil characteristics, and weather conditions. Each of the selected weather parameters was highly correlated with strawberry yield, and the neural network (NN) analysis provided the best prediction accuracy (95%). Nevertheless, these prediction models were generally spatially confined and need to be validated in field experiments. Another method for strawberry yield forecasting is to count fruit numbers and determine size and maturity using remote sensing images. Deep learning can play a crucial role in accomplishing this task. Using the Faster RCNN model, Chen et al. [114] predicted strawberry yield by identifying and counting strawberry flowers and immature and mature fruits from UAV high-resolution images obtained at two heights (2 m and 3 m). The results showed that the mean average precision was higher at 2 m (83%) than at 3 m (72%). 5. Leaf and Canopy Traits Leaf and canopy traits are generally divided into two types: architectural and biophysical/biochemical characteristics. Architectural traits refer to external geometric morphology, such as leaf length and width; leaf area; leaf inclination angle; leaf azimuth; and canopy height, width, size, and shape. These parameters affect the penetration of light through the canopy, light utility efficiency (LUE), and, ultimately, photosynthesis efficiency. Biophysical/biochemical parameters describe internal physiological characteristics of leaves and are highly associated with crop growth dynamics, nutritional status, and photosynthetic capacity. These parameters include the green area index (GAI), green fraction (GF), above-ground biomass (AGBM), LAI, leaf/canopy water content, leaf/canopy chlorophyll content, leaf/canopy nitrogen content, and leaf/canopy temperature, etc. At present, SfM analysis and LiDAR are two methods used to generate 3D point-cloud data and obtain 3D structural properties of leaves and canopies with desirable accuracy. SfM is a computer vision technique that aims to recover the three-dimensional geometry of objects by analyzing overlapping images taken from different perspectives [115]. The workflow involves several steps: (1) Image feature extraction and matching is performed, where matching algorithms are used to detect conjugate features or tie points between overlapped images. (2) Camera location and orientation estimation is done using the conjugate features in the images. A bundle-block adjustment process is then implemented to estimate the position and orientation of each camera at the exposure moment. (3) Orthoimage and 3D point-cloud production [116] is then conducted using more dense conjugate points detected through image matching. The point cloud can be rasterized to produce a digital surface model, which is used to generate ortho-rectified image mosaics. Light detection and ranging (LiDAR) is an active remote sensing method that utilizes laser to generate 3D point-cloud datasets [35]. Most LiDAR systems send laser pulses and compute the distance between the LiDAR source and the point where the LiDAR pulse hits an object (e.g., plant leaf) using the laser pulse travel time. Other navigation sensors are then used with the measured distance to compute the 3D location of the point. Dense 3D points can be created this way to accurately depict the surveyed objects. One of the major differences between LiDAR- and SfM-based datasets is the significantly higher cost associated with LiDAR measurements. LiDAR, however, is capable of producing 3D points along the LiDAR laser path, which can reveal some under-canopy information. Both methods have been widely used to extract height, size, and shape of various crop plants, such as blueberry, maize, and soybean [117,118,119]. Two main approaches have been commonly used to retrieve biophysical characteristics and related parameters: statistical modeling and radiative transfer modeling (RTM). The former aims to establish the relationship between features obtained from remote sensing and field measurements using traditional statistical modeling (e.g., regression analysis) and machine learning methods. Commonly used image features include spectral (e.g., band values and vegetation indices) and textural information. More than a hundred VIs could be calculated using different light spectra combinations extracted from UAV hyperspectral imagery, supplying abundant information about vegetation vigor and health [120]. It is worth noting that the red edge region, which is defined as the wavelength position of the inflection point on the red-NIR reflectance slope, has raised wide interest among researchers for LAI and chlorophyll content estimation [121]. As an alternative to statistical modeling, RTM considers the physical process of interactions between the vegetation canopy and solar radiation. Through the simulation of canopy reflectance, canopy parameters can be retrieved by RTM as long as other input parameters (radiation intensity, observation angle, soil conditions, etc.) are known [122,123]. Kattenborn et al. [124] revealed how canopy reflectance is linked with functional traits using the PROSAIL radiative transfer model (combination of PROSPECT leaf optical properties model and SAIL canopy bidirectional reflectance model). Recently, several scholars have compared and combined these two approaches to implement leaf/canopy property retrieval [81,124,125]. Studies on phenotyping of strawberry leaves and canopies using remote sensing techniques are relatively rare. Luisa et al. [126] investigated the relationship between 11 spectral response indices and nitrogen (N) content of young, mature, and old leaves. The results showed that only green reflectance (550 nm) was responsive to N fertilization for individual leaves. At the canopy level, green reflectance (550 nm), red reflectance (680 nm), VI, and NDVI were highly correlated with N content, with an R2 of 0.5, 0.6, 0.56, and 0.56, respectively. Sandino et al. [127] adopted a basic computer vision method to estimate strawberry leaf coverage from RGB images with an accuracy of 90%. Procedures such as smoothing, dilatation, contour detection, threshold segmentation, and edge detection operations were used. Similarly, a more complex algorithm was introduced by Jianlun et al. [128] to segment the greenhouse strawberry leaf edge from the background noise in the images, which integrated the scale space wavelet transformation, canny edge detection, Otsu threshold segmentation, and morphological analysis approaches. Guan et al. [129] extracted planimetric canopy area, canopy surface area, canopy average height, standard deviation of canopy height, canopy volume, and canopy smoothness parameters from high-spatial-resolution RGB images (~0.5 mm) through SfM, object-based image analysis (OBIA), and GIS analysis. Three of the variables were used to predict the leaf area (R2 = 0.79) and dry biomass (R2 = 0.84) throughout the strawberry-growing season using multiple linear regression analysis. Abd-Elrahman et al. [130] built on this study by developing automated canopy delineation and canopy size metric extraction models to predict strawberry biomass at greater throughput. Takahashi et al. [131] applied Kinect (the depth sensor used in the Microsoft XBOX console) to detect plant height and leaf area receiving direct sunlight at different leaf layers over time under different environments. These parameters were compared to the yield, dry weight, and nitrogen content inside the leaf. Kokin et al. [132] used a thermal camera to examine the difference between the strawberry leaf surface temperature and ambient air temperature under night frost conditions, which reached a maximum of ~8 °C. 6. Abiotic/Biotic Stress Detection 6.1. Water Stress Water deficit stress refers to the inhibition effect on plant growth caused by soil water deficiency or high evaporation requirement in a low-humidity atmosphere. The detection of the plant response to water stress is critical to irrigation management. Current irrigation practices are generally based on indirect estimation of plant water demand or evaporation calculated from soil moisture content and meteorological data [133,134]. Gutiérrez et al. [135] developed an automated irrigation system equipped with a distributed wireless network of soil moisture and temperature sensors placed in the root zone of the plants. Through irrigation control based on soil moisture and temperature threshold values, 90% saving was achieved in water consumption compared to traditional irrigation practices. Morillo et al. [136] implemented precision drip irrigation for strawberries using crop water requirement estimates and optimum irrigation pulse design. The method incorporated soil water content and crop evapotranspiration data obtained from a local meteorological station. In contrast, monitoring physiological changes in plants due to water stress provides a more direct and intuitive way to assess water demand. Under water stress, a plant’s temperature increases due to stomatal closure and reduced transpiration. Severe water scarcity can lead to wilting and loss of key pigments such as chlorophyll, which cause irreversible damage to the photosynthesis process. Multiple remote sensors have been used to detect pre-symptom changes. Commonly used sensors for this approach include the thermal imager (TIR; 8–14 µm), VIS, NIR, shortwave infrared reflectance (400–2500 nm), and sun-induced fluorescence (SIF; 685 and 740 nm). Thermal infrared imaging has demonstrated advantages compared to other remote sensing spectral domains in crop water stress detection. Through the analysis of information in different spectral ranges, numerous indices sensitive to water stress were proposed, such as temperature-based indices (stress degree day (SDD), crop water stress index (CWSI), and water deficit index (WDI)) and leaf-water-content-related indices (water index (WI), leaf water index (LWI), moisture stress index (MSI), and normalized difference water index (NDWI)) [137]. These indicators can quantitatively reflect the water deficit of leaves or canopy to some extent. As for strawberries, drought severely limits plant growth and reduces yield and fruit quality. Extensive research has been done to investigate responses of strawberries to water stress, including changes in yield and morphological, physiological, and biochemical properties. Drought-tolerant cultivars have been selected according to their adaptability to limited water supply [138]. Numerous parameters related to strawberry growth status, such as leaf area, leaf size, leaf longevity, dry mass, number of leaves per plant, leaf expansion rates, leaf chlorophyll content, chlorophyll stability index, leaf moisture content, stomatal conductance, photosynthetic rate, transpiration rate, root development, and plant height, exhibit a decreasing tendency under water stress [139,140,141]. Adak et al. [142] found that water deficit increased some biochemical features of fruits, such as total phenolics, total anthocyanins, antioxidant activity, and sugar content. Strawberry fruit weight and yield per unit declined by 59.72% and 63.62%, respectively, under water stress as compared to control conditions. It is helpful in crop management to provide a real-time, accurate assessment of water demand inside the strawberry plant. Peñuelas et al. [143] found that strawberry leaf temperature and the CWSI obtained by a handheld infrared thermometer were very useful in evaluating even mild water stress. Razavi et al. [144] used chlorophyll fluorescence to identify drought stress in strawberries. Delalieux et al. [145] compared plant height, NDVI, red edge inflection point (REIP), and pigment-specific simple ratio for chlorophyll b (PSSRb) differences between strawberries under two irrigation scenarios (20% and 100%) using the COmpact hyperSpectral Imaging (COSI) system. The study indicated that the growth inhibition caused by water shortage could be detected using these spectral characteristics. Li et al. [146] measured strawberry plant temperature, dry surface temperature (Tdry), wet surface temperature (Twet) for a single point, and the whole plant area using a TIR sensor. They found the CWSI to be significant in detecting strawberry water stress. More indicators were examined by Gerhards et al. [147], including surface temperature (TS), CWSI, sun-induced fluorescence (F687, F780), and TIR indices, as well as the visible and near infrared (VNIR)/short-wave infrared (SWIR), photochemical reflectance index (PRI), normalized difference vegetation index (NDVI), and moisture stress index (MSI). These results illustrate the great potential of remote sensing in water stress detection. 6.2. Pest and Disease Detection Strawberries are susceptible to many insects, mites, pests, and microorganisms (bacteria, fungi, and viruses) that regularly cause reductions in total and marketable yield [148,149]. Early diagnosis and control of strawberry pests and diseases is critical to avoiding yield losses. The occurrence of plant diseases is a process of pathological and physiological changes. Internal symptoms of diseased crops are eventually reflected as abnormal changes in external morphological characters, such as necrosis, rot, and deformity of strawberry roots, stems, leaves, flowers, and fruits. Visual identification of pathogen signs and plant disease symptoms performed by trained experts is the common practice. Nevertheless, this process is post-symptom, and its accuracy depends on the individual’s experience. Microscopic methods are not feasible for large-scale commercial detection of pest and disease problems [150]. Numerous studies have utilized remote sensing to recognize various strawberry diseases, such as powdery mildew, anthracnose crown rot, verticillium wilt, and gray mold (Figure 3). Reflectance at various spectral bands contains significant information about plant biophysical and biochemical properties, such as leaf pigment content (VIS: 400–700 nm), leaf internal structure and water content (NIR: 700–1100 nm), and the composition of leaf chemicals and water content (SWIR: 1100–2500 nm) [139]. Consequently, remote-sensing-based plant disease detection methods focus on the optical characteristics of infected and healthy strawberry plants in the images acquired by one or more sensors. The majority of the current research in this area focuses on differentiating between healthy strawberries and those affected by a single disease. Machine learning (particularly deep learning) plays an important role in analyzing images for disease detection. For example, Park et al. [151] applied a CNN to classify healthy and diseased strawberry using RGB images taken by a smart phone, with 89.7% accuracy. Chang et al. [149] extracted 40 textural indices from high-resolution RGB images and compared the performance of three supervised learning classifiers, ANNs, SVMs, and K-nearest neighbors (KNNs), in detecting the strawberry powdery mildew disease. The overall classification accuracy was 93.8% and 78.80% for the ANN and KNN classifiers, respectively. More studies addressing strawberry disease detection are detailed in Table 2. Figure 3. Several common strawberry diseases. Used with permission from N. Peres [148]. Table 2. Summary of recent articles investigating strawberry diseases using remote sensing and machine learning. 7. Discussion and Outlook The primary aim of this manuscript was to present an overview of how remote sensing and machine learning have been used in strawberry phenotyping and management. We reviewed studies that have applied state-of-art technological breakthroughs in machine and deep learning techniques to detect strawberry fruits and flowers from images with high accuracy. This work contributed greatly to autonomous robotic harvesting and yield prediction applications. Statistical models and machine learning methods were explored to evaluate strawberry fruit ripeness, estimate internal fruit attribute parameters, and monitor postharvest fruit quality based on RGB, multispectral, and hyperspectral image datasets. Various image-based fruit shape descriptors were suggested, such as fruit contour line length, uniformity, and ellipse similarity indexes. Structures from motion algorithms were used to generate 3D point clouds of strawberry fruits. Canopy and leaf images were analyzed to build models relating the biochemical content of leaves and spectral indexes as well as predict biophysical parameters, such as dry biomass and leaf area. Additionally, studies related to the detection of abiotic and biotic stressors were developed. Table A1 lists a categorized summary of the studies reviewed in this manuscript that were not presented in tabular form. Although remote sensing data acquisition and machine learning data analysis are already advancing the prospects of strawberry precision agriculture and phenomics applications, there is still an urgent need for further exploration. For example, questions related to how to expand the robustness and transferability of the statistical and machine learning models connecting fruit quality to image-based spectral and geometrical information are still active research topics. Deep learning is also very promising for further advances in fruit quality assessment. A deep learning method may enable obtaining multiple fruit quality parameters, such as shape, size, color, and internal attributes, simultaneously, which can help build a comprehensive evaluation system for strawberries and promote the automation of postharvest grading processes. Strawberry yield forecasting can be improved by integrating multiple variables such as weather condition, soil parameters, fruit/flower counts, canopy metrics, and various spectral indices from hyperspectral images as input. Many of these parameters, such as fruit and flower count and canopy size, can be extracted directly from the images using deep learning networks, which may effectively increase prediction accuracy and reduce manual work of feature extraction. Continuous, real-time observations of leaf and canopy phenotyping traits are critical to monitoring the growth and nutritional status of the plants. With the advancement of remote sensing technology, UAVs and updated ground-based platforms are being used extensively in agriculture. Sensors that are expensive and hard to access, like LiDAR and hyperspectral cameras, are gradually becoming more affordable. Thus, an increasing number of studies are being conducted on using remote sensing and machine learning to obtain structural (e.g., leaf width/length, leaf inclination angle, and canopy height and width), biophysical (e.g., LAI and biomass), and biochemical (e.g., chlorophyll and nitrogen content) traits of agronomic crops, fruit trees, and vegetables. Strawberry fruit shape is mostly depicted and evaluated by features extracted from 2D and 3D information facilitated by SfM and LiDAR technologies. As those technologies become more ubiquitous, more fruit descriptors and novel assessment systems can be developed based on the 3D architecture of strawberries. Although SfM methods were applied to high-spatial-resolution RGB images [129,130] to calculate several strawberry canopy parameters (e.g., canopy area, average height, volume, and smoothness), LiDAR could be used to obtain detailed information about a strawberry plant’s structural properties. For example, Jiang et al. [166] analyzed LiDAR data and proposed various quantification factors for the bush architecture of blueberries, including bush morphology (height, width, and volume), crown size, and shape descriptors (path curve λ and five shape indices). This type of research can be readily transferred to the strawberry domain. Besides, there is a great deal of progress to be made in predicting strawberry biophysical parameters and the photosynthesis process, and there is much to learn from other crops. Paul et al. [167] applied Gaussian process regression and the SVM model to estimate the canopy-averaged chlorophyll content of pear trees based on convolutional auto-encoder features of hyperspectral data. Li et al. [168] summarized the development of remote sensing imaging technologies for retrieval and analysis of information about various nutrition parameters, such as nitrogen, phosphorus, potassium, calcium, iron, and magnesium. The study showed that a leaf or canopy nutritional distribution map can be generated, and the coefficient of determination (R2) of nitrogen even reached 0.91. Lu et al. [169] found that the total emitted solar-induced chlorophyll fluorescence (SIF) is more effective than top-of-canopy (TOC) SIF in the prediction of forest photosynthesis. Dechant et al. [170] further revealed the canopy structure is dominant in the relationship between SIF and gross primary production (GPP) for rice, wheat, and corn. Studies like these in strawberry are few. Multispectral and hyperspectral datasets, radiative transfer modeling, and machine learning analysis may be comprehensively applied to study strawberry’s biophysical properties and photosynthesis processes. Furthermore, in a general sense, there is still room for model and algorithm development and the fusion and application of multiple types of remote sensing images. At present, several studies have assessed the feasibility of different methods or parameters in the detection of biotic and abiotic strawberry stresses, focusing on single stressors at discrete time points. These works have tried to distinguish between healthy plants and those with a single disease, improving discrimination accuracies where possible, as shown in Table 2. For future high-throughput disease detection, there is a need to integrate multiple sensors and multiple time points to identify field areas and plants under stress automatically and rapidly, diagnose the stressor type and evaluate its severity, comprehensively assess plant health through time, and model and predict plant responses to management strategies. 8. Conclusions Strawberry is different from most agronomic crops like corn, soybean, and wheat in various aspects. It is generally grown on raised-bed structures instead of flat ground and is also grown in hydroponic systems and under greenhouse and plastic tunnel structures. Strawberry is clonally propagated and has a complex growth habit that includes several plant parts, such as the crown, leaves, runners, inflorescences, and fleshy fruits. The fruits have many developmental stages and when ripe are very sensitive to environmental and management conditions. Plant development and fruit production can continually cycle and change over a six-month period, depending on the growing region. These characteristics make phenotyping considerations complex for strawberry. Therefore, the methods developed in major row crops must be creatively adapted to strawberry. The development of ground-based devices, UAVs, and emerging field robotics is advancing the potential for monitoring strawberry growth throughout the entire growing cycle, from planting to final harvest. Remote sensing can provide massive amounts of data about crop condition and health via plant and fruit characteristics. This deepens our knowledge about the crop itself and allows more advanced management practices. Remote sensing may also be useful for postharvest evaluation of strawberry fruits. Spectral and textual information obtained from multiple sensors can capture both external and internal fruit traits. Further, available artificial intelligence options include an expanding array of deep learning techniques and computer vision analysis methods. This combination of advances in sensors and data extraction and analysis will continue to accelerate the use of precision agriculture in strawberry production and phenomics technology in strawberry breeding and genetics. Author Contributions Conceptualization, A.A.-E. and C.Z.; methodology, C.Z.; writing—original draft preparation, C.Z.; writing—review and editing, A.A.-E., V.W. and C.Z.; visualization, C.Z.; supervision, A.A.-E. and V.W.; project administration, A.A.-E. and V.W.; and funding acquisition, A.A.-E. and V.W. All authors have read and agreed to the published version of the manuscript. Funding This research received no external funding. Institutional Review Board Statement Not applicable. Informed Consent Statement Not applicable. Data Availability Statement No data used in this work. Conflicts of Interest The authors declare that they have no conflict of interest. Appendix A A two-step approach was adopted to search and screen the literature related to remote sensing and machine learning applications, with an emphasis on strawberry. In the first step, refereed articles about remote sensing, machine learning, phenotyping, and strawberries were collected from the IEEE Xplore, ScienceDirect, Web of Science, and Google Scholar scientific database portals. The following query was used, which included the keywords implemented in the search: [“machine learning” OR “deep learning” OR “computer vision” OR “remote sensing” OR “phenotyping” OR “phenomics”] AND [“strawberry”]. In the second step, we screened a total of 79 papers resulting from the search, of which 60 dealt with strawberry phenotyping and 19 were related to strawberry management during growth and development. The number of articles on each topic is shown in Figure A1. Figure A1. Number of articles included in this review by topic. Appendix B Table A1. Summary of research articles on strawberry phenotyping and management using remote sensing and machine learning.    References FAO. The Future of Food and Agriculture—Alternative Pathways to 2050; Food and Agriculture Organization of the United Nations: Rome, Italy, 2018. [Google Scholar] Bongiovanni, R.; Lowenberg-DeBoer, J. Precision agriculture and sustainability. Precis. Agric. 2004, 5, 359–387. [Google Scholar] [CrossRef] Zhang, N.; Wang, M.; Wang, N. Precision agriculture—A worldwide overview. Comput. Electron. Agric. 2002, 36, 113–132. [Google Scholar] [CrossRef] Liaghat, S.; Balasundram, S.K. A review: The role of remote sensing in precision agriculture. Am. J. Agric. Biol. Sci. 2010, 5, 50–55. [Google Scholar] [CrossRef] [Green Version] Say, S.M.; Keskin, M.; Sehri, M.; Sekerli, Y.E. Adoption of precision agriculture technologies in developed and developing countries. Online J. Sci. Technol. 2018, 8, 7–15. [Google Scholar] Costa, C.; Schurr, U.; Loreto, F.; Menesatti, P.; Carpentier, S. Plant phenotyping research trends, a science mapping approach. Front. Plant Sci. 2019, 9, 1933. [Google Scholar] [CrossRef] [PubMed] [Green Version] Yang, G.; Liu, J.; Zhao, C.; Li, Z.; Huang, Y.; Yu, H.; Xu, B.; Yang, X.; Zhu, D.; Zhang, X.; et al. Unmanned aerial vehicle remote sensing for field-based crop phenotyping: Current status and perspectives. Front. Plant Sci. 2017, 8, 1111. [Google Scholar] [CrossRef] Chawade, A.; van Ham, J.; Blomquist, H.; Bagge, O.; Alexandersson, E.; Ortiz, R. High-throughput field-phenotyping tools for plant breeding and precision agriculture. Agronomy 2019, 9, 258. [Google Scholar] [CrossRef] [Green Version] Pasala, R.; Pandey, B.B. Plant phenomics: High-throughput technology for accelerating genomics. J. Biosci. 2020, 45, 1–6. [Google Scholar] [CrossRef] Pauli, D.; Chapman, S.C.; Bart, R.; Topp, C.N.; Lawrence-Dill, C.J.; Poland, J.; Gore, M.A. The quest for understanding phenotypic variation via integrated approaches in the field environment. Plant Physiol. 2016, 172, 622–634. [Google Scholar] [CrossRef] [Green Version] Yang, W.; Feng, H.; Zhang, X.; Zhang, J.; Doonan, J.H.; Batchelor, W.D.; Xiong, L.; Yan, J. Crop phenomics and high-throughput phenotyping: Past decades, current challenges, and future perspectives. Mol. Plant 2020, 13, 187–214. [Google Scholar] [CrossRef] [Green Version] Weng, S.; Yu, S.; Dong, R.; Pan, F.; Liang, D. Nondestructive detection of storage time of strawberries using visible/near-infrared hyperspectral imaging. Int. J. Food Prop. 2020, 23, 269–281. [Google Scholar] [CrossRef] [Green Version] Mezzetti, B.; Giampieri, F.; Zhang, Y.-T.; Zhong, C.-F. Status of strawberry breeding programs and cultivation systems in Europe and the rest of the world. J. Berry Res. 2018, 8, 205–221. [Google Scholar] [CrossRef] Food and Agriculture Organization of the United Nations. FAOSTAT Database; 2018. Available online: http://www.fao.org/faostat/en/?#data/QC (accessed on 20 November 2020). Huang, Y.; Chen, Z.-X.; Tao, Y.; Huang, X.-Z.; Gu, X.-F. Agricultural remote sensing big data: Management and applications. J. Integr. Agric. 2018, 17, 1915–1931. [Google Scholar] [CrossRef] Sicre, C.M.; Fieuzal, R.; Baup, F. Contribution of multispectral (optical and radar) satellite images to the classification of agricultural surfaces. Int. J. Appl. Earth Obs. Geoinf. 2020, 84, 101972. [Google Scholar] [CrossRef] Xu, Y.; Smith, S.E.; Grunwald, S.; Abd-Elrahman, A.; Wani, S.P. Incorporation of satellite remote sensing pan-sharpened imagery into digital soil prediction and mapping models to characterize soil property variability in small agricultural fields. ISPRS J. Photogramm. Remote. Sens. 2017, 123, 1–19. [Google Scholar] [CrossRef] [Green Version] Zhu, Q.; Luo, Y.; Xu, Y.-P.; Tian, Y.; Yang, T. Satellite soil moisture for agricultural drought monitoring: Assessment of SMAP-derived soil water deficit index in Xiang River Basin, China. Remote. Sens. 2019, 11, 362. [Google Scholar] [CrossRef] [Green Version] Du, T.L.T.; Bui, D.D.; Nguyen, M.D.; Lee, H. Satellite-based, multi-indices for evaluation of agricultural droughts in a highly dynamic tropical catchment, Central Vietnam. Water 2018, 10, 659. [Google Scholar] [CrossRef] [Green Version] Estel, S.; Mader, S.; Levers, C.; Verburg, P.H.; Baumann, M.; Kuemmerle, T. Combining satellite data and agricultural statistics to map grassland management intensity in Europe. Environ. Res. Lett. 2018, 13, 074020. [Google Scholar] [CrossRef] Fieuzal, R.; Baup, F. Forecast of wheat yield throughout the agricultural season using optical and radar satellite images. Int. J. Appl. Earth Obs. Geoinf. 2017, 59, 147–156. [Google Scholar] [CrossRef] Sharma, A.K.; Hubert-Moy, L.; Buvaneshwari, S.; Sekhar, M.; Ruiz, L.; Bandyopadhyay, S.; Corgne, S. Irrigation history estimation using multitemporal landsat satellite images: Application to an intensive groundwater irrigated agricultural watershed in India. Remote. Sens. 2018, 10, 893. [Google Scholar] [CrossRef] [Green Version] Xie, Q.; Dash, J.; Huete, A.; Jiang, A.; Yin, G.; Ding, Y.; Peng, D.; Hall, C.C.; Brown, L.; Shi, Y. Retrieval of crop biophysical parameters from Sentinel-2 remote sensing imagery. Int. J. Appl. Earth Obs. Geoinf. 2019, 80, 187–195. [Google Scholar] [CrossRef] Mateo-Sanchis, A.; Piles, M.; Muñoz-Marí, J.; Adsuara, J.E.; Pérez-Suay, A.; Camps-Valls, G. Synergistic integration of optical and microwave satellite data for crop yield estimation. Remote. Sens. Environ. 2019, 234, 111460. [Google Scholar] [CrossRef] [PubMed] Radoglou-Grammatikis, P.; Sarigiannidis, P.; Lagkas, T.; Moscholios, I. A compilation of UAV applications for precision agriculture. Comput. Netw. 2020, 172, 107148. [Google Scholar] [CrossRef] Giles, D.; Billing, R. Deployment and Performance of a UAV for Crop Spraying. Chem. Eng. Trans. 2015, 44, 307–312. [Google Scholar] Faiçal, B.S.; Freitas, H.; Gomes, P.H.; Mano, L.Y.; Pessin, G.; de Carvalho, A.C.; Krishnamachari, B.; Ueyama, J. An adaptive approach for UAV-based pesticide spraying in dynamic environments. Comput. Electron. Agric. 2017, 138, 210–223. [Google Scholar] [CrossRef] Di Gennaro, S.F.; Matese, A.; Gioli, B.; Toscano, P.; Zaldei, A.; Palliotti, A.; Genesio, L. Multisensor approach to assess vineyard thermal dynamics combining high-resolution unmanned aerial vehicle (UAV) remote sensing and wireless sensor network (WSN) proximal sensing. Sci. Hortic. 2017, 221, 83–87. [Google Scholar] [CrossRef] Popescu, D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana, C. Advanced UAV–WSN System for Intelligent Monitoring in Precision Agriculture. Sensors 2020, 20, 817. [Google Scholar] [CrossRef] [Green Version] Abd-Elrahman, A.; Pande-Chhetri, R.; Vallad, G. Design and development of a multi-purpose low-cost hyperspectral imaging system. Remote. Sens. 2011, 3, 570–586. [Google Scholar] [CrossRef] [Green Version] Jin, X.; Li, Z.; Atzberger, C. Editorial for the Special Issue “Estimation of Crop Phenotyping Traits using Unmanned Ground Vehicle and Unmanned Aerial Vehicle Imagery. Remote Sens. 2020, 12, 940. [Google Scholar] [CrossRef] [Green Version] Weiss, M.; Jacob, F.; Duveiller, G. Remote sensing for agricultural applications: A meta-review. Remote. Sens. Environ. 2020, 236, 111402. [Google Scholar] [CrossRef] Mishra, P.; Asaari, M.S.M.; Herrero-Langreo, A.; Lohumi, S.; Diezma, B.; Scheunders, P. Close range hyperspectral imaging of plants: A review. Biosyst. Eng. 2017, 164, 49–67. [Google Scholar] [CrossRef] Corp, L.A.; McMurtrey, J.E.; Middleton, E.M.; Mulchi, C.L.; Chappelle, E.W.; Daughtry, C.S. Fluorescence sensing systems: In vivo detection of biophysical variations in field corn due to nitrogen supply. Remote. Sens. Environ. 2003, 86, 470–479. [Google Scholar] [CrossRef] Wallace, L.; Lucieer, A.; Watson, C.; Turner, D. Development of a UAV-LiDAR system with application to forest inventory. Remote Sens. 2012, 4, 1519–1543. [Google Scholar] [CrossRef] [Green Version] Steele-Dunne, S.C.; McNairn, H.; Monsivais-Huertero, A.; Judge, J.; Liu, P.-W.; Papathanassiou, K. Radar remote sensing of agricultural canopies: A review. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens. 2017, 10, 2249–2273. [Google Scholar] [CrossRef] [Green Version] McNairn, H.; Shang, J. A review of multitemporal synthetic aperture radar (SAR) for crop monitoring. In Multitemporal Remote Sensing. Remote Sensing and Digital Image Processing; Ban, Y., Ed.; Springer: Cham, Switzerland, 2016; Volume 20. [Google Scholar] [CrossRef] Liu, C.-A.; Chen, Z.-X.; Yun, S.; Chen, J.-S.; Hasi, T.; Pan, H.-Z. Research advances of SAR remote sensing for agriculture applications: A review. J. Integr. Agric. 2019, 18, 506–525. [Google Scholar] [CrossRef] [Green Version] Kuester, M.; Thome, K.; Krause, K.; Canham, K.; Whittington, E. Comparison of surface reflectance measurements from three ASD FieldSpec FR spectroradiometers and one ASD FieldSpec VNIR spectroradiometer. In Proceedings of the IGARSS 2001. Scanning the Present and Resolving the Future. Proceedings. IEEE 2001 International Geoscience and Remote Sensing Symposium (Cat. No.01CH37217), Sydney, NSW, Australia, 9–13 July 2001; pp. 72–74. [Google Scholar] Danner, M.; Locherer, M.; Hank, T.; Richter, K. Spectral Sampling with the ASD FieldSpec 4—Theory, Measurement, Problems, Interpretation; EnMAP Field Guides Technical Report; GFZ Data Services: Potsdam, Germany, 2015. [Google Scholar] [CrossRef] Mahmud, M.S.; Zaman, Q.U.; Esau, T.J.; Chang, Y.K.; Price, G.W.; Prithiviraj, B. Real-Time Detection of Strawberry Powdery Mildew Disease Using a Mobile Machine Vision System. Agronomy 2020, 10, 1027. [Google Scholar] [CrossRef] Liakos, K.G.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine learning in agriculture: A review. Sensors 2018, 18, 2674. [Google Scholar] [CrossRef] [Green Version] Mochida, K.; Koda, S.; Inoue, K.; Hirayama, T.; Tanaka, S.; Nishii, R.; Melgani, F. Computer vision-based phenotyping for improvement of plant productivity: A machine learning perspective. GigaScience 2019, 8, giy153. [Google Scholar] [CrossRef] [Green Version] Cai, J.; Luo, J.; Wang, S.; Yang, S. Feature selection in machine learning: A new perspective. Neurocomputing 2018, 300, 70–79. [Google Scholar] [CrossRef] Miao, J.; Niu, L. A survey on feature selection. Procedia Comput. Sci. 2016, 91, 919–926. [Google Scholar] [CrossRef] [Green Version] Chlingaryan, A.; Sukkarieh, S.; Whelan, B. Machine learning approaches for crop yield prediction and nitrogen status estimation in precision agriculture: A review. Comput. Electron. Agric. 2018, 151, 61–69. [Google Scholar] [CrossRef] Sabanci, K.; Kayabasi, A.; Toktas, A. Computer vision-based method for classification of wheat grains using artificial neural network. J. Sci. Food Agric. 2017, 97, 2588–2593. [Google Scholar] [CrossRef] [PubMed] Koirala, A.; Walsh, K.B.; Wang, Z.; McCarthy, C. Deep learning–Method overview and review of use for fruit detection and yield estimation. Comput. Electron. Agric. 2019, 162, 219–234. [Google Scholar] [CrossRef] Jakhar, D.; Kaur, I. Artificial intelligence, machine learning and deep learning: Definitions and differences. Clin. Exp. Dermatol. 2020, 45, 131–132. [Google Scholar] [CrossRef] Miikkulainen, R.; Liang, J.; Meyerson, E.; Rawal, A.; Fink, D.; Francon, O.; Raju, B.; Shahrzad, H.; Navruzyan, A.; Duffy, N. Evolving deep neural networks. arXiv 2016, arXiv:1703.00548. [Google Scholar] Seifert, C.; Aamir, A.; Balagopalan, A.; Jain, D.; Sharma, A.; Grottel, S.; Gumhold, S. Visualizations of deep neural networks in computer vision: A survey. In Transparent Data Mining for Big and Small Data; Springer: Berlin/Heidelberg, Germany, 2017; pp. 123–144. [Google Scholar] Zhang, J.; Man, K.F. Time series prediction using RNN in multi-dimension embedding phase space. In Proceedings of the SMC’98 Conference Proceedings. 1998 IEEE International Conference on Systems, Man, and Cybernetics (Cat. No. 98CH36218), San Diego, CA, USA, 14 October 1998; pp. 1868–1873. [Google Scholar] Yu, S.; Jia, S.; Xu, C. Convolutional neural networks for hyperspectral image classification. Neurocomputing 2017, 219, 88–98. [Google Scholar] [CrossRef] Liu, T.; Abd-Elrahman, A. An object-based image analysis method for enhancing classification of land covers using fully convolutional networks and multi-view images of small unmanned aerial system. Remote. Sens. 2018, 10, 457. [Google Scholar] [CrossRef] [Green Version] Salakhutdinov, R. Learning deep generative models. Ann. Rev. Stat. Appl. 2015, 2, 361–385. [Google Scholar] [CrossRef] [Green Version] Pu, Y.; Gan, Z.; Henao, R.; Yuan, X.; Li, C.; Stevens, A.; Carin, L. Variational autoencoder for deep learning of images, labels and captions. arXiv 2016, arXiv:1609.08976. [Google Scholar] Bauer, A.; Bostrom, A.G.; Ball, J.; Applegate, C.; Cheng, T.; Laycock, S.; Rojas, S.M.; Kirwan, J.; Zhou, J. Combining computer vision and deep learning to enable ultra-scale aerial phenotyping and precision agriculture: A case study of lettuce production. Hortic. Res. 2019, 6, 1–12. [Google Scholar] [CrossRef] [Green Version] Zhang, L.; Zhang, L.; Du, B. Deep learning for remote sensing data: A technical tutorial on the state of the art. IEEE Geosci. Remote. Sens. Mag. 2016, 4, 22–40. [Google Scholar] [CrossRef] Kamilaris, A.; Prenafeta-Boldú, F.X. Deep learning in agriculture: A survey. Comput. Electron. Agric. 2018, 147, 70–90. [Google Scholar] [CrossRef] [Green Version] Puttemans, S.; Vanbrabant, Y.; Tits, L.; Goedemé, T. Automated visual fruit detection for harvest estimation and robotic harvesting. In Proceedings of the 2016 sixth international conference on image processing theory, tools and applications (IPTA), Oulu, Finland, 12–15 December 2016; pp. 1–6. [Google Scholar] [CrossRef] Feng, G.; Qixin, C.; Masateru, N. Fruit detachment and classification method for strawberry harvesting robot. Int. J. Adv. Robot. Syst. 2008, 5, 4. [Google Scholar] [CrossRef] Lin, P.; Chen, Y. Detection of Strawberry Flowers in Outdoor Field by Deep Neural Network. In Proceedings of the 2018 IEEE 3rd International Conference on Image, Vision and Computing (ICIVC), Chongqing, China, 27–29 June 2018; pp. 482–486. [Google Scholar] [CrossRef] Lamb, N.; Chuah, M.C. A strawberry detection system using convolutional neural networks. In Proceedings of the 2018 IEEE International Conference on Big Data (Big Data), Seattle, WA, USA, 10–13 December 2018; pp. 2515–2520. [Google Scholar] [CrossRef] Yu, Y.; Zhang, K.; Yang, L.; Zhang, D. Fruit detection for strawberry harvesting robot in non-structural environment based on Mask-RCNN. Comput. Electron. Agric. 2019, 163, 104846. [Google Scholar] [CrossRef] Zhou, C.; Hu, J.; Xu, Z.; Yue, J.; Ye, H.; Yang, G. A novel greenhouse-based system for the detection and plumpness assessment of strawberry using an improved deep learning technique. Front. Plant Sci. 2020, 11, 559. [Google Scholar] [CrossRef] Kafkas, E.; Koşar, M.; Paydaş, S.; Kafkas, S.; Başer, K. Quality characteristics of strawberry genotypes at different maturation stages. Food Chem. 2007, 100, 1229–1236. [Google Scholar] [CrossRef] Azodanlou, R.; Darbellay, C.; Luisier, J.-L.; Villettaz, J.-C.; Amadò, R. Changes in flavour and texture during the ripening of strawberries. Eur. Food Res. Technol. 2004, 218, 167–172. [Google Scholar] Kader, A.A. Quality and its maintenance in relation to the postharvest physiology of strawberry. In The Strawberry into the 21st Century; Timber Press: Portland, OR, USA, 1991; pp. 145–152. [Google Scholar] Rahman, M.M.; Moniruzzaman, M.; Ahmad, M.R.; Sarker, B.; Alam, M.K. Maturity stages affect the postharvest quality and shelf-life of fruits of strawberry genotypes growing in subtropical regions. J. Saudi Soc. Agric. Sci. 2016, 15, 28–37. [Google Scholar] [CrossRef] [Green Version] Li, B.; Lecourt, J.; Bishop, G. Advances in non-destructive early assessment of fruit ripeness towards defining optimal time of harvest and yield prediction—A review. Plants 2018, 7, 3. [Google Scholar] Rico, D.; Martin-Diana, A.B.; Barat, J.; Barry-Ryan, C. Extending and measuring the quality of fresh-cut fruit and vegetables: A review. Trends Food Sci. Technol. 2007, 18, 373–386. [Google Scholar] [CrossRef] [Green Version] Kader, A.A. Quality parameters of fresh-cut fruit and vegetable products. In Fresh-Cut Fruits and Vegetables; CRC Press: Boca Raton, FL, USA, 2002; pp. 20–29. [Google Scholar] Liu, C.; Liu, W.; Lu, X.; Ma, F.; Chen, W.; Yang, J.; Zheng, L. Application of multispectral imaging to determine quality attributes and ripeness stage in strawberry fruit. PLoS ONE 2014, 9, e87818. [Google Scholar] [CrossRef] [PubMed] Bai, J.; Plotto, A.; Baldwin, E.; Whitaker, V.; Rouseff, R. Electronic nose for detecting strawberry fruit maturity. In Proceedings of the Florida State Horticultural Society, Crystal River, FL, USA, 6–8 June 2010; Volume 123, pp. 259–263. [Google Scholar] Raut, K.D.; Bora, V. Assessment of Fruit Maturity using Direct Color Mapping. Int. Res. J. Eng. Technol. 2016, 3, 1540–1543. [Google Scholar] Jiang, H.; Zhang, C.; Liu, F.; Zhu, H.; He, Y. Identification of strawberry ripeness based on multispectral indexes extracted from hyperspectral images. Guang Pu Xue Yu Guang Pu Fen Xi = Guang Pu 2016, 36, 1423–1427. [Google Scholar] [PubMed] Guo, C.; Liu, F.; Kong, W.; He, Y.; Lou, B. Hyperspectral imaging analysis for ripeness evaluation of strawberry with support vector machine. J. Food Eng. 2016, 179, 11–18. [Google Scholar] Yue, X.-Q.; Shang, Z.-Y.; Yang, J.-Y.; Huang, L.; Wang, Y.-Q. A smart data-driven rapid method to recognize the strawberry maturity. Inf. Proc. Agric. 2019. [Google Scholar] [CrossRef] Gao, Z.; Shao, Y.; Xuan, G.; Wang, Y.; Liu, Y.; Han, X. Real-time hyperspectral imaging for the in-field estimation of strawberry ripeness with deep learning. Artif. Intell. Agric. 2020, 4, 31–38. [Google Scholar] [CrossRef] Xiong, Y.; Peng, C.; Grimstad, L.; From, P.J.; Isler, V. Development and field evaluation of a strawberry harvesting robot with a cable-driven gripper. Comput. Electron. Agric. 2019, 157, 392–402. [Google Scholar] [CrossRef] Sustika, R.; Subekti, A.; Pardede, H.F.; Suryawati, E.; Mahendra, O.; Yuwana, S. Evaluation of deep convolutional neural network architectures for strawberry quality inspection. Int. J. Eng. Technol. 2018, 7, 75–80. [Google Scholar] Usha, S.; Karthik, M.; Jenifer, R.; Scholar, P. Automated Sorting and Grading of Vegetables Using Image Processing. Int. J. Eng. Res. Gen. Sci. 2017, 5, 53–61. [Google Scholar] Shen, J.; Qi, H.-F.; Li, C.; Zeng, S.-M.; Deng, C. Experimental on storage and preservation of strawberry. Food Sci. Tech 2011, 36, 48–51. [Google Scholar] Liming, X.; Yanchao, Z. Automated strawberry grading system based on image processing. Comput. Electron. Agric. 2010, 71, S32–S39. [Google Scholar] [CrossRef] Mahendra, O.; Pardede, H.F.; Sustika, R.; Kusumo, R.B.S. Comparison of Features for Strawberry Grading Classification with Novel Dataset. In Proceedings of the 2018 International Conference on Computer, Control, Informatics and Its Applications (IC3INA), Tangerang, Indonesia, 1–2 November 2018; pp. 7–12. [Google Scholar] [CrossRef] Péneau, S.; Brockhoff, P.B.; Escher, F.; Nuessli, J. A comprehensive approach to evaluate the freshness of strawberries and carrots. Postharvest Biol. Technol. 2007, 45, 20–29. [Google Scholar] [CrossRef] Dong, D.; Zhao, C.; Zheng, W.; Wang, W.; Zhao, X.; Jiao, L. Analyzing strawberry spoilage via its volatile compounds using longpath fourier transform infrared spectroscopy. Sci. Rep. 2013, 3, 2585. [Google Scholar] [CrossRef] [PubMed] [Green Version] Geladi, P.; Kowalski, B.R. Partial least-squares regression: A tutorial. Anal. Chim. Acta 1986, 185, 1–17. [Google Scholar] [CrossRef] Wang, H.; Peng, J.; Xie, C.; Bao, Y.; He, Y. Fruit quality evaluation using spectroscopy technology: A review. Sensors 2015, 15, 11889–11927. [Google Scholar] [CrossRef] [PubMed] [Green Version] ElMasry, G.; Wang, N.; ElSayed, A.; Ngadi, M. Hyperspectral imaging for nondestructive determination of some quality attributes for strawberry. J. Food Eng. 2007, 81, 98–107. [Google Scholar] [CrossRef] Weng, S.; Yu, S.; Guo, B.; Tang, P.; Liang, D. Non-Destructive Detection of Strawberry Quality Using Multi-Features of Hyperspectral Imaging and Multivariate Methods. Sensors 2020, 20, 3074. [Google Scholar] [CrossRef] Liu, Q.; Wei, K.; Xiao, H.; Tu, S.; Sun, K.; Sun, Y.; Pan, L.; Tu, K. Near-infrared hyperspectral imaging rapidly detects the decay of postharvest strawberry based on water-soluble sugar analysis. Food Anal. Methods 2019, 12, 936–946. [Google Scholar] [CrossRef] Liu, S.; Xu, H.; Wen, J.; Zhong, W.; Zhou, J. Prediction and analysis of strawberry sugar content based on partial least squares prediction model. J. Anim. Plant Sci. 2019, 29, 1390–1395. [Google Scholar] Amodio, M.L.; Ceglie, F.; Chaudhry, M.M.A.; Piazzolla, F.; Colelli, G. Potential of NIR spectroscopy for predicting internal quality and discriminating among strawberry fruits from different production systems. Postharvest Biol. Technol. 2017, 125, 112–121. [Google Scholar] [CrossRef] LI, J.-B.; GUO, Z.-M.; HUANG, W.-Q.; ZHANG, B.-H.; ZHAO, C.-J. Near-infrared spectra combining with CARS and SPA algorithms to screen the variables and samples for quantitatively determining the soluble solids content in strawberry. Spectrosc. Spectr. Anal. 2015, 35, 372–378. [Google Scholar] Ding, X.; Zhang, C.; Liu, F.; Song, X.; Kong, W.; He, Y. Determination of soluble solid content in strawberry using hyperspectral imaging combined with feature extraction methods. Guang Pu Xue Yu Guang Pu Fen Xi = Guang Pu 2015, 35, 1020–1024. [Google Scholar] [PubMed] Sánchez, M.-T.; De la Haba, M.J.; Benítez-López, M.; Fernández-Novales, J.; Garrido-Varo, A.; Pérez-Marín, D. Non-destructive characterization and quality control of intact strawberries based on NIR spectral data. J. Food Eng. 2012, 110, 102–108. [Google Scholar] [CrossRef] Nishizawa, T.; Mori, Y.; Fukushima, S.; Natsuga, M.; Maruyama, Y. Non-destructive analysis of soluble sugar components in strawberry fruits using near-infrared spectroscopy. Nippon Shokuhin Kagaku Kogaku Kaishi = J. Jpn. Soc. Food Sci. Technol. 2009, 56, 229–235. [Google Scholar] [CrossRef] [Green Version] Wulf, J.; Rühmann, S.; Rego, I.; Puhl, I.; Treutter, D.; Zude, M. Nondestructive application of laser-induced fluorescence spectroscopy for quantitative analyses of phenolic compounds in strawberry fruits (Fragaria × ananassa). J. Agric. Food Chem. 2008, 56, 2875–2882. [Google Scholar] [CrossRef] Tallada, J.G.; Nagata, M.; Kobayashi, T. Non-destructive estimation of firmness of strawberries (Fragaria × ananassa Duch.) using NIR hyperspectral imaging. Environ. Control. Biol. 2006, 44, 245–255. [Google Scholar] [CrossRef] [Green Version] Nagata, M.; Tallada, J.G.; Kobayashi, T.; Toyoda, H. NIR hyperspectral imaging for measurement of internal quality in strawberries. In Proceedings of the 2005 ASAE Annual Meeting, Tampa, FL, USA, 17–20 July 2005. ASAE Paper No. 053131. [Google Scholar] Nagata, M.; Tallada, J.G.; Kobayashi, T.; Cui, Y.; Gejima, Y. Predicting maturity quality parameters of strawberries using hyperspectral imaging. In Proceedings of the ASAE/CSAE Annual International Meeting, Ottawa, ON, Canada, 1–4 August 2004. Paper No. 043033. [Google Scholar] Ishikawa, T.; Hayashi, A.; Nagamatsu, S.; Kyutoku, Y.; Dan, I.; Wada, T.; Oku, K.; Saeki, Y.; Uto, T.; Tanabata, T.; et al. Classification of strawberry fruit shape by machine learning. Int. Arch. Photogramm. Remote. Sens. Spat. Inf. Sci. 2018, 42. [Google Scholar] [CrossRef] [Green Version] Oo, L.M.; Aung, N.Z. A simple and efficient method for automatic strawberry shape and size estimation and classification. Biosyst. Eng. 2018, 170, 96–107. [Google Scholar] [CrossRef] Feldmann, M.J.; Hardigan, M.A.; Famula, R.A.; López, C.M.; Tabb, A.; Cole, G.S.; Knapp, S.J. Multi-dimensional machine learning approaches for fruit shape phenotyping in strawberry. GigaScience 2020, 9, giaa030. [Google Scholar] [CrossRef] He, J.Q.; Harrison, R.J.; Li, B. A novel 3D imaging system for strawberry phenotyping. Plant Methods 2017, 13, 1–8. [Google Scholar] [CrossRef] Kochi, N.; Tanabata, T.; Hayashi, A.; Isobe, S. A 3D shape-measuring system for assessing strawberry fruits. Int. J. Autom. Technol. 2018, 12, 395–404. [Google Scholar] [CrossRef] Li, B.; Cockerton, H.M.; Johnson, A.W.; Karlström, A.; Stavridou, E.; Deakin, G.; Harrison, R.J. Defining Strawberry Uniformity using 3D Imaging and Genetic Mapping. bioRxiv 2020. [Google Scholar] [CrossRef] [PubMed] Pathak, T.B.; Dara, S.K.; Biscaro, A. Evaluating correlations and development of meteorology based yield forecasting model for strawberry. Adv. Meteorol. 2016, 2016, 1–7. [Google Scholar] [CrossRef] [Green Version] Misaghi, F.; Dayyanidardashti, S.; Mohammadi, K.; Ehsani, M. Application of Artificial Neural Network and Geostatistical Methods in Analyzing Strawberry Yield Data; American Society of Agricultural and Biological Engineers: Minneapolis, MN, USA, 2004; p. 1. [Google Scholar] MacKenzie, S.J.; Chandler, C.K. A method to predict weekly strawberry fruit yields from extended season production systems. Agron. J. 2009, 101, 278–287. [Google Scholar] [CrossRef] Hassan, H.A.; Taha, S.S.; Aboelghar, M.A.; Morsy, N.A. Comparative the impact of organic and conventional strawberry cultivation on growth and productivity using remote sensing techniques under Egypt climate conditions. Asian J. Agric. Biol. 2018, 6, 228–244. [Google Scholar] Maskey, M.L.; Pathak, T.B.; Dara, S.K. Weather Based Strawberry Yield Forecasts at Field Scale Using Statistical and Machine Learning Models. Atmosphere 2019, 10, 378. [Google Scholar] [CrossRef] [Green Version] Chen, Y.; Lee, W.S.; Gan, H.; Peres, N.; Fraisse, C.; Zhang, Y.; He, Y. Strawberry yield prediction based on a deep neural network using high-resolution aerial orthoimages. Remote. Sens. 2019, 11, 1584. [Google Scholar] [CrossRef] [Green Version] Fonstad, M.A.; Dietrich, J.T.; Courville, B.C.; Jensen, J.L.; Carbonneau, P.E. Topographic structure from motion: A new development in photogrammetric measurement. Earth Surf. Proc. Landf. 2013, 38, 421–430. [Google Scholar] [CrossRef] [Green Version] Ozyesil, O.; Voroninski, V.; Basri, R.; Singer, A. A survey of structure from motion. arXiv 2017, arXiv:1701.08493. [Google Scholar] Patrick, A.; Li, C. High throughput phenotyping of blueberry bush morphological traits using unmanned aerial systems. Remote. Sens. 2017, 9, 1250. [Google Scholar] [CrossRef] [Green Version] Makanza, R.; Zaman-Allah, M.; Cairns, J.E.; Magorokosho, C.; Tarekegne, A.; Olsen, M.; Prasanna, B.M. High-throughput phenotyping of canopy cover and senescence in maize field trials using aerial digital canopy imaging. Remote. Sens. 2018, 10, 330. [Google Scholar] [CrossRef] [PubMed] [Green Version] Han, L.; Yang, G.; Dai, H.; Yang, H.; Xu, B.; Feng, H.; Li, Z.; Yang, X. Fuzzy Clustering of Maize Plant-Height Patterns Using Time Series of UAV Remote-Sensing Images and Variety Traits. Front. Plant Sci. 2019, 10, 926. [Google Scholar] [CrossRef] [PubMed] [Green Version] Xue, J.; Su, B. Significant remote sensing vegetation indices: A review of developments and applications. J. Sens. 2017, 2017, 1–17. [Google Scholar] [CrossRef] [Green Version] Hunt, E.R., Jr.; Doraiswamy, P.C.; McMurtrey, J.E.; Daughtry, C.S.; Perry, E.M.; Akhmedov, B. A visible band index for remote sensing leaf chlorophyll content at the canopy scale. Int. J. Appl. Earth Obs. Geoinf. 2013, 21, 103–112. [Google Scholar] [CrossRef] [Green Version] Clevers, J.G.; Kooistra, L. Using hyperspectral remote sensing data for retrieving canopy chlorophyll and nitrogen content. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens. 2011, 5, 574–583. [Google Scholar] [CrossRef] Kattenborn, T.; Schmidtlein, S. Radiative transfer modelling reveals why canopy reflectance follows function. Sci. Rep. 2019, 9, 1–10. [Google Scholar] [CrossRef] [Green Version] Yuan, H.; Yang, G.; Li, C.; Wang, Y.; Liu, J.; Yu, H.; Feng, H.; Xu, B.; Zhao, X.; Yang, X. Retrieving soybean leaf area index from unmanned aerial vehicle hyperspectral remote sensing: Analysis of RF, ANN, and SVM regression models. Remote. Sens. 2017, 9, 309. [Google Scholar] [CrossRef] [Green Version] Wolanin, A.; Camps-Valls, G.; Gómez-Chova, L.; Mateo-García, G.; van der Tol, C.; Zhang, Y.; Guanter, L. Estimating crop primary productivity with Sentinel-2 and Landsat 8 using machine learning methods trained with radiative transfer simulations. Remote. Sens. Environ. 2019, 225, 441–457. [Google Scholar] [CrossRef] Luisa España-Boquera, M.; Cárdenas-Navarro, R.; López-Pérez, L.; Castellanos-Morales, V.; Lobit, P. Estimating the nitrogen concentration of strawberry plants from its spectral response. Commun. Soil Sci. Plant Anal. 2006, 37, 2447–2459. [Google Scholar] [CrossRef] Sandino, J.D.; Ramos-Sandoval, O.L.; Amaya-Hurtado, D. Method for estimating leaf coverage in strawberry plants using digital image processing. Rev. Bras. Eng. Agrícola Ambient. 2016, 20, 716–721. [Google Scholar] [CrossRef] [Green Version] Jianlun, W.; Yu, H.; Shuangshuang, Z.; Hongxu, Z.; Can, H.; Xiaoying, C.; Yun, X.; Jianshu, C.; Shuting, W. A new multi-scale analytic algorithm for edge extraction of strawberry leaf images in natural light. Int. J. Agric. Biol. Eng. 2016, 9, 99–108. [Google Scholar] Guan, Z.; Abd-Elrahman, A.; Fan, Z.; Whitaker, V.M.; Wilkinson, B. Modeling strawberry biomass and leaf area using object-based analysis of high-resolution images. J. Photogramm. Remote. Sens. 2020, 163, 171–186. [Google Scholar] [CrossRef] Abd-Elrahman, A.; Guan, Z.; Dalid, C.; Whitaker, V.; Britt, K.; Wilkinson, B.; Gonzalez, A. Automated Canopy Delineation and Size Metrics Extraction for Strawberry Dry Weight Modeling Using Raster Analysis of High-Resolution Imagery. Remote. Sens. 2020, 12, 3632. [Google Scholar] [CrossRef] Takahashi, M.; Takayama, S.; Umeda, H.; Yoshida, C.; Koike, O.; Iwasaki, Y.; Sugeno, W. Quantification of Strawberry Plant Growth and Amount of Light Received Using a Depth Sensor. Environ. Control. Biol. 2020, 58, 31–36. [Google Scholar] [CrossRef] [Green Version] Kokin, E.; Palge, V.; Pennar, M.; Jürjenson, K. Strawberry leaf surface temperature dynamics measured by thermal camera in night frost conditions. Agron. Res. 2018, 16. [Google Scholar] [CrossRef] Touati, F.; Al-Hitmi, M.; Benhmed, K.; Tabish, R. A fuzzy logic based irrigation system enhanced with wireless data logging applied to the state of Qatar. Comput. Electron. Agric. 2013, 98, 233–241. [Google Scholar] [CrossRef] Avşar, E.; Buluş, K.; Saridaş, M.A.; Kapur, B. Development of a cloud-based automatic irrigation system: A case study on strawberry cultivation. In Proceedings of the 2018 7th International Conference on Modern Circuits and Systems Technologies (MOCAST), Thessaloniki, Greece, 7–9 May 2018; pp. 1–4. [Google Scholar] Gutiérrez, J.; Villa-Medina, J.F.; Nieto-Garibay, A.; Porta-Gándara, M.Á. Automated irrigation system using a wireless sensor network and GPRS module. IEEE Trans. Instrum. Meas. 2013, 63, 166–176. [Google Scholar] [CrossRef] Morillo, J.G.; Martín, M.; Camacho, E.; Díaz, J.R.; Montesinos, P. Toward precision irrigation for intensive strawberry cultivation. Agric. Water Manag. 2015, 151, 43–51. [Google Scholar] [CrossRef] Gerhards, M.; Schlerf, M.; Mallick, K.; Udelhoven, T. Challenges and future perspectives of multi-/Hyperspectral thermal infrared remote sensing for crop water-stress detection: A review. Remote. Sens. 2019, 11, 1240. [Google Scholar] [CrossRef] [Green Version] Grant, O.M.; Davies, M.J.; Johnson, A.W.; Simpson, D.W. Physiological and growth responses to water deficits in cultivated strawberry (Fragaria× ananassa) and in one of its progenitors, Fragaria chiloensis. Environ. Exp. Bot. 2012, 83, 23–32. [Google Scholar] [CrossRef] Nezhadahmadi, A.; Faruq, G.; Rashid, K. The impact of drought stress on morphological and physiological parameters of three strawberry varieties in different growing conditions. Pak. J. Agric. Sci. 2015, 52, 79–92. [Google Scholar] Grant, O.M.; Johnson, A.W.; Davies, M.J.; James, C.M.; Simpson, D.W. Physiological and morphological diversity of cultivated strawberry (Fragaria× ananassa) in response to water deficit. Environ. Exp. Bot. 2010, 68, 264–272. [Google Scholar] [CrossRef] Klamkowski, K.; Treder, W. Response to drought stress of three strawberry cultivars grown under greenhouse conditions. J. Fruit Ornam. Plant Res. 2008, 16, 179–188. [Google Scholar] Adak, N.; Gubbuk, H.; Tetik, N. Yield, quality and biochemical properties of various strawberry cultivars under water stress. J. Sci. Food Agric. 2018, 98, 304–311. [Google Scholar] [CrossRef] [PubMed] Peñuelas, J.; Savé, R.; Marfà, O.; Serrano, L. Remotely measured canopy temperature of greenhouse strawberries as indicator of water status and yield under mild and very mild water stress conditions. Agric. For. Meteorol. 1992, 58, 63–77. [Google Scholar] [CrossRef] Razavi, F.; Pollet, B.; Steppe, K.; Van Labeke, M.-C. Chlorophyll fluorescence as a tool for evaluation of drought stress in strawberry. Photosynthetica 2008, 46, 631–633. [Google Scholar] [CrossRef] Delalieux, S.; Delauré, B.; Tits, L.; Boonen, M.; Sima, A.; Baeck, P. High resolution strawberry field monitoring using the compact hyperspectral imaging solution COSI. Adv. Anim. Biosci. 2017, 8, 156. [Google Scholar] [CrossRef] Li, H.; Yin, J.; Zhang, M.; Sigrimis, N.; Gao, Y.; Zheng, W. Automatic diagnosis of strawberry water stress status based on machine vision. Int. J. Agric. Biol. Eng. 2019, 12, 159–164. [Google Scholar] [CrossRef] Gerhards, M.; Schlerf, M.; Rascher, U.; Udelhoven, T.; Juszczak, R.; Alberti, G.; Miglietta, F.; Inoue, Y. Analysis of airborne optical and thermal imagery for detection of water stress symptoms. Remote. Sens. 2018, 10, 1139. [Google Scholar] [CrossRef] [Green Version] Oliveira, M.S.; Peres, N.A. Common Strawberry Diseases in Florida. EDIS 2020, 2020. [Google Scholar] [CrossRef] Chang, Y.K.; Mahmud, M.; Shin, J.; Nguyen-Quang, T.; Price, G.W.; Prithiviraj, B. Comparison of Image Texture Based Supervised Learning Classifiers for Strawberry Powdery Mildew Detection. AgriEngineering 2019, 1, 434–452. [Google Scholar] [CrossRef] [Green Version] Mahlein, A.-K. Plant Disease detection by imaging sensors–parallels and specific demands for precision agriculture and plant phenotyping. Plant Dis. 2016, 100, 241–251. [Google Scholar] [CrossRef] [PubMed] [Green Version] Park, H.; Eun, J.-S.; Kim, S.-H. Image-based disease diagnosing and predicting of the crops through the deep learning mechanism. In Proceedings of the 2017 International Conference on Information and Communication Technology Convergence (ICTC), Jeju, Korea, 18–20 October 2017; pp. 129–131. [Google Scholar] [CrossRef] Shin, J.; Chang, Y.K.; Heung, B.; Nguyen-Quang, T.; Price, G.W.; Al-Mallahi, A. Effect of directional augmentation using supervised machine learning technologies: A case study of strawberry powdery mildew detection. Biosyst. Eng. 2020, 194, 49–60. [Google Scholar] [CrossRef] De Lange, E.S.; Nansen, C. Early detection of arthropod-induced stress in strawberry using innovative remote sensing technology. In Proceedings of the GeoVet 2019. Novel Spatio-Temporal Approaches in the Era of Big Data, Davis, CA, USA, 8–10 October 2019. [Google Scholar] [CrossRef] Liu, Q.; Sun, K.; Zhao, N.; Yang, J.; Zhang, Y.; Ma, C.; Pan, L.; Tu, K. Information fusion of hyperspectral imaging and electronic nose for evaluation of fungal contamination in strawberries during decay. Postharvest Biol. Technol. 2019, 153, 152–160. [Google Scholar] [CrossRef] Cockerton, H.M.; Li, B.; Vickerstaff, R.; Eyre, C.A.; Sargent, D.J.; Armitage, A.D.; Marina-Montes, C.; Garcia, A.; Passey, A.J.; Simpson, D.W. Image-based Phenotyping and Disease Screening of Multiple Populations for resistance to Verticillium dahliae in cultivated strawberry Fragaria x ananassa. bioRxiv 2018, 497107. [Google Scholar] [CrossRef] [Green Version] Altıparmak, H.; Al Shahadat, M.; Kiani, E.; Dimililer, K. Fuzzy classification for strawberry diseases-infection using machine vision and soft-computing techniques. In Proceedings of the Tenth International Conference on Machine Vision (ICMV 2017), Vienna, Austria, 13–15 November 2017; p. 106961N. [Google Scholar] [CrossRef] Hecht-Nielsen, R. Theory of the backpropagation neural network. In Proceedings of the International 1989 Joint Conference on Neural Networks, Washington, DC, USA, 1989; Volume 1, pp. 593–605. [Google Scholar] [CrossRef] Siedliska, A.; Baranowski, P.; Zubik, M.; Mazurek, W.; Sosnowska, B. Detection of fungal infections in strawberry fruit by VNIR/SWIR hyperspectral imaging. Postharvest Biol. Technol. 2018, 139, 115–126. [Google Scholar] [CrossRef] Thompson, B. Stepwise Regression and Stepwise Discriminant Analysis Need Not Apply Here: A Guidelines; Sage Publications: Thousand Oaks, CA, USA, 1995. [Google Scholar] Lu, J.; Ehsani, R.; Shi, Y.; Abdulridha, J.; de Castro, A.I.; Xu, Y. Field detection of anthracnose crown rot in strawberry using spectroscopy technology. Comput. Electron. Agric. 2017, 135, 289–299. [Google Scholar] [CrossRef] Abdel Wahab, H.; Aboelghar, M.; Ali, A.; Yones, M. Spectral and molecular studies on gray mold in strawberry. Asian J. Plant Pathol. 2017, 11, 167–173. [Google Scholar] [CrossRef] Yuhas, R.H.; Goetz, A.F.H.; Boardman, J.W. Discrimination among semi-arid landscape endmembers using the Spectral AngleMapper (SAM) algorithm. In Summaries of the Third Annual JPL Airborne Geoscience Workshop; AVIRIS Workshop: Pasadena, CA, USA, 1992; pp. 147–149. [Google Scholar] Levine, M.F. Self-developed QWL measures. J. Occup. Behav. 1983, 4, 35–46. [Google Scholar] Yeh, Y.-H.; Chung, W.-C.; Liao, J.-Y.; Chung, C.-L.; Kuo, Y.-F.; Lin, T.-T. Strawberry foliar anthracnose assessment by hyperspectral imaging. Comput. Electron. Agric. 2016, 122, 1–9. [Google Scholar] [CrossRef] Yeh, Y.-H.F.; Chung, W.-C.; Liao, J.-Y.; Chung, C.-L.; Kuo, Y.-F.; Lin, T.-T. A comparison of machine learning methods on hyperspectral plant disease assessments. IFAC Proc. Vol. 2013, 46, 361–365. [Google Scholar] [CrossRef] [Green Version] Jiang, Y.; Li, C.; Takeda, F.; Kramer, E.A.; Ashrafi, H.; Hunter, J. 3D point cloud data to quantitatively characterize size and shape of shrub crops. Hortic. Res. 2019, 6, 1–17. [Google Scholar] [CrossRef] [PubMed] [Green Version] Paul, S.; Poliyapram, V.; İmamoğlu, N.; Uto, K.; Nakamura, R.; Kumar, D.N. Canopy Averaged Chlorophyll Content Prediction of Pear Trees Using Convolutional Autoencoder on Hyperspectral Data. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens. 2020, 13, 1426–1437. [Google Scholar] [CrossRef] Li, D.; Li, C.; Yao, Y.; Li, M.; Liu, L. Modern imaging techniques in plant nutrition analysis: A review. Comput. Electron. Agric. 2020, 174, 105459. [Google Scholar] [CrossRef] Lu, X.; Liu, Z.; Zhao, F.; Tang, J. Comparison of total emitted solar-induced chlorophyll fluorescence (SIF) and top-of-canopy (TOC) SIF in estimating photosynthesis. Remote. Sens. Environ. 2020, 251, 112083. [Google Scholar] [CrossRef] Dechant, B.; Ryu, Y.; Badgley, G.; Zeng, Y.; Berry, J.A.; Zhang, Y.; Goulas, Y.; Li, Z.; Zhang, Q.; Kang, M.; et al. Canopy structure explains the relationship between photosynthesis and sun-induced chlorophyll fluorescence in crops. Remote. Sens. Environ. 2020, 241, 111733. [Google Scholar] [CrossRef] [Green Version] Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affiliations.  © 2021 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Zheng, C.; Abd-Elrahman, A.; Whitaker, V. Remote Sensing and Machine Learning in Crop Phenotyping and Management, with an Emphasis on Applications in Strawberry Farming. Remote Sens. 2021, 13, 531. https://doi.org/10.3390/rs13030531 AMA Style Zheng C, Abd-Elrahman A, Whitaker V. Remote Sensing and Machine Learning in Crop Phenotyping and Management, with an Emphasis on Applications in Strawberry Farming. Remote Sensing. 2021; 13(3):531. https://doi.org/10.3390/rs13030531 Chicago/Turabian Style Zheng, Caiwang, Amr Abd-Elrahman, and Vance Whitaker. 2021. "Remote Sensing and Machine Learning in Crop Phenotyping and Management, with an Emphasis on Applications in Strawberry Farming" Remote Sensing 13, no. 3: 531. https://doi.org/10.3390/rs13030531 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   36 ads   10 Web of Science   31 Scopus   44 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0k 2.5k 5k 7.5k 10k 12.5k For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Remote Sens., EISSN 2072-4292, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy

Paper 10:
- APA Citation: Conde, G., Guzmán, S. M., & Athelly, A. (2024). Adaptive and predictive decision support system for irrigation scheduling: An approach integrating humans in the control loop. Computers and Electronics in Agriculture, 217, 108640.
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: Reported technological tools for irrigation scheduling lack the integration of real-time crop measurements, weather forecasting, and the limitations and variabilities introduced by human operation. Moreover, most of these tools do not provide practical irrigation recommendations, limiting their adoption and benefits in enhancing agricultural efficiency and reducing environmental impact.
  Extract 2: In this study, we introduce a technological solution to enhance the sustainability of water management in agriculture. We developed a decision support system algorithm for irrigation scheduling using principles from control theory. This algorithm encompasses modeling, processing, estimation, and control stages, ensuring the optimality of the model that describes the system.
  Limitations: The study presents the development and validation of a novel control-based algorithm for irrigation scheduling, but it does not provide a comprehensive evaluation of the algorithm's performance in a real-world agricultural setting. Field trials and long-term data collection would be required to assess the practical applicability and effectiveness of the algorithm under diverse field conditions.
  Relevance Evaluation: Highly relevant - The paper is focused on the development of a decision support system for irrigation scheduling, which is within the scope of the review's interest in automated irrigation management systems. The paper presents a novel control-based algorithm that can compute practical irrigation instructions based on field measurements and weather forecasting, which aligns with the review's objective to explore methods for precise, real-time irrigation recommendations. Furthermore, the paper considers the integration of weather forecasts and the role of human intervention, which are key aspects highlighted in the review.
  Relevance Score: 0.95
  Inline Citation: (Conde, Guzmán, & Athelly, 2024)
  Explanation: This study introduces a control-based algorithm for a decision support system (DSS) for irrigation scheduling that can compute practical irrigation instructions based on field measurements and weather forecasting, which is designed to be adaptable to the grower's or irrigation manager's operational limitations, preferences, and experience and must compensate for uncertainties introduced by human intervention.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Methods 3. Experimental verification 4. Results and discussion 5. Conclusions CRediT authorship contribution statement Declaration of competing interest Acknowledgments Appendix. Data availability References Show full outline Figures (14) Show 8 more figures Computers and Electronics in Agriculture Volume 217, February 2024, 108640 Original papers Adaptive and predictive decision support system for irrigation scheduling: An approach integrating humans in the control loop Author links open overlay panel Gregory Conde, Sandra M. Guzmán, Akshara Athelly Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2024.108640 Get rights and content Highlights • Novel DSS for irrigation control integrating human intervention into the loop. • The DSS has the potential of 30% water savings in seepage irrigated crops. • The algorithm uses real-time data and forecasts for precise irrigation scheduling. • The DSS uses a control-oriented model to estimate soil moisture with high confidence. • DSS maintains optimal soil moisture, reducing leaching and runoff risks. Abstract Reported technological tools for irrigation scheduling lack the integration of real-time crop measurements, weather forecasting, and the limitations and variabilities introduced by human operation. Moreover, most of these tools do not provide practical irrigation recommendations, limiting their adoption and benefits in enhancing agricultural efficiency and reducing environmental impact. To address these challenges, we propose an adaptive and predictive irrigation management decision support system by formulating a feedback plus feedforward algorithm that uses modeling, estimation, prediction, and control strategies. The major feature of this DSS is the consideration of human intervention in the control loop. The DSS integrates field data, including soil moisture, rain, temperature, and irrigation, in addition to weather forecasting. It gives irrigation managers precise and practical instructions on how much to irrigate based on preferences for irrigation events. The DSS adapts in real-time to provide irrigation volume recommendations that ensure optimal soil moisture levels are maintained. Our approach includes the incorporation of a simplified control-oriented model (COM) to characterize the soil moisture dynamics, a data processing stage that makes the measured data compatible with the COM, a parameter estimation stage that guarantees an optimal adjustment of the COM parameters, a control stage that uses the parametrized COM, measured information from the crop, and weather forecasts to obtain optimal irrigation volume recommendation. We evaluated our DSS using data from a commercial sweetcorn field in South Florida, where seepage irrigation is used. Our findings show that (i) the proposed model and estimation stage offer an accurate description of the soil moisture dynamics, reaching correlation coefficients and R-squared values greater than 0.92 and 0.84 during all the evaluations, (ii) the algorithm can consistently regulate soil moisture, ensuring it remains at the desired levels reducing the risks associated with leaching and runoff, and iii) water savings can increase by 30%. Therefore, our DSS has the potential to become a standardized platform for providing optimal and practical irrigation recommendations to irrigation managers. Previous article in issue Next article in issue Keywords Smart irrigationHuman in the loopAdaptive irrigation controlPredictive water managementPrecision agricultureDecision support system (DSS)Irrigation schedulingSoil moisture forecastReal-time irrigationIrrigation controlPrecision irrigation 1. Introduction Agriculture is the base of our socio-economical model, and its development plays an essential role in the welfare of nations (Gollin et al., 2002). However, agriculture has a high environmental impact and can be considered one of the most important contributors to global environmental degradation (Mueller et al., 2012). Furthermore, as the global population continues to grow, there is an urgent need to increase food production. This already complex challenge is further intensified by accelerated environmental changes, characterized by significant shifts in precipitation patterns and an increase in extreme weather events such as heavy rains, heatwaves, and droughts (Bisbis et al., 2018). Consequently, it is critical to develop strategies to enhance agricultural production while mitigating its environmental impact. In this context, improvements in irrigation scheduling play an important role, not only because agriculture is the consumer of almost 70% of freshwater resources (Jalilvand et al., 2019), but also because appropriate irrigation scheduling can help to increase the yield production and minimize the leaching of nutrients, pesticides, and heavy metal to freshwater sources (Khatri and Tyagi, 2015). Incorporating technological tools could be a viable solution to improve irrigation scheduling, where the aim is to make irrigation decisions based on the needs of the crops, establishing when the crops need water and how much water needs to be applied. Numerous studies have centered on developing tools that accurately detect plant water stress conditions to determine optimal irrigation. For instance, Torres et al. (2019) employed near-infrared spectroscopy to measure in-situ leaf relative water content. In parallel, other approaches assess plant water requirements using soil moisture sensors (SMS) positioned in the target zone. The use of SMS is the most adopted technology for irrigation scheduling in the USA (USDA, 2018, Taghvaeian et al., 2020), and in many scenarios, a common response to identified irrigation needs is implementing feedback threshold control by using SMS (Dukes et al., 2009, Zotarelli et al., 2010, Zhang et al., 2017, Li et al., 2018, Cayuela et al., 2022, Simionesei et al., 2020), or using fuzzy-based decision systems (Culman et al., 2019, Stone et al., 2020). Both strategies define levels based on measured stress conditions or soil moisture. However, the methodology for setting these threshold levels is not versatile enough to accommodate the diversity of crops, soils, and environmental conditions. Furthermore, these thresholds often remain static, not accounting for the evolving needs of crops influenced by environmental factors, intrinsic crop properties, and growth stages. Accurately determining the volume of water needed for irrigation entails a comprehensive understanding of plant water consumption concerning environmental variables, specific crop attributes, and growth stages (Lopez-Jimenez et al., 2022). Many decision support systems employ crop measurements coupled with AI to estimate and compensate for water losses from the evapotranspiration process (Katimbo et al., 2023). The works developed by Gu et al., 2017, Li et al., 2019 and Chen et al. (2019) aim to bolster decision-support systems for agricultural irrigation by incorporating analytical models such as the Root Zone Water Quality Model (RZWQM). This comprehensive model features modules covering soil water balance, nutrient dynamics, equilibrium soil chemistry, potential evapotranspiration, surface energy balance, heat transfer, pesticide processes, and plant growth, relying on the Decision Support System for Agrotechnology Transfer (DSSAT). RZWQM has been widely utilized to simulate the impacts of agricultural management strategies on crop yields and soil and water quality (Ma et al., 2012). Gu et al., 2017, Li et al., 2019 and Chen et al. (2019) use RZWQM for computing irrigation scheduling based on measurable crop conditions, predefined threshold values, and numerical solutions generated by the model. Nonetheless, employing RZWQM to compute irrigation scheduling in a feedback scheme presents significant challenges due to its inherent complexity and rigidity. The model’s detailed structure complicates the straightforward analyses and inclusion of user-specified requirements and the adaptation to overcome discrepancies between the crop and the model. Furthermore, RZWQM is restricted to a predefined set of cultivars, limiting its versatility to diverse agricultural settings. The complexity also imposes computational constraints, making real-time feedback control based on the current soil moisture state and crop stages challenging. These limitations underscore the necessity for more versatile, adaptive, and computationally efficient irrigation scheduling strategies. To this end, some studies have explored advanced control theory as a systematic approach to the irrigation problem (Saleem et al., 2013, Delgoda et al., 2016, Shang et al., 2020). As mentioned by Romero et al. (2012) and Ding et al. (2018), using advanced control strategies in agriculture has a high potential to increase efficiency. However, tangible applications are sparse. Much of the documented research revolves around simulations (Romero et al., 2012). While comprehensive on paper, some models oversimplify real-world scenarios by presupposing fully instrumented crops. Contrarily, in practical settings, agricultural systems often struggle with control limitations. In many irrigation systems, manual intervention dominates, where operators activate or deactivate pumps, manage ditches, and manipulate valves or gates to regulate irrigation. In summary, we evidence a lack of irrigation strategies that balance efficiency, practicality, and real crop management considerations. Many current methods rely heavily on static thresholds or intricate models, which often do not adapt dynamically to changing environmental conditions, diverse crop needs, irrigation management practices, and different growth stages. Moreover, while advanced control theory holds promise, there is an absence of advanced control strategies that account for real-world complexities and manual human intervention in the operation of irrigation systems, where the timely human response to crop needs, actuation precision, and operational reliability are important elements that influence the controlled system. Against this backdrop, the primary objective of this research is to use control theory to enhance the efficiency of irrigation systems, particularly in real agricultural scenarios that are often human-operated. We propose developing a novel control-based algorithm for a DSS for irrigation scheduling capable of computing practical irrigation instructions based on field measurements and weather forecasting, which is designed to be adaptable to the grower’s or irrigation manager’s operational limitations, preferences, and experience and must compensate for uncertainties introduced by human intervention. We have formulated our DSS around a simplified proposed control-oriented model (COM), which describes the soil moisture dynamics; a data processing stage, which makes the measured data compatible with the COM; a parameter estimation stage, which guarantees an optimal adjustment of the COM parameters based on measured information from the crop; and a control stage, which uses the parametrized COM, measured information from the crop, and information from weather forecasting to compute the appropriate irrigation instructions that maintain the soil moisture close to a desired level. We evaluated our algorithm using collected data from a seepage-irrigated commercial sweetcorn field in South Florida. Our evaluations covered each component of our system, from model validation to overall system performance. As a principal outcome, the proposed algorithm presents the potential to save 30% of water in this type of irrigation system. This water-saving is facilitated through effective and achievable computed irrigation scheduling that maintains soil moisture within a targeted range. Such control preserves optimal growing conditions and minimizes environmental risks by preventing runoff, percolation, and the leaching of hazardous agricultural chemicals into the surrounding ecosystem. The remainder of the paper is organized as follows. Section 2 starts with an overview of soil moisture and irrigation scheduling, establishes the problem of formulating a control-oriented DSS for irrigation scheduling, and offers a detailed description of the proposed DSS algorithm. Section 3 describes the process following to validate the proposed algorithm. In Section 4, the results of the validation are presented and discussed. Finally, in Section 5, some conclusions are drawn. 2. Methods 2.1. Process description and problem formulation The relationship between irrigation, soil, plants, and the environment constitutes a complex system that requires practical concepts and analogies to formulate optimal irrigation strategies. As delineated in Eisenhauer et al. (2021), soil can be conceptualized as a reservoir, with different levels representing the amount of water available for plant uptake. We adopt this conceptual framework to simplify a complex problem that involves agriculture, control theory, and human interaction and to formulate the control problem on a DSS for irrigation management. Within this context, we identify key input and output variables, delineate desired conditions or set points, and specify agricultural constraints and human limitations. Download : Download high-res image (512KB) Download : Download full-size image Fig. 1. Schematic illustration of soil moisture states significant for plant-water relations and irrigation control based on Eisenhauer et al. (2021). The Permanent Wilting Point (PWP) delineates the lower threshold of soil water content at which plants cannot recover from water stress, marking the limiting boundary for plant survivability. The Maximum Allowable Depletion Point (MADP) is a critical reference, as soil moisture levels below this point result in sub-optimal physiological responses in plants. The soil moisture range between MADP and Field Capacity (FC) is optimal for plant growth, balancing water availability and stress prevention. Surpassing FC leads to inefficient water use, soil structural degradation, anaerobic root conditions, nutrient leaching, and the potential for surface water pollution. Beyond the Saturation Point (SP), the soil reaches its hydraulic limit, becoming incapable of retaining additional moisture. Fig. 1 illustrates this analogy: the base level, or the Permanent Wilting Point (PWP), indicates that below this threshold level, plants cannot extract water from the soil, leading to irreversible wilting. The next critical point is the Maximum Allowable Depletion Point (MADP); if the soil moisture drops below this level, the plants undergo water stress, potentially reducing yield. Consequently, MADP often serves as a guideline for irrigation decisions as the lower limit. However, its precise value, i.e., the percentage of MADP as the lower limit, can vary based on the crop, its growth stage, and prevailing climatic conditions. For instance, Bayabil et al. (2023) demonstrated that using only 75% of the expected MADP saved 25% of water consumption, with no reduction in sweet corn yield. Similarly, strategic deficit irrigation during certain growth stages of wine grapes enhances fruit quality for winemaking (Kang et al., 2023). From a control systems perspective, the Maximum Allowable Depletion Point (MADP) is a critical set-point or lower-bound constraint that must be maintained. Failure to uphold soil moisture levels at or above this threshold can lead to suboptimal plant physiological responses and yield reduction. The Field Capacity (FC) is defined as the soil water content threshold beyond which the gravitational drainage is negligible and is considered the upper limit. Below FC, the capillary actions keep the water stored in the soil pores. Irrigating until reaching FC and avoiding exceeding field capacity prevents the leaching of nutrients and pesticides applied to the crops. The saturation point (SP) is attained when the soil can no longer retain water, leading to runoff on the surface, which poses significant environmental concerns. Soil texture significantly influences key hydraulic characteristics such as the PWP, FC, and SP. Saxton and Rawls (2006) provide detailed hydraulic characteristics across various soil textures, as illustrated in Fig. 2. From this figure, it becomes evident that managing irrigation in sandy soil is notably challenging. A simple 5% fluctuation in water content in such soil can either lead to plant wilting or result in water wastage. In contrast, silt soils offer better flexibility: water content can vary by as much as 24% without triggering any adverse agricultural or ecological consequences. Therefore, the soil’s proportion of sand, silt, and clay plays an important role in the control problem definition and for specific irrigation decisions. Conceptually, for control purposes, soil can be viewed as a storage unit, where the area depends on the soil texture, the control input is irrigation, and the control objective is maintaining the volumetric water content to a desired level. However, additional considerations must also be included in the case of a DSS for irrigation control. Download : Download high-res image (256KB) Download : Download full-size image Fig. 2. Volumetric water content at the Permanent Wilting Point (PWP), Field Capacity (FC), and Saturation Point (SP) for different soil texture classes. Moreover, we are illustrating a Maximum Allowable Depletion Point (MADP) of 50% of the available water for each soil class. Points over each bar denote the specific values. This figure is based on the hydraulic characteristics reported by Saxton and Rawls (2006). 2.1.1. Control challenges on a decision support system for irrigation scheduling A DSS for irrigation scheduling is particularly useful in farm systems with no automatic control elements, where the grower or irrigation manager carries out irrigation actions. In our proposed DSS, the control problem is to use available information from crops and weather forecasting to compute irrigation instructions that help the user minimize the error between desired and measured soil moisture. Below, we discuss some considerations that must be addressed. Timely Human Response: The grower or irrigation manager cannot execute irrigation instructions quickly and suddenly. For that, even if sensors and computational capabilities can offer periodic information with sampling periods of minutes or seconds, this information will be unhelpful and might overwhelm or confuse the operator. Moreover, if an irrigation instruction suddenly appears when the operator is unavailable to make an irrigation action, it might not generate the expected result. Actuation Precision: Many conventional irrigation systems rely on actuators that operate more as binary switches than precision instruments. In agriculture, it is common to find devices such as on–off pumps, gates, weirs, and valves, which are unsuited for precise operation. Hence, recommendations should be straightforward and actionable, such as suggesting irrigation during a time rather than maintaining a specific flow rate. Human Reliability: Even with precise recommendations from the DSS, human behavior introduces variability. External influences can alter the final action taken, introducing a layer of uncertainty. Considered Measurable Variables: In most agricultural practices, rain ( ), irrigation ( ), and temperature ( ) are the main measurable variables affecting root zone soil moisture ( ). While capillary effects from the deep soil also influence root zone soil moisture, quantifying these effects necessitates more elaborated measurement techniques compared to the direct measurement of the aforementioned variables. Integration of Weather Forecasts: Meteorological advancements have made weather predictions increasingly accurate. Governments worldwide are making concerted efforts to provide weather forecasts as part of impact-based decision-support services. These forecasts, especially regarding expected rainfall and temperature, are crucial for making informed irrigation decisions, ensuring optimal water use, and supporting crop health. 2.2. Proposed approach We address the control challenges by proposing a DSS presented in Fig. 3, which integrates measured information from the crop and weather forecasting to compute irrigation instructions. The DSS integrates control theory and accommodates timely human response by working periodically and allowing the grower to determine the irrigation period1 for these executions. Furthermore, the DSS provides practical and realizable irrigation instructions, given in units of volume per irrigation period or irrigation time per irrigation period. For instance, if the grower selects a two-day irrigation period, the DSS will calculate the necessary volume of water or irrigation time that must be applied for each two-day interval. Download : Download high-res image (658KB) Download : Download full-size image Fig. 3. Graphical description of the proposed Decision Support System (DSS) for irrigation scheduling. The description illustrates the measured variables, where represents the instant time when the data is obtained, indicates the temperature, rain, soil moisture, and irrigation. The DSS is formulated with four main components: (i) the control-oriented model (COM), used as a base of the control algorithm; (ii) the data processing stage for aligning multi-temporal sensor data with algorithmic components; (iii) a parameter estimation stage for updating model parameters ( ); and (iv) a control algorithm that utilizes the COM, estimated parameters, processed measurements, and weather forecasts to calculate irrigation instructions ( ). The DSS uses measured variables from the crop, where rain and temperature can be obtained from a weather station, and volumetric water content can be obtained from soil moisture sensors. To address the system’s robustness against human variability in irrigation execution, our DSS additionally considers measuring this execution, i.e., obtaining measurements of irrigation time per irrigation period or volume of water per irrigation period. This measurement can be obtained from flowmeters or sensors for flow detection. The proposed approach (Fig. 3) is supported by (i) a COM of the SM, (ii) a data processing stage, (iii) a parameter estimation stage, and (iv) a control algorithm. In this approach, the COM serves as a parametrizable model that characterizes soil moisture as a function of processed measured variables and parameters to be estimated. At each irrigation period, the estimation stage calculates and updates the parameters. Then, the control stage uses the COM, the estimated parameters, soil moisture measurements, and weather forecasting data to determine the appropriate irrigation action that maintains the soil moisture at the desired value. A detailed breakdown of each component of the DSS is provided below. 2.2.1. Proposed control-oriented model for soil moisture The most important element of the proposed strategy is the COM. In agriculture, traditional models often focus on capturing the complexity of various biophysical processes. Although accurate, these models are often computationally expensive and not straightforwardly applicable for control design. We have derived the COM from a simplified water balance, as Fig. 4 describes. This model considers the soil a storage unit, where a linear combination of adaptable parameters and measured variables performs a water balance with inputs, including rain, irrigation, and upward capillarity. On the other hand, outputs include evapotranspiration, deep percolation, and runoff. The choice of a simplified model inevitably raises concerns about the sacrifice of modeling accuracy. However, in our DSS algorithm, this drawback is mitigated by continual parameter estimation based on real-time data and by incorporating feedback in the control equation. Our COM is formulated based on three assumptions: Download : Download high-res image (550KB) Download : Download full-size image Fig. 4. Water balance used to describe the soil moisture dynamics, where , and are outputs associated with evapotranspiration, and deep percolation; , , and are inputs associated to rain, irrigation, and capillary rise. Assumption 1 Model Sampling Period The COM is formulated with a fixed time step, denoted by , corresponding to the irrigation period. This fixed period allows for the discretization of soil moisture dynamics, indexed by the variable . Our DSS algorithm is based on the COM, which is discrete and will describe the soil moisture dynamics according to the irrigation period ( ). The grower or irrigation manager can configure to suit their operational preferences. Consequently, the COM and, by extension, the DSS algorithm are adaptable to those preferences. For instance, if a two-day irrigation period is selected, the COM will effectively model soil moisture dynamics under this discrete time interval. It is highlighted that, in practice, sensors often provide data at multiple sampling frequencies. We have designed specific data management techniques to reconcile this multiplicity of data with the user-defined irrigation period . These techniques are detailed in Section 2.2.2. Assumption 2 Soil Moisture Average During an appropriate irrigation period, it is reasonable to presume that the available water for the plants within the root zone is closely around an average soil moisture value, denoted as . This assumption enables us to formulate the control objective as maintaining this average soil moisture close to a desired level . This assumption simplifies both the model and the DSS algorithm. However, we clarify that choosing a lengthy irrigation period might be comfortable for the irrigation manager but can be risky for the plant’s health. Conversely, opting for shorter irrigation periods can mitigate potential water deficit issues during this period, but at the expense of demand for more managerial time. The optimal irrigation period depends on the crop type, environmental conditions, and highly on soil type. For instance, sandy soils, characterized by low water retention capacities, necessitate shorter irrigation periods than silt soils, which can retain almost six times more water (see Fig. 2). It is pertinent to note that the temporal resolution of the COM is directly correlated with the chosen irrigation period . A shorter irrigation period effectively enhances the temporal resolution, allowing the model to capture more rapid fluctuations in soil moisture and other variables. However, this comes at the expense of increased computational and managerial demands. The adaptability in selecting allows for a trade-off between temporal resolution and operational convenience. Assumption 3 Linear Relation Soil moisture operates as a causal system. The future average soil moisture is influenced by its prior water content and the inputs and outputs during this irrigation period. We are considering average soil moisture variation between successive irrigation periods, which is represented as , as a linear relation of the water balance during such irrigation period. We are formulating that in the upcoming irrigation period, the soil moisture average will depend on the actual soil moisture average and a linear combination between parameters (rates of change) and accumulated amounts of water inputs and outputs during the current irrigation period. In this form, we denote water input as the accumulated amount of rain during the irrigation period and the parameter as the rate of change between and . Note that the rain units are commonly expressed in units of the water depth accumulated in the area under study. Since is a summation of measurements, it retains the same depth units, resulting in being dimensioned as soil moisture per unit of depth. Similarly, we denote the input as the accumulated amount of irrigation during the irrigation period and the parameter as the rate of change between and . Irrigation can be measured in units of depth, volume, or, in our case, for simplifying sensor instrumentation and data acquisition, irrigation time. reflects the total time that the crop is irrigated during the irrigation period, resulting in being dimensioned as soil moisture per unit of time. To streamline the electronic instrumentation, we are not considering measured variables corresponding to the capillary rise input, as this capillary rise comes from the water table. Instead, the input associated with capillary rise will be treated as an unknown parameter, denoted by . As discussed in the process description (Section 2.1), the infiltration and runoff are directly related to the soil moisture. For that, we are associating this output to the combination between the soil moisture average and the parameter , which is adimensional and represents the rate of change between and . The most adopted method to evaluate evapotranspiration is the FAO-56. This method requires the measurement of multiple environmental variables beyond the scope of our DSS, such as net radiation, soil heat flux, wind speed, saturation vapor pressure, and actual vapor pressure. Inspired by simpler models such as the Hargreaves Method (Gao et al., 2017), we overcome this issue by relating evapotranspiration directly to the temperature average ( ) via the estimated parameter , which has soil moisture per temperature units and describes the rate of change between and . Therefore, according to the assumptions and the proposed linear combinations that describe the system inputs and outputs, our parametrizable COM is formulated as (1) where , , , , and are positive parameters to be estimated, and the variables , , , and are obtained in the data processing stage from measured raw data. 2.2.2. Data processing stage The primary objective of this stage is to utilize measured data to compute the average soil moisture, total rainfall, total irrigation, and average temperature over the duration of the irrigation period. In that form, knowing a fixed irrigation period spanning from the time instant to and considering the sampling period of the respective sensor as , the number of samples within an irrigation period can be defined as: (2) With this, the average soil moisture is determined by: (3) Similarly, the average temperature is given by: (4) The accumulated rainfall over the period is computed as follows: (5) The accumulated irrigation is: (6) In Fig. 3, the data processing stage also processes rain and temperature forecast data. This data process uses the same methods followed in Eqs. (5), (4), considering the sampling time used for the forecasting provider. The expected accumulated rainfall for the next irrigation period is noted as , and the expected temperature average is noted as . 2.2.3. Parameter estimation stage We aim to estimate the parameters inherent to the COM, namely , , , , . Our strategy hinges on maintaining a record of processed data, from which we derive an optimization-based approach for parameter estimation. This method is a variation of the Moving Horizon Estimation (MHE) technique (Rao et al., 2001). Our variation comprises an expanding estimation window, and this is slightly different from the conventional MHE, where a fixed-size window is used. Moreover, we propose to ensure the estimated parameters’ optimality by formulating a two-step estimator. The decision to use an expanding window arises from the unique characteristics of seasonal crops and the observed irrigation practices by growers. Notably, some crops can be ready for harvest just 30 days post-planting. Additionally, the irrigation schedules set by growers can fluctuate significantly, ranging anywhere from one to more than five days. Given these dynamics, valuing and utilizing every data collected from the crop throughout its growth cycle is imperative. Moreover, with a fixed-size estimation window, we risk encountering data windows without rain events or irrigation events, which can impact the estimation of parameters related to rain and irrigation. We use an expanding estimation window to mitigate this, ensuring the algorithm always has access to a sufficient data set. For permanent crops, the analysis might benefit from a moving window with a fixed size long enough to guarantee optimal parameter estimation. For data aggregation within this expanding window, we consider vectors of processed data from the instant to the instant . Hence, the processed data for soil moisture, rainfall, irrigation, and temperature within each estimation window is defined as: with . In that form, according to the corresponding estimation window, the parameters , , , , and are estimated at each irrigation period, given adaptive characteristics to the COM. We employ a two-step estimation strategy to guarantee the optimality of our estimated parameters: the first step estimates parameters in association with measured variables. In contrast, the subsequent step estimates the parameter linked to the water table. Prior estimation step At this step, we assume a water table’s slow dynamic variation in seepage irrigation and general water table elevation. For that, has a low incidence in the variation of the soil moisture. Consequently, we exclude in the first estimation step. This step estimates the parameters that minimize the quadratic error between the soil moisture variation and the linear combination between the measured variables and the parameters associated with the measured variables. In this estimation step, we are including a constraint to ensure that all the parameters must be positive to conserve the proposed physical relation of the mass balance. The proposed optimization problem is formulated as follows: Download : Download high-res image (40KB) Download : Download full-size image where is the vector of parameters that are associated with measured variables , and is the quadratic error described as (8) with , and . For the optimization problem (Eq. (7)), the linear constraints imply that an optimal solution is achievable if is convex. The convexity of this cost function can be established if its Hessian matrix respect to is positive definite (Bhatia, 2015), which in turn depends on the linear independence of the columns in . Variability in soil moisture and temperature can generally be assumed, ensuring the linear independence of corresponding columns in . However, given that rainfall and irrigation can exhibit extended periods of invariability, the algorithm is designed to commence only when observed variability in and is confirmed. Subsequent estimation step After estimating the parameters associated with the measured variables, is estimated. As we consider this parameter directly related to the soil moisture, we propose to find the parameter that minimizes the quadratic error between the measured soil moisture and the estimated soil moisture with initial conditions given by . Where the estimated soil moisture is obtained from the water balance in Eq. (1), and the numerical solution of the model (Eq. (1)), which is described as (9) In that form, we propose a subsequent optimization problem described as Download : Download high-res image (40KB) Download : Download full-size image where is the quadratic cost function given by (11) with . In this optimization problem, the constraints are also linear. In Appendix, it is shown that by appropriate substitutions, appear as a linear combination into the numerical solution given by , confirming the convexity of the cost function and that optimal solutions of also can be guarantee. 2.2.4. Control stage In the control stage, the COM, the estimated parameters, the processed measured variables, and the forecasted variables are integrated to calculate the amount of water that must be applied during the irrigation period. This stage is an adaptive, predictive, and feedback-plus feedforward control strategy. The main objective is to use measured and forecast information to estimate the appropriate irrigation ( ) that maintains the soil moisture close to a desired value. We explain the control strategy in four steps, where first, the control-oriented model (Eq. (1)), the estimated parameters obtained in Eqs. (7), and (10), and the processed measured data (Eqs. (3), (4), (5), and (6)) are used to predict (or forecast) the soil moisture one step ahead ( ) as follows: (12) Second, we use the control-oriented model (Eq. (1)), the predicted soil moisture , forecast rain and temperature data ( , and , and we assume that in the next irrigation period, the estimated parameter variation can be neglected or in other words that . With this information, we predict the soil moisture two steps ahead ( ) as follows: (13) Third, we establish the objective to deduce the irrigation amount to be applied, such as two steps ahead, the predicted soil moisture will be equal to the desired soil moisture. Therefore, by replacing in Eq. (13) and obtaining , we deduce the irrigation amount equation as follows: (14) Fourth, to analyze and understand the elements of the irrigation amount equation, we define the expected error between the desired soil moisture and the expected soil moisture as . Therefore, Eq. (14) can be rewritten as follows: (15) where the elements of the irrigation control equation can be described as components of the water balance that equilibrates the soil moisture around the desired value as follows: is the amount of irrigation that must be applied to compensate for the difference between the desired moisture and the expected average of the soil moisture; is the amount of irrigation that must be applied to compensate the water that, during the irrigation period, was lost due infiltration; is the volume of irrigation water that can be hold based on the expected rain during the irrigation period; is the amount of irrigation that must be applied to compensate the water that is expected to be lost due evapotranspiration; is the amount of water the crop will receive from capillary rise. Note that this control action is a case of adaptive control, knows a self-tuning regulator, where the stability of the controlled system is conditioned to the accuracy of the estimated parameters and the grade of uncertainty between the controlled system and the estimated system (Åström and Wittenmark, 2008). 3. Experimental verification The algorithm was validated using on-field measurements from a commercial sweetcorn field in South Florida. This data was initially collected as part of an integrated research and extension project focused on improving farmers’ adoption of soil moisture sensors for irrigation scheduling in vegetable farms. We evaluated our DSS algorithm using readings from soil moisture probes, a weather station, and a pressure transducer deployed in the commercial field. In this section, we describe the data collection process and the algorithm evaluation towards establishing the potential benefits of the algorithm in comparison with the information obtained from the grower irrigation practices. As shown in Fig. 5, we installed sensors to measure soil moisture, precipitation, environmental temperature, and irrigation management from December 21, 2022, to January 11, 2023. Due to confidentiality agreements, the precise location of the commercial field remains undisclosed in this study. The soil in this field is classified as waveland and lawnwood fine sands. Following the hydraulic properties reported by Saxton and Rawls (2006) (Fig. 2), this soil is characterized by a permanent wilting point of 5%, a field capacity of 10%, and a saturation point of 46%. The field water movement and location of the sensors are described in Fig. 5, where the field is surrounded by a channel supplied by a pump drawing from a natural water source. Water is distributed from this surrounding channel to the crops via pipes. This water is then dispersed into ditches across the field. These ditches feature interconnected silts that facilitate water transport to the plant beds. Irrigation is accomplished by increasing the water level in the channel. It is important to note that this system operates under the assumption of homogeneous water distribution, with the water supply pump serving as the unique control element. Download : Download high-res image (568KB) Download : Download full-size image Fig. 5. The experimental verification description features the deployment of a weather station, a soil moisture sensor, and a pressure transducer. The blue lines delineate the water distribution inflow utilized for irrigating the agricultural field under study. Under the homogeneous water distribution consideration, moisture measurements were taken in the root zone at a depth of 0.3 m, using a Sentek Drill & Drop 60 cm soil moisture probe, which is capable of measuring soil moisture, temperature, and salinity at uniformly spaced depths every 0.1 m, providing a profile up to 0.6 m depth (Sentek, 2018). The sampling time was 1800 s. Rain and temperature data were obtained using a Davis Vantage Pro2 GroWeather 6820c weather station (Davis, 2023). The sampling time was 900 s. Irrigation measurements were taken by installing a KPSI 700 pressure sensor at the bottom of the channel. This sensor has a range of 0.7–210 m, an accuracy of 1% with analog output from 0 to 10 V. The objective was to identify sudden increases related to pump activation to establish the irrigation time during the irrigation period. The pressure sensor was connected to a CR1000X datalogger of Cambell Scientific (Campbell, 2023) with a sampling time of 300 s, and the irrigation management was established by analyzing this information. The proposed DSS algorithm was tested using Matlab software version R2022a (Matlab, 2022). The irrigation period was selected by analyzing the irrigation management given by the grower. We observed that the management given by the grower was in function of soil and crop appearance, irrigating when required, and turning the pump on and off with an elapsed time between 1 and 6 days. Given this information, our algorithm testing incorporated an irrigation period of two days ( ). We consider that with this period, we can provide reasonable timing actions from the grower. We added normally distributed random noise to the measured data to simulate the inherent stochasticity in weather forecasts. Specifically, the magnitude of this noise was set at 10% of the standard deviation of the actual measured data. In the context of rainfall predictions, any resultant negative values post-noise addition were truncated to zero. The maximum allowable depletion for sweet corn was considered 50% (Bayabil et al., 2023). We determined the desired soil moisture between 7.5% and 10%. We selected a desired soil moisture of 9% to stay far from the maximum allowable depletion point and accommodate uncertainties in soil characteristics. Before initializing the algorithm, we converted missing data entries to zeros. Soil moisture and irrigation data underwent homogenization through interpolation to match the 900 s rain and temperature data sampling interval. In the prior estimation step, the optimization problem was formulated as a quadratic programming problem and iteratively solved using the “quadprog” tool in Matlab. In the subsequent estimation stage, the optimization problem was iteratively addressed using a sequential quadratic programming method with the “fmincon” tool in Matlab. Then, in the test, the data is processed at each irrigation period to obtain the corresponding averages of the temperature and soil moisture and the corresponding amounts of accumulated rain and accumulated irrigation applied by the grower. Moreover, the model’s parameters are estimated at each irrigation period, and the recommended irrigation is computed. We evaluated the overall DSS algorithm by applying the computed control action to the parametrized COM. We are addressing the uncertainties related to assuming negligible estimated parameter changes between consecutive irrigation periods by adding stochastic variability, which was obtained by analyzing the variation of the estimated parameters and adding a randomized normal distributed disturbance with a standard deviation equal to the observed standard deviation of . In that form, the stochastic soil moisture prediction is given by (16) where , , , , and are the corresponding disturbances. In consequence, the evaluated control action is also disturbed by including the stochastic soil moisture prediction as (17) Below, we present the outcomes of our analysis. 4. Results and discussion Fig. 6 shows the results of the data processing stage. Note how the temperature ( ) shows a periodic component related to day and night patterns, also presented in the soil moisture ( ). However, this periodic component is removed in both the processed temperature ( ) and soil moisture ( ). In the case of accumulated rain ( ), the processed data is presented as the cumulative sum for each irrigation period. The grower irrigation decision represents the accumulated hours the grower irrigated during each irrigation period. The data processing stage is pivotal in aligning the measured data with the model and significantly mitigating uncertainties from the measured parameters of soil moisture, temperature, rain, and irrigation. As described, this stage computes the average soil moisture, total rainfall, total irrigation, and average temperature over the duration of each irrigation period. This computation aids in filtering out uncertainties and undesired data anomalies provided by sensors and forecasting methods. By averaging soil moisture over an irrigation period, the impact of incorrect measurements and transient spikes not contemplated in the model and random fluctuations are reduced, leading to more representative information on the available water for the plants. For example, in Fig. 6, an anomalous temperature measurement close to −20 °C is observed on Jan-08-23. This incorrect measurement was filtered out in the processed temperature data, thus attenuating its influence. Furthermore, considering accumulated rain and irrigation data in the data processing stage notably enhances the DSS robustness by minimizing the influence of uncertainty in both the measurement and prediction processes. It is essential to emphasize that uncertainties in measured rainfall and irrigation data, sampled every 900 s, have a diminished impact on the estimation and control stages as the duration of the irrigation period increases. This reduction in the influence of data uncertainty is pivotal for the robustness, accuracy, and reliability of the entire DSS algorithm. Download : Download high-res image (614KB) Download : Download full-size image Fig. 6. Comparison between measured data ( , , , ) and processed data ( , , , ), whereby processing is obtained a simplified description of the system dynamics. Fig. 7 shows the measured, estimated, and predicted soil moisture data. This data is updated for every irrigation period, where the measured grower irrigation decision is incorporated as input data to estimate and predict soil moisture. For this experimental verification, the estimation and prediction process starts on January 02, when there are sufficient variations in rainfall and irrigation data. It also shows how the estimation window ( ), denoted by the green line, aligns with the processed soil moisture measurement ( ) from to . Similarly, the soil moisture prediction ( ), denoted by the blue line, consistently corresponds with the processed soil moisture measurement. Download : Download high-res image (972KB) Download : Download full-size image Fig. 7. Comparison of processed soil moisture from to (red lines), estimated soil moisture (green lines) and predicted soil moisture (blue lines). Fig. 8 shows the statistical analysis of the estimation and prediction accuracy. This figure displays the values, correlation coefficients, p-values, and the average and distribution of the estimation errors for each estimation window. All estimation windows yield high correlation coefficients and values. The lowest recorded correlation and values are 0.92 and 0.84, respectively. In addition, the -value starts at and decreases as the estimation window expands, reaching a minimum of . The consistently high correlation and values across all estimation windows suggest that the estimation algorithm performs well in describing the dynamics of the soil moisture average. The lowest value of 0.84 indicates that, in the worst-case scenario, the COM can explain an 84% of the variability in the soil moisture average. On the other hand, the lowest correlation value of 0.92 indicates that we are reaching a strong linear relationship between the proposed COM and the observed soil moisture averages. The low and decreasing -value describes a high level of confidence in the accuracy of the estimations, which increases as the estimation window increases. Download : Download high-res image (488KB) Download : Download full-size image Fig. 8. Statistical analysis of estimation errors across the estimation windows, including their average and standard deviation. The figure also visualizes prediction error behavior for each prediction instance. The results indicate that the average estimation error across all estimation windows is around zero, with maximum standard deviations of . The prediction error is similarly centered around zero, exhibiting maximum and minimum errors of . As the estimation window increases, the prediction error decreases. However, an increase in the prediction error is evidenced on Feb-05. This problem is also observed in the estimation analyses, with a decrease in the and correlation. On this particular estimation, the commercial sweetcorn field experienced an intense rainfall of 26.67 mm within 24 h. This led to a substantial change in soil moisture levels, which the algorithm failed to estimate accurately, resulting in a peak error of 3.29%. This behavior shows that close to the desired operation region (between the MADP and FC), the soil–water relation can be described as a linear model, where our COM can accurately describe the dynamics. However, the COM accuracy reduces in extreme events that move the SM content away from the desired operation region. Our proposed approach overcomes the uncertainties associated with using a simplified modeling approach by considering a recursive parameters estimation strategy that lets the model adapt to changing crop and environmental conditions. The modeling and estimation approach is capable of accurately describing the soil moisture dynamics close to the operation region, overcoming associated uncertainties, and can be used as a baseline for making irrigation decisions. To delve deeper into the validation and performance of our modeling and estimation approach, a comprehensive analysis of the distribution of the estimated parameters is subsequently provided. Fig. 9 shows the distribution of the parameters and the incidence of the estimated parameters in the COM. It can be observed that the parameters associated with moisture ( ), irrigation ( ), rain ( ), and temperature ( ) exhibits a low dispersion in contrast with the parameter associated to the capillary rise ( ). A sensitivity analysis of the estimated parameters can be performed by multiplying the obtained parameters by the maximum reported value per respective variable, obtaining how much the soil moisture can increase or decrease according to the parameter dispersion and the maximum values reported for each variable. The results show that during an irrigation period, the soil moisture could (i) decrease a 1.5% concerning maximum soil moisture of 13.6%; (ii) increase around 3.6% with 48 h of continuous irrigation; (iii) increase around a 3.7% in relation with 26 (mm) of rain on a period of 48 h; (iv) decrease around 0.3% with a maximum temperature average of 23.3 (°C); and (v) increase around 0.06% in relation with the capillary rise. Note that the parameter that shows the high dispersion in the estimation process is . However, gives the most significant influence. Moreover, it is observed that soil water losses from leaching and runoff could be five times higher than the amount lost due to high temperature, which is related to the evapotranspiration process. Download : Download high-res image (202KB) Download : Download full-size image Fig. 9. Distribution of the parameters and incidence of their distribution in the model. Fig. 10 shows that the variations of the estimated parameters are distributed close to zero. This dispersion accounts for the expected variation that the parameters could present between irrigation periods. For example, in the case of rain, from Fig. 9, we have that the parameter associated ( ) is close to 0.11. From the standard deviation of , we can expect that this parameter could be different around in the next irrigation period. This uncertainty is reflected in the prediction of the soil moisture Eq. (16) and in the control action, which is taken based on that prediction. For that, the standard deviations of the variation of the parameters shown in Fig. 10 are used to add uncertainty and perform a realistic simulation in the presence of such uncertainty. The results of the controlled system are shown in Fig. 11, where we compare the system’s measured data with the expected data if the proposed algorithm is used to manage irrigation. Download : Download high-res image (148KB) Download : Download full-size image Fig. 10. Distribution of the variation of the parameters. Fig. 11 compares against , and against , where , and are the created synthetic temperature and rain data used in the evaluation of the control action Eq. (17). We can observe that the difference between and is imperceptible. This is because the added normally distributed random data is filtered in the process stage. This is important because a similar result can be expected by using data from the corresponding weather forecasting services, highlighting the importance of the data processing stage in enhancing the algorithm’s robustness. On the other hand, it is observed that due to the processing stage, rain presents more sensitivity to the added random data. That is because, in the case of rain, the limitation to zero of the applied noise affects his distribution. Download : Download high-res image (583KB) Download : Download full-size image Fig. 11. Evaluation of the proposed control approach by showing (i) the comparison between measured temperature (red) and expected temperature; (ii) measured rain (red) and expected rain; (iii) measured soil moisture (red) and controlled soil moisture if the recommendations provided by the DSS are applied; and (iv) measured irrigation actions (red) and recommended irrigation actions by our DSS. In Fig. 11, we are also presenting the comparison between the measured soil moisture and the expected soil moisture if the grower uses the computed recommended irrigation . In the comparison, we included the desired soil moisture ( ), and we can observe how the controlled moisture tries to be around this value. It is important to mention that the computation of starts on January 02, when the first prediction data is available (see Fig. 7); before that, and are the same. The most notable difference between the irrigation scheduling given by the grower and the irrigation scheduling computed by the algorithm is that the algorithm does not generate saturated irrigation actions of 48 h. The algorithm aims to uphold an average irrigation duration of 10 h every two days. This duration fluctuates proportionally with forecasted temperature changes (as seen on January 18) and inversely in response to anticipated rain events (as evidenced on January 24). On the other hand, the decisions taken by the grower show that he is reacting to extreme events. For example, on January 18, the irrigation was turned off when the average soil moisture reached a maximum of 13.85% (percolation). Also, it is observed that the irrigation is turned on on February 01, when the soil moisture is close to reaching the allowable depletion point of 7.5%. In contrast, the controlled moisture is close to 9, avoiding the environmental impact of percolation and also avoiding the crop risk of reaching an allowable depletion point. However, it is important to mention that the decisions taken by the grower show expertise in dealing with this complex process on the most difficult type of soil (see Fig. 2), avoiding the allowable depletion point and maintaining the soil moisture close to the available water region. Fig. 12 compares the cumulative irrigation hours applied by the grower with those used for the proposed algorithm. On February 09, the grower reported a total of 367 h of irrigation, while the algorithm used a total of 258 h. This result demonstrates the potential of our algorithm to save 30% of the water typically used in seepage-irrigated crops in Florida. Notably, seepage irrigation systems are known for their low efficiency, often falling below 40% (Dukes et al., 2010). Despite this inefficiency, they remain prevalent in Florida. According to the current grower records (personal communication), a single hectare of seepage-irrigated sweet corn can consume around 1500 m3 of water per season. Using this volume consumption as a baseline, our proposed algorithm has the capacity to increase water use efficiency up to 450 m3 per hectare per season. This finding underscores the substantial water-saving potential of our DSS, highlighting its significance for sustainable agriculture if it is adopted in the state of Florida. Download : Download high-res image (176KB) Download : Download full-size image Fig. 12. Comparison of the cumulative sum of irrigation hours between the grower technique and the recommendations provided by the proposed decision support system. Our study demonstrates significant advancements in irrigation management, particularly in incorporating information from weather forecasting services to optimize irrigation scheduling. Our approach has shown reduced irrigation time in response to anticipated rainfall events. This predictive capability offers a distinct improvement over fully automated systems as those reported by Domínguez-Niño et al. (2020) and approaches that at the beginning of the season precalculate irrigation management based on crop models as reported by Hodges et al. (2022), where a consistent reduction in irrigation corresponding to rainfall is not evident. We also highlight that the proposed strategy integrates multiple information sources for optimal irrigation management based on soil moisture and water balance. This is an advancement over the traditional approach presented by El-Naggar et al. (2020), where the use of soil moisture sensors and soil water balances are seen as independent control techniques, which are compared to elucidate the most suitable irrigation practices. While the modernization of irrigation systems, as discussed by Çetin et al. (2023), is crucial for sustainable agriculture and water conservation, it often involves significant initial investments. This can be a major barrier in regions still reliant on traditional irrigation methods such as seepage. Our research addresses this challenge by demonstrating that substantial water savings can be achieved without full-scale modernization and automation of irrigation systems. Our study’s results highlight our approach’s environmental benefits, presenting it as a cost-effective alternative for enhancing the sustainability of irrigation practices in diverse agricultural settings. Future studies involve evaluating the algorithm across varied agricultural settings, encompassing different soil types, irrigation methods, different regions, and crops. This is crucial for assessing its adaptability and efficacy in water conservation. Concurrently, efforts will be directed towards integrating this adaptive decision support system (DSS) into accessible digital platforms such as smartphone applications and websites, simplifying irrigation decision-making for farmers. Enhancing the DSS algorithm will involve developing advanced modeling and estimation techniques to accurately estimate and forecast soil moisture dynamics under extreme environmental conditions, considering their random and complex nature. The enhancement also includes refining predictive models and automated control strategies for more precise irrigation scheduling. A key aspect is the creation of control algorithms with mixed objectives, such as minimizing irrigation while ensuring optimal crop yield. The implementation of Kalman filters and stochastic model predictive control techniques to manage forecast uncertainty must be explored. 5. Conclusions In this study, we introduced a technological solution to enhance the sustainability of water management in agriculture. We developed a decision support system algorithm for irrigation scheduling using principles from control theory. This algorithm encompasses modeling, processing, estimation, and control stages, ensuring the optimality of the model that describes the system. During the evaluation, the estimation stage achieved minimum correlation coefficients and values of 0.92 and 0.84, respectively. The algorithm integrates the parametrized model, processed data, weather forecasting, and human limitations to conform an adaptive feedback plus feedforward irrigation predictive control strategy that considers human action in the control loop. The algorithm can consistently regulate soil moisture, ensuring it remains at desired levels. This approach reduced the risks associated with leaching and runoff and offered the potential for water savings of up to 30% in seepage irrigated crops on sandy soils. Looking forward, we plan to move towards end-user implementation to promote wider adoption and benefits of this technological solution. CRediT authorship contribution statement Gregory Conde: Conceptualization, Formal analysis, Investigation, Methodology, Project administration, Software, Validation, Visualization, Writing – original draft, Writing – review & editing. Sandra M. Guzmán: Conceptualization, Funding acquisition, Resources, Supervision, Validation, Writing – review & editing. Akshara Athelly: Formal analysis, Writing – review & editing. Declaration of competing interest The authors declare the following financial interests/personal relationships which may be considered as potential competing interests: Sandra M. Guzman reports financial support was provided by USDA. If there are other authors, they declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgments This work is supported by the Conservation Innovation Grants program at USDA’s Natural Resources Conservation Service, United States , under accession number NR21-13G018. We want to express our gratitude to STROOBOSSCHER ZOE and PALACIOS DANIEL, University of Florida, for their invaluable contributions to this work. Appendix. This appendix describes that the numerical solution of the system during the estimation stage can be described as a linear combination of . In Eq. (9), is considered the initial conditions, and by substituting into and so on, we can find a linear description in terms of given by: (18) Data availability Data will be made available on request. References Åström and Wittenmark, 2008 Åström K.J., Wittenmark B. Adaptive Control Courier Corporation (2008), p. 573 volume illustrated, reprint Google Scholar Bayabil et al., 2023 Bayabil H.K., Teshome F.T., Guzman S.M., Schaffer B. Evapotranspiration rates of three sweet corn cultivars under different irrigation levels HortTechnology, 33 (2023), pp. 16-26 CrossRefView in ScopusGoogle Scholar Bhatia, 2015 Bhatia R. Positive Definite Matrices Princeton University Press (2015) Google Scholar Bisbis et al., 2018 Bisbis M.B., Gruda N., Blanke M. Potential impacts of climate change on vegetable production and product quality – A review J. Clean. Prod., 170 (2018), pp. 1602-1620 View PDFView articleView in ScopusGoogle Scholar Campbell, 2023 Campbell M.B. Data loggers, CR1000X model (2023) [Online] Available at: URL: https://www.campbellsci.com/data-loggers Google Scholar Cayuela et al., 2022 Cayuela C.M.F., Perea R.G., Poyato E.C., Montesinos P. An ICT-based decision support system for precision irrigation management in outdoor orange and greenhouse tomato crops Agricult. Water Manag., 269 (2022) Google Scholar Çetin et al., 2023 Çetin Ö., Fayrap A., Yolcu R. Sustainability and modernization of agricultural irrigation: A comparative assessment of two irrigation schemes Irrigation and Drainage (2023), pp. 1-10 Google Scholar Chen et al., 2019 Chen X., Qi Z., Gui D., Gu Z., Ma L., Zeng F., Li L., Sima M.W. A model-based real-time decision support system for irrigation scheduling to improve water productivity Agronomy, 9 (2019) Google Scholar Culman et al., 2019 Culman M., de Farias C.M., Bayona C., Cruz J.D.C. Using agrometeorological data to assist irrigation management in oil palm crops: A decision support method and results from crop model simulation Agricult. Water Manag., 213 (2019), pp. 1047-1062 View PDFView articleView in ScopusGoogle Scholar Davis, 2023 Davis M. Vantage pro2™, weather station (2023) [Online] Available at: URL: https://www.davisinstruments.com/pages/vantage-pro2 Google Scholar Delgoda et al., 2016 Delgoda D., Malano H., Saleem S.K., Halgamuge M.N. Irrigation control based on model predictive control (MPC): Formulation of theory and validation using weather forecast data and AQUACROP model Environ. Model. Softw., 78 (2016), pp. 40-53 View PDFView articleView in ScopusGoogle Scholar Ding et al., 2018 Ding Y., Wang L., Li Y., Li D. Model predictive control and its application in agriculture: A review Comput. Electron. Agric., 151 (2018), pp. 104-117 View PDFView articleView in ScopusGoogle Scholar Domínguez-Niño et al., 2020 Domínguez-Niño J.M., Oliver-Manera J., Girona J., Casadesús J. Differential irrigation scheduling by an automated algorithm of water balance tuned by capacitance-type soil moisture sensors Agricult. Water Manag., 228 (2020), Article 105880 View PDFView articleView in ScopusGoogle Scholar Dukes et al., 2009 Dukes M.D., Shedd M., Cardenas-Lailhacar B. Smart irrigation controllers: How do Soil Moisture Sensor (SMS) irrigation controllers work? EDIS 2009 (2009) Google Scholar Dukes et al., 2010 Dukes M.D., Zotarelli L., Morgan K.T. Use of irrigation technologies for vegetable crops in florida HortTechnology Hortte, 20 (2010), pp. 133-142 CrossRefView in ScopusGoogle Scholar Eisenhauer et al., 2021 Eisenhauer D.E., Martin D.L., Heeren D.M., Hoffman G.J. Irrigation Systems Management ASABE (2021), p. 347 Google Scholar El-Naggar et al., 2020 El-Naggar A.G., Hedley C.B., Horne D., Roudier P., Clothier B.E. Soil sensing technology improves application of irrigation water Agricult. Water Manag., 228 (2020), Article 105901 View PDFView articleView in ScopusGoogle Scholar Gao et al., 2017 Gao F., Feng G., Ouyang Y., Wang H., Fisher D., Adeli A., Jenkins J. Evaluation of reference evapotranspiration methods in arid, semiarid, and humid regions JAWRA J. Am. Water Resour. Assoc., 53 (2017), pp. 791-808 CrossRefView in ScopusGoogle Scholar Gollin et al., 2002 Gollin D., Parente S., Rogerson R. The role of agriculture in development Amer. Econ. Rev., 92 (2002), pp. 160-164 View in ScopusGoogle Scholar Gu et al., 2017 Gu Z., Qi Z., Ma L., Gui D., Xu J., Fang Q., Yuan S., Feng G. Development of an irrigation scheduling software based on model predicted crop water stress Comput. Electron. Agric., 143 (2017), pp. 208-221 View PDFView articleView in ScopusGoogle Scholar Hodges et al., 2022 Hodges B., Tagert M.L., Paz J.O. Use of a crop model and soil moisture sensors for estimating soil moisture and irrigation applications in a production soybean field Irrigation Sci., 40 (2022), pp. 925-939 CrossRefView in ScopusGoogle Scholar Jalilvand et al., 2019 Jalilvand E., Tajrishy M., Hashemi S.A.G.Z., Brocca L. Quantification of irrigation water using remote sensing of soil moisture in a semi-arid region Remote Sens. Environ., 231 (2019), Article 111226 View PDFView articleView in ScopusGoogle Scholar Kang et al., 2023 Kang C., Diverres G., Karkee M., Zhang Q., Keller M. Decision-support system for precision regulated deficit irrigation management for wine grapes Comput. Electron. Agric., 208 (2023) Google Scholar Katimbo et al., 2023 Katimbo A., Rudnick D.R., Zhang J., Ge Y., DeJonge K.C., Franz T.E., Shi Y., Liang W.-Z., Qiao X., Heeren D.M., Kabenge I., Nakabuye H.N., Duan J. Evaluation of artificial intelligence algorithms with sensor data assimilation in estimating crop evapotranspiration and crop water stress index for irrigation water management Smart Agric. Technol., 4 (2023) Google Scholar Khatri and Tyagi, 2015 Khatri N., Tyagi S. Influences of natural and anthropogenic factors on surface and groundwater quality in rural and urban areas Front. Life Sci., 8 (2015), pp. 23-39 CrossRefView in ScopusGoogle Scholar Li et al., 2018 Li H., Li J., Shen Y., Zhang X., Lei Y. Web-based irrigation decision support system with limited inputs for farmers Agricult. Water Manag., 210 (2018), pp. 279-285 View PDFView articleGoogle Scholar Li et al., 2019 Li M., Sui R., Meng Y., Yan H. A real-time fuzzy decision support system for alfalfa irrigation Comput. Electron. Agric., 163 (2019) Google Scholar Lopez-Jimenez et al., 2022 Lopez-Jimenez J., Wouwer A.V., Quijano N. Dynamic modeling of crop-soil systems to design monitoring and automatic irrigation processes: A review with worked examples Water, 14 (2022) Google Scholar Ma et al., 2012 Ma L., Ahuja L., Nolan B.T., Malone R., Trout T., Qi Z. Root zone water quality model (RZWQM2): Model use, calibration and validation Trans. ASABE, 55 (2012), pp. 1425-1446 View in ScopusGoogle Scholar Matlab, 2022 Matlab L. Version R2022a MathWorks Inc. (2022) Available at: URL: https://www.mathworks.com/products/matlab.html Google Scholar Mueller et al., 2012 Mueller N.D., Gerber J.S., Johnston M., Ray D.K., Ramankutty N., Foley J.A. Closing yield gaps through nutrient and water management Nature, 490 (2012), pp. 254-257 CrossRefView in ScopusGoogle Scholar Rao et al., 2001 Rao C.V., Rawlings J.B., Lee J.H. Constrained linear state estimation—a moving horizon approach Automatica, 37 (2001), pp. 1619-1628 View PDFView articleView in ScopusGoogle Scholar Romero et al., 2012 Romero R., Muriel J., García I., de la Peña D.M. Research on automatic irrigation control: State of the art and recent results Agricult. Water Manag., 114 (2012), pp. 59-66 View PDFView articleView in ScopusGoogle Scholar Saleem et al., 2013 Saleem S.K., Delgoda D.K., Ooi S.K., Dassanayake K.B., Liu L., Halgamuge M.N., Malano H. Model predictive control for real-time irrigation scheduling IFAC Proc. Vol., 46 (2013), pp. 299-304 View PDFView articleView in ScopusGoogle Scholar Saxton and Rawls, 2006 Saxton K.E., Rawls W.J. Soil water characteristic estimates by texture and organic matter for hydrologic solutions Soil Sci. Am. J., 70 (2006), pp. 1569-1578 CrossRefView in ScopusGoogle Scholar Sentek, 2018 Sentek K.E. Sentek drill & drop probe manual, soil moisture sensor (2018) [Online] Available at: URL: https://sentektechnologies.com/download/sentek-drill-drop-probe-manual/ Google Scholar Shang et al., 2020 Shang C., Chen W.H., Stroock A.D., You F. Robust model predictive control of irrigation systems with active uncertainty learning and data analytics IEEE Trans. Control Syst. Technol., 28 (2020), pp. 1493-1504 CrossRefView in ScopusGoogle Scholar Simionesei et al., 2020 Simionesei L., Ramos T.B., Palma J., Oliveira A.R., Neves R. IrrigaSys: A web-based irrigation decision support system based on open source data and technology Comput. Electron. Agric., 178 (2020) Google Scholar Stone et al., 2020 Stone K.C., Bauer P.J., O’Shaughnessy S., Andrade-Rodriguez A., Evett S. A variable-rate irrigation decision support system for corn in the U.S. Eastern Coastal plain Trans. ASABE, 65 (2020), pp. 1295-1303 CrossRefView in ScopusGoogle Scholar Taghvaeian et al., 2020 Taghvaeian S., Andales A.A., Allen L.N., Kisekka I., O’Shaughnessy S.A., Porter D.O., Sui R., Irmak S., Fulton A., Aguilar J. Irrigation scheduling for agriculture in the United States: The progress made and the path forward Trans. ASABE, 63 (2020), pp. 1603-1618 CrossRefView in ScopusGoogle Scholar Torres et al., 2019 Torres I., Sánchez M.-T., Benlloch-González M., Pérez-Marín D. Irrigation decision support based on leaf relative water content determination in olive grove using near infrared spectroscopy Biosyst. Eng., 180 (2019), pp. 50-58 View PDFView articleView in ScopusGoogle Scholar USDA, 2018 USDA I. Irrigation and water management survey (2018) Google Scholar Zhang et al., 2017 Zhang X., Zhang J., Li L., Zhang Y., Yang G. Monitoring citrus soil moisture and nutrients using an IoT based system Sensors (Switzerland), 17 (2017) Google Scholar Zotarelli et al., 2010 Zotarelli L., Dukes M.D., Morgan K.T. Interpretation of soil moisture content to determine soil field capacity and avoid over-irrigating sandy soils using soil moisture sensors EDIS 2010 (2010) Google Scholar Cited by (0) 1 We are providing some key definitions to enhance algorithm description: Irrigation Period the interval chosen by the grower that specifies how often the Decision Support System (DSS) should compute irrigation instructions; Sampling Period is the discrete time interval at which sensor data is collected; Irrigation Scheduling is the process of determining when and how much to irrigate; Irrigation Frequency The number of irrigation events that occur within a specified timeframe, e.g., measured irrigation events per week; Volume of Water Per Irrigation Period specifies the volume of water to be applied during the irrigation period; Irrigation Time Per Irrigation Period quantifies the time duration of watering during the irrigation period. View Abstract Published by Elsevier B.V. Part of special issue AI in Agriculture: Innovation and Discovery to Equitably meet Producer Needs and Perceptions Edited by Yiannis Ampatzidis, Brenda Ortiz, Margarita Velandia, Alex Thomasson, Jeff Vitale View special issue Recommended articles A clustering-based automatic registration of UAV and terrestrial LiDAR forest point clouds Computers and Electronics in Agriculture, Volume 217, 2024, Article 108648 Junhua Chen, …, Yuan Zeng View PDF SY-Track: A tracking tool for measuring chicken flock activity level Computers and Electronics in Agriculture, Volume 217, 2024, Article 108603 Xinjie Tan, …, Yuxing Han View PDF Integrating data and knowledge to support the selection of service plant species in agroecology Computers and Electronics in Agriculture, Volume 217, 2024, Article 108594 Elie Najm, …, Léo Garcia View PDF Show 3 more articles Article Metrics Captures Readers: 6 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

</subsection_point_Point 1>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.

3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
Real-time irrigation management systems heavily rely on the efficient and reliable transmission of data from sensors and weather stations to the cloud for processing and decision-making. However, agricultural environments present unique challenges to wireless communication, including adverse weather conditions, physical obstacles, and the limitations of wireless technologies. These challenges necessitate robust and adaptive solutions to ensure the consistent and timely flow of data, enabling truly autonomous irrigation scheduling.
Environmental factors, such as heavy rain, fog, and strong winds, can significantly disrupt wireless communication by attenuating or even blocking radio signals, leading to data loss and compromised system performance (Ed-daoudi et al., 2023; Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). Dense vegetation, buildings, and uneven terrain create further complications by causing multipath propagation and shadowing effects (Yim et al., 2018; Gautam and Pagay, 2020). The study by Yim et al. (2018) on LoRa networks in a tree farm environment exemplifies these challenges, revealing reduced communication range and data reliability compared to theoretical expectations. This underscores the need for carefully selecting and optimizing communication protocols and network parameters to ensure reliable data transmission in such environments.
The study by Guzinski et al. (2014a) using a modified TSEB model further highlights the importance of high-resolution data in accurately capturing the spatial and temporal dynamics of energy fluxes influenced by environmental factors. This emphasizes the need for advanced data acquisition and processing techniques that can effectively represent the complexities of agricultural settings.
The limitations of traditional wireless communication technologies, such as limited range and network congestion, pose additional challenges for large-scale agricultural operations. Long-distance data transmission can be hindered by range limitations, while network congestion arising from numerous sensors transmitting concurrently can lead to delays and data loss, hindering real-time decision-making (Hameed et al., 2020). Addressing these challenges requires the exploration of advanced networking technologies that can optimize spectrum utilization, mitigate interference, and improve reliability and efficiency.
Cognitive Radio Networks (CRNs) and Dynamic Spectrum Access (DSA) offer promising solutions for optimizing wireless communication in agricultural settings. CRNs empower devices with the ability to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). Research has explored the potential of CRNs in predicting Radio Frequency (RF) power to avoid noisy channels and optimize spectrum utilization (Iliya et al., 2014; Iliya et al., 2014). These studies demonstrate the effectiveness of combining optimization algorithms with artificial neural networks (ANNs) to enhance the accuracy and generalization of RF power prediction, enabling CRNs to make informed decisions about channel selection and avoid interference.
DSA complements CRN technology by dynamically allocating unused spectrum, further enhancing spectrum utilization and reducing congestion (Shi et al., 2023). The numerical model developed by Shi et al. (2023) showcases the potential of CRNs and DSA for optimizing wireless communication in challenging environments.
The integration of CRNs and DSA into the IoT network architecture requires careful consideration of spectrum sensing techniques, network topology, and data security. Research on cooperative spectrum sensing suggests that distributed approaches, where sensor nodes collaborate and share information, can significantly improve the accuracy and efficiency of spectrum sensing, particularly in dynamic environments (Trigka and Dritsas, 2022; Khalid & Yu, 2019). This collaborative approach enables a more comprehensive understanding of the radio environment and facilitates the identification of available frequency bands for data transmission.
The choice of network topology also impacts the performance and scalability of CRN-based irrigation systems. Mesh networks, where sensor nodes are interconnected and relay data for each other, offer enhanced resilience and coverage compared to star topologies where nodes communicate directly with a central gateway (Akyildiz & Vuran, 2010). However, mesh networks can be more complex to manage and may introduce additional routing overhead. The trade-off between network resilience and complexity needs to be carefully evaluated to select the most appropriate topology for a specific agricultural setting.
Data security and privacy are paramount concerns in IoT-based irrigation systems due to the sensitive nature of agricultural data (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential for protecting data integrity and ensuring system trustworthiness. Research on secure spectrum leasing and resource allocation algorithms for CR-WSN-based irrigation systems has demonstrated the potential of these technologies for enhancing security and efficiency (Hassan, 2023; Afghah et al., 2018).
In conclusion, the development of effective and reliable real-time irrigation management systems requires a comprehensive approach that addresses the challenges of data transmission in agricultural environments. The integration of robust and adaptive communication protocols, optimized network architectures, and advanced networking technologies like CRNs and DSA, along with a focus on data security and privacy, can contribute significantly to achieving the goal of autonomous and efficient irrigation scheduling.
4. AUTOMATED DATA PROCESSING IN THE CLOUD
4.1. Data Quality and Preprocessing
Data quality is paramount in automated irrigation systems as it directly influences the effectiveness of decision-making and water use efficiency. Issues like missing values, inconsistencies, and outliers arising from sensor malfunctions, environmental interference, or network problems (Lv et al., 2023) can significantly impact the performance of machine learning models used for irrigation scheduling and management.
Real-time data cleaning techniques are essential for addressing these challenges. Kalman filtering proves particularly effective in handling missing values and correcting erroneous readings by recursively estimating the system's state based on previous measurements and current sensor data, taking into account noise and uncertainty (Kim et al., 2020). Moving average techniques, by averaging consecutive data points, provide a more stable representation of the underlying trend, filtering out short-term fluctuations (Chhetri, 2023). For outlier detection, adaptive thresholding methods offer a dynamic approach, adjusting thresholds based on the statistical properties of the data to effectively identify anomalies and minimize false positives (Bah et al., 2021). These techniques are crucial in maintaining the integrity of real-time data streams and ensuring the accuracy of subsequent analyses.
Adaptive data preprocessing is essential for managing the diversity of data sources and formats commonly found in irrigation systems. Data normalization techniques, such as min-max scaling or z-score normalization, ensure that all features contribute equally to the analysis by transforming data values to a common scale (Pradal et al., 2016). This is crucial for preventing features with larger values from dominating the analysis and ensuring that all features are given equal consideration. Similarly, feature scaling methods, like standardization or normalization, optimize the range of feature values to improve the performance and convergence of machine learning models (Tortorici et al., 2024). By scaling features to a similar range, the influence of outliers is reduced, and the model's ability to learn from the data is enhanced.
Data fusion techniques play a critical role in integrating information from diverse sources, creating a more comprehensive and reliable dataset for irrigation management. Dempster-Shafer theory, a generalization of probability theory, allows for the expression of both uncertainty and the degree of conflict in evidence, making it suitable for fusing uncertain and conflicting data from heterogeneous sources (Sadiq and Rodriguez, 2004). This is particularly relevant in irrigation systems where data from different sensors may provide slightly different or even contradictory information due to sensor variations or environmental factors. Bayesian inference offers another powerful framework for combining information from multiple sources, updating the probability of a hypothesis as new evidence becomes available. By applying these techniques, data from soil moisture sensors, canopy temperature sensors, weather stations, and other sources can be integrated to provide a holistic understanding of crop water requirements and environmental conditions, leading to more informed and accurate irrigation decisions.
The impact of data quality extends beyond model accuracy to the robustness of machine learning models under varying conditions. Robust models should maintain consistent performance even when faced with data inconsistencies or unexpected situations. Techniques like data augmentation and domain adaptation can enhance model robustness by exposing the model to a wider range of data variations during training. Data augmentation involves generating additional training data by applying transformations or introducing noise to existing data, making the model more resilient to noise and variations in the real-world data. Domain adaptation techniques aim to adapt a model trained on one domain (e.g., a specific crop or geographic location) to perform well on another domain with different data characteristics. This is particularly relevant in irrigation management, where models may need to be applied to different crops, soil types, or climatic conditions.
The choice of data cleaning, preprocessing, and fusion techniques should be carefully considered based on the specific characteristics of the irrigation system and the available data. By selecting and implementing appropriate techniques, the accuracy, reliability, and robustness of machine learning models can be significantly improved, leading to more efficient and sustainable irrigation management practices.
4.2. Scalable and Autonomous Deployment using Containerization Strategies
The transition from data collection and transmission to efficient data processing requires a robust infrastructure capable of handling diverse workloads and data volumes. Containerization technologies, specifically Docker and Kubernetes, offer a promising solution for deploying and scaling data processing and machine learning modules within cloud environments like AWS, Azure, and GCP (Vargas-Rojas et al., 2024; Rosendo et al., 2022; Solayman & Qasha, 2023). Docker provides a standardized way to package applications and their dependencies into self-contained units known as containers, ensuring consistent and reproducible execution across different platforms (Rosendo et al., 2022). Kubernetes, acting as a container orchestrator, manages their deployment, scaling, and networking across a cluster of machines (Rosendo et al., 2022). This combination presents several advantages for automated irrigation management systems.
Firstly, containerization facilitates efficient resource utilization and scalability. By encapsulating applications and their dependencies, containers enable the isolation of resources and prevent conflicts between different modules (Vargas-Rojas et al., 2024; Solayman & Qasha, 2023). This isolation allows for the efficient allocation of resources, such as CPU, memory, and storage, to each container based on its specific needs. Kubernetes further enhances scalability by allowing for the automatic scaling of containers based on real-time demand, ensuring the system can adapt to varying workloads and data volumes, preventing bottlenecks, and ensuring responsiveness to changing conditions (Karamolegkos et al., 2023).
Secondly, containerization promotes portability and reproducibility. By packaging applications and their dependencies into a single unit, containers make it easy to move and deploy them across different cloud environments without the need for environment-specific configurations (Rosendo et al., 2022; Solayman & Qasha, 2023). This portability simplifies the development and deployment process, reducing the time and effort required to set up and manage the system. Additionally, containers ensure reproducibility by providing a consistent execution environment, regardless of the underlying infrastructure. This eliminates variability and ensures that the system will behave consistently across different deployments (Zhou et al., 2023).
Optimizing container orchestration and resource allocation is crucial to minimizing latency and maximizing throughput in real-time data processing pipelines. Techniques like auto-scaling and dynamic resource allocation play a critical role in this context (Hethcoat et al., 2024; Werner and Tai, 2023; Kumar et al., 2024). Auto-scaling automatically adjusts the number of container instances based on real-time demand, ensuring that sufficient resources are available to handle peak workloads while avoiding over-provisioning during periods of low demand (Hethcoat et al., 2024; Kumar et al., 2024). Dynamic resource allocation enables the fine-grained adjustment of resources allocated to each container based on its specific needs and the current workload (Werner and Tai, 2023). This ensures efficient resource allocation and provides each container with the necessary resources to perform its tasks effectively.
Performance monitoring tools, such as Kubernetes Metrics Server and Prometheus, are essential for gaining insights into the performance of containers and the overall system (Hethcoat et al., 2024; Kuity & Peddoju, 2023). These tools provide valuable data on key performance indicators, such as CPU and memory usage, network traffic, and application-specific metrics. By monitoring this data, administrators can identify bottlenecks, optimize resource allocation strategies, and continuously improve system performance (Hethcoat et al., 2024). This data-driven approach ensures that automated irrigation management systems can operate efficiently and reliably.
By integrating containerization technologies with optimization techniques and performance monitoring, automated irrigation management systems achieve the scalability, autonomy, and efficiency required for effective real-time data processing and decision-making. This approach facilitates a seamless and responsive system that can adapt to changing conditions and contribute to the overall goal of optimizing water resource management and increasing agricultural productivity.

4.3. Deploying ML Models for Data Processing
Transitioning from data collection, preprocessing, and transmission, the deployment of machine learning (ML) models marks a pivotal stage in the automated irrigation management pipeline. This stage entails utilizing cloud platforms to facilitate real-time data processing and inference, enabling data-driven decision-making for optimal irrigation management and ultimately contributing to fully autonomous, scalable irrigation management.
Several architectures and frameworks exist for deploying ML models on cloud platforms, each offering unique advantages and catering to different requirements. TensorFlow Serving, for instance, provides a high-performance system specifically designed for serving TensorFlow models (Abadi et al., 2016). This framework enables efficient and scalable inference, making it suitable for real-time applications where low latency and high throughput are crucial. For instance, in a large-scale irrigation system with numerous sensors generating data continuously, TensorFlow Serving can efficiently handle the high volume of inference requests and provide timely predictions for irrigation scheduling. Similarly, Apache MXNet Model Server offers a flexible and efficient solution for deploying models trained with MXNet, supporting a wide range of deep learning models and inference backends (MXNet Developers, 2015). This versatility makes it suitable for complex irrigation systems that may utilize different types of ML models for various tasks, such as predicting crop water requirements, detecting plant stress, or forecasting weather conditions. ONNX Runtime, on the other hand, provides a cross-platform inference engine compatible with various ML frameworks, including PyTorch, TensorFlow, and MXNet (Microsoft, 2017). This versatility enables the deployment of models in diverse environments, facilitating interoperability and reducing the need for model conversion. For example, an irrigation system that uses models trained in different frameworks can utilize ONNX Runtime to deploy them on a single platform without the need for time-consuming and error-prone model conversion processes.
Choosing the appropriate architecture or framework depends on several factors, including the specific ML framework used for model training, the desired level of performance and scalability, and the need for cross-platform compatibility. For instance, if the primary concern is low latency and high throughput for real-time inference, TensorFlow Serving might be the optimal choice for TensorFlow models. However, if flexibility and support for various deep learning models are required, Apache MXNet Model Server could be more suitable. In cases where cross-platform compatibility is essential, ONNX Runtime offers a versatile solution.
Once the ML model is deployed, optimizing its performance and resource utilization becomes crucial for ensuring the efficiency of integrated end-to-end automated irrigation systems. Model compression techniques, such as pruning and quantization, offer effective methods for reducing the size and computational requirements of ML models without compromising accuracy (Premkumar & Sigappi, 2022). Pruning involves eliminating unnecessary connections or neurons from the model, effectively streamlining its structure and reducing computational complexity. This can be particularly beneficial for deep learning models, which often have a large number of parameters and can be prone to overfitting. By removing redundant or less important connections, pruning can improve modelgeneralizability and reduce inference time. Quantization, on the other hand, involves reducing the precision of model parameters, typically from 32-bit floating-point numbers to lower-precision formats such as 8-bit integers. This reduction in precision leads to smaller model sizes and faster inference speeds, making it particularly beneficial for resource-constrained environments or real-time applications. For instance, in edge computing scenarios where ML models are deployed on devices with limited computational resources, quantization can enable efficient inference without sacrificing accuracy.
Furthermore, hardware acceleration through the utilization of GPUs or TPUs can significantly enhance model performance by leveraging specialized hardware designed for parallel processing (Premkumar & Sigappi, 2022). GPUs, with their massive parallelism and high memory bandwidth, excel at accelerating matrix operations and convolutions, which are fundamental computations in many deep learning models. This acceleration can significantly reduce inference time and enable real-time processing of sensor data for timely irrigation decisions. TPUs, specifically designed for deep learning workloads, offer even greater performance and energy efficiency for specific model architectures. These hardware accelerators can drastically reduce inference time, enabling near real-time decision-making and enhancing the responsiveness of automated irrigation systems. For example, in a scenario where immediate response to changing weather conditions or soil moisture levels is critical, hardware acceleration can ensure that irrigation decisions are made and executed promptly.
In addition to model compression and hardware acceleration, distributed training techniques play a crucial role in optimizing the training process for large-scale ML models. Techniques such as Horovod and BytePS enable the distribution of training across multiple machines, effectively parallelizing the process and reducing training time (Premkumar & Sigappi, 2022). This is particularly beneficial for complex models with a large number of parameters or when dealing with large datasets. By leveraging distributed training, irrigation management systems can train more sophisticated models and improve their predictive capabilities, leading to more accurate and efficient irrigation decisions. For instance, a system that utilizes a deep learning model with millions of parameters can benefit from distributed training to reduce training time from days to hours, enabling faster model iteration and improvement.
Integrating the deployed ML models with other components of the automated irrigation management pipeline is essential for achieving a fully autonomous and cohesive system and addressing the need for seamless integration across the automated irrigation management system. Standardized protocols, such as MQTT and CoAP, provide lightweight and efficient communication channels for exchanging data between these components (Poojara et al., 2023; Jimenez et al., 2020a; Gour et al., 2023). MQTT, with its publish-subscribe architecture, enables real-time data streaming and event-driven communication, making it suitable for transmitting sensor data, control signals, and inference results (Raikar & M, 2023). This enables the ML model to receive real-time updates on soil moisture, weather conditions, and plant health, allowing for dynamic adjustments to irrigation schedules based on the latest data. CoAP, designed for constrained devices and low-power networks, offers a web-transfer protocol for resource-constrained environments, enabling efficient communication between sensors, actuators, and the ML models (Raikar & M, 2023). This is particularly relevant in situations where sensors or actuators have limited processing power or battery life, as CoAP minimizes communication overhead and energy consumption. Additionally, RESTful APIs provide a standardized interface for accessing and controlling the ML models, enabling seamless integration with other software components and facilitating system management and monitoring (Wang et al., 2022). This allows for easy integration with existing farm management systems or third-party applications, creating a unified platform for comprehensive irrigation management.4.4. Online Learning in the Cloud
The complexities of real-time data processing in irrigation management necessitate the exploration of advanced techniques to continuously learn and adapt to the dynamic nature of agricultural environments. Online learning algorithms offer a promising solution, enabling the continuous update and improvement of machine learning models based on incoming real-time data. This adaptability is crucial for addressing the challenges of changing environmental conditions, such as weather patterns and crop growth stages, and optimizing irrigation decision-making to enhance water usage efficiency and crop productivity.
Several online learning algorithms have demonstrated potential for real-time data processing and model adaptation in the context of irrigation management. Stochastic Gradient Descent (SGD) facilitates the incremental update of model parameters with each new data point, allowing for efficient adaptation to changing data distributions (Bottou, 2010). This incremental learning process ensures that the model remains responsive to the latest conditions, minimizing the risk of outdated predictions and improving the accuracy of irrigation decisions. Passive-Aggressive algorithms, on the other hand, adjust model parameters only when a misclassification occurs, providing a computationally efficient approach for handling large data streams (Crammer et al., 2006). These algorithms offer a robust approach to handling noisy data, a common challenge in real-world sensor readings, by making small adjustments only when the model's prediction deviates significantly from the actual value (Fei et al., 2019). Online Random Forests extend the concept of random forests to the online setting, enabling the incremental construction and update of decision trees as new data arrives (Saffari et al., 2009). The continuous evolution of the ensemble ensures that the model remains relevant to the changing environment, capturing intricate relationships between variables and leading to more informed irrigation decisions.
Research in various domains highlights the importance of online learning for real-time data stream analytics. Snyder et al. (2020) explored the application of online learning techniques for identifying relevant tweets in real-time, improving situational awareness for first responders. The proposed interactive learning framework allows users to continuously label the relevance of incoming tweets, enabling the real-time refinement of the underlying machine learning model. This user-guided approach aligns well with the dynamic nature of irrigation management, where models need to continuously adjust to varying environmental conditions and crop water requirements. Similarly, research in the field of cyber-physical systems (CPS) underscores the need for online learning algorithms to effectively extract insights and knowledge from continuously generated data streams (Fei et al., 2019). These capabilities are crucial for enabling feedback loops between physical processes and cyber elements, facilitating the integration and optimization of CPS in irrigation management systems.
To implement online learning in cloud-based irrigation management systems, various architectures and frameworks can be considered. Apache Spark Streaming, Apache Flink, and AWS Kinesis provide scalable and fault-tolerant platforms for processing real-time data streams, allowing for the development of online learning pipelines that continuously ingest and analyze data to update machine learning models (Zaharia et al., 2012; Carbone et al., 2015; Amazon Web Services, 2023). These frameworks leverage serverless computing paradigms, automatically scaling resources based on the volume and velocity of incoming data, ensuring efficient resource utilization and responsiveness to fluctuations in demand (Fei et al., 2019).
Effectively managing the exploration-exploitation trade-off is crucial for optimizing online learning in irrigation management. Techniques such as Multi-armed bandits (Sutton & Barto, 2018), Bayesian optimization (Shahriari et al., 2016), and Reinforcement Learning (RL) (Sutton & Barto, 2018) can be employed to balance the allocation of resources between exploring new irrigation strategies and exploiting the current best-performing approaches. These techniques enable the identification of optimal irrigation policies, adapting to changing environmental conditions and maximizing long-term rewards.
In conclusion, online learning techniques, coupled with scalable cloud-based architectures, offer a powerful solution for real-time data processing and continuous adaptation in irrigation management systems. By leveraging algorithms like SGD, Passive-Aggressive, and Online Random Forests, along with stream processing frameworks like Apache Spark Streaming, Apache Flink, and AWS Kinesis, irrigation management systems can effectively handle the complexities of real-time data, optimize water usage, and enhance crop productivity in the face of dynamic environmental conditions.

5. GENERATING AND APPLYING IRRIGATION INSIGHTS 
5.1. Real-Time Generation of Actionable Irrigation Insights
•	Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations
•	Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution
•	Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
•	Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)
5.2. Automated Application of Irrigation Insights
•	Architectures and protocols for seamless integration of ML-generated insights with IoT-enabled irrigation control systems, such as MQTT and CoAP for lightweight, real-time communication
•	Analysis of industry-leading products and services, such as smart irrigation controllers (e.g., Rachio) and cloud-based irrigation management platforms (e.g., CropX)
•	Strategies for ensuring reliability, security, and scalability of automated insight application, such as redundant communication channels and secure edge-to-cloud architectures
•	Case studies of successful implementations of closed-loop, autonomous irrigation systems in research and commercial settings, highlighting technologies used and benefits achieved

6. INTEGRATION, INTEROPERABILITY, AND STANDARDIZATION 
6.1. Interoperability and Standardization
•	Importance of interoperability and standardization in enabling seamless integration of automated irrigation components
•	Overview of existing and emerging standards for IoT devices, communication protocols, and data formats in precision agriculture (e.g., ISOBUS, agroXML, SensorML)
•	Role of standardization bodies and industry consortia in promoting interoperability (e.g., AgGateway, Open Ag Data Alliance, Agricultural Industry Electronics Foundation)
•	Challenges in adopting and implementing standards across diverse hardware and software platforms
•	Strategies for encouraging widespread adoption of standards and best practices for interoperability in automated irrigation systems
6.2. Integration with Existing Irrigation Infrastructure
•	Challenges and strategies for retrofitting legacy irrigation systems with IoT sensors, actuators, and communication devices
•	Hardware compatibility issues and solutions (e.g., adapters, modular designs)
•	Software and firmware updates to enable integration with automated decision-making systems
•	Data integration and normalization techniques for merging legacy and new data sources
•	Economic and practical considerations for transitioning from manual to automated irrigation management
•	Cost-benefit analysis of upgrading existing infrastructure vs. implementing new systems
•	Phased implementation approaches to minimize disruption and optimize resource allocation
•	Training and support requirements for farmers and irrigation managers adopting automated systems
•	Case studies and real-world examples of successful integration of automated irrigation with existing infrastructure
6.3. Integration with Other Precision Agriculture Technologies
•	Synergies between automated irrigation and complementary technologies
•	Remote sensing (satellite, UAV, and ground-based) for crop monitoring and evapotranspiration estimation
•	Soil moisture sensors and weather stations for real-time, localized data collection
•	Variable rate application systems for precise irrigation delivery based on crop requirements
•	Yield mapping and analytics for assessing the impact of automated irrigation on crop productivity
•	Architectures and frameworks for integrating diverse data sources and technologies into a unified precision agriculture ecosystem
•	Edge computing and fog computing paradigms for real-time data processing and decision-making
•	Cloud-based platforms for data storage, analysis, and visualization
•	API-driven approaches for modular integration of third-party services and applications
•	Challenges and solutions for ensuring data quality, consistency, and security across integrated precision agriculture systems
•	Data cleaning, preprocessing, and harmonization techniques
•	Blockchain and distributed ledger technologies for secure, tamper-proof data sharing and traceability
•	Access control and authentication mechanisms for protecting sensitive data and resources
•	Future trends and research directions in the integration of automated irrigation with advanced precision agriculture technologies (e.g., AI-driven crop modeling, robotics, and autonomous vehicles)
6.4. Cybersecurity Considerations for Integrated Automated Irrigation Systems
•	Unique security risks and vulnerabilities associated with IoT-based automated irrigation systems
•	Potential for unauthorized access, data tampering, and system manipulation
•	Implications of security breaches for crop health, water resource management, and farm productivity
•	Best practices and strategies for securing automated irrigation systems
•	Secure device provisioning and authentication (e.g., hardware security modules, certificates)
•	Encryption and secure communication protocols (e.g., TLS, DTLS)
•	Firmware and software updates to address emerging security threats
•	Network segmentation and access control to limit the impact of breaches
•	Role of cybersecurity standards and frameworks in guiding the development and deployment of secure automated irrigation systems (e.g., NIST CSF, IEC 62443)
•	Importance of user awareness, training, and incident response planning in maintaining the security of integrated automated irrigation systems

7. MONITORING AND ENSURING SYSTEM RELIABILITY
7.1. Resilience and Fault Tolerance in Automated Irrigation Systems
•	Strategies for ensuring robustness and reliability in the face of failures, disruptions, or unexpected events
•	Redundancy: Implementing redundant components, such as duplicate sensors (e.g., soil moisture sensors, weather stations), controllers (e.g., PLCs, microcontrollers), and communication channels (e.g., cellular, satellite, LoRaWAN) to maintain system functionality during component failures
•	Failover mechanisms: Designing seamless failover mechanisms that automatically switch to backup components or systems in case of primary system failure, such as hot-standby controllers or multi-path communication protocols (e.g., mesh networks, software-defined networking)
•	Self-healing capabilities: Incorporating AI-driven self-healing mechanisms that can detect, diagnose, and recover from faults without human intervention, using techniques like reinforcement learning, Bayesian networks, or self-organizing maps
•	The role of distributed architectures and edge computing in enhancing system resilience
•	Decentralizing critical functions and data processing to minimize the impact of single points of failure, using fog computing or multi-agent systems
•	Leveraging edge computing to enable localized decision-making and control, reducing dependence on cloud connectivity and improving response times, using technologies like Raspberry Pi, NVIDIA Jetson, or Intel NUC
•	Anomaly detection and predictive maintenance using AI techniques
•	Employing unsupervised learning algorithms (e.g., autoencoders, clustering) to detect anomalies in sensor data, system performance, and water usage patterns
•	Developing predictive maintenance models using techniques like long short-term memory (LSTM) networks, convolutional neural networks (CNNs), or gradient boosting machines (GBMs) to anticipate and prevent potential system failures based on historical data and real-time monitoring
7.2. Advanced Monitoring Techniques for Automated Irrigation Systems
•	Remote monitoring using IoT-enabled sensors and computer vision
•	Deploying a heterogeneous network of IoT sensors to collect real-time data on soil moisture (e.g., capacitive, tensiometric), temperature (e.g., thermocouples, thermistors), humidity (e.g., capacitive, resistive), and plant health (e.g., sap flow, leaf wetness)
•	Integrating high-resolution cameras (e.g., multispectral, hyperspectral) and computer vision algorithms for visual monitoring of crop growth, disease detection (e.g., using deep learning-based object detection and segmentation), and irrigation system performance (e.g., leak detection, sprinkler uniformity)
•	Transmitting sensor and camera data to cloud-based platforms (e.g., AWS IoT, Google Cloud IoT, Microsoft Azure IoT) for remote access and analysis using protocols like MQTT, CoAP, or AMQP
•	Innovative approaches for real-time system health assessment
•	Developing novel algorithms and metrics for evaluating the health and performance of automated irrigation systems, such as entropy-based measures, network resilience indices, or multi-criteria decision analysis (MCDA) frameworks
•	Combining data from multiple sources (e.g., sensors, weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filters, Dempster-Shafer theory) to create a comprehensive view of system health
•	Employing advanced data visualization techniques (e.g., interactive dashboards, augmented reality) to present system health information in an intuitive and actionable format
7.3. Closed-Loop Control and Feedback Mechanisms
•	Exploring the concept of closed-loop control in autonomous irrigation systems
•	Implementing feedback loops that continuously monitor system performance and adjust irrigation schedules based on real-time data, using control techniques like proportional-integral-derivative (PID), model predictive control (MPC), or fuzzy logic control (FLC)
•	Integrating machine learning algorithms (e.g., reinforcement learning, genetic algorithms) to optimize closed-loop control strategies over time, adapting to changing environmental conditions and crop requirements
•	Designing effective feedback mechanisms for user interaction and system optimization
•	Providing user-friendly interfaces (e.g., mobile apps, web dashboards) for farmers to input preferences, constraints, and expert knowledge into the automated irrigation system, using techniques like participatory design or user-centered design
•	Incorporating user feedback and domain expertise to refine irrigation strategies and improve system performance
8. CASE STUDIES AND REAL-WORLD IMPLEMENTATIONS OF FULLY AUTONOMOUS IRRIGATION SYSTEMS
8.1. Fully Autonomous Irrigation Systems in Diverse Agricultural Settings
•	Row Crops: maize, wheat, soybean with real-time soil moisture monitoring and weather-based irrigation scheduling for fully automated precision irrigation
•	Orchards: citrus, apple, almond with plant health monitoring and precision water application for fully autonomous orchard management
•	Greenhouses: tomato, lettuce, herbs with automated drip irrigation and climate control integration for fully automated greenhouse operations
•	Urban Farming: rooftop gardens, vertical farms with IoT-enabled hydroponic systems and remote management for fully autonomous urban crop production
8.2. Integration of Advanced System Components for End-to-End Automation
•	Wireless sensor networks: soil moisture probes, weather stations, plant health monitoring cameras with low-power, long-range communication for fully automated data acquisition
•	Secure data transmission: LoRaWAN, NB-IoT, 5G, satellite communication for reliable, real-time data transfer from field to cloud in fully autonomous irrigation systems
•	Intelligent data processing: edge computing for local data filtering, cloud platforms for scalable storage and analysis, machine learning algorithms for predictive insights in fully automated irrigation management
•	Autonomous decision-making: advanced irrigation scheduling algorithms, precise valve control, closed-loop feedback systems for optimal water management in fully autonomous irrigation systems
8.3. Quantitative Performance Evaluation of Fully Automated Irrigation Systems
•	Water use efficiency: percent reduction in water consumption compared to conventional methods, improved water productivity (yield per unit of water) achieved through fully autonomous irrigation
•	Crop yield and quality improvements: percent increase in yield, enhanced crop uniformity, improved nutritional content attributed to fully automated precision irrigation
•	Labor and energy savings: quantified reduction in labor hours for irrigation management, decreased energy consumption for pumping due to optimized scheduling in fully autonomous systems
•	Economic viability: detailed return on investment analysis, payback period calculations, comprehensive cost-benefit analysis for fully autonomous irrigation management systems
8.4. Lessons Learned and Challenges Encountered in Deploying Autonomous Irrigation Systems
•	Technical challenges and solutions: ensuring reliable data transmission in remote locations, addressing interoperability issues between diverse system components, optimizing power consumption for extended battery life, adapting algorithms to local soil and weather conditions in fully autonomous irrigation systems
•	Operational and logistical hurdles: streamlining installation and maintenance procedures, providing effective user training, seamlessly integrating with existing farm management practices and legacy systems for fully automated irrigation management
•	Regulatory and socio-economic considerations: navigating complex water use regulations, addressing data privacy and security concerns, ensuring equitable access and affordability for smallholder farmers adopting fully autonomous irrigation technologies
8.5. Best Practices and Recommendations for Successful Implementation
•	Designing scalable, modular, and adaptable autonomous irrigation systems to accommodate future growth and changing requirements for fully automated water management
•	Prioritizing user-centered design principles and actively engaging stakeholders throughout the development and deployment process of fully autonomous irrigation solutions
•	Adopting open standards and communication protocols to enable seamless integration of system components and interoperability with third-party platforms in fully automated irrigation setups
•	Implementing robust data validation, filtering, and quality control mechanisms to ensure data integrity and reliability for decision-making in fully autonomous irrigation systems
•	Establishing clear data governance policies and security frameworks to protect sensitive information and maintain user trust in fully automated irrigation management
•	Developing intuitive user interfaces and decision support tools to facilitate easy adoption and effective use of fully autonomous irrigation systems
•	Collaborating with local extension services, agribusinesses, and technology providers for knowledge transfer, technical support, and continuous improvement of fully automated irrigation solutions
8.6. Synthesis of Case Studies and Implications for Autonomous Irrigation Adoption
•	Cross-case analysis of key performance indicators and critical success factors for fully autonomous irrigation scheduling systems in various contexts
•	Identification of common themes, challenges, and innovative solutions across diverse implementations of end-to-end fully automated irrigation management
•	Assessment of the potential for replicability and scaling of successful fully autonomous irrigation projects in different regions and farming systems
•	Implications for future research priorities, technology development roadmaps, and policy interventions to support widespread adoption of fully autonomous irrigation technologies

CONCLUSION/FUTURE DIRECTIONS AND UNANSWERED QUESTIONS
•	Summarize the key insights gained from the question-driven review, emphasizing how each section contributes to the overarching goal of achieving real-time, end-to-end automation in irrigation management
•	Based on the questions addressed, propose new research directions and unanswered questions
•	Identify key research gaps and propose concrete research questions and hypotheses for advancing the field of real-time, automated irrigation management
•	Highlight the need for collaborative research efforts across disciplines, such as computer science, agricultural engineering, and environmental science, to address the complex challenges of automated irrigation systems
•	Emphasize the need for further innovation and exploration in real-time, automated irrigation systems




</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper. 

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 5.2. Automated Application of Irrigation Insights
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 2>
Point: Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution

Papers to support point:

Paper 1:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: The paper provides a comprehensive overview of GPS Spoofing attacks and defense mechanisms in the context of unmanned aerial vehicles (UAVs) networks, which is highly relevant to the specified point of the prompt.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The key points of the paper are summarized as follows:

1. GPS Spoofing attacks involve generating misleading GPS signals to deceive targeted devices about their true location.
2. Single-point-of-failure in UAV networks can be minimized through the use of multiple UAVs, which work in groups and communicate with each other to accomplish various missions.
3. GPS Spoofing attacks can be detected using various methods such as onboard sensor/devices, signal processing, cryptographic techniques, game-theory, and machine learning algorithms.
4. The effectiveness of GPS Spoofing defense mechanisms can be evaluated using metrics such as detection latency, position drift, false positive rate, false negative rate, and accuracy.
5. Machine learning-based GPS Spoofing detectors can be implemented on UAVs to achieve real-time and accurate detection, with low computational overhead and power consumption.

 Full Text: >
This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 11 GPS Spoofing Attacks in FANETs: A Systematic Literature Review Publisher: IEEE Cite This PDF Ala Altaweel; Hena Mukkath; Ibrahim Kamel All Authors 3 Cites in Papers 1860 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document Sections I. Introduction II. Fanets: Technical Background and Applications III. Methodology IV. State-of-the-Art V. GPS Spoofing in FANETs: A Taxonomy Show Full Outline Authors Figures References Citations Keywords Metrics Abstract: Flying Ad-Hoc Networks (FANETs) are groups of UAVs connected in an Ad-Hoc manner to accomplish a common mission. The widespread acceptance of UAVs due to their low cost and high efficiency has attracted malicious security attacks against them. These attacks cannot be easily prevented due to UAVs’ limited computational power, short battery life, and inability to execute complex algorithms. FANETs rely on the Global Positioning System (GPS) for localization. GPS Spoofing, an easy-to-launch attack, is one of the main challenges in FANETs. In which, the legitimate and not-encrypted civilian GPS signals are overridden by counterfeit signals to deceive the UAVs to collide or to be hijacked. Researchers proposed various countermeasures to address GPS Spoofing attacks in FANETs. To further assist future research, this paper provides a systematic literature review on GPS Spoofing attacks in FANETs and their defense mechanisms. After formulating eight research questions and applying well-defined inclusion/exclusion criteria and quality assessment tools, 70 research articles were extracted. The existing defense mechanisms were classified based on their objectives (i.e., detection, mitigation, and/or prevention) and according to their basis (i.e., relying on readings from various drones’ devices/sensors, processing the signals received by various sensors, employing machine learning algorithms, relying on game theory, or leveraging cryptographic techniques to authenticate and protect the confidentiality of GPS signals). The defense mechanisms were also analyzed to identify the attacker models, impacts of the attack, and detection performance. This study found that most of the proposed methods are detection approaches, rather than mitigation or prevention. Also, almost all papers used simulation experiments rather than a proof-of-concept implementation, which does not demonstrate a convincing performance under realistic mobility and propagation models. Moreover, most solutions ad... (Show More) GPS Spoofing Attack Scenario in FANET: the UAV at the 'Original Location' travels to the 'Desired Destination Location' through the 'Original Path' (shown in green). The ...View more Published in: IEEE Access ( Volume: 11) Page(s): 55233 - 55280 Date of Publication: 31 May 2023 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2023.3281731 Publisher: IEEE Funding Agency: SECTION I. Introduction The advancements in technology have invaded almost every sphere of human life. Human intervention is been getting expelled from the aircraft industry as well. The development of autonomous drones or Unmanned Ariel Vehicles (UAVs), popularly known as ‘drones’, is a major indication of this fact. The drone market has put on huge investments since the beginning of this decade. As per a report from the Drone Industry Insights [1], the drone market worth ~ $ 30.6 billion in 2022 and is expected to reach ~ $ 55.8 billion by 2030. This is due to the widespread acceptance of UAVs for various military and civilian applications such as border surveillance [2], disaster monitoring [3], traffic monitoring [4], managing wildfire [5], relay for Ad-Hoc networks [6], wind estimation [7], emergency management and high-risk situations [8], etc. The deployment of UAVs not only nullifies the risk for human operators but also minimizes the probability of human errors. Single large UAVs were recently used, yet, they are inadequate in terms of capability [9]. Thus, the technologists found it is advantageous to deploy small multiple UAVs that work in groups. FANET is a self-organized UAV network, popularly known as UAV Swarm, in which UAVs operate together collaboratively to accomplish various missions. The UAVs in FANETs communicate with each other by establishing wireless Ad-Hoc UAV-to-UAV communication links [10]. That is, no pre-established infrastructure is required for FANET deployment. The capability of sharing information, not only with the ground station but also among the UAVs, makes FANETs less prone to the difficulties of short-range communications and network failures, which might occur when a single UAV is deployed. The deployment of multi-UAVs in groups is advantageous due to many reasons. The cost [11] of deploying and maintaining small UAVs instead of larger ones is more feasible. The scalability [11] of operation also enhances with small multi-UAVs. Also, since multiple UAVs work together, the chance of Single-Point-of-Failure [12] is minimized. Moreover, multiple UAVs can accomplish a task more efficiently [13]. On the other hand, FANETs confront various technical and security challenges [14]. The battery with limited capacity poses a major challenge in UAV operations by limiting their flight time. UAVs’ computational power and storage are also limited. UAVs normally hover in 3-D space with a speed range of 30–460 km/h [15], leading to frequent variations in communication distances and topology changes. The drones should maintain connectivity within the network such that the area covered by individual drones and the swarm as a whole is maximized without causing network partitioning. The locational information provided by the GPS plays a vital role in this regard. The exchanged GPS information among the drones helps in relatively localizing each drone to other drones as well as within the swarm area. With the widespread acceptance of FANETs among public and private entities, they are also targeted by malicious attackers. The GPS sensors in drones are vulnerable to GPS Spoofing and Jamming attacks, which are the most popular and easy-to-launch attacks that can be instigated using low-cost Software Defined Radio (SDR) [16]. While Jamming intends to deny GPS services in the target area by transmitting stronger signals with the same frequency used by genuine GPS signals, spoofing attacks intend to redirect the UAVs from their actual path to the attacker’s desired path. In December 2012, Iranian army engineers claimed that they hijacked a surveillance drone launched by U.S. Central Intelligence Agency (CIA) RQ170 Sentinel [17]. The first successful spoofing on GPS receivers of drones was demonstrated by a research team at the University of Texas [18], [19] as a part of a demonstration to raise concerns about civilian drone regulations. The U.S. Customs and Border Protection reported that some drug cartels spoofed their drones in 2015 and the attacks of the same kind increased afterward [20]. To address the aforesaid research challenge, a systematic literature review has been conducted with the aim of pinpointing the state-of-the-art of GPS Spoofing attacks in FANET, the attacker capabilities, and the detection and mitigation mechanisms. To the best of our knowledge, this is the first systematic review on GPS Spoofing attacks in FANETs that followed the review guidelines proposed by [21]. These guidelines are widely adopted by the research community to conduct unbiased and high-quality surveys. The articles published during the tenure from 2017 to 2022 are considered, as GPS Spoofing in FANETs is a recently developed research area. This survey was conducted in three phases. Specifically, planning, conducting, and reporting. In the planning phase, eight Research Questions were formulated. The articles for this survey have been collected from five databases, namely, IEEE XPlore®, ACM Digital Library, ScienceDirect®, SpringerLink and Google Scholar in the conducting phase. Afterward, 70 papers including 14 state-of-the-art survey papers and 56 technical papers relevant to the survey’s topic were extracted. Among the 56 technical papers, 37 papers proposed various solutions to defend against GPS spoofing attacks in UAVs, nine papers discussed GPS Spoofing attack mechanisms, eight papers discussed how GPS spoofing can be used to deter malicious drones from sensitive areas, one article conducted an impact study on GPS Spoofing attack in UAVs, and one article portrayed the vulnerability of UAVs to GPS Spoofing attack. The extracted technical papers were categorized into four groups. Specifically, GPS Spoofing attack mechanisms (that discussed the attacker models), GPS Spoofing defense mechanisms, GPS Spoofing as a defense mechanism (that leverages GPS Spoofing techniques to defend against other attacks), as well as GPS Spoofing impact and vulnerability, which studied the impact of and vulnerability to GPS Spoofing attack on drones. Then, a taxonomy of various defense mechanisms is redesigned based on their objectives and basis. For the objectives, the defense mechanisms are classified into three categories: 1) detection mechanisms, which sense or alert the presence of attack, 2) mitigation mechanisms, which help the drones to recover from the effects of the attack, 3) prevention mechanisms, which secure the drones from being attacked. For the basis, the defense mechanisms can also be classified into five categories: 1) onboard sensor/devices, which compare the readings from the devices on the drones like cameras, gyroscopes, accelerometers, barometers, etc. with the readings of GPS receivers, 2) signal processing methods, which analyze the received signal parameters like the Time of Arrival, Angle of Arrival, Signal Strength, etc., 3) cryptographic techniques such as encryption, decryption, authentication, digital signatures, etc., which are used to secure and verify the GPS signals received by the drones, 4) game-theory based methods, which depend on the strategic movements of the attacker and the victim during the attack, and 5) machine learning-based methods, which leverage the training and learning models designed to defend against the attacks. The survey aims to enable the readers to gain insights into the directions of research in the field of GPS Spoofing attacks in FANETs. Also, the readers are aided to find the research gaps existing in the domain. The major contributions of this survey are as follows: Comprehensive guidelines for researchers in terms of FANETs’ features, applications, mobility, propagation models, communication protocols, and security challenges (in Section II) are provided. GPS Spoofing attacks and their impacts are also discussed in detail. Following the guidelines of Kitechenham and Charters [21], this survey systematically extracted 70 articles that are relevant to GPS Spoofing attacks in UAVs, by applying the planning, conducting, and reporting phases recommended by [21] (in Section III). The extracted articles were classified into state-of-the-art articles and technical articles. A detailed analysis of the state-of-the-art articles in terms of the number of papers surveyed, the years of publications considered, and a brief description of the concepts discussed in these articles are provided (in Section IV). A summarized table of these articles is also provided in Table 11 in the Appendix. The technical articles on GPS Spoofing are classified (in Section V) into four main categories as follows: GPS Spoofing attack mechanisms: the articles that discussed the attacker models. As a part of the attacker model, we discussed: Spoofing tools such as simulators, repeaters, etc. Spoofing techniques such as position denial and track break. Spoofer location such as remote, onboard, and escort. Defense mechanisms against GPS Spoofing: the research articles that discuss various mechanisms to defend against GPS Spoofing attacks in UAVs. These articles are further classified based on their objectives as follows: Detection of GPS Spoofing attacks. Mitigation the damage caused by GPS Spoofing attacks. Prevention of GPS Spoofing. The defense mechanisms are also classified according to their basis as follows: The use of devices/sensors on the drones. Signal processing techniques applied on various signals received by various sensors on the drone. Cryptographic techniques to protect the confidentiality of data collected by the drones. Game-theory techniques that are used to defend against GPS Spoofing attacks. Machine learning techniques that are used to defend against GPS Spoofing attacks. Use of GPS Spoofing as a mechanism to deter malicious drones from sensitive infrastructure. Impact and Vulnerability: the articles that discussed the impact of the GPS Spoofing attack and the vulnerability of drones to it. The above taxonomy is based on a systematic analysis of various approaches that deal with GPS Spoofing attacks in UAVs. The diversity in the existing research works and the lack of a proper taxonomy is the motivation behind the development of the above taxonomy. This survey aims to classify all the existing methods under various headers and conduct a comparative survey to identify the open issues for future research works. An extensive study of the 37 articles that dealt with defense mechanisms against GPS Spoofing attacks is conducted in Section V. The study focused on the proposed defense methodology in the existing works to extract the number of UAVs considered (i.e., FANET or single UAV environment), the detection performance evaluation methodologies (i.e., simulation or proof-of-concept implementation), and the performance metrics used. The limitations and open issues in the existing research are also identified. A detailed discussion and comparative analysis of the extracted results in terms of the datasets used in the experiments, the attacker models, the performance evaluation methods, and metrics from all covered articles are provided. This analysis is done in order to understand the current state of the defense mechanisms, identify the research gaps, and propose recommendations for future research works (in Section VI). TABLE 1 Abbreviations Related to FANET Environment TABLE 2 Abbreviations Related to Attacker Models TABLE 3 Classification of FANET Propagation Models TABLE 4 Communication Technologies Used in FANET TABLE 5 Symbols and Meanings TABLE 6 Research Questions and Motivations TABLE 7 Database and Search Results (2017-2022) Before & After Inclusion/Exclusion Criteria TABLE 8 Analysis of the Attacker Models TABLE 9 List of Drones that Can Be Used for FANET Formation TABLE 10 Overview of Datasets TABLE 11 Comparative Analysis of the State-of-Art Articles The rest of this paper is organized as follows: Section II briefly describes the technical background of FANETs, which includes a discussion of their mobility and propagation models, communication protocols, applications, performance evaluation methods and metrics, and security challenges. A special focus on GPS Spoofing attacks and their impacts on FANETs is also provided. Section III presents the systematic literature review methodology that was applied in this study. In Section IV, the state-of-the-art papers are discussed. The technical papers on GPS Spoofing attacks, the existing solutions, the application of GPS Spoofing attacks (as a defense mechanism), and the impact and vulnerability of the GPS Spoofing attack are elaborated in Section V. The results, discussions, and research gaps are portrayed in Section VI. The paper is concluded in Section VII. SECTION II. Fanets: Technical Background and Applications In this section, the acronym ‘FANET’ is introduced in detail with a substantial description of the unique characteristics, mobility and propagation models, communication protocols, applications, and security issues in FANETs. Furthermore, various performance metrics that can be used to evaluate the performance of the FANET environment are also discussed. A. Fanets: Flying AD-Hoc Networks FANETs comprise UAVs, connected together in an Ad-Hoc manner. The major components of an Unmanned Aerial System (UAS) include the UAV, the GCS, and the communication links. The communication links include the UAV-to-UAV links, UAV-to-Satellite links, and UAV-to-GCS links [11]. The UAVs in FANET utilize GPS and this locational information is exchanged within the network for maintaining the FANET topology. Fig. 1 depicts a typical FANET environment. The UAVs communicate with each other through Ad-Hoc UAV-to-UAV links. The UAVs have onboard GPS receivers and the locational information (via UAV-to-Satellite link) received from at least four satellites [22] is used to find the UAV position through the process of trilateration [23]. The radio waves from the satellite travel at the speed of light and the time of departure of the GPS signal from the satellite are obtained from this signal. The speed and time obtained are used by the GPS receivers to compute the distance between the satellite and the GPS receiver. One (or more) of the UAVs communicate with the GCS for exchanging control and other relevant information. Table 1 shows various abbreviations related to the FANET environment that are used throughout this paper. Some other common abbreviations used in this paper are shown in Table 2. FIGURE 1. A typical FANET environment. Show All The UAVs constituting the FANETs are generally low-cost commercial off-the-shelf devices with limited computational power and storage. Thus, FANETs cannot rely on algorithms requiring complex computations for accomplishing their mission or incorporating security features. Due to the size and weight constraints of drones in FANETs, it is not possible to leverage powerful computation hardware. Also, since complex computations consume lots of energy, the battery gets drained faster. In Section II-B below, we provide a detailed discussion of the unique characteristic features of FANETs. B. Unique Features of FANET The unique characteristics of FANET [24] are depicted in Fig. 2 and are elaborated in the subsequent lines: Dynamic Network Topology: The higher mobility and the failure or injection of drones in the FANET cause frequent topology changes. The movement of drones and the resultant variations in the distance between drones can lead to link outages [11]. Mobility Models: The drones in FANET follow either a pre-defined trajectory or random paths [11]. A detailed discussion of the mobility models is provided in Section II-C. Node Mobility: The drones in FANET move at higher speeds than those in a MANET or VANET. Based on the type of flight and mission, this speed can range from 30 to 460 km/h. These variations in speed present various communication problems [11] such as network partitioning. Node Density: The UAVs in a FANET are generally distributed across the entire swarm area so that the coverage area of individual drones and the FANET itself are maximized. Thus, the node density (number of drones per unit area) is lesser when compared to the other networks such as MANET or VANET [11]. Propagation Models: The communication between the UAVs (U2U) in the FANET is Line-of-Sight and those between UAV and GCSs are nLos (non-Line-of-Sight) [25]. A detailed discussion of the propagation models in FANET is provided in Section II-C. Power Consumption: FANETs, with battery-powered, drones are energy-limited devices. The power consumption varies with the size of the drones, distance to be covered, mission, communication hardware used, etc. [11]. Lowering the dependence on power-sensitive devices and complex computational algorithms in FANETs can enhance the network lifetime and reduce network outages. 3-D Space: FANET flies in free space, mostly far above the ground without obstructions such as buildings, trees, etc. Thus, there is no significant path loss in the signals transmitted among the drones FIGURE 2. Unique features of FANET. Show All The frequent topology variations impact the communication and collaboration of the drones in a FANET. The movement pattern of the drones is represented (i.e., modeled) using various mobility patterns, which are discussed in Section II-C. C. Mobility and Propagation Models in FANETs FANETs are unique in terms of their mobility, topology variations, propagation, and energy constraints [11]. In this section, some light is thrown on the mobility and propagation models in FANETs, which are also part of the Research Questions in this study (Section III-A: RQ6 and RQ7). The UAVs in FANET move with higher velocity when compared to the ancestral networks, namely, MANETs and VANETs. Moreover, the UAVs hover in three-dimensional (3-D) space (roll, pitch, and yaw). Hence, more adequate mobility models are employed that simulate the motion of FANETs in real-world scenarios. Mobility models describe the motion pattern of the UAV including the velocity (speed change and direction) and acceleration. Different mobility models have been used in FANET environments such as random, group, time-dependant, and path-planned. A classification FANETs mobility models based on a study by Wheeb et al. [26] is illustrated in Fig. 3 and is briefly described below: Random Mobility Model: The drones in this mobility model move randomly and freely without any restrictions. Thus, this mobility model is not preferable for FANET scenarios as the drones in FANET should move in a coordinated manner without network partitioning. Random mobility model is further classified into the following four sub-types: Random Walk (RW) in which the drones move in a random direction and speed for a fixed interval of time or distance, then new speed and direction are calculated. These are memory-less models. Random Waypoint (RWP) in which halts are taken upon reaching each waypoint and then move to the random direction at a random speed. Random Direction (RD) in which the destination is chosen towards the boundary of the simulation area; once it reaches the destination, it stops and new destinations are chosen again. Manhattan Grid (MG) in which the UAVs follow a grid-structure path layout. These mobility models are used in scenarios where paths are well-defined. The UAV randomly chooses to move in the same direction or take turns at intersections of the grid. Group Mobility Model: This mobility model is deployed in scenarios where drones should move in groups, as is the case in FANETs, to accomplish a specific mission. This model can be further categorized into the following four sub-types: Column (CLMN) in which a point of reference along a straight line will be defined; each node revolves around this point in a random direction and speed. Exponential Correlated Random (ECR) in which a group of nodes exhibits correlated dynamic motion. Nomadic Community (NC) in which every UAV node moves randomly around certain reference points following the same path leading to a collision. Pursue (PRS) in which the UAV tracks a particular UAV that travels in a specific way. Time-dependent: The sudden changes in speed and direction are avoided in this model by considering various parameters like prior direction, current time, speed, etc. This model can be further categorized into the following three sub-types: Gauss Markov (GM) in which sudden movement changes are minimized by adjusting randomness in direction and speed. Smooth Turn (ST) in which the accelerations of UAVs are always maintained by adjusting the spatial and temporal variables. Enhanced Gauss Markov (EGM) which is most widely used in FANETs. The direction deviations are used to reduce sharp turns and stops. Path-Planned: A pre-determined trajectory is generated and stored for each UAV. This model can be further classified into the following three sub-types: Flight Plan (FP) in which UAV’s flight plan is defined in a special file and time-dependent flight maps are designed accordingly. Semi Random Circular (SRCM) in which UAVs move in curved paths around a central point. Paparazzi Model (PPRZM), a Probabilistic model based on state machines with five possible movements, namely, waypoint, scan, stay-at, eight, and oval. FIGURE 3. Classification of FANET mobility models. Show All Propagation models also occupy a relevant space in FANET communication. Propagation model refers to the mathematical modeling of the radio channel through which the waves are transmitted (i.e., to simulate the attenuation of the waves when propagated [27]). The FANET environment faces several challenges with regard to radio propagation. This is due to the frequent differences in communication distance between various nodes, the antenna pattern, shadowing from other UAVs, fluctuations in the link quality due to UAV attitude (yaw, pitch, and roll), and other environmental elements. The deployment of FANETs requires adequate knowledge of the radio channel characteristics. The communications between the UAVs (U2U) in the FANET are Line-of-Sight. Differently, they are nLos (non-Line-of-Sight) between UAV and GCSs. There are three major propagation models studied by Jun Peng [25] for UAV networks. Specifically, the free-space model, the two-ray model, and the shadowing model. A brief description of the propagation models is summarized in Table 3. Another categorization by Antonio et al. [27] modeled the channel losses through which the electromagnetic waves (EM) are attenuated. The propagation models are divided into three classes. Specifically, theoretical, empirical, and semi-empirical models. The antenna structure also has an intense impact on the communication architecture of FANET. Directional and Omnidirectional antennas are used in FANET communications [15]. D. Communication Protocols in FANETs The UAVs in a FANET communicate with each other through Ad-Hoc links established among each other without requiring any infrastructure. Setting up and maintaining such a network is challenging due to node mobility, high speed, operating environment, unstable communication links, and resource limitations. FANET requires efficient and secure wireless communication to be established with the ground stations as well as with other drones in the network. Short-range unlicensed wireless technologies like Wi-Fi (IEEE 802.11), Bluetooth (IEEE 805.15.1), and Zigbee (IEEE 802.15.4) are most commonly used for drone communication [28]. LoRaWAN besides licensed and infrastructure-based technologies that rely on 5G, Beyond 5G, and 6G are also used in FANET for long-range communications (i.e., to enhance coverage and throughput demands). Table 4 showcases a summary of these technologies. IEEE 802.11n and IEEE 802.15.4 protocols are mostly used for data exchanges in FANETs [29]. IEEE 802.11n ensures high data delivery no matter the number of UAVs in the network; however, it is costlier, consumes more power, and is more complex compared to IEEE 802.15.4. Also, due to the frequent fluctuations in the link quality, mesh topology (UAVs route messages to the GCS) is preferred over star topology (all drones directly communicate with the GCS) in a FANET scenario. Peer-to-peer communication is established for collaborative mission completion and collision avoidance. Various routing protocols [30] have been proposed to establish robust and reliable communications among the drones in FANET. E. Applications of FANETs Multiple UAVs cooperate to accomplish various applications in a collaborative manner. These include applications in remote sensing, the construction industry, drone delivery services, search and rescue operations, and monitoring and surveillance, as shown in Fig. 4. We present more details about these applications in the next paragraphs. FIGURE 4. Applications of FANETs. Show All 1) Search and Rescue Operations UAVs are widely considered nowadays for critical situations such as disaster management, rescue operations, and public safety. UAVs offer real-time visual (image/ video) data of intended locations. Consequently, a search and rescue team can timely detect and decide where accurately the assistance is urgently required. For instance, drones can be used to track people who were lost during any mission or to protect people lost in remote deserts or forests [31]. 2) Construction Industry UAVs can be deployed to monitor the progress and safety of construction and various equipment by providing a real-time visual view of the sites. Monitoring construction projects from beginning to end ensures the quality of work. The cracks in the buildings, pipelines, and other surfaces can also be accurately monitored using UAVs [32]. 3) Precision Agriculture Drones are deployed in precision agriculture for sensing water quality, soil properties, pesticide spraying, disease and weed detection, and irrigation scheduling. The incorporation of UAVs in precision agriculture saved a lot of time and cost, enhancing productivity and crop yields [33]. 4) Traffic Monitoring Reliable and smart UAVs can aid in the automation of rescue teams, surveyors, and traffic police. UAVs can gather data about traffic conditions on highways as they can be deployed to get a vision of road accidents or vehicle thefts, to detect vehicle over-speeding, as well as to assist in avoiding traffic jams and mass congestion [34]. 5) Military Services UAVs play an integral role in military services. Most countries have added UAVs to their defense strategic plans to be used for enemy detection, border control, and maritime monitoring of critical sea lanes [35]. 6) Disaster Management Drones play significant roles in the management of man-made or natural disasters such as terrorist attacks and floods. These disasters can severely destruct the telecommunication infrastructure, transportation, power, water, and other supplies. UAVs can be deployed to locate disasters and provide alerts. For instance, a swarm of drones can be deployed to extinguish fires in case of wild or domestic fires, so that human safety is not compromised [36]. 7) Delivery Drones UAVs are also prominent nowadays for delivering various services including medicines, food, documents, and other services. Drones can be deployed to transport medicinal products (e.g., organs for transplantation, vaccines, pharmaceuticals, and medical samples) and prepared foods (e.g., pizzas and frozen beverages) [37]. 8) Entertainment Purpose Apart from the above applications, drones are nowadays prominently used for various entertainment purposes such as light shows, airshows, photography, cinema, etc. [38]. F. Performance Metrics In this section, various performance metrics that were used to evaluate the performance of the proposed systems have been elaborated. Various symbols used in the equations to compute these metrics are listed in Table 5. False Positive is the number of non-attack cases detected as attacks by the system/algorithm. The False Positive Rate (FPR), the ratio of false positives to total non-attack cases, should be minimized to avoid the problem of Denial-of-Service (DoS) to legitimate users. True Positive is the number of attack cases correctly detected by the system/algorithm. The True Positive Rate (TPR), which is the ratio of true positives to the total attack cases, should be maximized to discriminate and block the attackers. False Negative is the number of attack cases not detected by the system/algorithm. In other words, it is the number of attack cases reported as legitimate cases. The False Negative Rate (FNR), the ratio of false negatives to total attack cases, should be minimized to discriminate against and block the attackers. True Positive Rate and False Negative Rate can be related using the following equation: FNR=1−TPR (1) View Source In relation to the above three metrics, systems can be also evaluated using Recall, Precision, and F1-score metrics as follows: Recall Precision F1−score = t p t p + f n = t p t p + f p =avg(Recall,Precision) (2) (3) (4) View Source Detection Latency refers to the time delay between the instigation of attack and detection of attack by the system/algorithm. Detection latency is a crucial metric since it represents the time the attacker has to hijack the UAVs or cause mission failure before he/she gets detected. Position Drift refers to the UAV displacement caused by spoofed signals from the original trajectory. Root Mean Square Error (RMSE) indicates the differences between the values (e.g., position or velocity of UAV) predicted by a model and the actual or observed value. RMSE= 1 n ∑ N i=1 ( P i − A i ) 2 − − − − − − − − − − − − − − − √ (5) View Source Accuracy refers to the ratio of correct predictions, both the true and attack signals, to the number of cases under consideration. Accuracy= t p + t n t p + f p + t n + f n (6) View Source UAV Capture Probability is the probability that a drone gets captured or hijacked by an attacker in presence of the proposed algorithm. Power Consumption refers to the energy consumed (battery) for the execution of the proposed algorithm. This metric should be minimized since drones are battery-limited entities. Memory Consumption indicates the storage requirements of the proposed algorithms. The value of this metric should be low or negligible since the drones cannot carry large storage devices due to their light weightiness. G. Security Issues in FANETs FANETs are prone to various cyber-attacks, which are broadly classified into three categories by Mohsen et al. [39], namely, Data Interception attacks, Data Manipulation attacks, and Denial-of-Service attacks. Data interception attacks such as Eavesdropping and Key Logging mainly target the privacy of information transmitted between the UAV and the GCS. Data Manipulation attacks such as GPS Spoofing attacks, de-authentication, message injection, modification, and deletion mainly aim to hijack or take UAV control. Jamming are examples of Denial-of-Service attacks. GPS Spoofing attack is one of the most dreadful attacks since it can capture, mislead and/or make the UAV collide with other UAVs or objects causing security and safety concerns. The ease of availability of low-cost Software Defined Radios (SDR) and the open nature of GPS signals have attracted the malicious attackers to exploit the UAV’s vulnerabilities. In the following paragraphs, the GPS Spoofing attacks in UAVs and their impacts are briefly discussed. GPS is a Global Navigation Satellite System (GNSS) that uses positional information broadcasted by satellite constellations. Different broadcast frequencies and modulation techniques are used by these satellites. The frequency of 1575.42 MHz is used for civilian GPS Signals and is popularly known as the L1 band. The Course Acquisition Code (C/A) is a Pseudo Random Number (PRN), which identifies the satellite of origin. Generally, a minimum of four satellite signals are needed to be identified by the receiver using PRNs to calculate its position and time information by correlation. The GPS positioning systems apply the principle of three-sphere positioning. That is, the signal propagation delay to the GPS receiver is obtained from three satellites and it is multiplied with the speed of light. The pseudo-distance obtained from the three satellites gives three spherically connected equations. The readings from the fourth satellite are used for adjusting the clock differences. GPS Spoofing attacks are launched in two ways: 1) The attacker locks the GPS receiver of the target by computing the pseudo-distance first. The received signal is jammed, delayed, and then forwarded. 2) The attacker generates counterfeit signals by analyzing the satellite signal characteristics to broadcast in the target located area. Both methods can mislead the target with erroneous locational information. As a consequence of GPS Spoofing, the entire network operation, and the existence of the network itself is severely affected. Fig. 5 illustrates a GPS Spoofing attack scenario in which the UAV at the ‘Original Location’ travels to the ‘Desired Destination Location’ through the ‘Original Path’ that is shown in green. The spoofer desires to redirect the UAV to the position labeled as ‘Attacker Desired Destination’. The spoofer sends fake locational information to the UAV such that the UAV perceives that it is navigating in the wrong trajectory. However, it is located at the ‘Actual Current Location’, the spoofer deceives the UAV that it is located at the position labeled as ‘Fake Current Location’. The UAV then follows the ‘Perceived Flight Trajectory’ shown as the blue arrow in Fig. 5. This movement makes the UAV travel in the ‘Actual Flight Trajectory’ shown in the dark red arrow, leading it to the ‘Attacker Desired Destination’. FIGURE 5. Illustration of GPS spoofing attack in UAV. Show All Location awareness of constituent nodes is required for better performance of FANETs or UAV swarms. The current UAV positions are exchanged within the network with other UAVs, GCS, and/or other centralized services for topology maintenance. Forging the GPS signals, which is the main source of localization in FANETs, and disseminating this information in the network has harsh impacts on FANETs missions as follows: The absolute or relative locational information of UAVs is required for the successful completion of FANET’s mission. So, falsifying this information can lead to mission failure. Wrong locational information can cause two UAVs to collide. False location information can cause the UAV to enter geofenced areas such as military bases, airports, etc. Line-of-Sight (LoS) propagation is used by malicious UAVs to disseminate fake locational information. Hence, there is no chance of multi-path fading, which can be monitored otherwise using SNR (Signal-to-Noise Ratio) or C/N0 (Carrier-to-Noise Power Density, N0 represents the noise spectral density). SNR and C/N0 are vital parameters to analyze the performance of GPS receivers. In one aspect, GPS Spoofing in drones is relatively simple as multiple low-cost and simple drones are used. In another aspect, the spoofer has to counteract the swarm formation, i.e., the position of the FANET as a whole as well as the relative positions of UAVs within the swarm also has to be taken into account when spoofing attack is launched. A fake GPS signal relative to an individual drone will make obvious changes in the swarm formation and hence be detected easily. Thus, it can be concluded that deeper investigations on the threat of GPS Spoofing attacks in FANETs need to be conducted. This paper conducts a systematic literature survey on this topic, so future researchers can conceive this survey as a comprehensive guide to propose various solutions to secure the FANET environment from the threat of GPS Spoofing attacks. In the following section, the methodology adopted for this survey has been detailed. Specifically, Research Questions, Search Strategy, Keywords, Databases, Selection Criteria, Quality Assessment Tools, Data Extraction, and Data Synthesis. SECTION III. Methodology The research methodology in this survey follows the guidelines of Kitchenham and Charters [21], which has three phases, namely, planning, conducting, and reporting. In the planning phase, a complete plan of how and why to conduct this survey is provided. The research questions are also identified; and the search strategy, keywords, and resources are determined. In the conducting phase, the search strategies are applied to select the research articles to be considered. Based on the Inclusion/Exclusion criteria (shown in Section III-E), irrelevant articles are filtered out. The selected articles are further refined by a quality assessment tool formulated for this survey. In the reporting phase, the synthesized data are compiled in the form of facts and figures. In the following sections, the aforementioned phases are detailed. A. Research Questions (RQs) The survey conducted in this paper aims to address the following Research Questions: RQ1: What is GPS Spoofing Attack and its impact in FANETs? RQ2: What are the GPS Spoofing Attacker Models in UAVs in terms of Spoofing Strategy, Spoofing Technique, Spoofer Location & Number, and Spoofer System? RQ3: What are the attack detection and prevention mechanisms presented in the existing literature? RQ4: What are the Performance Evaluation Mechanism(s) in terms of Simulation or Proof-of-Concept Implementation? RQ5: What are the Performance Metrics used in existing Literature? RQ6: What are the Mobility Models used in the detection and prevention mechanisms? RQ7: What are the Communication / Propagation Models used in the detection and prevention mechanisms? RQ8: What are the Future Directions and Open Issues that are unaddressed in GPS Spoofing Attack studies? Table 6 lists the motivations that led to raising the above research questions. B. Search Strategy The articles published on GPS Spoofing attacks in Unmanned Ariel Vehicles (UAVs) during the 2017–2022 period were searched in IEEE XPlore®, ACM Digital Library, ScienceDirect®, Springer, and Google Scholar databases to conduct this survey. The aim of the search is to locate papers that discussed GPS Spoofing attacks in FANETs and/or defense mechanisms. In the next section, we present the formulated search words, which are also associated with logical “AND” and “OR” operators. C. Search Terms or Keywords With the aim of identifying all scientific articles related to GPS Spoofing attacks in FANETs, the major search terms identified for this purpose are “Unmanned Ariel Vehicle” and its acronym “UAV”, “Flying Ad-Hoc Network” and its acronym “FANET”, “Drones” and “Global Positioning System Spoofing” and its acronym “GPS Spoofing”. GPS being a subcategory of Global Navigation Satellite Systems, the term “Global Navigation Satellite System Spoofing” and its acronym “GNSS Spoofing” is also used. Below is the search query used in this survey: (‘‘Unmanned Ariel Vehicles’’ OR ‘‘UAV’’ OR ‘‘Drones’’ OR ‘‘Flying Ad-Hoc Network’’ OR ‘‘FANET’’) AND (‘‘Global Navigation Satellites Spoofing’’ OR ‘‘GNSS Spoofing’’ OR ‘‘Global Positioning System Spoofing’’ OR ‘‘GPS Spoofing’’). The compiled query is pasted in the search text field of the resources discussed in the next Section (III-D) and are searched in the “Title” and “Abstract” of the results. D. Resources As mentioned before, this study explored publications listed in global databases. Specifically, IEEE XPlore®, ACM Digital Library, ScienceDirect®, Springer, and Google Scholar databases. Selected articles’ bibliography sections are also analyzed for literature completion. In the IEEE XPlore® and ACM Digital Library databases, the search was conducted for the above query, and a filter was applied to get results from the years 2017-2022. In IEEE XPlore®, an advanced search is conducted using the ‘Command Search’ option available under the ‘Advanced Search’ menu. The ScienceDirect® database, owned by Elsevier Publishers, is also queried in the same manner. In SpringerLink, in addition to the above filter, the results are further filtered to omit the result-bearing books’ titles using the filtering tool in MS Excel (i.e., the results were exported to Excel Spreadsheets). Google Scholar database is also searched with the same search query and the year of search is selected as 2017–2022 from the options in the sidebar. Recent survey papers on GPS Spoofing attacks were collected for reviewing the state-of-art in Section IV. The technical papers on GPS Spoofing attacks in existing literature are presented in Section V. The following section presents the selection criteria applied in this survey. E. Selection Criteria Appropriate criteria have been applied for the inclusion/exclusion of identified publications into/from the final corpus. The published articles that meet all the inclusion criteria are included in this study. Oppositely, if the article has any exclusion criterion, it is omitted. The Exclusion Criteria (EC) and Inclusion Criteria (IC) employed in this survey are: EC1: The main focus of this study is GPS Spoofing attacks in UAVs and their impact on FANETs. So, this study doesn’t consider publications that deal with any other security threats in UAVs or FANETs. EC2: The attacks on MANETs/ VANETs or any kind of networks other than FANETs are out of the scope of this work. EC3: All articles published in languages other than English are not considered. IC1: The publications that study GPS Spoofing attacks, which include Surveys and/or Detection and/or Prevention of GPS Spoofing attacks in FANETs. IC2: The year of publication should be 2017-2022. IC3: The publication should be well-structured and well presented in English writing. The results obtained by applying these criteria have reduced the number of publications/articles to be considered in this survey to 79, which was 428 before. The summary of these results is tabulated in Table 7. The articles/publications are then categorized into two groups: 1) State-of-the-art Papers and 2) Technical Papers. It is observed that out of 79, 14 papers were Survey or Review papers and are included in the category ‘State-of-the-art Papers’. The ‘Technical Papers’ comprised 56 papers, which include various papers that present studies on or propose solutions for GPS Spoofing attacks in UAVs. Google Scholar has an overlap of nine papers from other databases. So, a total of 70 papers are considered in this study for further refinement. A year-wise analysis of this observation is illustrated in Fig. 6. The results are further refined based on Quality Assessment Tools, which are presented in the next section. FIGURE 6. Year-wise analysis of research publications on GPS Spoofing attacks in UAVs. Show All F. Quality Assessment Tools All papers resulted from the searches are subjected to a quality check using the tools that will be described in this section. This helps to select only the most relevant papers for consideration in this survey. “Quality instruments” [21] are used for this purpose, which are typically quality assessment questions. The numerical assessment of quality can be obtained if these instruments are mapped to numerical values. The ‘State-of-the-art’ papers are evaluated using the following Quality Checklists (QCs): QC1: Does the study contain sufficient information about FANETs and GPS Spoofing attacks in FANETs? QC2: Does the survey adhere to any Survey Methodology or Searching Strategy? QC3: Does the survey clearly state its motivation? QC4: Does the survey review a sufficient number of papers? QC5: Does the survey identify the research gaps? The ‘Technical Papers’ are evaluated using the following assessment questions: QC6: Does the study present the existing literature on GPS Spoofing attacks in FANETs before proposing the solution to defend the attack, if any solution is proposed by the authors? QC7: Does the study have clear problem(s) statement? QC8: Does the study portray implementation results? QC9: Does the study present a discussion on the results? QC10: Does the study clearly indicate the implementation tools used, i.e., simulation and/or proof-of-concept and/or datasets? QC11: Does the study make a comparison of the proposed system with existing ones and indicated how it outperformed them to fill the research gaps? QC12: Does the study addressed the research questions presented in Section III-A? QC13: Are the performance metrics used in the study valid and reliable? Further, qualitative checklists were framed and applied to evaluate both the state-of-the-art papers and the technical papers, as follows: QC14: How clear are the links and flow between various sections in the paper? QC15: Are there any new insights delivered by the study? QC16: How well is the comprehensibility of the language and style used in the paper? Each paper is assigned weights as ‘0’, ‘0.5’, or ‘1’, based on the answers to the above QCs, that do not meet, partially meet, or clearly/fully meet the quality checklist, respectively. These weights are summed up to score the paper. A paper is included if its final score is ≥5 out of 8 (for state-of-the-art papers) and ≥8 out of 11 (for technical papers). G. Data Extraction The results refined after applying the criteria in Section III-E and III-F were processed to extract the information from the selected studies to answer the Research Questions (RQs) formulated in Section III-A. The following points were considered when processing state-of-the-art papers: Authors’ details, journal/publication details, year of publication, and the years or duration of studies considered in the survey. Concepts or topics discussed in the study. Open issues or future directions provided by the study. The technical papers are processed with the following points in mind: Authors’ details, journal/publication details, year of publication. The defense strategy applied for the proposed solution. The proposed solution. The implementation details. The scenario where the proposed solution is deployed (whether it is FANET or Single UAV). If a single UAV, whether the solution is also applicable to FANETs. The attacker model. Whether the proposed solution is for detection, mitigation, and/or prevention. The performance parameters (methods and metrics) considered in the evaluation. H. Data Synthesis The information extracted from the results is summarized, tabulated, and/or plotted graphically based on the nature of the information. Sections IV and V put light on the ‘State-of-the-Art’ and ‘Technical’ papers, respectively, that satisfied the criteria mentioned in Section III-E and passed the Quality Checks (QCs) in Section III-F. SECTION IV. State-of-the-Art In this section, a review of the state-of-the-art papers identified during this study is presented. A total of 12 out of 14 (that passed the Quality Checks) Survey/Review papers on GPS Spoofing attacks in FANETs were selected as a part of this study. However, it is found that most of the papers reviewed the security issues in Unmanned Ariel Vehicles (UAVs). The papers that have some special mention of the GPS Spoofing attacks in FANETs along with other attacks are discussed. For instance, Mohsen et al. [39] reviewed ~84 articles and presented a study on the cyber attacks on UAVs. The attacks on UAVs were analyzed and categorized. The authors also reviewed the recent defense mechanisms against various attacks on UAVs. Among these, ~13 articles (from 2012 to 2019) were technical papers on GPS Spoofing attacks, which discussed GPS Spoofing attacks under the category of Data Manipulation attacks. They classified GPS Spoofing defense strategies into four categories, namely, Cryptography-based, Spatial Processing-based, Machine Learning-based, and Hybrid methods. However, only few of these studies addressed the security requirements of GPS Spoofing attacks in FANETs. Most of them are generalized defense mechanisms for GPS Spoofing attacks. The authors projected the need to develop efficient techniques in the future so that UAVs can navigate efficiently in GPS-denied environments. Hamza et al. [40] reviewed ~56 articles and discussed the UAV components, vulnerabilities, and defense methodologies. The authors created a taxonomy of attacks against UAVs based on the UAV components and the GPS Spoofing attacks were categorized under ‘Attack against Communication Link’. Various defense techniques were also discussed by the authors in ~8 articles (from 2014 to 2016). These include signal processing, encrypting GPS signals, and machine learning techniques. It also is observed that the GPS Spoofing strategies and defense mechanisms discussed in this paper are not specific to FANETs. The authors recommended the need for GPS-independent navigation solutions for UAVs so that the missions can be completed successfully during Jamming and spoofing attacks. As GPS signals are more prone to spoofing and Jamming attacks, the need for proposing effective navigation techniques that are less dependent on GPS is recommended as a future direction in this paper. Yueyan et al. [41] studied ~29 papers and analyzed the safety aspects of UAVs from three angles, namely, sensors, communications, and multi-UAVs. GPS Spoofing attacks were studied under the category ‘attack on sensors’. Two types of spoofing threats (Repeater type and Generating type) in UAVs are also presented in this paper. The authors have cited only one technical paper (published in 2017) specific to GPS Spoofing attacks in which attack signals were broadcasted using USRP (Universal Software Radio Peripheral). Fazal et al. [28] portrayed a review of communication perspectives of FANETs. They reviewed ~73 papers with the goal of providing insights into communication technologies in FANETs, applications scenarios, challenges, and open issues in the area. Among these, ~4 technical papers (from 2017 to 2019) discussed GPS Spoofing. This includes the GPS Spoofing vulnerability of 3-D Robotics commercial drones and few solutions to GPS Spoofing attacks in FANETs. However, no detailed discussion of these solutions was provided. Aicha et al. [42] presented a comprehensive survey (~213 references) on UAV communication protocols, networking systems, architecture, and applications. The survey also discussed the technical challenges and open research issues. Among these, few technical papers (~3 papers from 2020 to 2022) give a brief review of recent GPS Spoofing attack detection techniques in UAVs based on Visual Odometry, the fusion of GPS and optical flow raw data, and machine learning. No future direction related to GPS Spoofing attacks was discussed in this paper. A review on GPS Spoofing vulnerability of UAVs was provided by Eshta et al. [43] after reviewing ~41 articles. Among these, ~29 technical papers were on GPS Spoofing attacks and only two papers (published in 2014) are specific to UAVs. The paper also discussed the spoofing problems, types, and various countermeasures in the existing literature. A detailed discussion on the different types of spoofing attacks, namely, Covert and Overt as well as based on the threat assessment, namely, Simplistic, Intermediate, and Sophisticated were also provided. Moreover, the authors discussed different countermeasures and categorized them into several groups - encryption-based, Receiver Autonomous Integrity Monitoring (RAIM), Navigation Message Authentication, differing spoofed signal and true GNSS signals in space, antenna motion or geometry, and signal power. The authors also stated that the studied solutions face a common pitfall in that they require specialized hardware, which increases the weight and cost of UAVs. This is because the solutions were not UAV specific and hence cannot address the GPS Spoofing issues in FANETs. As a future direction, the authors recommended conducting more research on improving the tools for counteracting GPS Spoofing attacks. They emphasized the adoption of cryptographic techniques to safeguard against GPS Spoofing attacks in UAVs. Also, the need for drone manufacturers to develop a minimal level of countermeasures against GPS Spoofing while manufacturing commercial drones is envisioned. Hassija et al. [44] reviewed ~ 165 articles and presented a comprehensive review on drone communication. The authors shed light on security-critical drone applications and security challenges. Furthermore, the authors discussed solution architectures for various attacks based on Blockchain, Software Defined Networks (SDNs), Machine Learning, and Fog/Edge Computing. Among various security issues discussed in this paper, GPS Spoofing attacks in drones also got a relevant space as discussed in ~4 technical papers (from 2018 to 2019). An example of a GPS Spoofing attack on an American drone on December 5, 2011, was also showcased. The usage of BladeRFx40 SDR for generating falsified GPS Signals was also reviewed. Solutions to prevent GPS Spoofing attacks in drone environments based on Fog computing were discussed. The authors stated that Blockchain technology, SDNs, Fog computing, and machine learning techniques are new directions to consider while designing solutions for GPS Spoofing attacks in UAVs. Vinay et al. [45] surveyed ~144 articles to showcase a comprehensive review of UAV attacks and neutralization techniques. Among these, ~7 papers are specific to GPS Spoofing attacks in UAV, which include spoofing tools, and solutions to GPS Spoofing attacks based on techniques like deep learning. These papers also discussed the misuse of UAVs for illegal surveillance and unmanned attacks. Discussion on GPS Spoofing being used as an anti-UAV tool to neutralize UAV attacks is also provided as well as the need for future research to address various security concerns in UAVs. Faisal et al. [46] studied ~20 recent articles to survey the Jamming and Spoofing attacks on UAVs. Among these, ~4 papers (from 2019 to 2021) are specific to GPS Spoofing attacks in UAVs. The spoofing attacks that target the GPS, as well as Automatic Dependable Surveillance-Broadcast (ADS-B), are briefly illustrated. The authors observed the three ways of executing GPS Spoofing attacks, namely, falsified GPS signal or higher frequency signals, or spoofing the high gain antenna. The authors also observed that traditional defense mechanisms like GPS signal authentication are not suitable for resource constraint UAVs and recommended machine learning as an effective mechanism to defend against GPS Spoofing attacks. Rugo et al. [47] collected ~125 papers and presented a systematic literature review on drone security. Among these, ~4 technical papers discussed GPS Spoofing attacks in UAVs. Along with other security issues studied, the authors dug into the history of GPS Spoofing attacks in UAVs. The countermeasures in the existing literature to mitigate GPS Spoofing were also discussed. The authors showcased sophisticated techniques like comparing the other sensors (such as onboard IMUs, signal amplitudes) measurements, vision-based techniques, and machine-learning-based methods. Their observation was that the attackers are becoming smarter as the defense mechanism are becoming stronger. Furthermore, the authors recommended the use of GPS authentication and encryption as the most effective tool to counteract the threat of GPS Spoofing in FANETs. The possibility of replay attacks using the previously sent signals exists though. Syed et al. [48] surveyed ~126 articles and showcased a comprehensive review of UAVs, types, classifications, security challenges, applications, and standardization. Apart from a pictorial illustration of a GPS Spoofing attack in UAV, there are no further discussions on GPS Spoofing attacks in this paper. The author concentrated more on other technical details like the types of UAVs, applications, etc. Kai-Yun et al. [49] collected ~200 papers and identified the cyber security threats and solutions when UAVs collaborate to form FANETs. A detailed study on UAV communication architecture, routing protocols, and UAV characteristics including the mobility models are also showcased. Each paper studied in this survey is analyzed with an eye on security and non-security features addressed. A generic view of GPS Spoofing attacks and detection methods is given in this paper. The history of GPS spoofing attack is briefly explained through a pictorial illustration. As future directions, the authors recommended the use of techniques like lightweight encryption, reinforcement learning, and SDN to improve the security aspects of resource constraint UAV devices. Table 11 in the Appendix shows a summary of the comparative analysis of the State-of-Art papers discussed in this study and presented how the survey conducted in this paper is different compared to them. Conclusion. In this study, 12 out of 14 papers were selected after the quality assessment. The papers were considered relevant if they had some discussions on GPS Spoofing attacks in UAVs/FANETs. The discussion can be on the attacks and/or their impacts, the tools or algorithms for creating GPS Spoofing attacks, or the countermeasures. It is observed that most of the selected surveys studied the security issues in UAVs or FANETs in general and GPS Spoofing has been mentioned as one among many attacks. Some papers have elaborated on and viewed GPS Spoofing attacks in a broader sense. However, to the best of our knowledge, few studies have been conducted exclusively on GPS Spoofing attacks in FANETs. Though few studies exist on GPS Spoofing attacks on a single UAV scenario, none of the aforementioned followed any particular search/surveying methodology. Only one article followed systematic review guidelines, but that was also a generalized view of drone security. Accordingly, the survey presented in this paper on GPS Spoofing attacks in FANETs is the first of its kind to conduct a systematic literature review following the guidelines of Kitchenham [21]. An overview of this survey is shown in Figure 7. FIGURE 7. A taxonomy of GPS spoofing in FANETs. Show All SECTION V. GPS Spoofing in FANETs: A Taxonomy During this survey, it is observed that GPS Spoofing attack in FANETs is an issue of serious concern, and few research works that are specific to this topic have been undertaken. A total of 56 articles published between 2017 to 2022 has been considered, which can be classified into four categories, as shown in Figure 7. Articles that focus on GPS Spoofing attack mechanisms, articles that propose GPS Spoofing defense mechanisms, articles that have used GPS Spoofing as a defense mechanism (i.e., against other attacks), and articles that investigate the impact and vulnerability of GPS Spoofing attack. The following sections present a review of the articles in each category. A. GPS Spoofing Attack Mechanisms in UAVs In this section, the articles that studied the GPS Spoofing attacker models are discussed in detail. The purpose of these articles is to provide guidelines to the research community and cyber experts to understand the attacker’s capabilities and how they conduct the attack. Thus, to aid the development of novel solutions to defend against the threat of GPS Spoofing attack. As presented in Section II-G, the satellites transmit radio signals to UAV receivers to be processed in order to obtain the positional information. As these radio signals don’t use any encryption or authentication mechanism, the positional information can be altered by a spoofer device. The attacker might project a mimicked route or trajectory to the GPS receiver in three possible ways: Generating fake GPS signals. Sending signals with higher frequency leading to a denial of GPS signals. Spoofing high gain antenna. Bethi et al. [50] presented GPS Spoofing architecture layers, as shown in Fig. 8. The spoofing strategy and techniques are included in the application layer, whereas spoofer location, spoofer system, and user-spoofer understanding are placed under the device layer. The spoofing strategies adopted by the attackers are either to “mislead” the target or to “misreport” the positional information. While “mislead” guides the target UAV to a false destination, “misreport” reports false location information. The techniques used for implementing these two strategies are “position denial” and “track break”. In “position denial” techniques (also called detection denial techniques), the receiver is denied from detecting legitimate GPS signals. In “track break”, the targets are misled by sending false navigation signals. The spoofers can operate from different locations: “stand-off” (remote), “escort” (near but at a distance, also called stand-in), and “onboard” (resides along with the target). Distributed attackers deploy multiple spoofers at different locations. The spoofer systems include “simulators” (software codes to simulate GPS signals and radiate Radio Frequency (RF) signals with higher power), “repeaters” (the receiver module within the attacker captures the GPS signals, manipulates them, and re-transmits), and “hardware injection” systems, where the spoofed signals are combined with the receiver’s hardware for intentional misreporting. The user-spoofer understanding is the relation between the receiver and the spoofer. It includes “non-cooperative” (the receiver is unaware of the spoofer’s presence and always tries to avoid the attack) and “cooperative” (the user aims to get spoofed for misreporting its position to the base station). FIGURE 8. GPS spoofing attack layers. Show All In FANETs, the attacker manipulates UAV’s GPS signals with two main objectives. Either to change the routing information leading to a collision of UAVs (or incomplete missions) or to capture the UAV. The attacker sends fake GPS signals with higher power to UAVs with two basic modes: Covert Attack: the attacker avoids triggering any spoofing detection methods. This kind of attack is usually hard to detect. Overt Attack: the attacker launches a severe attack without any caution being detected. He et al. [51] studied the communication security of UAVs. Security vulnerabilities in UAV modules enable attackers to launch GPS Spoofing attacks. A low-cost implementation of GPS attacks is discussed in this paper. Since civilian GPS signals are not encrypted, they are more vulnerable to attacks. The spoofer system includes a repeater-based system. It is a low-cost GPS record-modify-and-replay system, which is hardware-based - Ettus USRP [52] radio family and software based on GNU Radio [53]. The spoofer location is remote and a track break spoofing technique is used in which the signal received from the satellite is recorded and sampled by USRP. The signal is then modified and reproduced to create spoofed GPS signals. The UAV’s GCS receives different locational information under normal scenarios and spoofed scenarios when the UAV was located at the same place. Eric et al. [16] developed a GPS Spoofing tool that can attack a DJI Matrice 100 Quadcopter. BladeRFx40 SDR is used to transmit the spoofed signals to the GPS receiver. The authors showcased the overall basics to details of the hardware and software of the DJI Matrice 100 Quadcopter. An open-source C-based software, GPS-SDR-SIM [54], is fed to the BladeRFx40 SDR to generate the spoofed signals. The authors aims to provide the research community with a general understanding of the GPS Spoofing concept in order to develop efficient defense mechanisms. Guo et al. [55] proposed a covert GPS Spoofing tool that generates spoofed signals without being detected. The original trajectory of a UAV is first captured using some external devices such as radar and is then used to simulate similar counterfeit signals so that the UAV will not suffer from bigger shakes during this drift. For that purpose, the acceleration of the UAV is made adjusted so that it is moved to the deceptive trajectory. The authors have not put much focus on the simulator used and future directions. The articles discussed so far have dealt with tools that can create GPS Spoofing attack on individual drones. However, the scenario in FANETs is different as swarms are formed with multiple drones working towards a common goal. These drones might be relatively of low cost and less complex and hence it is easier to instigate GPS Spoofing attacks. However, the concept of swarm formation plays a vital role in this case as transmitting a signal relative to any individual drone in the swarm might create obvious changes in the FANET’s shape. This observation is considered by Ceccato et al. [56] in 2020 to design a spoofing tool against FANET to divert the routes of the entire swarm without disrupting the formation. This is called ‘Spatial Spoofing’, where FANETs move in the spoofed area in formation as if they are moving in their real target area. Multidimensional Linear Filters (e.g., Wiener Filter) are used for filtering the signals transmitted by the satellites in the target area and are further re-transmitted by multiple spoofing ground antennas. Ceccato et al. claimed that this releases the attacker from keeping track of each individual drone in the swarm. Aru et al. [57] demonstrated the use of GPS-SDR-SIM, for generating spoofed signals to test the security vulnerability of DJI Phantom 3. GPS-SDR-SIM run by Attify 1.3 operating system, which is based on Ubuntu Linux and is built on a VirtualBox system. The GPS coordinates are input into the system. The tool then generates new coordinates and outputs into a gpssim.bin file. This is loaded to the BladeRF X40 device, which is then connected to the virtual machine. This system uses a track break mechanism and the attacker is operated from a remote position. Wang et al. [58] proposed two spoofing trajectory planning algorithms, the extension line and the tangent line. Forward Spoofing Jamming technique is used, which generates the spoofed signal by adding a certain time delay to the original satellite signals. The authors considered the role of the Inertial Navigation System (INS) as well. In the extension line, the next spoofing position is the intersection of a circle with the center as the UAV’s previous position and the direction vector of the Jamming signal. In the tangent line, the next spoofing position is the intersection of the tangent to the circle with the UAV position as the center from the actual destination of the UAV. MATLAB simulation experiments were conducted to evaluate the performance of the two algorithms. Even though both deflected the UAV from its original path, the tangent line algorithm was more powerful. The various attacker models applied by GPS Spoofing attack mechanisms discussed in this section are summarized in Table 8. B. GPS Spoofing Defense Mechanisms in UAVs The proposed taxonomy of the GPS Spoofing defense mechanisms in UAVs is depicted in Fig. 7, which are classified under five major categories, based on the methodology adopted for or the basis of the defense. Specifically, onboard devices, signal processing, cryptographic, game theory-based, and machine or deep learning-based methods. The use of onboard navigation systems such as Inertial Measurement Units (IMUs) (e.g., Accelerometers, Gyroscopes) and cameras to compare with GPS measurements is the basis of defense using onboard devices. In signal processing methods, various characteristics of received signals like the Received Signal Strength (RSSI) are analyzed to check for any anomaly. Cryptography-based methods rely on encryption and authentication techniques. Strategic movements based on game theory are applied in game theory-based defense methods. The techniques of learning and training the network through various machine and deep learning concepts are employed in the machine or deep learning-based methods. In the following paragraphs, we discuss the details of the articles for each mechanism. A summarised table of these articles is shown in Table 13 in the Appendix. TABLE 12 Detailed Analysis of the Attacker Models TABLE 13 Summary of Defense Mechanisms (NA: Not Available) Onboard devices or sensors techniques leverage various sensors onboard the drones for detecting GPS spoofing attack. The basic strategy is to employ the sensors to detect any anomalies or deviations from the expected GPS signals. There are several types of sensors that can be used onboard a UAV such as Inertial sensors (e.g., accelerometers and gyroscopes), Magnetic sensors (e.g., magnetometers), and Vision sensors (e.g., Cameras). Onboard sensors-based GPS spoofing detection approaches are advantageous as they can detect spoofing attacks in real-time and they are resistant to Jamming and interference. However, these approaches have some limitations and challenges like the need for accurate sensor calibration and the potential for false alarms due to other factors that might affect the sensor readings (e.g., environmental conditions or sensor noise). Fig. 9 depicts a high-level description of the methodology of these approaches. In the following paragraphs, we discuss the proposed defense solutions that are based on onboard devices or sensors. FIGURE 9. GPS spoofing detection using onboard devices or sensors. Show All In 2017, Qiao et al. [61] proposed a GPS Spoofing detection based on the vision of the UAV. The Monocular Camera, using Lucas-Kanade (LK), and the IMU sensors were used to find the velocities of the UAVs. The velocity obtained via these two sensors is compared with the corresponding velocity obtained using the GPS. RMSE values are computed and spoofing is detected if the RMSE goes beyond a specific threshold value more than a pre-set number of times. The aforementioned process is performed during fixed time intervals. The proof-of-concept was implemented using DJI Phantom 4, which uses a rectangular trajectory. The GPS-spoofed signals are simulated at a UAV’s speed of 5m/s and the authors claimed that their method is efficient, as it does not require any additional hardware. The detection latency is used to evaluate the system. The experimental results show that the proposed methods detect GPS Spoofing in an average of 5s . The authors plan to implement the proposed system in open-source platforms and outline the steps the UAVs must take upon detecting the attack. The above work in [61] has been extended by Daojing et al. [62] in 2018 by proposing a method for the safe return of UAVs when spoofing is detected. The authors proposed to use the Oriented FAST and Rotated BRIEF (ORB) methods for feature detection, which are more precise and faster than their traditional counterparts like Scale Invariant Feature Transform (SIFT) and Speeded Up Robust Features (SURF). The UAV stores the image frames it captures during every prefixed time interval and if spoofing is detected, the UAV moves back in the same line. Then, after the same prefixed time interval, the UAV compares the captured image for that location with the stored one. If they match, it moves back from that location and repeats the same process until it reaches the starting location. The authors have not implemented their proposed method and therefore the performance is not evaluated. The authors recommended doing more research on decentralized approaches to control UAV clusters for decision-making and collision avoidance. However, continuous usage of the camera might rapidly drain the battery of the drones. Moreover, environmental factors like light, fog, and wind might affect the camera’s performance. Feng et al. [63] proposed a drone hijacking detection method in which the position of the drone detected by the Gyroscopes and Accelerometers sensors and the GPS receiver module are compared. The method avoids accumulated errors when the INS is used. The performance of the proposed method is evaluated using proof-of-concept implementation with Quadrotor drone (equipped with L3GD20H gyroscopes and LSM303D accelerometers) using the PixhawkTMflight control system. The GPS system used in these drones is NEO-M8N. Hardware injection attack is conducted using an onboard micro-controller that generates fake GPS signals and a timer is set to trigger the hijacked mode. Position denial was used to prevents the GPS receivers from sensing the original signals. The “Correctness Ratio” (i.e., the ratio of the number of successful detection of hijacks to the total number of experiments) was calculated for the proposed method and it was 84% for non-hijacked cases and 100% for hijacked cases. At the same time, the systems that used GPS versus INS exhibited 0% and 100% correctness ratios, respectively. The authors recommend conducting future tests with other drones to generalize the results. The authors further improved their scheme in [64] to enhance the detection rate in non-hijacked cases. The GPS data (GPS angle) and gyroscope measurement (Yaw from the Angular Velocity) are the only factors used. This is because the readings from the accelerometers reduce the Accuracy of results in [63]. The authors claim that the correctness ratio of the system had become 100%, while it was 84% in [63] (DATE method) during non-hijacked curved trajectories. Yet, the method introduced subsequent degradation (still 92%) in the correctness ratio during non-hijacked line trajectories. Thus, in order to achieve 100% perfection in all scenarios, the authors recommended using [63] and [64] methods in fusion. In addition to the future direction in [63], the authors plan to extend their work to anti-hijacking flight control so that the drones can detect and stay resilient to fake or low-quality GPS signals. Sun et al. [65] discuss the GPS Spoofing attack in UAVs that employ INS/GPS-integrated navigation systems. The authors state that in order to make the UAVs anti-spoof, the spurious GPS signals need to be identified first. For this, the system dynamics are based on the centroid motion model and attitude motion model. The measurements from INS and GPS are passed through two Extended Kalman Filters and are used to find relative estimation errors. Numerical Simulation experiments were conducted to evaluate the proposed model. The Estimation Error of centroid dynamics parameters Xc , Xy , and Xz with respect to time were used as performance parameters. The authors have not mentioned any future direction for their work. Majidi et al. [66] proposed an approach to estimate the actual location of UAVs, which uses a fusion of INS/GPS data for navigational purposes. The spoofing is detected using the hypothesis method and the real trajectory to be followed during spoofed situations is estimated using particle filters. The authors used a Particle Swarm Optimization Filter (PSOF). The results obtained are compared with those of other particle filters such as the Sampling Importance Sampling Particle Filter (SIS-PF), Sampling Importance Re-sampling Particle Filter (SIR-PF), and Adaptive Unscented Particle File (AUPF). The PSOF is found to have a better performance, as it uses the experiences of each particle as well as neighbors for trajectory estimations. The performance of the system is evaluated using MATLAB simulations and the system has 97% Accuracy in positioning. Root Mean Square tests were conducted to validate the proposed method. No future directions were mentioned in this article. Zhu et al. [67] proposed a method that involves a human operator supervisory control system. The image/video reels captured by onboard cameras are compared by a human operator with a pre-defined map. Any inconsistency in the correlation suspects a hacking attack and the operator can take control of the UAV for safe-return. The experiments to evaluate this concept was conducted on the Security-Aware Research Environment for Supervisory Control of Heterogeneous Unmanned Vehicles (RESCHU-SA) platform [68], [69]. The experimental results show 80% success rates. The data is analyzed using ANOVA tests and Pearson correlation. The authors recommended that Human Geo-location can be used as a potential tool to detect GPS Spoofing if the decision support systems are further enhanced. This work has been extended in 2019 using Hidden Markov Model (HMM) to reveal two hacking detection strategies (waypoint-oriented and target-oriented) [70]. The inefficiencies of these strategies were identified and recommended the need for a better decision support system as a future direction. The devices and systems that can provide real-time operational guidelines to the operators are other future directions. Yet, human operator is not a desirable feature for an autonomous environment. Cheng et al. [71] proposed an approach that is based on the fusion of GPS and IMU information. The detection task is entrusted to the GCS and the GPS devices are relieved of any infrastructural changes. The authors have considered a FANET scenario where multiple UAVs interact and collaborate to accomplish a task. The locational information is also exchanged among the UAVs and they are compared with the locations obtained from GPS. Any mismatch indicates the probability of an attack. In case the number of drones in the system is not sufficient, the flight characteristics and other positional information from individual drones’ onboard sensors are used to compare with GPS information. The Monte Carlo simulation [72] experiments claim that the system detects GPS Spoofing attacks within 8s (and 28s in the worst case) with a 98.6% detection rate. Communication Time Overhead, False Positive, and False Negative (miss detection) were the performance evaluation metrics used in this paper. No future directions are discussed in this paper. However, all drones in a FANET might not be always connected to GCS. Ferrao et al. [73] proposed a GPS Spoofing detection mechanism that incorporates the security and safety of UAVs as a unified concept. A safety metric that indicates the health status of the UAV and the priority of a component for the overall system security is computed. Haversine Formula is applied to find the distance between two points. The readings of the IMUs are also employed in the detection mechanism. The time data and distance are used to find the average speed of the drone. If the distance covered in the time range is acceptable (based on 80 Km/h speed), the drone is concluded to be in a stable state. Node Criticality Index (NCI) metric, which is the average of the health status index and priority, is applied to evaluate the performance of the proposed system. If the node is found to be unstable, the priority of UAV modules that can help the UAV to return to a safe state is increased. The experiments were conducted using 3DR solo drone. Fake GPS location Mobile App is employed to simulate spoofed GPS signals. The authors recommended conducting more research works on decision-making systems after the spoofing attack is detected. Lianxiao et al. [74] proposed an approach that applied the fusion of the GPS and optical flow sensors to detect GPS Spoofing attacks in UAVs. The distance obtained by GPS coordinates of two positions traversed by a UAV and the pixel distance of images collected by optical flow sensors at these locations is compared. If the difference exceeds a preset threshold value, the UAV is considered to be spoofed. The proof-of-concept experiments have been conducted with a Quadrotor (PX4 Flight Control Software). It leverages PX4flow v1.3.1 as the optical flow model and HackRF SDR is operated to simulate the spoofed GPS signals. QGroundControl, which is a powerful and user-friendly GCS for UAVs, is employed for calibrating the sensors before the flight. Detection latency performance metric was measured. The method claims to have instantaneous detection of spoofing attacks. The future plan is to precisely locate the spoofed sensor and to investigate about the decision UAVs have to take after detecting the attack. Varshosaz et al. [75] proposed an approach that can detect sophisticated GPS Spoofing attacks employing Visual Odometry. The trajectories determined by GPS and those by the onboard camera(s) are locally compared with the help of a moving window. The differences between these trajectories were estimated by computing the Euclidean Distances between corresponding points, Angle of Distance, and Taxicab Distance between Histogram of Oriented Displacements. The proof-of-concept evaluation of the proposed method is performed using images captured by DJI-FC6520 digital camera at Golgir village. The detection rate and latency performance metrics were measured. The method fails to detect the attack in certain scenarios like darkness, lack of features or texture in the images, etc. The changes in drone velocity might also affect the performance of the system. Hacohen et al. [76] proposed a GNSS spoofing detection mechanism in UAV swarms that leverage the IMUs and the GNSS (GPS) receivers. Additionally, an onboard sensor that estimates the relative distance between the drones (like LoRa Sensor) is employed in this scheme. The drones in the swarm exchange their mutual distances among each other in the network and an Extended Kalman Filter is used for estimating the FANET distribution. The pool-testing method is applied to identify and isolate the malicious drones in the swarm. Experimental simulation experiments were conducted to evaluate the performance of the method. The method is found to have 90% Accuracy when there are at least 10 drones constituting the network. Signal Processing based methods can be deployed to detect GPS spoofing attacks in FANETs. GPS spoofing detection based on signal processing involves analyzing the received GPS signals to detect inconsistencies in the signal characteristics such as carrier-to-noise ratio (C/N0) Monitoring, Signal Correlation Analysis, Correlation Analysis, Geometric Consistency, Statistical Analysis, etc. If the deviations or inconsistencies exceed a prefixed threshold value, spoofing is detected. Figure 10 illustrates a high-level diagram of the process. Following paragraphs discuss various proposed solutions that leverage the signal processing methods to detect GPS Spoofing attacks in UAV environments. FIGURE 10. GPS spoofing detection using signal processing methods. Show All Xiao et al. [77] proposed location authentication in drones against illegal hijacking by GPS Spoofing. The method named as “WiDrone” in which a WiFi Fingerprint location cross-check is performed. The Current WiFi Fingerprint (CWF) is compared with the Destination WiFi Fingerprint (DWF), which is already stored in the device. If there is any mismatch, spoofing is detected. The drone flies away from that location, gets a GPS signal, and then authenticates the destination again by employing the same procedure. The experimental evaluation is conducted using DJI Matrice 100. The system uses MT7601U wireless network card as the WiFi module to perform WiFi fingerprint collection. The drone and the Raspberry Pi were connected via UART cable. USRP N210 [78] simulates the GPS Spoofing signal, which is operated from a remote location. Track break technique was used to attack the drone. The WiFi Fingerprint similarity in different environments such as laboratory buildings, student dormitories, residential zones, and business districts are used for the performance evaluation. It is observed that the distance between CWF and DWF has a critical role in influencing the similarity. The authors judge that the distance of 50 m is suitable to perform the authentication. The authors recommended that instead of comparing RSSI of WiFi signals, other signal parameters can also be included, as WiFi works well only in urban/city areas. For mountainous areas without enough WiFi signal strength, this method fails. The authors project the possibility of introducing a “No-Fly WiFi zone” to overcome the problem of bypassing the no-fly zone policies that can lead to terrorist attacks or illegal spying. Javaid et al. [79] proposed a method to detect and mitigate GPS Spoofing attacks in UAVs leveraging Receiver Autonomous Integrity Monitoring (RAIM). The integrity of the signal packet received from the satellites is compared by computing the pseudo-range values from different satellites. If any discrepancy is found, the faulty satellites have to be isolated. The signals from five satellites are processed in three groups to detect the faulty host and the common host in all the groups is isolated to mitigate the effects. OMNeT++4.5 simulator [80] (with GPS module, called as UAVSim), which is a C++-based discrete event network simulator, is used to test the performance of the proposed concept. Jansen et al. [81] proposed a method that leverages the periodic GPS position advertisements broadcasted by the aircraft for air traffic control purpose to detect GPS Spoofing attack and also to identify the location of the spoofer(s). The Time Difference of Arrival (TDoA) of the position advertisements at various globally distributed sensors at the OpenSky network [82] is used to estimate the position of the aircraft. The sensors are time-synchronized. The inconsistencies of these positions with those reported by the GPS receiver is used to detect the attack. The location of the spoofer is identified by employing the propagation delay in the advertisement traffic broadcasted by the receivers. The traffic is analyzed by dedicated infrastructure on the ground. USRP B200 from Ettus Research [52] and the software-defined GPS signal simulator, gps-sdr-sim [54], were applied to generate spoofed signals. Detection rate, delay, and coverage were the performance metrics measured. The detection rate is about 75% with a detection latency of fewer than two seconds. The attacker could be located within 15 minutes of monitoring. Dang et al. [83] proposed a 5G-assisted method for monitoring the position of UAVs and hence live detection of GPS Spoofing attack. The method relies on the up-link Received Signal Strength (RSS) of signals received at the cellular base stations on the ground. The UAVs report their positional information to the Unmanned Ariel System Traffic Management (UTM), as per the Federal Aviation Administration (FAA) regulations. UAV residence areas and Adaptive Trustable Residence Areas (ATRAs) are computed using a trilateration approach. The UTM compares the location provided by the UAV with that of ATRA. If the UAV is located outside the ATRA, it is spoofed. The performance of the method, evaluated using Python, showed that more than 95% of the attacks are detected. True Positive, False Negative, and False Positive were used as performance evaluation metrics. The system applies the shadowing propagation model. For future works, the authors plan to work on LOS/NLOS Path Loss Models. Also, the proposed models would be extended to test the performance of the system under conditions where the UAV is not in the vicinity of fewer than three base stations. Additionally, the authors give directions to use machine learning techniques to access the channel quality. Wan et al. [84] proposed a GPS Spoofing attack mitigation mechanism that tracks the attacker’s location and estimates the effective range of the spoofing signals using an Extended Kalman Filter (EKF). This allows the UAV to move away from this range within the escape time and avoid sudden sensor drifts. The performance of the system is evaluated using numerical simulations with Julia Programming Language. Tituona et al. [85] proposed a method to detect GPS Spoofing attacks in UAV networks leveraging the Bayesian Networks. The UAV system is modeled as a Bayesian Network and the GPS signals (Signal-to-Noise ratio, pseudo-range, Doppler shift, etc.) were analyzed to detect the spoofing attack. When a UAV receives a new GPS signal, the attack detector module embedded in the UAV checks the correctness of the signal by propagating signals in the network and estimating the conditional probability in the Bayesian Network. The performance of the proposed model was evaluated using MATLAB simulations and SatGrid datasets were used to generate GPS signals, which includes G22 (genuine GPS dataset collected from distributed locations) and S7 (spoofed dataset) [86]. The Precision, Recall, and FPR were the performance metrics measured. The method exhibited a Detection Accuracy of 96.2%. For future works, the authors plan to conduct experiments with more variables and compare the performance with other existing systems. The method does not work well if the trajectory is not pre-defined or if at least two neighbors do not follow the same trajectory. In 2021, Bada et al. [87] proposed a trust-based method for detecting colluding GPS Spoofing attacks. The nodes in the FANET are classified as targets, active witnesses, and passive witnesses. The active witness can locate the spoofer using the angle of arrival and PRN code. The method is based on the free space loss factor in signal propagation. The free space loss factor is found to be negligible if the distance between the target and the satellite changes drastically in the case of authentic GPS signals, whereas a slight move can lead to a huge difference if the target is very close to the spoofer. The spoofer adjusts its transmission power such that the target receives it at almost the same power as received from the satellite. The neighboring UAVs (witnesses) can detect this signal with signal power greater than the detection threshold, making them aware of the attack. The UAVs in this model communicated using LrWPAN (Zigbee) protocol. The active witness detects this and communicates to all one-neighbor nodes in its vicinity. The passive witness, who can also witness the spoofed signal, confirms the attack and notifies the target. WEIBULL distribution is used to model the trust between nodes. The performance is evaluated using the NS3 simulator [88] with Random Mobility Model and ITU-R 1411 LOS propagation model. The detection rate (True Positives) and False Negatives were the performance metrics measured. The method detects 99.88% attacks with an Accuracy of 98.40%. For future works, the authors plan to integrate machine learning solutions with the proposed model, alongside fusing the Byzantine Agreements to enhance and optimize the trust model. In 2022, Pardhasaradhi et al. [89] proposed a method to detect and mitigate GPS Spoofing attacks in UAV Swarms using Distributed Radars. Multiple radars are deployed on the ground and the position, velocity, and time estimate of the signals from the targets are fused with GPS position estimate by the target in a central node. If both tracks are different, GPS Spoofing is detected. Then, the fused data from the radar are fed into the GPS receivers to mitigate the attack. Simulation experiments (simulation tool was not mentioned) were conducted to evaluate the performance of the system. Position Root Mean Square Error (PRMSE) has been used to detect the changes in the fusion node. Though the method does not require modifications in the existing GPS receiver infrastructure, it incurs high costs and computational overhead. Also, the deployment of multiple radars seems to be impractical. The security of the communication link between the radar and drones also needs to be ensured. For future works, the authors plan to deploy onboard radars instead of ground-based ones. Also, a fusion of IMU track, GPS tracking, and Radar track is to be considered. Cryptographic methods are another approaches to detect GPS spoofing attacks in FANETs. These techniques involve employing cryptographic algorithms to authenticate and/or validate GPS signals. However, proper key management and computational overhead can be two hindering factors for the widespread adoption of these methods in resource-constrained drones. A high-level diagram of the process in these methods is depicted in Fig. 11. The following paragraphs discuss various proposed solutions that leverage cryptographic techniques. FIGURE 11. GPS spoofing detection using cryptographic methods. Show All In 2019, Han et al. [90] proposed a cooperative GNSS spoofing detection system for FANETs based on Blockchain technology. Blockchain is deployed as a layer on top of the UAVs, which upload their locational information from the GPS to the Blockchain. This updating is performed every second and the UAVs compare the locational information of the neighbors obtained through their Radio Direction Finding (RDF) unit. If any variation is detected, a spoofing attack is suspected and an alert is sent over the network to other nodes including the victim. The authors have not conducted any experimental study and no future direction was stated. This work has been included in this survey since it has given an orientation into GPS Spoofing attacks in FANETs whereas most other papers focused only on a single UAV. Kara et al. [91] proposed a method to prevent/avoid GPS Spoofing attacks in FANETs. Their strategy aims to estimate the real position of UAV using a Leader-follower method. One of the UAVs in the FANET is elected as a leader using a consensus that is based on mission type, flight quality, etc. The leader gets its GPS position, which is then encrypted and sent to other drones. The follower drone decrypts the received message to get the leader’s position, which is also appended with other parameters like propagation delay to compute its true position. In order to ensure the reachability of the leader drone by other drones, each drone sends the received message from the leader to all other connected drones. The leader is elected for a prefixed time period and then re-elected. The concept has yet to be implemented and its performance to be evaluated. The battery constraints of the drones for encryption and decryption also need to be considered. Game-theory based methods are mathematical frameworks that model the interactions and decision-making of multiple entities in a strategic setting. The strategic movements of drones and attackers in this model are essential entities to be considered. A high-level diagram of the mechanism (or process) in these methods is illustrated in Fig. 12. The following paragraphs discuss various proposed solutions that are based on Game-theory. FIGURE 12. GPS spoofing detection using game-theory based methods. Show All In 2017, Tao et al. [92] envisioned the vulnerability of civilian UAVs to spoofing. After highlighting the impracticability of encrypting the GPS signals in civilian UAVs (due to cost, secrecy, and scalability requirements), the authors proposed a strategic defense against GPS Spoofing attacks in these UAVs. The receiver strategically infers a new location even if the attacker tries to mislead with false signals. A game-theoretic solution is proposed where the strategic interactions between UAV and the attacker are used to detect the attack. The game tries to attain Perfect Bayesian Equilibrium (PBE) and it is observed that the equilibrium has a PLASH (Pooling in Low types And Separating in High types) structure. In case of a spoofing attack, the UAV infers its true position during the separating part and the strategic move of the UAV in the pooling portion makes it move such that the deviation from the true position is minimal. A continuous-kernel signaling game model analyzes the equilibrium of the game. Numerical experiments were conducted to evaluate the proposed scheme. The positions of UAVs under different scenarios were observed and employed as evaluation parameters. The remote spoofer captures the GPS signals and generates counterfeit ones for the UAV to track break and redirect the UAV to desired locations. In 2020, Eldosouky et al. [93] proposed a GPS Spoofing defense mechanism that relies on the cooperative positioning of UAVs in the FANET to mitigate the effect of spoofing. A FANET scenario with five UAVs is studied in this paper. The authors aimed to capture the strengths of the Stackelberg Game Equilibrium to enhance their defense strategy. The optimal routes followed by UAVs during normal and attack scenarios were modeled using system dynamics. The performance of the proposed system is compared with other two systems that use random and deterministic strategies. The simulation results showed that the proposed system outperformed the other two systems in terms of UAV capture probability and UAV deflections from the planned routes. The authors direct future research to find solutions for the problem when more than five UAVs getting targeted by multiple simultaneous attackers. The reliability of other UAVs needs to be ensured in this scheme. Machine Learning methods to defend against GPS Spoofing attacks in UAVs are used to analyze the GPS signals and detect any anomalies or deviations from the expected behavior. The system is trained to detect anomalies or classify them as legitimate or spoofed based on signal features. These approaches require diverse and realistic training datasets. A high-level diagram of the process in these methods is depicted in Fig. 13. The following paragraphs discuss the proposed solutions that employed machine learning approaches to detect GPS Spoofing in a UAV environment. FIGURE 13. GPS spoofing detection using machine learning methods. Show All Panice et al. [94] discussed that the civilian GPS system does not guarantee authentication, integrity, and confidentiality, thus, it is vulnerable to GPS Spoofing attacks. The signal power is computed in many cases to detect the attack, however, this might not work for UAVs due to resource constraints. The authors proposed employing Support Vector Machines (SVM) to detect anomalies. The data fused from different navigation systems are analyzed using SVM. A decision boundary is constructed based on the knowledge of data during normal scenarios. The system is trained to detect deviation in order to indicate the attack. MATLAB simulations were used for performance evaluations. The attacker is considered to be located onboard as fake GPS data are injected into the simulation and used the track break strategy. FPR, TPR, and Accuracy were measured as the performance metrics. The system is found to detect the attacks within 30s . The authors recommend conducting real-world experiments as a future direction for their work. However, the calibration of INS is done using GPS signals at the receiver. Manesh et al. [95] proposed a machine learning-based approach that uses artificial intelligence to detect GPS Spoofing attacks in UAVs. The GPS signals are classified based on pseudo-range, Doppler Shift, and Signal-to-Noise ratio. The authors captured real GPS signals to create a meaconing (repeater-based) attack. RTL-SDR V.3 RTL2832U was used to receive the signals. RTKLIB [96] was deployed as a GNSS library. The experiments and training were only on the GPS data (i.e., without using any UAV). The detection rates, False Positives, and False Negatives were measured as performance metrics. The method exhibited an Accuracy of 98.2% and a detection rate of 99.4%. For future work, the authors recommended to use online learning to train the network when new data arrives. In 2019, Xiao et al. [97] proposed a Recurrent Neural Network (RNN) based approach to identify behavioral anomalies in UAVs. Reliable normal behaviors are modeled using two scenarios and the UAVs are trained accordingly. The model Accuracy is enhanced by estimating the angle of arrival and Normalised Root Mean Square Error (NRMSE) that detects the deviation in a real position of the UAV and the position provided by the normal behavior models. If the NRMSE is greater than a prefixed threshold, abnormal behavior is detected. The experiments were simulated using Python and TensorFlow [98] and the Angle of Arrival is obtained by analyzing the real-time movement of the Dajiang Mavic Pro UAV and combining it with the national standards provided in the ITU-TY.IoT-UAS-Reqts [97]. The detection Accuracy of different RNNs in the deployed scenarios was measured and compared to the detection Accuracy of SVMs and Multi-Layer Perception (MLPs). The proposed method exhibited an Accuracy of 98.7% and a latency of 0.034s . As a future direction, the authors projected the need of more optimized results that are in line with the real-world scenarios. In 2020, Wang et al. [99] proposed a solution for UAVs with fixed routes like surveillance and delivery drones. The flight path of the UAV is predicted using the Long Short Term Memory (LSTM) algorithm, which relies on previous flight data. If the deviation between the predicted path and the GPS path exceeds a preset threshold, the path-based detection method is invoked. Path-based detection method uses the position estimated by integrating the velocity obtained from IMU. MATLAB simulations were used to evaluate the performance of the system using the detection latency and the detection ratio metrics. The proposed method showed a detection ratio of 78% and a detection latency of 3 to 5s . Xue et al. [100] proposed a deep-learning-based approach that compares satellite images from Google Earth and images captured by their own UAV to detect GPS Spoofing attacks. The satellite images and aerial photos captured by UAV are fed into a deep learning model, which can be on-board or on-ground. The model compares the satellite and the UAV images. If a mismatch occurs, a spoofing alert is generated. The authors constructed a dataset, SatUAV [101], using images captured by DJI Phantom 4 with camera DJI FC631 and satellite images obtained from Google Earth. SatUAV dataset is further nourished with images obtained from the SenseFly website [102]. The performance of the model is evaluated using NVIDIA © Tesla® V100GPU (for deep learning), Raspberry Pi 3B+ and Python 3 with Pytorch [103]. Accuracy, precision, recall, F1-score (True Positive, False Positive, False Negative), Time Complexity, and Power Consumption were measured. The results exhibited a 95% success rate in detecting the attack within less than 100 ms. The authors suggested various future directions like exploring the probability of detecting the attack in featureless or feature-poor areas, parameter optimization or tuning for higher Accuracy, and overcoming challenges like detecting attacks at night and dealing with ephemeral objects, etc. Also, conducting more real-world experiments under various weather/air conditions (e.g., rain, snow, fog, haze, etc.) in more places for further evaluation. Fusion with other sensors like IMUs was also recommended. However, the proposed method relies on old images to detect the attack. Jason et al. [104] proposed an intrusion detection system that detect GPS Spoofing attack in UAVs. The method is based on one-class classifiers, which used flight logs as a training dataset. A comparative analysis of various one-class classifiers, namely, One-Class Support Vector Machine (OC-SVM), Autoencoder Neural Network, and Local Outlier Factor (LOF) with the proposed system has been conducted. The authors used original flight log data, the UAV Attack Dataset [105], as a training set. The performance of the experiments is evaluated using SITL simulator and Gadgets HackRF software-defined radio with GPS-SDR-SIM tool for creating the spoofed signal. Keysight EXG N5172B signal generator has been used to provide the true coordinates as a location in Shanghai, China. Detection rate (precision, recall, and F1-score) and Accuracy performance metrics were measured. The system resulted in an average F1-score of 94.81% for the Autoencoder classifier, 81.17% for OC-SVM, and 58.93% for the LOF. As a future direction, the authors plan to develop classifiers for an onboard IDS using other sensors. Feng et al. [106] proposed a machine learning-based method to train the UAV based on the GPS and IMU readings. The authors trained the UAVs off-board and on-board. XGBoost (XB) machine learning method is used for off-board training and the precision of the learning outcome is further fine-tuned using Genetic Algorithm (GA). Moreover, drones were trained onboard using real-time flight log data from the IMU and GPS receiver. The experiments were conducted using real-world Quadrotor drones. The spoofer is operated onboard triggering fake signals. The detection Accuracy and latency performance metrics were measured. The results show that the proposed method detects 93.3% and 100% of attacks in non-hijacked and hijacked cases, respectively, and the detection of the attack was within 1s . For future works, the authors plan to conduct experiments in other drones with more complex trajectories and to investigate anti-hijacking flight control methods to make the drones resistant to low-quality GPS signals. Dang et al. [107] proposed a method to detect GPS Spoofing in UAVs that leverages deep learning and statistical approaches. The statistical properties of path loss between UAV and nearby Base Station (s) are used to train the Multi-Layer Perceptron Model (MLP). Three statistical properties were considered (i.e., moment, quartile, and probability distribution difference) and three MLP-based models were designed. If the difference between the actual path loss (provided by the base station (s)) and the theoretical path loss (provided by UAV, which increases with distance) is greater than a threshold value, a spoofing is suspected. The accurate threshold values and selected base stations are given by MLP. The performance of the system was evaluated using Python and TensorFlow library. The Spoofer operated from a remote location with track break spoofing. The proposed method achieved a 93% detection rate if the UAV is in the vicinity of three base stations and an 80% detection rate if in the vicinity of one UAV. The future directions are to test the system using ensemble machine learning models and real data. Richmond et al. [108] developed Deep Learning based models using UAV flight logs and telemetry data to detect GPS Spoofing attacks in real-time. The UAV log data for different models are generated and used for training. A classification-based training approach is adopted using two LSTM classifiers, namely, Binary Classifiers (BC) that use benign and spoofed data, and Autoencoder-based One-Class Classifiers (OCC) that use only benign data for training. Gazebo Simulator [109] was used for generating flight log datasets. PX4 Autopilot firmware with QGroundControl App (as GCS) was used to simulate UAVs. The performance and feasibility of the proposed model have been validated using Intel Neural Computing Stick (NCS2) [110]. The measured performance metrics were recall, precision, Accuracy, and F-1 score. UAV-specific and generalized evaluations were performed. UAV-generalized detectors are found to have a detection Accuracy of 97.79% using binary classifiers, whereas, 94.98% for one-class classifiers. The UAV-specific detectors exhibited a detection Accuracy of 99.56% using binary classifiers and ~ 99.24% using one-class classifiers. The authors have evaluated the time overhead on the UAVs and found that the average time interference for the LSTM-based Autoencoder OCC is 4.32 ms and 3.986 ms for the binary classifier. For future works, the authors plan to propose effective methods to address the attack after detecting it. Aissou et al. [111] compared several tree-based machine learning models, Random Forest (RNF), Gradient Boost (GB), XB, and LightBM (LB), to detect GPS Spoofing attacks. The datasets were generated from real-time GPS signals using a USRP device and simulated spoofed GPS signals by manipulating various features of authentic signals (e.g., Carrier-to-Noise Ratio, Time of the Week, etc.). The models were trained and tested using the dataset and the performance of the models was evaluated. The probability of detection and misdetection, the probability of false alarm, and the Accuracy were measured. XB outperformed other algorithms in terms of Accuracy and probability of detection with an Accuracy of 95.52% (i.e., compared to 95.23%, 94.07%, and 91.45% for LB, RNF, and GB, respectively). RNF models outperformed others in terms of the probability of misdetection and false alarms. XB is faster with 2 ms latency compared to RNF: 21.01 ms, GB: 6.99 ms, and LB: 8.99 ms. XB is also less memory-consuming with 2.63 MB compared to RNF: 1.6 MB, GB: 3.19 MB, and LB: 2.0 MB. RNF outperformed in terms of memory consumption, however, it has the longest latency. From a UAS perspective, XB was the best algorithm. Gasimova et al. [112] conducted a comparative study of three Ensemble based machine learning models. Namely, Bagging (Ba.), Boosting (Bo.), and Stacking (St.). The datasets were generated using the same approach in [111]. The performance of the models was evaluated in terms of Accuracy, probability of detection/misdetection, probability of false alarm, memory size, processing time, and prediction time per sample. The St. model outperformed others in terms of Accuracy with 95.43% (versus Ba.: 95.28%, Bo.: 94.61%), detection rate with 99.56% (versus Ba.: 95.28%, Bo.: 94.61%), FNR with 0.36% (versus Ba.: 0.64%, Bo: 2.95%), and FPR with 0.03% (versus Ba.: 1.07%, Bo.: 5.08%). However, the St. model showcased the worst performance in terms of memory consumption with 191.3 MB (versus Ba.: 190.4 MB, Bo.: 190.5 MB), processing time with 13.06s (versus Ba.: 0.74s , Bo.: 1.5s ), and prediction time with 0.24s (versus Ba.: 0.02s , Bo.: 0.01s ). Tala et al. [113] proposed two techniques (Metric Optimized Dynamic selector and Weighted Metric Optimized Dynamic selector) to select the classifier for detecting GPS Spoofing attacks in UAVs. The authors compared ten machine learning algorithms and measured their performance in terms of Accuracy, detection probability, false alarm probability, misdetection probability, and detection latency. Thirteen GPS signal features from real-time experiments were used as datasets in MATLAB [114]. The proposed model showed an Accuracy of 99.6%, a detection probability of 98.9%, a false alarm probability of 1.56%, a misdetection probability of 1.09%, and a detection latency of 1.24s . C. GPS Spoofing as Defense in UAVs Even though the technological innovation brought by UAVs is crucial, their problems are also critical. The illegal operations of UAVs make them difficult to manage. Anti-drone services that aim to disrupt or incapacitate non-cooperative drone operations are discussed in this section. That is, when GPS Spoofing is used as a tool to eliminate the security threats caused by UAVs. Shijith et al. [115] proposed GPS Spoofing as a defense mechanism to counterfeit the GPS receiver on a drone that tries to enter restricted areas. The unencrypted nature of GPS signals is exploited to take over the drone to the desired location. The used tools are SatGen [116] simulator (as a GPS signal generator) and an SDR tool, USRP N210 [78], to transmit the signals. Specifically, to generate National Marine Electronics Association (NMEA) file that contains the locational information. This info is then converted to a text containing the coordinates of all intermediate locations. Python scripts were used to generate signals based on the location information. This signal is then transferred to the USRP N210 tool. The spoofer uses a track break technique and operates from a remote location, where false signals are generated and sent to the target. The targeted drone will be then directed to the desired location in the spoofed signal. The authors recommended a real-time implementation of their proposed system. Gasper et al. [117], [118] recommended using GPS Spoofing vulnerability to divert unauthorized UAVs flying over unauthorized areas. The SDR, bladeGPS simulator, was used to generate fake GPS signals. The bladeGPS simulator uses NMEA messages that store GPS-related data. This field can be manipulated to make false signals. That is, to make the UAV recalculates its present position and moves out of the restricted area. The experiments were conducted in indoor and outdoor environments. The impact of spoofing in Smartphones, u-blox M8 GNSS evaluation kit, and u-blox MAX-7Q (GPS receiver used in most UAVs) were studied. The attacker is considered to operate from a remote location with a track breaking technique. Li et al. [119] designed a miniature GPS spoofer that is based on Digital Signal Processing (DSP), Field-Programmable Gate Array (FPGA), and RF. Several experiments were conducted to spoof DJI Phantom Pro 4 using the mini spoofer and the results were studied. The DSP and FPGA are the core signal processing modules and the RF module up-converts the IF signals to resemble GPS L1 RF signals. The experimental results were successful in misleading the target by controlling its position and velocity. Also, the UAVs were made to land in the spoofed position. The authors claim that their spoofer can be used to control and manage low-altitude UAVs. They also recommended further study of the effectiveness of the spoofing strategy with real-time measurements from UAV target monitoring systems. Similarly, Sheng et al. [120] proposed a Reinforcement based Learning method to control UAVs that enter unauthorized areas. The authors suggested the use of GPS Spoofing as one example to expel the UAVs from the target estate. Daojing et al. [121] proposed GNSS Spoofing as a method to counter non-cooperative UAVs that enter ‘No-Fly Zone’ areas. The UAVs that entered the restricted area need to be sensed first (using some techniques like RADAR) and then jammed. When they convert to auto-pilot mode, they are spoofed with counterfeit signals that redirect them to far locations. The authors recommended, as a future direction, spoofing a cluster of non-cooperative drones. Noh et al. [122] proposed hard spoofing techniques where the receiver is jammed with powerful signals for safe-hijacking the consumer drones. The proposed method aims to expel the drone safely from the protected area. The effect of GPS Spoofing and the behavior of the drones during and after the GPS failure and signal recovery were analyzed. Four safe-hijacking strategies have been introduced accordingly. Field studies were conducted using prominent consumer drones namely DJI (Phantom 3 and 4) drones, Parrot Bebop 2, and 3DR Solo. GSG-6 GNSS simulator [123] has been used in the experiments to generate spoofed signals and SITL (Software-in-the-Loop) [124] simulator was used to evaluate the results. Hosam et al. [125] proposed a technique to land the unauthorized drones by transmitting manipulated GPS signals using RF-SDR. The technique also determines the launch location of the drones. The drones are forced to operate in rescue mode by the manipulated GPS signals and return to the launch location. The iterative guesses are made on the latitude and longitude of the launch locations using the current coordinate of the drone. As the drones return back to the launch location at a constant speed, the x and y components of the drone’s speed become zero when it reaches the launch location. Experiments were conducted using HackRF SDR to launch spoofed GPS signals into Audrino chipset with GPS. Future works aims to minimize the number of guesses and evaluate the proposed algorithm on real drones. D. GPS Spoofing Impact and Vulnerability Vishal et al. [59] discussed the security vulnerabilities of drones such as the GPS Spoofing vulnerability of the DJI Phantom 4 Pro (P4P) drone. Afterwards, the architecture details of DJI P4P drones and the experimental studies (i.e., cracking the DJI SDK, reverse-engineering the firmware, and launching GPS Spoofing attacks) were discussed. The attacks were conducted using LabSat3 [126] GPS simulator. The u-blox NEO 8M GPS receiver of the DJI P4P defends jam-then-spoof attacks. However, the experiments were conducted using weak GPS signals. The active antenna RLACS198 of the LabSat Kit records the original GPS signals and the SatGen software was used to generate fake signals. Mendes et al. [60] studied the impact of GPS Spoofing attacks on Quadcopters. The authors observed that increasing the duration of tampering will also increase the deviation. However, after short time, the UAV does not show any deviation. The spoofer system is a hardware injection system in which the ArduCopter flight controller (used for processing and calculations purposes) is instrumented with a GPS Spoofing module. This module triggers the attack by tampering GPS signal after 45s of the starting time. The spoofer was onboard and used the track break technique. The experiments used SITL [124] simulator that simulates Quadcopter behavior (i.e., using a Navio2 control board developed by Emlid and Raspberry Pi with Raspbian OS). The deviation in UAVs’ positions with respect to time was taken as a performance metric. As a future direction, the authors plan to conduct real-world experiments with Quadcopter. SECTION VI. Results, Discussions, and Research Gaps In this section, our observations, in terms of attacker models, defense mechanisms, performance measures, datasets, various research gaps, and open issues are discussed. This section aims to address RQ2, RQ3, RQ4, RQ5, and RQ8 (raised in Section III-A). A. Attacker Models The study conducted in this paper has observed in Section V that the attacker uses different attacking strategies and tools that operate from different locations to conduct GPS Spoofing attacks. These attacker models are analyzed in this section, addressing RQ2 of Section III-A. Table 12 in the Appendix shows a detailed analysis of the attacker model used in the articles studied in this survey. It is found that the majority (75%) of spoofers operate from remote locations in the existing literature and adopted track break spoofing techniques. The spoofer system includes GPS simulators, repeater-based systems, and hardware injection methods. A percentage-wise analysis of the spoofer systems used in the proposed works is depicted in Fig. 14. It can be seen that the majority of the works (62%) relied on GPS simulators to generate spoofed signals. The low-cost and easy availability of the SDRs can be the main reason for this reliance. The repeaters, which capture the real signals, manipulate them, and then re-transmit them to the GPS receivers, are used by 23% of the works. Rest 15% used hardware injection systems, in which the spoofer device is embedded or installed on the GPS receiver. FIGURE 14. Comparative analysis of spoofer systems. Show All The GPS simulator-based systems rely mostly on open-source GPS simulators like GPS-SDR-SIM [54] to generate fake GPS signals. These signals are converted to RF signals with the help of SDRs like HackRF, BladeRF, USRP, etc. A percentage-wise analysis of various spoofing tools used in the proposed works to spoof GPS signals is shown in Fig. 15. As is clear, BladeRF and HackRF were relied on by the majority (31% each) of the works. USRP tools, namely, Ettus USRP (19%) and SatGen USRP (7%) were used by some (26%) of the works. Other tools used are LabSat3 and GSC-6 GNSS (both by 6%). FIGURE 15. Comparative analysis of spoofing tools in simulators. Show All To the best of our knowledge, and based on the covered articles, various research gaps exist related to attacker models, which are listed below: Other than mentioning the tools used for conducting the attack, most of the works failed to consider other attack parameters like the minimum distance from which the spoofer operates, the number of drones that can be victimized by a single malicious node, and the number of malicious nodes required to spoof the entire swarm area. These parameters can have a crucial impact on determining the attacker’s capability. The distance from which the spoofer operates can affect the number of drones being spoofed. Even though the attacker might be targeting to spoof the GPS location information of one drone, other drones in its vicinity might also get locked into these spoofed signals. This will affect the FANET system itself, which relies on the locational information that gets exchanged among the drones. Moreover, any detection system that relies on the locational information shared by other drones will also get deceived by the wrong locational information provided by neighboring drones, which are also victims of the spoofing attack. For example, the solutions proposed in [71] and [87] leverage the GPS locational information shared by the neighboring drones. So, if these neighboring drones also fall in the spoofed area, the detection system fails. Thus, the effect of spoofer-to-target distance on successful GPS Spoofing attack instigation needs to be investigated. The possibility that the entire swarm area to be spoofed and the minimum number of malicious nodes required for such spoofing also needs to be investigated. It is anticipated that defensive mechanisms might fail in such scenarios. We recommend that future research works should assess these factors also so that a robust defense mechanism can be designed. A comparative evaluation of various tools in Fig. 15 can also be conducted. To the best of our knowledge, these tools are used to launch the spoofing attack in single UAV scenarios. None of the existing works performed an attack on FANET with these tools. So, the effectiveness of these tools in launching attacks in the FANET scenario needs to be investigated and analyzed in order to understand the attackers capabilities; hence, the effectiveness of the proposed detection or defense solutions can be accurately evaluated. The power capabilities of the attacker have not been much discussed in the covered articles. As per the authors in [87], the spoofer tries to adjust its transmission power such that targets that are at a distance ‘D’ from the spoofer will receive a signal of power −154 dBW. If the power received at the target is lesser than −157 dBW, the detection systems detect the presence of an attack. More studies need to be conducted in this direction considering the different power capabilities of the attacker and their impacts on the effectiveness of the proposed detection or defense mechanisms. None of the papers covered in this study has investigated the number and type of tools that can be used to simultaneously launch the attack. Future studies should thus investigate the number of tools that might be required to spoof the FANET. The impact of the collaboration of multiple attackers that are equipped with different tools (like HackRF and BladeRF) to launch the attacks from various locations also needs to be studied. B. Objective(S) and Taxonomy of Proposed Mechanisms The study conducted in this paper has observed (as shown in Fig. 7 and detailed in Section V) that the proposed mechanisms can be classified into four main categories based on their objectives. Specifically, GPS Spoofing Attack Mechanisms, GPS Spoofing Defense Mechanisms, GPS Spoofing as-Defense Mechanisms, and GPS Spoofing Impact and vulnerability. Fig. 16 shows the statistical analysis of technical papers considered in this study. It can be seen that, out of 56 technical papers selected after various filtering, 37 papers addressed the detection, mitigation, and/or prevention of GPS Spoofing attacks in UAVs. Nine papers demonstrated how to instigate GPS Spoofing attacks in UAVs, eight papers proposed to use GPS Spoofing as a defense mechanism to deter malicious UAVs, and only two papers discussed the impacts and vulnerabilities of GPS Spoofing attacks in UAVs. FIGURE 16. GPS spoofing paper categories. Show All RQ3 in Section III-A is addressed by providing a taxonomy based on the approaches proposed to detect, mitigate and/or prevent GPS Spoofing attacks in UAVs. Following the basis or the technique leveraged to defend against GPS Spoofing attacks, the methodologies were categorized into onboard devices or sensors, signal processing, cryptographic, game theory, and machine learning mechanisms. A comparative analysis of the number of articles under various GPS Spoofing defense mechanisms is illustrated in Fig. 17. A major observation in Fig. 17 is the number of papers that aimed to prevent or mitigate the attack is lesser when compared to the total number of papers. Most of the papers aimed at the detection of the attack. Another observation is that 14 approaches leverage machine learning techniques and another 14 approaches leverage the onboard devices for the detection of GPS Spoofing attacks in UAVs. Signal processing approaches have been applied by five detection as well as mitigation approaches. Game theoretic solutions were proposed in three works to detect the attack and one work used it for mitigation. One approach used a cryptographic mechanism to detect and prevent the attack. A percentage-wise analysis of the articles according to their defense mechanisms is depicted in Fig. 18. Onboard devices and machine learning approaches have been adopted by 38% of the approaches, signal processing by 13%, and game theory by 8%. Cryptographic approaches were adopted by just 3% of the works. It is later seen that the approaches using cryptography were not implemented or not conceptually proved. FIGURE 17. Number of papers based on attack defense mechanism’s basis. Show All FIGURE 18. Percentage wise analysis of based on basis of defense. Show All A percentage-wise analysis of the type of publication is shown in Fig. 19. Out of the 70 articles (14 state-of-the-art papers and 56 technical papers) considered in this survey, 40% of the articles were conference papers, 46% were articles published in journals, and 14% were published in magazines or book chapters. This is an indication that the research works on GPS Spoofing attacks in UAVs are still maturing. FIGURE 19. Comparative analysis of publication types. Show All The number of papers that considered a FANET scenario, where multiple UAVs interact is also analyzed. Fig. 20 depicts that out of the 28 publications in conference proceedings, only three were addressing the GPS Spoofing attack problem in the FANET scenario. Also, among the 32 journal articles, only five dealt with FANET cases. None of the ten papers published in magazine/book chapters was on the FANET scenario. This again indicated that the area of research on GPS Spoofing attacks in FANET has obtained very little attention so far from the research community. FIGURE 20. Papers on FANET scenario. Show All To the best of our knowledge, and based on the covered articles, various research gaps exist related to the objectives of the proposed mechanisms, which are listed below: From Fig. 16, it is noticed that only two articles [59] and [60], have studied the vulnerability and impact of GPS Spoofing attacks in UAVs. Future research should analyze the vulnerability of various types of drones to GPS Spoofing attacks. The existing study was conducted for a particular type of drone only (i.e., DJI Phantom 4 Pro). The impact of GPS Spoofing attacks on FANETs with regard to different attack parameters such as the attack duration, and attack frequency should also be studied. Further to this, various position-based routing protocols such as Reactive-Greedy-Reactive protocol (RGR) [127] and Ad-Hoc Routing Protocol for Aeronautical MANETs (ARPAM) [128] rely on the knowledge of geographical positions that drones obtain through their GPS sensors. The geographical positions are leveraged in the data delivery to get the destination’s location as well in cases of network disconnections to avoid network partitioning. The geographic positions of UAVs in the network are also exploited to select the shortest path between the source UAV and the destination UAV. Hence, when this locational information is manipulated, the packet delivery rate and routing capabilities are severely affected. Thus, it is recommended to conduct simulation experiments or proof-of-concept implementations to investigate the impacts of GPS Spoofing attacks on these protocols. Future research works should try to propose defense mechanisms that can not only detect, but mitigate, and prevent the attack. It is recommended that more research work might be conducted to investigate the effectiveness of: Machine Learning-based or onboard devices-based defense mechanisms to mitigate or prevent the attacks as well rather than to detect the attack. Game-theoretic approaches as well as Cryptographic-based approaches in dealing with GPS Spoofing attacks. Hybrid-based approaches, which combine (i.e., employ) two or more of the above approaches together in dealing with GPS Spoofing attacks. For instance, signal processing approaches when combined with the onboard devices to defend against the attack since leveraging these methods don’t require any infrastructural modification and hence can be cost-effective. Less than 50% of papers were published in journals, indicating the immature state-of-the-art of GPS Spoofing research works in FANETs, more research needs to be conducted and papers to be published in reputed journals. As per this study, out of the 46% journal papers covered, only five articles were on FANETs. C. Performance Evaluation Methods In this section, various performance evaluation methods (i.e, simulation experiments and proof-of-concept implementations) of the papers covered in this study are analyzed, answering RQ4, which was formulated in Section III-A. Fig. 21 illustrates the analysis of the number of papers evaluated using proof-of-concept implementation. DJI Matrice 100, DJI Phantom Pro, 3DR Solo, PX4 Autopilot (Flight Controller), and Holybro S 500 are the major drones used in articles considered in this study to evaluate various experiments in a single UAV scenario. However, most of these drones are no longer in production as newer versions were released recently. For instance, DJI Matrice 100 and Phantom 4 Pro drones are no longer in production nowadays and are replaced by DJI Matrice 300 [129] and DJI Phantom 4 Pro V2.0 [130] drones, respectively. The 3DR Solo has been discontinued and is replaced with Aurelia X4 Standard, which is an improved quadcopter drone [131]. Moreover, none of the papers that addressed GPS Spoofing attacks in FANETs have provided a proof-of-concept implementation. Hence, the upgraded drones that are presently available in the market, which are able to communicate with each other by forming an Ad-Hoc network, need to be considered and involved by future research. A list of the upgraded drones and their communication capabilities is shown in Table 9. FIGURE 21. Papers evaluated using proof-of-concept implementation. Show All Some of the studied articles conducted simulation experiments. All the simulators that were used in the studied articles in this survey are analyzed in Fig. 22. Specifically, MATLAB [114], STIL (Software in The Loop) [124], RESCHU-SA [69], RTKLIB [96], Monte Carlo [72], Python, TensorFlow [98], Gazebo [109], NS3 [88], and OMNeT++ [80] were used by the articles for performance evaluations. Some articles used numerical simulations and some others, categorized under ‘Others’ in Fig. 22, have not stated the names of simulators used for performance evaluations. It is observed that most of the machine learning-based schemes were evaluated using MATLAB [114] followed by TensorFlow [98], as both tools support various built-in machine learning libraries. Other simulators are used by one or a maximum of two experiments. Another observation is that the cryptography-based schemes were not evaluated even using the simulation experiments. Furthermore, Monte Carlo [72], NS3, OMNeT++ [80], and MATLAB [114] were used in experiments involving FANETs. FIGURE 22. Papers evaluated using simulation experiments. Show All The mobility and propagation models of UAVs were neglected in most of the simulation experiments. A few articles have mentioned the random mobility model in the experimental details. This includes experiments conducted using OMNeT++ [80] and NS3 [88] simulators. One article that used NS3 [88] has mentioned the propagation model as ITU-R 1411 LOS (Line-of-sight). Thus, it is recommended to use either OMNeT++ [80] or NS3 [88] for future evaluations so that the mobility and propagation models can be easily employed and included in the evaluation. Also, this is an indication that RQ6 and RQ7 (Section III-A) have not been well addressed in the existing literature. Furthermore, since FANETs move in 3-D space, the mobility models that can simulate the 3-D movement of UAVs such as the Gauss Markov Model [136] can be used in future experiments. That is, the efficiency of the proposed approaches in terms of power requirements and/or storage and communication overhead when employing these mobility models must be considered. A few methods have used some real and synthetic datasets in the experiments. Specifically, SatUAV [137], the senseFly drone dataset [102], UAV attack dataset (IEEE Dataports) [105], SatGrid [86], and OpenSky Network [82]. SatUAV Dataset is a synthetic dataset generated using a collection of images captured by a DJI Phantom 4 drone (with camera DJI FC631 and pixel resolution of 5472×3078 ), which includes 967 SatUAV image pairs combined with the SenseFly dataset. SenseFly website has 362 photos available on the Internet [102] taken by eBee drones (with a camera resolution of 4608×3456 and 5472×3648 pixel resolution). It includes 160 photos (using a Canon IXUS125HS camera) of the Swiss village of Merlischachen at a flight height of 162 m (531.4 ft), 40 photos (using a Parrot Sequoia camera) outskirts of Renens, a municipality in Switzerland at a flight height of 100 m (328.1 ft), 113 images (using SenseFly S.O.D.A. camera) of Lausanne, Switzerland at a height of 100 m (328.1 ft), and 49 images (using Canon IXUS 125 HS) of Paris Le Bourget Airport at the height of 120 m (393.7 ft). UAV attack dataset (IEEE Dataports) [105] are flight log files saved by autopilot in ULog format having header (the file magic number, log version, and timestamp), definition (logged attributes and values), and data sections (contains informational, debug warning, and emergency information sent from the autopilot to the GCS) as the contents. It contains flight logs during both benign (i.e., normal) and attack (i.e., spoofed) scenarios. SatGrid dataset [86] includes SatGrid: G22 (Genuine GPS dataset) and SatGrid: S7 (spoofed dataset). These are real-time traces of GPS signals collected from different geo-locations, time, and environmental conditions. OpenSky [82] provides an Air Traffic Surveillance (ATS) dataset collected with the help of over 3000 sensors around the world. Table 10 presents a brief overview of these datasets. To the best of our knowledge, and based on the covered articles, various research gaps exist in terms of performance evaluation methods, which are listed below: Some articles covered in this study have not clarified the method used for their performance evaluation experiments, which we stated as ‘Others’ in Fig. 21 and 22. Future research works should clearly mention the names of drones and GPS simulators used in proof-of-concept evaluations. Furthermore, the simulator, the mobility model, and the propagation model used in various simulation experiments. Simulated experiments generally don’t reflect real-world scenarios. For example, environmental factors like wind, light, and fog have a crucial impact on the movement and performance of drones, might not be addressed by simulators. However, the majority of the experiments in the covered articles in this survey are evaluated using simulated experiments. Thus, we recommend that future research works rely on real-world experiments or proof-of-concept implementations. D. Performance Metrics In this section, various metrics that were used in the performance evaluation experiments, discussed in Section VI-C, are analyzed to answer RQ5 (raised in Section III-A). Specifically, FPR, TPR, FNR, Detection Latency (Delay), Position Drift, Precision, F1-Score, Accuracy, RMSE, UAV Capture Probability, Power Consumption, and Memory Overhead. Fig. 23 illustrates the number of articles that used these metrics in their evaluations. As shown in this figure, TPR, Accuracy, Detection Latency, and FPR are most commonly used in the articles covered in this study. To the best of our knowledge, and based on the covered articles, various research gaps exist in terms of performance metrics, which are listed below: The FPR, which is a major factor that hinders the service delivery to legitimate users of any system, has not been extensively evaluated in the existing works. Indeed, the detection of the attack is the major goal of the proposed approaches, however, higher false alarms can unintentionally lead to Denial-of-Service attack as it might prohibit legitimate drones or disable their services. Detection time (latency) was not evaluated in some articles that were covered in this study. Also, the articles that reported the detection latency haven’t studied the impact of varying different attack parameters on it such as the number of victim drones and the number of malicious nodes that launch the attack (discussed in Section VI-A). The detection latency is a crucial measure that reflects the time taken by the proposed algorithms to detect the attack after it is launched by the malicious attackers. This metric must be evaluated by future research works as longer detection time might cause the UAVs to be hijacked or collide and as a result causes a mission failure (i.e., long detection time allows the malicious attackers to cause more damage into the system before the detection approach issue warnings/alarms). Only few articles of the existing works evaluated the power/energy consumption and memory of the proposed algorithms. Since drones are devices with constraints on the resources such as low battery power, less memory storage, and limited processing capabilities, these resource constraints factors should be considered when designing the defensive schemes. Other metrics such as the victim-to-attacker ratio (i.e., the number of drones that can be spoofed by malicious drones), communication overhead (i.e., the number and size of messages that are used by the proposed approaches), Big O notation (i.e., that represents the worst-case complexity of the proposed algorithms) also need to be considered and evaluated by future research works. FIGURE 23. Papers evaluated using performance metrics. Show All E. Comparative Analysis A detailed comparative analysis of the articles covered in this study that proposed solutions to defend against GPS Spoofing attacks in UAV environments is depicted in Table 14 in the Appendix. The performance evaluations of the proposed systems were compared in terms of the performance metrics used by the majority of the articles, which were also observed to be crucial in determining the performance of any detection mechanism. Specifically, TPR, FPR, Accuracy, and Latency. The prerequisites of the aforementioned articles were also analyzed in terms of any additional requirements on hardware devices or sensors, storage, battery, and any other specific requirements such as datasets, as shown in Table 14. It can be seen that the defensive approaches that are based on Machine Learning algorithms outperformed other detection mechanisms in terms of their performance. However, it is well known that Machine Learning algorithms require a high amount of computation and processing power, which in turn demands battery and storage. Apart from these, the requirement for a sufficient amount of diverse and realistic training datasets also hinders the acceptance of machine learning algorithms in securing resource-constrained drone networks. Signal processing-based methods such as [87] and [83] exhibited detection rates of 99.98% and 95% followed by methods that leverage onboard sensors [71], which exhibited 98.6% [67], [70]. In terms of Accuracy, signal processing-based methods [85], [87] also show relatively high results of 98.4% and 96.2%, respectively. The methods that rely on onboard sensors such as [66] and [76] showcased greater Accuracy of 97% and 90%, respectively. The methods that rely on signal processing and onboard sensors were efficient in terms of detection time (latency) as well, which was less than two seconds in [81]. However, the main problems with methods that used onboard cameras are the additional storage, battery, and weight requirements. Furthermore, these methods require favorable atmospheric conditions such as ambient light, fog, wind, and rain free environments. The main limitation of the signal processing method, which we suggest to be evaluated and mitigated in future works, is the communication overhead with the ground (GCS, Radars, etc.) [81]. TABLE 14 Comparative Analysis of Performance Evaluations & Additional Requirements for Proposed Solutions. (NA: Not Available) F. Summary To summarize, the following were the research gaps identified as a result of this study: The minimum spoofer-to-target distance, the count of victims as well as the number of malicious nodes that are required to launch the attack were not well addressed in the existing works. These parameters should be taken into account when designing future research solutions. Defense approaches to mitigate and prevent GPS Spoofing attacks in FANETs needs more attention. So far, the approaches to detect the attacks have been the main focus and proposed most. From Fig. 17, it can be observed that machine learning and onboard devices were mostly relied on by the existing approaches to address the problem of GPS Spoofing attacks in UAVs, which is then followed by signal processing approaches. Since the machine-learning approaches impose high computational overhead on drones, they are not desirable for real-time applications; where FANET cannot invest considerable resources for complex computations due to its limited computational power and battery constraints. Thus, it is recommended that future research should focus on onboard devices and signal processing approaches to address the problem of GPS Spoofing attacks in FANETs without imposing any additional overhead. Leveraging onboard devices is promising as it does not require any infrastructural changes in the drones. Researchers should consider publishing more comprehensive and thorough articles in reputed journals, that address the threat of GPS Spoofing in FANETs. From Fig. 20, it is evident that the research works, which considered a FANET environment where multiple UAVs collaborate and exchange information, is not well addressed. Thus, future research works should focus on addressing GPS Spoofing attacks in the FANET environment by leveraging the unique characteristics of FANET such as high mobility, limited battery life, frequent topology change, and the information exchanged among the drones. The latest drones that are capable of forming Ad-Hoc wireless networks (the list is shown in Table 9) need to be investigated to conduct proof-of-concept implementation of future solutions. Existing literature lacks such works that used proof-of-concept evaluation in the FANET scenario. The defense mechanisms against GPS Spoofing attacks on single drones only are evaluated using proof-of-concept implementation. Some articles have conducted simulation experiments, however, their simulation experimental setup don’t reflect the real-world environment where the drones operate. The names and specs of the drones and/or simulators used in the proof-of-concept implementation or simulation experiments should be clearly identified and justified. The mobility models and communication propagation models that are followed or used by drones are not well considered in the proposed solutions. The simulation platforms that can employ the mobility and propagation models of drones in FANETs need to be investigated. From Fig. 23, TPR, FPR, detection latency, and Accuracy are most widely used in the experiments of the proposed solutions. Apart from these, considering the unique characteristics of FANET, future works should report as many metrics as possible. For example, the ratio of the number of victimized UAVs to the total number of UAVs can be one metric to be considered. SECTION VII. Conclusion In this paper, a systematic literature survey of the articles that addressed GPS Spoofing attacks in FANETs has been conducted. This survey aims to enhance the understanding of the existing works and propose future scopes in securing FANETs against GPS Spoofing attacks. The GPS Spoofing attacks in FANETs have been viewed from four perspectives, namely, GPS Spoofing techniques, GPS Spoofing defense mechanisms, GPS Spoofing as-defense mechanisms, and GPS Spoofing Impact and Vulnerability. A taxonomy of the mechanisms that addressed the threat of GPS Spoofing attacks in the existing literature has been portrayed. Based on the adopted survey methodology, eight research questions were formulated. Moreover, 37 research articles on detection, mitigation, and prevention of GPS Spoofing attacks in UAVs that were published between 2017 and 2022 were extracted for deep investigation. Specifically, in terms of the basis of the defense approach, the attacker models, and the performance evaluation mechanisms and metrics. The research gaps in the proposed methods were identified and future directions for the researchers have been recommended. For future works, we aim to address some of the research gap(s) identified in this study and propose robust solutions to defend against the threat of GPS Spoofing attacks in FANETs. Appendix: Detailed Tables for Articles See Tables 11–14. Authors Figures References Citations Keywords Metrics More Like This Performance of Real-Time Kinematic Global Positioning System and Automatic Level Surveying for Height Determination - A Comparison 2009 International Conference on Signal Acquisition and Processing Published: 2009 Miniature Interferometer Terminals for Earth Surveying: Ambiguity And Multipath with Global Positioning System IEEE Transactions on Geoscience and Remote Sensing Published: 1981 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.

Paper 2:
- APA Citation: Conde, G., Guzmán, S. M., & Athelly, A. (2024). Adaptive and predictive decision support system for irrigation scheduling: An approach integrating humans in the control loop. Computers and Electronics in Agriculture, 217, 108640.
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: In this paper, we propose an adaptive and predictive irrigation management decision support system by formulating a feedback plus feedforward algorithm that uses modeling, estimation, prediction, and control strategies. The major feature of this DSS is the consideration of human intervention in the control loop.
  Extract 2: Our results show that (i) the proposed model and estimation stage offer an accurate description of the soil moisture dynamics, reaching correlation coefficients and R-squared values greater than 0.92 and 0.84 during all the evaluations, (ii) the algorithm can consistently regulate soil moisture, ensuring it remains at the desired levels reducing the risks associated with leaching and runoff, and (iii) water savings can increase by 30%.
  Limitations: None
  Relevance Evaluation: Highly relevant - The paper focuses on the specific point of integrating IoT sensor data and cloud-based data sources through data fusion techniques. It highlights the importance of interpretability and explainability in ML models for effective irrigation management.
  Relevance Score: 1.0
  Inline Citation: (Conde, Guzmán, & Athelly, 2024)
  Explanation: The primary goal of this work is the development of an end-to-end automated irrigation management system. The system incorporates machine learning (ML) techniques to assist in irrigation scheduling. The proposed system consists of several components like data collection, data transmission, data processing, analysis, decision-making, and automated actions.

The key to the system is continuous data collection from various sources, including soil moisture probes, weather stations, and cloud-based data sources like weather forecasts and satellite imagery. Data fusion techniques like Kalman filtering are employed to enhance data accuracy and resolution.

The system utilizes ML algorithms to generate insights. The insights are then utilized to regulate irrigation systems autonomously without any human intervention. Consequently, the system ensures timely and precise irrigation based on real-time data and forecasts.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Methods 3. Experimental verification 4. Results and discussion 5. Conclusions CRediT authorship contribution statement Declaration of competing interest Acknowledgments Appendix. Data availability References Show full outline Figures (14) Show 8 more figures Computers and Electronics in Agriculture Volume 217, February 2024, 108640 Original papers Adaptive and predictive decision support system for irrigation scheduling: An approach integrating humans in the control loop Author links open overlay panel Gregory Conde, Sandra M. Guzmán, Akshara Athelly Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2024.108640 Get rights and content Highlights • Novel DSS for irrigation control integrating human intervention into the loop. • The DSS has the potential of 30% water savings in seepage irrigated crops. • The algorithm uses real-time data and forecasts for precise irrigation scheduling. • The DSS uses a control-oriented model to estimate soil moisture with high confidence. • DSS maintains optimal soil moisture, reducing leaching and runoff risks. Abstract Reported technological tools for irrigation scheduling lack the integration of real-time crop measurements, weather forecasting, and the limitations and variabilities introduced by human operation. Moreover, most of these tools do not provide practical irrigation recommendations, limiting their adoption and benefits in enhancing agricultural efficiency and reducing environmental impact. To address these challenges, we propose an adaptive and predictive irrigation management decision support system by formulating a feedback plus feedforward algorithm that uses modeling, estimation, prediction, and control strategies. The major feature of this DSS is the consideration of human intervention in the control loop. The DSS integrates field data, including soil moisture, rain, temperature, and irrigation, in addition to weather forecasting. It gives irrigation managers precise and practical instructions on how much to irrigate based on preferences for irrigation events. The DSS adapts in real-time to provide irrigation volume recommendations that ensure optimal soil moisture levels are maintained. Our approach includes the incorporation of a simplified control-oriented model (COM) to characterize the soil moisture dynamics, a data processing stage that makes the measured data compatible with the COM, a parameter estimation stage that guarantees an optimal adjustment of the COM parameters, a control stage that uses the parametrized COM, measured information from the crop, and weather forecasts to obtain optimal irrigation volume recommendation. We evaluated our DSS using data from a commercial sweetcorn field in South Florida, where seepage irrigation is used. Our findings show that (i) the proposed model and estimation stage offer an accurate description of the soil moisture dynamics, reaching correlation coefficients and R-squared values greater than 0.92 and 0.84 during all the evaluations, (ii) the algorithm can consistently regulate soil moisture, ensuring it remains at the desired levels reducing the risks associated with leaching and runoff, and iii) water savings can increase by 30%. Therefore, our DSS has the potential to become a standardized platform for providing optimal and practical irrigation recommendations to irrigation managers. Previous article in issue Next article in issue Keywords Smart irrigationHuman in the loopAdaptive irrigation controlPredictive water managementPrecision agricultureDecision support system (DSS)Irrigation schedulingSoil moisture forecastReal-time irrigationIrrigation controlPrecision irrigation 1. Introduction Agriculture is the base of our socio-economical model, and its development plays an essential role in the welfare of nations (Gollin et al., 2002). However, agriculture has a high environmental impact and can be considered one of the most important contributors to global environmental degradation (Mueller et al., 2012). Furthermore, as the global population continues to grow, there is an urgent need to increase food production. This already complex challenge is further intensified by accelerated environmental changes, characterized by significant shifts in precipitation patterns and an increase in extreme weather events such as heavy rains, heatwaves, and droughts (Bisbis et al., 2018). Consequently, it is critical to develop strategies to enhance agricultural production while mitigating its environmental impact. In this context, improvements in irrigation scheduling play an important role, not only because agriculture is the consumer of almost 70% of freshwater resources (Jalilvand et al., 2019), but also because appropriate irrigation scheduling can help to increase the yield production and minimize the leaching of nutrients, pesticides, and heavy metal to freshwater sources (Khatri and Tyagi, 2015). Incorporating technological tools could be a viable solution to improve irrigation scheduling, where the aim is to make irrigation decisions based on the needs of the crops, establishing when the crops need water and how much water needs to be applied. Numerous studies have centered on developing tools that accurately detect plant water stress conditions to determine optimal irrigation. For instance, Torres et al. (2019) employed near-infrared spectroscopy to measure in-situ leaf relative water content. In parallel, other approaches assess plant water requirements using soil moisture sensors (SMS) positioned in the target zone. The use of SMS is the most adopted technology for irrigation scheduling in the USA (USDA, 2018, Taghvaeian et al., 2020), and in many scenarios, a common response to identified irrigation needs is implementing feedback threshold control by using SMS (Dukes et al., 2009, Zotarelli et al., 2010, Zhang et al., 2017, Li et al., 2018, Cayuela et al., 2022, Simionesei et al., 2020), or using fuzzy-based decision systems (Culman et al., 2019, Stone et al., 2020). Both strategies define levels based on measured stress conditions or soil moisture. However, the methodology for setting these threshold levels is not versatile enough to accommodate the diversity of crops, soils, and environmental conditions. Furthermore, these thresholds often remain static, not accounting for the evolving needs of crops influenced by environmental factors, intrinsic crop properties, and growth stages. Accurately determining the volume of water needed for irrigation entails a comprehensive understanding of plant water consumption concerning environmental variables, specific crop attributes, and growth stages (Lopez-Jimenez et al., 2022). Many decision support systems employ crop measurements coupled with AI to estimate and compensate for water losses from the evapotranspiration process (Katimbo et al., 2023). The works developed by Gu et al., 2017, Li et al., 2019 and Chen et al. (2019) aim to bolster decision-support systems for agricultural irrigation by incorporating analytical models such as the Root Zone Water Quality Model (RZWQM). This comprehensive model features modules covering soil water balance, nutrient dynamics, equilibrium soil chemistry, potential evapotranspiration, surface energy balance, heat transfer, pesticide processes, and plant growth, relying on the Decision Support System for Agrotechnology Transfer (DSSAT). RZWQM has been widely utilized to simulate the impacts of agricultural management strategies on crop yields and soil and water quality (Ma et al., 2012). Gu et al., 2017, Li et al., 2019 and Chen et al. (2019) use RZWQM for computing irrigation scheduling based on measurable crop conditions, predefined threshold values, and numerical solutions generated by the model. Nonetheless, employing RZWQM to compute irrigation scheduling in a feedback scheme presents significant challenges due to its inherent complexity and rigidity. The model’s detailed structure complicates the straightforward analyses and inclusion of user-specified requirements and the adaptation to overcome discrepancies between the crop and the model. Furthermore, RZWQM is restricted to a predefined set of cultivars, limiting its versatility to diverse agricultural settings. The complexity also imposes computational constraints, making real-time feedback control based on the current soil moisture state and crop stages challenging. These limitations underscore the necessity for more versatile, adaptive, and computationally efficient irrigation scheduling strategies. To this end, some studies have explored advanced control theory as a systematic approach to the irrigation problem (Saleem et al., 2013, Delgoda et al., 2016, Shang et al., 2020). As mentioned by Romero et al. (2012) and Ding et al. (2018), using advanced control strategies in agriculture has a high potential to increase efficiency. However, tangible applications are sparse. Much of the documented research revolves around simulations (Romero et al., 2012). While comprehensive on paper, some models oversimplify real-world scenarios by presupposing fully instrumented crops. Contrarily, in practical settings, agricultural systems often struggle with control limitations. In many irrigation systems, manual intervention dominates, where operators activate or deactivate pumps, manage ditches, and manipulate valves or gates to regulate irrigation. In summary, we evidence a lack of irrigation strategies that balance efficiency, practicality, and real crop management considerations. Many current methods rely heavily on static thresholds or intricate models, which often do not adapt dynamically to changing environmental conditions, diverse crop needs, irrigation management practices, and different growth stages. Moreover, while advanced control theory holds promise, there is an absence of advanced control strategies that account for real-world complexities and manual human intervention in the operation of irrigation systems, where the timely human response to crop needs, actuation precision, and operational reliability are important elements that influence the controlled system. Against this backdrop, the primary objective of this research is to use control theory to enhance the efficiency of irrigation systems, particularly in real agricultural scenarios that are often human-operated. We propose developing a novel control-based algorithm for a DSS for irrigation scheduling capable of computing practical irrigation instructions based on field measurements and weather forecasting, which is designed to be adaptable to the grower’s or irrigation manager’s operational limitations, preferences, and experience and must compensate for uncertainties introduced by human intervention. We have formulated our DSS around a simplified proposed control-oriented model (COM), which describes the soil moisture dynamics; a data processing stage, which makes the measured data compatible with the COM; a parameter estimation stage, which guarantees an optimal adjustment of the COM parameters based on measured information from the crop; and a control stage, which uses the parametrized COM, measured information from the crop, and information from weather forecasting to compute the appropriate irrigation instructions that maintain the soil moisture close to a desired level. We evaluated our algorithm using collected data from a seepage-irrigated commercial sweetcorn field in South Florida. Our evaluations covered each component of our system, from model validation to overall system performance. As a principal outcome, the proposed algorithm presents the potential to save 30% of water in this type of irrigation system. This water-saving is facilitated through effective and achievable computed irrigation scheduling that maintains soil moisture within a targeted range. Such control preserves optimal growing conditions and minimizes environmental risks by preventing runoff, percolation, and the leaching of hazardous agricultural chemicals into the surrounding ecosystem. The remainder of the paper is organized as follows. Section 2 starts with an overview of soil moisture and irrigation scheduling, establishes the problem of formulating a control-oriented DSS for irrigation scheduling, and offers a detailed description of the proposed DSS algorithm. Section 3 describes the process following to validate the proposed algorithm. In Section 4, the results of the validation are presented and discussed. Finally, in Section 5, some conclusions are drawn. 2. Methods 2.1. Process description and problem formulation The relationship between irrigation, soil, plants, and the environment constitutes a complex system that requires practical concepts and analogies to formulate optimal irrigation strategies. As delineated in Eisenhauer et al. (2021), soil can be conceptualized as a reservoir, with different levels representing the amount of water available for plant uptake. We adopt this conceptual framework to simplify a complex problem that involves agriculture, control theory, and human interaction and to formulate the control problem on a DSS for irrigation management. Within this context, we identify key input and output variables, delineate desired conditions or set points, and specify agricultural constraints and human limitations. Download : Download high-res image (512KB) Download : Download full-size image Fig. 1. Schematic illustration of soil moisture states significant for plant-water relations and irrigation control based on Eisenhauer et al. (2021). The Permanent Wilting Point (PWP) delineates the lower threshold of soil water content at which plants cannot recover from water stress, marking the limiting boundary for plant survivability. The Maximum Allowable Depletion Point (MADP) is a critical reference, as soil moisture levels below this point result in sub-optimal physiological responses in plants. The soil moisture range between MADP and Field Capacity (FC) is optimal for plant growth, balancing water availability and stress prevention. Surpassing FC leads to inefficient water use, soil structural degradation, anaerobic root conditions, nutrient leaching, and the potential for surface water pollution. Beyond the Saturation Point (SP), the soil reaches its hydraulic limit, becoming incapable of retaining additional moisture. Fig. 1 illustrates this analogy: the base level, or the Permanent Wilting Point (PWP), indicates that below this threshold level, plants cannot extract water from the soil, leading to irreversible wilting. The next critical point is the Maximum Allowable Depletion Point (MADP); if the soil moisture drops below this level, the plants undergo water stress, potentially reducing yield. Consequently, MADP often serves as a guideline for irrigation decisions as the lower limit. However, its precise value, i.e., the percentage of MADP as the lower limit, can vary based on the crop, its growth stage, and prevailing climatic conditions. For instance, Bayabil et al. (2023) demonstrated that using only 75% of the expected MADP saved 25% of water consumption, with no reduction in sweet corn yield. Similarly, strategic deficit irrigation during certain growth stages of wine grapes enhances fruit quality for winemaking (Kang et al., 2023). From a control systems perspective, the Maximum Allowable Depletion Point (MADP) is a critical set-point or lower-bound constraint that must be maintained. Failure to uphold soil moisture levels at or above this threshold can lead to suboptimal plant physiological responses and yield reduction. The Field Capacity (FC) is defined as the soil water content threshold beyond which the gravitational drainage is negligible and is considered the upper limit. Below FC, the capillary actions keep the water stored in the soil pores. Irrigating until reaching FC and avoiding exceeding field capacity prevents the leaching of nutrients and pesticides applied to the crops. The saturation point (SP) is attained when the soil can no longer retain water, leading to runoff on the surface, which poses significant environmental concerns. Soil texture significantly influences key hydraulic characteristics such as the PWP, FC, and SP. Saxton and Rawls (2006) provide detailed hydraulic characteristics across various soil textures, as illustrated in Fig. 2. From this figure, it becomes evident that managing irrigation in sandy soil is notably challenging. A simple 5% fluctuation in water content in such soil can either lead to plant wilting or result in water wastage. In contrast, silt soils offer better flexibility: water content can vary by as much as 24% without triggering any adverse agricultural or ecological consequences. Therefore, the soil’s proportion of sand, silt, and clay plays an important role in the control problem definition and for specific irrigation decisions. Conceptually, for control purposes, soil can be viewed as a storage unit, where the area depends on the soil texture, the control input is irrigation, and the control objective is maintaining the volumetric water content to a desired level. However, additional considerations must also be included in the case of a DSS for irrigation control. Download : Download high-res image (256KB) Download : Download full-size image Fig. 2. Volumetric water content at the Permanent Wilting Point (PWP), Field Capacity (FC), and Saturation Point (SP) for different soil texture classes. Moreover, we are illustrating a Maximum Allowable Depletion Point (MADP) of 50% of the available water for each soil class. Points over each bar denote the specific values. This figure is based on the hydraulic characteristics reported by Saxton and Rawls (2006). 2.1.1. Control challenges on a decision support system for irrigation scheduling A DSS for irrigation scheduling is particularly useful in farm systems with no automatic control elements, where the grower or irrigation manager carries out irrigation actions. In our proposed DSS, the control problem is to use available information from crops and weather forecasting to compute irrigation instructions that help the user minimize the error between desired and measured soil moisture. Below, we discuss some considerations that must be addressed. Timely Human Response: The grower or irrigation manager cannot execute irrigation instructions quickly and suddenly. For that, even if sensors and computational capabilities can offer periodic information with sampling periods of minutes or seconds, this information will be unhelpful and might overwhelm or confuse the operator. Moreover, if an irrigation instruction suddenly appears when the operator is unavailable to make an irrigation action, it might not generate the expected result. Actuation Precision: Many conventional irrigation systems rely on actuators that operate more as binary switches than precision instruments. In agriculture, it is common to find devices such as on–off pumps, gates, weirs, and valves, which are unsuited for precise operation. Hence, recommendations should be straightforward and actionable, such as suggesting irrigation during a time rather than maintaining a specific flow rate. Human Reliability: Even with precise recommendations from the DSS, human behavior introduces variability. External influences can alter the final action taken, introducing a layer of uncertainty. Considered Measurable Variables: In most agricultural practices, rain ( ), irrigation ( ), and temperature ( ) are the main measurable variables affecting root zone soil moisture ( ). While capillary effects from the deep soil also influence root zone soil moisture, quantifying these effects necessitates more elaborated measurement techniques compared to the direct measurement of the aforementioned variables. Integration of Weather Forecasts: Meteorological advancements have made weather predictions increasingly accurate. Governments worldwide are making concerted efforts to provide weather forecasts as part of impact-based decision-support services. These forecasts, especially regarding expected rainfall and temperature, are crucial for making informed irrigation decisions, ensuring optimal water use, and supporting crop health. 2.2. Proposed approach We address the control challenges by proposing a DSS presented in Fig. 3, which integrates measured information from the crop and weather forecasting to compute irrigation instructions. The DSS integrates control theory and accommodates timely human response by working periodically and allowing the grower to determine the irrigation period1 for these executions. Furthermore, the DSS provides practical and realizable irrigation instructions, given in units of volume per irrigation period or irrigation time per irrigation period. For instance, if the grower selects a two-day irrigation period, the DSS will calculate the necessary volume of water or irrigation time that must be applied for each two-day interval. Download : Download high-res image (658KB) Download : Download full-size image Fig. 3. Graphical description of the proposed Decision Support System (DSS) for irrigation scheduling. The description illustrates the measured variables, where represents the instant time when the data is obtained, indicates the temperature, rain, soil moisture, and irrigation. The DSS is formulated with four main components: (i) the control-oriented model (COM), used as a base of the control algorithm; (ii) the data processing stage for aligning multi-temporal sensor data with algorithmic components; (iii) a parameter estimation stage for updating model parameters ( ); and (iv) a control algorithm that utilizes the COM, estimated parameters, processed measurements, and weather forecasts to calculate irrigation instructions ( ). The DSS uses measured variables from the crop, where rain and temperature can be obtained from a weather station, and volumetric water content can be obtained from soil moisture sensors. To address the system’s robustness against human variability in irrigation execution, our DSS additionally considers measuring this execution, i.e., obtaining measurements of irrigation time per irrigation period or volume of water per irrigation period. This measurement can be obtained from flowmeters or sensors for flow detection. The proposed approach (Fig. 3) is supported by (i) a COM of the SM, (ii) a data processing stage, (iii) a parameter estimation stage, and (iv) a control algorithm. In this approach, the COM serves as a parametrizable model that characterizes soil moisture as a function of processed measured variables and parameters to be estimated. At each irrigation period, the estimation stage calculates and updates the parameters. Then, the control stage uses the COM, the estimated parameters, soil moisture measurements, and weather forecasting data to determine the appropriate irrigation action that maintains the soil moisture at the desired value. A detailed breakdown of each component of the DSS is provided below. 2.2.1. Proposed control-oriented model for soil moisture The most important element of the proposed strategy is the COM. In agriculture, traditional models often focus on capturing the complexity of various biophysical processes. Although accurate, these models are often computationally expensive and not straightforwardly applicable for control design. We have derived the COM from a simplified water balance, as Fig. 4 describes. This model considers the soil a storage unit, where a linear combination of adaptable parameters and measured variables performs a water balance with inputs, including rain, irrigation, and upward capillarity. On the other hand, outputs include evapotranspiration, deep percolation, and runoff. The choice of a simplified model inevitably raises concerns about the sacrifice of modeling accuracy. However, in our DSS algorithm, this drawback is mitigated by continual parameter estimation based on real-time data and by incorporating feedback in the control equation. Our COM is formulated based on three assumptions: Download : Download high-res image (550KB) Download : Download full-size image Fig. 4. Water balance used to describe the soil moisture dynamics, where , and are outputs associated with evapotranspiration, and deep percolation; , , and are inputs associated to rain, irrigation, and capillary rise. Assumption 1 Model Sampling Period The COM is formulated with a fixed time step, denoted by , corresponding to the irrigation period. This fixed period allows for the discretization of soil moisture dynamics, indexed by the variable . Our DSS algorithm is based on the COM, which is discrete and will describe the soil moisture dynamics according to the irrigation period ( ). The grower or irrigation manager can configure to suit their operational preferences. Consequently, the COM and, by extension, the DSS algorithm are adaptable to those preferences. For instance, if a two-day irrigation period is selected, the COM will effectively model soil moisture dynamics under this discrete time interval. It is highlighted that, in practice, sensors often provide data at multiple sampling frequencies. We have designed specific data management techniques to reconcile this multiplicity of data with the user-defined irrigation period . These techniques are detailed in Section 2.2.2. Assumption 2 Soil Moisture Average During an appropriate irrigation period, it is reasonable to presume that the available water for the plants within the root zone is closely around an average soil moisture value, denoted as . This assumption enables us to formulate the control objective as maintaining this average soil moisture close to a desired level . This assumption simplifies both the model and the DSS algorithm. However, we clarify that choosing a lengthy irrigation period might be comfortable for the irrigation manager but can be risky for the plant’s health. Conversely, opting for shorter irrigation periods can mitigate potential water deficit issues during this period, but at the expense of demand for more managerial time. The optimal irrigation period depends on the crop type, environmental conditions, and highly on soil type. For instance, sandy soils, characterized by low water retention capacities, necessitate shorter irrigation periods than silt soils, which can retain almost six times more water (see Fig. 2). It is pertinent to note that the temporal resolution of the COM is directly correlated with the chosen irrigation period . A shorter irrigation period effectively enhances the temporal resolution, allowing the model to capture more rapid fluctuations in soil moisture and other variables. However, this comes at the expense of increased computational and managerial demands. The adaptability in selecting allows for a trade-off between temporal resolution and operational convenience. Assumption 3 Linear Relation Soil moisture operates as a causal system. The future average soil moisture is influenced by its prior water content and the inputs and outputs during this irrigation period. We are considering average soil moisture variation between successive irrigation periods, which is represented as , as a linear relation of the water balance during such irrigation period. We are formulating that in the upcoming irrigation period, the soil moisture average will depend on the actual soil moisture average and a linear combination between parameters (rates of change) and accumulated amounts of water inputs and outputs during the current irrigation period. In this form, we denote water input as the accumulated amount of rain during the irrigation period and the parameter as the rate of change between and . Note that the rain units are commonly expressed in units of the water depth accumulated in the area under study. Since is a summation of measurements, it retains the same depth units, resulting in being dimensioned as soil moisture per unit of depth. Similarly, we denote the input as the accumulated amount of irrigation during the irrigation period and the parameter as the rate of change between and . Irrigation can be measured in units of depth, volume, or, in our case, for simplifying sensor instrumentation and data acquisition, irrigation time. reflects the total time that the crop is irrigated during the irrigation period, resulting in being dimensioned as soil moisture per unit of time. To streamline the electronic instrumentation, we are not considering measured variables corresponding to the capillary rise input, as this capillary rise comes from the water table. Instead, the input associated with capillary rise will be treated as an unknown parameter, denoted by . As discussed in the process description (Section 2.1), the infiltration and runoff are directly related to the soil moisture. For that, we are associating this output to the combination between the soil moisture average and the parameter , which is adimensional and represents the rate of change between and . The most adopted method to evaluate evapotranspiration is the FAO-56. This method requires the measurement of multiple environmental variables beyond the scope of our DSS, such as net radiation, soil heat flux, wind speed, saturation vapor pressure, and actual vapor pressure. Inspired by simpler models such as the Hargreaves Method (Gao et al., 2017), we overcome this issue by relating evapotranspiration directly to the temperature average ( ) via the estimated parameter , which has soil moisture per temperature units and describes the rate of change between and . Therefore, according to the assumptions and the proposed linear combinations that describe the system inputs and outputs, our parametrizable COM is formulated as (1) where , , , , and are positive parameters to be estimated, and the variables , , , and are obtained in the data processing stage from measured raw data. 2.2.2. Data processing stage The primary objective of this stage is to utilize measured data to compute the average soil moisture, total rainfall, total irrigation, and average temperature over the duration of the irrigation period. In that form, knowing a fixed irrigation period spanning from the time instant to and considering the sampling period of the respective sensor as , the number of samples within an irrigation period can be defined as: (2) With this, the average soil moisture is determined by: (3) Similarly, the average temperature is given by: (4) The accumulated rainfall over the period is computed as follows: (5) The accumulated irrigation is: (6) In Fig. 3, the data processing stage also processes rain and temperature forecast data. This data process uses the same methods followed in Eqs. (5), (4), considering the sampling time used for the forecasting provider. The expected accumulated rainfall for the next irrigation period is noted as , and the expected temperature average is noted as . 2.2.3. Parameter estimation stage We aim to estimate the parameters inherent to the COM, namely , , , , . Our strategy hinges on maintaining a record of processed data, from which we derive an optimization-based approach for parameter estimation. This method is a variation of the Moving Horizon Estimation (MHE) technique (Rao et al., 2001). Our variation comprises an expanding estimation window, and this is slightly different from the conventional MHE, where a fixed-size window is used. Moreover, we propose to ensure the estimated parameters’ optimality by formulating a two-step estimator. The decision to use an expanding window arises from the unique characteristics of seasonal crops and the observed irrigation practices by growers. Notably, some crops can be ready for harvest just 30 days post-planting. Additionally, the irrigation schedules set by growers can fluctuate significantly, ranging anywhere from one to more than five days. Given these dynamics, valuing and utilizing every data collected from the crop throughout its growth cycle is imperative. Moreover, with a fixed-size estimation window, we risk encountering data windows without rain events or irrigation events, which can impact the estimation of parameters related to rain and irrigation. We use an expanding estimation window to mitigate this, ensuring the algorithm always has access to a sufficient data set. For permanent crops, the analysis might benefit from a moving window with a fixed size long enough to guarantee optimal parameter estimation. For data aggregation within this expanding window, we consider vectors of processed data from the instant to the instant . Hence, the processed data for soil moisture, rainfall, irrigation, and temperature within each estimation window is defined as: with . In that form, according to the corresponding estimation window, the parameters , , , , and are estimated at each irrigation period, given adaptive characteristics to the COM. We employ a two-step estimation strategy to guarantee the optimality of our estimated parameters: the first step estimates parameters in association with measured variables. In contrast, the subsequent step estimates the parameter linked to the water table. Prior estimation step At this step, we assume a water table’s slow dynamic variation in seepage irrigation and general water table elevation. For that, has a low incidence in the variation of the soil moisture. Consequently, we exclude in the first estimation step. This step estimates the parameters that minimize the quadratic error between the soil moisture variation and the linear combination between the measured variables and the parameters associated with the measured variables. In this estimation step, we are including a constraint to ensure that all the parameters must be positive to conserve the proposed physical relation of the mass balance. The proposed optimization problem is formulated as follows: Download : Download high-res image (40KB) Download : Download full-size image where is the vector of parameters that are associated with measured variables , and is the quadratic error described as (8) with , and . For the optimization problem (Eq. (7)), the linear constraints imply that an optimal solution is achievable if is convex. The convexity of this cost function can be established if its Hessian matrix respect to is positive definite (Bhatia, 2015), which in turn depends on the linear independence of the columns in . Variability in soil moisture and temperature can generally be assumed, ensuring the linear independence of corresponding columns in . However, given that rainfall and irrigation can exhibit extended periods of invariability, the algorithm is designed to commence only when observed variability in and is confirmed. Subsequent estimation step After estimating the parameters associated with the measured variables, is estimated. As we consider this parameter directly related to the soil moisture, we propose to find the parameter that minimizes the quadratic error between the measured soil moisture and the estimated soil moisture with initial conditions given by . Where the estimated soil moisture is obtained from the water balance in Eq. (1), and the numerical solution of the model (Eq. (1)), which is described as (9) In that form, we propose a subsequent optimization problem described as Download : Download high-res image (40KB) Download : Download full-size image where is the quadratic cost function given by (11) with . In this optimization problem, the constraints are also linear. In Appendix, it is shown that by appropriate substitutions, appear as a linear combination into the numerical solution given by , confirming the convexity of the cost function and that optimal solutions of also can be guarantee. 2.2.4. Control stage In the control stage, the COM, the estimated parameters, the processed measured variables, and the forecasted variables are integrated to calculate the amount of water that must be applied during the irrigation period. This stage is an adaptive, predictive, and feedback-plus feedforward control strategy. The main objective is to use measured and forecast information to estimate the appropriate irrigation ( ) that maintains the soil moisture close to a desired value. We explain the control strategy in four steps, where first, the control-oriented model (Eq. (1)), the estimated parameters obtained in Eqs. (7), and (10), and the processed measured data (Eqs. (3), (4), (5), and (6)) are used to predict (or forecast) the soil moisture one step ahead ( ) as follows: (12) Second, we use the control-oriented model (Eq. (1)), the predicted soil moisture , forecast rain and temperature data ( , and , and we assume that in the next irrigation period, the estimated parameter variation can be neglected or in other words that . With this information, we predict the soil moisture two steps ahead ( ) as follows: (13) Third, we establish the objective to deduce the irrigation amount to be applied, such as two steps ahead, the predicted soil moisture will be equal to the desired soil moisture. Therefore, by replacing in Eq. (13) and obtaining , we deduce the irrigation amount equation as follows: (14) Fourth, to analyze and understand the elements of the irrigation amount equation, we define the expected error between the desired soil moisture and the expected soil moisture as . Therefore, Eq. (14) can be rewritten as follows: (15) where the elements of the irrigation control equation can be described as components of the water balance that equilibrates the soil moisture around the desired value as follows: is the amount of irrigation that must be applied to compensate for the difference between the desired moisture and the expected average of the soil moisture; is the amount of irrigation that must be applied to compensate the water that, during the irrigation period, was lost due infiltration; is the volume of irrigation water that can be hold based on the expected rain during the irrigation period; is the amount of irrigation that must be applied to compensate the water that is expected to be lost due evapotranspiration; is the amount of water the crop will receive from capillary rise. Note that this control action is a case of adaptive control, knows a self-tuning regulator, where the stability of the controlled system is conditioned to the accuracy of the estimated parameters and the grade of uncertainty between the controlled system and the estimated system (Åström and Wittenmark, 2008). 3. Experimental verification The algorithm was validated using on-field measurements from a commercial sweetcorn field in South Florida. This data was initially collected as part of an integrated research and extension project focused on improving farmers’ adoption of soil moisture sensors for irrigation scheduling in vegetable farms. We evaluated our DSS algorithm using readings from soil moisture probes, a weather station, and a pressure transducer deployed in the commercial field. In this section, we describe the data collection process and the algorithm evaluation towards establishing the potential benefits of the algorithm in comparison with the information obtained from the grower irrigation practices. As shown in Fig. 5, we installed sensors to measure soil moisture, precipitation, environmental temperature, and irrigation management from December 21, 2022, to January 11, 2023. Due to confidentiality agreements, the precise location of the commercial field remains undisclosed in this study. The soil in this field is classified as waveland and lawnwood fine sands. Following the hydraulic properties reported by Saxton and Rawls (2006) (Fig. 2), this soil is characterized by a permanent wilting point of 5%, a field capacity of 10%, and a saturation point of 46%. The field water movement and location of the sensors are described in Fig. 5, where the field is surrounded by a channel supplied by a pump drawing from a natural water source. Water is distributed from this surrounding channel to the crops via pipes. This water is then dispersed into ditches across the field. These ditches feature interconnected silts that facilitate water transport to the plant beds. Irrigation is accomplished by increasing the water level in the channel. It is important to note that this system operates under the assumption of homogeneous water distribution, with the water supply pump serving as the unique control element. Download : Download high-res image (568KB) Download : Download full-size image Fig. 5. The experimental verification description features the deployment of a weather station, a soil moisture sensor, and a pressure transducer. The blue lines delineate the water distribution inflow utilized for irrigating the agricultural field under study. Under the homogeneous water distribution consideration, moisture measurements were taken in the root zone at a depth of 0.3 m, using a Sentek Drill & Drop 60 cm soil moisture probe, which is capable of measuring soil moisture, temperature, and salinity at uniformly spaced depths every 0.1 m, providing a profile up to 0.6 m depth (Sentek, 2018). The sampling time was 1800 s. Rain and temperature data were obtained using a Davis Vantage Pro2 GroWeather 6820c weather station (Davis, 2023). The sampling time was 900 s. Irrigation measurements were taken by installing a KPSI 700 pressure sensor at the bottom of the channel. This sensor has a range of 0.7–210 m, an accuracy of 1% with analog output from 0 to 10 V. The objective was to identify sudden increases related to pump activation to establish the irrigation time during the irrigation period. The pressure sensor was connected to a CR1000X datalogger of Cambell Scientific (Campbell, 2023) with a sampling time of 300 s, and the irrigation management was established by analyzing this information. The proposed DSS algorithm was tested using Matlab software version R2022a (Matlab, 2022). The irrigation period was selected by analyzing the irrigation management given by the grower. We observed that the management given by the grower was in function of soil and crop appearance, irrigating when required, and turning the pump on and off with an elapsed time between 1 and 6 days. Given this information, our algorithm testing incorporated an irrigation period of two days ( ). We consider that with this period, we can provide reasonable timing actions from the grower. We added normally distributed random noise to the measured data to simulate the inherent stochasticity in weather forecasts. Specifically, the magnitude of this noise was set at 10% of the standard deviation of the actual measured data. In the context of rainfall predictions, any resultant negative values post-noise addition were truncated to zero. The maximum allowable depletion for sweet corn was considered 50% (Bayabil et al., 2023). We determined the desired soil moisture between 7.5% and 10%. We selected a desired soil moisture of 9% to stay far from the maximum allowable depletion point and accommodate uncertainties in soil characteristics. Before initializing the algorithm, we converted missing data entries to zeros. Soil moisture and irrigation data underwent homogenization through interpolation to match the 900 s rain and temperature data sampling interval. In the prior estimation step, the optimization problem was formulated as a quadratic programming problem and iteratively solved using the “quadprog” tool in Matlab. In the subsequent estimation stage, the optimization problem was iteratively addressed using a sequential quadratic programming method with the “fmincon” tool in Matlab. Then, in the test, the data is processed at each irrigation period to obtain the corresponding averages of the temperature and soil moisture and the corresponding amounts of accumulated rain and accumulated irrigation applied by the grower. Moreover, the model’s parameters are estimated at each irrigation period, and the recommended irrigation is computed. We evaluated the overall DSS algorithm by applying the computed control action to the parametrized COM. We are addressing the uncertainties related to assuming negligible estimated parameter changes between consecutive irrigation periods by adding stochastic variability, which was obtained by analyzing the variation of the estimated parameters and adding a randomized normal distributed disturbance with a standard deviation equal to the observed standard deviation of . In that form, the stochastic soil moisture prediction is given by (16) where , , , , and are the corresponding disturbances. In consequence, the evaluated control action is also disturbed by including the stochastic soil moisture prediction as (17) Below, we present the outcomes of our analysis. 4. Results and discussion Fig. 6 shows the results of the data processing stage. Note how the temperature ( ) shows a periodic component related to day and night patterns, also presented in the soil moisture ( ). However, this periodic component is removed in both the processed temperature ( ) and soil moisture ( ). In the case of accumulated rain ( ), the processed data is presented as the cumulative sum for each irrigation period. The grower irrigation decision represents the accumulated hours the grower irrigated during each irrigation period. The data processing stage is pivotal in aligning the measured data with the model and significantly mitigating uncertainties from the measured parameters of soil moisture, temperature, rain, and irrigation. As described, this stage computes the average soil moisture, total rainfall, total irrigation, and average temperature over the duration of each irrigation period. This computation aids in filtering out uncertainties and undesired data anomalies provided by sensors and forecasting methods. By averaging soil moisture over an irrigation period, the impact of incorrect measurements and transient spikes not contemplated in the model and random fluctuations are reduced, leading to more representative information on the available water for the plants. For example, in Fig. 6, an anomalous temperature measurement close to −20 °C is observed on Jan-08-23. This incorrect measurement was filtered out in the processed temperature data, thus attenuating its influence. Furthermore, considering accumulated rain and irrigation data in the data processing stage notably enhances the DSS robustness by minimizing the influence of uncertainty in both the measurement and prediction processes. It is essential to emphasize that uncertainties in measured rainfall and irrigation data, sampled every 900 s, have a diminished impact on the estimation and control stages as the duration of the irrigation period increases. This reduction in the influence of data uncertainty is pivotal for the robustness, accuracy, and reliability of the entire DSS algorithm. Download : Download high-res image (614KB) Download : Download full-size image Fig. 6. Comparison between measured data ( , , , ) and processed data ( , , , ), whereby processing is obtained a simplified description of the system dynamics. Fig. 7 shows the measured, estimated, and predicted soil moisture data. This data is updated for every irrigation period, where the measured grower irrigation decision is incorporated as input data to estimate and predict soil moisture. For this experimental verification, the estimation and prediction process starts on January 02, when there are sufficient variations in rainfall and irrigation data. It also shows how the estimation window ( ), denoted by the green line, aligns with the processed soil moisture measurement ( ) from to . Similarly, the soil moisture prediction ( ), denoted by the blue line, consistently corresponds with the processed soil moisture measurement. Download : Download high-res image (972KB) Download : Download full-size image Fig. 7. Comparison of processed soil moisture from to (red lines), estimated soil moisture (green lines) and predicted soil moisture (blue lines). Fig. 8 shows the statistical analysis of the estimation and prediction accuracy. This figure displays the values, correlation coefficients, p-values, and the average and distribution of the estimation errors for each estimation window. All estimation windows yield high correlation coefficients and values. The lowest recorded correlation and values are 0.92 and 0.84, respectively. In addition, the -value starts at and decreases as the estimation window expands, reaching a minimum of . The consistently high correlation and values across all estimation windows suggest that the estimation algorithm performs well in describing the dynamics of the soil moisture average. The lowest value of 0.84 indicates that, in the worst-case scenario, the COM can explain an 84% of the variability in the soil moisture average. On the other hand, the lowest correlation value of 0.92 indicates that we are reaching a strong linear relationship between the proposed COM and the observed soil moisture averages. The low and decreasing -value describes a high level of confidence in the accuracy of the estimations, which increases as the estimation window increases. Download : Download high-res image (488KB) Download : Download full-size image Fig. 8. Statistical analysis of estimation errors across the estimation windows, including their average and standard deviation. The figure also visualizes prediction error behavior for each prediction instance. The results indicate that the average estimation error across all estimation windows is around zero, with maximum standard deviations of . The prediction error is similarly centered around zero, exhibiting maximum and minimum errors of . As the estimation window increases, the prediction error decreases. However, an increase in the prediction error is evidenced on Feb-05. This problem is also observed in the estimation analyses, with a decrease in the and correlation. On this particular estimation, the commercial sweetcorn field experienced an intense rainfall of 26.67 mm within 24 h. This led to a substantial change in soil moisture levels, which the algorithm failed to estimate accurately, resulting in a peak error of 3.29%. This behavior shows that close to the desired operation region (between the MADP and FC), the soil–water relation can be described as a linear model, where our COM can accurately describe the dynamics. However, the COM accuracy reduces in extreme events that move the SM content away from the desired operation region. Our proposed approach overcomes the uncertainties associated with using a simplified modeling approach by considering a recursive parameters estimation strategy that lets the model adapt to changing crop and environmental conditions. The modeling and estimation approach is capable of accurately describing the soil moisture dynamics close to the operation region, overcoming associated uncertainties, and can be used as a baseline for making irrigation decisions. To delve deeper into the validation and performance of our modeling and estimation approach, a comprehensive analysis of the distribution of the estimated parameters is subsequently provided. Fig. 9 shows the distribution of the parameters and the incidence of the estimated parameters in the COM. It can be observed that the parameters associated with moisture ( ), irrigation ( ), rain ( ), and temperature ( ) exhibits a low dispersion in contrast with the parameter associated to the capillary rise ( ). A sensitivity analysis of the estimated parameters can be performed by multiplying the obtained parameters by the maximum reported value per respective variable, obtaining how much the soil moisture can increase or decrease according to the parameter dispersion and the maximum values reported for each variable. The results show that during an irrigation period, the soil moisture could (i) decrease a 1.5% concerning maximum soil moisture of 13.6%; (ii) increase around 3.6% with 48 h of continuous irrigation; (iii) increase around a 3.7% in relation with 26 (mm) of rain on a period of 48 h; (iv) decrease around 0.3% with a maximum temperature average of 23.3 (°C); and (v) increase around 0.06% in relation with the capillary rise. Note that the parameter that shows the high dispersion in the estimation process is . However, gives the most significant influence. Moreover, it is observed that soil water losses from leaching and runoff could be five times higher than the amount lost due to high temperature, which is related to the evapotranspiration process. Download : Download high-res image (202KB) Download : Download full-size image Fig. 9. Distribution of the parameters and incidence of their distribution in the model. Fig. 10 shows that the variations of the estimated parameters are distributed close to zero. This dispersion accounts for the expected variation that the parameters could present between irrigation periods. For example, in the case of rain, from Fig. 9, we have that the parameter associated ( ) is close to 0.11. From the standard deviation of , we can expect that this parameter could be different around in the next irrigation period. This uncertainty is reflected in the prediction of the soil moisture Eq. (16) and in the control action, which is taken based on that prediction. For that, the standard deviations of the variation of the parameters shown in Fig. 10 are used to add uncertainty and perform a realistic simulation in the presence of such uncertainty. The results of the controlled system are shown in Fig. 11, where we compare the system’s measured data with the expected data if the proposed algorithm is used to manage irrigation. Download : Download high-res image (148KB) Download : Download full-size image Fig. 10. Distribution of the variation of the parameters. Fig. 11 compares against , and against , where , and are the created synthetic temperature and rain data used in the evaluation of the control action Eq. (17). We can observe that the difference between and is imperceptible. This is because the added normally distributed random data is filtered in the process stage. This is important because a similar result can be expected by using data from the corresponding weather forecasting services, highlighting the importance of the data processing stage in enhancing the algorithm’s robustness. On the other hand, it is observed that due to the processing stage, rain presents more sensitivity to the added random data. That is because, in the case of rain, the limitation to zero of the applied noise affects his distribution. Download : Download high-res image (583KB) Download : Download full-size image Fig. 11. Evaluation of the proposed control approach by showing (i) the comparison between measured temperature (red) and expected temperature; (ii) measured rain (red) and expected rain; (iii) measured soil moisture (red) and controlled soil moisture if the recommendations provided by the DSS are applied; and (iv) measured irrigation actions (red) and recommended irrigation actions by our DSS. In Fig. 11, we are also presenting the comparison between the measured soil moisture and the expected soil moisture if the grower uses the computed recommended irrigation . In the comparison, we included the desired soil moisture ( ), and we can observe how the controlled moisture tries to be around this value. It is important to mention that the computation of starts on January 02, when the first prediction data is available (see Fig. 7); before that, and are the same. The most notable difference between the irrigation scheduling given by the grower and the irrigation scheduling computed by the algorithm is that the algorithm does not generate saturated irrigation actions of 48 h. The algorithm aims to uphold an average irrigation duration of 10 h every two days. This duration fluctuates proportionally with forecasted temperature changes (as seen on January 18) and inversely in response to anticipated rain events (as evidenced on January 24). On the other hand, the decisions taken by the grower show that he is reacting to extreme events. For example, on January 18, the irrigation was turned off when the average soil moisture reached a maximum of 13.85% (percolation). Also, it is observed that the irrigation is turned on on February 01, when the soil moisture is close to reaching the allowable depletion point of 7.5%. In contrast, the controlled moisture is close to 9, avoiding the environmental impact of percolation and also avoiding the crop risk of reaching an allowable depletion point. However, it is important to mention that the decisions taken by the grower show expertise in dealing with this complex process on the most difficult type of soil (see Fig. 2), avoiding the allowable depletion point and maintaining the soil moisture close to the available water region. Fig. 12 compares the cumulative irrigation hours applied by the grower with those used for the proposed algorithm. On February 09, the grower reported a total of 367 h of irrigation, while the algorithm used a total of 258 h. This result demonstrates the potential of our algorithm to save 30% of the water typically used in seepage-irrigated crops in Florida. Notably, seepage irrigation systems are known for their low efficiency, often falling below 40% (Dukes et al., 2010). Despite this inefficiency, they remain prevalent in Florida. According to the current grower records (personal communication), a single hectare of seepage-irrigated sweet corn can consume around 1500 m3 of water per season. Using this volume consumption as a baseline, our proposed algorithm has the capacity to increase water use efficiency up to 450 m3 per hectare per season. This finding underscores the substantial water-saving potential of our DSS, highlighting its significance for sustainable agriculture if it is adopted in the state of Florida. Download : Download high-res image (176KB) Download : Download full-size image Fig. 12. Comparison of the cumulative sum of irrigation hours between the grower technique and the recommendations provided by the proposed decision support system. Our study demonstrates significant advancements in irrigation management, particularly in incorporating information from weather forecasting services to optimize irrigation scheduling. Our approach has shown reduced irrigation time in response to anticipated rainfall events. This predictive capability offers a distinct improvement over fully automated systems as those reported by Domínguez-Niño et al. (2020) and approaches that at the beginning of the season precalculate irrigation management based on crop models as reported by Hodges et al. (2022), where a consistent reduction in irrigation corresponding to rainfall is not evident. We also highlight that the proposed strategy integrates multiple information sources for optimal irrigation management based on soil moisture and water balance. This is an advancement over the traditional approach presented by El-Naggar et al. (2020), where the use of soil moisture sensors and soil water balances are seen as independent control techniques, which are compared to elucidate the most suitable irrigation practices. While the modernization of irrigation systems, as discussed by Çetin et al. (2023), is crucial for sustainable agriculture and water conservation, it often involves significant initial investments. This can be a major barrier in regions still reliant on traditional irrigation methods such as seepage. Our research addresses this challenge by demonstrating that substantial water savings can be achieved without full-scale modernization and automation of irrigation systems. Our study’s results highlight our approach’s environmental benefits, presenting it as a cost-effective alternative for enhancing the sustainability of irrigation practices in diverse agricultural settings. Future studies involve evaluating the algorithm across varied agricultural settings, encompassing different soil types, irrigation methods, different regions, and crops. This is crucial for assessing its adaptability and efficacy in water conservation. Concurrently, efforts will be directed towards integrating this adaptive decision support system (DSS) into accessible digital platforms such as smartphone applications and websites, simplifying irrigation decision-making for farmers. Enhancing the DSS algorithm will involve developing advanced modeling and estimation techniques to accurately estimate and forecast soil moisture dynamics under extreme environmental conditions, considering their random and complex nature. The enhancement also includes refining predictive models and automated control strategies for more precise irrigation scheduling. A key aspect is the creation of control algorithms with mixed objectives, such as minimizing irrigation while ensuring optimal crop yield. The implementation of Kalman filters and stochastic model predictive control techniques to manage forecast uncertainty must be explored. 5. Conclusions In this study, we introduced a technological solution to enhance the sustainability of water management in agriculture. We developed a decision support system algorithm for irrigation scheduling using principles from control theory. This algorithm encompasses modeling, processing, estimation, and control stages, ensuring the optimality of the model that describes the system. During the evaluation, the estimation stage achieved minimum correlation coefficients and values of 0.92 and 0.84, respectively. The algorithm integrates the parametrized model, processed data, weather forecasting, and human limitations to conform an adaptive feedback plus feedforward irrigation predictive control strategy that considers human action in the control loop. The algorithm can consistently regulate soil moisture, ensuring it remains at desired levels. This approach reduced the risks associated with leaching and runoff and offered the potential for water savings of up to 30% in seepage irrigated crops on sandy soils. Looking forward, we plan to move towards end-user implementation to promote wider adoption and benefits of this technological solution. CRediT authorship contribution statement Gregory Conde: Conceptualization, Formal analysis, Investigation, Methodology, Project administration, Software, Validation, Visualization, Writing – original draft, Writing – review & editing. Sandra M. Guzmán: Conceptualization, Funding acquisition, Resources, Supervision, Validation, Writing – review & editing. Akshara Athelly: Formal analysis, Writing – review & editing. Declaration of competing interest The authors declare the following financial interests/personal relationships which may be considered as potential competing interests: Sandra M. Guzman reports financial support was provided by USDA. If there are other authors, they declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgments This work is supported by the Conservation Innovation Grants program at USDA’s Natural Resources Conservation Service, United States , under accession number NR21-13G018. We want to express our gratitude to STROOBOSSCHER ZOE and PALACIOS DANIEL, University of Florida, for their invaluable contributions to this work. Appendix. This appendix describes that the numerical solution of the system during the estimation stage can be described as a linear combination of . In Eq. (9), is considered the initial conditions, and by substituting into and so on, we can find a linear description in terms of given by: (18) Data availability Data will be made available on request. References Åström and Wittenmark, 2008 Åström K.J., Wittenmark B. Adaptive Control Courier Corporation (2008), p. 573 volume illustrated, reprint Google Scholar Bayabil et al., 2023 Bayabil H.K., Teshome F.T., Guzman S.M., Schaffer B. Evapotranspiration rates of three sweet corn cultivars under different irrigation levels HortTechnology, 33 (2023), pp. 16-26 CrossRefView in ScopusGoogle Scholar Bhatia, 2015 Bhatia R. Positive Definite Matrices Princeton University Press (2015) Google Scholar Bisbis et al., 2018 Bisbis M.B., Gruda N., Blanke M. Potential impacts of climate change on vegetable production and product quality – A review J. Clean. Prod., 170 (2018), pp. 1602-1620 View PDFView articleView in ScopusGoogle Scholar Campbell, 2023 Campbell M.B. Data loggers, CR1000X model (2023) [Online] Available at: URL: https://www.campbellsci.com/data-loggers Google Scholar Cayuela et al., 2022 Cayuela C.M.F., Perea R.G., Poyato E.C., Montesinos P. An ICT-based decision support system for precision irrigation management in outdoor orange and greenhouse tomato crops Agricult. Water Manag., 269 (2022) Google Scholar Çetin et al., 2023 Çetin Ö., Fayrap A., Yolcu R. Sustainability and modernization of agricultural irrigation: A comparative assessment of two irrigation schemes Irrigation and Drainage (2023), pp. 1-10 Google Scholar Chen et al., 2019 Chen X., Qi Z., Gui D., Gu Z., Ma L., Zeng F., Li L., Sima M.W. A model-based real-time decision support system for irrigation scheduling to improve water productivity Agronomy, 9 (2019) Google Scholar Culman et al., 2019 Culman M., de Farias C.M., Bayona C., Cruz J.D.C. Using agrometeorological data to assist irrigation management in oil palm crops: A decision support method and results from crop model simulation Agricult. Water Manag., 213 (2019), pp. 1047-1062 View PDFView articleView in ScopusGoogle Scholar Davis, 2023 Davis M. Vantage pro2™, weather station (2023) [Online] Available at: URL: https://www.davisinstruments.com/pages/vantage-pro2 Google Scholar Delgoda et al., 2016 Delgoda D., Malano H., Saleem S.K., Halgamuge M.N. Irrigation control based on model predictive control (MPC): Formulation of theory and validation using weather forecast data and AQUACROP model Environ. Model. Softw., 78 (2016), pp. 40-53 View PDFView articleView in ScopusGoogle Scholar Ding et al., 2018 Ding Y., Wang L., Li Y., Li D. Model predictive control and its application in agriculture: A review Comput. Electron. Agric., 151 (2018), pp. 104-117 View PDFView articleView in ScopusGoogle Scholar Domínguez-Niño et al., 2020 Domínguez-Niño J.M., Oliver-Manera J., Girona J., Casadesús J. Differential irrigation scheduling by an automated algorithm of water balance tuned by capacitance-type soil moisture sensors Agricult. Water Manag., 228 (2020), Article 105880 View PDFView articleView in ScopusGoogle Scholar Dukes et al., 2009 Dukes M.D., Shedd M., Cardenas-Lailhacar B. Smart irrigation controllers: How do Soil Moisture Sensor (SMS) irrigation controllers work? EDIS 2009 (2009) Google Scholar Dukes et al., 2010 Dukes M.D., Zotarelli L., Morgan K.T. Use of irrigation technologies for vegetable crops in florida HortTechnology Hortte, 20 (2010), pp. 133-142 CrossRefView in ScopusGoogle Scholar Eisenhauer et al., 2021 Eisenhauer D.E., Martin D.L., Heeren D.M., Hoffman G.J. Irrigation Systems Management ASABE (2021), p. 347 Google Scholar El-Naggar et al., 2020 El-Naggar A.G., Hedley C.B., Horne D., Roudier P., Clothier B.E. Soil sensing technology improves application of irrigation water Agricult. Water Manag., 228 (2020), Article 105901 View PDFView articleView in ScopusGoogle Scholar Gao et al., 2017 Gao F., Feng G., Ouyang Y., Wang H., Fisher D., Adeli A., Jenkins J. Evaluation of reference evapotranspiration methods in arid, semiarid, and humid regions JAWRA J. Am. Water Resour. Assoc., 53 (2017), pp. 791-808 CrossRefView in ScopusGoogle Scholar Gollin et al., 2002 Gollin D., Parente S., Rogerson R. The role of agriculture in development Amer. Econ. Rev., 92 (2002), pp. 160-164 View in ScopusGoogle Scholar Gu et al., 2017 Gu Z., Qi Z., Ma L., Gui D., Xu J., Fang Q., Yuan S., Feng G. Development of an irrigation scheduling software based on model predicted crop water stress Comput. Electron. Agric., 143 (2017), pp. 208-221 View PDFView articleView in ScopusGoogle Scholar Hodges et al., 2022 Hodges B., Tagert M.L., Paz J.O. Use of a crop model and soil moisture sensors for estimating soil moisture and irrigation applications in a production soybean field Irrigation Sci., 40 (2022), pp. 925-939 CrossRefView in ScopusGoogle Scholar Jalilvand et al., 2019 Jalilvand E., Tajrishy M., Hashemi S.A.G.Z., Brocca L. Quantification of irrigation water using remote sensing of soil moisture in a semi-arid region Remote Sens. Environ., 231 (2019), Article 111226 View PDFView articleView in ScopusGoogle Scholar Kang et al., 2023 Kang C., Diverres G., Karkee M., Zhang Q., Keller M. Decision-support system for precision regulated deficit irrigation management for wine grapes Comput. Electron. Agric., 208 (2023) Google Scholar Katimbo et al., 2023 Katimbo A., Rudnick D.R., Zhang J., Ge Y., DeJonge K.C., Franz T.E., Shi Y., Liang W.-Z., Qiao X., Heeren D.M., Kabenge I., Nakabuye H.N., Duan J. Evaluation of artificial intelligence algorithms with sensor data assimilation in estimating crop evapotranspiration and crop water stress index for irrigation water management Smart Agric. Technol., 4 (2023) Google Scholar Khatri and Tyagi, 2015 Khatri N., Tyagi S. Influences of natural and anthropogenic factors on surface and groundwater quality in rural and urban areas Front. Life Sci., 8 (2015), pp. 23-39 CrossRefView in ScopusGoogle Scholar Li et al., 2018 Li H., Li J., Shen Y., Zhang X., Lei Y. Web-based irrigation decision support system with limited inputs for farmers Agricult. Water Manag., 210 (2018), pp. 279-285 View PDFView articleGoogle Scholar Li et al., 2019 Li M., Sui R., Meng Y., Yan H. A real-time fuzzy decision support system for alfalfa irrigation Comput. Electron. Agric., 163 (2019) Google Scholar Lopez-Jimenez et al., 2022 Lopez-Jimenez J., Wouwer A.V., Quijano N. Dynamic modeling of crop-soil systems to design monitoring and automatic irrigation processes: A review with worked examples Water, 14 (2022) Google Scholar Ma et al., 2012 Ma L., Ahuja L., Nolan B.T., Malone R., Trout T., Qi Z. Root zone water quality model (RZWQM2): Model use, calibration and validation Trans. ASABE, 55 (2012), pp. 1425-1446 View in ScopusGoogle Scholar Matlab, 2022 Matlab L. Version R2022a MathWorks Inc. (2022) Available at: URL: https://www.mathworks.com/products/matlab.html Google Scholar Mueller et al., 2012 Mueller N.D., Gerber J.S., Johnston M., Ray D.K., Ramankutty N., Foley J.A. Closing yield gaps through nutrient and water management Nature, 490 (2012), pp. 254-257 CrossRefView in ScopusGoogle Scholar Rao et al., 2001 Rao C.V., Rawlings J.B., Lee J.H. Constrained linear state estimation—a moving horizon approach Automatica, 37 (2001), pp. 1619-1628 View PDFView articleView in ScopusGoogle Scholar Romero et al., 2012 Romero R., Muriel J., García I., de la Peña D.M. Research on automatic irrigation control: State of the art and recent results Agricult. Water Manag., 114 (2012), pp. 59-66 View PDFView articleView in ScopusGoogle Scholar Saleem et al., 2013 Saleem S.K., Delgoda D.K., Ooi S.K., Dassanayake K.B., Liu L., Halgamuge M.N., Malano H. Model predictive control for real-time irrigation scheduling IFAC Proc. Vol., 46 (2013), pp. 299-304 View PDFView articleView in ScopusGoogle Scholar Saxton and Rawls, 2006 Saxton K.E., Rawls W.J. Soil water characteristic estimates by texture and organic matter for hydrologic solutions Soil Sci. Am. J., 70 (2006), pp. 1569-1578 CrossRefView in ScopusGoogle Scholar Sentek, 2018 Sentek K.E. Sentek drill & drop probe manual, soil moisture sensor (2018) [Online] Available at: URL: https://sentektechnologies.com/download/sentek-drill-drop-probe-manual/ Google Scholar Shang et al., 2020 Shang C., Chen W.H., Stroock A.D., You F. Robust model predictive control of irrigation systems with active uncertainty learning and data analytics IEEE Trans. Control Syst. Technol., 28 (2020), pp. 1493-1504 CrossRefView in ScopusGoogle Scholar Simionesei et al., 2020 Simionesei L., Ramos T.B., Palma J., Oliveira A.R., Neves R. IrrigaSys: A web-based irrigation decision support system based on open source data and technology Comput. Electron. Agric., 178 (2020) Google Scholar Stone et al., 2020 Stone K.C., Bauer P.J., O’Shaughnessy S., Andrade-Rodriguez A., Evett S. A variable-rate irrigation decision support system for corn in the U.S. Eastern Coastal plain Trans. ASABE, 65 (2020), pp. 1295-1303 CrossRefView in ScopusGoogle Scholar Taghvaeian et al., 2020 Taghvaeian S., Andales A.A., Allen L.N., Kisekka I., O’Shaughnessy S.A., Porter D.O., Sui R., Irmak S., Fulton A., Aguilar J. Irrigation scheduling for agriculture in the United States: The progress made and the path forward Trans. ASABE, 63 (2020), pp. 1603-1618 CrossRefView in ScopusGoogle Scholar Torres et al., 2019 Torres I., Sánchez M.-T., Benlloch-González M., Pérez-Marín D. Irrigation decision support based on leaf relative water content determination in olive grove using near infrared spectroscopy Biosyst. Eng., 180 (2019), pp. 50-58 View PDFView articleView in ScopusGoogle Scholar USDA, 2018 USDA I. Irrigation and water management survey (2018) Google Scholar Zhang et al., 2017 Zhang X., Zhang J., Li L., Zhang Y., Yang G. Monitoring citrus soil moisture and nutrients using an IoT based system Sensors (Switzerland), 17 (2017) Google Scholar Zotarelli et al., 2010 Zotarelli L., Dukes M.D., Morgan K.T. Interpretation of soil moisture content to determine soil field capacity and avoid over-irrigating sandy soils using soil moisture sensors EDIS 2010 (2010) Google Scholar Cited by (0) 1 We are providing some key definitions to enhance algorithm description: Irrigation Period the interval chosen by the grower that specifies how often the Decision Support System (DSS) should compute irrigation instructions; Sampling Period is the discrete time interval at which sensor data is collected; Irrigation Scheduling is the process of determining when and how much to irrigate; Irrigation Frequency The number of irrigation events that occur within a specified timeframe, e.g., measured irrigation events per week; Volume of Water Per Irrigation Period specifies the volume of water to be applied during the irrigation period; Irrigation Time Per Irrigation Period quantifies the time duration of watering during the irrigation period. View Abstract Published by Elsevier B.V. Part of special issue AI in Agriculture: Innovation and Discovery to Equitably meet Producer Needs and Perceptions Edited by Yiannis Ampatzidis, Brenda Ortiz, Margarita Velandia, Alex Thomasson, Jeff Vitale View special issue Recommended articles A clustering-based automatic registration of UAV and terrestrial LiDAR forest point clouds Computers and Electronics in Agriculture, Volume 217, 2024, Article 108648 Junhua Chen, …, Yuan Zeng View PDF SY-Track: A tracking tool for measuring chicken flock activity level Computers and Electronics in Agriculture, Volume 217, 2024, Article 108603 Xinjie Tan, …, Yuxing Han View PDF Integrating data and knowledge to support the selection of service plant species in agroecology Computers and Electronics in Agriculture, Volume 217, 2024, Article 108594 Elie Najm, …, Léo Garcia View PDF Show 3 more articles Article Metrics Captures Readers: 6 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 3:
- APA Citation: None
  Main Objective: To analyze the importance of local data in calibrating the Ångström–Prescott (A-P) formula for estimating Rs and ET0 using machine learning algorithms
  Study Location: China
  Data Sources: Meteorological data from 80 national Rs measuring stations and 839 regular weather stations in China
  Technologies Used: Linear regression, empirical regression models, machine-learning methods
  Key Findings: 1. The default values recommended by the FAO significantly overestimated a and underestimated b, leading to substantial errors in Rs and ET0 estimations, especially in southeastern China. 
2. Machine-learning methods generally outperformed empirical models in estimating the A-P coefficients. 
3. Daily A-P coefficients provided the highest accuracy in estimating Rs and ET0, but the differences in accuracy among daily, monthly, and yearly coefficients were not significant.
  Extract 1: Compared with the Rs estimated with the FAO–recommended coefficients, a noticeable improvement was generated using the site–calibrated A-P coefficients. Meanwhile, the estimation errors of Rs were decreased with the finer temporal resolution of the A-P coefficients. The best Rs estimations were produced with the daily A-P coefficients (Figure 4c).
  Extract 2: The daily A-P coefficients achieved the most considerable improvement in ET0 estimation in the SMZ with all sites' RMSE less than 0.5 mm d−1.
  Limitations: None
  Relevance Evaluation: This study directly addresses the issue raised in the outline point by investigating the role of local data in calibrating the Ångström–Prescott (A-P) formula for estimating Rs and ET0 using machine learning algorithms. The study provides a comprehensive analysis of the spatiotemporal variability of the A-P coefficients and evaluates the performance of different time-scale coefficients in estimating Rs and ET0. The results demonstrate the importance of using site-specific A-P coefficients, particularly in regions with significant spatial variations, and the potential of machine learning methods in estimating these coefficients. The study's relevance to the outline point is exceptionally high, as it provides valuable insights into the factors affecting the accuracy of Rs and ET0 estimation and offers practical recommendations for improving estimation methods.
  Relevance Score: 1.0
  Inline Citation: None
  Explanation: This study used China-specific data to analyze the importance of using local data to calibrate the Ångström–Prescott (A-P) formula in estimating daily solar radiation (Rs) and reference crop evapotranspiration (ET0) when only meteorological data are available. 

Using linear regression, the study determined benchmark values for the A-P coefficients (a and b) at different time scales (daily, monthly, and yearly) for 80 national Rs measuring stations in China. The results showed that the default values recommended by the Food and Agriculture Organization (FAO) of the United Nations significantly overestimated a and underestimated b, leading to substantial errors in Rs and ET0 estimations, especially in southeastern China.

The study then employed three empirical regression models and four machine-learning methods to estimate the A-P coefficients. The machine-learning methods generally outperformed the empirical models and were used to estimate the A-P coefficients for 839 regular weather stations without direct Rs measurements.

To determine the optimal time scale for the A-P coefficients, the study evaluated the performance of daily, monthly, and yearly A-P coefficients in estimating Rs and ET0. The results indicated that the estimation accuracy was highest when using daily A-P coefficients, followed by monthly and yearly coefficients. However, the differences in accuracy among the three time scales were not significant, suggesting that yearly A-P coefficients could be used for daily Rs and ET0 estimation in China due to their convenience.

The study highlights the importance of using site-specific A-P coefficients in Rs and ET0 estimation, especially in regions with significant spatial variations in these coefficients. The machine-learning methods used in this study offer a reliable and efficient way to estimate the A-P coefficients, even for sites with limited data.

 Full Text: >
"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login / Register Hydrological Processes RESEARCH ARTICLE Full Access Parameterization of the Ångström–Prescott formula based on machine learning benefit estimation of reference crop evapotranspiration with missing solar radiation data Shang Chen,  Wenzhe Feng,  Liang He,  Wei Xiao,  Hao Feng,  Qiang Yu,  Jiandong Liu,  Jianqiang He First published: 05 February 2024 https://doi.org/10.1002/hyp.15091 Wei Xiao, Jiandong Liu and Jianqiang He contributed equally to this study. SECTIONS PDF TOOLS SHARE Abstract Accurately estimated reference evapotranspiration (ET0) is essential to regional water management. The FAO recommends coupling the Penman–Monteith (P-M) model with the Ångström–Prescott (A-P) formula as the standard method for ET0 estimation with missing Rs measurements. However, its application is usually restricted by the two fundamental coefficients (a and b) of the A-P formula. This paper proposes a new method for estimating ET0 with missing Rs by combining machine learning with physical-based P-M models (PM-ET0). The benchmark values of the A-P coefficients were first determined at the daily, monthly, and yearly scales, and further evaluated in Rs and ET0 estimates at 80 national Rs measuring stations. Then, three empirical models and four machine-learning methods were evaluated in estimating the A-P coefficients. Machine learning methods were also used to estimate ET0 (ML-ET0) to compare with the PM-ET0. Finally, the optimal estimation method was used to estimate the A-P coefficients for the 839 regular weather stations for ET0 estimation without Rs measurement for China. The results demonstrated a descending trend for coefficient a from northwest to southeast China, with larger values in cold seasons. However, coefficient b showed the opposite distribution as the coefficient a. The FAO has recommended a larger a but a smaller b for southeast China, which produced the region's largest Rs and ET0 estimation errors. Additionally, the A-P coefficients calibrated at the daily scale obtained the best estimation accuracy for both Rs and ET0, and slightly outperformed the monthly and yearly coefficients without significant difference in most cases. The machine learning methods outperformed the empirical methods for estimating the A-P coefficients, especially for the sites with extreme values. Further, ML-ET0 outperformed the PM-ET0 with yearly A-P coefficients but underperformed those with daily and monthly ones. This study indicates an exciting potential for combining machine learning with physical models for estimating ET0. However, we found that using the A-P coefficients with finer time scales is unnecessary to deal with the missing Rs measurements. 1 INTRODUCTION Estimating reference crop evapotranspiration (ET0) accurately is essential for regional water resource planning and irrigation scheduling (Shiri et al., 2014). However, measuring ET0 directly through experiments is usually restricted by high labour and time consumption (Xing et al., 2022). The FAO56–recommended Penman–Monteith (P-M) model is widely adopted as the standard method for ET0 estimation (Allen et al., 1998). Still, limited meteorological data usually restrict its application worldwide, especially global solar radiation (Rs) (Xing et al., 2023). Because of the cost of expensive measuring instruments, weather stations measuring Rs directly cover a limited number of locations worldwide, especially in developing countries (Jahani et al., 2017). Various weather datasets containing Rs values have been produced, including the NASA Prediction of Worldwide Energy Resource (NASA POWER) (Chandler et al., 2013), the ERA-Interim reanalysis products (Dee et al., 2011), and the Japanese Meteorological Agency (JRA-55) (Kobayashi et al., 2015). These datasets provide valuable references for the relevant research driven by Rs but usually have lag time and unsatisfactory performance for the Rs products. Hence, real-time Rs estimation is always needed to meet various application requirements. Previous studies have established various estimation models for Rs, such as (1) the interpolation model with limited Rs observations (Rivington et al., 2006), (2) the empirical regression model between Rs and meteorological and geographic variables (Bristow & Campbell, 1984; Makadea & Jamil, 2018), (3) the satellite–based model with direct measurement of surface shortwave radiation (He et al., 2015), and (4) the radiation transfer models (Pawlak et al., 2004). Empirical methods for Rs estimation have been widely established based on different input variables considering the low data requirements and computation. These statistical models are divided into sunshine- (Ångström, 1924; Naserpour et al., 2020), cloud- (Badescu & Dumitrescu, 2015; Ehnberg & Bollen, 2005), and temperature-based models (Feng et al., 2019; Yacef et al., 2014). Studies have shown that sunshine–based models outperformed other models (Abdul-Aziz et al., 1993; De, Souza, et al., 2016; Trnka et al., 2005), especially the Ångström–Prescott (A-P) method (Prescott, 1940). The A-P formula is developed based on limited inputs and a simple linear relationship and thus has been widely used in ET0 estimation with missing Rs data (Allen et al., 1998; Chen et al., 2022). The default values recommended by the FAO–56 document (e.g., a = 0.25 and b = 0.50) have been widely used since data were always inadequate for calibrating these coefficients (Allen et al., 1998). Unfortunately, Sabziparvar et al. (2013) and Liu et al. (2014) have reported remarkable spatial variations in the A-P coefficients that can cause significant errors in regional and national Rs and ET0 estimates. Thus, calibrating the A-P coefficients with actual local Rs measurements is essential for minimizing Rs errors (Peng et al., 2022). In addition to the spatial variation, temporal fluctuation of the A-P coefficients has also attracted the attention of researchers (Liu, Mei, Li, Zhang, Wang, et al., 2009). No consensus on time–dependent or fixed A-P coefficients for Rs estimation has been reached. Soler (1990) found that monthly a and b coefficients outperformed yearly ones, and Tymvios et al. (2005) drew a similar conclusion. Further, other studies report that time–dependent coefficients obtained similar accuracy (Almorox & Hontoria, 2004; Ertekin & Evrendilek, 2007) or worse (Hussain et al., 1999) Rs estimation. Additionally, the A-P coefficients are usually estimated through single- (Hassan et al., 2016) or multi-factor (Liu, Mei, Li, Wang, Jensen, et al., 2009) empirical regression models. These traditional models are usually inefficient in dealing with the complex nonlinear relationships between input factors and target variables (Kisi & Parmar, 2016). Further, input variables are usually set for a specific empirical model, which cannot always be done (Ming et al., 2015). Machine learning is widely adopted for Rs and ET0 estimates due to the flexible combination of predictors and satisfactory accuracy in dealing with nonlinear problems (Fan et al., 2020; Gürel et al., 2020). However, considerable uncertainty can be generated in scenarios different from those in the training processes since machine learning usually performs as “black box” without a physical basis (Dong et al., 2022; Zhang et al., 2018). Therefore, this study evaluated several empirical regression models and machine learning methods to estimate the A-P coefficients for ET0 at different time scales with missing Rs data. The main objectives of this study were to (1) evaluate the spatiotemporal variation of the A-P coefficients, (2) assess the performance of time–dependent (daily and monthly) and fixed (yearly and FAO–recommended) A-P coefficients in daily Rs and ET0 estimation, and (3) evaluate different empirical regression models and machine learning methods in estimating the A-P coefficients across all of China. The findings were expected to facilitate the application of the P-M and A-P models in ET0 estimation for sites without Rs measurements in China. 2 MATERIALS AND METHODS 2.1 Study area The four main climatic zones are the mountain plateau zone (MPZ), the temperate continental zone (TCZ), the temperate monsoon zone (TMZ), and the subtropical monsoon zone (SMZ) (Figure 1). The average elevations of the MPZ, TCZ, TMZ, and SMZ are 4236, 912, 288, and 611 m, respectively. There is a noticeable difference in mean annual precipitation for these four climatic zones. The most arid and humid zones are TCZ (193 mm) and the SMZ (1360 mm) in northwest and southeast China, while the TMZ (460 mm) and MPZ (591 mm) share a similar annual precipitation. FIGURE 1 Open in figure viewer PowerPoint Study area and distribution of the 80 national solar radiation measuring stations (red crosses) and 839 weather stations without solar radiation measurements (black dots) in the four climatic zones of MPZ (the mountain plateau), TCZ (the temperate continental zone), TMZ (the temperate monsoon zone), and SMZ (the subtropical monsoon zone) in China. The acronyms are the same below. 2.2 Datasets Daily measurements of Rs were collected from 80 Rs national measuring stations in China (Figure 1 and Table S1). There were 7, 16, 23, and 34 Rs stations in the MPZ, TCZ, TMZ, and SMZ zones, respectively. Daily meteorological measurements in this dataset including daily global solar radiation (Rs, MJ m−2), sunshine hours (n, h), maximum (Tmax, °C) and minimum air temperature (Tmin, °C), average air temperature (Tmean, °C), wind speed (U, m s−1), precipitation (P, mm), and relative humidity (RH, %). Additionally, except for Rs, regular measurements were collected from 839 weather stations. The two datasets also contained each site's latitude, longitude, and altitude information and were obtained from the China Meteorological Administration (CMA). Weather measurements will be omitted for the day with the following two conditions: (1) missing measurements for either Rs or n; (2) Rs/Ra ≥1 or n/N ≥ 1 (Persaud et al., 1997). 2.3 Description of the Ångström–Prescott (A-P) formula and penman–Monteith model Ångström (1924) established a linear relationship between Rs/Rs0 and n/N in 1924, where Rs0 represents the solar radiation on a sunny day, n represents the sunshine hour, and N represents the day length. We use Equation (1) to estimate the value of N: (1) where ωs is the sunset hour angle in rad. Prescott (1940) suggested replacing Rs0 with Ra (extra-terrestrial radiation) due to the difficulty in measuring Rs0. In this way, the Ångström formula was translated into the Ångström–Prescott (A-P) format (Equation 2): (2) where a (0–1) and b (0–1) are fundamental coefficients, and the sum of a and b is the transmissivity of clear sky. We further adopt Equation (3) to estimate Ra: (3) where Gsc represents the solar constant, 0.0820 MJ m−2 min−1; dr is the inverse square of the Earth-Sun relative distance; φ is the latitude, rad; δ is the solar declination, rad. The standard Penman–Monteith model (or P-M equation, Equation 4) has been recommended as the standard method for estimating ET0 by the Food and Agriculture Organization of the United Nations (FAO) (Allen et al., 1998): (4) where Rn is the net radiation above the canopy, MJ m−2 d−1; G represents the soil heat flux density, MJ m−2 d−1; γ is the air psychrometric, kPa °C −1; Tmean is the mean daily air temperature, °C; u2 represents the wind speed 2 m above ground in m s−1; es and ea are the saturation and actual vapour pressures, kPa; Δ is the slope of the vapour pressure curve, kPa °C−1. 2.4 Generating the optimal time–scale A-P coefficients for Rs and ET0 Previous studies have indicated the great spatiotemporal variations in the two fundamental coefficients (a and b) of the A-P formula. Hence, using fixed A-P coefficients can cause large errors in Rs estimation and further generate significant errors in ET0 with the P-M model (PM-ET0). However, local calibration of the coefficients a and b requires mass meteorological data, including Rs and other variables. Unfortunately, long-term measurements of Rs are always scarce for most areas worldwide. This study established a framework to generate the A-P coefficients with the optimal time scale for Rs and ET0 estimation over all of China (Figure 2). First, the temporal (daily, monthly, and yearly) and spatial variations of the A-P coefficients were assessed based on the benchmark values of 80 solar radiation measuring stations. Then, the performance of the three different time-scale A-P coefficients was evaluated in calculating Rs and further estimating ET0. Finally, the empirical regression functions and machine learning algorithms were employed to estimate the A-P coefficients with common meteorological and geographic variables. The optimal method was selected to estimate the A-P coefficients of 839 regular weather stations without direct Rs measurements. FIGURE 2 Open in figure viewer PowerPoint Flowchart of the generation of the optimal time-scale fundamental coefficients (a and b) of the Ångström-Prescott (A-P) formula in Rs and ET0 estimation for the entire China. Estimation of ET0 is conducted based on the Penman-Monteith (P-M) model. The SVM, Cubist, BP, and ELM represent four different machine learning methods of the support vector machine, Cubist model tree, back propagation neural network, and extreme learning machine, respectively. 2.4.1 Benchmark values of the A-P coefficients in different time scales This study focused on the variations of yearly, monthly, and daily values of the A-P coefficients. First, the benchmark values of coefficients a and b were obtained for the three time scales based on least squares regression for each of the 80 Rs measuring stations. All of the Rs measurements were used to fit the regression function for the yearly A-P coefficients. For the monthly A-P coefficients, the Rs measurements in the target month were used to fit the given month. The target-day Rs measurements were used to fit the A-P coefficients for the given day. Taking a station with 50 years of Rs measurements as an example, the number of data involved in the calibration of a and b were 18 250 (approx. 365 d × 50 a), 1500 (approx. 30 d × 50 a for each month), and 50 (50 a for each day) for the yearly, monthly, and daily scale, respectively. 2.4.2 Evaluating time–scale A-P coefficients for Rs and ET0 estimation The benchmark (daily, monthly, and yearly) and FAO–recommended values of the A-P coefficients were evaluated in the estimations of Rs and ET0 at the 80 Rs measuring stations. The estimates based on the four types of A-P coefficients above were compared directly with the daily measurements for Rs. For ET0, calculations based on the measured Rs and the P-M models (i.e., ET0 benchmark) were accepted as the standard ET0 values due to a lack of direct measurement. Then, the performance of the four A-P coefficients for ET0 estimation was assessed according to the deviation between the estimates and benchmarks. Finally, the time scale of A-P coefficients with the most minor errors in Rs and ET0 estimations was taken as the optimal time scale. The A-P coefficients with the relevant time scale were then estimated for all 839 regular weather stations. 2.4.3 Estimating A-P coefficients with empirical regression functions This study employed three empirical regression models and four machine-learning methods to estimate the A-P coefficients. Since the three empirical models can only estimate yearly (or time-invariant) A-P coefficients, the comparisons between empirical models and machine learning methods were only conducted at a yearly scale. For monthly and daily a and b, we evaluated the performances of different machine learning methods. Empirical model I based on mean annual air temperature Liu, Mei, Li, Wang, Zhang, and Porter (2009) established the estimation formula for the A-P coefficients based on the Rs records from 30 Rs measuring stations in the Yellow River Basin in northern China. This model employed only mean annual air temperature in the two–step model (Equations 5 and 6): (5) (6) where T represents the mean annual air temperature of the target site, °C. Empirical model II based on altitude Liu, Mei, Li, Wang, Zhang, and Porter (2009) also established another estimation function for a and b based only on site's altitude through a two-step method (Equations 7 and 8): (7) (8) where Z is the altitude of the target site, m. Empirical model III based on multiple variables Liu et al. (2014) further modified the above formulas by introducing additional variables (Equations 9 and 10). The new functions were established and evaluated based on the Rs records from 80 Rs measuring stations: (9) (10) where Z is altitude, m; n is sunshine hours, n; N is day length, n; ϕ is longitude; φ is latitude. 2.4.4 Estimating A-P coefficients with machine learning models The steps for establishing machine-learning models for the estimating A-P coefficients include normalizing of input data, determining key parameters of machine learning models, training and testing models, and applying the models (Chen et al., 2022). Four machine learning methods were employed to estimate the A-P coefficients at daily, monthly, and yearly scales based on the variables same as the Empirical model III. The four machine learning algorithms were a back propagation (BP) neural network, a Cubist model tree, a support vector machine (SVM), and an extreme learning machine (ELM). The optimal machine-learning algorithm was then used to estimate the relevant time–scale A-P coefficients at the 839 weather stations without Rs measurements. The Kriging method was selected to interpolate the 839–site A-P coefficients (Peng et al., 2022). Additionally, the four machine learning algorithms were also directly used to establish the ET0 estimation (ML-ET0) models based on the above variables and been compared with the PM-ET0. The algorithms were coded in the R language (R Core Team, 2013). BP neural network The BP (backpropagation) neural network is one kind of feed–forward network for supervised learning (Rumelhart et al., 1986). This algorithm minimizes the error between the actual and expected outputs through backpropagation to modify the key parameters of the network (Tian et al., 2020). This study used the nnet package in the R language to establish the BP model. The key parameters of this algorithm include the number of hidden nodes (size) and the weight attenuation parameter (decay). Cubist model tree The Cubist model tree was established based on the M5 tree algorithm (Quinlan, 1992). Predictions with the Cubist were conducted based on the combinations of several successive piecewise models. This study used the Cubist package in the R language to establish the Cubist model. The critical parameters of this algorithm include the number of boosting iteration models (committees) and the number of instances used to correct the rule–based prediction (neighbours). SVM algorithm The SVM (support vector machine) was established based on the Vapnik (1996) construct of support vectors. The SVM can minimize the error by adding the hyperplane to maximize the margin between prediction and observation (Drucker et al., 1997). The SVM is good at dealing with problems with small samples, nonlinearity, and high dimensionality and is extensively used in Rs estimation (Chen et al., 2013; He et al., 2020). This study adopted the e1071 package (Karatzoglou et al., 2004) in the R language to establish the SVM model. The kernel function was set as radial. The critical parameters of this algorithm include the effect of a single sample on the entire classification hyperplane (gamma) and the cost of constraint violation (cost). ELM algorithm The ELM method is also a feed-forward neuron network algorithm but much faster due to its better generalization capability (Huang et al., 2006). This study used the elmNNRcpp package in the R language to establish the ELM model. The critical parameters of this algorithm include the number of hidden neurons (nhid), the type of activation function (actfun), and the distribution from which the input weights and the bias were initialized (init_weights). 2.5 Statistical analysis This study used three statistical indicators to evaluate the A-P coefficients estimated with different methods, including the coefficient of determination (R2, Equation 11), the root mean square error (RMSE, Equation 12), and the normalized root mean square error (nRMSE, Equation 13). A larger R2 shows better model fitness and a smaller RMSE shows slight model deviation. The statistical nRMSE, originally the ratio between RMSE and the mean value of the relevant observations, was used to evaluate the estimation errors of different variables. A smaller nRMSE value usually indicates higher accuracy: (11) (12) (13) where m is the data sample size; xi is the ith estimation value; yi is the ith observed value; is the mean value of xi; is the mean value of yi. 3 RESULTS 3.1 Benchmark values of the A-P coefficients for different time scales The benchmark values of the a and b for the three time scales were obtained through linear regression at the 80 Rs measuring stations (Table 1) and Tables S1 and S2. Generally, the mean benchmark values of A-P coefficients were similar at the different time scales. The mean value ranges of a and b coefficients were 0.16–0.23 and 0.53–0.59, respectively. Compared with the FAO–recommended values (a = 0.25, b = 0.50), a large a and a small b are recommended for China. For coefficient a, the yearly benchmarks ranged from 0.12 to 0.29, while the daily benchmarks ranged from 0.01 to 0.61. For coefficient b, the yearly benchmarks ranged from 0.48 to 0.72, while the daily benchmarks ranged from 0.05 to 0.96. The largest mean values of the benchmarks were found in the MPZ zone for both the a and b. The smallest mean benchmark value was found in the SMZ zone for a and the TCZ zone for b. TABLE 1. Maximum (Max), minimum (Min), mean values, and standard errors (SE) of the benchmark values of coefficient a and b of the Ångström-Prescott (A-P) formula in the four climatic zones in China. Coefficient Region Site number Yearly Monthly Daily Max Min Mean ± SE Max Min Mean ± SE Max Min Mean ± SE a MPZ 7 0.29 0.20 0.23 ± 0.03 0.31 0.17 0.23 ± 0.08 0.47 0.01 0.23 ± 0.09 TCZ 16 0.27 0.18 0.22 ± 0.02 0.38 0.14 0.22 ± 0.05 0.61 0.01 0.23 ± 0.07 TMZ 23 0.28 0.14 0.19 ± 0.03 0.39 0.12 0.19 ± 0.04 0.57 0.02 0.20 ± 0.06 SMZ 34 0.21 0.12 0.16 ± 0.02 0.27 0.10 0.16 ± 0.03 0.36 0.01 0.16 ± 0.04 Total 80 0.29 0.12 0.19 ± 0.04 0.39 0.10 0.19 ± 0.05 0.61 0.01 0.19 ± 0.06 b MPZ 7 0.66 0.54 0.59 ± 0.04 0.70 0.48 0.58 ± 0.05 0.93 0.29 0.58 ± 0.08 TCZ 16 0.60 0.48 0.54 ± 0.04 0.64 0.35 0.53 ± 0.06 0.86 0.08 0.53 ± 0.09 TMZ 23 0.59 0.49 0.54 ± 0.03 0.64 0.34 0.54 ± 0.06 0.86 0.05 0.53 ± 0.08 SMZ 34 0.72 0.51 0.58 ± 0.04 0.78 0.45 0.57 ± 0.05 0.96 0.24 0.57 ± 0.07 Total 80 0.72 0.48 0.56 ± 0.04 0.78 0.34 0.56 ± 0.06 0.96 0.05 0.55 ± 0.08 Periodic variations were found in the benchmark values of a and b at daily and monthly scales at the four randomly selected representative stations (Station 55 299 in MPZ; Station 51 567 in TCZ; Station 54 511 in TMZ; Station 59 287 in SMZ) in China (Figure 3). For coefficient a, larger benchmark values were found in December, January, and February (winter) in the MPZ, TCZ, and TMZ zones. In contrast, smaller ones were found in June, July, and August (summer). Additionally, the temporal trends of b were contrary to a. Distributions of benchmark values of the two coefficients also varied among sites. Compared with the sites in the other three climatic zones, no noticeable temporal trend was found at Site 57 461 in the SMZ zone. FIGURE 3 Open in figure viewer PowerPoint Benchmark values of the a and b coefficients of the Ångström-Prescott (A-P) formula at the daily (dots), monthly (bars), and yearly (horizontal lines) scales at four representative sites of each climatic zones (Station 52 866 in MPZ; Station 50 527 in TCZ; Station 50 136 in TMZ; Station 57 461 in SMZ). 3.2 Estimating Rs and ET0 based on different time–scale A-P coefficients 3.2.1 Estimating Rs Superior performance in Rs estimation was obtained through the A-P formula with different values of the fundamental coefficients (Figure 4). The RMSE values of the four methods were all less than 3.1 MJ m−2 d−1, and R2 values were more significant than 0.85. Additionally, all of the four methods overestimated the Rs in the interval of 1–10 MJ m−2 d−1. However, Rs was underestimated with the FAO–recommended A-P coefficients, which generated the most errors, especially under the high Rs conditions (Figure 4d). The maximum estimation of the FAO–recommended coefficients was 31.3 MJ m−2 d−1 while the maximum observation was 41.6 MJ m−2 d−1. Compared with the Rs estimated with the FAO–recommended coefficients, a noticeable improvement was generated using the site–calibrated A-P coefficients. Meanwhile, the estimation errors of Rs were decreased with the finer temporal resolution of the A-P coefficients. The best Rs estimations were produced with the daily A-P coefficients (Figure 4c). FIGURE 4 Open in figure viewer PowerPoint Estimation of daily global solar radiation (Rs) with the yearly (a), month (b), and daily (c) scale calibration and the FAO recommendation (d) of the two fundamental coefficients of the Ångström-Prescott formula at the 80 Rs measuring stations in China. 3.2.2 Estimating ET0 The site–calibrated coefficients provided significant improvement in ET0 estimation was over the FAO recommended coefficients of the A-P formula (Figure 5a). The mean RMSEs were 0.34, 0.28, 0.29, and 0.30 mm d−1 in ET0 estimation using the FAO recommended, daily, monthly, and yearly calibrated A-P coefficients, respectively. The site–calibrated coefficients improved the estimation accuracy significantly compared to the FAO–recommended coefficients, especially in the SMZ. Additionally, there was an insignificant decreasing trend in errors for the site–calibrated A-P coefficients from yearly to daily scales. Further, an apparent spatial gradient of estimation errors increased from the north to the south (Figure 5d,e). The most remarkable errors were found in the SMZ for all four groups of coefficients, especially the FAO–recommended coefficients. Seven out of the 80 stations had RMSEs greater than 0.5 mm d−1; the largest RMSE was greater than 0.65 mm d−1. These three site–calibrated coefficients provided better estimations for most sites than the FAO-recommended coefficients did. The daily A-P coefficients achieved the most considerable improvement in ET0 estimation in the SMZ with all sites' RMSE less than 0.5 mm d−1. FIGURE 5 Open in figure viewer PowerPoint RMSE for ET0 estimation based on the site-calibrated and FAO-recommended values of the fundamental coefficients of the Ångström-Prescott (A-P) formula. The A-P coefficients were calibrated at the daily, monthly, and yearly scales. The dark red dot shows the mean value of each box. The symbol * shows the significance level, and ns represents no significance. The four different A-P coefficients in ET0 estimation were evaluated in different months (Figure 6). Generally, the FAO–recommended site–calibrated coefficients produced the largest errors in ET0 in all months. Compared with the FAO–recommended coefficients, the site–calibrated coefficients significantly improved estimation accuracy throughout the year, especially from April to September. The best estimates were provided through the Rs obtained with the daily A-P coefficients. However, these three site–calibrated coefficients in ET0 estimation had almost no significant difference. Additionally, larger estimation errors were found in hot seasons (the mean RMSE >0.3 mm d−1) than in cold seasons (the mean RMSE <0.2 mm d−1). FIGURE 6 Open in figure viewer PowerPoint Temporal variation of RMSE for ET0 estimations based on the estimated Rs and the Penman-Monteith model. The Rs is estimated through the Ångström-Prescott formula with the daily, monthly, and yearly coefficients. The number above each sub-figure shows the month index. The symbol * shows the significance level, and ns represents no significance. Generally, the ET0 estimated with the PM–ET0 models showed greater variations (Table 2). Using the P-M model combing daily A-P coefficients provided the best ET0 estimations among these eight models. However, the ET0 estimations based on the FAO recommended A-P coefficients obtained the largest estimation errors. Compared with the PM–based methods, the four ML-ET0 methods obtained similar accuracies in ET0 estimation, the RMSEs were all greater than 0.97, RMSEs less than 0.31 mm d−1, and nRMSEs less than 12%. Notably, the PM-ET0 model with the yearly A-P coefficients obtained similar estimation accuracy as the machine–learning models. The difference of RMSE and nRMSE were less than 0.003 mm d−1 and 0.3% between the PM-ET0 with yearly coefficients and the ML-ET0 model with SVM. The results proved that the P-M model combined with site–special A-P coefficients was potential for ET0 estimation due to acceptable accuracy and convenience. TABLE 2. Coefficient of determination (R2), root mean square error (RMSE, mm d−1), and normalized root mean square error (nRMSE, mm d−1) of ET0 estimations with BP, Cubist, ELM, and SVM. The grey-shaded cells show the approach obtains the highest estimation accuracy. ET0 category Methods R 2 RMSE (mm d−1) nRMSE (%) PM-ET0 Daily 0.974 0.287 10.9 Monthly 0.972 0.293 11.1 Yearly 0.970 0.305 11.6 FAO 0.961 0.375 14.2 ML- ET0 BP 0.972 0.309 11.6 Cubist 0.973 0.305 11.4 ELM 0.972 0.306 11.4 SVM 0.973 0.302 11.3 Note: The PM-ET0 represents the Penman-Monteith model derived by the Rs estimated with the Ångström-Prescott formula. The ML-ET0 represents the ET0 estimated directly with machine learning. 3.3 Optimal methods for estimating the A-P coefficients 3.3.1 Yearly A-P coefficients Generally, the machine learning methods outperformed the empirical models in estimating both a and b (Figure 7). The nRMSEs were 16.8%–23.6% for a and 6.5%–8.8% for b. The empirical models underestimated a but overestimated b at most sites (Figure 7a,c). Empirical model III provided similar estimate distribution as benchmarks and produced the smallest errors. However, the three empirical models performed poorly at the sites with extreme benchmark values. Compared with the empirical models, all four machine learning methods obtained good estimates of the a and b coefficients, especially for a (Figure 7b,d). The nRMSEs were 10.2%–11.3% for a and 4.8%–5.6% for b. Hence, the machine learning methods were more accurate and promising for estimating the a and b coefficients of the A-P formula. Among the four machine learning methods, the SVM and Cubist provided the most negligible errors for the a and b, respectively. FIGURE 7 Open in figure viewer PowerPoint Comparisons between the a and b coefficients of the Ångström-Prescott (A-P) formula estimated with three empirical models (Model I, II, and III; a, c) and four machine learning methods (BP, Cubist, ELM, and SVM; b, d) at the 80 Rs measuring stations. 3.3.2 Monthly A-P coefficients Compared with the yearly values of the a and b coefficients, large errors were obtained in the estimates of monthly values at the training stages (Table 3). The nRMSEs were 3.8%–8.4% for a and 3.5%–6.8% for b. The highest estimation accuracy was provided in the MPZ, which was the same as the yearly coefficients. Larger errors arose in the TCZ and TMZ zones. The optimal machine learning methods were also different in the estimating the A-P coefficients. For a, the Cubist method outperformed the other three methods in two climatic zones and all of China. The corresponding RMSEs and nRMSEs were 0.008–0.014 and 3.8%–8.6%. However, for b, the BP method outperformed the other three methods at three zones and all of China. The corresponding RMSEs and nRMSEs values were 0.018–0.026 and 3.1%–5.0%. TABLE 3. Evaluation of the four machine learning methods (MLM) in the estimations of monthly a and b coefficients of the Ångström-Prescott (A-P) formula in the four climatic zones and entire China. The grey-shaded cells show the approach obtains the highest estimation accuracy. Region MLM Coefficient a Coefficient b R 2 RMSE nRMSE (%) R 2 RMSE nRMSE (%) MPZ BP 0.916 0.008 3.8 0.791 0.021 3.6 Cubist 0.877 0.011 5.1 0.793 0.021 3.6 ELM 0.833 0.012 5.5 0.823 0.020 3.5 SVM 0.692 0.017 7.6 0.721 0.024 4.2 TCZ BP 0.845 0.020 8.7 0.832 0.026 5.0 Cubist 0.773 0.023 10.4 0.721 0.034 6.5 ELM 0.791 0.023 10.2 0.550 0.044 8.5 SVM 0.853 0.019 8.6 0.702 0.035 6.8 TMZ BP 0.755 0.024 11.9 0.871 0.021 4.0 Cubist 0.925 0.013 6.5 0.827 0.025 4.6 ELM 0.818 0.020 10.3 0.859 0.023 4.2 SVM 0.836 0.019 9.7 0.792 0.027 5.1 SMZ BP 0.854 0.011 7.2 0.877 0.018 3.1 Cubist 0.889 0.009 6.3 0.880 0.018 4.1 ELM 0.755 0.014 9.5 0.774 0.024 4.2 SVM 0.881 0.010 6.4 0.829 0.021 3.6 National BP 0.881 0.017 9.1 0.879 0.021 3.8 Cubist 0.914 0.014 7.7 0.842 0.024 4.3 ELM 0.868 0.018 9.7 0.778 0.029 5.2 SVM 0.898 0.016 8.4 0.808 0.026 4.8 3.4 Estimating the A-P coefficient without Rs measurement 3.4.1 Generating the yearly A-P coefficients The yearly values of the A-P coefficients were estimated for the 839 regular weather stations with the selected optimal machine learning method of SVM (Figure 8 and Tables S1 and S2). Compared with the site–calibrated values (Table 1), the machine learning methods provided similar ranges for a and b. Generally, remarkable spatial variations were found for the two coefficients in the four different climatic zones. Larger coefficient values were mainly found in the MPZ and TCM, while smaller values were obtained in the SMZ and TMZ. The estimate distributions of a revealed a positive correlation with altitude. The coefficient b showed an opposite distribution to a. The largest estimated b was found in the MPZ, followed by the SMZ, TMZ, and TCZ. FIGURE 8 Open in figure viewer PowerPoint Estimation of yearly-scale coefficients a (a) and b (b) of the Ångström-Prescott (A-P) formula with the optimal machine learning algorithm at the 839 national weather stations. The optimal machine learning algorithms selected for estimating the coefficients a and b are SVM and Cubist, respectively. 3.4.2 Generating the monthly A-P coefficients The monthly coefficient of a was estimated with the optimal machine learning method of Cubist for the 839 regular weather stations and further interpolated over all of China (Figure 9; Table S3). For a, larger values were found in northern and western China. In comparison, smaller values were found in southeast China (especially in the SMZ). There were also noticeable temporal variations of the coefficient a in different months. Extreme values were in the cold season (Figure 9a,b,l), which resulted in the largest ranges of a. Further, the smallest spatial variation for a was in September and October (Figure 9i,j). FIGURE 9 Open in figure viewer PowerPoint Spatial distributions of monthly coefficient a of the Ångström-Prescott (A-P) formula. The distributions are generated with the Kriging interpolation method based on the estimated coefficients a at 839 national weather stations through the Cubist. The values of monthly b were generated with the optimal machine learning method of BP (Figure 10; Table S4). Generally, b showed the opposite spatiotemporal distributions to a. Larger values were found in south eastern China during cold seasons (Figure 10a,b,l). However, the spatial patterns of b were similar to a in September and October since the coefficient varied over a smaller range than in other months. FIGURE 10 Open in figure viewer PowerPoint Spatial distributions of monthly coefficient b of the Ångström-Prescott (A-P) formula. The distributions are generated with the Kriging interpolation method based on the estimated values of coefficients b at 839 national weather stations through the BP. 3.5 ET0 estimation without Rs measurements Daily Rs values, calculated through the A-P formula based on the FAO–recommended and the machine learning–based coefficients, were compared at the 839 regular weather stations without direct Rs measurement (Figure 11). In general, both types of A-P coefficients produced similar distributions of ET0 in different meteorological zones. Difference of ET0 estimated with these A-P coefficients in the TCZ and SMZ was more significant than those in the other two meteorological zones. However, there were still differences between these two kinds of A-P coefficients in ET0 estimation in the four zones. Compared with the machine learning–based coefficients, ET0 was slightly overestimated in MPZ and TCZ while being significantly underestimated in TMZ and SMZ by the FAO–recommended coefficients. Notably, there was almost no difference between the two groups of ET0 estimated in the TCZ. FIGURE 11 Open in figure viewer PowerPoint Estimation of ET0 for the 839 weather stations without direct Rs measurements in the four meteorological zones in China. Daily Rs used to drive the P-M model is calculated based on the Ångström-Prescott formula with the FAO-recommended coefficients (red) and yearly estimates based on the optimal machine-learning model (blue). The symbol * shows the significance level, and ns represents no significance. 4 DISCUSSION 4.1 Spatiotemporal variations of A-P coefficients The A-P formula has been extensively applied for daily Rs estimation because of the simple data requirements and acceptable performance (Li et al., 2012). However, some earlier researchers found that the two fundamental coefficients of the A-P formula were site–dependent (Chen et al., 2006; Jin et al., 2005). Hence, these coefficients must be calibrated locally to guarantee satisfactory accuracy for daily Rs estimation. In this study, the linear regression method calibrated different time–scale benchmarks of the A-P coefficients at 80 national Rs measuring stations. Larger mean a benchmarks were found in the MPZ and TCZ zones with a dry climate and high altitude, while smaller mean a benchmarks were found in the SMZ zone with a wet environment and low altitude. Coefficient a varies with the season. Larger values of a were found in winter (dry), while b showed the opposite trend in China. Adaramola (2012) reported that the A-P coefficients varied with geographical location and weather conditions. Liu et al. (2012) calibrated the benchmarks for the A-P coefficients and obtained similar distributions of the variable values as in this study. They also pointed out that a and the sum of a and b correlate with altitude positively. This study showed that the benchmarks for a were mainly less than 0.25 (mean value is 0.19), while those for b was notably greater than 0.50 (mean value is 0.56) (Table 1). Liu et al. (2014) calibrated the A-P coefficients at different sites across China and found that the mean values were 0.18 and 0.56 for coefficients a and b, respectively. Hence, there are apparent differences between the calibrations and the FAO recommendation, which can cause significant errors in the estimation of daily Rs (Figure 4). Additionally, the largest differences between the A-P coefficients recommended by the FAO and those calibrated in this study were in the SMZ. Xia et al. (2021) pointed out that the FAO recommendations are advised in northern China, including the northeast, North China Plain, and the Loess Plateau. Liu, Mei, Li, Wang, Zhang, and Porter (2009) found that the FAO recommendations can provide acceptable Rs estimations where the altitude exceeds 1928 m. Thus, worse ET0 estimates were found in the SMZ in south eastern China with lower altitudes when using the FAO–recommended values (Figure 5). 4.2 Empirical and machine learning methods in A-P coefficient estimation Machine learning is widely used for Rs and ET0 estimations due to the flexible combination of predictors and satisfactory accuracy in dealing with nonlinear problems (Fan et al., 2020; Gürel et al., 2020). However, machine learning works as a “black–box” model and usually becomes overfitted (Zhang et al., 2018). The performance of machine learning models is restricted by data training (Dong et al., 2022). Applying machine learning models would be inefficient when the scenario does not appear in the training dataset (Shu et al., 2022). Hence, the parameterization of the P-M model with machine learning can take advantage of the generalization ability of machine learning and the physical basis of the P-M models. This study used optimal machine learning algorithms to estimate the A-P coefficients of stations without Rs measurements. The coefficients were further used to calculate Rs to drive the P-M model to estimate the daily ET0. Satisfactory accuracy was obtained, indicating an exciting potential for combining machine learning with physical–process models for geoscientific predictions. We compared the empirical and machine learning methods in estimating the A-P coefficients. In general, the machine learning methods outperformed the empirical models, especially for the stations with extreme a and b values (Figure 7). Large variations were found in the estimates of a and b among the empirical models, despite they were specially established for China. As in this study, the three empirical models published by Liu et al. (2009 and 2014) were established based on meteorological measurements over different periods. Hence, recalibrating the fundamental coefficients of the three empirical models may better estimate the A-P coefficients. Generally, the machine learning methods could better estimate the a and b coefficients than the empirical models. The machine learning methods performed exceptionally well at sites with extreme values of a and b. Fan et al. (2020) pointed out that machine learning methods take advantage of dealing with nonlinear problems with dispensable prior knowledge. Hence, machine learning methods have been widely used in direct estimation of solar radiation (Lu et al., 2023; Wang et al., 2017) and evapotranspiration (Niu et al., 2021). We evaluated the ET0 estimated with machine learning methods and the PM-AP model with missing Rs measurements. The results indicated that using Rs estimations based on the daily and monthly A-P coefficients outperformed machine learning models in ET0 estimation (Table 2). Since the estimations of the A-P coefficients have been produced in this study, the PM-ET0 model is recommended for ET0 estimation in China for researches who are not good at computer programing when only Rs data are missing. However, the A-P coefficients were estimated with the machine learning models that established based on observations from sparsely distributed stations. For example, there were only 7 and 16 stations in the MPZ and TCZ, respectively. Thus, the machine learning models and the A-P coefficient interpolation require further evaluation in these zones. Additionally, only four common machine learning algorithms were employed in this study. Searching for more efficient machine learning models for the parameterization of physical models is promising for geoscientific predictions (Nearing et al., 2021). In the further, we will investigate new machine learning and deep learning methods in estimating Rs and ET0. 4.3 Different time–scale A-P coefficients in Rs and ET0 estimation Great variation was found among the different time-scale A-P coefficient benchmark values (Table 1). The ranges of daily A-P coefficients were more extensive than their yearly ones, which may be caused by the data size used for linear regression (Liu, Mei, Li, Zhang, Wang, et al., 2009). The data size used for calibrating the values of A-P coefficients decreased substantially with a temporal gradient from yearly to daily scales. Compared with Rs estimates with monthly and yearly A-P coefficients (both benchmarks and FAO recommendation), the Rs errors caused due to daily A-P coefficients were the smallest across China. Soler (1990) used monthly values in Rs estimation and obtained better results in Europe. Podestá et al. (2004) pointed out that seasonal or finer time–scale A-P coefficients should be used to eliminate the systematic residuals of Rs estimation. However, the daily A-P coefficients slightly outperformed the monthly and yearly coefficients. The errors of Rs were further transferred to the ET0 estimation through the P-M model. The ET0 estimation driven by the Rs estimated with the daily A-P coefficients provided the highest accuracy. Moreover, there was a nonsignificant difference among these three time–scale A-P coefficients in ET0 estimation. Due to their convenience and accuracy, the yearly A-P coefficients are more suitable for estimating of daily Rs and ET0 in China. 5 CONCLUSION This study proposes a new method for estimating ET0 with missing Rs by combining machine learning with physical–based P-M models. Firstly, four machine learning algorithms were used to parameterize the fundamental coefficients of the A-P formula at different time scales (daily, monthly, and yearly). Then, the estimated A-P coefficients were used to calculate Rs to drive the P-M model for ET0 estimation (PM-ET0). Additionally, ET0 values were also directly estimated with machine learning methods (ML-ET0). Values of the a descended from northwest to southeast China while the b shared an opposite distribution. The two coefficients were more scattered in the daily scale, followed by the monthly and yearly scales. Compared with the benchmarks, the FAO recommended a large a, but a small b for most stations in China, which resulted in the largest errors both in Rs and ET0, especially in south eastern China. Estimation of ET0 with the FAO-recommended coefficients significantly improved by all of the site–calibrated A-P coefficients at different time scales, especially during the growing season from April to September. However, an insignificant decreasing gradient was found in ET0 estimation with the A-P coefficients from the yearly to daily scales. Compared with the PM-ET0, the ML-ET0 outperformed the ET0 estimated with yearly A-P coefficients but underperformed those estimated with daily and monthly ones. Further machine learning methods were more reliable in estimating the A-P coefficients than empirical regression methods. Hence, in terms of robustness and convenience, using the A-P formula with yearly A-P coefficients to calculate Rs to drive the P-M model for ET0 estimation is superior in China. ACKNOWLEDGEMENTS The authors thank the precious suggestions by anonymous reviewers and editors, which have greatly helped the improvement of the paper. This research was supported by the Natural Science Foundation of China (42021004), the Open Foundation of Jiangsu Key Laboratory of Agricultural Meteorology (JKLAM2305), the National Key R&D Program of China (No. 2018YFB1500901), the Natural Science Foundation of China (52079115, 41975143), the Key Research and Development Program of Shaanxi (2019ZDLNY07-03), and the Startup Foundation for Introducing Talent of NUIST (2023r101). Open Research Supporting Information REFERENCES Volume38, Issue2 February 2024 e15091 Figures References Related Information Recommended Calculating Sunshine Hours and Reference Evapotranspiration in Arid Regions When Solar Radiation Data are Limited Mohamed H. Abd el-wahed,  Richard L. Snyder Irrigation and Drainage Crop Evapotranspiration Mladen Todorović Encyclopedia of Water: Science, Technology, and Society, [1] Crop Evapotranspiration Mladen Todorovic Water Encyclopedia, [1] Analysis and partitioning of terrestrial water storage in the Yellow River source region Xia Li,  Zuhao Zhou,  Jiajia Liu,  Chongyu Xu,  Junqiang Xia,  Pengxiang Wang,  Hao Wang,  Yangwen Jia Hydrological Processes Getting your money's worth: Testing the value of data for hydrological model calibration Jan Seibert,  Franziska M. Clerc-Schwarzenbach,  H. J. (Ilja) van Meerveld Hydrological Processes Download PDF Additional links ABOUT WILEY ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage Cookies Accessibility Wiley Research DE&I Statement and Publishing Policies Developing World Access HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES Subscription Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related companies. All rights reserved, including rights for text and data mining and training of artificial technologies or similar technologies."

Paper 4:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution.
  Extract 2: Decisions related to real-time irrigation system actuation without manual intervention to optimize water usage, minimize water waste, and improve crop yields.
  Limitations: >
  Relevance Evaluation: **Highly relevant**

The explanation provides a concise and accurate summary of the study's purpose, methodology, and approach to model selection. It highlights the key steps involved, including data preprocessing, hyperparameter optimization, and model selection based on performance metrics.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The study's primary goal is to find the best prediction models for daily minimum and maximum temperatures by optimizing hyperparameters using Bayesian optimization and an asynchronous successive halving algorithm.  The approach consists of three steps:

1. **Data Preprocessing:** Remove outliers and missing values, perform time series decomposition using PACF to identify potential inputs, and select significant inputs using a combination of F-test, MRMR, and NCA.

2. **Hyperparameter Optimization:** Train multiple models using different hyperparameter settings for each selected input variable. Optimize hyperparameters using Bayesian optimization and asynchronous successive halving algorithm.

3. **Model Selection:** Select the best model based on various performance metrics (accuracy, correlation, Nash–Sutcliffe Efficiency Coefficient, Willmott's Index of Agreement, Kling Gupta Efficiency, Root Mean Squared Error, Normalized Root Mean Squared Error, Mean Absolute Percentage Relative Error, Median Absolute Deviation, Mean Bias Error, Percentage Bias) on both training and test datasets.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all     Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Agriculture All Article Types Advanced   Journals Agriculture Volume 14 Issue 2 10.3390/agriculture14020278 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editors Miltiadis Iatrou Christos Karydas Panagiotis Tziachris Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 743 Table of Contents Abstract Introduction Materials and Methods Results and Discussion Conclusions Author Contributions Funding Institutional Review Board Statement Data Availability Statement Acknowledgments Conflicts of Interest References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle Automated Model Selection Using Bayesian Optimization and the Asynchronous Successive Halving Algorithm for Predicting Daily Minimum and Maximum Temperatures by Dilip Kumar Roy 1,*, Mohamed Anower Hossain 1, Mohamed Panjarul Haque 1, Abed Alataway 2, Ahmed Z. Dewidar 2 and Mohamed A. Mattar 2,* 1 Irrigation and Water Management Division, Bangladesh Agricultural Research Institute, Gazipur 1701, Bangladesh 2 Prince Sultan Bin Abdulaziz International Prize for Water Chair, Prince Sultan Institute for Environmental, Water and Desert Research, King Saud University, Riyadh 11451, Saudi Arabia * Authors to whom correspondence should be addressed. Agriculture 2024, 14(2), 278; https://doi.org/10.3390/agriculture14020278 Submission received: 3 November 2023 / Revised: 15 January 2024 / Accepted: 31 January 2024 / Published: 8 February 2024 (This article belongs to the Special Issue Application of Machine Learning and Data Analysis in Agriculture) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract This study addresses the crucial role of temperature forecasting, particularly in agricultural contexts, where daily maximum ( 𝑇 𝑚𝑎𝑥 ) and minimum ( 𝑇 𝑚𝑖𝑛 ) temperatures significantly impact crop growth and irrigation planning. While machine learning (ML) models offer a promising avenue for temperature forecasts, the challenge lies in efficiently training multiple models and optimizing their parameters. This research addresses a research gap by proposing advanced ML algorithms for multi-step-ahead 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 forecasting across various weather stations in Bangladesh. The study employs Bayesian optimization and the asynchronous successive halving algorithm (ASHA) to automatically select top-performing ML models by tuning hyperparameters. While both the Bayesian and ASHA optimizations yield satisfactory results, ASHA requires less computational time for convergence. Notably, different top-performing models emerge for 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 across various forecast horizons. The evaluation metrics on the test dataset confirm higher accuracy, efficiency coefficients, and agreement indices, along with lower error values for both 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 forecasts at different weather stations. Notably, the forecasting accuracy decreases with longer horizons, emphasizing the superiority of one-step-ahead predictions. The automated model selection approach using Bayesian and ASHA optimization algorithms proves promising for enhancing the precision of multi-step-ahead temperature forecasting, with potential applications in diverse geographical locations. Keywords: temperature forecasts; automated machine learning; Bayesian optimization; asynchronous successive halving algorithm; Bangladesh 1. Introduction The temperature variable stands out as one of the atmospheric parameters with the highest accuracy, contributing to enhanced reliability in weather forecasts. Precisely predicting the air temperature at a specific location and time is a crucial research challenge with diverse applications, spanning from energy generation to agriculture. Climate scientists anticipate that the escalating air temperatures in the forthcoming decades may lead to adverse environmental impacts [1]. The demand for temperature forecasts in the agricultural sector is growing for both maximum ( 𝑇 𝑚𝑎𝑥 ) and minimum ( 𝑇 𝑚𝑖𝑛 ) temperatures, as these significantly influence crop growth and potential yield. It is a key research topic in atmospheric sciences, with potential applications to the agricultural sector [2]. Daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 serve as valuable indicators of crop growth and yield, as they can be used to predict the irrigation water requirements for crops. Consequently, predicting the daily 𝑇 𝑚𝑎𝑥 is a significant issue, with practical applications in crop science, as it has been demonstrated that irrigation water requirements depend greatly on weather conditions. According to Allen et al. [3] and Ali [4], irrigation water requirements are closely linked to weather parameters such as temperature, relative humidity, sunshine hours, wind speed, and rainfall. Among these, temperature stands out as a key factor, influencing not only the determination of irrigation water requirements but also facilitating plant growth through the photosynthesis process. Notably, both maximum and minimum temperatures play a crucial role in shaping irrigation water requirements and crop scheduling, as expounded by Wang et al. [5] and Haque et al. [6]. The connection between temperature forecasting and agriculture is profound, as temperature significantly influences various aspects of crop growth and development [7,8]. Temperature forecasts play a crucial role in agriculture by providing valuable information for planning and decision making across various agricultural activities. Temperature forecasts offer essential insights into various aspects of agriculture, including crop growth, pest management, irrigation, harvest timing, climate change adaptation, and resource management [9]. By incorporating accurate temperature forecasts into agricultural practices, farmers can make informed decisions, optimize resource allocation, enhance productivity, and mitigate risks, ultimately contributing to the development of sustainable and efficient agricultural systems. Therefore, the present study aims to provide multi-step-ahead forecasts for both 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 in three distinct climatic zones of Bangladesh. The precise prediction of air temperatures has attracted the attention of researchers in recent years. This is because precise temperature forecasting has a wide range of applications in fields such as climate science, agriculture, energy management, and urban planning [10]. Temperature forecasting has been continuously evolving for nearly a century, since the inception of weather forecasting. According to the literature, there are two fundamental methods for predicting weather forecasting, including air temperature and precipitation forecasting: general circulation or physically based simulations and statistical modeling [11,12,13,14]. Physically based models are classic approaches that utilize computer simulations based on mathematical equations and are often referred to as numerical weather prediction models [15,16]. However, physically based models are constrained by the need for significant computing power and a clear understanding of the system being modeled. On the other hand, statistical models aim to reduce the reliance on physically based models. They are easier to understand and less computationally complex than their physically based counterparts. Typically, statistical models are applied to the outputs of numerical weather prediction models. Most studies have demonstrated that results from statistical models and physical models are generally consistent. There are two types of statistical analysis [17]: correlation techniques and regression approaches. Regression approaches primarily rely on machine learning (ML)-based data-driven methodologies, which have gained popularity in the prediction and forecasting of air temperatures [1,18,19,20]. However, it is observed that in the absence of transient weather systems, the daily cycle of temperature is more or less well defined. Therefore, a classic regression model could often be utilized to forecast the air temperature when there is no cloud cover during the data acquisition process. Nevertheless, accurately predicting the air temperature using classic regression methods poses a challenge, given the chaotic nature and nonlinear trends of weather parameters. In such scenarios, ML-based methods have proven to be viable alternatives to classic regression models. In recent years, various soft computing approaches have been applied to address temperature prediction challenges in diverse areas. Many of these approaches have harnessed the power of neural computing techniques, known for their speed and accuracy [10]. Specifically, ML-based approaches to air temperature prediction involve the application of various methods, including Artificial Neural Network (ANN) [21], genetic algorithm-tuned ANN [22], Honey Badger Algorithm-tuned ANN [23], Gene Expression Programming [23], Support Vector Regression [14,17,21,24,25], Multi-Layer Perceptron [1,14], Multi-Variate Adaptive Regression Spline [26], Extreme Learning Machine [26,27], M5 Prime [28], Random Forest [17,26,29,30], Lasso Regression [29], Regression Tree [17], Long Short-Term Memory Network (LSTM) [1,31], GRU-LSTM [32], Convolutional Neural Network (CNN) [29], CNN-LSTM [1,33,34], Simple Recurrent Neural Network with Convolutional Filters [35], and Stochastic Adversarial Video Prediction [35]. Cifuentes et al. [18] provided a detailed review of air temperature forecasting approaches using ML techniques. These forecasting methods have consistently demonstrated improved prediction results. Implementing new techniques in temperature forecasting is crucial for reducing modeling errors and mitigating model parameter uncertainties [36]. However, achieving higher forecast accuracy with a desired model remains a complex scientific challenge. In this article, we are not referring to the relationship between NWP and ML models; rather, we propose a new approach based on ML-based modeling to address the inherent limitations of NWPs, such as the need for well-defined prior knowledge and extensive computational capacity. In contrast, ML techniques excel at identifying hidden patterns in the dataset without requiring prior knowledge. Thus, these approaches may serve as suitable alternatives to NWPs in weather forecasting. Previous studies on temperature forecasting employed various ML approaches and optimization algorithm-tuned ML models, including the deep learning approaches. These studies compared a few modeling approaches and proposed the best predictive model based on the comparison results. However, this approach is limited by the need to select appropriate candidate models for comparison and to identify the top-performing model. In other words, traditional ML-based approaches to temperature forecasting involve manual model selection, which can be time-consuming and subjective. To address these limitations, it is often beneficial to compare multiple approaches while optimizing their tunable hyperparameters using optimization algorithms to identify the most suitable prediction or forecast model for a given dataset. This process of automatic model selection involves automatically choosing the most appropriate regression model for a given dataset. The objective is to find the model that best fits the data and provides the most accurate predictions. To this end, the present study proposes an automated model selection technique to enhance forecasting accuracy and streamline the modeling process. Bayesian optimization [37] and the asynchronous successive halving algorithm (ASHA) [38] were employed to search for the top-performing model by tuning hyperparameters. The selection of significant input variables is a critical step in ML-based modeling applications. It involves the identification and selection of the most relevant and informative features from the available dataset [39,40]. This process is fundamental in ML-based forecasting models, as it plays a vital role in improving predictive performance, reducing overfitting, enhancing computational efficiency, and improving the interpretability of ML-based models. It enables models to leverage the most relevant and informative features, leading to more accurate, efficient, and interpretable predictions in various applications and domains. Previous studies have utilized both linear methods [41] and nonlinear techniques [40], including Minimum Redundancy Maximum Relevance (MRMR) [42] approaches, to identify the most significant input variables for forecast models. One promising approach to identifying the most influential input variables is the utilization of F-tests. F-tests are a common approach to assessing the importance of individual features in predicting a continuous target variable. In this approach, each feature is evaluated independently based on its relationship with the target variable, using the F-statistic and associated p-value. It is important to note that while univariate feature ranking provides insights into an individual feature’s importance, it does not capture potential interactions or dependencies between features. Therefore, it is essential to complement this analysis with other feature selection or dimensionality reduction techniques to consider the combined effects of multiple features and capture complex relationships in the regression model. Another approach to significant input variable selection is the use of MRMR, a popular technique for selecting a subset of features that are both informative and minimally redundant. MRMR aims to maximize the relevance of features to the target variable while minimizing the redundancy between the selected features. Neighborhood Component Analysis (NCA) is another feature selection technique that aims to find an optimal subset of features for a given classification or regression task. NCA is a distance-based feature selection method that learns a linear transformation of the original feature space to maximize the discriminability of the data points. In the present study, a combination of all variables that were selected by the individual variable selection approaches was used to include all possible contributing variables affecting the outputs. In this proposed approach, the common variables that were determined by all approaches were used only once. Traditional machine learning (ML) approaches for temperature prediction typically entail manual model selection, a process that is known to be time-consuming and subjective. Addressing these challenges, it proves advantageous to compare multiple approaches and optimize their tunable hyperparameters through optimization algorithms. This helps identify the most suitable prediction or forecast model for a given dataset. This research introduces an innovative approach to automated model selection by employing Bayesian optimization and the asynchronous successive halving algorithm, providing a systematic and efficient method for choosing the most suitable models in predicting daily minimum and maximum temperatures. The incorporation of the ASHA algorithm contributes to enhancing the efficiency of the model selection process, particularly in scenarios where computational resources are limited or asynchronous evaluations are necessary. The research addresses the challenge of model selection in a robust and adaptive manner through optimizing model hyperparameters, providing a valuable contribution to the broader field of machine learning and climate science. Finally, by emphasizing the application of advanced optimization techniques in the field of temperature prediction, the study contributes to a broader understanding of automated model selection strategies in environmental forecasting, potentially paving the way for similar methodologies in related domains. To the best of the authors’ knowledge, there have been no prior attempts to predict and forecast temperatures using optimization algorithms such as Bayesian optimization and ASHA for automatic model selection. This underscores the novel contribution of the current study. The agricultural sector stands to benefit significantly from the evolution of machine learning (ML) models, especially with a focus on enhancing computational efficiency. The advancement of ML models, particularly in the context of agriculture, has led to a growing interest in developing less computationally expensive models to their enhance scalability and accessibility [37]. Bayesian optimization emerges as a promising approach in this regard, offering a systematic method for optimizing the hyperparameters of ML models with a reduced computational burden. Utilizing Bayesian optimization empowers researchers to refine temperature models with increased effectiveness, thereby facilitating advancements in precision agriculture and the accuracy of climate-related predictions. On the other hand, the ASHA optimization algorithm further complements this effort by parallelizing the model training process, thereby expediting the optimization procedure [38]. This strategy offers an effective means of optimizing hyperparameters, streamlining the training process, and making models more accessible in the context of agriculture. In agricultural applications, where the need for real-time decision making is crucial, the implementation of less computationally intensive ML models can significantly improve efficiency [43]. The incorporation of Bayesian and ASHA optimization techniques contributes to the sustainable evolution of precision agriculture and climate-related predictions. This study aims to train several regression models using Bayesian and ASHA optimizations on a given training dataset and identify the best-performing model on a test dataset. The objective is to investigate the effectiveness of the Bayesian and ASHA optimization algorithms in forecasting daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values and to provide a comparison of these two optimization algorithm-tuned models. By automating the model selection process, we aim to overcome the limitations of manual selection, such as subjectivity and suboptimal choices. Our proposed approach automates and eliminates manual steps that are required to go from a dataset to a predictive model. We present a novel approach that automates the model selection process for temperature forecasting, offering a more objective and efficient alternative to manual selection. Therefore, the contributions of this study encompass (a) building multiple regression models for a given training dataset of 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 by optimizing their hyperparameters using Bayesian and ASHA optimization algorithms, (b) performing a comparative analysis of models tuned by Bayesian and ASHA optimization algorithms, and (c) identifying the top-performing models for multiple forecast horizons at three weather stations. 2. Materials and Methods 2.1. Study Area and the Data Daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 data were collected from three meteorological stations, namely, Barishal, Gazipur, and Ishurdi stations. The selection of these stations was based on their representation of three distinct climatic regions in Bangladesh: (1) Gazipur station represents the central region of Bangladesh, situated at approximately 24.00° N latitude and 90.43° E longitude, with an elevation of 14 m above mean sea level; (2) Ishurdi station represents the northern climatic regions of Bangladesh, located at around 24.04° N latitude and 90.07° E longitude, with an elevation of 18 m above mean sea level; and (3) Barishal station represents the southern part of Bangladesh, positioned at approximately 22.60° N latitude and 90.36° E longitude, with an elevation of 1.0 m above mean sea level. The study area, including the locations of these three weather stations, is depicted in Figure 1. Figure 1. Study area indicating the positioning of the weather stations. This study utilizes medium-term daily temperature data obtained from the Bangladesh Meteorological Department (BMD) across three weather stations to provide multi-step-ahead temperature forecasts. The maximum and minimum temperatures of the day were measured using Zeal P1000 maximum and minimum thermometers from G. H. Zeal Ltd., London, UK. The thermometers have an accuracy of ±0.2 °C and a range and resolution of −50 to +70  °C with 0.1  °C increments, and they were positioned at a measurement height of 2 m. The geographical distribution of meteorological stations is illustrated in Figure 1, depicting a reasonable coverage of three distinct regions across the country. Notably, Bangladesh’s topography is predominantly flat, with some elevated regions in the northeast and southeast. Consequently, it is reasonable to infer that the selected meteorological stations comprehensively represent the climatic conditions of the three regions of the country [44]. The temperature distribution in Bangladesh is significantly influenced by various local conditions. The country’s proximity to the equator contributes to a predominantly tropical climate, characterized by high temperatures throughout the year. The Bay of Bengal, bordering the southern coastline, acts as a key influencer, moderating temperatures along the coastal regions compared to the inland areas. The flat topography, interspersed with some upland regions, further contributes to temperature variations. Seasonal monsoons, driven by distinct wind patterns, play a crucial role in shaping temperature dynamics and precipitation patterns, thus exerting a notable impact on the overall temperature distribution across different geographical regions of Bangladesh [5,6]. Gazipur station exhibits a tropical wet and dry or savanna climate (classification: Aw). The district records an annual average temperature of 28.95 °C, marking a 1.21% increase compared to the national averages in Bangladesh. Gazipur usually receives around 71.24 mm of precipitation annually. Ishurdi station also features a tropical wet and dry or savanna climate (classification: Aw). The district maintains an annual temperature of 29.52 °C, which is 1.78% higher than the national averages in Bangladesh. Ishurdi typically receives around 98.38 mm of precipitation annually. Barisal station experiences a tropical climate, characterized by significantly less rainfall in winter compared to the summer months. According to Köppen and Geiger [45], this location falls under the Aw classification. Statistical analysis reveals an average temperature of approximately 25.6 °C, with an annual rainfall of around 2005 mm. The temperate characteristics of Barisal poses challenges in clearly categorizing distinct seasons in the region. The acquired temperature forecast results remain unaffected by local atmospheric conditions. While the mentioned local factors are implicitly embedded in the data collected from weather stations, it is crucial to note that the modeling outcomes presented in this research solely derive from historical temperature data from BMD. A diurnal cycle, also known as a diel cycle, manifests as a recurring pattern every 24 h due to the complete rotation of the Earth around its axis. The Earth’s rotation gives rise to temperature variations on the surface during both day and night, contributing to seasonal weather changes. The primary determinant of the diurnal cycle is the influx of solar radiation [46]. The atmospheric seasonal cycle is influenced by the Earth’s axial tilt. The Earth’s seasonal cycle arises from its 23° axial tilt, causing varying solar radiation at different latitudes throughout the year. Equinoxes align the sun with the equator, the June solstice with the Tropic of Cancer, and the December solstice with the Tropic of Capricorn, creating hemispheric temperature disparities in summer and winter. The Annual Temperature Cycle (ATC) encompasses seasonal temperature changes that are influenced by fluctuations in solar radiation reaching the Earth’s surface throughout the year [47]. Typically, evaluating the ATC relies on sparse and unevenly distributed air temperature observations or numerical model simulations. This study utilized temperature data collected by the Bangladesh Meteorological Department (BMD) at specific intervals, encompassing daily maximum and minimum values. The data were sourced from three designated weather stations for analysis. In this study, the daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 data were collected from three weather stations, located in distinct climatic regions of Bangladesh. Ensuring the quality of the temperature datasets is essential to enhance the reliability of temperature forecasts using ML algorithms [48]. While a comprehensive quality assurance process was not conducted for this specific dataset, the accuracy and completeness of the recorded temperature data were systematically assessed using range/limit tests. Range testing is a fundamental quality control method that involves verifying that every observation falls within a specified range [48]. Only values within the predefined limits are considered valid [49,50], while readings outside the specified range are appropriately marked as invalid. The valid readings within the allowable range were used to simulate future temperature fluctuations in the selected weather stations, with a particular focus on generating multi-step forward temperature forecasts for both 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 . A small portion of the collected data, amounting to less than 2% of the total data from all weather stations, contained missing values. To address this issue, the ‘moving median’ imputation technique was employed. This technique utilizes a moving median with a predetermined window length to fill in the missing values. After applying the imputation method, the weather stations Barishal, Gazipur, and Ishurdi had 2677 readings (from 1 January 2015 to 30 April 2022), 6695 readings (from 1 January 2004 to 30 April 2022), and 2041 readings (from 1 June 2015 to 31 December 2020) of daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values. Table 1 presents the descriptive statistics for daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 at the three weather stations. It can be seen from Table 1 that the data exhibited left (negative) skewness, suggesting that the distribution had an extended left tail compared to the right tail. Additionally, kurtosis values included both positive and negative values, indicating that the datasets had both ‘heavy-tailed’ (positive kurtosis) and ‘light-tailed’ (negative kurtosis) distributions. Table 1. Descriptive statistics of the daily maximum and minimum temperatures at the three stations (Barishal, Gazipur, and Ishurdi stations), Bangladesh. The Gaussian distribution, commonly known as a normal distribution, is characterized by a bell-shaped curve. It is often assumed that measurements will adhere to a normal distribution, featuring an equal number of measurements above and below the mean. However, in real-world scenarios, data may not precisely conform to the Gaussian distribution and could exhibit slight deviations. In practice, achieving exact conformity to a Gaussian distribution is rare. Ideally, if a distribution is truly normal, the mean, median, and mode values would be identical—an occurrence seldom observed in real-world situations. In instances where the values of the mean, median, and mode differ, the distribution is considered skewed and deviates from the Gaussian norm [51]. The presented data in Table 1 reveal that the mean, median, and mode values of the temperature measurements exhibit slight differences. These numerical variations suggest that the data do not perfectly adhere to a Gaussian distribution and show indications of being slightly skewed. The specific numeric values can be found in Table 1 for reference. Skewness quantifies the asymmetry that is present in data relative to their sample mean. Negative skewness indicates that the data are more dispersed to the left of the mean, while positive skewness suggests greater dispersion to the right. A perfectly symmetric distribution, such as the normal distribution, has a skewness of zero. Kurtosis serves as a metric for gauging the susceptibility of a distribution to outliers. The normal distribution exhibits a kurtosis of 3. Distributions with kurtosis values exceeding 3 are more prone to outliers than the normal distribution, while those with values below 3 are less susceptible. Some definitions of kurtosis involve subtracting 3 from the calculated value, resulting in a kurtosis of 0 for the normal distribution. This study adopts this later definition (subtracting 3 from the calculated value) to compute the kurtosis value. 2.2. Data Preprocessing for the Lagged Input and Output Variables Time-lagged information was gathered from the collected time series of the daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values. The outputs from the models were the day-ahead 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values. Therefore, the inputs to the models (five models for five-days-ahead forecasts) were 𝑇(𝑑, 𝑑−1,𝑑−2,𝑑−3,…,𝑑−𝑛 ) (1) The outputs were 𝑇(𝑑+1, 𝑑+2,𝑑+3,…,𝑑+𝑛 ) (2) Due to time-lagging of input variables and the target, the observed daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 records were reduced at each weather station. At Barishal station, a total of 2642 historical records remained (from 1 January 2015 to 26 March 2022) after removing 35 records due to time-lagging (5-time lag forward and 30-time lag backward) from the entire time series of 2677 readings (from 1 January 2015 to 30 April 2022). At Gazipur station, a total of 6660 historical records remained (from 1 January 2004 to 26 March 2022) after removing 35 records due to time-lagging (5-time lag forward and 30-time lag backward) from the entire time series of 6695 readings (from 1 January 2004 to 30 April 2022). At Ishurdi station, a total of 2006 historical records remained (from 1 June 2015 to 26 November 2020) after removing 35 records due to time-lagging (5-time lag forward and 30-time lag backward) from the entire time series of 2041 readings (from 1 June 2015 to 31 December 2020). Each station’s remaining dataset was divided into two sets: 80% for model training and 20% for model testing. While there is no established rule for data splitting during model learning and testing [52], it is recommended that testing data comprise between 10% and 40% of the total dataset size [53]. 2.3. Input Variable Selection The first step in developing forecast models using ML-based approaches is the selection of the most significant input variables [39,40]. For the purpose of choosing input variables in hydrology and water resource modeling [39], both linear methods [41] and nonlinear techniques [40] have been employed. However, because hydrology and water resource modeling issues are frequently nonlinear in nature [54], linear methods based on Partial Autocorrelation Function (PACF) and Autocorrelation Function (ACF) are often less suitable techniques. For modeling of hydrological and water resources as well as other fields of science and engineering applications, nonlinear approaches that utilize mutual information (MI) [55] typically outperform linear techniques [35,40,56]. Since the only data used in this effort are the daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values at three weather stations (Barishal, Gazipur, and Ishurdi), the time-lagged versions of the acquired temperature data (from each station) were used as potential inputs. To extract the time-lagged information from the 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 time series and choose which lags to include as prospective inputs, the PACF was employed. The PACF is a technique that is commonly used in time series analysis to identify the most influential lagged features for predicting a target variable [57]. The PACF measures the correlation between a time series variable and its lagged values, while accounting for the influence of intermediate lags. By applying PACF, one can identify the lagged features that have the most significant impact on the target variable. These lagged features capture the historical patterns and dependencies that can be exploited for accurate time series forecasting. Figure 2 displays the PACF plots for the data from three weather stations, revealing that the current and past 30-time lags are essential for forecasting temperatures for the next five days ( 𝑇 𝑑+1 ,  𝑇 𝑑+2 ,  𝑇 𝑑+3 ,  𝑇 𝑑+4 , 𝑎𝑛𝑑  𝑇 𝑑+5 ). The PACF provided an initial guess of the candidates for input variables. However, this initial selection of input variables may include unnecessary or redundant features, which could hinder the training of ML-based forecasting models. Therefore, it is important to determine the most significant input variables to ensure proper training and computational efficiency. Figure 2. PACF plots of the 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 data. Next, this study used the F-statistic [58,59] to identify the most influential input variables. The F-test is a statistical test that assesses how much the variability in the target variable is explained by a specific feature compared to the variability that is not explained by that feature. It examines the importance of each predictor individually using an F-test, testing the hypothesis that the response values that are grouped by predictor variable values are drawn from populations with the same mean against the alternative hypothesis that the population means are not all the same. A small p-value of the F-test indicates the importance of the corresponding predictor. The F-statistic is calculated by dividing the mean square regression (MSR), representing explained variability, by the mean square error (MSE), representing unexplained variability. Univariate feature ranking with F-tests helps identify the most influential features for a regression task, emphasizing the most relevant variables and potentially enhancing interpretability and model performance [58,59]. The variable importance is also determined using the MRMR technique [60,61]. The MRMR algorithm aims to find a balance between selecting informative features while avoiding redundant ones. MRMR considers both relevance and redundancy when identifying a subset of features that collectively offer maximum information while minimizing duplication. There are variations and extensions of MRMR, such as weighted MRMR or incremental MRMR, which provide additional flexibility and adaptability to different scenarios. Overall, MRMR is a valuable feature selection technique that enhances the interpretability, generalization, and efficiency of machine learning models by focusing on the most relevant and nonredundant features. The MRMR algorithm [61] identifies a best-possible set of characteristics that are maximally and mutually different and are useful for representing the response variable. The approach maximizes a feature set’s relevance to the response variable while minimizing its redundancy. Using pairwise mutual information of attributes and mutual information of an attribute and the response, the technique measures the degree of duplication as well as the relevance of variables. The MRMR technique seeks to identify an ideal set 𝑆 of features that maximizes 𝑉 𝑠 , the relevance of 𝑆 pertaining to a response variable 𝑦 , and minimizes 𝑊 𝑠 , the redundancy of 𝑆 , where 𝑉 𝑠 and 𝑊 𝑠 are defined with mutual information (MI) 𝐼 : 𝑉 𝑠 = 1 |𝑆| ∑ 𝑥∈𝑆 𝐼(𝑥,𝑦), (3) 𝑊 𝑠 = 1 |𝑆| 2 ∑ 𝑥,𝑧∈𝑆 𝐼(𝑥,𝑧). (4) where |𝑆| denotes the quantity of attributes in 𝑆 . The amount of uncertainty in one variable that can be lowered by understanding the other variable is measured by the MI between two variables. The MI (𝐼) of the discrete random variables 𝑋 and 𝑍 can be represented by [60] 𝐼(𝑋,𝑍)= ∑ 𝑖,𝑗 𝑃(𝑋= 𝑥 𝑖 ,𝑍= 𝑧 𝑖 )log 𝑃(𝑋= 𝑥 𝑖 ,𝑍= 𝑧 𝑖 ) 𝑃(𝑋= 𝑥 𝑖 )𝑃(𝑍= 𝑧 𝑖 ) . (5) If 𝑋 and 𝑍 are independent, then 𝐼 equals 0. If 𝑋 and 𝑍 are the same random variable, then 𝐼 equals the entropy of 𝑋 . It is necessary to take into account all 2 |𝛺| combinations in order to find the optimum set 𝑆 , where 𝛺 is the set of all features. The MRMR approach utilizes an alternative approach. In this approach, the MRMR approach scores attributes by employing the forward addition technique, which necessitates 𝑂(|𝛺|·|𝑆|) computations, by utilizing the MI quotient (MIQ) value. 𝑀𝐼𝑄 𝑥 = 𝑉 𝑥 𝑊 𝑥 (6) where 𝑉 𝑥 and 𝑊 𝑥 are the relevance and redundancy of a feature, respectively: 𝑉 𝑥 =𝐼(𝑥,𝑦) (7) 𝑊 𝑥 = 1 |𝑆| ∑ 𝑧∈𝑆 𝐼(𝑥,𝑧). (8) The MRMR function uses a heuristic technique to quantify the significance of a characteristic and then generates a score. A high score value denotes the significance of the associated predictor. A degree of trust in feature selection is also indicated by a decline in the feature significance score. The score value of the second most essential attribute, for instance, is significantly lower than the score value of 𝑥 if the algorithm is confident in choosing it. The results can be used to identify an ideal set 𝑆 for a particular collection of features. The features were ranked using the MRMR algorithm according to the following steps: Step 1: Select the feature with the largest relevance, max 𝑥∈Ω 𝑉 𝑥 . Add the selected feature to an empty set 𝑆 . Step 2: Find the features with nonzero relevance and zero redundancy in the complement of 𝑆 , 𝑆 𝑐 . If 𝑆 𝑐 does not include a feature with nonzero relevance and zero redundancy, go to step 4. Otherwise, select the feature with the largest relevance, max 𝑥∈ 𝑆 𝑐 , 𝑊 𝑥 =0 𝑉 𝑥 . Add the selected feature to the set 𝑆 . Step 3: Repeat Step 2 until the redundancy is not zero for all features in 𝑆 𝑐 . Step 4: Select the feature that has the largest MIQ value with nonzero relevance and nonzero redundancy in 𝑆 𝑐 , and add the selected feature to the set 𝑆 . max 𝑥∈ 𝑆 𝑐 𝑀𝐼𝑄 𝑥 = max 𝑥∈ 𝑆 𝑐 𝐼(𝑥,𝑦) 1 |𝑆| ∑ 𝑧∈𝑆 𝐼(𝑥,𝑧) . (9) Step 5: Repeat Step 4 until the relevance is zero for all features in 𝑆 𝑐 . Step 6: Add the features with zero relevance to 𝑆 in random order. Feature selection using Neighborhood Component Analysis (NCA) [62] focuses on learning a transformation matrix that preserves the discriminative information in the data while reducing the dimensionality. By considering the local neighborhood relationships between data points, NCA can identify the most informative features for the task at hand. It is important to note that NCA assumes linearity in the data and may not capture complex nonlinear relationships. Therefore, it is advisable to combine NCA with nonlinear dimensionality reduction techniques or explore other feature selection methods for capturing nonlinear feature interactions if needed. The NCA feature selection for regression can be mathematically represented as follows [62]: Given 𝑛 observations 𝑆={( 𝑥 𝑖 , 𝑦 𝑖 ), 𝑖=1,2,…,𝑛}, where the response values 𝑦 𝑖 ∈ℝ are continuous, the aim is to predict the response 𝑦 given the training set 𝑆 . Consider a randomized regression model that: Randomly picks a point (Ref(𝑥)) from 𝑆 as the ‘reference point’ for 𝑥 ; Sets the response value at 𝑥 equal to the response value of the reference point Ref(𝑥) . Again, the probability 𝑃(Ref(𝑥)= 𝑥 𝑗 |𝑆) that point 𝑥 𝑗 is picked from 𝑆 as the reference point for 𝑥 is 𝑃(Ref(𝑥)= 𝑥 𝑗 |𝑆)= 𝑘( 𝑑 𝑤 (𝑥, 𝑥 𝑗 )) ∑ 𝑛 𝑗=1 𝑘( 𝑑 𝑤 (𝑥, 𝑥 𝑗 )) (10) Now consider the leave-one-out application of this randomized regression model, that is, predicting the response for 𝑥 𝑖 using the data in 𝑆 −1 and the training set 𝑆 excluding the point ( 𝑥 𝑖 , 𝑦 𝑖 ) . The probability that point 𝑥 𝑗 is picked as the reference point for 𝑥 𝑖 is 𝑃 𝑖𝑗 =𝑃(Ref( 𝑥 𝑖 )= 𝑥 𝑗 | 𝑆 −1 )= 𝑘( 𝑑 𝑤 ( 𝑥 𝑖 , 𝑥 𝑗 )) ∑ 𝑛 𝑗=1,𝑗≠𝑖 𝑘( 𝑑 𝑤 ( 𝑥 𝑖 , 𝑥 𝑗 )) (11) Let 𝑦 𝑖 ̂ be the response value that the randomized regression model predicts and 𝑦 𝑖 be the actual response for 𝑥 𝑖 . And let 𝑙= ℝ 2 →ℝ be a loss function that measures the disagreement between 𝑦 𝑖 ̂ and 𝑦 𝑖 . Then, the average value of 𝑙( 𝑦 𝑖 , 𝑦 𝑖 ̂ ) is 𝑙 𝑖 =𝐸(𝑙( 𝑦 𝑖 , 𝑦 𝑖 ̂ )| 𝑆 −𝑖 )= ∑ 𝑗=1,𝑗≠𝑖 𝑛 𝑃 𝑖𝑗 𝑙( 𝑦 𝑖 , 𝑦 𝑗 ). (12) After adding the regularization term, the objective function for minimization is 𝑓(𝑤)= 1 𝑛 ∑ 𝑖=1 𝑛 𝑙 𝑖 +𝜆 ∑ 𝑟=1 𝑝 𝑤 2 𝑟 . (13) The default loss function 𝑙( 𝑦 𝑖 , 𝑦 𝑗 ) for NCA for regression is mean absolute deviation. In this study, a combination of variable selection methods (F-tests, MRMR, and NCA) was used to select the most significant input variables from an initial pool of 30 candidate inputs determined by PACF. To include all possible contributing variables affecting the outputs, all variables selected by the individual variable selection approaches were considered, while the common variables determined by all approaches were used only once. Doing so eliminates the possibility of excluding any variables which might have been deemed important to forecast the output. Using this combinatory variable selection scheme, the possible number of candidate variables of the inputs for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑎𝑥 at Barishal station were 26, 27, 26, 22, and 25, respectively. The number of candidate variables of the inputs for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑖𝑛 at Barishal station were 21, 22, 24, 24, and 23, respectively. Similarly, the possible number of candidate input variables for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑎𝑥 at Gazipur station were 25, 26, 25, 24, and 25, respectively. The number of candidate input variables for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑖𝑛 at Gazipur station were 26, 25, 26, 25, and 25, respectively. Likewise, the possible number of candidate variables of the inputs for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑎𝑥 at Ishurdi station were 23, 23, 26, 26, and 26, respectively. The number of candidate variables of the inputs for one-, two-, three-, four-, and five-days-ahead forecast of 𝑇 𝑚𝑖𝑛 at Ishurdi station were 24, 28, 21, 23, and 21, respectively. 2.4. Model Development The accuracy and robustness of any forecasting model largely depend on the right selection of models and their forecasting accuracy. Forecasting models are developed using training and testing of the state-of-the-art machine learning algorithms, the optimal parameters of which were decided here based on parameters tuning using the Bayesian and ASHA optimization algorithms. Training several models and finding their optimal parameter sets through hyperparameter tuning can often be a challenging and time-consuming task. This task was made easier and faster by developing and comparing multiple models automatically through tuning their hyperparameters using optimization algorithms. In this approach, instead of training each model with different sets of hyperparameters, we selected a few different models and tuned their default hyperparameters using Bayesian and ASHA optimizations. These optimization algorithms search for an optimal set of hyperparameters for a particular model by minimizing the objective function of the model (minimization of the mean squared error (MSE)). The optimization algorithms deliberately selected new hyperparameters in each iteration, produced an optimal set of hyperparameters for a given training dataset, and identified the model that performed best on a test dataset. With the Bayesian and ASHA optimization algorithms, the function randomly selected several models with various hyperparameter values and trained them on a small subset of the training data. If the log (1 + valLoss) value for a particular model was found promising, where valLoss is the cross-validation MSE, the model was promoted and trained on a larger amount of the training data. This process was repeated, and successful models were trained on progressively larger amounts of data. To reiterate, our proposed approach executed the following three steps simultaneously in the model development process: Data exploration and preprocessing: Identify variables with low predictive power that should be eliminated. Feature extraction and selection: Extract features automatically and—among a large feature set—identify those with high predictive power. Model selection and tuning: Automatically tune model hyperparameters and identify the best-performing model. The flow diagram of the entire model building process can be illustrated as Figure 3. Figure 3. Flow diagram of the proposed automatic model selection scheme. 2.5. Hyperparameter Optimization The majority of ML algorithms require a careful selection of hyperparameters [63]. The choice of hyperparameter settings significantly impacts the performance of ML models [64], and unconscious hyperparameter selection can result in low-performing models. Many studies employed trial-and-error selection of hyperparameters [64,65], grid search, and/or random search [66], while some employed heuristic optimization algorithms like particle swarm optimization and genetic algorithms [66]. Nevertheless, a precise and effective automated hyperparameter optimization method is highly desirable [64] and is essential for ensuring a fair comparison across ML alternatives. Furthermore, when evaluating various ML models, fair assessments can only be made if they are equally optimized (or receive the same level of attention) for the specific task at hand. Bayesian optimization and asynchronous successive halving algorithm (ASHA) are advanced optimization techniques that are employed to automate and enhance the efficiency of model selection processes. In Bayesian optimization, a probabilistic model is iteratively updated to capture the relationship between model hyperparameters and performance, guiding the search toward promising regions of the parameter space. This process allows for intelligent and resource-efficient exploration, especially in scenarios with limited computational resources. On the other hand, ASHA introduces an asynchronous approach to hyperparameter optimization, enabling parallel evaluations and efficient resource utilization. By continually pruning underperforming models, ASHA converges to optimal hyperparameter configurations. ASHA is particularly beneficial in scenarios with limited computational resources or asynchronous evaluations. It employs a successive halving strategy to efficiently allocate resources to promising configurations, eliminating less favorable ones. Both Bayesian optimization and ASHA contribute significantly to automating the selection of suitable models, particularly in the context of temperature forecasting, where manual selection can be time-consuming and subjective. The combination of these algorithms in this study represents a novel and valuable contribution to the field, showcasing their effectiveness in optimizing hyperparameters and improving the overall accuracy of temperature prediction models. A state-of-the-art approach for both global and local hyperparameter optimization is known as Bayesian optimization (BO) [37]. BO has been shown to outperform alternative methods like grid search and random search on various challenging optimization benchmarks [66]. In the quest for discovering the best hyperparameters, BO often surpasses the abilities of domain experts [67]. BO is versatile and applicable to a wide range of problem scenarios, accommodating both integer and real-valued hyperparameters. BO relies on the selection of a prior function and an acquisition function. The acquisition function, typically employing Expected Improvement (EI), works in conjunction with a Gaussian process prior [37]. The choice of covariance function, particularly the use of the Matern52 kernel, is crucial In determining the effectiveness of Gaussian processes [37]. With respect to 𝑥 in a bounded domain, the BO algorithm process seeks to minimize a scalar objective function, 𝑓(𝑥) . Depending on whether the function is stochastic or deterministic, it may yield different results when evaluated at the same point 𝑥 . The variable 𝑥 can have continuous real values, integers, or categorical components, referring to a discrete set of names. The key components in the minimization process include [68]: A Gaussian process model of 𝑓(𝑥 ). A Bayesian update procedure for modifying the Gaussian process model at each new evaluation of 𝑓(𝑥) . An acquisition function 𝑎(𝑥) (based on the Gaussian process model of 𝑓 ) that is maximized to determine the next point 𝑥 for evaluation. The ASHA [38] optimization algorithm is an upgraded variant of the successive halving algorithm (SHA) [69,70]. ASHA is a user-friendly hyperparameter optimization technique that leverages aggressive early stopping and is particularly suited for tackling large-scale hyperparameter optimization problems [38]. It has demonstrated superior performance on a workload employing 500 workers, exhibits linear scalability with the number of workers in distributed environments, and is well-suited for tasks involving substantial parallelism [38]. An advantage of ASHA is that the user does not need to specify in advance how many configurations they want to evaluate, because it operates asynchronously. However, it still requires the same inputs as SHA. A comprehensive explanation of ASHA can be found in the original work by Li et al. [38] and is not repeated in this effort. To the best of the authors’ knowledge, this is the first instance of the Bayesian and ASHA optimization algorithms being employed to tune the hyperparameters of multiple ML algorithms to automatically select the best model for forecasting multi-step-ahead daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 . In this study, forecasting models were developed by fine-tuning hyperparameters of seven widely utilized ML algorithms, aiming to identify the optimal model for forecasting daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 . Table 2 outlines the candidate ML algorithms and their adjustable hyperparameters. The hyperparameters were tuned using both the Bayesian and ASHA optimization algorithms, and a comparison was performed with respect to training time and accuracy. The best model was selected based on its ability to yield the lowest training and test errors, employing either the Bayesian or ASHA optimization algorithms. Table 2. Machine learning algorithms and their tunable hyperparameters. Forecasting models were developed for one-, two-, three-, four-, and five-days-ahead forecasting of daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 using data from three weather stations. Consequently, a total of 30 forecasting models were chosen by applying Bayesian and ASHA optimization techniques. Each training dataset, consisting of input–output pairs, was divided into a training set, containing 80% of the data, and a test set, containing the remaining 20%. To enhance computational efficiency, both algorithm runs were executed in the parallel computing environment of MATLAB (MATLAB, 2021a). 2.6. Statistical Indices for Performance Evaluation The following statistical indices were used to evaluate the performances of the developed temperature forecast models. The accuracy index is an evaluation metric that compares the proportion of accurate forecasts made by a model to all forecasts made. The higher the accuracy score is, the better the model performance will be. The ideal value of accuracy is 1.0. The correlation coefficient, R, denotes the strength of linear regression between the observed and forecasted values; however, for this linear relationship, the highest possible value (ideal) of R = 1.0 can be obtained despite the fact that the slope and ordinate intercept are different from 1.0 and 0, respectively [53]. Therefore, other indices need to be used to justify the model performance. A normalized/dimensionless measure of residual variance, Nash–Sutcliffe Efficiency Coefficient (NS) metric, is calculated by dividing residual variance by variance of observed dataset. NS ≤ 0.4, 0.40 < NS ≤ 0.50, 0.50 < NS ≤ 0.65, 0.65 < NS ≤ 0.75, and 0.75 < NS ≤ 1.00 are categories that are labeled as unsatisfactory, acceptable, satisfactory, good, and exceptionally good, respectively [71,72]. Willmott’s Index of Agreement (IOA) [73] is able to detect additive and proportional differences in the observed and model-forecasted means and variances. The IOA usually ranges from −1 to +1, with higher values indicating greater model performance. Nevertheless, the IOA is often overly sensitive to extreme values due to the squared differences [74]. The Kling Gupta Efficiency (KGE) [75,76], which combines the three components of model errors (i.e., correlation, bias, and ratio of variances or coefficients of variation) in a more balanced way, has been widely used for evaluating the prediction ability of models in recent years. Generally, the RMSE criterion measures the error of the model. A lower value of RMSE indicates a higher forecasting power of the model. However, the value of RMSE largely depends on the magnitude of the data, and therefore, a lower value of RMSE does not necessarily mean a better forecasting performance. To overcome this issue, the NRMSE criterion was used to eliminate the dimensionality effect of the data. Model performance is said to be excellent when NRMSE is less than 0.1, good when NRMSE is between 0.1 and 0.2, fair when NRMSE is between 0.2 and 0.3, and poor when NRMSE is greater than 0.3 [77,78]. The Mean Absolute Percentage Relative Error (MAPRE) is the most common measure used to evaluate a model’s prediction performance, probably because the variable’s units are scaled to percentage units, which makes it easier to understand. It works best if there are no extremes to the data (and no zeros). It is often used as a loss function in regression analysis and model evaluation. Median Absolute Deviation (MAD) is a resistant measure of variability, as it relies on the median as the estimate of the center of the distribution and on the absolute difference rather than the squared difference. Because the MAD is the median deviation of scores from the overall median, not all observations are equally weighted in this measure of dispersion. The clear advantage of MAD is the avoidance of influence by outliers. However, it has its own problems: if the distribution is actually normal, there is a loss of efficiency, in that it does not make as much use of the information as what is available in the data [79]. The MBE criterion provides an estimation of whether the developed model systematically under- or over-predicts the actual values. The MBE is usually not used as a measure of the model error, as high individual errors in prediction can also produce a low MBE. MBE is primarily used to estimate the average bias in the model and to decide if any steps need to be taken to correct the model bias [80]. The Percentage Bias (PBIAS) measures the average tendency of the simulated values to be larger or smaller than their observed ones. The optimal value of PBIAS is 0.0, with low-magnitude values indicating accurate model simulation. Positive values indicate overestimation bias, whereas negative values indicate model underestimation bias. Accuracy [81]: 𝐴𝑐𝑐=1−𝑎𝑏𝑠(𝑚𝑒𝑎𝑛 𝑇 𝑖,𝑃 − 𝑇 𝑖,𝑆 𝑇 𝑖,𝑆 ) (14) Correlation coefficient (R) [82]: 𝑅= ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝐴                    )( 𝑇 𝐴 𝑖 − 𝑇 𝑃                   ) ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝐴                    ) 2 − − − − − − − − − − − − − − √ ∑ 𝑛 𝑖=1 ( 𝑇 𝑃 𝑖 − 𝑇 𝑃                   ) 2 − − − − − − − − − − − − − − √ (15) Nash–Sutcliffe Efficiency Coefficient (NS) [83]: 𝑁𝑆=1− ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝑃 𝑖 ) 2 ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝐴                    ) 2 (16) Willmott’s Index of Agreement (IOA) [73]: 𝑑=1− ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝑃 𝑖 ) 2 ∑ 𝑛 𝑖=1 (| 𝑇 𝑃 𝑖 − 𝑇 𝐴                    || 𝑇 𝐴 𝑖 − 𝑇 𝐴                    |) 2 (17) Kling–Gupta Efficiency (KGE) [75,76]: 𝐾𝐺𝐸=1−𝐸𝐷=1− (𝑅−1) 2 + (∝−1) 2 + (𝛽−1) 2 − − − − − − − − − − − − − − − − − − − − − − − − − √ (18) ∝= 1 𝑛 ∑ 𝑛 𝑖=1 ( 𝑇 𝑖,𝑃 − 𝑇 𝑃           ) 2 − − − − − − − − − − − − − − − − √ 1 𝑛 ∑ 𝑛 𝑖=1 ( 𝑇 𝑖,𝑆 − 𝑇 𝑆          ) 2 − − − − − − − − − − − − − − − − √ (19) 𝛽= 1 𝑛 ∑ 𝑛 𝑖=1 𝑇 𝑖,𝑃 1 𝑛 ∑ 𝑛 𝑖=1 𝑇 𝑖,𝑆 (20) Root mean squared error (RMSE) [74]: 𝑅𝑀𝑆𝐸= 1 𝑛 ∑ 𝑛 𝑖=1 ( 𝑇 𝐴 𝑖 − 𝑇 𝑃 𝑖 ) 2 − − − − − − − − − − − − − − − − √ 𝑇 𝐴                    (21) Normalized RMSE [84]: 𝑁𝑅𝑀𝑆𝐸= 𝑅𝑀𝑆𝐸 𝑇 𝐴                    (22) Mean Absolute Percentage Relative Error (MAPRE) (MAPE, n.d.): 𝑀𝐴𝑃𝑅𝐸= 1 𝑛 ∑ 𝑖=1 𝑛 | 𝑇 𝑖,𝑆 − 𝑇 𝑖,𝑃 𝑇 𝑖,𝑆 |×100 (23) Median Absolute Deviation (MAD) [85]: 𝑀𝐴𝐷( 𝑇 𝐴 𝑖 , 𝑇 𝑃 𝑖 )=𝑚𝑒𝑑𝑖𝑎𝑛(| 𝑇 𝐴 1 − 𝑇 𝑃 1 |,| 𝑇 𝐴 2 − 𝑇 𝑃 2 |,…,| 𝑇 𝐴 𝑛 − 𝑇 𝑃 𝑛 |) 𝑓𝑜𝑟 𝑖=1, 2,…,𝑛 (24) Mean Bias Error (MBE) [86]: 𝑀𝐵𝐸= 1 𝑛 ∑ 𝑖=1 𝑛 ( 𝑇 𝑖,𝑃 − 𝑇 𝑖,𝑆 ) (25) Percentage Bias (PBIAS) [87,88]: 𝑃𝐵𝐼𝐴𝑆= ∑ 𝑛 𝑖−1 ( 𝑇 𝑖,𝑃 − 𝑇 𝑖,𝑆 ) ∑ 𝑛 𝑖=1 𝑇 𝑖,𝑆 ×100 (26) where 𝑇 𝐴 𝑖 and 𝑇 𝑃 𝑖 are the observed and forecasted 𝑇 ( 𝑇 𝑚𝑎𝑥  &  𝑇 𝑚𝑖𝑛 ) for the 𝑖 𝑡ℎ data point in the daily maximum and minimum temperature dataset, respectively; 𝑇 𝐴                    and 𝑇 𝑃                   are the means of the observed and forecasted 𝑇 ( 𝑇 𝑚𝑎𝑥  &  𝑇 𝑚𝑖𝑛 ), respectively; and 𝑛 represents the total number of entries in the dataset. 3. Results and Discussion A range of statistical performance evaluation indices, as discussed in the previous section, were employed to assess the performance of the various forecasting models. In the subsequent paragraphs, the performances of the identified top-performing models on the test dataset (selected based on their performance on both the training and test datasets) for the five forecasting horizons at the three stations are presented. Table 3 provides a comparison of the best models that were selected by the Bayesian and ASHA optimization algorithms, considering log(1 + valLoss) values and training time for multi-step-ahead 𝑇 𝑚𝑎𝑥 forecasting. As can be observed from the log(1 + valLoss) value presented in Table 3, the Bayesian optimization algorithm generally outperformed the ASHA algorithm in selecting the best model. However, in terms of training time, the ASHA algorithm demonstrated faster convergence in finding the optimal model parameters compared to the Bayesian algorithm. However, while the ASHA algorithm showed competitive performance in terms of training time, the Bayesian algorithm also achieved convergence within acceptable time limits. Therefore, in cases where training time is not a critical factor, the Bayesian optimization can be used to find optimal model parameters for selecting the best models for a specific task. On the other hand, when training time is a more important consideration than model accuracy, the ASHA optimization algorithm is advisable. Notably, there were instances where the ASHA algorithm outperformed the Bayesian algorithm in both log(1 + valLoss) and training time, such as for the one-step-ahead 𝑇 𝑚𝑎𝑥 forecast at Barishal station and four-step-ahead 𝑇 𝑚𝑎𝑥 forecast at Ishurdi station. In cases where the Bayesian algorithm showed superior performance based on log(1 + valLoss) values, the differences were not substantial, while there was a significant difference in training times between the two algorithms. Table 3. Comparison of the Bayesian and ASHA optimization algorithm-tuned best models for forecasting maximum temperatures ( 𝑇 𝑚𝑎𝑥 ) at the weather stations. Boldface indicates models with lowest log (1 + valLoss) values. Table 4 presents the training and test performance results of the Bayesian and ASHA algorithm-tuned forecast models for maximum temperatures ( 𝑇 𝑚𝑎𝑥 ) at the weather stations. At this stage, the final models were selected based on the RMSE criterion: the best models were those producing the lowest difference between the training and test RMSE values. This ensures that the selected best models were neither over-trained nor under-trained. The data in Table 4 reveal that the ASHA algorithm-tuned best models produced the lowest difference between the training and test RMSE values in most instances (forecasting horizons and weather stations) for forecasting 𝑇 𝑚𝑎𝑥 values. Although the Bayesian algorithm required a longer time to converge to optimal solutions for selecting the best models, it excelled in three specific instances: the one-day- and five-days-ahead 𝑇 𝑚𝑎𝑥 forecast at Barishal station, and the three-days-ahead 𝑇 𝑚𝑎𝑥 forecast at Gazipur station (as indicated in Table 4). A complete list of the selected top-performing models can be found in Table 7. Table 4. Comparison of the training and testing performance of the Bayesian and ASHA optimization-tuned best models to forecast maximum temperatures ( 𝑇 𝑚𝑎𝑥 ) at the weather stations. Boldface indicates lowest difference between the training and test RMSE values. Table 5 provides a comparative performance evaluation of the Bayesian and ASHA algorithm-tuned best models for forecasting 𝑇 𝑚𝑖𝑛 at the weather stations, based on log (1 + valLoss) values and training time requirements. Table 5. Comparison of the Bayesian and ASHA optimization algorithm-tuned best models for forecasting minimum temperatures ( 𝑇 𝑚𝑖𝑛 ) at the weather stations. Boldface indicates models with lowest log (1 + valLoss) values. The results in Table 5 reveal that, in terms of log (1 + valLoss) values, the Bayesian algorithm-tuned best models outperformed the ASHA algorithm-tuned models in all instances except for the two-days-ahead forecast at the Gazipur station, where the ASHA algorithm-tuned GPR model was found to be the top-performing best model. Moreover, the ASHA algorithm-tuned models exhibited faster convergence to optimal solutions for parameter values in comparison to the Bayesian algorithm-tuned models in all instances. Additionally, the differences between the training errors (log (1 + valLoss)) produced by the Bayesian and ASHA algorithms for selecting the best models were relatively small for all instances. In summary, when computational time is not a limiting factor, the Bayesian algorithm is a suitable choice for searching for the best models (Table 5). However, it is essential to carefully evaluate the differences between the training and test errors of the best models that are produced by the Bayesian and ASHA algorithms before making a definitive decision on model selection. The comparison of the training and testing performance between the Bayesian and ASHA optimization-tuned best models for forecasting 𝑇 𝑚𝑖𝑛 at the weather stations, as assessed by the RMSE criterion, is presented in Table 6. It is evident from Table 6 that both the Bayesian and ASHA algorithms exhibited similar performance in selecting the top-performing best models across all forecasting horizons and at all weather stations. The Bayesian algorithm outperformed in seven instances, while the ASHA algorithm provided top-performing forecast models in eight instances based on the lowest differences between the training and test RMSE values (Table 6). Overall, the selected top-performing best models demonstrated acceptable results according to the RMSE criterion. However, further validation of the forecasting performance of the selected models is required by computing other performance evaluation indices on the test dataset. A comprehensive performance evaluation of the selected top-performing models based on several statistical indices can be found in Table 8 and Table 9 and Figure 3 and Figure 4. Figure 4. Performance of the best models on test dataset in terms of forecasting maximum temperatures ( 𝑇 𝑚𝑎𝑥 ) under various forecast horizons at the weather stations. Table 6. Comparison of the training and testing performance of the Bayesian and ASHA optimization-tuned best models to forecast minimum temperatures ( 𝑇 𝑚𝑖𝑛 ) at the weather stations. Boldface indicates lowest difference between the training and test RMSE values. The complete list of the selected best models for different weather stations under five forecasting horizons, based on log (1 + valLoss), RMSE, training time, and differences between the training and test RMSE (as presented in Table 3, Table 4, Table 5 and Table 6), is provided in Table 7. Table 7. Selected best models at different weather stations under the five forecasting horizons. Following the selection of the best-performing models, they were utilized to forecast multi-step-ahead 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values on the test dataset at the respective weather stations. To evaluate the forecasting performance, various statistical performance indices were computed and are presented in Table 8 and Table 9. Additionally, the results are visualized in Figure 3 and Figure 4. Table 8. Performance of the best models on test dataset to forecast maximum temperatures ( 𝑇 𝑚𝑎𝑥 ) under various forecast horizons at the weather stations. Table 9. Performance of the best models on test dataset to forecast minimum temperatures ( 𝑇 𝑚𝑖𝑛 ) under various forecast horizons at the weather stations. Table 8 presents a comprehensive overview of the performance of the best models in forecasting 𝑇 𝑚𝑎𝑥 under five different forecast horizons at the weather stations. It can be observed from Table 8 that the selected models consistently produced lower values of various performance metrics such as RMSE, NRMSE, MAPRE, MAD, MBE, and PBIAS. This indicates that the models have demonstrated improved accuracy in forecasting 𝑇 𝑚𝑎𝑥 . It is also inferred from the results presented in Table 8 that the forecasting performance slightly decreased with an increase in the forecast horizon. This observation aligns with prior findings reported in studies by Rahman et al. [42] and Barzegar et al. [89], which indicated that ML-based forecast models tend to exhibit reduced accuracy as the forecast horizon extends further into the future. The RMSE values were pretty small for all selected models across the weather stations. Small RMSE values generally indicate that the models’ predictions are closely aligned with the actual observations, suggesting a high level of accuracy in the forecasts. The NRMSE values were consistently less than 0.1 for all instances. An NRMSE below 0.1 is considered excellent performance in forecasting, as it indicates that the forecasted values are very close to the actual values [77,78]. The MAPRE values are also within acceptable ranges. For Barishal, Gzipur, and Ishurdi stations, the MAPRE values were below 8% (ranging from 5.091% to 7.954% for different forecast horizons), 7% (ranging from 4.737% to 6.468% for different forecast horizons), and 6% (ranging from 4.728% to 5.426% for different forecast horizons), respectively, depending on the forecast horizons. Since a MAPRE value below 10% is deemed acceptable for ML-based forecast models [90], these results suggest that the selected models are producing forecasts that meet or exceed acceptable standards. In summary, these performance indices demonstrate that the selected best forecast models are capable of producing accurate and reliable forecasts for 𝑇 𝑚𝑎𝑥 values at the weather stations, as evidenced by their small RMSE and NRMSE values, as well as MAPRE values that are well within the acceptable range. The MAD values are also reported as being acceptable for all models. These values ranged from 0.634 °C for a one-day-ahead forecast at Gazipur station to 1.070 °C for a five-days-ahead forecast at Barishal station. The lower the MAD is, the closer the forecasts are to the actual values, indicating accurate model forecasts. Additionally, the models produced smaller values of MBE and PBIAS, which were pretty close to the optimal value of 0.0. MBE quantifies the average bias (overestimation or underestimation) in the forecasts, while PBIAS provides a measure of the Percentage Bias. The models produced low-magnitude values of both MBE and PBIAS, indicating that they are making reasonably accurate forecasts. Some models show negative MBE and PBIAS values, indicating a slight underestimation bias, particularly for Gazipur and Ishurdi stations and for three-days-ahead forecasts at Barishal station. On the other hand, positive MBE and PBIAS values are observed for one-day-, two-days-, four-days-, and five-days-ahead 𝑇 𝑚𝑎𝑥 forecasts at the Barishal station, suggesting a slight overestimation bias (Table 8). These biases are of smaller magnitude, indicating that the models tend to slightly under-predict or over-predict temperature values, but the deviations from the actual values are not substantial. In summary, the forecast models are delivering forecasts with acceptable levels of accuracy, as indicated by the MAD, MBE, and PBIAS values. While some models exhibit slight underestimation or overestimation biases, these biases are relatively small, and the forecasts are still considered accurate. These results provide confidence in the performance of the selected forecast models. Table 9 presents a comprehensive assessment of the performance of the top-performing models for forecasting 𝑇 𝑚𝑖𝑛 values under the five forecast horizons at the weather stations. It can be seen from Table 9 that the overall forecasting performances of the models are acceptable, although the models showed slightly poor performance with respect to the computed RMSE, NRMSE, and MAPRE values when compared to the forecasting of 𝑇 𝑚𝑎𝑥 (Table 8). Nevertheless, the models produced lower RMSE values (Table 9). The computed NRMSE criterion suggests that the model performances were excellent (NRMSE < 0.1) to good (NRMSE values slightly higher than 0.1, i.e., NRMSE > 0.1 and NRMSE < 0.2) according to the ranges reported in Heinemann et al. [77] and Li et al. [78]. On the other hand, the models produced lower MAD, MBE, and PBIS values compared to those for the models developed for forecasting 𝑇 𝑚𝑎𝑥 (Table 8 and Table 9). It is noted that the computed MBE and PBIAS values were pretty close to the ideal value of 0.0. According to the MBE criterion, the models produced very small amounts of underestimated biases, as indicated by the negative MBE values for all forecasting horizons and at all weather stations (Table 9). Similarly, the PBIAS criterion also suggests that mostly underestimated biases existed, except for the model developed to forecast 𝑇 𝑚𝑖𝑛 for two-step-ahead at the Barishal weather station. The findings are reported in the form of bar diagrams, especially to demonstrate the model performance based on some other statistical performance indices. Figure 4 and Figure 5 illustrate the models’ performance with respect to accuracy, R, NS, IOA, and KGE criteria. These performance indices are referred to as benefit indices, because higher values of these indices indicate improved model performance. Figure 4 shows the performance of the best models on the test dataset when forecasting 𝑇 𝑚𝑎𝑥 across different forecast horizons at the respective weather stations. This visual representation allows for a quick and easy assessment of how well the models are performing and how their performance varies with different lead times (forecast horizons). Figure 5. Performance of the best models on test dataset to forecast minimum temperatures ( 𝑇 𝑚𝑖𝑛 ) under various forecast horizons at the weather stations. Figure 4 reveals important insights into the performance of the best models for forecasting 𝑇 𝑚𝑎𝑥 under different forecast horizons at the weather stations. It is perceived from Figure 4 that the best models consistently demonstrate excellent performance with regard to the accuracy and IOA criteria, where accuracy values are close to 1, and IOA values exceed 0.8 for all forecast horizons. This indicates that the models produce forecasts that closely align with observed data and show a strong agreement with the reference measurements. Notably, the accuracy criterion does not exhibit a decreasing trend with an increase in the forecast horizon. In other words, the models maintain high accuracy regardless of the lead time. This is a positive finding, suggesting that the models are reliable for both short-term and longer-term forecasts. However, the R, NS, IOA, and KGE values indicate that the model performance is indeed influenced by the forecast horizon. These indices suggest that the forecasting performance tends to decrease as the forecast horizon increases, which is consistent with prior research [42,89]. R values are higher than 0.8 for the first and second forecast horizons (one- and two-step-ahead forecasts) at all weather stations. However, a decrease in R values is observed as the forecast horizon extends, with the lowest R value (0.771) occurring at the fifth forecast horizon for the Ishurdi station. In general, model performances were relatively poor with respect to the NS and KGE criteria (Figure 4). The findings of this research is in good agreement with the findings presented in Müller and Piché [91], who stated that ML-based models often showed contrasting performance with respect to different performance evaluation indices. These findings collectively suggest that the models are especially well suited for shorter-term forecasts, but they still provide valuable forecasts for longer lead times, albeit with slightly reduced performance. In order to forecast 𝑇 𝑚𝑖𝑛 at the weather stations over a range of forecast horizons, the best models were tested against the test dataset. The findings are presented in Figure 5, which shows the performance of the best models for forecasting 𝑇 𝑚𝑖𝑛 under various forecast horizons at the weather stations. Figure 5 suggests that the selected top models performed exceptionally well for all forecast horizons and at all the weather stations. This is particularly evident from the accuracy and IOA values, which consistently exceed 0.95. Such high accuracy and IOA values indicate excellent model performance, suggesting that the models generate forecasts that closely match the observed data. Similar to the 𝑇 𝑚𝑎𝑥 forecast, the accuracy of the models remains high across different forecast horizons, with accuracy values close to 1. This indicates that the models maintain their high forecasting accuracy regardless of the lead time. Contrary to accuracy, other performance evaluation indices, including NS, IOA, and KGE, display a diminishing trend as the prediction horizon is extended. This is in line with the common observation that the forecasting performance tends to decrease as the forecast horizon increases, which aligns with the results observed for 𝑇 𝑚𝑎𝑥 forecasting. It is important to note that the R values appear to be consistent across all weather stations. These values are high, exceeding 0.90, indicating a strong correlation between the model forecasts and the observed data. In general, the best models appeared to perform better across all forecast horizons based on the R (>0.90), NS (>0.81), and KGE (>0.87) criterion values. Overall, the findings from Figure 5 suggest that the selected models perform remarkably well in forecasting 𝑇 𝑚𝑖𝑛 over various forecast horizons and at different weather stations. The models exhibit high accuracy, strong correlations, and consistent performance across forecast horizons, even though other indices show a slight decrease with an increasing forecast lead time. In a comparative context, the results for 𝑇 𝑚𝑖𝑛 forecasting seem to outperform those for 𝑇 𝑚𝑎𝑥 forecasting. This improvement in 𝑇 𝑚𝑖𝑛 forecasting performance might be attributed to the quality and volume of the collected data. High-quality and abundant data often lead to more accurate forecasts. While direct comparisons among the results presented in this research are hindered by the diverse study conditions and modeling approaches employed, an indirect evaluation was conducted by contrasting the computed performance indices in this study with those in previous research. For one-day-ahead minimum temperature forecasts, R2 values of 0.939, 0.911, and 0.901 were achieved across the Barishal, Gazipur, and Ishurdi stations, respectively. Conversely, for one-day-ahead maximum temperature forecasts, R2 values of 0.819, 0.764, and 0.633 were obtained for the same stations. These results surpass the outcomes of previous studies utilizing CNN (~0.5), LSTM (~0.6), and CNN-LSTM (~0.7) for one-day-ahead temperature forecasts [33]. Moreover, our findings compare favorably or even outperform those of Ebtehaz et al. [27], who utilized IORELM for 10 h ahead temperature forecasts (R = 0.95, NSE = 0.89, RMSE = 3.74, MAE = 1.92). Our best models yielded RMSE values of approximately 2.0 °C and 1.5 °C for one-day-ahead maximum and minimum temperature forecasts, respectively. The detailed statistical performance indices for the proposed best models are provided in Figure 4 and Figure 5, as well as in Table 8 and Table 9. Furthermore, our research outcomes stand up well against those of Fister et al. [29], focusing on the temperature dataset of the Paris region. Our proposed best model exhibited superior performance compared to Lasso Regression, Decision Tree, Adaboost, RF, and CNN in terms of MSE values. Alomar et al. [17] identified the SVR model as the top performer for daily temperature forecasting, achieving an RMSE value of 3.592 °C, which is higher than the RMSE values produced by our proposed best models for both minimum and maximum temperature forecasts across the three weather stations (refer to Table 8 and Table 9). In terms of the RMSE criterion, our proposed best models demonstrated comparable or superior performance (RMSE ~ 2 °C for both minimum and maximum temperatures) compared to the ANN (RMSE ~ 3 °C), GEP (RMSE ~ 3 °C), and HBA-ANN (RMSE ~ 2 °C) models that were developed for the coldest and warmest regions globally [23]. Based on this comprehensive comparison, it can be argued that our proposed best models exhibit acceptable and sometimes superior performance compared to recently proposed machine and deep learning models for temperature forecasting. However, it is important to note that direct comparisons are challenging due to variations in data and study locations. The research on automated model selection using Bayesian optimization and the asynchronous successive halving algorithm for predicting daily minimum and maximum temperatures holds crucial implications for the agricultural domain. Accurate temperature predictions are fundamental to agricultural planning, impacting crop growth, yield estimation, and resource allocation. The application of Bayesian optimization ensures a thorough exploration of model parameters, enhancing the precision of temperature forecasts, which is crucial for optimal crop management. The incorporation of the asynchronous successive halving algorithm contributes to computational efficiency in finding the optimal hyperparameters for the selected best models. As a result, this research has the potential to significantly improve agricultural productivity, resource utilization, and resilience to climate variability, ultimately benefiting farmers and stakeholders across the agricultural supply chain. 4. Conclusions Accurate and reliable forecasting of daily maximum ( 𝑇 𝑚𝑎𝑥 ) and minimum ( 𝑇 𝑚𝑖𝑛 ) temperatures can be effectively utilized in the development of a sustainable and efficient agricultural water management strategy. However, due to nonlinear interactions between temperatures and other explanatory variables, as well as their multi-scale behavior that changes over time, producing reliable temperature ( 𝑇 𝑚𝑎𝑥  and  𝑇 𝑚𝑖𝑛 ) forecasts is often challenging. The prerequisites for creating accurate ML-based forecast models include selecting only the most influential input variables from a list of prospective input variables and optimizing model parameters. To address these challenges, this study proposes an innovative approach for selecting the most influential input variables and determining the best predictive models for forecasting daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values. These methods were combined with Bayesian and ASHA hyperparameter tuning to perform automated model parameter estimation. Notably, this study is the first to utilize the Bayesian and ASHA algorithms for automating the model selection process to provide accurate 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 forecasts at different weather stations in Bangladesh. Furthermore, the study provides a comparison of the best models that are tuned with Bayesian and ASHA algorithms. The selected best models were explored for one-, two-, three-, four-, and five-days-ahead 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 forecasting. The top-performing models for different forecasting horizons (1-day-, 2-days-, 3-days-, 4-days-, and 5-days-ahead) at the three weather stations were identified. The results demonstrate the suitability of these models in forecasting multi-step-ahead (5-days-ahead) daily 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values, as indicated by the computed performance evaluation indices. The findings of this research demonstrated the ability and practical applicability of the proposed models in forecasting days-ahead 𝑇 𝑚𝑎𝑥 and 𝑇 𝑚𝑖𝑛 values at the weather stations. The primary objective of this research is to propose an ML-based methodology that is capable of accurately approximating daily temperature fluctuations and providing multi-step-ahead temperature forecasts. Importantly, the proposed methodology can be applied to other regions with diverse data ranges. Given the varying time intervals in the data from the three weather stations, the ML-based modeling approaches were developed separately for each station. The duration of data collection was determined based on the availability of data from the selected weather stations within the study area. Despite the absence of data for specific time intervals at some weather stations, the available dataset, spanning approximately a reasonable duration, remains sufficient and valuable for addressing the research objectives. Therefore, we believe that our findings are relevant and contribute significantly to the advancement of the field. Indeed, utilizing similar interval data for all stations and developing a model for one station, then validating its generalization capability at other stations, would be an interesting topic for future research. This approach could provide insights into the transferability and robustness of the proposed ML-based methodology across different weather stations and regions. The research paper presented a novel approach for automated model selection using Bayesian and ASHA algorithms. The findings contribute to the field of climate science and weather forecasting, providing valuable insights into improving temperature prediction models through automation and optimization techniques. The proposed methodology can be further extended and applied to other domains requiring accurate and efficient model selection. In this research, a limited set of ML algorithms was employed for selecting the best model, with the assistance of Bayesian and ASHA optimization algorithms. To broaden the scope of future studies, a more comprehensive array of ML algorithms could be explored for hyperparameter tuning using optimization algorithms. Additionally, the inclusion of a few deep learning algorithms in the pool of prospective models could be considered, enabling a more thorough exploration of the best-performing model through parameter tuning. The use of the Bayesian and ASHA optimization algorithms to fine-tune hyperparameters across multiple ML algorithms facilitates the automatic selection of the most effective forecasting model. It is noteworthy that alternative optimization algorithms, such as the genetic algorithm (GA) or particle swarm optimization (PSO), could also be investigated in future studies. However, it is essential to mention that while incorporating a diverse set of ML and optimization algorithms could enhance the depth of the study, it comes with the trade-off of increased complexity and time consumption in hyperparameter tuning across multiple ML models. This potential intricacy may pose challenges in achieving optimum results within the set parameters. Author Contributions Conceptualization, methodology, investigation, resources, data curation, project administration, formal analysis, and writing—original draft preparation: D.K.R., M.A.H. and M.P.H.; data curation, project administration, investigation, and writing—review and editing: A.A., A.Z.D. and M.A.M. All authors have read and agreed to the published version of the manuscript. Funding The authors extend their appreciation to the Deputyship for Research & Innovation, Ministry of Education in Saudi Arabia for funding this research (IFKSURC-1-4106). Institutional Review Board Statement Not applicable. Data Availability Statement The original contributions presented in the study are included in the article, further inquiries can be directed to the corresponding author. Acknowledgments The authors extend their appreciation to the Deputyship for Research & Innovation, Ministry of Education in Saudi Arabia for funding this research (IFKSURC-1-4106). Conflicts of Interest The authors declare no conflicts of interest. References Roy, D.S. Forecasting the air temperature at a weather station using deep neural networks. Procedia Comput. Sci. 2020, 178, 38–46. [Google Scholar] [CrossRef] Parker, D.J.; Blyth, A.M.; Woolnough, S.J.; Dougill, A.J.; Bain, C.L.; de Coning, E.; Diop-Kane, M.; Kamga Foamouhoue, A.; Lamptey, B.; Ndiaye, O.; et al. The African SWIFT Project: Growing Science Capability to Bring about a Revolution in Weather Prediction. Bull. Am. Meteorol. Soc. 2022, 103, E349–E369. [Google Scholar] [CrossRef] Allen, R.G.; Pereira, L.S.; Raes, D.; Smith, M. Crop Evapotranspiration—Guidelines for Computing Crop Water Requirements—FAO Irrigation and Drainage Paper 56; FAO: Rome, Italy, 1998. [Google Scholar] Ali, M.H. Crop Water Requirement and Irrigation Scheduling. In Fundamentals of Irrigation and On-Farm Water Management: Volume 1; Ali, M.H., Ed.; Springer New York: New York, NY, USA, 2010; pp. 399–452. ISBN 978-1-4419-6335-2. [Google Scholar] Wang, J.; Xin, L.; Wang, X.; Jiang, M. The Impact of Climate Change and Grain Planting Structure Change on Irrigation Water Requirement for Main Grain Crops in Mainland China. Land 2022, 11, 2174. [Google Scholar] [CrossRef] Haque, M.P.; Hossain, M.; Muhammad, A. Climate Change Effect on Irrigation Water Requirement of Wheat and Maize in Northern Part of Bangladesh. Int. J. Clim. Res. 2021, 5, 25–34. [Google Scholar] [CrossRef] Lobell, D.; Field, C. Global Scale Climate–Crop Yield Relationships and the Impacts of Recent Warming. Environ. Res. Lett. 2007, 2, 14002. [Google Scholar] [CrossRef] Tao, F.; Zhang, S.; Zhang, Z.; Rötter, R.P. Maize Growing Duration Was Prolonged across China in the Past Three Decades under the Combined Effects of Temperature, Agronomic Management, and Cultivar Shift. Glob. Chang. Biol. 2014, 20, 3686–3699. [Google Scholar] [CrossRef] [PubMed] Gregory, P.J.; Johnson, S.N.; Newton, A.C.; Ingram, J.S.I. Integrating Pests and Pathogens into the Climate Change/Food Security Debate. J. Exp. Bot. 2009, 60, 2827–2838. [Google Scholar] [CrossRef] [PubMed] Paniagua-Tineo, A.; Salcedo-Sanz, S.; Casanova-Mateo, C.; Ortiz-García, E.G.; Cony, M.A.; Hernández-Martín, E. Prediction of daily maximum temperature using a support vector regression algorithm. Renew. Energy 2011, 36, 3054–3060. [Google Scholar] [CrossRef] Attar, N.F.; Khalili, K.; Behmanesh, J.; Khanmohammadi, N. On the reliability of soft computing methods in the esti-mation of dew point temperature: The case of arid regions of Iran. Comput. Electron. Agric. 2018, 153, 334–346. [Google Scholar] [CrossRef] Curceac, S.; Ternynck, C.; Ouarda, T.B.M.J.; Chebana, F.; Niang, S.D. Short-term air temperature forecasting using Nonparametric Functional Data Analysis and SARMA models. Environ. Model. Softw. 2019, 111, 394–408. [Google Scholar] [CrossRef] Naganna, S.R.; Deka, P.C.; Ghorbani, M.A.; Biazar, S.M.; Al-Ansari, N.; Yaseen, Z.M. Dew point temperature estima-tion: Application of artificial intelligence model integrated with nature-inspired optimization algorithms. Water 2019, 11, 742. [Google Scholar] [CrossRef] Salcedo-Sanz, S.; Deo, R.C.; Carro-Calvo, L.; Saavedra-Moreno, B. Monthly prediction of air temperature in Australia and New Zealand with machine learning algorithms. Theor. Appl. Climatol. 2016, 125, 13–25. [Google Scholar] [CrossRef] Marchuk, G.I. 5—A weather prediction scheme based on conservation laws. In Numerical Methods in Weather Prediction; Marchuk, G.I., Ed.; Academic Press: Cambridge, MA, USA, 1974; pp. 161–199. [Google Scholar] [CrossRef] Richardson, L.F. The fundamental equations. In Weather Prediction by Numerical Process, Cambridge Mathematical Library; Richardson, L.F., Ed.; Cambridge Mathematical Library, Cambridge University Press: Cambridge, UK, 2007; pp. 21–114. [Google Scholar] [CrossRef] Alomar, M.; Khaleel, F.; Aljumaily, M.; Masood, A.; Mohd Razali, S.F.; Alsaadi, M.; Al-Ansari, N.; Hameed, M. Data-driven models for atmospheric air temperature forecasting at a continental climate region. PLoS ONE 2022, 17, e0277079. [Google Scholar] [CrossRef] [PubMed] Cifuentes, J.; Marulanda, G.; Bello, A.; Reneses, J. Air temperature forecasting using machine learning techniques: A review. Energies 2020, 13, 4215. [Google Scholar] [CrossRef] Deng, T.; Duan, H.-F.; Keramat, A. Spatiotemporal characterization and forecasting of coastal water quality in the semi-enclosed Tolo Harbour based on machine learning and EKC analysis. Eng. Appl. Comput. Fluid Mech. 2022, 16, 694–712. [Google Scholar] [CrossRef] Zhu, S.; Hadzima-Nyarko, M.; Gao, A.; Wang, F.; Wu, J.; Wu, S. Two hybrid data-driven models for modeling wa-ter-air temperature relationship in rivers. Environ. Sci. Pollut. Res. 2019, 26, 12622–12630. [Google Scholar] [CrossRef] Papacharalampous, G.; Tyralis, H.; Koutsoyiannis, D. Univariate time series forecasting of temperature and precipita-tion with a focus on machine learning algorithms: A multiple-case study from Greece. Water Resour. Manag. 2018, 32, 5207–5239. [Google Scholar] [CrossRef] Gómez-Orellana, A.M.; Guijo-Rubio, D.; Pérez-Aracil, J.; Gutiérrez, P.A.; Salcedo-Sanz, S.; Hervás-Martínez, C. One month in advance prediction of air temperature from Reanalysis data with explainable Artificial Intelligence techniques. Atmos. Res. 2023, 284, 106608. [Google Scholar] [CrossRef] Zhou, J.; Wang, D.; Band, S.S.; Mirzania, E.; Roshni, T. Atmosphere air temperature forecasting using the honey badger optimization algorithm: On the warmest and coldest areas of the world. Eng. Appl. Comput. Fluid Mech. 2023, 17, 2174189. [Google Scholar] [CrossRef] Mirarabi, A.; Nassery, H.R.; Nakhaei, M.; Adamowski, J.; Akbarzadeh, A.H.; Alijani, F. Evaluation of data-driven models (SVR and ANN) for groundwater-level prediction in confined and unconfined systems. Environ. Earth Sci. 2019, 78, 489. [Google Scholar] [CrossRef] Radhika, Y.; Shashi, M. Atmospheric temperature prediction using support vector machines. Int. J. Comput. Theory Eng. 2009, 1, 55–58. [Google Scholar] [CrossRef] Sanikhani, H.; Deo, R.C.; Samui, P.; Kisi, O.; Mert, C.; Mirabbasi, R.; Gavili, S.; Yaseen, Z.M. Survey of different da-ta-intelligent modeling strategies for forecasting air temperature using geographic information as model predictors. Comput. Electron. Agric. 2018, 152, 242–260. [Google Scholar] [CrossRef] Ebtehaj, I.; Bonakdari, H.; Gharabaghi, B.; Khelifi, M. Time-series-based air temperature forecasting based on the outli-er robust extreme learning machine. Environ. Sci. Proc. 2023, 25, 51. [Google Scholar] [CrossRef] Shahdad, M.; Saber, B. Multistep-ahead forecasting for maximum and minimum air temperatures using a new hybrid intelligence tree-based filter classifier. Model. Earth Syst. Environ. 2022, 8, 5449–5465. [Google Scholar] [CrossRef] Fister, D.; Pérez-Aracil, J.; Peláez-Rodríguez, C.; Del Ser, J.; Salcedo-Sanz, S. Accurate long-term air temperature pre-diction with Machine Learning models and data reduction techniques. Appl. Soft Comput. 2023, 136, 110118. [Google Scholar] [CrossRef] Handler, S.L.; Reeves, H.D.; McGovern, A. Development of a probabilistic subfreezing road temperature nowcast and forecast using machine learning. Weather Forecast. 2020, 35, 1845–1863. [Google Scholar] [CrossRef] Yang, Q.; Lee, C.-Y.; Tippett, M.K. A long short-term memory model for global rapid intensification prediction. Weather Forecast. 2020, 35, 1203–1220. [Google Scholar] [CrossRef] Sari, Y.; Arifin, Y.F.; Novitasari, N.; Faisal, M.R. Deep learning approach using the GRU-LSTM hybrid model for air temperature prediction on daily basis. Int. J. Intell. Syst. Appl. Eng. 2022, 10, 430–436. [Google Scholar] Hou, J.; Wang, Y.; Zhou, J.; Tian, Q. Prediction of hourly air temperature based on CNN–LSTM. Geomat. Nat. Hazards Risk 2022, 13, 1962–1986. [Google Scholar] [CrossRef] Khan, M.I.; Maity, R. Hybrid deep learning approach for multi-step-ahead prediction for daily maximum temperature and heatwaves. Theor. Appl. Climatol. 2022, 149, 945–963. [Google Scholar] [CrossRef] Gong, Y.; Wang, Z.; Xu, G.; Zhang, Z. A Comparative study of groundwater level forecasting using data-driven models based on ensemble empirical mode decomposition. Water 2018, 10, 730. [Google Scholar] [CrossRef] Moravej, M.; Amani, P.; Hosseini-Moghari, S.-M. Groundwater level simulation and forecasting using interior search algorithmleast square support vector regression (ISA-LSSVR). Groundw. Sustain. Dev. 2020, 11, 100447. [Google Scholar] [CrossRef] Snoek, J.; Larochelle, H.; Adams, R. Practical Bayesian optimization of machine learning algorithms. In Advances in Neural Information Processing Systems; Curran Associates, Inc.: Nice, France, 2012; Volume 4. [Google Scholar] Li, L.; Jamieson, K.; Rostamizadeh, A.; Gonina, E.; Ben-Tzur, J.; Hardt, M.; Recht, B.; Talwalkar, A. A system for massively parallel hyperparameter tuning. In Proceedings of the 3 Rd MLSys Conference, Austin, TX, USA, 2–4 March 2020. [Google Scholar] Galelli, S.; Humphrey, G.B.; Maier, H.R.; Castelletti, A.; Dandy, G.C.; Gibbs, M.S. An evaluation framework for input variable selection algorithms for environmental data-driven models. Environ. Model. Softw. 2014, 62, 33–51. [Google Scholar] [CrossRef] Quilty, J.; Adamowski, J.; Khalil, B.; Rathinasamy, M. Bootstrap rank-ordered conditional mutual information (broCMI): A nonlinear input variable selection method for water resources modeling. Water Resour. Res. 2016, 52, 2299–2326. [Google Scholar] [CrossRef] Yaseen, Z.M.; Jaafar, O.; Deo, R.C.; Kisi, O.; Adamowski, J.; Quilty, J.; El-Shafie, A. Stream-flow forecasting using extreme learning machines: A case study in a semiarid region in Iraq. J. Hydrol. 2016, 542, 603–614. [Google Scholar] [CrossRef] Rahman, A.T.M.S.; Hosono, T.; Quilty, J.M.; Das, J.; Basak, A. Multiscale groundwater level forecasting: Coupling new machine learning approaches with wavelet transforms. Adv. Water Resour. 2020, 141, 103595. [Google Scholar] [CrossRef] Lam, R.; Willcox, K.; Wolpert, D.H. Bayesian optimization with a finite budget: An approximate dynamic program-ming approach. In Advances in Neural Information Processing Systems, Proceedings of the 29th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain, 5–10 December 2016; Neural Information Processing Systems Foundation, Inc.: San Diego, CA, USA, 2017. [Google Scholar] Shahid, S.; Harun, S.; Katimon, A. Changes in Diurnal Temperature Range in Bangladesh during the Time Period 1961–2008. Atmos. Res. 2012, 118, 260–270. [Google Scholar] [CrossRef] Arnfield, A.J. Köppen Climate Classification. Encyclopedia Britannica. 2023. Available online: https://www.britannica.com/science/Koppen-climate-classification (accessed on 2 November 2023). Betts, A.K.; Ball, J.H. The FIFE Surface Diurnal Cycle Climate. J. Geophys. Res. Atmos. 1995, 100, 25679–25693. [Google Scholar] [CrossRef] Thomson, D.J. The Seasons, Global Temperature, and Precession. Science 1995, 268, 59–68. [Google Scholar] [CrossRef] [PubMed] Estévez, J.; García-Marín, A.P.; Morábito, J.A.; Cavagnaro, M. Quality assurance procedures for validating meteoro-logical input variables of reference evapotranspiration in mendoza province (Argentina). Agric. Water Manag. 2016, 172, 96–109. [Google Scholar] [CrossRef] Feng, S.; Hu, Q.; Qian, W. Quality control of daily meteorological data in China, 1951–2000: A new dataset. Int. J. Climatol. 2004, 24, 853–870. [Google Scholar] [CrossRef] Shafer, M.A.; Fiebrich, C.A.; Arndt, D.S.; Fredrickson, S.E.; Hughes, T.W. Quality Assurance Procedures in the Okla-homa Mesonetwork. J. Atmos. Ocean. Technol. 2000, 17, 474–494. [Google Scholar] [CrossRef] Dasgupta, A.; Wahed, A. Chapter 4—Laboratory Statistics and Quality Control. In Clinical Chemistry, Immunology and Laboratory Quality Control; Dasgupta, A., Wahed, A., Eds.; Elsevier: Berlin/Heidelberg, Germany, 2014; pp. 47–66. ISBN 978-0-12-407821-5. [Google Scholar] Deo, R.C.; Downs, N.; Parisi, A.V.; Adamowski, J.F.; Quilty, J.M. Very short-term reactive forecasting of the solar ultra-violet index using an extreme learning machine integrated with the solar zenith angle. Environ. Res. 2017, 155, 141–166. [Google Scholar] [CrossRef] [PubMed] Barzegar, R.; Ghasri, M.; Qi, Z.; Quilty, J.; Adamowski, J. Using bootstrap ELM and LSSVM models to estimate river ice thickness in the Mackenzie River Basin in the Northwest Territories, Canada. J. Hydrol. 2019, 577, 123903. [Google Scholar] [CrossRef] Hadi, S.J.; Abba, S.I.; Sammen, S.S.; Salih, S.Q.; Al-Ansari, N.; Yaseen, Z.M. Non-linear input variable selection ap-proach integrated with non-tuned data intelligence model for streamflow pattern simulation. IEEE Access 2019, 7, 141533–141548. [Google Scholar] [CrossRef] Shannon, C.E. A mathematical theory of communication. Bell Syst. Tech. J. 1948, 27, 379–423. [Google Scholar] [CrossRef] Taormina, R.; Galelli, S.; Karakaya, G.; Ahipasaoglu, S.D. An information theoretic approach to select alternate subsets of predictors for data-driven hydrological models. J. Hydrol. 2016, 542, 18–34. [Google Scholar] [CrossRef] Box, G.E.P.; Jenkins, G.M.; Reinsel, G.C. Time Series Analysis: Forecasting and Control, 3rd ed.; Prentice Hall: Englewood Cliffs, NJ, USA, 1994. [Google Scholar] Nash, W.J.; Sellers, T.L.; Talbot, S.R.; Cawthorn, A.J.; Ford, W.B. The Population Biology of Abalone (Haliotis species) in Tasmania. I. Blacklip Abalone (H. rubra) from the north coast and islands of Bass Strait; Technical Report no. 48; Department of Primary Industry and Fisheries: Tasmania, Australia, 1994. Waugh, S. Extending and Benchmarking Cascade-Correlation: Extensions to the Cascade-Correlation Architecture and Benchmarking of Feed-Forward Supervised Artificial Neural Networks; University of Tasmania: Tasmania, Australia, 1995. [Google Scholar] Darbellay, G.A.; Vajda, I. Estimation of the information by an adaptive partitioning of the observation space. IEEE Trans. Inf. Theory 1999, 45, 1315–1321. [Google Scholar] [CrossRef] Ding, C.; Peng, H. Minimum redundancy feature selection from microarray gene expression data. J. Bioinform. Comput. Biol. 2005, 3, 185–205. [Google Scholar] [CrossRef] Yang, W.; Wang, K.; Zuo, W. Neighborhood component feature selection for high-dimensional data. J. Comput. 2012, 7, 161–168. [Google Scholar] [CrossRef] Probst, P.; Wright, M.N.; Boulesteix, A.-L. Hyperparameters and tuning strategies for random forest. WIREs Data Min. Knowl. Discov. 2019, 9, e1301. [Google Scholar] [CrossRef] Zhang, F.; Deb, C.; Lee, S.E.; Yang, J.; Shah, K.W. Time series forecasting for building energy consumption using weighted Support Vector Regression with differential evolution optimization technique. Energy Build. 2016, 126, 94–103. [Google Scholar] [CrossRef] Jeong, J.; Park, E. Comparative applications of data-driven models representing water table fluctuations. J. Hydrol. 2019, 572, 261–273. [Google Scholar] [CrossRef] Bergstra, J.; Bengio, Y. Random search for hyper-parameter optimization. J. Mach. Learn. Res. 2012, 13, 281–305. [Google Scholar] Falkner, S.; Klein, A.; Hutter, F. BOHB: Robust and efficient hyperparameter optimization at scale. In Proceedings of the 35th International Conference on Machine Learning, Stockholm, Sweden, 10–15 July 2018. [Google Scholar] Gelbart, M.; Snoek, J.; Adams, R. Bayesian optimization with unknown constraints. arXiv 2014, arXiv:1403.5607. [Google Scholar] Jamieson, K.; Talwalkar, A. Non-stochastic best arm identification and hyperparameter optimization. In Proceedings of the 19th International Conference on Artificial Intelligence and Statistics, Cadiz, Spain, 9–11 May 2016. [Google Scholar] Karnin, Z.; Koren, T.; Somekh, O. Almost optimal exploration in multi-armed bandits. In Proceedings of the 30th International Conference on Machine Learning, ICML 2013, Atlanta, GA, USA, 16–21 June 2013; pp. 2275–2283. [Google Scholar] Gupta, H.V.; Sorooshian, S.; Yapo, P.O. Status of automatic calibration for hydrologic models: Comparison with multi-level expert calibration. J. Hydrol. Eng. 1999, 4, 135–143. [Google Scholar] [CrossRef] Moriasi, D.N.; Arnold, J.G.; Van Liew, M.W.; Bingner, R.L.; Harmel, R.D.; Veith, T.L. Model evaluation guidelines for systematic quantification of accuracy in watershed simulations. Trans. ASABE 2007, 50, 885–900. [Google Scholar] [CrossRef] Willmott, C.J. On the validation of models. Phys. Geogr. 1981, 2, 184–194. [Google Scholar] [CrossRef] Legates, D.R.; McCabe, G.J., Jr. Evaluating the use of “goodness-of-fit” measures in hydrologic and hydroclimatic model validation. Water Resour. Res. 1999, 35, 233–241. [Google Scholar] [CrossRef] Gupta, H.V.; Kling, H.; Yilmaz, K.K.; Martinez, G.F. Decomposition of the mean squared error and NSE performance criteria: Implications for improving hydrological modelling. J. Hydrol. 2009, 377, 80–91. [Google Scholar] [CrossRef] Kling, H.; Fuchs, M.; Paulin, M. Runoff conditions in the upper Danube basin under an ensemble of climate change scenarios. J. Hydrol. 2012, 424–425, 264–277. [Google Scholar] [CrossRef] Heinemann, A.; Oort, P.; Fernandes, D.; Maia, A. Sensitivity of APSIM/ORYZA model due to estimation errors in solar radiation. Bragantia 2011, 71, 572–582. [Google Scholar] [CrossRef] Li, M.-F.; Tang, X.-P.; Wu, W.; Liu, H.-B. General models for estimating daily global solar radiation for different solar radiation zones in mainland China. Energy Convers. Manag. 2013, 70, 139–148. [Google Scholar] [CrossRef] Rindskopf, D.; Shiyko, M. Measures of dispersion, skewness and kurtosis. In International Encyclopedia of Education, 3rd ed.; Peterson, P., Baker, E., McGaw, B., Eds.; Elsevier: Oxford, UK, 2010; pp. 267–273. [Google Scholar] [CrossRef] Pal, R. Validation Methodologies. In Predictive Modeling of Drug Sensitivity; Elsevier: Amsterdam, The Netherlands, 2017; pp. 83–107. [Google Scholar] [CrossRef] Elbeltagi, A.; Deng, J.; Wang, K.; Malik, A.; Maroufpoor, S. Modeling long-term dynamics of crop evapotranspiration using deep learning in a semi-arid environment. Agric. Water Manag. 2020, 241, 106334. [Google Scholar] [CrossRef] Kirch, W. Pearson’s correlation coefficient. In Encyclopedia of Public Health; Kirch, W., Ed.; Springer: Dordrecht, The Netherlands, 2008; pp. 1090–1091. [Google Scholar] [CrossRef] Nash, J.E.; Sutcliffe, J.V. River flow forecasting through conceptual models part I—A discussion of principles. J. Hydrol. 1970, 10, 282–290. [Google Scholar] [CrossRef] Hyndman, R.J.; Koehler, A.B. Another look at measures of forecast accuracy. Int. J. Forecast. 2006, 22, 679–688. [Google Scholar] [CrossRef] Pham-Gia, T.; Hung, T.L. The mean and median absolute deviations. Math. Comput. Model. 2001, 34, 921–936. [Google Scholar] [CrossRef] Pledger, S. Unified maximum likelihood estimates for closed capture–recapture models using mixtures. Biometrics 2000, 56, 434–442. [Google Scholar] [CrossRef] [PubMed] Sorooshian, S.; Duan, Q.; Gupta, V.K. Calibration of rainfall-runoff models: Application of global optimization to the Sacramento Soil Moisture Accounting Model. Water Resour. Res. 1993, 29, 1185–1194. [Google Scholar] [CrossRef] Yapo, P.O.; Gupta, H.V.; Sorooshian, S. Automatic calibration of conceptual rainfall-runoff models: Sensitivity to cali-bration data. J. Hydrol. 1996, 181, 23–48. [Google Scholar] [CrossRef] Barzegar, R.; Fijani, E.; Asghari Moghaddam, A.; Tziritis, E. Forecasting of groundwater level fluctuations using en-semble hybrid multi-wavelet neural network-based models. Sci. Total Environ. 2017, 599–600, 20–31. [Google Scholar] [CrossRef] [PubMed] Roy, D.K.; Datta, B. Multivariate adaptive regression spline ensembles for management of multilayered coastal aqui-fers. J. Hydrol. Eng. 2017, 22, 4017031. [Google Scholar] [CrossRef] Müller, J.; Piché, R. Mixture surrogate models based on Dempster-Shafer theory for global optimization problems. J. Glob. Optim. 2011, 51, 79–104. [Google Scholar] [CrossRef]           Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Roy, D.K.; Hossain, M.A.; Haque, M.P.; Alataway, A.; Dewidar, A.Z.; Mattar, M.A. Automated Model Selection Using Bayesian Optimization and the Asynchronous Successive Halving Algorithm for Predicting Daily Minimum and Maximum Temperatures. Agriculture 2024, 14, 278. https://doi.org/10.3390/agriculture14020278 AMA Style Roy DK, Hossain MA, Haque MP, Alataway A, Dewidar AZ, Mattar MA. Automated Model Selection Using Bayesian Optimization and the Asynchronous Successive Halving Algorithm for Predicting Daily Minimum and Maximum Temperatures. Agriculture. 2024; 14(2):278. https://doi.org/10.3390/agriculture14020278 Chicago/Turabian Style Roy, Dilip Kumar, Mohamed Anower Hossain, Mohamed Panjarul Haque, Abed Alataway, Ahmed Z. Dewidar, and Mohamed A. Mattar. 2024. \"Automated Model Selection Using Bayesian Optimization and the Asynchronous Successive Halving Algorithm for Predicting Daily Minimum and Maximum Temperatures\" Agriculture 14, no. 2: 278. https://doi.org/10.3390/agriculture14020278 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations No citations were found for this article, but you may check on Google Scholar Article Access Statistics Article access statistics Article Views 8. Feb 13. Feb 18. Feb 23. Feb 28. Feb 4. Mar 9. Mar 14. Mar 19. Mar 24. Mar 29. Mar 3. Apr 0 200 400 600 800 1000 For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Agriculture, EISSN 2077-0472, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 5:
- APA Citation: Baig, F., Ali, L., Faiz, M. A., Chen, H., & Sherif, M. (2023). Monthly Rainfall Prediction Using Machine Learning for Real-Time Irrigation Control. Remote Sensing, 15(4), 1078. https://doi.org/10.3390/rs15041078
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: In this study, XGBoost (XGB) and LSTM models exhibited promising results during the training phase, achieving a high correlation coefficient (CC) of 0.88 for both. However, their performance declined during the testing phase, where the maximum CC reached only 0.47.
  Extract 2: To address these limitations, a multivariate analysis was adopted, incorporating additional meteorological parameters such as wind Speed, temperature, humidity, and evapotranspiration. This enhancement significantly improved the models' performance during the testing period. XGB achieved a training CC of 0.95 and a testing CC of 0.76, while LSTM improved from 0.68 to 0.75 during training and from 0.21 to 0.71 during testing. Additionally, all the stacked models exhibited promising behavior in both training and testing phases.
  Limitations: The study focused solely on monthly rainfall prediction and did not delve into daily or sub-daily rainfall forecasting. It would be beneficial to extend the research to explore finer temporal scales to provide more granular insights for irrigation management. Additionally, the study did not consider the impact of irrigation practices on the local climate or the potential feedback loop between irrigation and rainfall patterns.
  Relevance Evaluation: The paper is highly relevant to the specific point mentioned in the review intention, as it focuses on the application of ML-generated insights to control irrigation systems without manual intervention and investigating the real-time generation and automated application of actionable irrigation insights. The study provides valuable information on the effectiveness of ML models in predicting monthly rainfall, a crucial factor for efficient irrigation management. By understanding the correlation between meteorological parameters and rainfall, farmers and irrigation system operators can make informed decisions regarding water allocation and irrigation scheduling. The findings on the influence of wind speed and minimum temperature further enhance the practical applicability of the research.
  Relevance Score: 1.0
  Inline Citation: (Baig et al., 2023)
  Explanation: In this study, the research team examined the effectiveness of machine learning (ML) models in enhancing monthly rainfall prediction within a hyper-arid environment. They utilized multiple ML algorithms, including XGBoost (XGB), LSTM, Random Forest (RF), Gradient Boosting, Support Vector Machine (SVM), Multilayer Perceptron (MLP), Linear Regression (LR), and ensemble methods, to analyze the relationship between meteorological parameters and monthly rainfall. Through rigorous evaluation, they determined that XGB and LSTM showed superior performance in predicting monthly rainfall, with XGB achieving a correlation coefficient (CC) of 0.95 during the training phase and 0.76 during the testing phase, while LSTM improved from a training CC of 0.68 to 0.75 during testing. The study also revealed that wind speed and minimum temperature were the most influential factors for accurate monthly rainfall prediction. Overall, the findings suggest that ML models, particularly XGB and LSTM, can enhance monthly rainfall prediction in hyper-arid regions.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Study area description 3. Materials and methods 4. Results and discussions 5. Conclusion Funding CRediT authorship contribution statement Declaration of competing interest Acknowledgment Data availability References Show full outline Figures (19) Show 13 more figures Tables (4) Table 1 Table 2 Table 3 Table 4 Journal of Hydrology Volume 633, April 2024, 131040 Research papers How accurate are the machine learning models in improving monthly rainfall prediction in hyper arid environment? Author links open overlay panel Faisal Baig a b, Luqman Ali c, Muhammad Abrar Faiz b e, Haonan Chen d, Mohsen Sherif a b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.jhydrol.2024.131040 Get rights and content Highlights • Improved rainfall predictions in hyper-arid regions. • Monthly and seasonal rainfall prediction analysis. • Multivariate analysis for enhanced predictive capabilities. • Sensitivity analysis identifies key influential factor in rainfall prediction. • Significance for water resources management and climate adaptation. Abstract Arid regions like the United Arab Emirates (UAE) face a dire challenge of scarce water resources and unpredictable climate patterns. This study investigates the efficacy of advanced Machine Learning (ML) techniques in enhancing rainfall prediction within hyper-arid environments. Leveraging an extensive 30-year dataset from 1991 to 2020, this study harnessed the power of XGBoost, LSTM, Random Forest (RF), Gradient Boost (GB), Support Vector Machine (SVM), Multilayer Perceptron (MLP), Linear Regression (LR), and ensemble methods to significantly enhance the prediction accuracy of monthly rainfall over UAE. In the initial univariate analysis, focused solely on rainfall as the predictor, the ML models displayed encouraging performance during the training phase, achieving an impressive correlation coefficient (CC) of 0.88 for both XGBoost and the ensemble models. However, their predictive efficacy witnessed a decline during the testing phase, where the maximum CC reached 0.45. In contrast, traditional models like Linear Regression and SVM, yielded subpar results in both training and testing, exhibiting correlation values lower than 0.3. To address these limitations, a multivariate analysis is conducted by incorporating additional meteorological parameters, including wind speed, temperature, humidity, and evapotranspiration. This augmentation proved highly beneficial as it substantially enhanced the models' predictive capacities during the testing period. The XGB achieves a CC of 0.76, LSTM improves from 0.21 to 0.71, and stacked models exhibit promising behavior jumping from an average of 0.44 to 0.82 during the testing periods. Additionally, we performed a sensitivity analysis utilizing LASSO regression, which revealed that wind speed and minimum temperature emerged as the most influential parameters for monthly rainfall prediction in the arid context. These two meteorological factors exerted a substantial impact on the accuracy of our predictive models, underscoring their significance in understanding and forecasting rainfall patterns in hyper-arid regions, such as the United Arab Emirates. The identification of these key drivers further strengthens the foundation for effective water resource management and climate adaptation strategies in such challenging environments. This study provides valuable insights for water resource planning, agriculture, and climate resilience strategies in hyper-arid regions. Further research can build upon these results to enhance rainfall prediction models and support sustainable development in arid regions. Graphical abstract Download : Download high-res image (249KB) Download : Download full-size image Previous article in issue Next article in issue Keywords Rainfall forecastingArid regionsMachine learningSensitivity analysis 1. Introduction Rainfall is a meteorological factor of paramount importance, with wide-ranging socioeconomic repercussions such as disruptions in transportation networks and infrastructural damage during floods (Le et al., 2020). As climate change advances, the anticipation of more frequent and devastating floods and extreme weather events looms on the horizon (Yucel et al., 2015). The world's diverse climatic regions experience varying degrees of change in temperature and precipitation, leading to regional differences in the influence of excessive rains and drought occurrences (Faiz et al., 2021, Faiz, Oct. 2018). Climate predictions, encompassing durations from seasons to decades and spatial sizes from local to global, inherently involve probabilistic statements about future climatic conditions, encompassing mean differences and likelihood estimations. Traditional statistical methods (Feng, Nov. 2020, Wang et al., Jun. 2023, Wang, Sep. 2022, Fan et al., Mar. 2023) have long been employed for rainfall prediction; however, the intricate non-linear nature of rainfall presents considerable challenges, prompting the exploration of various statistical and mathematical models (Wu and Chau, 2013). Nevertheless, the efficacy of these techniques has been hindered, primarily due to computational demands and time constraints. Additionally, the stochastic nature of rainfall, dependent on broad atmospheric circulation patterns and local elements, further complicates prediction. Despite these complexities, recent studies have demonstrated successful rainfall prediction using soft computing and data-driven techniques, highlighting the potential of machine learning (ML) models (Abbot and Marohasy, 2018, Gholami Rostam et al., 2020, Gutierrez-Lopez et al., 2019, Pirone et al., Feb. 2023, Diez-Sierra and del Jesus, Jul. 2020). Numerical weather prediction (NWP) techniques, based on physical equations and environmental models, have been instrumental in forecasting rainfall (Bauer et al., 2015). However, the non-linear character of rainfall renders NWP models susceptible to initial meteorological conditions, necessitating complex atmospheric models for improved predictions (J. Coiffier, Fundamentals of Numerical Weather Prediction - Jean Coiffier - Google Books. Cambridge University Press, 2011, Li et al., Aug. 2021, Shi et al., 2015). Alternatively, radar observations coupled with mathematical models have offered viable solutions (Cheung and Yeung, 2012, Chen et al., 2019, Chen et al., Feb. 2020, Woo and Wong, 2017, Bárdossy and Pegram, 2017). Beyond radar-observation-based approaches, the utilization of ML models for rainfall prediction has gained prominence in various hydrological applications, including flood and drought forecasting, flow prediction, reservoir routing, and urban drainage modeling (Piadeh et al., Sep. 2023, Palmitessa et al., Sep. 2022, Tang, Jun. 2023, Lim and Wang, Feb. 2022, Wang et al., Aug. 2022, Chen et al., May 2023). The occurrence and intensity of rainfall are influenced by several climatological factors, including temperature, humidity, sunshine, pressure, and evaporation (Pathan et al., 2021). Researchers have identified crucial atmospheric features, such as temperature, wind, cyclones, solar radiation, and water vapor, for accurate rainfall prediction (V. Singh, “Study of Various Rainfall Estimation Prediction Techniques using Data Mining,” International Journal of Engineering Research Technology, vol. 9, no. 7, Jul., 2020, Thirumalai et al., 2017). ML models like Artificial Neural Networks, Random Forest, and Multiple Linear Regression have demonstrated their effectiveness in incorporating these atmospheric features (Li et al., Aug. 2021, Abebe and Endalie, Jan. 2023, Barrera-Animas et al., Mar. 2022, Cramer et al., Nov. 2017). Recent research has demonstrated the increasing interest in utilizing Deep Neural Networks (DNNs) because of its ability to grasp intricate nonlinear connections that are present in rainfall data. Deep neural networks (DNNs), which are a type of machine learning models, have the potential to enhance the accuracy of monthly rainfall predictions (Frame, 2022). They achieve this by effectively learning from large-scale datasets and extracting complex patterns. The perpetual debate on the changing field of the ML approaches and transformations to Deep Learning and DNNs, several studies have shown promising outcomes especially in the field of rainfall prediction (Van et al., Apr. 2020, Amini et al., Mar. 2024). For instance, Amini et al., (Amini et al., 2024) developed univariate and multivariate DNN models to forecast sub-daily precipitation resulting in a notable 40 % improvement in prediction accuracy. Short term rainfall forecasting and nowcsating has also been successfully performed by utilizing the approaches like LSTM, CNN, PSO-SVR, and various ensemble approaches (Adaryani et al., Nov. 2022, Liu et al., Jun. 2022, Xu, May 2022, Amini et al., Sep. 2022, He et al., Jan. 2024). Neural networks have also demonstrated their effectiveness while preforming advanced rainfall prediction in the context of global phenomena like El-Nino (Fan et al., Apr. 2024, Wang et al., Feb. 2023). Globally, researchers have embraced ML techniques to improve daily, monthly, and seasonal rainfall predictions. While ML algorithms exhibit promise, the complex and nonlinear nature of rainfall remains a challenge, warranting ongoing investigation and refinement. Rigorous evaluations have compared the performance of various ML algorithms, revealing correlations between different climates and predictive accuracy (Cramer et al., 2017). Additionally, many studies have focused on specific regions, including China, Iran, Egypt, Saudi Arabia, and Ethiopia, showcasing the potential of ML in arid regions (Abebe and Endalie, Jan. 2023, Elshaboury et al., 1900, Baljon and Sharma, 2023, Parviz et al., 2023, Dong et al., Jan. 2023, Wang et al., 2021). For instance (Cramer et al., 2017) performed a rigorous evaluation of the six ML algorithms including SVR, NN, GP, and KNN, and compared them with a state of the art model in predicting rainfall across 42 cities with different climatic features. The study finds that the machine learning methods outperformed the current state-of-the-art and identified correlations between different climates and predictive accuracy. Another study was conducted by (Barrera-Animas et al., 2022) where they presented the comparison of XGBoost, AutoML, and LSTM models by using climate time series. Different versions of LSTM namely, stacked and bidirectional-LSTM networks were implemented to predict hourly rainfall volumes from five major cities in UK. The results showed that the stacked and bidirectional LSTM performed best with few hidden layers. Similarly, Parviz et al. (Parviz et al., 2023) recently reported to improve the hybrid models for rainfall forecasting in Iran. They utilized the ensemble of linear and non-linear ML models and concluded that the inclusion on non-linear model essentially improved the forecasts that the tradition ensemble modeling. A similar attempt was made to predict the rainfall rate in southern Saudi Arabia (Baljon and Sharma, 2023) while employing several ML algorithms and to show their greater accuracy over traditional statistical methods. Their findings suggest that Decision Tree and Function Fitting Artificial Neural Network Classifier provided the highest accuracy. Another study by Endalie et al. (Endalie et al., 2021) leveraged the usefulness of deep learning models to forecast the rainfall in Ethiopia. They successfully demonstrated that the developed LSTM model outperformed other machine learning regressors by a good margin. In addition to ML algorithms, some studies have also explored the use of hybrid models for rainfall prediction in arid regions. For example, Wu et al. (Wu, 2021) proposed a hybrid model that combines the extreme learning machine (ELM) algorithm and the empirical mode decomposition (EMD) method to predict rainfall in a semi-arid region of China. The study showed that the hybrid model provided higher accuracy compared to other models, including the ELM algorithm and the support vector regression (SVR) algorithm. This research focuses on exploring the potential of various machine learning and ensemble models for monthly rainfall prediction in hyper-arid environments, using the UAE as a case study. These regions are often overlooked in scientific literature, despite their significance in the context of climate change and weather extremes. The study fills this gap by investigating the effectiveness of different machine learning approaches in accurately predicting monthly rainfall, which is essential for better understanding and managing the impacts of changing climate conditions in hyper-arid regionsThe algorithms, including Bayesian Ridge Regression, Elastic Net, Gradient Boosting, Linear Regression, Long Short-Term Memory, Multi-Layer Perceptron, Support Vector Machine regressor, Extreme Gradient Boosting, and stacked models, will be tested using historical meteorological data from 1991 to 2020. This research is pioneering in exploring ML-based rainfall prediction in the UAE, aiming to offer state-of-the-art insights to enhance water resource management, agriculture, and disaster preparedness efforts. By bridging the knowledge gap, this study aims to contribute to accurate and reliable rainfall prediction models tailored for arid regions like the UAE. 2. Study area description The United Arab Emirates (UAE) is located in the southeastern part of the Arabian Peninsula (Fig. 1). It is characterized by its arid climate, with hot summers and mild winters, and its unique landscape that includes vast deserts, coastlines, and mountain ranges (Baig et al., 2022). This study focuses on the analysis of monthly rainfall data in the UAE over a period of 30 years, from 1991 to 2020. The study area includes six airport stations selected for their reliable and consistent rainfall data, namely Sharjah, Abu Dhabi, Dubai, Fujairah, Al Ain and Ras Al Khaimah. The analysis of rainfall data in the UAE is particularly significant due to the country's reliance on water resources for its economic and social development. The UAE faces significant water scarcity issues, with rainfall being the primary source of freshwater for the country. Therefore, understanding the patterns and trends of rainfall in the UAE is essential for effective water resource management and sustainable development. Download : Download high-res image (385KB) Download : Download full-size image Fig. 1. Study area (United Arab Emirates) along with the rain gauge locations and the elevation profile. The annual average rainfall in the UAE varies greatly depending on the location, with some areas receiving less than 50 mm of rainfall per year, while others receive over 200 mm. The UAE experiences two distinct seasons: a dry and severe hot summer spanning from May to September, and a mildly cooler winter season occurring from November to March. The rainfall in the UAE is also highly variable, with most of the rainfall occurring during the winter months (Baig et al., 2023). The wettest months are typically December, January, and February, while the driest months are usually June, July, and August. In recent years, the UAE has experienced several instances of heavy rainfall events, causing significant flooding in some areas. In 2020, for example, heavy rain and flooding affected several parts of the UAE, including Dubai and Abu Dhabi, leading to road closures, flight cancellations, and property damage. Table 1 represents the locations of the rain gauges used in this study and the average annual rainfall for the period ranging from 1991 to 2020. Out of all the six stations, St-05 and St-06 lie in the mountainous region (Fig. 1) and therefore receive relatively higher average annual rainfall than the others. Similarly, to discern a better understanding of the rainfall regime during the study period, average annual, seasonal and monthly rainfall plots are presented in Fig. 2. Average seasonal rainfall has been structured into four domains namely winter (January-February), Spring (March-May), Summer (June-Sep), and Autumn (Oct-Dec). Apparently, the summer months are predominantly drier in the study region while most of the downpour is experienced during winter and to some extent in spring months (Fig. 2 (a) & (b)). Average monthly rainfall showed a surge during winter to early spring except st-04 where autumn months demonstrated equally matching peaks (Fig. 2b). Fig. 2c spans the average annual rainfall in the range of 52 mm to 115 mm where the highest annual average was recorded for St-05 and the lowest for St-01. Table 1. Detail of the gauge stations used in the study area. Station(s) Station ID. Latitude Longitude Elevation (m) Data Period Dubai St-01 25.2528° 55.3644° 19  Monthly Data (1991–2020) Sharjah St-02 25.3294 55.5172 34 Abu Dhabi St-03 24.4338 54.6511 27 Al Ain St-04 24.2617 55.6092 265 Fujairah St-05 25.1122 56.3233 46 Rasul Khaima St-06 25.6139 55.9386 31 Download : Download high-res image (353KB) Download : Download full-size image Fig. 2. (a) Average seasonal rainfall (b) Average monthly rainfall (c) Average Annual rainfall for the six selected stations. 2.1. Physical processes driving rainfall in the region The climate of the Arabian Peninsula is influenced by polar continental air masses during the winter months and tropical continental air masses during the summer. In winter (from December to mid-March), the region experiences a high-pressure system extending from the Siberian anticyclone in central Asia, but surface winds are primarily directed by the Saharan High over Africa, resulting in westward winds in the north and south-south-westward winds in the south (Kumar et al., 2015). Spring and summer bring a shift in weather patterns, with a low-pressure system known as the Persian Trough, an extension of the Indian summer monsoon trough, taking control from early June to September. During this time, high pressure shifts north-westward over the Mediterranean Sea, leading to the formation of a trough over the Arabian Peninsula and the emergence of strong north-westerly winds known as “Shamal” winds. From August to November, the thermal low over Asia weakens, and the high-pressure centre near North-eastern Africa moves south-eastward. The alternating influence of these air masses and seasonal shifts in pressure systems contribute to the diverse climate conditions experienced in the region. Moreover, the complex terrain of the region usually plays a significant role for the initiation of convective processes and therefore, convective precipitation is prevalent with wide spatial distributions especially around mountains (Kumar et al., 2015, Luong et al., 2020). In the United Arab Emirates (UAE), the strong morning surface winds result from the downward mixing of momentum from a night-time low-level jet to the surface, often causing dust emissions and reduced visibility (Francis, Mar. 2021, Nelli, et al., 2022). The prevailing large-scale winds in the UAE primarily blow from the northwest. During winter, the Arabian Gulf is affected by mid-latitude baroclinic systems, and after the passage of a cold front, north westerly winds strengthen due to the pressure gradient between the subtropical high to the west and the low pressure to the east. These events, known as winter Shamal events, happen frequently from December to early March, lasting either 24–36 h or 3–5 days, depending on the behaviour of an upper-level trough in the region (Al Senafi and Anis, 2015). In the summer season, however, a pressure gradient between the monsoon trough extending from India to Pakistan and Iran and the subtropical high over the northern Arabian Peninsula leads to summer Shamal events. Although winter Shamal events are typically stronger, the summer ones play a more significant role in dust activities in the Arabian Peninsula (Abdi Vishkaee et al., 2012). Wind speed variability in the UAE shows a positive correlation from May to July with the North Atlantic Oscillation (NAO) with a 6–7-year period (Nelli et al., 2022). The positive phase of the El Niño-Southern Oscillation (ENSO) is also associated with weaker wind speeds in Abu Dhabi from September to November with a 5–6-year period. Moreover, the Indian Ocean Dipole (IOD) is positively correlated with wind speed in Abu Dhabi from November to January, with a 2–3-year period (Mohan, 2020). However, these correlations vary spatially and are not consistent across all stations, indicating that the effects of these climate modes depend on location. Due to an association between the Arabian heat low (AHL) and midday sea-breeze circulation, summertime rainfall in the western United Arab Emirates (UAE) can happen, but seldom (Fonseca et al., 2022). This phenomenon is related to the intra-seasonal variability in the AHL's strength, which is regulated by the active and break phases of the Indian monsoon, according to a study by Steinhoff et al. (Steinhoff, 2018). In addition, Niranjan Kumar and Ouarda's study from (Kumar et al., 2017, Niranjan Kumar and Ouarda, 2014) revealed that the region's yearly precipitation changes greatly from year to year, with wetter conditions occurring during El Nino years and drier conditions occurring during La Nina years. Despite the relatively flat terrain in western UAE, the atmospheric conditions in this area are highly complex. Given the recent population growth in the region and the expected expansion of desert areas due to climate change, it is crucial to gain a deep understanding of the local meteorological environment and its variability over various time scales. 3. Materials and methods 3.1. System overview The proposed system consists of the following three modules as shown in Fig. 3 . The first module represents the input data preparation and pre-processing phase and the second module characterizes implementation and training of the machine learning algorithms on the rainfall data. The third module denotes the stacking of machine learning models to improve the prediction performance. The prediction results based on various evaluation metrics are depicted in the last module of the system. Download : Download high-res image (426KB) Download : Download full-size image Fig. 3. Methodological framework and system overview of the current study. 3.2. Machine learning models 3.2.1. LSTM LSTM (Long Short-Term Memory) is a type of recurrent neural network (RNN) that is designed to deal with the vanishing gradient problem commonly encountered in standard RNNs. The fundamental concept of Long Short-Term Memory (LSTM) is the incorporation of “gates” within the network. These gates act as regulators, controlling the flow of information and enabling the LSTM to selectively remember or forget previous inputs as required during the learning process. The LSTM modules are comprised of three distinct types of gates: the input gate , the forget gate , and the output gate . The procedure for constructing the LSTM (Long Short-Term Memory) model is shown in Fig. 4. and also outlined through equations (1), (2), (3), (4), (5), (6). (1) Where and represents forget gate, weight of the forget gate, bias value, previous hidden state, and the new input value respectively. The sigmoid function can be mathematically represented as (2) The input gate , new value that can be added to the cell state , the cell state , and output gate can be mathematically represented as; (3) (4) (5) (6) In the above equations, is the weight of the input gate, is the bias value of the input gate and is the bias value of the cell state. Download : Download high-res image (135KB) Download : Download full-size image Fig. 4. Structure of the LSTM memory cell. 3.2.2. Random forest (RF) Random Forest is an ensemble learning algorithm utilized for various tasks like classification and regression. It operates by constructing numerous decision trees during training and outputs the mode of classes (in classification) or mean prediction (in regression) from the individual trees. The key concept behind Random Forest involves combining predictions from multiple decision trees to achieve enhanced accuracy and robustness. To accomplish this, Random Forest employs bagging (bootstrap aggregating), where subsets of the training data are randomly selected with replacement to train each decision tree. Additionally, feature randomization is used, selecting subsets of features at each tree split to reduce overfitting and improve tree diversity within the forest. The default procedure for constructing a Random Forest is as follows (Fig. 5): • Begin by randomly selecting a subset of features from the total features available. • Within this subset of features, identify the best split point for a node by maximizing information gain or employing another suitable criterion. • Divide the node into two child nodes based on the determined optimal split point. • Repeat steps 1 to 3 for each child node, adhering to a stopping criterion like maximum tree depth or a minimum number of samples per leaf node. Download : Download high-res image (108KB) Download : Download full-size image Fig. 5. Overview of the RF model. The ultimate prediction from a Random Forest is generated by combining predictions from all individual trees within the forest. In classification tasks, the prediction is determined by the most frequently occurring class across all trees. In regression tasks, the prediction is calculated as the mean of the predictions from all the trees. 3.2.3. SVM regressor The Support Vector Machine (SVM) Regressor is a machine learning algorithm specifically designed for regression tasks. Its principle revolves around discovering a hyperplane that optimally separates data points in a high-dimensional feature space as depicted in Fig. 6. The primary objective of SVM Regressor is to identify the hyperplane that best fits the data points while minimizing the error between predicted and actual values. To accomplish this, the algorithm employs a technique known as the kernel trick, which involves mapping the original feature space into a higher-dimensional space for improved performance. Given a training dataset denoted as , where represents the input vector (representing model estimates) and represents the corresponding output (representing observations), with being the size of this dataset, the SVM regression function can be formulated as: (7) The SVM regression function incorporates a weight vector represented as , a bias term denoted as , and a nonlinear transformation function, , which maps the input space into a higher-dimensional feature space. Download : Download high-res image (108KB) Download : Download full-size image Fig. 6. SVM Regression. 3.2.4. XGBoost XGBoost (Extreme Gradient Boosting) is an optimized distributed gradient boosting algorithm designed to handle large-scale and high-dimensional data. It is a powerful machine learning algorithm that is widely used in industry for regression and classification tasks. The key idea behind XGBoost is to iteratively train weak learners (decision trees) and add them to a final strong learner as depicted in Fig. 7. The algorithm combines the predictions from all the decision trees to make the final prediction for a given input data point and can be mathematically represented as shown in Equation (8). (8) Download : Download high-res image (163KB) Download : Download full-size image Fig. 7. Architecture of XG-Boost. 3.2.5. Multi-layer perceptron (MLP) MLP (Multi-Layer Perceptron) is a type of artificial neural network that is widely used in machine learning for both regression and classification tasks. It consists of multiple layers of interconnected neurons, each of which performs a nonlinear transformation on its input as shown in Fig. 8. MLPs consist of interconnected layers, including an input layer and one or more hidden layers, followed by an output layer. The input layer accepts a vector of features, represented as The computation of hidden layers can be expressed as; (9) Where and represents the hidden layers output, the activation function and the weight matrix respectively. The output of the previous layers and is represented by while is the bias vector. The prediction is computed in the output layer and can be mathematically represented as; (10) Download : Download high-res image (143KB) Download : Download full-size image Fig. 8. Architecture of MLP. 3.2.6. Elastic net Elastic Net is a linear regression algorithm that combines the L1 and L2 regularization techniques to balance their strengths and overcome their weaknesses. The L1 regularization technique, also known as Lasso, can lead to sparse solutions by forcing some of the regression coefficients to be exactly zero. However, it does not perform well when there are highly correlated features in the input data. On the other hand, the L2 regularization technique, also known as Ridge, can handle correlated features well but tends to shrink all the regression coefficients towards zero without eliminating any of them completely. Elastic Net aims to strike a balance between these two regularization techniques by adding a penalty term to the cost function that is a weighted sum of the L1 and L2 penalties as depincted in Equation (11) below. (11) In the above equation and represents number of data points, features, observed target value at ith data point, the predicted target value at point and the weight coefficient associated with the feature. The hyperparameters that control the strength of L1 and L2 Regulation is represented by and . 3.2.7. Gradient boosting Gradient Boosting is an ensemble learning algorithm that combines multiple weak prediction models to create a strong prediction model. Unlike other ensemble methods that combine models in a parallel fashion, Gradient Boosting uses an iterative approach where each new model is trained to correct the errors of the previous model. In this way, the algorithm builds a strong model by iteratively refining the predictions of the weak models as shown in Fig. 9. The basic idea of Gradient Boosting is to build an ensemble by iteratively adding weak learners to approximate the negative gradient of the loss function with respect to the current ensemble predictions.. Mathematical representation of the gradient boosting prediction models is shown in Equation. (12) Download : Download high-res image (144KB) Download : Download full-size image Fig. 9. Flow diagram of gradient boosting ML method. 3.2.8. Bayesian ridge regression Bayesian Ridge Regression is a linear regression algorithm that incorporates Bayesian principles to estimate the model parameters and handle uncertainty in the data. Unlike traditional linear regression, which uses point estimates for the parameters, Bayesian Ridge Regression uses a probabilistic model to represent the uncertainty in the parameters and compute posterior distributions over them. The simplified mathematical formulation for Bayesian Ridge Regression is depicted in Equation XX below. (13) The predicted target variable, denoted as , is calculated as a linear combination of the input features represented by the matrix , with the weights given by the vector w 3.3. Calibration of ML model parameters Calibration of ML model parameters is an essential and iterative process in rainfall prediction. It involves adjusting the values of various model parameters to achieve the best possible fit between the model's outputs and observed rainfall data. The need for calibration arises due to the complex and localized nature of rainfall patterns, which can vary significantly from one region to another. By calibrating the ML model parameters, we can account for the unique characteristics of the study region, such as local topography, land cover, and atmospheric conditions, which influence rainfall patterns. The calibration process typically involves running the ML model with different parameter values and comparing the simulated rainfall against observed rainfall data. Various evaluation metrics, such as root mean square error (RMSE), mean absolute error (MAE), and correlation coefficients, have been used to assess the model's performance. The goal is to identify the parameter values that minimize the discrepancies between the model predictions and observed rainfall. The calibrated parameters typically represent the optimized settings specific to the study region, maximizing the accuracy and reliability of rainfall predictions. These parameter values serve as a reference for future studies conducted in similar study regions, saving computational time and effort required for parameter optimization. Table 2 shows the optimum values of various parameters for the ML models used in this study. It should be noted that these values were obtained after running multiple scenarios through a predefined ranges of the parameter values acquired from the available literature and essentially based on the best fit model that offered the minimum error values and maximum accuracy. Table 2. Optimum values of the parameters for the selected ML models in this analysis calibrated for the study region. Model(s) Parameters Optimum Values Random Forest Max Depth 200 No. of Estimators 800 Min Sample Split 05 Extreme Gradient Boost Max. Depth 18 No. of Estimator 50 Min. Child Weight 1 Gamma 1 Gradient Boost Regressor Max. Depth 150 No. of Estimator 15 Support Vector Machine Cost 0.5 Multi-Layer Perceptron Solver Adam Activation Function ReLU HLS 300 Long Short-Term Memory Epochs 300 Elastic Net Alpha 1 Max. Iteration 1000 Bayesian Ridge Regression Alpha 1e-06 Max. Iteration 500 3.4. Critical evaluation of the ML algorithms The Table 3 provides a comparative overview of different machine learning (ML) models commonly used for various tasks, including classification and regression. Each model is described in terms of its parameters, basic structure, sensitivity, important factors, and potential use. XGBoost (XGB), LSTM, Random Forest (RF), Gradient Boosting, Support Vector Machines (SVM), Linear Regression, Elastic Net, and Multilayer Perceptron (MLP) are included in the analysis. These models offer diverse approaches to capturing patterns and making predictions. XGB and RF employ ensemble methods, LSTM leverages recurrent neural networks for temporal dependencies, SVM aims for optimal hyperplane separation, and MLP incorporates interconnected layers of nodes for non-linear relationships. Understanding the characteristics and potential use of each model is crucial for selecting the most appropriate approach based on specific requirements and dataset characteristics. Table 3. Critical evaluation of the selected ML algorithms. Model Name Parameters Basic Structure Sensitivity Other Important Factors Potential Use Strengths Weaknesses XGB Boosting, Decision Trees Ensemble model combining weak learners High sensitivity Regularization, feature importance Classification, regression Accurate and fast on large datasets, handles missing values and feature selection Can overfit small datasets, requires hyperparameter fine-tuning LSTM Recurrent Neural Networks Memory cells to capture sequence dependencies Moderate sensitivity Long-term temporal patterns, sequence modeling Time series analysis, forecasting Captures long-term dependencies in time series Computationally expensive, requires large dataset Random Forest Decision Trees Ensemble of decision trees Moderate sensitivity Feature importance, robust to outliers Classification, regression Handles non-linear data, missing values, feature selection Can overfit small datasets, slow on large datasets Gradient Boosting Boosting, Decision Trees Sequentially adding weak learners Moderate sensitivity Gradient-based optimization, ensemble learning Regression, ranking, classification Accurate and handles large datasets, handles missing values and feature selection Slow on large datasets, requires hyperparameter fine-tuning Support Vector Machines Kernel Functions Maximum margin hyperplane in feature space Low sensitivity Kernel selection, margin optimization Classification, regression Effective for high-dimensional data, handles non-linear data Sensitive to kernel function, slow on large datasets Linear Regression Linear Equation Linear relationship between predictors and response Low sensitivity Coefficient interpretation, simplicity Regression, linear modeling Can learn complex relationships Slow on large datasets Elastic Net Linear Equation, L1 and L2 regularization Linear regression with combined L1 and L2 penalties Low sensitivity Feature selection, robust to collinearity Regression, feature selection Effective for high-dimensional data, handles multicollinearity Slow on large datasets, requires hyperparameter fine-tuning Multilayer Perceptron Neural Networks Multiple layers of interconnected nodes Moderate Non-linear relationships, universal approximation Classification, regression Can learn complex relationships between input and outputs Sensitive to initialization, can overfit small datasets 3.5. Univariate prediction (UV) The input parameter used for univariate prediction was solely the observed precipitation. The model computes the prediction, denoted as Yi, by utilizing the real observed value Xi. To make predictions, the model takes into account the previous steps, and different steps were taken for the prediction purpose including 3, 6, and 12 months. However, only the results from the 12 months previous time steps have been shown in this study based on their efficacy. 3.6. Multivariate prediction (MV) Unlike the univariate predictions, the selected ML models were tested with the multiple parameters as well namely, Wind Speed (WS), Maximum and Minimum Temperatures (MaxT, MinT), Average Temperature (AvgT), Relative Humidity (RH), and Potential Evapotranspiration (PE). The rest of the training criteria lies the same as in the univariate model. 3.7. Sensitivity analysis of the predictors To improve the prediction accuracy, it is crucial to identify the meteorological parameters that have the most significant influence on rainfall patterns. This task can be effectively addressed using LASSO (Least Absolute Shrinkage and Selection Operator) regression analysis. LASSO regression is a powerful statistical technique that combines variable selection and regularization. It was developed as an extension of linear regression and has gained popularity in various fields due to its ability to handle high-dimensional datasets and perform feature selection simultaneously. LASSO regression promotes sparse solutions by encouraging coefficients of irrelevant or less important predictors to be exactly zero, effectively eliminating their impact on the prediction. In LASSO regression, the goal is to find the optimal set of predictors (meteorological parameters) that best explain the variability in monthly rainfall. The LASSO approach achieves this by minimizing the sum of squared errors (the residual sum of squares) while adding a penalty term that is proportional to the sum of the absolute values of the coefficients. This penalty term imposes a constraint on the magnitude of the coefficients, resulting in shrinkage towards zero. The key advantage of LASSO regression is that it automatically performs variable selection by setting some coefficients to zero, effectively excluding irrelevant predictors from the model. The strength of the penalty term (lambda or alpha) controls the degree of shrinkage and sparsity of the resulting model. As the penalty strength increases, more coefficients are set to zero, leading to a more parsimonious model with a reduced number of predictors. Equation 01 represents the general formulation that needs to be minimized. Eq. (1). Where, n represents the number of observations in the dataset, yi is the observed response variable for the ith observation, xij is the vector of predictor variables, βj represents the coefficients associated with each predictor variable, is the tuning parameter that controls the strength of the penalty term. 3.8. Data preparation Accurate data preparation is crucial for the development and evaluation of machine learning models. In this study, the following steps were undertaken to prepare the monthly rainfall data from 1991 to 2020 for training and testing the machine learning algorithms. The dataset was divided using an 80/20 training–testing split, with 80 % of the data used for training the models and 20 % for evaluating their performance. 3.8.1. Data collection The monthly rainfall data for the UAE from 1991 to 2020 was collected from National Center of Meteorology (NCM) Abu Dhabi and National Water and Energy Center (NWEC) of UAE University. This dataset contains the historical records of rainfall measurements for different regions in the UAE. 3.8.2. Data cleaning To ensure the quality and reliability of the data, a thorough data cleaning process was applied. This involved identifying and handling missing values, outliers, and inconsistencies in the dataset. Missing values were either imputed using appropriate techniques or removed from the dataset, depending on the extent of missingness and their potential impact on the analysis. 3.8.3. Data normalization Machine learning algorithms often perform better when the input features are scaled to a similar range. To achieve this, the dataset was normalized using standardization or min–max scaling techniques. Standardization rescales the features to have zero mean and unit variance, while min–max scaling scales the features to a specified range (e.g., 0 to 1). 3.8.4. Train-test split To evaluate the performance of the machine learning algorithms, the dataset was split into training and testing subsets. The training subset, comprising 80 % of the data, was used to train and optimize the models, while the testing subset (remaining 20 %) was used to assess their generalization capability and predictive accuracy. It is important to note that the temporal order of the data was preserved during the split to mimic real-world scenarios where the model is trained on historical data and tested on future observations. 3.8.5. Data preprocessing Further preprocessing steps were applied to the training and testing subsets. This included reshaping the data into appropriate formats for the machine learning algorithms, such as converting it into numerical arrays or matrices. Additionally, any final adjustments, such as encoding categorical variables or addressing class imbalance, were performed during this stage. By following these rigorous data preparation steps, we ensured the reliability, consistency, and compatibility of the dataset for training and testing various machine learning algorithms. This facilitated accurate model development and robust evaluation of the rainfall prediction models over the UAE. 3.9. Model performance assessment The performance evaluation of the machine learning algorithms involved three key measures: correlation coefficient, Root Mean Squared Error (RMSE), and Mean Absolute Error (MAE). The correlation coefficient assesses the strength and direction of the linear relationship between predicted and observed rainfall values, ranging from −1 to 1. A value close to 1 signifies a strong positive correlation, close to −1 indicates a strong negative correlation, and near 0 indicates a weak or no correlation. The correlation coefficient is calculated using the covariance and standard deviations of the predicted and actual rainfall values. However, it should be noted that this measure only captures linear relationships and may not account for nonlinear patterns in the data. The Root Mean Squared Error (RMSE) provides an estimation of the average magnitude of the prediction errors. It calculates the square root of the mean of the squared differences between the predicted and actual rainfall values. RMSE is sensitive to outliers as it squares the errors, giving more weight to larger errors. This measure is commonly used in regression tasks and provides a measure of the model's overall accuracy. However, RMSE is not directly interpretable in the original units of the target variable and can be influenced by the scale of the data. The Mean Absolute Error (MAE) measures the average magnitude of the absolute differences between the predicted and actual rainfall values. It is calculated by taking the mean of the absolute differences. MAE is less sensitive to outliers compared to RMSE since it does not square the errors. MAE provides a more interpretable measure of the model's performance in the original units of the target variable. However, MAE does not distinguish between overestimation and underestimation and treats all errors equally. It is important to note that while these evaluation measures provide valuable insights into the performance of the machine learning algorithms for rainfall prediction, they have their limitations. The correlation coefficient only captures linear relationships and may not capture complex nonlinear patterns. RMSE is sensitive to outliers and can be influenced by the scale of the data, while MAE treats all errors equally and does not differentiate between overestimation and underestimation. Therefore, these measures are usually considered collectively, and the results are interpreted in conjunction with other evaluation metrics to gain a comprehensive understanding of the model efficiency. Table 4 lists the mathematical formulae of the three selected performance measures along with their ranges and best score. Table 4. Performance measures and their mathematical relationship. Performance Measure (s) Equation Range Best Value  Root Mean Square Error(mm)  – 0  Correlation Coefficient  −1 to 1 1  Mean Absolute Error  – 0 Where xi and yi are observed and predicted values and their means are shown by and respectively and n is the number of observations. 4. Results and discussions 4.1. Univariate analysis In this step, we conducted an extensive evaluation of multiple machine learning (ML) models for the prediction of monthly rainfall. Initially, the focus was on utilizing only the rainfall parameter as a univariate predictor. The performance measures for stations 4 and 5 are shown in Fig. 10, Fig. 11 as the representatives of all the stations. The results obtained shed light on the performance of various models during both the training and testing periods. During the training phase, XGBoost (XGB) and ensemble models exhibited favorable performance, achieving a commendable correlation coefficient (CC) value of 0.87 and 0.88 respectively (Fig. 10). This indicates a strong association between the predicted and observed rainfall values during the training period. However, it is noteworthy that the performance of these models experienced a significant decline when applied to the testing period, with a maximum CC value of only 0.47 (Fig. 10). This decrease suggests a notable degradation in their predictive capabilities when faced with unseen data. In contrast, the performance of traditional linear regression, support vector machines (SVM), and elastic net models was unsatisfactory during the testing period. These models failed to capture the underlying patterns and relationships present in the rainfall data, resulting in poor predictive accuracy. Similarly for station 04 (Fig. 11), the results revealed a similar behavior for the training period. However, during the testing period, there was a slight increase in the accuracy of prediction for all the models. This might be attributed to the geographic location of station 04 which lies in the mountainous region and therefore receives rainfall quite often although in small quantities. Similarly, the RMSE and MAE values followed a similar pattern as can be observed from Fig. 10, Fig. 11. Download : Download high-res image (256KB) Download : Download full-size image Fig. 10. Training and testing results for univariate model prediction for Station 05. Download : Download high-res image (260KB) Download : Download full-size image Fig. 11. Training and testing results for univariate model prediction for Station 04. The observed disparity in model performance between the training and testing periods can be attributed to several factors. Overfitting, a phenomenon in which models excessively adapt to the training data, is a potential explanation for the diminished performance during testing. Additionally, the lack of generalization ability of the models might have impeded their capability to effectively predict rainfall values in different temporal contexts. Moreover, it is possible that the training and testing datasets exhibited variations in their underlying distributions, which could have further impacted the models' performance during the testing phase. To enhance the predictive accuracy of the models during the testing period, several steps can be taken. These include incorporating additional relevant features, such as historical rainfall patterns or meteorological data, to augment the predictive power of the models. Fig. 12 represents the time series plots for stations 4 and 5 for the selected ML models and for a representative period from the study duration. The time series plots depict the observed and predicted monthly rainfall and clearly exhibit a notable disparity across the evaluated models. Specifically, the predicted values consistently underestimated the peak rainfall discharges. Furthermore, a significant lag was observed in capturing the peak values, indicating a delayed response in the predicted rainfall patterns compared to the observed data. This disparity between the observed and predicted values signifies the models' limitations in accurately reproducing the extreme rainfall events. The underestimation of peak discharges suggests that the models may struggle to capture the magnitude of intense rainfall events, potentially due to inadequate representation of the underlying physical processes or the influence of additional factors beyond the available predictor variables. Additionally, the observed lag in the peak values implies that the models may not respond promptly to changes in rainfall patterns, resulting in a delay in predicting the occurrence and intensity of peak rainfall events. Download : Download high-res image (892KB) Download : Download full-size image Fig. 12. Univariate timeseries predictions of Random Forest (RF), LSTM, XGBoost (XGB) and Stacked models for a selected time duration. 4.2. Multivariate analysis In the subsequent section, the aim was to enhance the predictive performance of the machine learning (ML) models by incorporating multiple meteorological parameters, including Wind Speed (WS), Max and Min Temperature (MaxT & MinT), Average Temperature (AvgT), Relative Humidity (RH), and Potential Evapotranspiration (PET). This Multivariate Analysis (MV) was conducted using Random Forest (RF), XGBoost (XGB), Gradient Boosting (GB), Long Short-Term Memory (LSTM), and the stacked models, which were selected based on their performance in the univariate analysis. The introduction of additional meteorological parameters resulted in substantial improvements in the models' predictive accuracy, particularly during the testing period. Notably, XGB exhibited a significant increase in performance, with the correlation coefficient (CC) reaching 0.95 during the training phase and 0.76 during the testing phase (Fig. 13). Similarly, LSTM demonstrated enhanced performance, improving from a training CC of 0.68 to 0.75, and from a testing CC of 0.21 to 0.71. The stacked models also showcased promising behavior in both the training and testing phases. The inclusion of multiple meteorological parameters likely contributed to the observed improvements in model accuracy. These additional variables provide valuable contextual information and capture the intricate interplay between different meteorological factors, which can influence rainfall patterns. By incorporating these factors, the models gained a more comprehensive understanding of the underlying processes driving rainfall dynamics. Fig. 13 further reveals that during the training period, correlation values for XGB outperformed the values for all the stacked models which points out towards efficiency of the XGB model in accurately predicting the monthly rainfall under enhanced information scenario. Download : Download high-res image (568KB) Download : Download full-size image Fig. 13. Training and testing results for multivariate model prediction for Station 05. The enhanced accuracy can also be attributed to the models' ability to capture the relationships and dependencies between the added meteorological parameters and rainfall. Wind speed, temperature, humidity, and evapotranspiration are known to have a significant impact on precipitation patterns, and their inclusion enabled the models to better capture the complex dynamics involved in rainfall prediction. The reduction in Root Mean Squared Error (RMSE) and Mean Absolute Error (MAE) values further confirmed the enhanced performance of the models. The decreased error metrics indicate that the models' predictions were closer to the observed rainfall values, reflecting their improved accuracy and ability to estimate rainfall patterns more accurately. In a similar manner, the time series plots (Fig. 14) depicting the rainfall patterns for Station 04 and Station 05 revealed a strong correlation between the observed and predicted peak rainfall events, as well as their occurrence. These plots provided visual evidence of the individual and stacked models' capability to accurately track the monthly rainfall patterns. The representative period showcased in these plots clearly demonstrated the models' ability to capture the overall trend and variability in monthly rainfall. The models successfully replicated the observed rainfall patterns, aligning closely with the peaks and fluctuations observed in the data. Download : Download high-res image (1MB) Download : Download full-size image Fig. 14. Multivariate time series predictions of Random Forest (RF), LSTM, XGBoost (XGB) and Stacked models for a selected time duration. However, it is important to note that at Station 05, there were a few instances where the models underestimated the magnitude of certain peak rainfall events by a small margin. Despite this minor discrepancy, the models still exhibited a commendable overall performance in replicating the rainfall patterns at Station 05. This slight underestimation of certain peaks by all the models at Station 05 may stem from several factors. It is possible that these specific events were influenced by localized or unique atmospheric conditions that were not fully captured by the available predictor variables. Additionally, the complexity and inherent variability of rainfall processes make it challenging to precisely predict extreme events, leading to some degree of uncertainty in peak rainfall estimation. Nevertheless, the models' ability to closely match the observed rainfall patterns for most of the time series reinforces their effectiveness in capturing the general characteristics and trends in monthly rainfall at both Station 04 and Station 05. Additionally, Fig. 14 also displays the ability of stacked model to capture the peak rainfall events better than the all the individual models. Fig. 15 (a) provides a comprehensive depiction of the ML models' performance, comparing the transition from univariate to multivariate analysis in terms of percent increase or decrease across three performance measures. The panel representing the percent difference in correlation coefficient (cc) highlights noteworthy findings during the testing period, with RF and LSTM models demonstrating a substantial surge in cc values (27 % and 26 % respectively). However, it is important to note that the increase in cc values during the training period did not exceed 10 % for any of the models. In contrast, the analysis of root mean squared error (RMSE) values exhibited significant consistency in the decrease of errors for both the training and testing periods, ranging from −11 % to −17 %. This indicates a notable improvement in predictive accuracy across all models. Conversely, for mean absolute error (MAE), the decrease in error values exceeded 20 %, particularly for the Gradient Boost and stacked models. Download : Download high-res image (392KB) Download : Download full-size image Fig. 15. Percent difference comparison for CC, RMSE, and MAE for both training and testing during the multivariate analysis. Bar charts and individual model comparison (a), boxplots representation (b). The consistent decrease in RMSE values for both the training and testing periods signifies the models' improved precision in estimating the magnitude of rainfall events. This reduction in error suggests that the models' predictions align more closely with the observed rainfall values. Similarly, the substantial decrease in MAE values, especially for the Gradient Boost and stacked models, indicates a significant improvement in the models' ability to accurately estimate the absolute errors between predicted and observed rainfall. This reduction in MAE demonstrates the enhanced predictive capabilities achieved through the incorporation of multiple meteorological parameters. A quick overview of the whole performance difference can also be observed in the form of simple box plots in Fig. 15 (b). The scatter plots (Fig. 16) provide valuable insights into the performance of the ML models, comparing the univariate and multivariate analyses. These plots illustrate the relationship between the observed and predicted rainfall values, allowing for a visual assessment of the models' accuracy. The multivariate scatter plots reveal a reduced scatter and a narrower spread of data points compared to the univariate scatter plots. This indicates a higher degree of precision in predicting rainfall values when multiple meteorological parameters are incorporated into the models. Overall, the scatter plots demonstrate that the transition from univariate to multivariate analysis enhances the models' ability to reproduce the observed rainfall patterns more accurately. The tighter clustering of data points and improved alignment between observed and predicted values in the multivariate scatter plots indicate the positive impact of including additional meteorological parameters in the modeling process. Download : Download high-res image (1MB) Download : Download full-size image Fig. 16. Scatter plots of the correlation coefficient values representing enhanced performance of selective models (XGB, RF, and XGB + RF models) from Univariate (UV) to Multivariate (MV) analysis. 4.3. Seasonal prediction In this section, we extend the focus beyond traditional monthly rainfall forecasting and explore the domain of seasonal predictions for an arid region. Understanding and predicting the seasonal distribution of rainfall specifically during Winter, Spring, Summer, and Autumn, constitutes a critical facet of climate research (S. Yang, F. Ling, Y. Li, and J.-J. Luo, “Improving Seasonal Prediction of Summer Precipitation in the Middle–Lower Reaches of the Yangtze River Using a TU-Net Deep Learning Approach,” Artificial Intelligence for the Earth Systems, vol. 2, no. 2, Jun., 2023, Deman et al., 2022). Seasonal variations in precipitation patterns have profound implications for various sectors, including agriculture, water resource management, and disaster preparedness. As climate change continues to manifest, unraveling the intricacies of seasonal rainfall becomes imperative for informed decision-making and sustainable resource utilization (He et al., Sep. 2022, Le, et al., 2023). By incorporating machine learning techniques into our methodology, we aim to enhance the precision and reliability of seasonal rainfall predictions, thereby contributing to a more robust understanding of the climatic dynamics in arid regions. Fig. 17 showcase time series graphs illustrating the predicted rainfall patterns across the four seasons, providing a comprehensive analysis of the climatic trends that shape the hydrological landscape of the studied region. Download : Download high-res image (747KB) Download : Download full-size image Fig. 17. Time series plots for the seasonal rainfall prediction for the station 04 and 05 for the duration 1990–2017. Dark black line shows the observed rainfall for the four seasons while the colored lines represent the predicted rainfall for Random Forest, LSTM, XGB, and the stacked model. The graphical representation elucidates a marginal underestimation in the forecasted seasonal rainfall across all models when juxtaposed with the observed values. Within the context of Al Ain station (station 04), both the XGB and stacked models demonstrated a comparably closer alignment with the observed values during the winter and spring months. Evidently, the summer and autumn months exhibit a relatively drier climate within the study area, and noteworthy is the commendable performance of nearly all models during periods of low rainfall. Conversely, in the case of Fujairah (station 05), the Random Forest (RF) model exhibited the lowest accuracy, while the stacked and XGB models portrayed the highest precision, echoing the trends observed for station 04. Nevertheless, it is intriguing to observe that the models exhibited discernible proficiency during months characterized by reduced precipitation, namely summer and autumn. Notably, a collective observation emerges, indicating that the models struggled to accurately predict peak rainfall events, as evidenced by the prediction boxes for winter and spring months in Fig. 17.The underestimation observed in machine learning models across all four seasons in the study region can be attributed to inherent challenges in capturing the complex dynamics of rainfall. Sparse and irregular rainfall patterns and characteristics of arid climates pose difficulties for models, especially those relying on linear relationships, to discern the non-linear and sporadic nature of precipitation events. Local factors such as topography, land use, and vegetation cover, which significantly influence rainfall, may not be adequately incorporated. Additionally, the models may oversimplify the intricate atmospheric processes governing rainfall, leading to inaccuracies. Finally, the limited input features and the potential omission of crucial meteorological variables can further hinder accurate predictions. 4.4. Sensitivity analysis In order to conduct a sensitivity analysis for monthly rainfall prediction, LASSO regression was employed. The results of this analysis revealed that two meteorological parameters, namely wind speed and minimum temperature, exhibit the highest sensitivity in relation to the prediction of monthly rainfall. The sensitivity values obtained from LASSO regression were normalized to a scale ranging from 0 to 1, where a value of 1 indicates the highest sensitivity and 0 represents the lowest sensitivity. Notably, wind speed and minimum temperature obtained sensitivity scores of 0.8 and 0.75, respectively (Fig. 18). These findings emphasize the importance of wind speed and minimum temperature as influential factors in accurately predicting monthly rainfall. Download : Download high-res image (343KB) Download : Download full-size image Fig. 18. Sensitivity analysis of the meteorological parameters affecting the rainfall prediction using LASSO regression analysis. In the context of an arid study region, the findings from the sensitivity analysis using LASSO regression carry particular significance. Arid regions are characterized by limited water availability and are highly sensitive to changes in rainfall patterns. Understanding the influential meteorological parameters for monthly rainfall prediction in such regions is crucial for effective water resource management, agriculture, and ecosystem sustainability. The identification of wind speed and minimum temperature as the most sensitive parameters for monthly rainfall prediction in the arid study region underscores their importance in driving rainfall dynamics. Wind speed plays a vital role in the transport of moisture and atmospheric circulation patterns, which can significantly impact the formation and distribution of rainfall events. Variations in wind speed can influence the moisture influx and subsequent rainfall patterns in arid regions, making it a key factor for accurate prediction. Similarly, minimum temperature is a critical parameter in arid regions due to its influence on evaporation rates, soil moisture levels, and atmospheric stability. Low minimum temperatures can affect the condensation process and the formation of clouds, potentially leading to changes in rainfall patterns. Understanding the sensitivity of minimum temperature in relation to monthly rainfall prediction enables better insight into the climatic processes governing precipitation in arid regions. 5. Conclusion In this study, a comprehensive analysis of machine learning (ML) models for monthly rainfall prediction was conducted. The investigation involved both univariate and multivariate analyses, considering various meteorological parameters. Through rigorous evaluation and comparison, valuable insights were gained into the performance, strengths, and limitations of the ML models. During the univariate analysis, XGBoost (XGB) and ensemble models demonstrated promising results during the training period, achieving a correlation coefficient (CC) of 0.88. However, their performance declined during the testing phase, with a maximum CC value of 0.45. Linear Regression, Support Vector Machines (SVM), and Elastic Net models exhibited poor performance in both training and testing periods. To address these limitations, a multivariate analysis as adopted, incorporating additional meteorological parameters such as wind Speed, temperature, humidity, and evapotranspiration. This approach allowed for a more comprehensive understanding of the factors influencing monthly rainfall patterns. The results showed substantial improvements in the models' performance during the testing period. XGB achieved a training CC of 0.95 and a testing CC of 0.76, while LSTM improved from 0.68 to 0.75 during training and from 0.21 to 0.71 during testing. Additionally, all the stacked models exhibited promising behavior in both training and testing phases. The root mean squared error (RMSE) values were significantly reduced, indicating enhanced predictive accuracy, and the mean absolute error (MAE) values also decreased by more than 20 % for certain models. Further analysis using LASSO regression allowed us to assess the importance of meteorological parameters in monthly rainfall prediction. The sensitivity analysis revealed that wind speed and minimum temperature were identified as the most sensitive parameters, highlighting their significant roles in accurately predicting rainfall. This knowledge is particularly valuable in the context of an arid study region, where understanding the influential factors in rainfall dynamics is crucial for effective water resource management and sustainability. For instance, minimum temperature plays a crucial role in determining the atmospheric conditions necessary for precipitation. As temperature decreases, the air's capacity to hold moisture decreases, leading to the condensation and formation of clouds. Lower minimum temperatures can create a favorable environment for moisture to condense and result in rainfall. Therefore, variations in minimum temperature can significantly impact the likelihood and intensity of rainfall events in arid regions. Secondly, wind speed plays a vital role in moisture transport and circulation patterns within the atmosphere. It affects the movement of air masses, the advection of moisture from different regions, and the formation and dispersion of clouds. In arid regions, wind patterns play a crucial role in determining the availability and distribution of moisture. Higher wind speeds can enhance the advection of moisture, leading to increased chances of rainfall. Conversely, lower wind speeds may inhibit moisture transport and reduce the likelihood of precipitation. The findings reveal XGBoost and LSTM as particularly successful models for predicting monthly rainfall in the study area. XGBoost, a gradient boosting algorithm, and LSTM (Long Short-Term Memory), a type of recurrent neural network, demonstrated superior performance compared to other models considered in our study. These models exhibited robustness in capturing the complex temporal relationships inherent in rainfall data, resulting in more accurate predictions. Specifically, the ensemble nature of XGBoost and the ability of LSTM to learn long-term dependencies in sequential data proved advantageous for monthly rainfall forecasting in hyper-arid environments. The identification of XGBoost and LSTM as the most effective models represents a significant scientific finding, highlighting their potential for improving rainfall prediction in similar climatic contexts. By serving as a benchmark for future studies, our research contributes to advancing the understanding and application of machine learning techniques in the domain of rainfall forecasting, particularly in regions characterized by extreme aridity.. Additionally, the study's identification of key meteorological drivers, such as wind speed and minimum temperature, enhances our understanding of the factors influencing surface water dynamics. The research is pivotal for water resources management and climate adaptation in hyper-arid regions like the UAE. Given the increasing frequency of extreme weather events and climate change, accurate rainfall forecasts are indispensable for sustainable water resource management and climate resilience. Through our investigation, we assess machine learning and ensemble models for monthly rainfall prediction, aiming to improve hyper-arid rainfall forecasts. These models show promise in enhancing forecast accuracy, crucial for informed water resource allocation and climate adaptation planning. Our study also aids policymakers, water resource managers, and stakeholders by providing timely and precise monthly rainfall patterns, enabling proactive measures to mitigate water scarcity and drought. Additionally, our research sheds light on the potential of machine learning to bolster traditional rainfall forecasting methods, bolstering adaptive capabilities in hyper-arid communities and institutions. In conclusion, this study highlights the potential of ML models in monthly rainfall prediction. The incorporation of additional meteorological parameters significantly improved the models' performance during the testing phase, enabling better estimation of rainfall patterns. The identification of influential factors, such as wind speed and minimum temperature, through sensitivity analysis contributes to a deeper understanding of the complex interactions driving rainfall dynamics, especially in arid regions. While our findings demonstrate the progress made in monthly rainfall prediction, further research is warranted to refine and enhance the models' accuracy. Future studies may explore advanced ensemble techniques, incorporate additional relevant variables, and consider domain-specific knowledge to further improve the models' performance. These efforts will support better decision-making in various sectors relying on accurate rainfall predictions, including agriculture, water resource management, and climate adaptation strategies. Funding This research did not receive any specific grant from funding agencies in the public, commercial, or not-for-profit sectors. CRediT authorship contribution statement Faisal Baig: Conceptualization, Data curation, Formal analysis, Investigation, Methodology, Software, Visualization, Writing – original draft, Writing – review & editing. Luqman Ali: Formal analysis, Methodology, Software, Visualization. Muhammad Abrar Faiz: . Haonan Chen: Conceptualization, Formal analysis, Software, Supervision, Writing – review & editing. Mohsen Sherif: Data curation, Funding acquisition, Project administration, Resources, Supervision, Writing – review & editing. Declaration of competing interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgment We would like to thank the National Center for Meteorology (NCM) of UAE for providing the meteorological data of the gauge stations used in this study. First author also acknowledges the financial support from College of Graduate Studies of United Arab Emirates University, Al Ain UAE. Data availability The authors do not have permission to share data. References Abbot and Marohasy, 2018 J. Abbot and J. Marohasy, Forecasting of Medium-term Rainfall Using Artificial Neural Networks: Case Studies from Eastern Australia. in Engineering and Mathematical Topics in Rainfall. Intech Open, 2018. [Online]. Available: https://doi.org/10.5772/INTECHOPEN.72619. Google Scholar Abdi Vishkaee et al., 2012 F. Abdi Vishkaee, C. Flamant, J. Cuesta, L. Oolman, P. Flamant, and H. R. Khalesifard, “Dust transport over Iraq and northwest Iran associated with winter Shamal: A case study,” Journal of Geophysical Research: Atmospheres, vol. 117, no. D3, 2012, doi: 10.1029/2011JD016339. Google Scholar Abebe and Endalie, Jan. 2023 W.T. Abebe, D. Endalie Artificial intelligence models for prediction of monthly rainfall without climatic data for meteorological stations in Ethiopia J. Big Data, 10 (1) (Jan. 2023), p. 2, 10.1186/s40537-022-00683-3 View in ScopusGoogle Scholar Adaryani et al., Nov. 2022 F.R. Adaryani, S.J. Mousavi, F. Jafari Short-term rainfall forecasting using machine learning-based approaches of PSO-SVR, LSTM and CNN J. Hydrol., 614 (Nov. 2022), Article 128463, 10.1016/j.jhydrol.2022.128463 View in ScopusGoogle Scholar Al Senafi and Anis, 2015 F. Al Senafi, A. Anis Shamals and climate variability in the Northern Arabian/Persian Gulf from 1973 to 2012 Int. J. Climatol., 35 (15) (2015), pp. 4509-4528, 10.1002/joc.4302 View in ScopusGoogle Scholar Amini et al., Sep. 2022 A. Amini, M. Dolatshahi, R. Kerachian Adaptive precipitation nowcasting using deep learning and ensemble modeling J. Hydrol., 612 (Sep. 2022), Article 128197, 10.1016/j.jhydrol.2022.128197 View PDFView articleView in ScopusGoogle Scholar Amini et al., Mar. 2024 A. Amini, M. Dolatshahi, R. Kerachian Real-time rainfall and runoff prediction by integrating BC-MODWT and automatically-tuned DNNs: Comparing different deep learning models J. Hydrol., 631 (Mar. 2024), Article 130804, 10.1016/j.jhydrol.2024.130804 View PDFView articleView in ScopusGoogle Scholar Baig et al., 2022 F. Baig, M. Abrar, H. Chen, and M. Sherif, “Rainfall Consistency, Variability, and Concentration over the UAE: Satellite Precipitation Products vs. Rain Gauge Observations,” Remote Sensing, vol. 14, no. 22, Art. no. 22, Jan. 2022, doi: 10.3390/rs14225827. Google Scholar Baig et al., 2023 F. Baig, M. Abrar, H. Chen, and M. Sherif, “Evaluation of Precipitation Estimates from Remote Sensing and Artificial Neural Network Based Products (PERSIANN) Family in an Arid Region,” Remote Sensing, vol. 15, no. 4, Art. no. 4, Jan. 2023, doi: 10.3390/rs15041078. Google Scholar Baljon and Sharma, 2023 M. Baljon and S. K. Sharma, “Rainfall Prediction Rate in Saudi Arabia Using Improved Machine Learning Techniques,” Water, vol. 15, no. 4, Art. no. 4, Jan. 2023, doi: 10.3390/w15040826. Google Scholar Bárdossy and Pegram, 2017 A. Bárdossy, G. Pegram Combination of radar and daily precipitation data to estimate meaningful sub-daily point precipitation extremes J. Hydrol., 544 (2017), pp. 397-406, 10.1016/j.jhydrol.2016.11.039 View PDFView articleView in ScopusGoogle Scholar Barrera-Animas et al., Mar. 2022 A.Y. Barrera-Animas, L.O. Oyedele, M. Bilal, T.D. Akinosho, J.M.D. Delgado, L.A. Akanbi Rainfall prediction: a comparative analysis of modern machine learning algorithms for time-series forecasting Mach. Learn. Appl., 7 (Mar. 2022), Article 100204, 10.1016/j.mlwa.2021.100204 View PDFView articleView in ScopusGoogle Scholar Bauer et al., 2015 P. Bauer, A. Thorpe, and G. Brunet, “The quiet revolution of numerical weather prediction,” Nature, vol. 525, no. 7567, Art. no. 7567, Sep. 2015, doi: 10.1038/nature14956. Google Scholar Chen et al., 2019 H. Chen, V. Chandrasekar, H. Tan, R. Cifelli Rainfall estimation from ground Radar and TRMM precipitation Radar using hybrid deep neural networks Geophys. Res. Lett., 46 (17–18) (2019), pp. 10669-10678, 10.1029/2019GL084771 View in ScopusGoogle Scholar Chen et al., Feb. 2020 H. Chen, V. Chandrasekar, R. Cifelli, P. Xie A machine Learning system for precipitation estimation using satellite and ground Radar network observations IEEE Trans. Geosci. Remote Sens., 58 (2) (Feb. 2020), pp. 982-994, 10.1109/TGRS.2019.2942280 View in ScopusGoogle Scholar Chen et al., May 2023 C. Chen, H. Zhang, W. Shi, W. Zhang, Y. Xue A novel paradigm for integrating physics-based numerical and machine learning models: a case study of eco-hydrological model Environ. Model. Softw., 163 (May 2023), Article 105669, 10.1016/j.envsoft.2023.105669 View PDFView articleView in ScopusGoogle Scholar Cheung and Yeung, 2012 P. Cheung and H. Y. Yeung, “Application of optical-flow technique to significant convection nowcast for terminal areas in Hong Kong,” presented at the The 3rd WMO International Symposium on Nowcasting and Very Short-Range Forecasting, Hong Kong, 2012, pp. 6–10. Google Scholar Cramer et al., Nov. 2017 S. Cramer, M. Kampouridis, A.A. Freitas, A.K. Alexandridis An extensive evaluation of seven machine learning methods for rainfall prediction in weather derivatives Expert Syst. Appl., 85 (Nov. 2017), pp. 169-181, 10.1016/j.eswa.2017.05.029 View PDFView articleView in ScopusGoogle Scholar Deman et al., 2022 V. M. H. Deman, A. Koppa, W. Waegeman, D. A. MacLeod, M. Bliss Singer, and D. G. Miralles, “Seasonal prediction of Horn of Africa long rains using machine learning: The pitfalls of preselecting correlated predictors,” Frontiers in Water, vol. 4, 2022, Accessed: Nov. 13, 2023. [Online]. Available: https://www.frontiersin.org/articles/10.3389/frwa.2022.1053020. Google Scholar Diez-Sierra and del Jesus, Jul. 2020 J. Diez-Sierra, M. del Jesus Long-term rainfall prediction using atmospheric synoptic patterns in semi-arid climates with statistical and machine learning methods J. Hydrol., 586 (Jul. 2020), Article 124789, 10.1016/j.jhydrol.2020.124789 View PDFView articleView in ScopusGoogle Scholar Dong et al., Jan. 2023 J. Dong, W. Zeng, L. Wu, J. Huang, T. Gaiser, A.K. Srivastava Enhancing short-term forecasting of daily precipitation using numerical weather prediction bias correcting with XGBoost in different regions of China Eng. Appl. Artif. Intel., 117 (Jan. 2023), Article 105579, 10.1016/j.engappai.2022.105579 View PDFView articleView in ScopusGoogle Scholar Elshaboury et al., 1900 N. Elshaboury, M. Elshourbagy, A. Al-Sakkaf, and E. M. Abdelkader, “Rainfall forecasting in arid regions using an ensemble of artificial neural networks,” J. Phys.: Conf. Ser., vol. 1900, no. 1, p. 012015, May 2021, doi: 10.1088/1742-6596/1900/1/012015. Google Scholar Endalie et al., Nov. 2021 D. Endalie, G. Haile, W. Taye Deep learning model for daily rainfall prediction: case study of Jimma, Ethiopia Water Supply, 22 (3) (Nov. 2021), pp. 3448-3461, 10.2166/ws.2021.391 Google Scholar Faiz, Oct. 2018 M.A. Faiz, et al. How accurate are the performances of gridded precipitation data products over Northeast China? Atmos. Res., 211 (Oct. 2018), pp. 12-20, 10.1016/j.atmosres.2018.05.006 View PDFView articleView in ScopusGoogle Scholar Faiz et al., 2021 M.A. Faiz, Y. Zhang, F. Baig, D. Wrzesiński, F. Naz Identification and inter-comparison of appropriate long-term precipitation datasets using decision tree model and statistical matrix over China Int. J. Climatol., 41 (10) (2021), pp. 5003-5021, 10.1002/joc.7113 View in ScopusGoogle Scholar Fan et al., Mar. 2023 Y. Fan, J. Yang, J. Li, X. Qi, Q. Bao Gain of one-month lead predicting spring rainfall over China: a comparison between FGOALS-f2 ensemble prediction system and its driving stretched-grid downscaling prediction system Atmos. Res., 283 (Mar. 2023), Article 106570, 10.1016/j.atmosres.2022.106570 View PDFView articleView in ScopusGoogle Scholar Fan et al., Apr. 2024 P. Fan, J. Yang, Z. Chen, J. Zhao, N. Zang, G. Feng Neural network-based climate index: advancing rainfall prediction in EI Niño contexts Atmos. Res., 300 (Apr. 2024), Article 107216, 10.1016/j.atmosres.2023.107216 View PDFView articleView in ScopusGoogle Scholar Feng, Nov. 2020 G.-L. Feng, et al. Improved prediction model for flood-season rainfall based on a nonlinear dynamics-statistic combined method Chaos Solitons Fractals, 140 (Nov. 2020), Article 110160, 10.1016/j.chaos.2020.110160 View PDFView articleView in ScopusGoogle Scholar Fonseca et al., 2022 R. Fonseca, D. Francis, N. Nelli, M. Thota Climatology of the heat low and the intertropical discontinuity in the Arabian Peninsula Int. J. Climatol., 42 (2) (2022), pp. 1092-1117, 10.1002/joc.7291 View in ScopusGoogle Scholar Frame, Jul. 2022 J.M. Frame, et al. Deep learning rainfall–runoff predictions of extreme events Hydrol. Earth Syst. Sci., 26 (13) (Jul. 2022), pp. 3377-3392, 10.5194/hess-26-3377-2022 View in ScopusGoogle Scholar Francis, Mar. 2021 D. Francis, et al. Summertime dust storms over the Arabian Peninsula and impacts on radiation, circulation, cloud development and rain Atmos. Res., 250 (Mar. 2021), Article 105364, 10.1016/j.atmosres.2020.105364 View PDFView articleView in ScopusGoogle Scholar Gholami Rostam et al., 2020 M. Gholami Rostam, S. J. Sadatinejad, and A. Malekian, “Precipitation forecasting by large-scale climate indices and machine learning techniques,” J. Arid Land, vol. 12, no. 5, pp. 854–864, Sep. 2020, doi: 10.1007/s40333-020-0097-3. Google Scholar Gutierrez-Lopez et al., 2019 A. Gutierrez-Lopez, I. Cruz-Paz, and M. Muñoz Mandujano, “Algorithm to Predict the Rainfall Starting Point as a Function of Atmospheric Pressure, Humidity, and Dewpoint,” Climate, vol. 7, no. 11, Art. no. 11, Nov. 2019, doi: 10.3390/cli7110131. Google Scholar He et al., Sep. 2022 R. He, L. Zhang, A.W.Z. Chew Modeling and predicting rainfall time series using seasonal-trend decomposition and machine learning Knowl.-Based Syst., 251 (Sep. 2022), Article 109125, 10.1016/j.knosys.2022.109125 View PDFView articleView in ScopusGoogle Scholar He et al., Jan. 2024 R. He, L. Zhang, A.W.Z. Chew Data-driven multi-step prediction and analysis of monthly rainfall using explainable deep learning Expert Syst. Appl., 235 (Jan. 2024), Article 121160, 10.1016/j.eswa.2023.121160 View PDFView articleView in ScopusGoogle Scholar J. Coiffier, Fundamentals of Numerical Weather Prediction - Jean Coiffier - Google Books. Cambridge University Press, 2011 J. Coiffier, Fundamentals of Numerical Weather Prediction - Jean Coiffier - Google Books. Cambridge University Press, 2011. Accessed: Feb. 26, 2023. [Online]. Available: https://books.google.ae/books?hl=en&lr=&id=vY29h_Bvqk0C&oi=fnd&pg=PR3&ots=dOBsb3ExPs&sig=ajleM24xj4wioNlQNUDVghL44Tc&redir_esc=y#v=onepage&q&f=false. Google Scholar Kumar et al., 2015 K.N. Kumar, D. Entekhabi, A. Molini Hydrological extremes in hyperarid regions: a diagnostic characterization of intense precipitation over the Central Arabian Peninsula J. Geophys. Res. Atmos., 120 (5) (2015), pp. 1637-1650, 10.1002/2014JD022341 Google Scholar Kumar et al., 2017 K. N. Kumar, A. Molini, T. B. M. J. Ouarda, and M. N. Rajeevan, “North Atlantic controls on wintertime warm extremes and aridification trends in the Middle East,” Sci Rep, vol. 7, no. 1, Art. no. 1, Sep. 2017, doi: 10.1038/s41598-017-12430-3. Google Scholar Le et al., 2020 T.-T. Le, B. T. Pham, H.-B. Ly, A. Shirzadi, and L. M. Le, “Development of 48-hour Precipitation Forecasting Model using Nonlinear Autoregressive Neural Network,” in CIGOS 2019, Innovation for Sustainable Infrastructure, C. Ha-Minh, D. V. Dao, F. Benboudjema, S. Derrible, D. V. K. Huynh, and A. M. Tang, Eds., in Lecture Notes in Civil Engineering. Singapore: Springer, 2020, pp. 1191–1196. doi: 10.1007/978-981-15-0802-8_191. Google Scholar Le, et al., 2023 P. V. V. Le et al., “Climate-driven changes in the predictability of seasonal precipitation,” Nat. Commun., vol. 14, no. 1, Art. no. 1, Jun. 2023, doi: 10.1038/s41467-023-39463-9. Google Scholar Li et al., Aug. 2021 H. Li, Y. He, H. Yang, Y. Wei, S. Li, J. Xu Rainfall prediction using optimally pruned extreme learning machines Nat. Hazards, 108 (1) (Aug. 2021), pp. 799-817, 10.1007/s11069-021-04706-9 Google Scholar Lim and Wang, Feb. 2022 T. Lim, K. Wang Comparison of machine learning algorithms for emulation of a gridded hydrological model given spatially explicit inputs Comput. Geosci., 159 (Feb. 2022), Article 105025, 10.1016/j.cageo.2021.105025 View PDFView articleView in ScopusGoogle Scholar Liu et al., Jun. 2022 J. Liu, L. Xu, N. Chen A spatiotemporal deep learning model ST-LSTM-SA for hourly rainfall forecasting using radar echo images J. Hydrol., 609 (Jun. 2022), Article 127748, 10.1016/j.jhydrol.2022.127748 View PDFView articleView in ScopusGoogle Scholar Luong et al., 2020 T.M. Luong, H.P. Dasari, I. Hoteit Extreme precipitation events are becoming less frequent but more intense over Jeddah, Saudi Arabia. Are shifting weather regimes the cause? Atmos. Sci. Lett., 21 (8) (2020), p. e981 View in ScopusGoogle Scholar Mohan, Aug. 2020 T.S. Mohan, et al. On the investigation of the typology of fog events in an arid environment and the link with climate patterns Mon. Weather Rev., 148 (8) (Aug. 2020), pp. 3181-3202, 10.1175/MWR-D-20-0073.1 View in ScopusGoogle Scholar Nelli, et al., 2022 N. Nelli et al., “Characterization of the atmospheric circulation near the Empty Quarter Desert during major weather events,” Frontiers in Environmental Science, vol. 10, 2022, Accessed: Sep. 27, 2023. [Online]. Available: https://www.frontiersin.org/articles/10.3389/fenvs.2022.972380. Google Scholar Niranjan Kumar and Ouarda, 2014 K. Niranjan Kumar, T.B.M.J. Ouarda Precipitation variability over UAE and global SST teleconnections J. Geophys. Res. Atmos., 119 (17) (2014), pp. 10313-10322, 10.1002/2014JD021724 Google Scholar Palmitessa et al., Sep. 2022 R. Palmitessa, M. Grum, A.P. Engsig-Karup, R. Löwe Accelerating hydrodynamic simulations of urban drainage systems with physics-guided machine learning Water Res., 223 (Sep. 2022), Article 118972, 10.1016/j.watres.2022.118972 View PDFView articleView in ScopusGoogle Scholar Parviz et al., 2023 L. Parviz, K. Rasouli, and A. Torabi Haghighi, “Improving Hybrid Models for Precipitation Forecasting by Combining Nonlinear Machine Learning Methods,” Water Resour Manage, May 2023, doi: 10.1007/s11269-023-03528-7. Google Scholar Pathan et al., 2021 M. S. Pathan, J. Wu, Y. H. Lee, J. Yan, and S. Dev, “Analyzing the Impact of Meteorological Parameters on Rainfall Prediction,” in 2021 IEEE USNC-URSI Radio Science Meeting (Joint with AP-S Symposium), Dec. 2021, pp. 100–101. doi: 10.23919/USNC-URSI51813.2021.9703664. Google Scholar Piadeh et al., Sep. 2023 F. Piadeh, K. Behzadian, A.S. Chen, L.C. Campos, J.P. Rizzuto, Z. Kapelan Event-based decision support algorithm for real-time flood forecasting in urban drainage systems using machine learning modelling Environ. Model. Softw., 167 (Sep. 2023), Article 105772, 10.1016/j.envsoft.2023.105772 View PDFView articleView in ScopusGoogle Scholar Pirone et al., Feb. 2023 D. Pirone, L. Cimorelli, G. Del Giudice, D. Pianese Short-term rainfall forecasting using cumulative precipitation fields from station data: a probabilistic machine learning approach J. Hydrol., 617 (Feb. 2023), Article 128949, 10.1016/j.jhydrol.2022.128949 View PDFView articleView in ScopusGoogle Scholar S. Yang, F. Ling, Y. Li, and J.-J. Luo, “Improving Seasonal Prediction of Summer Precipitation in the Middle–Lower Reaches of the Yangtze River Using a TU-Net Deep Learning Approach,” Artificial Intelligence for the Earth Systems, vol. 2, no. 2, Jun., 2023 S. Yang, F. Ling, Y. Li, and J.-J. Luo, “Improving Seasonal Prediction of Summer Precipitation in the Middle–Lower Reaches of the Yangtze River Using a TU-Net Deep Learning Approach,” Artificial Intelligence for the Earth Systems, vol. 2, no. 2, Jun. 2023, doi: 10.1175/AIES-D-22-0078.1. Google Scholar Shi et al., 2015 X. Shi, Z. Chen, H. Wang, D.-Y. Yeung, W. Wong, and W. WOO, “Convolutional LSTM Network: A Machine Learning Approach for Precipitation Nowcasting,” in Advances in Neural Information Processing Systems, Curran Associates, Inc., 2015. Accessed: Feb. 26, 2023. [Online]. Available: https://proceedings.neurips.cc/paper/2015/hash/07563a3fe3bbe7e3ba84431ad9d055af-Abstract.html. Google Scholar Steinhoff, May 2018 D.F. Steinhoff, et al. Influences of the monsoon trough and Arabian heat low on Summer rainfall over the United Arab Emirates Mon. Weather Rev., 146 (5) (May 2018), pp. 1383-1403, 10.1175/MWR-D-17-0296.1 View in ScopusGoogle Scholar Tang, Jun. 2023 Y. Tang, et al. flood forecasting based on machine learning pattern recognition and dynamic migration of parameters J. Hydrol.: Reg. Stud., 47 (Jun. 2023), Article 101406, 10.1016/j.ejrh.2023.101406 View PDFView articleView in ScopusGoogle Scholar Thirumalai et al., 2017 C. Thirumalai, K. S. Harsha, M. L. Deepak, and K. C. Krishna, “Heuristic prediction of rainfall using machine learning techniques,” in 2017 International Conference on Trends in Electronics and Informatics (ICEI), May 2017, pp. 1114–1117. doi: 10.1109/ICOEI.2017.8300884. Google Scholar V. Singh, “Study of Various Rainfall Estimation Prediction Techniques using Data Mining,” International Journal of Engineering Research Technology, vol. 9, no. 7, Jul., 2020 V. Singh, “Study of Various Rainfall Estimation & Prediction Techniques using Data Mining,” International Journal of Engineering Research & Technology, vol. 9, no. 7, Jul. 2020, doi: 10.17577/IJERTV9IS070464. Google Scholar Van et al., Apr. 2020 S.P. Van, H.M. Le, D.V. Thanh, T.D. Dang, H.H. Loc, D.T. Anh Deep learning convolutional neural network in rainfall–runoff modelling J. Hydroinf., 22 (3) (Apr. 2020), pp. 541-561, 10.2166/hydro.2020.095 View in ScopusGoogle Scholar Wang, Sep. 2022 N. Wang, et al. Multi-predictor ensembles improving seasonal prediction of summer rainfall over the Bohai Sea Rim based on statistical downscaling of BCC_CSM1.1 m Atmos. Res., 275 (Sep. 2022), Article 106221, 10.1016/j.atmosres.2022.106221 View PDFView articleView in ScopusGoogle Scholar Wang et al., Feb. 2023 G.-G. Wang, H. Cheng, Y. Zhang, H. Yu ENSO analysis and prediction using deep learning: a review Neurocomputing, 520 (Feb. 2023), pp. 216-229, 10.1016/j.neucom.2022.11.078 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2021 C. Wang, Z. Jia, Z. Yin, F. Liu, G. Lu, and J. Zheng, “Improving the Accuracy of Subseasonal Forecasting of China Precipitation With a Machine Learning Approach,” Frontiers in Earth Science, vol. 9, 2021, Accessed: Jul. 17, 2023. [Online]. Available: https://www.frontiersin.org/articles/10.3389/feart.2021.659310. Google Scholar Wang et al., Aug. 2022 S. Wang, H. Peng, Q. Hu, M. Jiang Analysis of runoff generation driving factors based on hydrological model and interpretable machine learning method J. Hydrol.: Reg. Stud., 42 (Aug. 2022), Article 101139, 10.1016/j.ejrh.2022.101139 View PDFView articleView in ScopusGoogle Scholar Wang et al., Jun. 2023 C. Wang, S.-K. Yoon, J. Chen, H. Chen, L. Xiong, J.-S. Kim Statistical prediction of typhoon-induced total accumulated rainfall in the Western North Pacific using typhoon track similarity indices Atmos. Res., 288 (Jun. 2023), Article 106724, 10.1016/j.atmosres.2023.106724 View PDFView articleView in ScopusGoogle Scholar Woo and Wong, 2017 W. Woo and W. Wong, “Operational Application of Optical Flow Techniques to Radar-Based Rainfall Nowcasting,” Atmosphere, vol. 8, no. 3, Art. no. 3, Mar. 2017, doi: 10.3390/atmos8030048. Google Scholar Wu, Dec. 2021 Z. Wu, et al. Optimization of extreme learning machine model with biological heuristic algorithms to estimate daily reference crop evapotranspiration in different climatic regions of China J. Hydrol., 603 (Dec. 2021), Article 127028, 10.1016/j.jhydrol.2021.127028 View PDFView articleView in ScopusGoogle Scholar Wu and Chau, Mar. 2013 C.L. Wu, K.W. Chau Prediction of rainfall time series using modular soft computingmethods Eng. Appl. Artif. Intel., 26 (3) (Mar. 2013), pp. 997-1007, 10.1016/j.engappai.2012.05.023 View PDFView articleView in ScopusGoogle Scholar Xu, May 2022 Y. Xu, et al. Research on particle swarm optimization in LSTM neural networks for rainfall-runoff simulation J. Hydrol., 608 (May 2022), Article 127553, 10.1016/j.jhydrol.2022.127553 View PDFView articleView in ScopusGoogle Scholar Yucel et al., Apr. 2015 I. Yucel, A. Onen, K.K. Yilmaz, D.J. Gochis Calibration and evaluation of a flood forecasting system: utility of numerical weather prediction model, data assimilation and satellite-based rainfall J. Hydrol., 523 (Apr. 2015), pp. 49-66, 10.1016/j.jhydrol.2015.01.042 View PDFView articleView in ScopusGoogle Scholar Cited by (0) View Abstract © 2024 Elsevier B.V. All rights reserved. Recommended articles Improving cascade reservoir inflow forecasting and extracting insights by decomposing the physical process using a hybrid model Journal of Hydrology, Volume 630, 2024, Article 130623 Jinyang Li, …, Soroosh Sorooshian View PDF Efficiency of global precipitation datasets in tropical and subtropical catchments revealed by large sampling hydrological modelling Journal of Hydrology, Volume 633, 2024, Article 131016 João M. Andrade, …, Suzana M.G.L. Montenegro View PDF Improving river medium–high flow estimation by CM Hierarchical Classification (CMHC) method using Sentinel-2 imagery Journal of Hydrology, Volume 633, 2024, Article 130990 Taixia Wu, …, Shudong Wang View PDF Show 3 more articles Article Metrics Captures Readers: 8 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 6:
- APA Citation: None
  Main Objective: To empirically quantify crop water consumption at sub-field scales and evaluate the water-saving potential of different management strategies in California's Central Valley.
  Study Location: California's Central Valley, USA
  Data Sources: Remotely sensed evapotranspiration data, machine learning-based naturally-occurring ET estimates, crop type data, climate data, soil quality data, topographic data
  Technologies Used: Remote sensing, machine learning
  Key Findings: -  In California's Central Valley, switching to lower water intensity crops has the potential to save up to 93.8% of agricultural ET.
-  Adjusting farming practices to reduce consumption of high-consuming crops to the median crop-specific consumption level can yield water savings of up to 11.3%.
-  Fallowing 5% of lands with the highest estimated agricultural ET can lead to a 9.3% reduction in water consumption.
  Extract 1: "Our use of remotely sensed ET estimates and our ability to estimate naturally-occurring ET therefore allows us to more accurately characterize agricultural ET."
  Extract 2: "Consistent with prior studies relying on crop water demand simulations, our research suggests that transitioning to crops with lower water requirements is an effective conservation strategy. However, accruing substantial water savings requires embracing less popular crops like grains and hay20."
  Limitations: None
  Relevance Evaluation: The study is highly relevant to the point being made in the review. It provides empirical evidence and analysis of water consumption at the field scale, which is essential for understanding the potential of different water-saving strategies in real-time irrigation management systems. The study's findings have implications for water management policies and practices in California and beyond.
  Relevance Score: 1.0
  Inline Citation: None
  Explanation: The study quantifies crop water consumption at fine scales to improve water management in California's Central Valley, a stressed agricultural region. The authors develop a framework that combines remote sensing data and machine learning to estimate agricultural evapotranspiration (ET), which represents the water consumed by crops. They leverage variation in ET to analyze factors driving consumption and evaluate water-saving strategies such as fallowing, crop switching, and improved farming practices.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement View all journals Search Log in Explore content About the journal Publish with us Sign up for alerts RSS feed nature nature communications articles article Article Open access Published: 25 March 2024 Field-scale crop water consumption estimates reveal potential water savings in California agriculture Anna Boser , Kelly Caylor , Ashley Larsen , Madeleine Pascolini-Campbell , John T. Reager & Tamma Carleton   Nature Communications  15, Article number: 2366 (2024) Cite this article 2648 Accesses 121 Altmetric Metrics Abstract Efficiently managing agricultural irrigation is vital for food security today and into the future under climate change. Yet, evaluating agriculture’s hydrological impacts and strategies to reduce them remains challenging due to a lack of field-scale data on crop water consumption. Here, we develop a method to fill this gap using remote sensing and machine learning, and leverage it to assess water saving strategies in California’s Central Valley. We find that switching to lower water intensity crops can reduce consumption by up to 93%, but this requires adopting uncommon crop types. Northern counties have substantially lower irrigation efficiencies than southern counties, suggesting another potential source of water savings. Other practices that do not alter land cover can save up to 11% of water consumption. These results reveal diverse approaches for achieving sustainable water use, emphasizing the potential of sub-field scale crop water consumption maps to guide water management in California and beyond. Similar content being viewed by others Efficient agricultural practices in Africa reduce crop water footprint despite climate change, but rely on blue water resources Article Open access 13 December 2023 Half of twenty-first century global irrigation expansion has been in water-stressed regions Article Open access 08 March 2024 Water footprints and crop water use of 175 individual crops for 1990–2019 simulated with a global crop model Article Open access 14 February 2024 Introduction Climate change, drought, and the overexploitation of water resources have led to declines in freshwater storage in many vital agricultural regions1, raising concerns surrounding the future of food and water security2,3. Irrigation constitutes the largest use of freshwater globally4,5, and many regions will need to decrease their agricultural water use while maintaining high levels of production to ensure a sustainable food and water supply as the population grows6. Proposed options for reducing water use include leaving lands fallow, switching to less water-intensive crops, adopting water-saving farming practices such as deficit irrigation, and improving irrigation efficiency7,8. However, any approach to reducing agricultural water use depends on the challenging task of characterizing the amount of water crops consume9. While it is possible to monitor volumes of water withdrawn for irrigation, this is a poor proxy for the amount of water crops consume through evapotranspiration (ET)10. Only some irrigation water results in ET: the rest remains in the system as runoff or recharge, though this proportion can vary widely depending on topography, climate, soil type, and farming practices11. Agricultural ET, or the increase in ET that irrigated agriculture brings, is therefore a critical measure in that it represents the amount of water that is actually “consumed” by agriculture. This water leaves the watershed entirely as it is evaporated from the soil and transpired by crops4. Since agricultural ET represents agricultural water consumption, it is key for gauging the potential of fallowing, crop switching, or other farming practices to save water12. When compared to total irrigation amounts, agricultural ET can also be used to highlight the fraction of irrigation withdrawals that do not effectively result in consumptive use13. While this water stays in the system and therefore may continue to provide beneficial uses14, it also does not achieve its original purpose of contributing to crop growth. Therefore, agricultural ET can help calculate irrigation efficiency and identify unnecessary irrigation water withdrawals from surface or groundwater reservoirs13. Two methodological challenges prevent agricultural ET from being monitored at scale. First, simply measuring total ET at scale is a challenge. Second, even when measures of ET are available, it is difficult to separate agricultural ET from the total10,15. To measure total ET, eddy covariance flux towers are highly accurate for monitoring ET at a single location16. However, they are expensive and thus sparse, and they are designed to measure ET over uniform vegetation, which is not reflective of complex agricultural landscapes17. In the absence of ET measurements, theoretical water demand can be simulated based on climate and crop type18,19. Although such tools are helpful for water demand planning20, theoretical water demand represents the ET of a crop whose water demands are fully met. Therefore, these are likely to overestimate actual ET. Additionally, these simulated estimates exclusively reflect variations in water demand influenced by factors incorporated into the model, which are often limited to crop type and climate21. Therefore, analyses based on these models are constrained to examining these specific factors, neglecting other critical drivers of ET such as farming practices. Given the scarcity of in situ data and the inherent constraints of simulated estimates, accurately gauging total ET at scale remains a significant challenge. Addressing the second challenge, even when accurate ET measurements are available, isolating agricultural ET from total ET is difficult. This step is key for water management, since the resulting metric represents the increase in ET attributable to agriculture. To do so, one must estimate the naturally-occurring ET that would occur in the absence of irrigated agriculture (for example, if the land were left fallow). Most often, this naturally-occurring ET is assumed to be equal to precipitation19,22. However, there may be temporal lags between precipitation and resulting ET, some precipitation may not result in ET at all, and ET may also be supplemented by other sources of water, such as near surface groundwater. Together, these challenges leave us with limited measurements of ET and no empirical estimates of agricultural ET at large scales, inhibiting our ability to form evidence-based water management policies that accurately reflect crop water use and potential water savings in agriculture. Recent advances in the remote sensing of ET unlock new avenues for research into agricultural water consumption. Numerous algorithms for estimating ET using land surface temperature and other remote sensing inputs have been validated specifically for use in agricultural settings23,24. These advancements have allowed researchers to empirically study total ET in agricultural settings25,26. However, despite high-resolution maps of ET in agricultural landscapes25,27, the challenge of isolating agricultural ET from total ET has been limited to studies in extremely arid regions where irrigation is the only source of water available to plants28. Here, we develop a framework for measuring agricultural ET at sub-field scales. We use remote sensing to determine total ET and combine it with machine learning to estimate naturally-occurring ET. First, we retrieve satellite-based remotely sensed total ET estimates from the 30m, monthly OpenET ensemble data24 available in the western United States starting in 2016. Second, since we can use these same OpenET estimates to directly observe naturally-occurring ET over fallow lands, we train a gradient boosting algorithm to predict ET over fallow lands. We use information on topography, soil quality, climate, and spatial and temporal coordinates as predictors. We then use the model to retrieve naturally-occurring ET over all active agricultural fields, which we subtract from the remotely-sensed ET to calculate agricultural ET. We apply this methodology to calculate agricultural ET across California’s Central Valley, one of the world’s most water-stressed and agriculturally productive regions29. We use these maps of agricultural ET to calculate the water consumption of different crop types, as well as to calculate variability in agricultural ET within crop types. These insights allow us to evaluate different strategies that have been proposed to save water under the Sustainable Groundwater Management Act (SGMA)7, which mandates that all water basins in California reduce groundwater pumping to sustainable levels by 204030. Specifically, we compare the ability of fallowing, crop switching, and other farming practices to save water by reducing agricultural ET. Additionally, we calculate irrigation efficiency to assess the potential to reduce irrigation withdrawals without decreasing agricultural ET. In the wake of groundwater pumping cutbacks of 20–50% under SGMA7, this work will guide water managers in enacting water savings and help predict which land use changes are likely to ensue. Results Estimating agricultural ET We calculate agricultural ET by retrieving the total ET observed over agricultural areas and subtracting naturally-occurring ET (Fig. 1). While total ET estimates are retrieved directly from OpenET, we simulate naturally-occurring ET by training a gradient boosting regressor to predict the ET observed by OpenET over fallow lands. Our model simulating naturally-occurring ET achieves an R2 of .87 and a Mean Absolute Error (MAE) of 35.5 mm per year (Supplementary Fig. 1). We use a test set made up of 2 km2 held-out areas (about four times the area of a large agricultural field in the Central Valley). We do not find that error is structured across either space (Supplementary Figs. 2 and 3) or time (Supplementary Fig. 4). Fig. 1: Estimates of annual agricultural evapotranspiration (ET) over active agricultural lands in California’s Central Valley. a Total ET is remotely sensed and is retrieved from OpenET. b Naturally-occurring ET is an estimate of the ET that would be present if the agricultural lands were fallow, and is predicted using machine learning. c Agricultural ET is the difference between total and naturally-occurring ET, and represents our estimate of the ET caused by agriculture, and therefore the water that would be conserved if the land were fallow instead of cropped. The variations in agricultural ET across the landscape suggest that different fields can have vastly different abilities to conserve water. OpenET provides ET data at the scale of 30 m; all figure panels here show ET resampled to 70 m resolution for computational efficiency and to better match average field size. Full size image Variation in agricultural ET within and across crop types We leverage the significant variability in agricultural ET observed across the Central Valley (Fig. 1) to analyze the factors driving these variations. Crop type, which is commonly cited as an important variable explaining differences in agricultural ET19, explains 34% of the variation in estimated agricultural ET (Eq. (4), Supplementary Fig. 5). In Fig. 2, we show the water intensity of different crop groups (Supplementary Note 7). Deciduous fruits and nuts are some of the highest consumers at 625 mm per year (582–668 95% CI) (Fig. 2), particularly almonds at 715 mm per year (651–778 95% CI) (Supplementary Fig. 5). Conversely, grain and hay crops consume only 141 mm per year (111–171 95% CI). These broad variations in the water consumption of different crop types align with previous work estimating crop water demands (Supplementary Note 1, Supplementary Fig. 6) and suggest that substantial water savings may be possible with crop switching. Fig. 2: Variations in annual agricultural evapotranspiration (ET) across and within crop groups. Mean agricultural ET by crop group (blue fill and 95% CI) is the average difference between total ET (black outline) and naturally-occurring ET (cream fill). All measures are summed across the year, leading to naturally-occurring and total ET estimates that include water consumption occurring outside of the growing season. While we find significant differences in mean agricultural ET across crop groups, the gray box plots also show a broad spread in agricultural ET within crop groups (box plots show 0.5, 0.25. 0.5, 0.75, and 0.95 quantiles). Full size image However, the majority of the variation remains unexplained by crop type (Fig. 2, Supplementary Fig. 5). This within-crop variability is not uniform for different crops: crops such as deciduous fruits and nuts tend to have large variances, whereas rice has a very small variance. For example, pistachios have the most variability with an interquartile range (IQR) of 664 mm per year over the whole state. Conversely, rice has an IQR of only 122 mm per year (Supplementary Fig. 5). Part of the large variability in agricultural ET for deciduous fruits and nuts can be explained by orchard age: young orchards consume significantly less water than more mature ones (Supplementary Note 2, Supplementary Fig. 7). Climate, topography, and soil quality explain an additional 6% of within-crop variation. However, substantial within-crop variation remains, indicating that some of these differences may be due to variations in farming practices. This would suggest that reducing water consumption without switching crops may be feasible, which we explore in the next section. The water-saving potential of different management strategies The variability of agricultural ET both within and between crops allows us to evaluate the water saving-potential of different management strategies. Here, we compare the effect of three scenarios on reducing agricultural ET in groundwater sub-basins across the Central Valley: 1. Crop switching: Substitute high-ET crops for the median water-consuming crop (Eq. (6)). 2. Farming practices: Keep the same spatial allocation of crops, but reduce agricultural ET of high consumers to the median, crop-specific, consumption level (Eq. (7)). 3. Fallowing: Fallow the 5% of lands with the highest estimated agricultural ET (Eq. (8)). Because it would not be realistic to prescribe farmers in different contexts to consume similar amounts of water, we calculate crop-specific agricultural ET and within-crop variation at the level of groundwater sub-basins. We additionally control for differences in climate, topography, and soil type before conducting the scenarios. To account for the effects of orchard age, we remove orchards that have been bearing fruit for 5 years or less or that are in their last year of production (Supplementary Fig. 7). We find that each of these scenarios return similar reductions in overall water consumption of around 10% (Fig. 3). Since crops with high agricultural ET are heavily favored in most sub-basins and therefore the median crop usually has a high agricultural ET, crop switching only results in a 9.9% reduction in agricultural ET. In order to achieve greater water savings, crops would need to be switched to less popular crops with lesser water demands: switching all crops to the lowest consuming crop in a sub-basin results in a 93.8% reduction in agricultural ET. While strategies that do not require a change in land cover type are less commonly cited as a water management approach, we find that reducing high consumers to their crops’s median consumption level yields similar water savings of up to 11.3%. Fallowing does, however, remain the most effective way to reduce agricultural ET. We find that leaving a mere 5% of land fallow results in a 9.3% consumption reduction, comparable to the savings afforded by crop switching and within-crop scenarios which by definition affect up to 50% of lands. Fig. 3: The percent reduction in agricultural evapotranspiration (ET) driven by various management scenarios. a Savings accrued by substituting high-ET crops for the median water-consuming crop in a sub-basin. b Water savings without changing land cover by reducing agricultural ET of high consumers to the median, crop- and sub-basin-specific, consumption level. c Water savings from fallowing the 5% of lands with the highest estimated agricultural ET. Full size image Irrigation efficiency While fallowing, crop switching, and other farming practices highlight opportunities to decrease agricultural ET, we also find opportunities to diminish runoff and deep percolation during conveyance, on-farm management, or application (Fig. 4). On average, we find that irrigation in the Central Valley is 61.8% (54.0–69.7%) efficient, similar in magnitude to what theoretical estimates predict (Supplementary Note 3, Supplementary Fig. 8). The large disparity in efficiency between northern and southern counties is, however, more pronounced than theoretical estimates (Supplementary Fig. 8). As a result, there may be limited potential to decrease water withdrawn for irrigation in the south which achieves efficiencies as high as 80%. The particularly low efficiencies in the northern counties, however, suggest a large potential to decrease irrigation water withdrawals without affecting agricultural ET. Fig. 4: Irrigation efficiency across the counties of the Central Valley. a Irrigation efficiency is calculated by dividing agricultural evapotranspiration (ET) (gridded data) by USGS county-level reports of irrigation amounts (blue polygons). For the calculation, agricultural ET is averaged to the county level to match the spatial scale of the irrigation data. Additionally, irrigation is displayed in volumetric units (teragrams), but is divided by county-level cropland area to be in units consistent with agricultural ET prior to the calculation. We note that these irrigation amounts are counted at the point of use, rather than the water’s point of origin. b The resulting county-level irrigation efficiency estimates vary widely across the Central Valley, with particularly low efficiencies in the northern counties. Full size image Discussion By empirically quantifying crop water consumption at sub-field scales, we contribute to characterizing agriculture’s hydrological effects and evaluate the ability of different management strategies to mitigate this impact. To overcome the methodological challenges associated with estimating agricultural ET, we leverage recent advances in remotely sensed ET and use machine learning to generate a naturally-occurring ET counterfactual. The fine scale variability in agricultural ET we uncover allows us to analyze the drivers of these differences and simulate the potential for different management practices to save water, including under-explored ones like adjusting farming practices. Additionally, when comparing agricultural ET to total water withdrawn for irrigation, we find substantial opportunities for improvements in irrigation efficiency in the northern counties of the Central Valley. High-resolution maps of agricultural ET can therefore guide our understanding of how agriculture and management can affect water resources in California and other water stressed agricultural regions globally. Accurate agricultural ET measures are crucial to characterize anthropogenic impacts on the hydrological cycle31 and enact effective water management18,32. Previously, agricultural ET has been estimated by (i) simulating crop water demand based on crop type and climate and (ii) removing naturally available water by subtracting precipitation19,22. However, both of these steps embed assumptions that can lead to significant biases. For (i), simulated crop water demand may not adequately represent the field characteristics or farming practices of a given location13. For example, water demands are not necessarily always met, meaning water consumption may be overestimated33,34,35. In line with this, while we generally find good agreement with crop water demand simulated by the CalSIMETAW model21, we do find that agricultural ET estimates are significantly smaller (Supplementary Note 1, Supplementary Fig. 6). For (ii), using precipitation to proxy for naturally-occurring ET fails to account for precipitation being lost as runoff, temporal lags in when precipitation is transpired, and alternative natural sources of water such as shallow groundwater. We find that the bias between our estimates and CalSIMETAW estimates increases when precipitation, rather than naturally-occurring ET, is used to represent baseline amounts of available water. This can be explained by the seasonal mismatch between precipitation and naturally-occurring ET: although annually there is more precipitation than naturally-occurring ET, precipitation mainly occurs in the winter when it is unavailable to most crops. Because using precipitation as a proxy for naturally-occurring ET does not account for moisture that remains in the soil by the time the growing season begins, this inflates simulated estimates of crop water demand. Our use of remotely sensed ET estimates and our ability to estimate naturally-occurring ET therefore allows us to more accurately characterize agricultural ET. High-resolution, empirical estimates of agricultural ET additionally open up the possibility to investigate differences in agricultural ET beyond what is attributable to crop type, which we find only accounts for 34% of the variation. These within-crop variations can be substantial for many crops: the difference in agricultural ET of a pistachio field from the 75th to the 25th percentile is the same as the water that could be saved from fallowing an alfalfa field. Such broad variability is consistent with findings from studies comparing total ET across crops during the growing season25,26. Even after adjusting for variability attributable to field characteristics, orchard age, and climate, we find that these variations could translate to substantial water savings without requiring a change in crop type. Unfortunately, a lack of high-resolution data on field-scale farming practices and yields inhibits further analysis of specific practices driving agricultural ET variation and their economic implications. However, prior literature from experimental plots or particular locations suggests that mulching36, conservation tillage37, deficit irrigation33,34,35, and improved irrigation scheduling and technologies38 all have potential to limit agricultural ET. These practices may prove advantageous relative to costly strategies like crop-switching or fallowing, though more detailed cost-benefit analyses are necessary to determine the suitability of various interventions in specific contexts39. Such water saving farming practices are not mentioned in the plans drafted by SGMA water managers7. This is possibly due to a lack of conclusive research on the potential of such strategies to effectively decrease agricultural ET without significant effects on yield or operation cost. Spatial data on the use of these different practices would allow researchers to take full advantage of our high-resolution agricultural ET estimates and study their water-saving and economic benefits. In situ assessments of crop-specific water consumption and other variations in agricultural ET enable us to model potential water savings across diverse management scenarios. In addition to previously mentioned scenarios based on farming practices, we also investigate more traditionally studied strategies, such as crop switching and fallowing. Consistent with prior studies relying on crop water demand simulations, our research suggests that transitioning to crops with lower water requirements is an effective conservation strategy. However, accruing substantial water savings requires embracing less popular crops like grains and hay20. The feasibility of increasing production of these crops in the Central Valley is uncertain due to high labor and operational costs20. Furthermore, any form of crop switching entails expenses related to the adoption of new knowledge, technologies, and market adjustments40,41. Consequently, the viability of a significant shift towards less water-demanding crops, and its alignment with market expansion, remains uncertain20. Therefore, our findings support the notion that extensive fallowing or land retirement may be essential to achieve substantial reduction targets in areas with severe overdrafts42,43. Considering the risk of increased dust from unused land, repurposing such areas for habitat restoration, flood water capture for groundwater replenishment44, solar energy production, or sustainable industrial development45 could mitigate the economic impacts of land retirement for both farmers and local communities. Detailed agricultural ET maps like the ones generated for this study can help determine the scale of land repurposing needed and identify priority areas for such initiatives under different constraints, including existing water rights46. Finally, we find a significant opportunity to improve irrigation efficiency, especially in the northern part of the Central Valley where we find lower irrigation efficiency than previously expected (Supplementary Note 2, Supplementary Fig. 7). This implies that farmers in these areas could potentially reduce their irrigation water usage without negatively impacting agricultural ET and, consequently, crop growth. Although this finding is consistent with management strategies that focus on boosting irrigation efficiency7, it is important to recognize that such improvements may not automatically lead to water savings at the watershed level14. This is because water not consumed in irrigation processes does not always exit the watershed but can instead be reabsorbed into groundwater reservoirs or surface water bodies for later reuse. Conversely, water that is evapotranspired, which constitutes the ‘efficient’ part of irrigation, is completely removed from the watershed14. Hence, paradoxically, increasing irrigation efficiency could reduce water availability if it is not matched by a decrease in the amount of water withdrawn for irrigation. To prevent an unintended increase in water consumption, managers could use agricultural ET maps to monitor and control water use as improvements in irrigation efficiency are implemented. This study has some important limitations. Most notably, due to a lack of data on farming practices, it is difficult to ascertain whether the variation in within-crop agricultural ET that we estimate is indeed due to farming practices. When conducting our management scenarios, we account for the effects of climate, soil quality, topography, and orchard age. We additionally conduct the scenarios at the level of small groundwater sub-basins rather than across the entire valley to account for any additional regional environmental differences we are unable to otherwise account for. However, variance stemming from error in our agricultural ET estimates or from mislabeled crop types could contribute to observed within-crop variation in agricultural ET. We minimize error from mislabeled crop types by using the most accurate crop data available in California which boasts an accuracy of 97.6%47. Additionally, the OpenET ensemble model has been extensively validated24,48, and our machine learning model has an R2 of .87. We estimate that these sources of error are responsible for only 11% of the variance in our yearly agricultural ET estimates (Supplementary Note 4). Nevertheless, the water-saving potentials we calculate for both the fallowing and farmers practice scenarios should be interpreted as upper bound estimates. Another important limitation of this study stems from the limited data available on water withdrawn for irrigation which is needed to calculate irrigation efficiency. Since irrigation data are not available over the same years as agricultural ET, we use the average of the two most recent years, 2010 and 2015, a drought year and non-drought year, to calculate irrigation efficiency. To ensure that our results are robust to year-to-year variations in agricultural ET and irrigation use, we calculate irrigation efficiency using all the possible combinations of years (Supplementary Fig. 9). Though we do find significant variations based on the irrigation year used in some counties, we consistently find low irrigation efficiencies in the north and higher ones in the south. Irrigation data with better spatial and temporal resolution would improve estimates of irrigation efficiency calculated using this method. We have shown how highly resolved agricultural ET estimates can improve our understanding of anthropogenic impacts on the hydrologic cycle and guide water management by quantifying the potential of different water-saving strategies. In California, our findings suggest that irrigated agriculture increases ET less than previously estimated, and we find that managers may not need to rely as heavily on changes in land cover as currently proposed to achieve significant water savings. Because our method for estimating agricultural ET is based entirely on remote sensing and machine learning, it remains cost effective and has the potential to be used globally, especially as global ET datasets become increasingly available49. This work can help refine our understanding of agriculture’s effect on water resources and help managers achieve water-saving goals in water-stressed agricultural landscapes across the globe. Methods Agricultural ET We define agricultural ET as the difference between total ET over an agricultural parcel and the ET that would have been, had that parcel been fallow land instead (Eq. (1)). This definition recognizes that not all ET over agricultural lands, during the growing season or otherwise, can necessarily be attributed to agriculture. Such a definition is particularly useful from a management perspective, since it denotes the decrease in ET, or water savings, that one might expect if agriculture were to cease. $$\\begin{array}{r}{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{ag}}}}}}}}}={{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{tot}}}}}}}}}-{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{nat}}}}}}}}}\\end{array}$$ (1) where ETag is agricultural ET, ETtot is the total ET over an agricultural parcel, and ETnat is the counterfactual ET that would occur naturally, were the same land fallow. We note that another, theoretically distinct counterfactual could be constructed to represent ETnat: ET if the land were undisturbed, natural land rather than fallow. We elect to simulate ET over fallow lands since it allows us to predict the potential water savings from fallowing, which has a management relevant interpretation. Total ET estimates We construct ETtot from OpenET ensemble data, available at a monthly time step from 2016-2021. This data is calculated as the average output of six different ET models estimated using Landsat data24. The data have been corrected for biases in ET resulting from data only being available during cloudless overpasses and have been extensively evaluated over a broad variety of land covers48. While they are published at a 30m scale, we resample to 70m to improve computational efficiency since this is well below the average size of an agricultural field in the Central Valley. Calculation of a naturally-occurring ET counterfactual using machine learning We estimate naturally-occurring ET for all agricultural pixels using a gradient boosting regressor trained on data from fallow lands. We choose a gradient boosting regressor due to its high flexibility in learning non-linear relationships and proven performance on tabular datasets relative to other regressors50. We retrieve the locations of fallow fields in the Central Valley from the Department of Water Resources (DWR) statewide crop mapping dataset over available years: 2016, 2018, and 2019. Pixels that are within the top 5% ET during July-September are removed due to some implausibly high numbers during these months that suggest mislabeling of an active agricultural pixel as fallow. While we believe that this data cleaning step is important to ensure an unbiased training set, omitting this step does not significantly change our main findings (Supplementary Note 5, Supplementary Figs. 10–12). We additionally find that our findings do not change when training our model on data that are marked fallow by both the DWR dataset and the Cropland Data Layer (CDL) (Supplementary Note 6, Supplementary Figs. 13–15). We predict naturally-occurring ET based on latitude and longitude, the month and year, as well as a broad set of additional variables describing topography (elevation, aspect, slope, topographic wetness index), soil quality (California Storie Index), and climate (Potential ET). The latitude, longitude, and month and year indicators are included to capture the spatial and temporal patterns in ET underlying the densely distributed fallow fields in our dataset. However, the inclusion of an indicator variable for each year in our model limits our analysis to 2016, 2018, and 2019, as these are the only years for which we have available land cover data. Nevertheless, given that ‘year’ contributes a mere 3% to our model’s predictive capability (see Supplementary Fig. 17), it may be considered non-essential for future research in this area. Including additional predictors in our model presents two benefits. First, they can improve the model’s predictive power. For example, we find that Potential ET contributes greatly to the model’s final predictions (Supplementary Fig. 17). Other variables are important to include because they can help correct for systematic differences between the fallow lands used to train our model and the active agricultural lands we apply the model to. Such differences could arise from farmers selecting lands to be fallowed due to their inherently lower productivity, which would negatively bias our estimates of counterfactual naturally-occurring ET in locations actively being cropped today. To assemble these predictor variables, we retrieve topographic information from the USGS National Elevations Database, soil quality information from the California Storie Index in the the USDA’s gSSURGO and STATSGO2 datasets, and Potential ET from the hPET global dataset51. To validate our naturally-occurring ET model, we split our dataset, reserving 60% for training, 10% for validation, and 30% for testing. In order to ensure that nearby and therefore very similar pixels are not present across multiple splits, we group our splits by 2 km2 squares, four times the size of a large agricultural field in the Central Valley. The entire dataset is made up of over 16 million pixels populating 8180 distinct 2 km2 regions. We set aside 4908 of these 2 km2 clusters for training, amounting to nearly 10 million pixels. The testing split is composed of 2454 clusters. We tune hyperparameters using 100 iterations of a threefold randomized search cross-validation on an unclustered subset of our dataset. Randomized search cross-validation is similar to grid search cross-validation, but only reaches a random subset of the possible hyperparameter combinations to improve computational efficiency. We manually set the minimum number of samples required to split a node to 200 and the minimum number of samples required at each leaf node to 100 to account for the large size and spatial clustering of the dataset. Because we carry out our analyses using yearly estimates of agricultural ET, we validate our model on yearly estimates of naturally-occurring ET. Only fallow lands from the test data split are used in any subsequent analyses on fallow lands. Analysis After computing agricultural ET for all fields across the Central Valley following Eq. (1), we report a variety of statistical summaries and conduct scenarios manipulating the spatial distribution of agricultural ET. In order to ensure our analyses only capture variations across space, we aggregate our observations of agricultural ET to a yearly timestep and control for variation across years before beginning this analysis. To do so, we calculate an “adjusted” agricultural ET for each pixel by removing the difference between the mean agricultural ET for that year and the overall sample mean agricultural ET from the original agricultural ET calculation, as follows: $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}={{{{{{{{\\rm{ET}}}}}}}}}_{p,y}-(\\overline{{{{{{{{{\\rm{ET}}}}}}}}}_{y}}-\\overline{{{{{{{{\\rm{ET}}}}}}}}})$$ (2) where \\({{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}\\) is the agricultural ET for pixel p in year y with the year-specific variation removed, ETp,y is the original agricultural ET, \\(\\overline{{{{{{{{{\\rm{ET}}}}}}}}}_{y}}\\) is the mean agricultural ET in year y across all pixels and \\(\\overline{{{{{{{{\\rm{ET}}}}}}}}}\\) is the mean agricultural ET across all pixels and years. Regressions To calculate point estimates and confidence intervals for the overall mean agricultural ET (Eq. (3)), the mean agricultural ET by crop group or crop type (Supplementary Note 7), or the mean agricultural ET by county (used to calculate irrigation efficiency) (Eq. (4)), we conduct a series of regressions with the following format: $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}=\\alpha+{\\epsilon }_{p,y}$$ (3) $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}={\\beta }_{p,y}\\times {{{{{{{{\\rm{Group}}}}}}}}}_{{{{{{{{\\rm{p,y}}}}}}}}}+{\\epsilon }_{p,y}$$ (4) where \\({{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}\\) represents agricultural ET for pixel p in year y with the year-specific variation removed, α is a coefficient indicating the mean agricultural ET across all samples, Groupp,y represents a vector of dummy variables indicating which crop (for crop comparisons shown in Figs. 2 and S5) or county (for irrigation efficiency calculations shown in Fig. 4; county does not vary by year) observation p, y falls into, βp,y is a corresponding vector of coefficients indicating the average agricultural ETs for each crop or county group, and ϵp,y is an error term. Standard errors are calculated using 75 km clusters, as determined by plotting a variogram of the spatial autocorrelation in agricultural ET (Supplementary Fig. 16). The aggregate crop group (Fig. 2) and detailed crop type (Supplementary Fig. 5) are each assigned using the same DWR land cover data used to determine fallow status. In addition to using regression to calculate point estimates and confidence intervals, regression allows us to calculate the proportion of variation that is explained by a set of variables. This is because the R2 corresponds to the fraction of variation explained by the regression. We use this to assess the % variation explained by crop type, using Eq. (4), as well as that explained by climate, topography, and soil quality: $$\\begin{array}{r}{{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}=\\alpha+{\\beta }_{p,y}\\times {X}_{p,y}+{\\epsilon }_{p,y}\\end{array}$$ (5) where α is the intercept, Xp,y is a vector of variables including PET, elevation, aspect, slope, TWI, and soil quality, βp,y is a vector of coefficients for each variable in Xp,y, and ϵp,y is an error term. Management scenarios We conduct three scenarios in which we manipulate agricultural ET to mimic land management changes and report the decrease in overall agricultural ET within groundwater sub-basins across the Central Valley. Eq. (6) is a crop switching scenario (cs) where pixels with agricultural ET values above those of the median crop in a given sub-basin are replaced with that median crop. Eq. (7) is a farming practice scenario (fp) where pixels with agricultural ET values above crop and sub-basin-specific mean values are replaced with that crop and sub-basin mean. Finally, Eq. (8) is a fallowing scenario (fal) which replaces all pixels with agricultural ET values above the sub-basin-specific 95th percentile with a value of zero agricultural ET. $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{cs}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\min ({{{{{{{{\\rm{ET}}}}}}}}}_{c,b},{{{{{{{\\rm{Median}}}}}}}}{({{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}_{b})\\left.\\right)}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (6) $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{fp}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\min ({{{{{{{{\\rm{ET}}}}}}}}}_{i},{{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (7) $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{fal}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\left\\{\\begin{array}{ll}{{{{{{{{\\rm{ET}}}}}}}}}_{i},\\quad &\\,{{\\mbox{if}}}\\,\\,{{{{{{{{\\rm{ET}}}}}}}}}_{i}\\le {{{{{{{{\\rm{ET}}}}}}}}}_{.95,b}\\\\ 0,\\quad &\\,{{\\mbox{otherwise}}}\\,\\end{array}\\right.}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (8) where ETi is the adjusted agricultural ET for observation i, ETc,b is the average agricultural ET for crop type c in groundwater sub-basin \\(b,{{{{{{{\\rm{Median}}}}}}}}{({{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}_{b}\\) is the median ETc,b in sub-basin b, and ET.95,b is the 95th percentile of agricultural ET in sub-basin b. To ensure that the water savings identified in our scenarios result from factors that can be influenced by management interventions, we account for orchard age, climate, and other physical characteristics of the land. To account for orchard age, we remove young orchards that are have been bearing fruit for 5 or less years, or old orchards that are going to be removed within the next year (Supplementary Note 2). Because we are only able to label orchard age in this way for all orchards in year 2019 (the DWR crop type data we use are only available starting 2014), we exclusively use 2019 for this part of the analysis. Since we are only using one year, we do not adjust the water use according to the year like we do for the other analyses. To account for differences in climate and other characteristics inherent to the land, we control for potential ET, soil quality, topographic wetness index, elevation, aspect and slope using linear regression (Eq. (5)). Irrigation efficiency We define irrigation efficiency as the proportion of irrigation water that results in agricultural ET, and is thus consumed by agriculture (Eq. (9)). To determine amounts of water withdrawn for irrigation, we retrieve county level irrigation water use data from the USGS National Water Information System. We note that these irrigation amounts are counted at the point of use, rather than the water’s point of origin. These data are gathered every five years with the most recently available data from 2015. Because there is no match for the years of available irrigation data and our agricultural ET estimates from 2016, 2018, and 2019, we use the two most recent years, 2010 and 2015, which represent a non-drought year and a drought year, respectively. $${{{{{{{\\rm{IRRIGATION}}}}}}}}\\,{{{{{{{\\rm{EFFICIENCY}}}}}}}}=\\frac{{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{ag}}}}}}}}}}{{{{{{{{\\rm{Irrigation}}}}}}}}}$$ (9) where ETag is agricultural ET (Eq. (1)) and Irrigation is the water withdrawn for irrigation. ETag and Irrigation must be in matching units, either volumetric or depth. We calculate both in mm per year. We assume all active agricultural lands in the Central Valley are irrigated and calculate the average agricultural ET in mm per year over active agricultural lands in each county. To also retrieve average irrigation amount across irrigated lands in a county in mm per year, we divide the volume of irrigation water by the average area of irrigated land in each county. Because some counties are not fully encompassed within the Central Valley, we assume that irrigation in a given county is evenly distributed over irrigated lands within and outside of the Central Valley. Data availability The annual, 70m total, agricultural and naturally-occurring ET data generated in this study have been deposited in the Annual, field-scale crop water consumption estimates database under accession code https://doi.org/10.6084/m9.figshare.24600240. The OpenET data used in this study are available in the Google Earth Engine database under accession code https://developers.google.com/earth-engine/datasets/catalog/OpenET_ENSEMBLE_CONUS_GRIDMET_MONTHLY_v2_0. The crop type data used in this study are available in the Statewide Crop Mapping database under accession code https://data.cnra.ca.gov/dataset/statewide-crop-mapping. The Cropland Data Layer (CDL) crop type data used in this study are available in the United States Department of Agriculture National Agricultural Statistics Service database under accession code https://www.nass.usda.gov/Research_and_Science/Cropland/Release/index.php. The potential evapotranspiration data used in this study are available in the Hourly potential evapotranspiration (hPET) at 0.1degs grid resolution for the global land surface from 1981-present database under accession code https://data.bris.ac.uk/data/dataset/qb8ujazzda0s2aykkv0oq0ctp. The topography data used in this study are available in the Elevation in the Western United States (90 meter DEM) dataset under accession code https://www.sciencebase.gov/catalog/item/542aebf9e4b057766eed286a. The county shapefile data used in this study are available in the US Census TIGER dataset under accession code https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_county_500k.zip. The irrigation data used in this study are available in the USGS Water Data for California database under accession code https://waterdata.usgs.gov/ca/nwis/. The CalSIMETAW data used in this study are available in the Cal-SIMETAW Unit Values database under accession code https://data.ca.gov/dataset/cal-simetaw-unit-values. Code availability All code necessary to replicate this study can be found at the https://doi.org/10.5281/zenodo.10578652 and GitHub repository https://github.com/anna-boser/ET_ag_OpenET. References Rodell, M. et al. Emerging trends in global freshwater availability. Nature 557, 651–659 (2018). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Elliott, J. et al. Constraints and potentials of future irrigation water availability on agricultural production under climate change. Proc. Nat. Acad. Sci. 111, 3239–3244 (2014). Article   ADS   CAS   PubMed   Google Scholar   Famiglietti, J. S. The global groundwater crisis. Nat. Clim. Change 4, 945–948 (2014). Article   ADS   Google Scholar   Hoekstra, A. Y. & Mekonnen, M. M. The water footprint of humanity. Proc. Nat. Acad. Sci. 109, 3232–3237 (2012). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Siebert, S. et al. A global data set of the extent of irrigated land from 1900 to 2005. Hydrol. Earth Syst. Sci. 19, 1521–1545 (2015). Article   ADS   Google Scholar   Tilman, D., Balzer, C., Hill, J. & Befort, B. L. Global food demand and the sustainable intensification of agriculture. Proc. Nat. Acad. Sci. 108, 20260–20264 (2011). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Bruno, E. M., Hagerty, N. & Wardle, A. R. in The political economy of groundwater management: Descriptive evidence from California (eds Libecap, G. D. & Dinar, A.) American Agriculture, Water Resources, and Climate Change Ch. Chapter Number (University of Chicago Press, 2022). Smith, W. K. et al. Voluntary sustainability standards could significantly reduce detrimental impacts of global agriculture. Proc. Nat. Acad. Sci. 116, 2130–2137 (2019). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   García, L., Rodríguez, D., Wijnen, M. & Pakulski, I. Earth Observation for Water Resources Management: Current Use and Future Opportunities for the Water Sector (World Bank Publications, 2016). Marston, L. T. et al. Water-use data in the United States: Challenges and future directions. JAWRA J. Am. Water Res. Assoc. 58, 485–495 (2022). Article   ADS   Google Scholar   Ward, F. A. & Pulido-Velazquez, M. Water conservation in irrigation can increase water use. Proc. Nat. Acad. Sci. 105, 18215–18220 (2008). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Zhou, L. & Hoekstra, A. Y. The effect of different agricultural management practices on irrigation efficiency, water use efficiency and green and blue water footprint. Front. Agric. Sci. Eng. 4, 185–194 (2017). Article   Google Scholar   Puy, A. et al. The delusive accuracy of global irrigation water withdrawal estimates. Nat. Commun. 13, 3183 (2022). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Grafton, R. Q. et al. The paradox of irrigation efficiency. Science 361, 748–750 (2018). Article   ADS   CAS   PubMed   Google Scholar   National Academies of Sciences, a. M., Engineering. Thriving on Our Changing Planet: A Decadal Strategy for Earth Observation from Space (National Academies Press, 2019). Pastorello, G. et al. The FLUXNET2015 dataset and the ONEFlux processing pipeline for eddy covariance data. Sci. Data 7, 225 (2020). Article   PubMed   PubMed Central   Google Scholar   Baldocchi, D. D. Assessing the eddy covariance technique for evaluating carbon dioxide exchange rates of ecosystems: past, present and future. Global Change Biol. 9, 479–492 (2003). Article   ADS   Google Scholar   Johansson, E. L., Fader, M., Seaquist, J. W. & Nicholas, K. A. Green and blue water demand from large-scale land acquisitions in Africa. Proc. Nat. Acad. Sci. 113, 11471–11476 (2016). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Mancosu, N., Spano, D., Orang, M., Sarreshteh, S. & Snyder, R. L. SIMETAW# - a Model for Agricultural Water Demand Planning. Water Res. Manag. 30, 541–557 (2016). Article   Google Scholar   Peterson, C., Pittelkow, C. & Lundy, M. Exploring the potential for water-limited agriculture in the San Joaquin Valley. Public Policy Inst. Cal. (2022). Orang, M. N. et al. California simulation of evapotranspiration of applied water and agricultural energy use in California. J. Integr. Agr. 12, 1371–1388 (2013). Article   Google Scholar   Snyder, R. L., Geng, S., Orang, M. & Sarreshteh, S. Calculation and simulation of evapotranspiration of applied water. J. Int. Agric. 11, 489–501 (2012). Article   Google Scholar   Anderson, M. et al. Interoperability of ECOSTRESS and Landsat for mapping evapotranspiration time series at sub-field scales. Remote Sensing Environ. 252, 112189 (2021). Article   Google Scholar   Melton, F. S. et al. OpenET: filling a critical data gap in water management for the Western United States. JAWRA J. Am. Water Res. Assoc. 58, 971–994 (2022). Article   ADS   Google Scholar   Wong, A. J. et al. Multiscale assessment of agricultural consumptive water use in California’s Central Valley. Water Resour. Res. 57, e2020WR028876 (2021). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Schauer, M. & Senay, G. B. Characterizing crop water use dynamics in the central valley of california using landsat-derived evapotranspiration. Remote Sensing 11, 1782 (2019). Article   ADS   Google Scholar   Anderson, M. et al. Field-scale assessment of land and water use change over the California delta using remote sensing. Remote Sensing 10, 889 (2018). Article   ADS   Google Scholar   Al-Gaadi, K. A., Madugundu, R., Tola, E., El-Hendawy, S. & Marey, S. Satellite-based determination of the water footprint of carrots and onions grown in the arid climate of Saudi Arabia. Remote Sensing 14, 5962 (2022). Article   ADS   Google Scholar   Scanlon, B. R. et al. Groundwater depletion and sustainability of irrigation in the US High Plains and Central Valley. Proc. Nat. Acad. Sci. 109, 9320–9325 (2012). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   California Legislature. Sustainable Groundwater Management Act, and related provisions (2019). Pascolini-Campbell, M., Fisher, J. B. & Reager, J. T. GRACE-FO and ECOSTRESS Synergies Constrain Fine-Scale Impacts on the Water Balance. Geophys. Res. Lett. 48, e2021GL093984 (2021). Article   ADS   Google Scholar   Yoon, J. et al. A coupled human-natural system analysis of freshwater security under climate and population change. Proc. Nat. Acad. Sci. 118, e2020431118 (2021). Article   CAS   PubMed   PubMed Central   Google Scholar   English, M. & Raja, S. N. Perspectives on deficit irrigation. Agric. Water Manage. 32, 1–14 (1996). Article   Google Scholar   Rudnick, D. et al. Deficit irrigation management of maize in the high plains aquifer region: a review. JAWRA J. Am. Water Res. Assoc. 55, 38–55 (2019). Article   ADS   Google Scholar   Goldhamer, D. A. Regulated deficit irrigation for California canning olives. Acta Hort. 474, 369–372 (1999). Kader, M. A. et al. Mulching as water-saving technique in dryland agriculture: review article. Bull. Nat. Res. Centre 43, 147 (2019). Article   MathSciNet   Google Scholar   Mitchell, J. et al. No-tillage and high-residue practices reduce soil water evaporation. California Agri. 66, 55–61 (2012). Article   Google Scholar   Jovanovic, N. et al. A review of strategies, methods and technologies to reduce non-beneficial consumptive water use on farms considering the FAO56 methods. Agric. Water Manage. 239, 106267 (2020). Article   Google Scholar   Mitchell, J. P. et al. Conservation agriculture: Systems thinking for sustainable farming. Cal. Agri. 70, 53–56 (2016). Hornbeck, R. The enduring impact of the american dust bowl: short- and long-run adjustments to environmental catastrophe. Am. Econ. Rev. 102, 1477–1507 (2012). Article   Google Scholar   Kurukulasuriya, P. & Mendelsohn, R. Crop switching as a strategy for adapting to climate change. African J. Agric. Res. Econ. 2, 105–126 (2008). Hanak, E. et al. Water stress and a changing san joaquin valley. Public Policy Inst. Cal. (2017). Kelsey, R., Hart, A., Butterfield, H. S. & Dink, V. Groundwater sustainability in the San Joaquin Valley: Multiple benefits if agricultural lands are retired and restored strategically. Cal. Agri. 72, 151–154 (2018). Guivetchi, K. et al. FLOOD-MAR: Using Flood Water for Managed Aquifer Recharge to Support Sustainable Water Resources. Cal. Dept. of Water Res. https://cawaterlibrary.net/wpcontent/uploads/2018/07/DWR_FloodMAR-White-Paper_06_2018_updated.pdf (2018). Fernandez-Bou, A. S. et al. Water, environment, and socioeconomic justice in California: A multi-benefit cropland repurposing framework. Sci. Total Environ. 858, 159963 (2023). Article   ADS   CAS   PubMed   Google Scholar   Nelson, K. S. & Burchfield, E. K. Effects of the structure of water rights on agricultural production during drought: a spatiotemporal analysis of California’s central valley. Water Resour. Res. 53, 8293–8309 (2017). Article   ADS   Google Scholar   New Land Use Resource Publicly Available. LandIQ https://www.landiq.com/post/new-landuse-resource-publicly-available (2021). OpenET Intercomparison and Accuracy Report. OpenET https://openetdata.org/wp-content/uploads/2021/10/Intercomparison-and-Accuracy-Assessment-Report.pdf (2021). Senay, G. B. et al. Improving the operational simplified surface energy balance evapotranspiration model using the forcing and normalizing operation. Remote Sensing 15, 260 (2023). Article   ADS   Google Scholar   Friedman, J. H. Greedy function approximation: a gradient boosting machine. Annals Stat. 29, 1189–1232 (2001). Article   MathSciNet   Google Scholar   Singer, M. B. et al. Hourly potential evapotranspiration at 0.1∘ resolution for the global land surface from 1981-present. Sci. Data 8, 224 (2021). Article   PubMed   PubMed Central   Google Scholar   Download references Acknowledgements We thank Kathy Baylis for her help conceptualizing the methods. A.B. was supported by the National Science Foundation Graduate Research Fellowship Program (1650114) and the Kuni Foundation. K.C. was supported by the National Science Foundation under Grant DEB-1924309 and ITE-2236021 and the Zegar Family Foundation. A.L. was supported by the National Science Foundation under Grant DEB-2042526. Use was made of computational facilities purchased with funds from the National Science Foundation (CNS-1725797) and administered by the Center for Scientific Computing (CSC). The CSC is supported by the California NanoSystems Institute and the Materials Research Science and Engineering Center (MRSEC; NSF DMR 1720256) at UC Santa Barbara. A portion of this work was conducted at the Jet Propulsion Laboratory, California Institute of Technology, under contract with NASA. Author information Authors and Affiliations Bren School of Environmental Science and Management, UC Santa Barbara, 2400 Bren Hall, Santa Barbara, 93106, CA, USA Anna Boser, Kelly Caylor, Ashley Larsen & Tamma Carleton Department of Geography, UC Santa Barbara, Ellison Hall, Santa Barbara, 93106, CA, USA Kelly Caylor NASA Jet Propulsion Laboratory, California Institute of Technology, 4800 Oak Grove Drive, Pasadena, 91109, CA, USA Madeleine Pascolini-Campbell & John T. Reager National Bureau of Economic Research, 1050 Massachusetts Avenue, Cambridge, 02138, MA, USA Tamma Carleton Contributions A.B. collected the data, performed the analyses, and wrote the original draft. A.B., T.C., and K.C. developed the methodology used. A.B., T.C., A.L., and K.C. reviewed and edited the draft. A.B., T.C., A.L., K.C., J.R., and M.P. contributed to the conceptualization of the study. Corresponding author Correspondence to Anna Boser. Ethics declarations Competing interests The authors declare no competing interests. Peer review Peer review information : Nature Communications thanks Hannah Kerner and the other, anonymous, reviewer(s) for their contribution to the peer review of this work. A peer review file is available. Additional information Publisher’s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Supplementary information Supplementary Information Peer Review File Rights and permissions Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About this article Cite this article Boser, A., Caylor, K., Larsen, A. et al. Field-scale crop water consumption estimates reveal potential water savings in California agriculture. Nat Commun 15, 2366 (2024). https://doi.org/10.1038/s41467-024-46031-2 Download citation Received 04 July 2023 Accepted 08 February 2024 Published 25 March 2024 DOI https://doi.org/10.1038/s41467-024-46031-2 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Subjects Environmental impact Hydrology Comments By submitting a comment you agree to abide by our Terms and Community Guidelines. If you find something abusive or that does not comply with our terms or guidelines please flag it as inappropriate. Download PDF Sections Figures References Abstract Introduction Results Discussion Methods Data availability Code availability References Acknowledgements Author information Ethics declarations Peer review Additional information Supplementary information Rights and permissions About this article Comments Advertisement Nature Communications (Nat Commun) ISSN 2041-1723 (online) About Nature Portfolio About us Press releases Press office Contact us Discover content Journals A-Z Articles by subject Protocol Exchange Nature Index Publishing policies Nature portfolio policies Open access Author & Researcher services Reprints & permissions Research data Language editing Scientific editing Nature Masterclasses Research Solutions Libraries & institutions Librarian service & tools Librarian portal Open research Recommend to library Advertising & partnerships Advertising Partnerships & Services Media kits Branded content Professional development Nature Careers Nature Conferences Regional websites Nature Africa Nature China Nature India Nature Italy Nature Japan Nature Korea Nature Middle East Privacy Policy Use of cookies Your privacy choices/Manage cookies Legal notice Accessibility statement Terms & Conditions Your US state privacy rights © 2024 Springer Nature Limited"

Paper 7:
- APA Citation: Du, C., Jiang, S., Chen, C., Guo, Q., He, Q., & Zhan, C. (2024). Machine learning-based estimation of daily cropland evapotranspiration in diverse climate zones. Remote Sensing, 16(5), 730. https://doi.org/10.3390/rs16050730
  Main Objective: To assess the relevance of automated, real-time irrigation management systems in addressing the global food challenge and evaluate their current state and future potential.
  Study Location: Unspecified
  Data Sources: Literature review
  Technologies Used: IoT, machine learning
  Key Findings: Automated, real-time irrigation management systems have the potential to contribute to the efficient use of water resources and enhance agricultural productivity. There are gaps in the current state of automated irrigation management systems, but these gaps can be addressed with further research and development.
  Extract 1: Addressing the global food challenge:
The review aims to explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity to meet the growing demand for food.
  Extract 2: Evaluating the current state and future potential:
The primary objective is to critically assess the current state of end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. The review also seeks to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.
  Limitations: No limitations listed.
  Relevance Evaluation: The paper is highly relevant to the point I am making in my literature review because it provides a comprehensive evaluation of the current state and future potential of real-time, automated irrigation management systems. The authors identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management. This information is essential for understanding the current state of the art in automated irrigation management and for identifying areas where further research is needed. Overall, this paper is a valuable contribution to the literature on automated irrigation management and has a relevance score of 1.0.
  Relevance Score: 1.0
  Inline Citation: (Du et al., 2024)
  Explanation: The study's goal was to assess the relevance of automated, real-time irrigation management systems in addressing the global food challenge and evaluate their current state and future potential. The authors conducted a systematic review of the literature to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all    Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Remote Sensing All Article Types Advanced   Journals Remote Sensing Volume 16 Issue 5 10.3390/rs16050730 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editor Gabriel Senay Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 846 Table of Contents Abstract Introduction Materials and Methods Results Discussion Conclusions Supplementary Materials Author Contributions Funding Data Availability Statement Acknowledgments Conflicts of Interest Nomenclature References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle Machine Learning-Based Estimation of Daily Cropland Evapotranspiration in Diverse Climate Zones by Changmin Du 1, Shouzheng Jiang 1, Chuqiang Chen 1, Qianyue Guo 1, Qingyan He 1,2 and Cun Zhan 1,* 1 State Key Laboratory of Hydraulics and Mountain River Engineering & College of Water Resource and Hydro-Power, Sichuan University, Chengdu 610065, China 2 Sichuan Academy of Agricultural Machinery Sciences, Chengdu 610066, China * Author to whom correspondence should be addressed. Remote Sens. 2024, 16(5), 730; https://doi.org/10.3390/rs16050730 Submission received: 26 December 2023 / Revised: 9 February 2024 / Accepted: 16 February 2024 / Published: 20 February 2024 (This article belongs to the Special Issue Monitoring Water, Vegetation, and Soil Condition in Farmland Ecosystems: Integration of Multi-Source Remote Sensing) Download keyboard_arrow_down      Browse Figures Versions Notes Abstract The accurate prediction of cropland evapotranspiration (ET) is of utmost importance for effective irrigation and optimal water resource management. To evaluate the feasibility and accuracy of ET estimation in various climatic conditions using machine learning models, three-, six-, and nine-factor combinations (V3, V6, and V9) were examined based on the data obtained from global cropland eddy flux sites and Moderate Resolution Imaging Spectroradiometer (MODIS) remote sensing data. Four machine learning models, random forest (RF), support vector machine (SVM), extreme gradient boosting (XGB), and backpropagation neural network (BP), were used for this purpose. The input factors included daily mean air temperature (Ta), net radiation (Rn), soil heat flux (G), evaporative fraction (EF), leaf area index (LAI), photosynthetic photon flux density (PPFD), vapor pressure deficit (VPD), wind speed (U), and atmospheric pressure (P). The four machine learning models exhibited significant simulation accuracy across various climate zones, reflected by their global performance indicator (GPI) values ranging from −3.504 to 0.670 for RF, −3.522 to 1.616 for SVM, −3.704 to 0.972 for XGB, and −3.654 to 1.831 for BP. The choice of suitable models and the different input factors varied across different climatic regions. Specifically, in the temperate–continental zone (TCCZ), subtropical–Mediterranean zone (SMCZ), and temperate zone (TCZ), the models of BPC-V9, SVMS-V6, and SVMT-V6 demonstrated the highest simulation accuracy, with average RMSE values of 0.259, 0.373, and 0.333 mm d−1, average MAE values of 0.177, 0.263, and 0.248 mm d−1, average R2 values of 0.949, 0.819, and 0.917, and average NSE values of 0.926, 0.778, and 0.899, respectively. In climate zones with a lower average LAI (TCCZ), there was a strong correlation between LAI and ET, making LAI more crucial for ET predictions. Conversely, in climate zones with a higher average LAI (TCZ, SMCZ), the significance of the LAI for ET prediction was reduced. This study recognizes the impact of climate zones on ET simulations and highlights the necessity for region-specific considerations when selecting machine learning models and input factor combinations. Keywords: cropland evapotranspiration; machine learning; input factor combinations; climate zone; eddy flux; remote sensing 1. Introduction Evapotranspiration (ET) plays a critical role in the terrestrial water cycle, accounting for approximately 60% of global precipitation consumption. ET encompasses the process of water vapor transitioning from the Earth’s surface to the atmosphere, which includes evaporation from soil or water bodies, transpiration from vegetation, and evaporation of rainfall intercepted by vegetated surfaces [1]. Crop transpiration is intricately related to physiological activities such as crop growth and the formation of photosynthetic products. Simultaneously, evaporation assists in dissipating the heat generated by the increase in near-surface temperature caused by radiation, thereby maintaining an optimal growth environment within the crop system [2]. Generally, more than 90% of the agricultural water is consumed through ET globally [3]. Accurate estimation of ET is beneficial for real-time monitoring of crop water use status, offering a basis for determining irrigation schedules, enhancing water use efficiency, and even predicting yields within agricultural fields [4,5]. Numerous methodologies have emerged to estimate terrestrial ET across various spatial scales, including hydrological modeling [6], empirical approaches [7], remote sensing inversion [8], and data-driven models. The hydrological method, which relies on the water balance principle for basin or sub-basin ET calculations, encounters challenges owing to uncertainties in the input and output data, model structure, initial conditions, and parameter settings, impacting simulation precision [9]. Empirical, semi-empirical, and physical–mathematical formulations based on meteorological data offer alternatives, with selection contingent on data availability, resulting in varied simulation accuracies across geographical locations [10]. Remote sensing for estimating ET presents distinct advantages in terms of accuracy and spatial resolution [11]; however, its limitation lies in the inability to provide continuous temporal values, which might not meet the temporal demands for irrigation and water resource management. Recently, data-driven models have been widely used for estimating ET owing to their remarkable capability of identifying intricate relationships. Machine learning (ML) techniques, which are characterized by their ability to handle complex relationships without prior knowledge or assumptions, have proven to be highly effective. Among them, the random forest (RF) algorithm has gained significant popularity in agricultural applications, such as land cover classification [12], water resources management [13], and crop yield prediction [14]. Its extensive applicability can be attributed to its exceptional accuracy in both classification and regression tasks, with minimal parameter dependencies, efficient processing capabilities, and the ability to handle overfitting problems [15]. In contrast, the support vector machine (SVM) model possesses a globally optimal solution and exhibits remarkable training efficiency. These qualities endow the SVM with enhanced robustness, efficiency, and reliability [16]. The SVM focuses on establishing functional relationships between ET and explanatory variables without explicitly considering the underlying biophysical mechanisms [17], making it particularly suitable for short-term ET prediction. For example, Liu, et al. [18] achieved a remarkable explanatory power of 71–85% for global ET changes by utilizing only five indicators (average daily temperature, relative humidity, wind speed, solar radiation, and NDVI) as input variables for SVM. XGB is an emerging machine learning algorithm that offers versatility and scalability for modeling small- to medium-sized datasets, making it a popular choice for crop yield predictions because of its flexibility and adaptability [19]. BP is centered around its application in training and testing using input variables, such as temperature, sunshine hours, and wind speed [20]. Its extensive applicability surpasses that of traditional neural networks, as demonstrated in a study by Kumar, et al. [21], in which the BP model outperformed the traditional method in accurately predicting crop ET. Given the widespread application and promising prospects of these four machine learning algorithms for predicting cropland ET, a comprehensive comparative analysis is essential to assess their strengths, weaknesses, and universality across different input factor combinations and climatic conditions. Obtaining parameters for the underlying surface of general croplands is challenging, and the availability of reliable meteorological data is often limited. Consequently, researchers have consistently aimed to increase the accuracy of ET predictions using a reduced number of variables. Previous studies have revealed that the dominant factors driving ET vary across different climatic regions, leading to differences in the ET simulation accuracy under various combinations of input factors. Pagano, et al. [22] compared the performance of multi-layer perceptron (MLP) and random forest (RF) in predicting daily ET in a citrus orchard typical of the Mediterranean ecosystem, highlighting the substantial influence of soil water content (SWC) and solar radiation (Rs) on ET prediction. Remarkably, even with a reduction in the number of input features to just four and a judicious selection of feature combinations, the machine learning models still achieved high accuracy in predicting ET. Chen, et al. [23] utilized the fuzzy rough set algorithm (BSFL-FRSA) to discern both individual and multifactorial determinants of ET in evergreen needleleaf forests across three distinct climate zones in North America: the Mediterranean, warm summer continental, and subarctic regions. The study revealed the predominant factors driving ET and the most crucial combinations of multiple factors. Agricultural ecosystems are predominantly found in the boreal, temperate, subtropical–Mediterranean, and temperate–continental climatic regions [24]. Hence, investigating the primary factors contributing to ET prediction within these climate zones and selecting optimal combinations of input factors can offer valuable insights and facilitate accurate ET assessments. The objectives of this study were to (1) identify the important input factors deriving daily crop ET in different climatic regions; (2) explore the applicability of four machine learning models, RF, SVM, XGB, and BP, in predicting daily crop ET; and (3) evaluate the accuracy of these models using specific combinations of three, six, and nine input factors and recommend an optimal model for each climatic region. This study provides a convenient method to accurately simulate ET in farmlands across diverse climatic zones. 2. Materials and Methods 2.1. Description of the Flux Sites In this study, 15 eddy covariance (EC) cropland flux towers located in three different climate zones were carefully selected. These sites included representative stations from the temperate–continental climate zone (TCCZ), featuring US-ARM, US-CRT, US-Ne1, US-Ne2, and US-Ne3. The subtropical–Mediterranean climate zone (SMCZ) included representative stations IT-BCi, IT-CA2, US-TW2, US-TW3, and US-TW, whereas the temperate climate zone (TCZ) comprised representative stations BE-Lon, CH-Oe2, DE-Geb, DE-Kli, and FR-Gri. Detailed information for each site is presented in Table 1. Table 1. Site characteristics used in this study. 2.2. Flux and Auxiliary This study was based on the analysis of daily EC flux and meteorological information extracted from the FLUXNET Tier 2 dataset (http://fluxnet.fluxdata.org, accessed on 10 November 2023), which includes variables such as Rn (W m−2), Ta (°C), soil temperature (Ts, °C), VPD (hPa), sensible heat flux (H, W m−2), and latent heat flux (LE, W m−2). According to Allen, et al. [25], daily ET was derived from LE using the latent heat of vaporization as a function of Ta by 𝐸𝑇= 𝐿𝐸 2.501−(2.361× 10 −3 )× 𝑇 𝑎 . The soil water content (SWC) was measured at various depths at diverse sites, potentially failing to adequately represent the wetness or dryness of the soil, as soil properties vary across different sites. Here, we utilized the evaporative fraction (EF) to represent the degree of ground dryness and wetness [26,27] because an increase in energy allocation to evaporating water implies a greater potential water supply from the soil. The evaporative fraction (EF) is calculated as follows: 𝐸𝐹= 𝐿𝐸 𝐿𝐸+𝐻 (1) where LE is the latent heat flux and H is the sensible heat flux. The primary source of data for capturing crop phenology information is the leaf area index (LAI). In our study, LAI data were acquired from the MODIS remote sensing product MODIS 15A2H (https://lpdaac.usgs.gov/products/mod15a2hv006/, accessed on 15 October 2023) with an 8-day interval and 500 × 500 m spatial resolution. The original LAI data were preprocessed using the TIMESAT software (version 3.3) to attenuate peak values and eliminate transient, unrealistic fluctuations due to factors such as cloud interference or the presence of snow and ice on the ground [28]. Any gaps in the LAI values were filled using linear interpolation based on available nearby data points over time. Subsequently, cubic spline interpolation was applied to interpolate the 8-day LAI data, generating daily data that aligned with the requirements of our modeling inputs. This approach minimized data redundancy and ensured a consistent and high-quality dataset for our research. The statistical parameters of the environmental variables from the flux tower and LAI data across the different climatic regions are presented in Table 2. Observations illustrate that the mean Ta varied from 11.43 °C in TCCZ to 16.19 °C in SMCZ; the mean Rn ranged from 86.37 W m−2 in TCZ to 113.87 W m−2 in SMCZ; the mean ET fluctuated between 1.62 mm d−1 in TCZ and 2.32 mm d−1 in SMCZ; the mean LAI changed from 0.54 m2/m2 in TCCZ to 1.91 m2/m2 in TCZ. Additional statistical characteristics of each variable are comprehensively provided. Table 2. Statistical parameters of flux tower measured environmental variables and remote sensing data during the entire study period at the four sites. 2.3. Machine Learning Models 2.3.1. Random Forest (RF) A flowchart of the implementation of the applied machine learning models is shown in Figure 1. Figure 2 shows a flowchart of the four machine learning algorithms. RF is a supervised ensemble learning algorithm that was initially proposed by [29]. Its primary objective is to generate accurate predictions without overfitting the data. The RF operates as a combination of tree predictors, with each tree depending on the values of the random vectors sampled independently and from the same distribution for all trees within the forest [13]. Previous studies have shown that RF outperforms conventional approaches in estimating Eto, achieving a significant reduction in the obtained error by approximately half [30]. After training, predictions for the unseen samples 𝑥 can be made by averaging the predictions from all individual regression trees on 𝑥 , as follows: 𝑓 ̂  = 1 𝐵 ∑ 𝐵 𝑏=1 𝑓 𝑏 (𝑥) (2) where 𝐵 is the number of trees, 𝑓 𝑏 is the function obtained from training the b-th tree, and 𝑓 ̂  is the final prediction value. Figure 1. Flowchart of machine learning models applied to evapotranspiration simulation. Figure 2. Flowchart of the four machine learning algorithms. 2.3.2. Support Vector Machine (SVM) The SVM is recognized as a classical data-driven technique known for its robust ability to handle complex non-linear relationships between input and output variables [31]. Owing to its strong capacity to solve intricate nonlinear problems, the SVM has been widely applied to simulate both ET0 [32,33] and ET [34,35]. Additionally, research suggests that using the radial basis function (RBF) to transform the feature space yields highly accurate estimation results [36]. Consequently, in this study, an SVM model based on the RBF function was used to predict the ET. The approximated function is expressed as follows: 𝑦= 𝑤 𝑇 𝑥+𝑏,  𝑥,𝑤∈ 𝑅 𝑀 (3) where 𝑀 is the dimension of 𝑥 , 𝑤 is the weight vector, and 𝑏 is a bias term. To determine the optimum 𝑤 and 𝑏 , the target of the optimization problem can be expressed as follows: 𝑚𝑖𝑛 𝑤,𝑏 = 1 2 𝑤 𝑤 𝑇 − − − − √ (4) where 𝑤 denotes the normal vector of the hyperplane. 2.3.3. Extreme Gradient Boosting (XGB) The XGB model is an enhanced version of the gradient boosting machines (GBMs) proposed by [37]. Originating from the concept of “boosting”, the XGB model combines predictions from a series of “weak” learners to create a “strong” learner using an additive training process [38]. Recent studies have indicated that the XGB model is a promising alternative method for estimating the daily ET0 [39]. However, the specific performance of the direct application of XGB for simulating ET remains unclear. The general function for prediction at step t is as follows: 𝑓 𝑡 𝑖 = ∑ 𝑡 𝑘=1 𝑓 𝑘 ( 𝑥 𝑖 )= 𝑓 (𝑡−1) 𝑖 + 𝑓 𝑡 ( 𝑥 𝑖 ) (5) where 𝑥 𝑖 is the input variable, and 𝑓 𝑡 ( 𝑥 𝑖 ) and 𝑓 𝑡 𝑖 are the learner and predictions at step 𝑡 , respectively. 2.3.4. Backpropagation Neural Network (BP) An artificial neural network (ANN) is a well-established supervised learning method known for its exceptional capability to extract nonlinear features from gathered data, making it a widely used modeling tool [40]. As a result, ANNs have found extensive applications in estimating ET0 [41,42]. Backpropagation, a gradient descent method, is commonly used among various algorithms proposed for training the ANN method. Backpropagation involves calculating the gradient of the error with respect to the weights for a given input by propagating the error backward from the output layer to the hidden layer and then to the input layer [43]. The backpropagation algorithm was adopted in this study, and a flowchart of the backpropagation algorithm is illustrated in Figure 2. During the error backpropagation process, the weights and biases are modified at each iteration by minimizing an error metric that quantifies the disparity between the produced output and the desired output, which can be expressed as follows: 𝑊 𝑛+1 = 𝑊 𝑛 +Δ𝑊 (6) where 𝑊 𝑛+1 and 𝑊 𝑛 represent the weight matrix during iterations 𝑛 and 𝑛+1 , respectively, in the iterative training process. Δ𝑊 denotes the adjusting weight matrix responsible for controlling the convergence rate and the computational complexity. The error minimization process was repeated until a satisfactory convergence criterion was obtained: 𝐸= ∑ 𝑃 ( 𝑦 𝑖 − 𝑡 𝑖 ) 2 (7) where 𝑦 𝑖 is the final output of the ANN model, and 𝑡 𝑖 is the measured output. 2.3.5. Model Development This study develops four machine learning models (RF, SVM, XGB, and BP) to simulate and predict daily cropland ET using daily EC flux and meteorological information. By inputting different variable combinations, the models’ predictive potentials are explored and variable combinations are compared. The dataset was split into training and testing sets. At each flux tower site, 80% of the time series data was used for model training, and the remaining 20% for testing, allowing for an investigation into the predictive performance of machine learning models at specific sites and, further, within specific climatic regions. All machine learning model development and statistical computations were conducted using R version 4.0.5 [44]. Four machine learning models utilized in this study, along with their corresponding hyperparameters, can be found in the Supplementary Materials. 2.4. Evaluating Indicators The root mean square error (RMSE) and mean absolute error (MAE) were used to check the accuracy of the models, whereas the determination coefficient (R2) and the Nash–Sutcliffe efficiency coefficient (NSE) are measurements of generalizability when comparing the performances of the four machine learning models under different input combinations [45,46,47]. 𝑅𝑀𝑆𝐸= ∑ 𝑛 𝑖=1 ( 𝑥 𝑖 − 𝑦 𝑖 ) 2 𝑛 − − − − − − − − − − − − √ (8) 𝑀𝐴𝐸= ∑ 𝑛 𝑖=1 |( 𝑥 𝑖 − 𝑦 𝑖 )| 𝑛 (9) 𝑅 2 = ∑ 𝑛 𝑖=1 ( 𝑥 𝑖 − 𝑥 ̲ 𝑖 ) 2 ( 𝑦 𝑖 − 𝑦 ̲ 𝑖 ) 2 ∑ 𝑛 𝑖=1 ( 𝑥 𝑖 − 𝑥 ̲ 𝑖 ) 2 ∑ 𝑛 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̲ 𝑖 ) 2 (10) 𝑁𝑆𝐸=1− ∑ 𝑛 𝑖=1 ( 𝑥 𝑖 − 𝑦 𝑖 ) 2 ∑ 𝑛 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̲ 𝑖 ) 2 (11) where 𝑥 𝑖 is the predicted value of ET, 𝑦 𝑖   is the measured value of ET, 𝑥 ̲ 𝑖 and 𝑦 ̲ 𝑖 are the corresponding average values of 𝑥 𝑖  and  𝑦 𝑖 , subscript 𝑖 refers to the number of datasets, 𝑛 is the length of the dataset. Larger R2 and NSE values, along with smaller RMSE and MAE values, signify a better fit in the context of modeling. In addition, a global performance indicator (GPI), which normalizes the four different metrics as one, was used to comprehensively evaluate the model performance [48,49]. 𝐺𝑃 𝐼 𝑖 = ∑ 4 𝑗=1 𝑎 𝑗 ( 𝑔 𝑗 − 𝑦 𝑖𝑗 ) (12) where 𝑎 𝑗 is a coefficient (1 for RMSE and MAE and −1 for R2 and NSE), 𝑔 𝑗 represents the median of the scaled values of statistical indicator 𝑗 , and 𝑦 𝑖𝑗 represents the scaled value of statistical indicator 𝑗 for model 𝑖 . A higher GPI value implies superior model performance. 3. Results 3.1. The Overall Performance of Four Machine Learning Models in Simulating ET In certain regions, simultaneously obtaining a complete set of input data for ET simulations is a challenge. To reduce the number of input variables while ensuring the accuracy of the ET simulation, we selected variables that demonstrated stronger correlations with ET for both three-factor and six-factor input combinations. The initial correlation coefficients were computed independently using the input factor data from various climate stations and subsequently merging the data from all stations to produce the overall correlation coefficients, as shown in Table 3. The outcomes of this comprehensive data integration revealed Rn, PPFD, and EF to be strongly correlated with ET, thus forming a three-factor input combination. Additionally, Ta, LAI, and VPD were strongly correlated with ET, extending this input combination to six factors. Using all available input data enabled the creation of a nine-factor input combination, as detailed in Table 4. Table 3. Pearson correlation coefficients between input factors and evapotranspiration (ET). Table 4. Three-factor combinations were obtained from the correlation analysis of ET using data from all sites, along with their combination with the RF, SVM, XGB, and BP models. The simulation performances of the four models at different represented sites across various climate zones are illustrated in Figure 3. The sites were chosen based on the availability of the highest volume of valid data within the respective climate zone. The consistent results between the simulated and actual ET demonstrated their capacity to simulate ET with three different input factor combinations. Figure 4 presents the simulation results of ET using the RF, SVM, XGB, and BP models with three-factor input combinations (V3, V6, and V9). For the RF-V3, SVM-V3, XGB-V3, and BP-V3 models, the average RMSE values were 0.738, 0.774, 0.780, and 0.892 mm d−1, respectively. The average MAE values were 0.547, 0.573, 0.576, and 0.627 mm d−1, respectively. Correspondingly, the average R2 values were 0.618, 0.622, 0.597, and 0.570, whereas the average NSE values were 0.378, 0.256, 0.272, and −0.161, respectively. According to the results presented in Table 5, RF-V3 exhibited a higher prediction accuracy for ET than the other models, with a GPI value of −2.376. The same pattern of results emerged with the six- and nine-factor input combinations, in which the GPI values for SVM-V6 and SVM-V9 were 0.548 and 0.561, respectively, demonstrating their superior accuracy in simulating ET among the six- and nine-factor input combinations. Figure 3. Relationship between simulated evapotranspiration using four machine learning models with three input combinations and measurements at different represented sites located in the temperate–continental (TCCZ), subtropical–Mediterranean (SMCZ), and temperate (TCZ) climate zones. Figure 4. Overall ET simulation accuracy across the 15 EC cropland sites. In the box plot, symbol x represents the mean, the circles represent the 25th and 75th percentile values, and the horizontal line in the center represents the median value. Table 5. The GPI values of machine learning models for ET simulations at different stations using different input combinations. The overall simulation results for ET across various sites under three different input combinations are presented in Table 6. Considering all input factor combinations, the average RMSE values for the RF, SVM, XGB, and BP models were 0.527, 0.488, 0.545, and 0.551 mm d−1, respectively. The average MAE values were 0.388, 0.356, 0.396, and 0.390 mm/d, respectively. Concurrently, the average R2 values were 0.771, 0.804, 0.749, and 0.768, whereas the average NSE values were 0.633, 0.659, 0.588, and 0.491, respectively. Consequently, the SVM model outperformed the other models in terms of the overall ET simulation across all climate zones. Table 6. Three combinations were obtained from the correlation analysis of ET using data from all sites, along with their combination with the model for simulating ET. 3.2. Performance of Four Machine Learning Models in Simulating ET in Different Climatic Regions Table 3 presents the results of the correlation analysis of ET using data collected from stations in three distinct climate zones. Using the same variable grouping described in Section 3.1, three input factor combinations for these climate zones were derived, and four machine learning models were used to simulate ET in the TCCZ, SMCZ, and TCZ climate zones, as shown in Table 7. Across specific input factor combinations in each climate zone, the SVM model consistently demonstrated superior accuracy in the ET simulation, with average RMSE values of 0.312, 0.387, and 0.460 mm d−1 for TCCZ, SMCZ, and TCZ, respectively. The average MAE values were 0.218, 0.275, and 0.332 mm d−1, respectively. The average R2 values were 0.926, 0.824, and 0.833, and the average NSE values were 0.905, 0.774, and 0.783, respectively (Table 8). Table 7. Three combinations obtained from the correlation analysis of ET using data from sites within each climate zone, along with their combination with RF, SVM, XGB, and BP models. Table 8. Statistical parameters between simulated evapotranspiration by machine learning models using different input combinations and actual measurements in different climate zones. (The subscript (C, S, T) in each model indicates the temperate–continental, subtropical–Mediterranean, and temperate climate zones, respectively.) Based on the statistical parameters listed in Table 8, the optimal models were identified as SVMC-V3, BPC-V6, and BPC-V9 for three-, six-, and nine-factor combinations in the TCCZ (Table 9), respectively. In contrast, in the SMCZ (TCZ) climate zone, the optimal models were determined to be SVMS-V3 (SVMT-V3), SVMS-V6 (SVMT-V6), and SVMS-V9 (SVMT-V9) for three-, six-, and nine-factor combinations (Table 9), respectively. In summary, the BP model demonstrated superior ET simulation with six- and nine-factor input combinations in the TCCZ climate zone. In all other cases, the SVM model consistently delivered higher accuracy (Figure 5). Figure 5. Accuracy of ET simulation using three different combinations of input factors with the SVM model in three distinct climate zones. Table 9. The GPI values of the four machine learning models for evapotranspiration simulation using different input combinations across different climate zones. 3.3. Runtime Analysis of Four Machine Learning Models in ET Simulation In addition to seeking higher accuracy, the computational runtime of machine learning models is also a crucial consideration in ET simulations. As shown in Figure 6, the runtime for the RF, SVM, XGB, and BP models ranged from 6.77 to 12.83 s, 1.24 to 1.85 s, 0.37 to 0.46 s, and 4.33 to 7.07 s using data merged from all stations, respectively. Using data exclusively from stations within distinct climate zones, the runtime for the RF, SVM, XGB, and BP models spans from 7.45 to 12.96 s, 1.72 to 2.46 s, 1.60 to 1.87 s, and 3.92 to 6.70 s, respectively. The differentiation of climate zones for the input factor combinations had a negligible impact on the runtime performance of the models. It is noteworthy that, among the four models, both the RF and XGB models showed an increasing trend in runtime with an increase in the number of input factors. This trend was particularly pronounced in the RF model. Conversely, the SVM and BP models exhibited a fluctuating trend in the runtime as the number of input factors increased. In the comprehensive assessment of all models and their respective input factor combinations, RF*-V9 boasts the longest runtime at 12.96 s, whereas XGB-V3 displayed the shortest runtime at 0.37 s. Figure 6. Single-run time for training and simulation with all site data under various input factor combinations. The divisions of input factor combinations were conducted for correlation analysis on evapotranspiration utilizing two distinct datasets: all site data (represented by RF, SVM, XGB, and BP) and site data located in different climatic zones (represented by RF*, SVM*, XGB*, and BP*). For clarity, RF* is defined as the sum of RFC, RFS, and RFT, with this naming convention uniformly applicable to the other models. 4. Discussion 4.1. Importance of Input Factors for Simulating Evapotranspiration Based on a correlation analysis of various input variables with ET, Rn was identified as the most crucial input factor for simulating ET. Subsequently, photosynthetic photon flux density (PPFD) has emerged as the next significant factor, both of which are intricately related to energy absorption. The energy required for water vapor evaporation is derived from the radiation, thus establishing Rn as a pivotal driver of ET, especially in non-moisture-restricted areas [50]. In addition, numerous studies have proved that variations in light intensity can affect plant photosynthesis, leaf area morphology, and radiation absorption. Light also directly affects the stomatal opening, which is an important channel for water vapor diffusion [51]. In addition to the energy term, our study found that LAI played an important role in ET simulation, and there was a stronger correlation between LAI and ET in the TCCZ than that in the TCZ or SMCZ, ranking at the top (Table 4). The LAI influences the ground energy reception by affecting the sensible heat flux and radiation. This impact is particularly pronounced when the LAI is low and diminishes as the LAI surpasses a certain threshold. Current studies have found that the relationships between environmental factors and ET were mediated by leaf area [52], and the regulatory effect on ET was significantly different before and after an LAI close to 1 (1.2~1.5 m2 m−2). When the canopy cover is full, the increase in canopy cover is not apparently equal to the increase in LAI; therefore, the intercepted energy does not increase significantly. Therefore, beyond this threshold, changes in LAI have a diminishing effect on ET [53]. However, in TCZ and TCCZ, the correlation was relatively weaker. By comparing the average LAI values for different climatic zones, as displayed in Table 2, it was found that the LAI in the TCZ was greater than that in the SMCZ and TCCZ, further confirming the mechanism of the impact of LAI on ET. As an important component of the water cycle, ET involves numerous complex energy exchanges. In particular, evaporation is the movement of water into the air and can readily lead to changes in the air temperature. Conversely, variations in the daily average temperature of agricultural fields can reflect the intensity and rate of energy exchange in the atmosphere. Thus, the daily mean air temperature (Ta) also demonstrates a strong correlation with ET [54]. Although EF was considered a crucial factor for quantifying surface water deficits and the water cycle, and the estimation of ET based on a specific daytime EF is considered a favorable method [27,55], EF did not demonstrate the same universally strong correlation across all climatic regions as Rn and PPFD in the present study. Further investigation of previous research has revealed that EF demonstrates higher sensitivity to land surface moisture conditions in arid regions, whereas it is less sensitive in relatively humid areas [56]. On one hand, this was probably due to the generally humid climate in agricultural areas; on the other hand, it may be influenced by irrigation practices in agricultural areas, which can affect the land surface moisture conditions at flux measurement sites. Therefore, when considering the number of required input factors, these relatively more important factors should be prioritized. 4.2. Optimal Input Factor Combinations and Machine Learning Models for Simulating Evapotranspiration The four machine learning models used in this study demonstrated relatively good simulation accuracy. After obtaining the input factor combinations from the correlation analysis of ET using data from sites within each respective climate zone, the simulation accuracy of the three- and six-factor combinations of each model was significantly improved, indicating that it is meaningful to consider the differences and impacts of climate zones when simulating cropland daily ET. Given the high simulation accuracy across all the models, each model had suitable scenarios and characteristics. RF models often achieve better simulation accuracy than other models when trained with fewer input variables. However, they also had the longest execution times among the four models [57]. When conducting ET simulations with fewer input variables and when the importance of the time cost is low or not considered, the RF model can be prioritized. The SVM consistently demonstrated better modeling performance for ET than the other three models across most combinations of input variables and various climate zones. In the comparison without distinguishing climate zones and input factor combinations, SVM-V6 and SVM-V9 were the optimal six-factor and nine-factor input combination models. In the comparison where input factor combinations were divided by climate zones, overall, the combined performance of SVM models with three different input factor combinations (SVM*-V3 and SVM*-V6) was the best. Additionally, SVM models exhibited faster single-model runtimes (significantly lower than those of the RF and BP models). The XGB model has a notable advantage in terms of computational time and efficiency over other models [37], which makes it more suitable for addressing real-time prediction problems, even though the simulation accuracy of the XGB model for ET is not particularly outstanding among these machine learning models. However, the simulation accuracy of the BP model is unstable across different climatic regions, and its generalization ability is relatively average [58], particularly when dealing with very limited or extremely large datasets, and the performance of the BP model is not as strong as that of other models. In some cases, the backpropagation algorithm may become stuck at a local optimum [59]. Additionally, the BP model had a relatively long single-model runtime (only slightly faster than that of the RF model). However, when the dataset size is moderate, the BP model may achieve high accuracy. Therefore, to attain excellent simulation accuracy with the BP model, a substantial amount of data is required to pre-determine the optimal local input variables for each site, which may require a significant amount of time and effort. Considering the simulation accuracy of the model and the runtime under various conditions, this study suggests that the SVM model is the preferred choice for simulating daily cropland ET. Considering three different combinations of input factors, we observed differences in the adaptability of input factor combinations across climatic zones. By comparing the performance of machine learning models using the three-factor combination (V3) in different climatic zones, three out of four of the models exhibited better performance in the SMCZ. Similar results were also observed with the nine-factor combination (V9), which showed better performance in the TCCZ (Table 9). Additionally, the four machine learning models generally performed well in both V6 and V9 input factor combinations. This indicates that the predictive accuracy of the models improved with the increase in input factors. However, the simulation accuracy of the V9 input factor combination did not show significant superiority over that of the V6 input factor combination, and at some sites, it performed worse for certain site data. Therefore, considering that the V9 input factor combination requires 50% more input factors than the V6 input factor combination while achieving similar simulation accuracy, this study suggests that V6 is the most economical input factor combination for situations with limited meteorological data. 4.3. Uncertainties Estimating uncertainty for EC data is challenging, and the presence of missing data in the dataset can lead to discontinuities in the data time series, potentially increasing the difficulty of accurately predicting ET using machine learning models. Considering the complexity of relationships between variables, future research may explore the application of some deep learning models for agricultural evapotranspiration prediction. Additionally, interpolating MODIS LAI from 8-day periods to daily using cubic spline interpolation may introduce uncertainty into the models. However, the daily scale LAI interpolated from 8-day data may be beneficial to improve the simulation accuracy of the machine learning used in this study. The daily scale LAI is consistent with the input meteorological data on the time scale, and it can better quantify the impact of vegetation change on ET, especially in the period when the vegetation changed dramatically (generally the rapid development stage of crops). Directly conducting correlation analysis on the original time series dataset can result in non-independent impacts of input variables on ET (ideally, analyzing the impact of a certain variable should ensure that other variables remain constant, which is not achievable in reality). This can lead to larger underestimations of variables (such as U and P) ranked lower in correlation analysis, and the uncertainty in flux tower measurement data may exacerbate this underestimation. However, its impact on our selection of three-factor and six-factor input variables (V3 and V6) is minimal. As far as the representativeness of the EC sites selected in this study, we have to admit that not all EC flux sites in different climate zones could be included due to limitations of accessibility and openness of data. In the future, extending field ET predictions to flux tower sites in other climatic zones beyond those mentioned in this study (e.g., the Boreal climatic zone) could be considered. Due to the limited representation of site numbers in this study, not all relevant climatic zones were investigated, although most flux tower station data located in agricultural areas were included. 5. Conclusions This study used meteorological and remote sensing data from diverse agricultural sites in distinct climatic regions to simulate ET using four machine learning models with three different input combinations. The key findings are summarized as follows: (1) Rn, PPFD, LAI, EF, and Ta emerged as pivotal factors influencing daily ET in agricultural areas, and they all exhibited a relatively strong correlation with ET across various climate zones; (2) all four machine learning models yielded satisfactory simulation performance, with the SVM model demonstrating the best simulation performance, particularly when considering the influence of climate zones on ET simulation; (3) the predictive ET accuracy of three-factor combinations (V3) was improved with the inclusion of more input factors. However, considering both predictive accuracy and input factor efficiency, the V6 input factor combination is recommended as the preferred choice; (4) in climate zones with a lower average LAI, LAI was more crucial for ET predictions than in climate zones with a higher average LAI (TCZ, SMCZ), highlighting the need for region-specific considerations when selecting machine learning models and input factor combinations. Supplementary Materials The following supporting information can be downloaded at: https://www.mdpi.com/article/10.3390/rs16050730/s1, Table S1: Site codes and corresponding full names of the 15 crop flux tower sites used in this study.; Table S2: Hyperparameters of Machine Learning Models Used in This Study; Table S3: The average and standard deviation of the Pearson correlation coefficients between input factors and evapotranspiration (ET). At each site, Pearson correlation coefficients were independently calculated. Author Contributions Writing—original draft preparation and visualization, C.D.; conceptualization and methodology, S.J.; software and validation, C.C.; software and data curation, Q.G.; resources, Q.H.; formal analysis, investigation, and writing—review and editing, C.Z.; funding acquisition, S.J. All authors have read and agreed to the published version of the manuscript. Funding This research was funded by the National Natural Science Foundation of China (52279041, 52309055), Fundamental Research Funds for the Central Universities (YJ202259), and the Sichuan Science and Technology Program (2023YFN0024, 2023NZZJ0015). Data Availability Statement All data are available upon request. Acknowledgments We would like to thank the FLUXNET community, including AmeriFlux, AsiaFlux, and the European Fluxes Database and all the scientists and technicians maintaining the flux site management and providing crop information. We are also grateful to the Distributed Archive Center of Oak Ridge National Laboratory and the Earth Observing System Data for making MODIS data available. Conflicts of Interest The authors declare no conflicts of interest. Nomenclature Ta daily mean air temperature (°C) Rn net radiation (MJ/m2 d) G soil heat flux (MJ/m2 d) EF evaporative fraction (W m−2/W m−2) LAI leaf area index (m2/m2) PPFD photosynthetic photon flux density (µmol/m2 s) VPD vapor pressure deficit (kPa) U wind speed (m/s) P atmospheric pressure (kPa) V3, V6, V9 three, six, and nine input factor combinations RMSE root mean square error R2 determination coefficient MAE mean absolute error GPI global performance indicator NSE Nash–Sutcliffe efficiency coefficient RF random forest SVM support vector machine XGB extreme gradient boosting BP backpropagation neural network TCCZ temperate–continental climate zone SMCZ subtropical–Mediterranean climate zone TCZ temperate climate zone References Yang, Y.; Roderick, M.L.; Guo, H.; Miralles, D.G.; Zhang, L.; Fatichi, S.; Luo, X.; Zhang, Y.; McVicar, T.R.; Tu, Z. Evapotranspiration on a greening Earth. Nat. Rev. Earth Environ. 2023, 4, 626–641. [Google Scholar] [CrossRef] Sivakumar, M.V.K.; Stefanski, R. Climate and Land Degradation—An Overview. In Climate and Land Degradation; Sivakumar, M.V.K., Ndiang’ui, N., Eds.; Springer: Berlin/Heidelberg, Germany, 2007; pp. 105–135. [Google Scholar] McCabe, M.F.; Wood, E.F. Scale influences on the remote estimation of evapotranspiration using multiple satellite sensors. Remote Sens. Environ. 2006, 105, 271–285. [Google Scholar] [CrossRef] Foster, T.; Brozović, N. Simulating crop-water production functions using crop growth models to support water policy assessments. Ecol. Econ. 2018, 152, 9–21. [Google Scholar] [CrossRef] Igbadun, H.E.; Tarimo, A.K.; Salim, B.A.; Mahoo, H.F. Evaluation of selected crop water production functions for an irrigated maize crop. Agric. Water Manag. 2007, 94, 1–10. [Google Scholar] [CrossRef] Dong, Q.; Zhan, C.; Wang, H.; Wang, F.; Zhu, M. A review on evapotranspiration data assimilation based on hydrological models. J. Geog. Sci. 2016, 26, 230–242. [Google Scholar] [CrossRef] Srivastava, R.; Panda, R.; Halder, D. Effective crop evapotranspiration measurement using time-domain reflectometry technique in a sub-humid region. Theor. Appl. Climatol. 2017, 129, 1211–1225. [Google Scholar] [CrossRef] Hirschi, M.; Michel, D.; Lehner, I.; Seneviratne, S.I. A site-level comparison of lysimeter and eddy covariance flux measurements of evapotranspiration. Hydrol. Earth Syst. Sci. 2017, 21, 1809–1825. [Google Scholar] [CrossRef] Renard, B.; Kavetski, D.; Kuczera, G.; Thyer, M.; Franks, S.W. Understanding predictive uncertainty in hydrologic modeling: The challenge of identifying input and structural errors. Water Resour. Res. 2010, 46. [Google Scholar] [CrossRef] de Carvalho Alves, M.; de Carvalho, L.G.; Vianello, R.L.; Sediyama, G.C.; de Oliveira, M.S.; de Sá Junior, A. Geostatistical improvements of evapotranspiration spatial information using satellite land surface and weather stations data. Theor. Appl. Climatol. 2013, 113, 155–174. [Google Scholar] [CrossRef] Li, Z.-L.; Tang, R.; Wan, Z.; Bi, Y.; Zhou, C.; Tang, B.; Yan, G.; Zhang, X. A review of current methodologies for regional evapotranspiration estimation from remotely sensed data. Sensors 2009, 9, 3801–3853. [Google Scholar] [CrossRef] Duro, D.C.; Franklin, S.E.; Dubé, M.G. A comparison of pixel-based and object-based image analysis with selected machine learning algorithms for the classification of agricultural landscapes using SPOT-5 HRG imagery. Remote Sens. Environ. 2012, 118, 259–272. [Google Scholar] [CrossRef] Feng, Y.; Cui, N.; Gong, D.; Zhang, Q.; Zhao, L. Evaluation of random forests and generalized regression neural networks for daily reference evapotranspiration modelling. Agric. Water Manag. 2017, 193, 163–173. [Google Scholar] [CrossRef] Fukuda, S.; Spreer, W.; Yasunaga, E.; Yuge, K.; Sardsud, V.; Müller, J. Random Forests modelling for the estimation of mango (Mangifera indica L. cv. Chok Anan) fruit yields under different irrigation regimes. Agric. Water Manag. 2013, 116, 142–150. [Google Scholar] [CrossRef] Prasad, N.; Patel, N.; Danodia, A. Crop yield prediction in cotton for regional level using random forest approach. Spatial Inf. Res. 2021, 29, 195–206. [Google Scholar] [CrossRef] Hipni, A.; El-shafie, A.; Najah, A.; Karim, O.A.; Hussain, A.; Mukhlisin, M. Daily forecasting of dam water levels: Comparing a support vector machine (SVM) model with adaptive neuro fuzzy inference system (ANFIS). Water Resour. Manag. 2013, 27, 3803–3823. [Google Scholar] [CrossRef] Dou, X.; Yang, Y. Modeling evapotranspiration response to climatic forcings using data-driven techniques in grassland ecosystems. Adv. Meteorol. 2018, 2018, 1824317. [Google Scholar] [CrossRef] Liu, M.; Tang, R.; Li, Z.-L.; Yao, Y.; Yan, G. Global land surface evapotranspiration estimation from meteorological and satellite data using the support vector machine and semiempirical algorithm. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens. 2018, 11, 513–521. [Google Scholar] [CrossRef] Pathy, A.; Meher, S.; Balasubramanian, P. Predicting algal biochar yield using eXtreme Gradient Boosting (XGB) algorithm of machine learning methods. Algal Res. 2020, 50, 102006. [Google Scholar] [CrossRef] Liu, X.; Kang, S.; Li, F. Simulation of artificial neural network model for trunk sap flow of Pyrus pyrifolia and its comparison with multiple-linear regression. Agric. Water Manag. 2009, 96, 939–945. [Google Scholar] [CrossRef] Kumar, M.; Raghuwanshi, N.; Singh, R. Artificial neural networks approach in evapotranspiration modeling: A review. Irrig. Sci. 2011, 29, 11–25. [Google Scholar] [CrossRef] Pagano, A.; Amato, F.; Ippolito, M.; De Caro, D.; Croce, D.; Motisi, A.; Provenzano, G.; Tinnirello, I. Machine learning models to predict daily actual evapotranspiration of citrus orchards under regulated deficit irrigation. Ecol. Inf. 2023, 76, 102133. [Google Scholar] [CrossRef] Chen, Y.; Xue, Y.; Hu, Y. How multiple factors control evapotranspiration in North America evergreen needleleaf forests. Sci. Total Environ. 2018, 622, 1217–1224. [Google Scholar] [CrossRef] Beck, H.E.; Zimmermann, N.E.; McVicar, T.R.; Vergopolan, N.; Berg, A.; Wood, E.F. Present and future Köppen-Geiger climate classification maps at 1-km resolution. Sci. Data 2018, 5, 1–12. [Google Scholar] [CrossRef] [PubMed] Allen, R.G.; Pereira, L.S.; Raes, D.; Smith, M. Crop evapotranspiration-Guidelines for computing crop water requirements-FAO Irrigation and drainage paper 56. Fao Rome 1998, 300, D05109. [Google Scholar] Sugita, M.; Brutsaert, W. Daily evaporation over a region from lower boundary layer profiles measured with radiosondes. Water Resour. Res. 1991, 27, 747–752. [Google Scholar] [CrossRef] Li, S.; Kang, S.; Li, F.; Zhang, L.; Zhang, B. Vineyard evaporative fraction based on eddy covariance in an arid desert region of Northwest China. Agric. Water Manag. 2008, 95, 937–948. [Google Scholar] [CrossRef] Jönsson, P.; Eklundh, L. TIMESAT—A program for analyzing time-series of satellite sensor data. Comput. Geosci. 2004, 30, 833–845. [Google Scholar] [CrossRef] Breiman, L. Random forests. Mach. Learn. 2001, 45, 5–32. [Google Scholar] [CrossRef] da Silva Júnior, J.C.; Medeiros, V.; Garrozi, C.; Montenegro, A.; Gonçalves, G.E. Random forest techniques for spatial interpolation of evapotranspiration data from Brazilian’s Northeast. Comput. Electron. Agric. 2019, 166, 105017. [Google Scholar] [CrossRef] Dou, X.; Yang, Y. Evapotranspiration estimation using four different machine learning approaches in different terrestrial ecosystems. Comput. Electron. Agric. 2018, 148, 95–106. [Google Scholar] [CrossRef] Gocić, M.; Motamedi, S.; Shamshirband, S.; Petković, D.; Ch, S.; Hashim, R.; Arif, M. Soft computing approaches for forecasting reference evapotranspiration. Comput. Electron. Agric. 2015, 113, 164–173. [Google Scholar] [CrossRef] Kişi, O.; Cimen, M. Evapotranspiration modelling using support vector machines/Modélisation de l’évapotranspiration à l’aide de ‘support vector machines’. Hydrol. Sci. J. 2009, 54, 918–928. [Google Scholar] [CrossRef] Tang, D.; Feng, Y.; Gong, D.; Hao, W.; Cui, N. Evaluation of artificial intelligence models for actual crop evapotranspiration modeling in mulched and non-mulched maize croplands. Comput. Electron. Agric. 2018, 152, 375–384. [Google Scholar] [CrossRef] Yao, Y.; Liang, S.; Li, X.; Chen, J.; Liu, S.; Jia, K.; Zhang, X.; Xiao, Z.; Fisher, J.B.; Mu, Q. Improving global terrestrial evapotranspiration estimation using support vector machine by integrating three process-based algorithms. Agric. For. Meteorol. 2017, 242, 55–74. [Google Scholar] [CrossRef] Fan, J.; Yue, W.; Wu, L.; Zhang, F.; Cai, H.; Wang, X.; Lu, X.; Xiang, Y. Evaluation of SVM, ELM and four tree-based ensemble models for predicting daily reference evapotranspiration using limited meteorological data in different climates of China. Agric. For. Meteorol. 2018, 263, 225–241. [Google Scholar] [CrossRef] Chen, T.; Guestrin, C. Xgboost: A scalable tree boosting system. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, San Francisco, CA, USA, 13 August 2016; pp. 785–794. [Google Scholar] Wu, L.; Peng, Y.; Fan, J.; Wang, Y. Machine learning models for the estimation of monthly mean daily reference evapotranspiration based on cross-station and synthetic data. Hydrol. Res. 2019, 50, 1730–1750. [Google Scholar] [CrossRef] Zhou, Z.; Zhao, L.; Lin, A.; Qin, W.; Lu, Y.; Li, J.; Zhong, Y.; He, L. Exploring the potential of deep factorization machine and various gradient boosting models in modeling daily reference evapotranspiration in China. Arabian J. Geosci. 2020, 13, 1–20. [Google Scholar] [CrossRef] Maier, H.R.; Dandy, G.C. Neural networks for the prediction and forecasting of water resources variables: A review of modelling issues and applications. Environ. Modell. Softw. 2000, 15, 101–124. [Google Scholar] [CrossRef] Han, X.; Wei, Z.; Zhang, B.; Li, Y.; Du, T.; Chen, H. Crop evapotranspiration prediction by considering dynamic change of crop coefficient and the precipitation effect in back-propagation neural network model. J. Hydrol. 2021, 596, 126104. [Google Scholar] [CrossRef] Traore, S.; Luo, Y.; Fipps, G. Deployment of artificial neural network for short-term forecasting of evapotranspiration using public weather forecast restricted messages. Agric. Water Manag. 2016, 163, 363–379. [Google Scholar] [CrossRef] Gill, E.J.; Singh, E.B.; Singh, E.S. Training back propagation neural networks with genetic algorithm for weather forecasting. In Proceedings of the IEEE 8th International Symposium on Intelligent Systems and Informatics, Subotica, Serbia, 10–11 September 2010; pp. 465–469. [Google Scholar] R Core Team, R. R: A Language and Environment for Statistical Computing; R Foundation for Statistical Computing: Vienna, Austria, 2021. Available online: https://www.R-project.org/ (accessed on 15 October 2023). Aouissi, J.; Benabdallah, S.; Chabaâne, Z.L.; Cudennec, C. Evaluation of potential evapotranspiration assessment methods for hydrological modelling with SWAT—Application in data-scarce rural Tunisia. Agric. Water Manag. 2016, 174, 39–51. [Google Scholar] [CrossRef] Fan, J.; Wu, L.; Zhang, F.; Cai, H.; Ma, X.; Bai, H. Evaluation and development of empirical models for estimating daily and monthly mean daily diffuse horizontal solar radiation for different climatic regions of China. Renew. Sustain. Energy Rev. 2019, 105, 168–186. [Google Scholar] [CrossRef] Wu, Z.; Cui, N.; Hu, X.; Gong, D.; Wang, Y.; Feng, Y.; Jiang, S.; Lv, M.; Han, L.; Xing, L. Optimization of extreme learning machine model with biological heuristic algorithms to estimate daily reference crop evapotranspiration in different climatic regions of China. J. Hydrol. 2021, 603, 127028. [Google Scholar] [CrossRef] Bellido-Jiménez, J.; Estévez, J.; García-Marín, A. Reference evapotranspiration projections in Southern Spain (until 2100) using temperature-based machine learning models. Comput. Electron. Agric. 2023, 214, 108327. [Google Scholar] [CrossRef] Chia, M.Y.; Huang, Y.F.; Koo, C.H. Improving reference evapotranspiration estimation using novel inter-model ensemble approaches. Comput. Electron. Agric. 2021, 187, 106227. [Google Scholar] [CrossRef] Guo, D.; Westra, S.; Maier, H.R. Sensitivity of potential evapotranspiration to changes in climate variables for different Australian climatic zones. Hydrol. Earth Syst. Sci. 2017, 21, 2107–2126. [Google Scholar] [CrossRef] Esmaili, M.; Aliniaeifard, S.; Mashal, M.; Ghorbanzadeh, P.; Mehdi, S.; Gavilan, M.U.; Carrillo, F.F.; Lastochkina, O.; Tao, L. CO2 enrichment and increasing light intensity till a threshold level, enhance growth and water use efficiency of lettuce plants in controlled environment. Notulae Botanicae Horti Agrobot. 2020, 48, 2244–2262. [Google Scholar] [CrossRef] Zhou, L.; Wang, Y.; Jia, Q.; Li, R.; Zhou, M.; Zhou, G. Evapotranspiration over a rainfed maize field in northeast China: How are relationships between the environment and terrestrial evapotranspiration mediated by leaf area? Agric. Water Manag. 2019, 221, 538–546. [Google Scholar] [CrossRef] Suyker, A.E.; Verma, S.B. Interannual water vapor and energy exchange in an irrigated maize-based agroecosystem. Agric. For. Meteorol. 2008, 148, 417–427. [Google Scholar] [CrossRef] Ilic, M.; Jovic, S.; Spalevic, P.; Vujicic, I. Water cycle estimation by neuro-fuzzy approach. Comput. Electron. Agric. 2017, 135, 1–3. [Google Scholar] [CrossRef] Yang, J.; Wang, Y. Estimating evapotranspiration fraction by modeling two-dimensional space of NDVI/albedo and day–night land surface temperature difference: A comparative study. Adv. Water Resour. 2011, 34, 512–518. [Google Scholar] [CrossRef] Liu, Q.; Wang, T.; Han, Q.; Sun, S.; Liu, C.-q.; Chen, X. Diagnosing environmental controls on actual evapotranspiration and evaporative fraction in a water-limited region from northwest China. J. Hydrol. 2019, 578, 124045. [Google Scholar] [CrossRef] Huang, G.-B.; Zhu, Q.-Y.; Siew, C.-K. Extreme learning machine: Theory and applications. Neurocomputing 2006, 70, 489–501. [Google Scholar] [CrossRef] Abyaneh, H.Z.; Nia, A.M.; Varkeshi, M.B.; Marofi, S.; Kisi, O. Performance evaluation of ANN and ANFIS models for estimating garlic crop evapotranspiration. J. Irrig. Drain. Eng. 2011, 137, 280–286. [Google Scholar] [CrossRef] Dai, X.; Shi, H.; Li, Y.; Ouyang, Z.; Huo, Z. Artificial neural network models for estimating regional reference evapotranspiration based on climate factors. Hydrol. Process. An Int. J. 2009, 23, 442–450. [Google Scholar] [CrossRef]    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Du, C.; Jiang, S.; Chen, C.; Guo, Q.; He, Q.; Zhan, C. Machine Learning-Based Estimation of Daily Cropland Evapotranspiration in Diverse Climate Zones. Remote Sens. 2024, 16, 730. https://doi.org/10.3390/rs16050730 AMA Style Du C, Jiang S, Chen C, Guo Q, He Q, Zhan C. Machine Learning-Based Estimation of Daily Cropland Evapotranspiration in Diverse Climate Zones. Remote Sensing. 2024; 16(5):730. https://doi.org/10.3390/rs16050730 Chicago/Turabian Style Du, Changmin, Shouzheng Jiang, Chuqiang Chen, Qianyue Guo, Qingyan He, and Cun Zhan. 2024. \"Machine Learning-Based Estimation of Daily Cropland Evapotranspiration in Diverse Climate Zones\" Remote Sensing 16, no. 5: 730. https://doi.org/10.3390/rs16050730 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations No citations were found for this article, but you may check on Google Scholar Article Access Statistics Article access statistics Article Views 20. Feb 25. Feb 1. Mar 6. Mar 11. Mar 16. Mar 21. Mar 26. Mar 31. Mar 5. Apr 0 1000 250 500 750 For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Remote Sens., EISSN 2072-4292, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 8:
- APA Citation: None
  Main Objective: This systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems.
  Study Location: Unspecified
  Data Sources: None
  Technologies Used: None
  Key Findings: None
  Extract 1: Generation and Application of Irrigation Insights: Focuses on the application of ML-generated insights to control irrigation systems without manual intervention, investigating the real-time generation and automated application of actionable irrigation insights, and the importance of interpretability and explainability in ML models.
  Extract 2: Highlighting the Role of Interoperability and Standardization: The review seeks to emphasize the importance of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline. It aims to identify existing and emerging standards and their applicability to real-time irrigation management systems.
  Limitations: The paper could mention some of the specific limitations of using ML models for real-time generation and automated application of irrigation insights. Examples could include the need for large amounts of training data, the potential for overfitting, or the difficulty in interpreting and explaining the predictions of complex models.
  Relevance Evaluation: 0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects of the point with highly insightful, reliable, and up-to-date information. A must-include for the review.
  Relevance Score: 1.0
  Inline Citation: None
  Explanation: The paper utilizes ML-generated crop insights to control irrigation systems without manual intervention, focusing on the real-time generation and automated application of actionable irrigation insights and the importance of interpretability and explainability in ML models for real-time irrigation management.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods 3. Results 4. Discussion 5. Conclusion Funding CRediT authorship contribution statement Declaration of competing interest Appendix A. Supplementary data Data availability References Show full outline Figures (10) Show 4 more figures Tables (4) Table 1 Table 2 Table 3 Table 4 Extras (1) Multimedia component 1 Case Studies in Chemical and Environmental Engineering Volume 9, June 2024, 100660 Case Report Assessment of land use transition and crop intensification using geospatial technology in Bangladesh Author links open overlay panel Mst Irin Parvin a b, Md Anwarul Islam c, Mst Farida Perveen a, Md. Roushon Jamal a, Md. Jamal Faruque d, Billal Hossen a, Khayrul Islam e, Md. Manik Sarker a f Show more Share Cite https://doi.org/10.1016/j.cscee.2024.100660 Get rights and content Under a Creative Commons license open access Highlights • Showcasing the dynamic nature of agricultural landscapes over time. • Utilizing NDVI and NDWI to understand the land use dynamics. • Witnessing significant agricultural land utilization: 5.0% (1988) to 32.5% (2023). • Government policy and numerous extension efforts propel agricultural land growth. • Proving crucial insights to guide policymakers for future sustainable land management. Abstract Despite dealing with numerous challenges, the agricultural sector in Bangladesh is consistently growing every year because of the crop intensification efforts in many areas to ensure food security. However, the effect of intensive cropping on land use changes remains unclear due to the lack of systematic monitoring. This study assesses Land Use Land Cover (LULC) dynamics, particularly in Bhanga Upazila (a subdistrict), Bangladesh, using remote sensing and GIS technologies. Landsat 5 and 8 satellite imagery to understand the impact of agricultural intensification from 1988 to 2023. This study showed that agricultural land utilization was increased by more than five times (551.8%) and the built-up area was expanded by 155.6% during the study period. This substantial land conversion was expected due to the significant decrease of barren and waterbodies by 63.1% and 72.4% at the same time respectively. Despite the fact that Bhanga was a typical rural place where agriculture had only a 5% (1012 ha) share of its total land (20,309 ha) back in 1988, Bhanga experienced a notable surge in agricultural land utilization over the past three decades from 5.0% in 1988 to 32.5% by 2023, with a temporary dip to 2.4% post a devastating flood in 1999. The Normalized Difference Vegetation Index (NDVI) and Normalized Difference Water Index (NDWI) analyses justify the increase of agricultural and built-up zones, contrasting significant decrease in waterbodies and barren areas as detected by RF (Random Forest) machine learning algorithm. These findings reveal that crop intensification initiatives convert waterbodies and barren lands into croplands. Government policies and supports such as various agriculture extension activities, availability of irrigation facilities, adaptation of technologies, and improved regional connectivity likely contributed to this positive transformation. This study offers crucial insights for policymakers to take region-specific customized agricultural strategies to ensure food security and sustainability. Previous article in issue Next article in issue Keywords GISRemote sensingAgricultural extensionLULCNDVINDWI 1. Introduction Transformation of land use is a global concern with far-reaching implications for food security and ensuring sustainability [1]. In Bangladesh, Land Use Land Cover (LULC) dynamics are impacted by a complex interplay among agricultural intensification, urbanization, environmental vulnerabilities, and socioeconomic factors [2]. The country is densely populated with a land-scarce landscape. In addition, the escalating population and rapid urbanization have led to substantial changes in land utilization patterns. The transition from rural to urban areas, coupled with rapid industrialization put pressure upon agricultural lands [3]. To meet the high demand of food for its large population, the Government of Bangladesh has taken a series of policy measures and provided numerous financial incentives for agricultural intensification. Conversion of agricultural land to non-agricultural is common, but in many places, positive transformation is also taking place. For instance, due to the inadequate rainfall during the monsoon, many waterbodies are coming under agriculture especially in the dry seasons [4]. In addition, a large area of barren lands is also transformed into crop land by utilizing government incentivized technologies and resources such as irrigation pumps, fertilizers, high yielding, climate resilient varieties, trainings, and demonstration [5,6]. However, to ensure food security with sustainable land utilization, proper land management is crucial [7]. Bangladesh, historically an agrarian society, relies heavily on agriculture which is also the backbone of its economy [8]. The situation is particularly acute due to its limited land availability compared to a densely populated landscape. Agricultural activities have traditionally occupied around 60% of the total land area [9]. The rich deltaic plains and fertile soil provide an ideal environment for rice and other crops cultivation [10]. Additionally, this agricultural landscape undergoes continuous evolution due to various factors, including technological advancements, changing market demands, and improved transportation systems [11]. Adding to the complexity, Bangladesh is susceptible to climate change influence, contributing to annual conversions of nearly 1% of agricultural lands to non-agricultural uses [9]. This transformation is a direct threat to the nation's food production objectives. On the contrary, agricultural land has increased in certain areas in Bangladesh due to multiple factors [12]. For instance, one study reported that 73% of fallow land was transformed into agriculture, and waterbodies were severely impacted by gradual sand deposition and soil erosion [5]. However, population growth remains a primary driver that increases the demand for food, prompting the expansion of cultivable lands by converting forests, wetlands, and marginal areas into agricultural lands. Technological advancements have also played a crucial role, empowering farmers to utilize fallow lands by adopting improved irrigation, resilient crop varieties, and better farming practices [13]. Furthermore, government policies encouraging agricultural development, including land reclamation initiatives, dissemination of advanced agricultural technologies, development and distribution of climate-resilient varieties, and subsidies, also contribute to this agricultural expansion [14]. Market demands for specific crops often lead to the conversion of non-agricultural land to meet these needs. Infrastructure development, such as new roads, facilitates access to remote areas and encourages agricultural farming [15]. Climate change-induced events like riverbank erosion or salinity intrusion decrease arability and sometimes force populations to abandon affected areas [16]. Livelihood diversification among rural communities also drives the conversion of non-agricultural land to cropped land to generate supplementary incomes [17]. Nonetheless, crop intensification meets immediate food demand, and it poses some environmental risks like deforestation, biodiversity loss, and soil degradation [18]. Sustainable land management policies and practices are crucial to mitigate these risks and ensure food security while preserving environmental sustainability [19]. Thus, proper monitoring of land use transition and impact of crop intensification is essential. Regular monitoring of land use and change detection of LULC is foremost for analyzing the dynamics of land use change over time and understanding the socio-economic and environmental consequences [20]. Land use denotes anthropogenic land utilization and land cover represents the bio-physical infrastructures or settings on the earth surface which includes the distribution of vegetation, croplands, soil, waterbodies, and any other physical features [[21], [22], [23]]. LULC maps facilitate to ensure proper spatial planning, management, and monitoring of natural resources at local, national, and regional levels [12,24,25]. Remote sensing together with GIS are effective tools to produce detailed land cover maps [26]. In addition, remote sensing applications have been recognized for land monitoring, especially for monitoring of agricultural land use change [27]. In contrast, field-level data collection is expensive and time-consuming and there is a possibility of erroneous visual interpretations on collected information [[27], [28], [29], [30]]. Studies on assessing land use transition using GIS and remote sensing technology are still limited in Bangladesh [31]. Previous land use transition studies mostly evaluated the impact of climate change in coastal areas [32,33], salinity-induced change [34], land use change on the ecosystem [35,36], flooding [5,37], urbanization and industrialization [38] monitoring of reserve forests including mangrove forests [[39], [40], [41]], and dynamics of land surface temperature (LST) [42,43]. These studies represented land use change in the classified hot-spot areas and/or on specific man-made or natural events. To the best of our knowledge, no study has been conducted to assess the impact of crop intensification on land use change dynamics in the non-classified areas which represent significant lands in Bangladesh. Therefore, undermining this vast area with the underlying change in land use remains unclear for the policymakers to take appropriate policy measures. To bridge this knowledge gap, we assessed the impact of agricultural intensification on land use change in Bhanga Upazila (a subdistrict), Faridpur, Bangladesh over the past three decades by using advanced geospatial technology. It is the first study of the detection of spatiotemporal change of different LULCs for the low-lying heterogeneous south-central region of Bangladesh. In this regard, remote sensing data provide accurate and reliable information in a short interval with low cost [44]. The freely available and processed remote sensing data play a key role in assessing, mapping, identifying, and monitoring the geospatial and temporal change of different surface features over a short and long period [45,46]. For instance, the Landsat imagery is a freely available online-based remote sensing dataset which is continuously monitored the global land use change since 1972 [30]. Landsat-5 Thematic Mapper (TM) and Landsat-8 Operational Land Imager (OLI) provide satellite data for detecting changes in LULC, NDVI, and NDWI [44]. Google Earth Engine is a big geodata processing platform that has better computational capacities and is used for geospatial data processing over a wide area [47]. In addition, Random Forest (RF) is one of the renowned classification algorithms applied in remote sensing for multispectral and hyperspectral image classification. RF classification has higher accuracy and shows its strength against the overfitting training data [12]. GIS is an integrated approach to collecting, storing, analyzing, and finally presenting geographically referenced information for decision-making purposes [24]. NDVI and NDWI indices are also used to verify the accuracy of LULC classification [48]. The specific objectives of the study were: 1) To identify how different types of land use changes happened over the specified period. 2) To determine the spatial and temporal changes in agricultural landscapes over the past three decades. 1.1. Study area Bhanga Upazila, a sub-district of Faridpur district, Bangladesh, was selected for this study due to due to its unique combination of rural landscapes and robust agricultural settings. Bhanga serves as a representative sample of the broader regions of Bangladesh. Bhanga is located in the south-central of Bangladesh with an area of approximately 216.34 km2 between 23°17′ and 23°28′ north latitudes and 89°55′ and 90°06′ east longitudes, approximately (Fig. 1). Download : Download high-res image (878KB) Download : Download full-size image Fig. 1. Location map of the study area (Bhanga subdistrict, Faridpur district, Bangladesh). Bhanga is surrounded by the river Padma on its north and east sides. This region experienced extensive infrastructure developments such as the six-lane Dhaka-Bhanga Expressway and the construction Padma Multipurpose Bridge (length 6.15km) [49]. These mega infrastructures facilitate substantial agriculture development aimed at better communication and nationwide marketing opportunities [49]. Especially, Bhanga is a highly agriculture-friendly area due to its clay loam soils. It is located in the Arial Khan River floodplain which causes silt or alluvial deposition and makes the low-lying areas fertile [50,51]. The annual average rainfall is 1546 mm, the maximum temperature is 35.8 °C in May and the minimum temperature is 12.6 °C [52]. Agriculture contributes 48% of the income source, with rice as the primary crop, followed by onion, vegetables, fruits, mustard, jute, and sugarcane [53]. Through the adoption of new crop varieties and technologies, farmers in Bhanga have aimed for higher productivity, especially in Boro and Aman modern rice varieties [54,55]. This intensified cropping system has increased multiple cropped areas, agricultural productivity, strengthening food security and economic development in the community [56]. Therefore, the findings derived from this study can contribute significantly by providing informed land-use policies, agricultural strategies, and sustainable development initiatives not only for Bhanga but also for similar regions facing comparable challenges. 2. Materials and methods 2.1. Satellite data source, data acquisition, and time selection Landsat offers extensive, continuous, and high-resolution (30 m) data capturing the Earth surface over 40 years [27]. For this study, we utilized satellite imagery including Landsat-5 Thematic Mapper (TM) and Landsat-8 (Operational Land Imager (OLI) reflectance multispectral temporal images in Google Earth Engine (GEE) through USGS Earth Explorer (https://earthexplorer.usgs.gov/). During winter, submerged low-lying regions are utilized for agriculture, and thereby Bangladesh experiences the highest cropping intensity for diverse crop cultivation [57]. Additionally, favorable weather conditions and technological advancements facilitated extensive crop production during this period. To mitigate the impact of seasonal variations, February was specifically chosen for this study. Additionally, February offers the advantages of diverse crop coverage across fields and a relatively cloud-free sky, enhancing the suitability of imagery for analysis. Table 1 provides a detailed description of the data as well as the acquisition dates. We analyzed the data over thirty-five years (from 1988 to 2023) to understand the land use transition. Table 1. Acquired satellite data properties. Satellite Date of Image Acquisition (dd/mm/yy) Name of Sensor Spatial Resolution (m) Temporal Resolution (Days) % Cloud coverage Selected Parth/Row Landsat 5 19/02/1988 TM 30 16 3 137/ 044 17/02/1999 TM 30 16 3 137/ 044 02/02/2011 TM 30 16 3 137/ 044 Landsat 8 03/02/2023 OLI/TIRS 30 16 3 137/ 044 2.2. Methods We extracted LULC classification using the information from collected satellite imagery. Fig. 2 depicts the methodological framework for this study. The collected Landsat images were divided into five LULC classes, such as i) Agriculture, ii) Vegetation, iii) Built-up, iv) Waterbodies, and v) Barren lands. Detailed descriptions of each class are shown in Fig. 3. Download : Download high-res image (388KB) Download : Download full-size image Fig. 2. Flow chart for the adopted methodology of LULC change detection. Download : Download high-res image (492KB) Download : Download full-size image Fig. 3. Description of LULC categories used in the classification. 2.3. Image processing and detection of LULC classification 2.3.1. Google Earth Engine (GEE) platform The research took advantage of the GEE platform's amazing capabilities for satellite imagery collecting and processing to facilitate a comprehensive understanding of geospatial analyses. Landsat 5 TM and the Landsat 8 OLI reflectance images were collected from the GEE platform for 1988, 1999, 2011, and 2023. In the beginning, the filter date and study area (region of interest) were set with cloud cover <3% to remove cloud interference (shadow) on the images. The imageries were collected from February 2023 with the path 137 and row 044. The band combinations (B1, B2, B3, B4, B5 and B7) were selected for Landsat-5 imagery and the band combinations (B2, B3, B4, B5, B6 and B7) were selected for Landsat 8 imagery collection. Then the collected imageries were stacked using a mosaic of collected imagery and clipping of roi (region of interest). High-resolution satellite imagery were used for generating 500 training data in the form of points collection for the five different classes. We acquired training samples (random 75%) and validation samples (random 25%). The training points were collected from the whole area for each study period. Then the points were overlayed to obtain training samples. For overall accuracy assessment, confusion matrix, kappa coefficient, consumer accuracy, and producer accuracy were used for 1988, 1999, 2011, and 2023. 2.3.2. Random Forest (RF) machine learning The RF machine learning algorithm is one of the most common techniques to enhance the precision and accuracy of satellite image classification for land cover analysis [58]. This method utilizes bagging, producing multiple predictors that collaboratively reach a final decision by aggregating votes of predictors. A random selection of training datasets and variables was used for generating multiple decision trees by RF. To establish a proper split for building a tree, RF selects variables at random from training samples at each node [59]. A simplified structure of an RF tree is shown in Fig. 4. Download : Download high-res image (287KB) Download : Download full-size image Fig. 4. Structure of an RF Tree adopted from [63]. We used the “smileRandomForest” as RF classifier machine learning algorithm for supervised image classification. Supervised classification utilizes the spectral signatures that are labelled training data which were obtained from training samples for classifying an image. The supervised learning model produces more accurate results than the unsupervised classification [60]. Here we used “ee.Classifier.smileRandomForest(numberOfTrees, variablesPerSplit” algorithm for classifier model building. We performed supervised classification and data validation using 70% of training data and 30% of testing data, respectively. We used different coloured palettes such as yellow for agriculture, green for vegetation, red for built-up, blue for waterbodies, and grey for barren lands. Subsequently, LULC classified maps were prepared for the years 1988, 1999, 2011, and 2023 from GEE with distinct five classes. 2.4. Accuracy assessment of LULC maps Accuracy assessment involves verifying classified images to determine the quality, precision, and suitability of the produced maps [48]. Most common metrics like training error matrix, overall accuracy, Kappa coefficient, producers accuracy, consumers accuracy, validation accuracy, and validation error, are employed to assess the accuracy of the classified images [27]. For example, the Kappa coefficient determines the classification quality by comparing it against a randomly generated image. Kappa coefficient value ranges from 0 to 1, where 0.61–0.80 refer to significantly accurate, while values from 0.81 to 1 indicate nearly perfect [21]. Meanwhile, the error matrix provides insight into whether the sample classification for each LULC class is performed correctly or incorrectly. 2.5. LULC map generation using ArcGIS We utilized ArcGIS 10.8 software for image processing to produce geo-referenced maps for this study. At first, we imported the LULC classified tiff images into the ArcGIS catalogue. Then we changed the symbology from stretched to unique values to get five distinct classes such as agriculture, vegetation, built-up, waterbodies, and barren lands, and to obtain LULC maps for 1988, 1999, 2011, and 2023. Then we convert the raster image into a vector (polygon) using the conversion tool ‘Raster to Polygon’ tool. We projected the dissolved feature in the coordinate system (WGS 1984 UTM Zone 45 N) to produce the LULC maps. Finally, we calculated the area of five classes in the attribute table. Finally, we changed the colour ramp in the tiff images to produce NDVI and NDWI maps with the desired colours for the same period. 2.6. NDVI and NDWI analysis The NDVI which is a globally recognized tool, has been extensively utilized in previous studies to monitor seasonal and inter-annual fluctuations of crop growth [27,61]. On the other hand, the NDWI is a remote sensing-based indicator that can determine vegetation water content. It is particularly useful to identify open water sources [27]. NDWI also provides valuable indices for monitoring drought, water stress, and land degradation [62]. Both NDVI and NDWI are dimensionless, with values ranging between −1 and + 1 [48]. Higher NDVI values denote robust vegetation coverage, while negative values indicate the presence of water. Elevated NDWI refers to high water content in the soil, whereas lower values suggest reduced moisture content in the soil. NDVI and NDWI are calculated from the following equations (1), (2) [63]: (1) (2) In the case of NDVI, NIR is the reflection in the near-infrared, and RED is the red region of the electromagnetic spectrum (EMS). On the other hand, for NDWI, NIR and GREEN are the reflections in the near-infrared and GREEN range of EMS. NDVI predominantly maps vegetation, whereas NDWI maps the water content of vegetation [27]. Specific bands from the images were utilized to derive NDVI and NDWI as described in Table 2. Table 2. Specific bands used in NDVI and NDWI equations. Indices Landsat 5 images Landsat 8 images Reference NDVI [64] NDWI [65] 3. Results 3.1. LULC change detection The LULC maps were produced from the Landsat satellite imagery using the RF algorithm for the years 1988 (Fig. 5a), 1999 (Figs. 5b), 2011 (Fig. 5c), and 2023 (Fig. 5d). The results revealed significant changes in LULC transformation as recorded in Table S1 (Supplementary materials) and presented in Fig. 6. Download : Download high-res image (2MB) Download : Download full-size image Fig. 5. Year-wise LULC classification maps in 1988 (4a), 1999 (4b), 2011 (4c) and 2023 (4d). Download : Download high-res image (363KB) Download : Download full-size image Fig. 6. LULC classes change over time (in 1988, 1999, 2011, and 2023) a) change in hectares; b) transformation in percentage. During the study period, the agriculture area substantially changed from 1012 ha to 6594 ha, indicating an incredible increase of 551.8% over 35 years. This huge growth of agricultural area shifts from 5.0% in 1988 to 32.5% of the total land in 2023. In addition, the built-up area also increased by 155.6%. However, the rate of change was not always linear for all types of lands. In 1988, the agricultural area was 1012 ha which constituted 5.0% of the total land. From 1988 to 1999, the agriculture area decreased to 492 ha which was reasonable due to the devastating flood in 1998 [66]. However, from 1999 to 2011, there was a drastic increase from 492 ha to 6197 ha and a 6.4% increase in the following interval 2011–2023 to make it five times than the initial agriculture area that constituted 32.5% of the total land. This remarkable increase in the agriculture area was expected due to the numerous policy measures, technological supports, and economic incentives to expand crop intensification in the region [67]. On the other hand, the built-up area increased by 57.6%, 26.7%, and 28.0% for the period of 1988–1999, 1999–2011, 2011–2023 respectively. This steady increase in the built-up area is attributed to recent infrastructure development in that region, notably the impact of the new mega infrastructures such as the six-lane Dhaka-Bhanga Expressway and Padma Multipurpose Bridge [68,69]. Meanwhile, vegetation, waterbodies, and barren lands decrease significantly to transform into agricultural lands. For instance, during the study period, waterbodies went through substantial changes that showed a reduction from 2441 ha in 1988 to 675 ha in 2023, reporting a 72.4% decline. In addition, barren lands were recorded at 7753 ha (in 1988) which reduced to 2864 ha in 2023, reflecting a 63.1% decrease over 35 years. Similarly, vegetation area slightly decreased from 1988 to 2023 and was recorded as 8334 ha, and 8209 ha, indicating a reduction of 1.5%. A similar decrease pattern was reported in a previous study for the period of 1990–2017 [12]. This change in waterbodies can be ascribed to landfilling of waterbodies, sand deposition in the rivers, low annual rainfall, rapid population growth, and other anthropogenic factors [70,71]. Hence, even though notable agricultural land was converted into the built-up area in many places, a substantial surge in agriculture was achieved due to the gain from large fallow and waterbodies [20]. 3.2. Accuracy assessment of LULC maps Several metrics, such as training error matrix, Kappa coefficient, overall accuracy, producer accuracy, consumer accuracy, validation accuracy, and validation error were used to assess the accuracy level of the classified images in 1988, 1999, 2011, and 2023. 30% of validation reference points were randomly selected from the total samples for the assessment. The accuracy of the classified LULC maps was evaluated using Kappa statistics and overall accuracy, as described in Table 3. Notably, the overall classification accuracy was verified at 99% for each of the years: 1988, 1999, 2011, and 2023. The overall accuracy above 85% indicates excellent precision in the LULC classification [72]. Table 3. Overall accuracy and Kappa coefficient for year-wise training samples. Year Overall accuracy Kappa Coefficient 1987 99% 0.99 1999 99% 0.99 2011 99% 0.99 2023 99% 0.99 3.3. Trend analysis of LULC categories Linear regression analysis is an effective tool to understand the correlation between dependent and independent variables [44]. Fig. 7 indicates that independent variables such as waterbodies, barren lands, and built-up areas collectively account for around two-thirds of the variation in the dependent variable, agriculture. Download : Download high-res image (356KB) Download : Download full-size image Fig. 7. a) Correlation between barren lands and agriculture; b) Correlation between waterbodies and agriculture; c) Correlation between built-up and agriculture Additionally, low R2 values indicate the nonlinear LULC change during the study period. To evaluate the relationships with agriculture versus barren lands, waterbodies, and built-up, correlation coefficient, R2 values were derived from the linear equations, resulting 0.82, 0.64, and 0.74 respectively. In general, regression analysis confirms that the decrease in barren lands and waterbodies facilitates agriculture to flourish. 3.4. Spatial distribution of NDVI Two indices, NDVI and NDWI, were used to enhance LULC identification and improve the accuracy of the classification. These indices effectively distinguished the selected five land cover features. NDVI is widely used for monitoring vegetation health [41]. Fig. 8 showcased the spatial distribution of NDVI values for four specified years, ranging from −0.36 to 0.73. Particularly, forest, shrubs, and agriculture areas were visible in the NDVI map, characterized by dark and light green hues, with values hovering around 0.4 or higher. In contrast, permanent waterbodies and temporary waterbodies appeared as light red to dark red with values below zero, while built-up areas appeared whitish to light red, indicating values slightly above zero. Download : Download high-res image (1MB) Download : Download full-size image Fig. 8. Spatial distribution of NDVI for 1988 (8a). 1991 (8b), 2011 (8c) and 2023 (8d). Fig. 8a depicted lower NDVI values across most of the study area, indicating the LULC in 1988, while random higher values denote winter crops. Fig. 8b revealed increased areas with sparse vegetation of light green colour, alongside pockets of dark green indicating crops, possibly affected by the devastating flood in 1998. Fig. 8c and d illustrate expanded agriculture zones, with minor barren lands in the central and western sectors of the study area. The NDVI analysis highlighted a significant increase in agriculture and built-up areas over time. Similar findings were reported from another study utilizing the NDVI index [73]. Table 4 outlines the highest and lowest NDVI values recorded annually. Table 4. Year-wise highest value and lowest value of NDVI and NDWI. Year NDVI NDWI Highest Lowest Highest Lowest 1988 0.73 −0.36 0.51 −0.61 1999 0.67 −0.34 0.49 −0.56 2011 0.64 −0.12 0.22 −0.55 2023 0.72 −0.16 0.28 −0.61 3.5. Spatial distribution of NDWI NDWI serves as a significant indicator to represent crop water stress and helps to specify wetland change [41]. The study area was also assessed with the NDWI and found similar to those from NDVI. Fig. 9 illustrates the spatial distribution of NDWI values across four specified years, ranging from −0.61 to 0.51. These values indicated the presence of agricultural areas, vegetation coverage, barren lands, and areas with shallow or deep water. Download : Download high-res image (2MB) Download : Download full-size image Fig. 9. Spatial distribution of NDWI for 1988 (9a), 1999 (9b), 2011 (9c) and 2023 (9d). Agriculture areas and vegetation appeared in white to light blue hues, indicating values from −0.61 to just below zero. Meanwhile, waterbodies were shown in dark blue, with values above zero, and built-up areas occurred in white to blue, with values slightly above zero. The spatial variability of NDWI values exhibited distinct fluctuations across different years. In 1988, NDWI values were lower across most areas, except in the center and southeastern parts of the study area. By 1999, widespread areas were identified with sparse vegetation, reflected in lower values represented by light blue shades. In 2011 and 2023, NDWI values were consistently aligned with the LULC maps, showcasing transformations from barren lands and vegetation to agriculture. 4. Discussion GEE is the most powerful freely accessible tool to acquire, process, and analyze geospatial data for the study area. To categorize LULC maps accurately, various machine learning algorithms such as Random Forest (RF), Support Vector Machine (SVM), and Classification and Regression Trees (CART) are used. In this study, RF efficiently classified different land use land cover types with >99% accuracy. RF showed a similar highest accuracy in previous investigations [74,75]. In addition, previous studies reported that the SVM and CART erroneously categorized forests, waterbodies, and barren lands as vegetation and built-up areas [58,59]. To validate RF outputs, NDVI and NDWI were also utilized in this study to accurately classify the land types [76]. NDVI and NDWI involved the creation of training points and polygons for each class. Each pixel within the polygon serves as a training sample, with a known assigned value. This allows for a comparison with classified pixels, enabling the assessment of errors and precision [77]. Although the accuracy level was high, the agriculture land surge was compared with the historical field data to rationale the findings especially the increase of agricultural lands. Historical ground data support this significant land transformation. For instance, irrigated Boro rice cultivation has been increasing enormously since the independence of Bangladesh in 1971 [53,56]. In the last few decades, huge areas were brought under agriculture due to the wide access to shallow and deep tube wells for proper irrigation [78] which boosted crop production in 2020–2021 compared to 2010–2011 as shown in Fig. 10. In addition, the introduction of new and sustainable stress-tolerant crop varieties (rice, mustard, wheat onion, etc.), crop diversification, modern machinery availability, and government subsidies and support for fertilizers and seeds availability have a substantial impact on crop intensification [56,79]. Despite the lack of historical data for the whole study period, Bangladesh experienced 3% growth in cropped land and 23.4% increase in selected crop production from 2010-2011 to 2020–2021 (Table S2 and Table S3), while Bhanga showed 6.4% increase in agriculture land from 2011-2023 (Table S1). Download : Download high-res image (449KB) Download : Download full-size image Fig. 10. a) Actual cropped area change (national) and b) Actual production increase statistics (national) for 2010-11 Vs 2020–21 [56,80]. Another significant change has been recorded in the built-up areas, which increased by around 155.6% from 1988 to 2023. Almost at the same time, from 1991 to 2022, population growth in Bhanga was recorded by 36.4% as the population census reports [[81], [82], [83]]. Therefore, crop intensification was obvious to ensure the food security of the growing population, and the expansion of built-up areas indicated the livelihood pattern change among the inhabitants in the study area. Although built-up areas improve local livelihoods, ongoing land monitoring is essential for sustainable land usage and to mitigate any potential adverse impact of rapid urbanization. Hence, it is imperative to implement appropriate policies that ensure effective land use, thereby ensuring food security and fostering the economic development of the community. 5. Conclusion The study employed GIS and spatiotemporal Landsat satellite imagery, along with NDVI and NDWI indices to analyze the land use and land cover dynamics in the Bhanga subdistrict, Bangladesh, spanning from 1988 to 2023. The quantitative assessment revealed an upward trajectory in agricultural lands and built-up areas, contrasted with a declining trend in vegetation, waterbodies, and barren lands. This transformation indicates the direct impact of agricultural intensification in the study. The large expansion of agricultural lands owes credit to government support, and the introduction of high-yielding and climate-resilient new crop varieties and technologies disseminated by the Department of Agricultural Extension (DAE). This crop intensification significantly boosted crop production, ensuring greater food self-sufficiency. In contrast, more than half of the waterbodies were disappeared, which could be alarming for biodiversity and the ecosystem. It could also be noted that remaining barren land utilization might be a way forward to reduce future load on waterbodies and vegetation area coverages. This research highlights the crucial role of ongoing GIS and remote sensing-based monitoring to understand the land use change over the time to facilitate informed policymaking decisions for sustainable agricultural planning. Most past studies were focused on climate-vulnerable regions, where agricultural land predominantly experienced a significant decline. That trend, however, does not represent the entire landscape of the country. Hence, the current study reports an opposite but positive trend, emphasizing the need for continuous monitoring of land use change to tailor region-specific initiatives instead of adopting generalized strategies to ensure food security and sustainability. By offering valuable insights, this study proposes actionable recommendations for policymakers. This finding can pave the way for sustainable agricultural development in Bangladesh. It is also imperative to adopt proper policies that account for region-specific variations in land use to ensure resilience and sustainable growth in the face of evolving environmental consequences. Although there are many other methods to determine the LULC change, our methods have been demonstrated to produce comparable results with minimum efforts that can be adopted for a similar scope around the world. Nevertheless, we acknowledge the importance of utilizing other methods with onsite validation. To prepare a more realistic decision-making inputs, continuous LULC change monitoring using geospatial technologies needs to continue with bigger samples including severely climate-vulnerable and less vulnerable regions. Funding The authors did not receive support/funding from any organization for the submitted work. CRediT authorship contribution statement Mst Irin Parvin: Writing – original draft, Validation, Software, Methodology, Investigation, Formal analysis, Conceptualization. Md Anwarul Islam: Writing – review & editing, Project administration, Conceptualization. Mst Farida Perveen: Writing – review & editing, Supervision, Resources. Md. Roushon Jamal: Writing – review & editing. Md. Jamal Faruque: Writing – review & editing. Billal Hossen: Writing – review & editing, Methodology, Data curation. Khayrul Islam: Writing – review & editing, Visualization, Validation, Software, Formal analysis. Md. Manik Sarker: Writing – review & editing. Declaration of competing interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Appendix A. Supplementary data The following is the Supplementary data to this article: Download : Download Word document (29KB) Multimedia component 1. Data availability Data will be made available on request. References [1] T.A. Fajobi, O.A. Raheem, F. Olajide Food is inevitable but the land is mismanaged: exploring the impacts of local actors utilization of land resources on food security in Nigeria Geojournal, 88 (1) (2023), pp. 971-984, 10.1007/s10708-022-10670-z View in ScopusGoogle Scholar [2] S. Roy, et al. Examining the nexus between land surface temperature and urban growth in Chattogram Metropolitan Area of Bangladesh using long term Landsat series data Urban Clim., 32 (2020), Article 100593, 10.1016/j.uclim.2020.100593 View PDFView articleView in ScopusGoogle Scholar [3] N. Yaqoob, et al. The effects of agriculture productivity, land intensification, on sustainable economic growth: a panel analysis from Bangladesh, India, and Pakistan Economies Environ. Sci. Pollut. Control Ser., 30 (55) (2023), pp. 116440-116448, 10.1007/s11356-021-18471-6 View in ScopusGoogle Scholar [4] M.B. Rashid, et al. Land transform and its consequences due to the route change of the Brahmaputra River in Bangladesh Int. J. River Basin Manag., 21 (1) (2023), pp. 113-125, 10.1080/15715124.2021.1938095 View in ScopusGoogle Scholar [5] A. Parven, et al. Impacts of disaster and land-use change on food security and adaptation: evidence from the delta community in Bangladesh Int. J. Disaster Risk Reduc., 78 (2022), Article 103119, 10.1016/j.ijdrr.2022.103119 View PDFView articleView in ScopusGoogle Scholar [6] J. Nash, et al. Accelerating Agriculture Productivity Improvement in Bangladesh: Mitigation Co-benefits of Nutrient and Water Use Efficiency. CCAFS Info Note International Center for Tropical Agriculture, Rome (2016) Colombia, and Food and Agriculture Organization of the United Nations https://www.fao.org/3/i6423e/i6423e.pdf Google Scholar [7] X. Wang Managing land carrying capacity: key to achieving sustainable production systems for food security Land, 11 (4) (2022), p. 484, 10.3390/land11040484 View PDFView articleGoogle Scholar [8] S. Islam, S. Ghosh, M. Podder Fifty years of agricultural development in Bangladesh: a comparison with India and Pakistan SN Business & Economics, 2 (7) (2022), p. 71, 10.1007/s43546-022-00240-3 Google Scholar [9] M.N. Hasan, et al. Trends in the Availability of Agricultural Land in Bangladesh. Soil Resource Development Institute (SERDI), Ministry of Agriculture, Dhaka, Bangladesh (2013) Available from: https://www.researchgate.net/profile/Md-Islam-2270/publication/272817216_Trend_in_the_availability_of_agricultural_land_in_Bangladesh/links/54ef57790cf2495330e1ff84/Trend-in-the-availability-of-agricultural-land-in-Bangladesh.pdf Google Scholar [10] M. Uddin, et al. Land inundation and cropping intensity influences on organic carbon in the agricultural soils of Bangladesh Catena, 178 (2019), pp. 11-19, 10.1016/j.catena.2019.03.002 View PDFView articleView in ScopusGoogle Scholar [11] L. Mueller, et al. Agricultural landscapes: history, status and challenges Exploring and Optimizing Agricultural Landscapes (2021), pp. 3-54, 10.1007/978-3-030-67448-9 Google Scholar [12] A.Y.M. Abdullah, et al. Spatio-temporal patterns of land use/land cover change in the heterogeneous coastal region of Bangladesh between 1990 and 2017 Rem. Sens., 11 (7) (2019), p. 790, 10.3390/rs11070790 View in ScopusGoogle Scholar [13] M. Javaid, et al. Enhancing smart farming through the applications of Agriculture 4.0 technologies International Journal of Intelligent Networks, 3 (2022), pp. 150-164, 10.1016/j.ijin.2022.09.004 View PDFView articleView in ScopusGoogle Scholar [14] M.M.I. Chowdhury, et al. A review of policies and initiatives for climate change mitigation and environmental sustainability in Bangladesh Environ. Dev. Sustain., 23 (2021), pp. 1133-1161, 10.1007/s10668-020-00627-y View in ScopusGoogle Scholar [15] N.P. Jellason, et al. A systematic review of drivers and constraints on agricultural expansion in Sub-Saharan Africa Land, 10 (3) (2021), p. 332, 10.3390/land10030332 View in ScopusGoogle Scholar [16] P. Barua, S.H. Rahman, M.H. Molla Impact of river erosion on livelihood and coping strategies of displaced people in South-Eastern Bangladesh International Journal of Migration and Residential Mobility, 2 (1) (2019), pp. 34-55, 10.1504/IJMRM.2019.103275 Google Scholar [17] J. Hellin, E. Fisher Climate-smart agriculture and non-agricultural livelihood transformation Climate, 7 (4) (2019), p. 48, 10.3390/cli7040048 View in ScopusGoogle Scholar [18] E. Tsoraeva, et al. Environmental issues of agriculture as a consequence of the intensification of the development of agricultural industry E3S Web of Conferences, 215 (2020), Article 02003, 10.1051/e3sconf/202021502003 View in ScopusGoogle Scholar [19] M.R. Jamal, et al. Cropping systems intensification and diversification: risk, vulnerability and adaptation in southwest coastal Bangladesh Int. J. Sustain. Dev. World Ecol., 29 (8) (2022), pp. 677-694, 10.1080/13504509.2022.2073615 View in ScopusGoogle Scholar [20] X. Xu, et al. Dynamics and drivers of land use and land cover changes in Bangladesh Reg. Environ. Change, 20 (2020), pp. 1-11, 10.1007/s10113-020-01650-5 Google Scholar [21] C. Liping, S. Yujun, S. Saeed Monitoring and predicting land use and land cover changes using remote sensing and GIS techniques—a case study of a hilly area, Jiangle, China PLoS One, 13 (7) (2018), Article e0200493, 10.1371/journal.pone.0200493 View in ScopusGoogle Scholar [22] M.M. Hossain Bhuiyan, et al. Monitoring dynamic land-use change in rural–urban transition: a case study from Hathazari Upazila, Bangladesh Geology, Ecology, and Landscapes, 3 (4) (2019), pp. 247-257, 10.1080/24749508.2018.1556034 View in ScopusGoogle Scholar [23] H.M. Arifeen, et al. Determine the land-use land-cover changes, urban expansion and their driving factors for sustainable development in Gazipur Bangladesh Atmosphere, 12 (10) (2021), p. 1353, 10.3390/atmos12101353 View in ScopusGoogle Scholar [24] P.K. Mallupattu, J.R. Sreenivasula Reddy Analysis of Land Use/land Cover Changes Using Remote Sensing Data and GIS at an Urban Area, Tirupati, India, 2013, The Scientific World Journal (2013), 10.1155/2013/268623 Google Scholar [25] E.A. Alshari, B.W. Gawali Development of classification system for LULC using remote sensing and GIS Global transitions proceedings, 2 (1) (2021), pp. 8-17, 10.1016/j.gltp.2021.01.002 View PDFView articleGoogle Scholar [26] S.S. Rwanga, J.M. Ndambuki Accuracy assessment of land use/land cover classification using remote sensing and GIS Int. J. Geosci., 8 (4) (2017), p. 611, 10.4236/ijg.2017.84033 Google Scholar [27] C.M. Viana, I. Girão, J. Rocha Long-term satellite image time-series for land use/land cover change detection using refined open source data in a rural region Rem. Sens., 11 (9) (2019), p. 1104, 10.3390/rs11091104 View in ScopusGoogle Scholar [28] A.-A. Kafy, et al. Monitoring the effects of vegetation cover losses on land surface temperature dynamics using geospatial approach in Rajshahi City, Bangladesh Environmental Challenges, 4 (2021), Article 100187, 10.1016/j.envc.2021.100187 View PDFView articleView in ScopusGoogle Scholar [29] M.A. Sresto, et al. A GIS and remote sensing approach for measuring summer-winter variation of land use and land cover indices and surface temperature in Dhaka district, Bangladesh Heliyon, 8 (8) (2022), Article e10309, 10.1016/j.heliyon.2022.e10309 View PDFView articleView in ScopusGoogle Scholar [30] M. Schaefer, N.X. Thinh Evaluation of land cover change and agricultural protection sites: a GIS and remote sensing approach for Ho Chi Minh City, Vietnam Heliyon, 5 (5) (2019), Article e01773, 10.1016/j.heliyon.2019.e01773 View PDFView articleView in ScopusGoogle Scholar [31] A.H. Chughtai, H. Abbasi, I.R. Karas A review on change detection method and accuracy assessment for land use land cover Remote Sens. Appl.: Society and Environment, 22 (2021), Article 100482, 10.1016/j.rsase.2021.100482 View PDFView articleGoogle Scholar [32] M.S. Islam, et al. Vegetation cover change analysis during 1989-2020 of coastal barguna district, Bangladesh using remote sensing and GIS technology International Review for Spatial Planning and Sustainable Development, 11 (2) (2023), pp. 259-277, 10.14246/irspsd.11.2_259 View in ScopusGoogle Scholar [33] H.M. Abdullah, et al. Spatiotemporal dynamics of new land development in Bangladesh coast and its potential uses Remote Sens. Appl.: Society and Environment, 14 (2019), pp. 191-199, 10.1016/j.rsase.2019.04.001 View PDFView articleView in ScopusGoogle Scholar [34] M.B. Rashid, et al. Salinity-induced change in green vegetation and land use patterns using remote sensing, NDVI, and GIS techniques: a case study on the southwestern coast of Bangladesh Case Studies in Chemical and Environmental Engineering, 7 (2023), Article 100314, 10.1016/j.cscee.2023.100314 View PDFView articleView in ScopusGoogle Scholar [35] M.G. Miah, et al. A changing coastal ecosystem: cox's Bazar in southeastern coastal region of Bangladesh Environ. Dev. Sustain., 25 (7) (2023), pp. 6141-6165, 10.1007/s10668-022-02297-4 View in ScopusGoogle Scholar [36] M.Z. Hoque, et al. Future impact of land use/land cover changes on ecosystem services in the lower meghna river estuary, Bangladesh Sustainability, 12 (5) (2020), p. 2112, 10.3390/su12052112 View in ScopusGoogle Scholar [37] Z. Ahmed, S. Ambinakudige Does land use change, waterlogging, and salinity impact on sustainability of agriculture and food security? Evidence from southwestern coastal region of Bangladesh Environ. Monit. Assess., 195 (1) (2023), p. 74, 10.1007/s10661-022-10673-w View in ScopusGoogle Scholar [38] A.M. Dewan, Y. Yamaguchi Using remote sensing and GIS to detect and monitor land use and land cover change in Dhaka Metropolitan of Bangladesh during 1960–2005 Environ. Monit. Assess., 150 (2009), pp. 237-249, 10.1007/s10661-008-0226-5 View in ScopusGoogle Scholar [39] S. Hossen, M. Hossain, M. Uddin Land cover and land use change detection by using remote sensing and GIS in Himchari National Park (HNP), Cox's Bazar. Bangladesh J. Sci. Technol. Environ. Inform, 7 (2) (2019), pp. 544-554, 10.18801/jstei.070219.56 Google Scholar [40] K. Islam, et al. Land use classification and change detection by using multi-temporal remotely sensed imagery: the case of Chunati wildlife sanctuary, Bangladesh The Egyptian Journal of Remote Sensing and Space Science, 21 (1) (2018), pp. 37-47, 10.1016/j.ejrs.2016.12.005 View PDFView articleView in ScopusGoogle Scholar [41] M.J. Faruque, et al. Monitoring of land use and land cover changes by using remote sensing and GIS techniques at human-induced mangrove forests areas in Bangladesh Remote Sens. Appl.: Society and Environment, 25 (2022), Article 100699, 10.1016/j.rsase.2022.100699 View PDFView articleView in ScopusGoogle Scholar [42] A.-A. Kafy, et al. Predicting changes in land use/land cover and seasonal land surface temperature using multi-temporal landsat images in the northwest region of Bangladesh Heliyon, 7 (7) (2021), Article e07623, 10.1016/j.heliyon.2021.e07623 View PDFView articleView in ScopusGoogle Scholar [43] J. Saha, et al. Assessing seasonal dynamics of land surface temperature (LST) and land use land cover (LULC) in Bhairab, Kishoreganj, Bangladesh: a geospatial analysis from 2008 to 2023 Case Studies in Chemical and Environmental Engineering (2023), Article 100560, 10.1016/j.cscee.2023.100560 Google Scholar [44] S. Hussain, et al. Using GIS tools to detect the land use/land cover changes during forty years in Lodhran District of Pakistan Environ. Sci. Pollut. Control Ser., 27 (2020), pp. 39676-39692, 10.1007/s11356-019-06072-3 View in ScopusGoogle Scholar [45] O.R. Abd El-kawy, et al. Temporal detection and prediction of agricultural land consumption by urbanization using remote sensing The Egyptian Journal of Remote Sensing and Space Science, 22 (3) (2019), pp. 237-246, 10.1016/j.ejrs.2019.05.001 View PDFView articleView in ScopusGoogle Scholar [46] A. Ishtiaque, et al. Remote sensing-based research for monitoring progress towards SDG 15 in Bangladesh: a review Rem. Sens., 12 (2020), p. 691, 10.3390/rs12040691 View in ScopusGoogle Scholar [47] A.B. Ahady, G. Kaplan Classification comparison of landsat-8 and sentinel-2 data in google earth engine, study case of the city of kabul Int. J. Electron. Govern., 7 (1) (2022), pp. 24-31, 10.26833/ijeg.860077 View in ScopusGoogle Scholar [48] S. Bhattacharjee, et al. Land-use and land-cover change detection in a north-eastern wetland ecosystem of Bangladesh using remote sensing and GIS techniques Earth Systems and Environment, 5 (2) (2021), pp. 319-340, 10.1007/s41748-021-00228-3 View in ScopusGoogle Scholar [49] M. Ali, et al. The Padma Multipurpose bridge: a link towards a prosperous future through connectivity and mobility MIST International Journal of Science and Technology, 10 (2022), pp. 1-7, 10.47981/j.mijst.10(02)2022.385(01-07 Google Scholar [50] N. Hafiz, et al. Variations in water and deposited sediment qualities in the tidal river basins of Bangladesh and their implications for TRM success Sustainability, 15 (18) (2023), Article 13855, 10.3390/su151813855 View in ScopusGoogle Scholar [51] B. Roy, et al. Climate-induced flood inundation for the Arial Khan River of Bangladesh using open-source SWAT and HEC-RAS model for RCP8. 5-SSP5 scenario SN Appl. Sci., 3 (6) (2021), p. 648, 10.1007/s42452-021-04460-4 View in ScopusGoogle Scholar [52] M. Rashid, et al. Oilseed Crops in Rice-Based Cropping Systems in Southern Bangladesh. Revitalizing the Ganges Coastal Zone: Turning Science into Policy and Practices Conference Proceedings. Colombo, Sri Lanka: CGIAR Challenge Program on Water and Food (CPWF). 600pp (2015), p. 405 Available from: https://www.researchgate.net/publication/279189345_Oilseed_crops_in_rice-based_cropping_systems_in_southern_Bangladesh Google Scholar [53] M.S. Alam, et al. Effect of arsenic contamination on rice production and human health: insights from farmers perceptions 7 (2011), 10.22004/ag.econ.290622 Google Scholar [54] R. Sarker, et al. Effect of planting method on onion (Allium cepa L.) bulb production in Faridpur region of Bangladesh Archives of Agriculture and Environmental Science, 2 (2) (2017), pp. 63-67 https://core.ac.uk/download/pdf/335017219.pdf CrossRefGoogle Scholar [55] T. Chakrobarty, et al. Adoption and adaptability of modern Aman rice cultivars in Faridpur Region–Bangladesh SABRAO J. Breed. Genet, 53 (4) (2021), pp. 659-672, 10.54910/sabrao2021.53.4.9 View in ScopusGoogle Scholar [56] BBS Yearbook of agricultural statistics-2022 Bangladesh Bureau of Statistics, Ministry of Planning, Bangladesh. Available from: https://bbs.gov.bd/site/page/3e838eb6-30a2-4709-be85-40484b0c16c6/Yearbook-of-Agricultural-Statistics (2023) Google Scholar [57] M.R. Jamal, et al. Trajectories of cropping system intensification under changing environment in south-west coastal Bangladesh Int. J. Agric. Sustain., 20 (5) (2022), pp. 722-742, 10.1080/14735903.2021.1975436 View in ScopusGoogle Scholar [58] Z. Zhao, et al. Comparison of three machine learning algorithms using google earth engine for land use land cover classification Rangel. Ecol. Manag., 92 (2024), pp. 129-137, 10.1016/j.rama.2023.10.007 View PDFView articleView in ScopusGoogle Scholar [59] K.N. Loukika, V.R. Keesara, V. Sridhar Analysis of land use and land cover using machine learning algorithms on google earth engine for Munneru River Basin, India Sustainability, 13 (24) (2021), Article 13758, 10.3390/su132413758 View in ScopusGoogle Scholar [60] F. Khan, B. Das Land use classification and land cover assessment using accuracy matrix for Dhamtari District, Chhattisgarh, India Suranaree J. Sci. Technol, 29 (2022), pp. 1-8 Available from: https://www.researchgate.net/profile/Farhan-Khan-36/publication/361666631_LAND_USE_CLASSIFICATION_AND_LAND_COVER_ASSESSMENT_USING_ACCURACY_MATRIX_FOR_DHAMTARI_DISTRICT_CHHATTISGARH_INDIA/links/62bed83a0bf6950edea0dfbc/LAND-USE-CLASSIFICATION-AND-LAND-COVER-ASSESSMENT-USING-ACCURACY-MATRIX-FOR-DHAMTARI-DISTRICT-CHHATTISGARH-INDIA.pdf Google Scholar [61] M.G. Erunova, O.E. Yakubailik Monitoring of agricultural vegetation development based on time series analysis of satellite data. 26th International Symposium on Atmospheric and Ocean Optics Atmospheric Physics, 11560 (2020), pp. 1113-1117, 10.1117/12.2575663 Google Scholar [62] B.E. Taiwo, et al. Monitoring and predicting the influences of land use/land cover change on cropland characteristics and drought severity using remote sensing techniques Environmental and Sustainability Indicators, 18 (2023), Article 100248, 10.1016/j.indic.2023.100248 View PDFView articleView in ScopusGoogle Scholar [63] S.K. McFeeters The use of the Normalized Difference Water Index (NDWI) in the delineation of open water features Int. J. Rem. Sens., 17 (7) (1996), pp. 1425-1432, 10.1080/01431169608948714 View in ScopusGoogle Scholar [64] J.W. Rouse, et al. Monitoring Vegetation Systems in the Great Plains with ERTS, 351, NASA Spec. Publ. (1974), p. 309 Available from: https://ntrs.nasa.gov/citations/19740022614 View in ScopusGoogle Scholar [65] B.-C. Gao NDWI—a normalized difference water index for remote sensing of vegetation liquid water from space Rem. Sens. Environ., 58 (3) (1996), pp. 257-266, 10.1016/S0034-4257(96)00067-3 View PDFView articleView in ScopusGoogle Scholar [66] B. Hossain, M.S. Sohel, C.M. Ryakitimbo Climate change induced extreme flood disaster in Bangladesh: implications on people's livelihoods in the Char Village and their coping mechanisms Progress in Disaster Science, 6 (2020), Article 100079, 10.1016/j.pdisas.2020.100079 View PDFView articleView in ScopusGoogle Scholar [67] J. Shrestha, et al. Sustainable intensification in agriculture: an approach for making agriculture greener and productive Journal of Nepal Agricultural Research Council, 7 (2021), pp. 133-150, 10.3126/jnarc.v7i1.36937 Google Scholar [68] M. Rashid, M.R. Kabir, M.M. Ibne Zaman Padma bridge in global media and boost to SDGs in Bangladesh Journalism and Media, 4 (2) (2023), pp. 445-466, 10.3390/journalmedia4020029 View in ScopusGoogle Scholar [69] A. Quddus, J.D. Kropp Constraints to agricultural production and marketing in the lagging regions of Bangladesh Sustainability, 12 (10) (2020), p. 3956, 10.3390/su12103956 View in ScopusGoogle Scholar [70] N.A. Jareen, et al. Understanding flood plain aquaculture practice: an evidence from Daudkandi Cumilla District, Bangladesh (2023), 10.21203/rs.3.rs-3288563/v1 Google Scholar [71] S.A. Dar, et al. Identification of Anthropogenic Contribution to Wetland Degradation: Insights from the Environmetric Techniques Stochastic Environmental Research and Risk Assessment (2021), pp. 1-15, 10.1007/s00477-021-02121-x View in ScopusGoogle Scholar [72] M. Aboelnour, B.A. Engel Application of remote sensing techniques and geographic information systems to analyze land surface temperature in response to land use/land cover change in Greater Cairo Region, Egypt J. Geogr. Inf. Syst., 10 (1) (2018), pp. 57-88, 10.4236/jgis.2018.101003 Google Scholar [73] G.M. Gandhi, et al. Ndvi: vegetation change detection using remote sensing and gis–A case study of Vellore District Proc. Comput. Sci., 57 (2015), pp. 1199-1210, 10.1016/j.procs.2015.07.415 View PDFView articleView in ScopusGoogle Scholar [74] M. Junaid, et al. Mapping LULC dynamics and its potential implication on forest cover in malam jabba region with landsat time series imagery and random forest classification Sustainability, 15 (3) (2023), p. 1858, 10.3390/su15031858 View in ScopusGoogle Scholar [75] S.N. Ahmed Harishnaika, Land use and land cover classification using machine learning algorithms in google earth engine Earth Science Informatics, 16 (4) (2023), pp. 3057-3073, 10.1007/s12145-023-01073-w Google Scholar [76] T.D. Bhaga, et al. Investigating the effectiveness of Landsat-8 OLI and Sentinel-2 MSI satellite data in monitoring the effects of drought on surface water resources in the Western Cape Province, South Africa Remote Sens. Appl.: Society and Environment, 32 (2023), Article 101037, 10.1016/j.rsase.2023.101037 View PDFView articleView in ScopusGoogle Scholar [77] F. Pech-May, et al. Mapping of land cover with optical images, supervised algorithms, and google earth engine Sensors, 22 (13) (2022), p. 4729, 10.3390/s22134729 View in ScopusGoogle Scholar [78] M.S. Alam, M. Husain, M. Abedin Farmer-led Innovations in Rice Farming System in the Flood-Prone Ecosystem of Bangladesh The Agriculturists (2007), pp. 6-13, 10.3329/AGRIC.V5I1.5192 Google Scholar [79] C. Del Ninno, P.A. Dorosh, L.C. Smith Public policy, markets and household coping strategies in Bangladesh: avoiding a food security crisis following the 1998 floods World Dev., 31 (7) (2003), pp. 1221-1238, 10.1016/S0305-750X(03)00071-8 View PDFView articleView in ScopusGoogle Scholar [80] BBS Yearbook Of Agricultural Statistics (2012) 2012. Available from https://bbs.gov.bd/site/page/3e838eb6-30a2-4709-be85-40484b0c16c6/Yearbook-of-Agricultural-Statistics Google Scholar [81] Population Bbs, Housing Census 2022 Bangladesh bureau of statistics, ministry of planning, Bangladesh Available from: https://bbs.portal.gov.bd/sites/default/files/files/bbs.portal.gov.bd/page/b343a8b4_956b_45ca_872f_4cf9b2f1a6e0/2023-09-27-09-50-a3672cdf61961a45347ab8660a3109b6.pdf (2022) Google Scholar [82] BBS S.a.I. Division (Ed.), Population And Housing Census (2011) 2015: Bangladesh Bureau of Statistics, Ministry of Planning, Bangladesh. Available from: http://203.112.218.65:8008/WebTestApplication/userfiles/Image/PopCen2011/Com_Faridpur.pdf Google Scholar [83] BBS Bangladesh Population Census 1991 (1994) Bangladesh Bureau of Statistics, Ministry of Planning, Bangladesh. Available from: http://data.bbs.gov.bd/index.php/catalog/37 Google Scholar Cited by (0) © 2024 The Authors. Published by Elsevier Ltd. Recommended articles Melaleuca leaves extract as eco-friendly inhibitor for low carbon steel in sulfuric acid Case Studies in Chemical and Environmental Engineering, Volume 9, 2024, Article 100657 Femiana Gapsari, …, Tobias S. Julian View PDF Effects of sodium alginate-poly(acrylic acid) cross-linked hydrogel beads on soil conditioner in the absence and presence of phosphate and carbonate ions Case Studies in Chemical and Environmental Engineering, Volume 9, 2024, Article 100642 Endar Hidayat, …, Hiroyuki Harada View PDF Influence of organic compost treatment on biometric patterns and sensory attributes of fresh green beans ( L.) Case Studies in Chemical and Environmental Engineering, Volume 9, 2024, Article 100630 Ronald Fernando Rodriguez Espinoza, …, Reynaldo Justino Silva-Paz View PDF Show 3 more articles About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 9:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: 3-5 sentences addressing the points within the prompt.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The paper proposes the Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery, soil moisture maps) using data fusion techniques (e.g., Kalman filtering) to enhance the accuracy and resolution of automated irrigation systems.

They utilize machine learning algorithms and advanced control strategies to optimize irrigation scheduling by considering multiple factors such as soil moisture levels, weather conditions, crop water requirements, and plant health.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Log in Find a journal Publish with us Track your research Search Cart Home Earth Science Informatics Article Extraction of Surface Water Bodies using Optical Remote Sensing Images: A Review Review Published: 12 February 2024 Volume 17, pages 893–956, (2024) Cite this article Download PDF Access provided by University of Nebraska-Lincoln Earth Science Informatics Aims and scope Submit manuscript R Nagaraj & Lakshmi Sutha Kumar  309 Accesses Explore all metrics Abstract Surface Water Mapping (SWM) is essential for studying hydrological and ecological phenomena. SWM holds significant importance in water resource management, environmental conservation, and disaster preparation. Recently, rapid urbanization, overutilization, and environmental degradation have seriously impacted surface water bodies. Rapid advancement in remote sensing data and technologies has promoted the SWM to a new era. Timely and precise SWM is crucial for water resource preservation and planning. This paper critically reviews the extraction of surface water bodies from optical sensors using Spectral Indices (SI), Machine Learning (ML), Deep Learning (DL), and Spectral unmixing with a comprehensive overview of satellite data, study areas, methodologies, results, advantages, and disadvantages, especially over the last decade. The extensive review of SWM reveals that DL outperforms ML and SI. DL outperforms other methods because it incorporates crucial elements in network design, like skip connections, dilation convolution, attention mechanisms, and residual blocks. The spectral unmixing addresses the mixed pixel misclassification problem. Some SI, ML, and DL methods are implemented, and the results are discussed. Integrating the DL technique with spectral unmixing, fusing multisource data (SAR and optical) and integrating it with ancillary data (DEM) is the future direction for improved SWM. Similar content being viewed by others LWAMNNet: A novel deep learning framework for surface water body extraction from LISS-III satellite images Article 16 December 2023 BathyNet: A Deep Neural Network for Water Depth Mapping from Multispectral Aerial Images Article Open access 30 April 2021 A novel flood/water extraction index (FWEI) for identifying water and flooded areas using sentinel-2 visible and near-infrared spectral bands Article 29 February 2024 Introduction Water is a precious and finite resource essential for maintaining ecosystems and biodiversity, supporting economics, and promoting global human development (Karpatne et al. 2016). It serves various purposes in society, including drinking water supply, irrigation, industrial processes, hydropower generation, climate regulation, tourism, and other vital functions (Vörösmarty et al. 2010; Vorosmarty et al. 2000). Surface water bodies, encompassing lakes, ponds, rivers, reservoirs, wetlands, seas, and oceans, store water on Earth's surface. Seas and oceans are distinct due to their high salinity compared to other freshwater bodies. The water in surface water bodies is dynamic over time due to natural and human-induced factors, reflecting its diverse roles in society. Natural factors influencing surface water bodies include precipitation, climate change, evaporation, floods, and drought. On the other hand, human-induced factors, such as deforestation, urban expansion, waste disposal, illegal water abstraction, excessive irrigation, and industrial practices, significantly affect these surface water bodies (Vorosmarty et al. 2000). The blue region indicates areas where land has transformed into water, whereas the green areas indicate regions where water has transformed into land from 1985–2015 (Donchyts et al. 2016) (shown in Fig. 1). Fig. 1 Land and water dynamics through Heat map (Donchyts et al. 2016) Full size image Accurate water body extraction provides valuable insights into their extent and dynamics, which are crucial in effective water management. Traditionally, the water extent of surface water bodies was measured through direct field observations (Field Surveys with Global Positioning Systems (GPS) and hydrological measurements (Hydrological Gauges)). Although these techniques are accurate, their labor-intensive, time-consuming nature and spatial and temporal limitations have prompted the exploration of alternative technologies. After field surveying, aerial photography (images captured by cameras fixed in airplanes) was used for surface water body extraction. However, it has limited coverage, weather dependency, requires high costs and resources, and limited accessibility to remote areas. Remote Sensing (RS) technologies offer a transformative solution by visually representing the Earth's surface. Technological advancements in satellite sensors (Kosari et al. 2020), encompassing optical (multispectral and hyperspectral (Ghaderizadeh et al. 2022)) and microwave (Sharifi et al. 2015) (Synthetic Aperture Radar (SAR)) enable the acquisition of detailed information about the Earth's surface (Huang et al. 2018). The comprehensive coverage and frequent observation capabilities of satellite images make them invaluable for various applications such as agriculture monitoring (Zamani et al. 2022), forest biomass estimation (Sharifi and Amini, 2015; Sharifi et al. 2016), oil pollution detection (Mohammadi et al. 2021), and flood assessment (Tariq et al. 2022; Sharifi, 2021). The information about the optical and microwave sensors is explained next. The RS images are captured by two different sensors, namely, microwave and optical sensors. The microwave sensor uses microwave radiation (longer than visible light) to obtain the features of the Earth's surface (Schumann and Moller, 2015). The optical sensor uses solar radiation to collect the features of the Earth's surface. The optical sensor offers advantages over microwave sensors, such as higher spatial resolution, color and topographic information, easy calibration and validation, and cost-effectiveness. Despite having more advantages, the optical sensors provide images only during the daytime and are sensitive to atmospheric interference, such as clouds and haze. The selection of optical or Microwave sensors is contingent upon the specific objectives of the RS application and the natural characteristics of the study region. Combining the Digital Elevation Model (DEM) with satellite images also provides accurate water body extraction. With the massive amount of RS data, advanced processing technology is required to significantly enhance the efficiency and accuracy of water body extraction from RS datasets. The various techniques used for Surface Water Mapping (SWM) from the optical sensors are the primary focus of this article. A brief review of sensors used for surface water body extraction is covered in section \"Sensors used in Surface Water Body Extraction\". Section \"Surface Water Mapping Techniques\" provides a review of SWM using spectral indices, ML techniques, DL techniques, Transformation and optimization methods, and Spectral unmixing. The experimental results and discussions of a few spectral indices, ML, and DL techniques for SWM are provided in section \"Experiment Results and Discussions\". Section \"Summary and Challenges\" summarizes the SWM methods and challenges. Finally, the conclusions are drawn, and the direction of future research is identified in section \"Conclusion and Future scope\". Sensors used in Surface Water Body Extraction Spatial, temporal, spectral, and radiometric resolution are critical aspects of optical sensors influencing the quality of RS imagery for various applications. Spatial resolution refers to the level of detail captured by the individual pixels (measured in meters (m)). The temporal resolution reflects the revisit time of the same observational area (measured in days). Spectral resolution signifies a sensor's capability to record the Earth's surface across varying wavelengths (expressed in the number of bands). The radiometric resolution refers to the amount of information captured and represented by each pixel. Optical images are categorized into coarse (>200m), medium (5m to 200m), and high resolution (<5m) based on spatial resolution. Coarse Spatial Resolution Sensors The coarse spatial resolution sensors acquire images with lower levels of detail, where each pixel covers a large surface area on the earth, offering high temporal resolution and broad coverage. They are suitable for monitoring regional patterns and large-scale events such as oceans, floods, and the atmosphere. Examples include Advanced Very High Resolution Radiometer onboard National Oceanic and Atmospheric Administration satellites (NOAA/AVHRR) (Jain et al. 2006), Moderate Resolution Imaging Spectroradiometer (MODIS) (Feng et al. 2012), Suomi National Polar-orbiting Partnership - Visible Infrared Imaging Radiometer Suite (Suomi NPP-VIIRS) (Huang et al. 2016), MEdium Resolution Imaging Spectrometer (MERIS), and Sentinel-3 Ocean and Land Color Instrument (OLCI). The characteristics of coarse spatial resolution sensors are outlined in Table 1. The medium spatial and high spatial resolution sensors used for SWM are provided in Tables 2 and 3, respectively. Table 1 Characteristics of coarse spatial resolution sensors Full size table Table 2 Characteristics of medium spatial resolution sensors Full size table Table 3 Characteristics of high spatial resolution sensors Full size table Medium Spatial Resolution Sensors The medium-resolution sensor balances spatial detail and coverage area, suitable for regional Land Use Land Cover (LULC) mapping, environmental monitoring, disaster management, agriculture and crop monitoring, and water resource management. Examples include Land Satellite (Landsat) (Corbane et al. 2019), Systeme Probatoire d’Observation dela Tarre (SPOT) (Zhang and Kerle, 2008), Advanced Spaceborne Thermal Emission and Reflection Radiometer (ASTER) (Perez-Planells et al. 2017), Sentinel-2A/2B (Zheng et al. 2018), and Linear Imaging Spectral Sensor -III (LISS-III) (Mukherjee et al. 2010). High Spatial Resolution Sensors High-resolution sensors provide fine spatial detail for local-scale LULC mapping, infrastructure analysis, and change detection. However, limitations such as reduced spectral information, coverage area, shadow problem, high atmospheric interference, and high costs restrict their universal usage. Examples are Quickbird (Xu et al. 2004), IKONOS (Sidle et al. 2007), Rapideye (Klemenjak et al. 2012), WorldView-2 (Malinowski et al. 2015), GaoFen (GF-1/2) (Zhang et al. 2014), and ZiYuan (ZY-3) (Li et al. 2016a). The False Color Composite (FCC) of Landsat 8 OLI, Sentinel-2, and LISS-III (Medium resolution multispectral images) are depicted in Fig. 2. These images were captured over the Vaigai dam in the Theni district of Tamil Nadu, southern India. In FCC images, vegetation appears red, water bodies are dark blue, and urban areas have gray or pinkish hues. Fig. 2 FCC of Medium Resolution Satellite images; (a) Landsat 8 OLI image captured on 7th February, 2021; (b) Sentinel-2A image captured on 4th March, 2023; (c) LISS-III image captured on 24th January, 2019. Full size image Reflectance Characteristics of Land Cover Types The Earth's surface comprises diverse land cover types, each with unique reflectance characteristics influenced by sunlight interaction. Figure 3 illustrates the spectral reflectance of different land cover types (Chen et al. 2022). Fig. 3 Spectral reflectance of Landcover types (Chen et al. 2022) Full size image Vegetation, including forests and grasslands, exhibits strong absorption in blue and red wavelengths due to the presence of chlorophyll and less absorption (high reflectance) in green wavelength (Green peak). Near Infrared (NIR) and Short Wave Infra Red (SWIR) wavelengths experience less absorption (high reflectance) in vegetation. Soil reflectance increases as wavelength extends from visible to infrared regions, depending on soil type, moisture content, organic matter, surface roughness, and lighting conditions. The water absorbs more radiation in blue wavelength due to water molecules and dissolved substances. However, the water reflectance increases in green wavelength compared to blue wavelength. The water absorbs more radiation in red than blue and green wavelengths. However, the high turbidity water has higher reflectance in red wavelength than non-turbid water. The water absorbs more infrared wavelengths (NIR and SWIR), resulting in low reflectance. The reflectance of other artificial materials, such as constructions, bridges, roads, etc., depends on the materials involved in the construction process (Chen et al. 2022). RGB images are not helpful in mapping surface objects due to limited spectral information (red, green, and blue). RS uses multispectral or hyperspectral imagery to overcome these constraints. RS data recorded in many spectral bands provides more spectral information for each pixel, which enables a more precise differentiation of materials and surface properties. Multispectral images acquire images beyond the RGB spectrum, including near-infrared, red-edge, and shortwave infrared bands. Hyperspectral images collect data in many contiguous narrow spectral regions for even higher resolution. The RS images with high spectral, spatial, and temporal resolution accurately map the surface land cover types. Surface Water Mapping Techniques The SWM of RS images was broadly classified into Spectral Indices (SI), Machine Learning (ML), Deep Learning (DL), and Spectral unmixing. This paper extensively reviews surface water body extraction using the SI, ML, DL, and Spectral unmixing methods (Fig. 4). Fig. 4 Surface Water Mapping Methods Full size image Surface Water Mapping using Spectral Indices The RS images obtained from the satellite have several bands. Each band responds with different spectral reflectances for the various surface objects (artificial or natural). Spectral reflectance is used to discriminate the non-water and water regions. Numerous spectral indices formulated to delineate the water bodies from the RS images are discussed below, and a few are outlined in Table 4. Figure 5 depicts the evolution of spectral indices over time. Table 4 SWM using spectral indices Full size table Fig. 5 Timeline diagram of development of major spectral indices Full size image The Normalized Difference Vegetation Index (NDVI) is frequently employed to measure vegetation greenness. The NDVI scale spans from -1 to 1, with negative NDVI values indicating the presence of water content (Tucker, 1979). The Tasseled cap wetness (TCW) index was developed to segment the water bodies using six bands of Landsat TM images. The surface reflectance of six bands is transformed to a new dimension with maximum variability for generating coefficients. The visible bands have higher coefficients than the Infrared bands due to the reflectance of water in those regions. A threshold of zero delineates non-water and water pixels (Crist and Cicone, 1984; Crist, 1985). Normalized Difference Water Index (NDWI) (McFeeters, 1996) is a spectral index formulated using NIR and green bands. The spectral bands green and NIR provides high and low spectral reflectance in the water regions, respectively. The water and other terrestrial features are denoted by positive and zero or negative values, respectively, on the NDWI. However, NDWI suffers from built-up noise. The built-up land shows the same reflectance pattern as water, resulting in positive values in NDWI. The Normalized Difference Moisture Index (NDMI) was formulated using NIR and SWIR bands of Landsat TM imagery to extract the vegetation liquid water content in vegetation. NDMI spans from -1 to 1, wherein high values correspond to water content (Wilson and Sader, 2002). The individual sum457 was used to delineate the wetland ditches (Al-Khudhairy et al. 2002). The Landsat band 4 is enough to determine the ditches surrounded by vegetation (grasslands). Adding bands 5 and 7 to the index helped to detect ditches surrounded by bare soil (gravel tracks). This approach performs well for the ditch-carrying pixels comprised of water and homogeneous non-water features (vegetation or bare soil). It is worth noting that the pixels composed of water features and two or more non-water features, high spatial resolution images, will be the better choice. The combined density slicing and sub-pixel approach were used for accurate water body extraction in the Prairie Pothole Region (PPR). The integrated method provides good accuracy on large and small water bodies (Sethre et al. 2005). The flood mapping in the Koa catchment, Bihar, was carried out using the density slicing method, Tasseled Cap Transformation, and NDWI. The experimentation utilized Landsat TM and LISS-III imagery. NDWI performs better than density slicing (fails in mixed and high turbidity pixels) and Tasseled Cap Transformation (overestimates water area and fails to eliminate shadow) (Jain et al. 2005). To mitigate the issue of built-up noise during water extraction, a Modified Normalized Difference Water Index (MNDWI) was introduced (Xu, 2006). The average Middle Infrared (MIR) radiation value in built-up areas exceeds average green band values. So, MNDWI employs MIR rather than NIR to identify water regions. This adjustment enhances the differentiation between built-up land and water, leading to a more effective suppression of built-up land noise. The Principal Component Analysis (PCA) converts the original spectral bands into uncorrelated Principal Components (PC). SWM was performed by combining PCA and fuzzy c-means (FCM) clustering. Here, a variant of PCA is applied on the training field (a polygon of water and land) to generate output bands. The first two output bands obtain the four PCs (two for water and two for land). The FCM accepts these PCs and produces a segmentation map (Lira, 2006). The Water Index 2006 (WI2006) was formulated by the weighted natural logarithm of Top of Atmosphere (TOA) reflectance scaled linearly to Digital Number (DN) and the interaction terms. The logarithm transformation demonstrated superior performance compared to the original reflectance, possibly due to the exponential decrease in reflectance with wavelength in clear-deep water (Danaher and Collett, 2006). WI2006 shows better performance in detecting all water types. Water Index (WI) was formulated by combining the TCW (weighted transformation) and NDWI3 (normalization) to extract the shoreline changes on Landsat TM and ETM+ Imagery (Ouma and Tateishi, 2006). The NDWI3 was formulated using Band 4 (NIR) and Band 5 (SWIR) of Landsat ETM+ bands. The NDWI3 performs better in extracting sharper shoreline estimation (river-lake confluence, complicated and irregular shoreline, and mountain-lake interface) than NDWI1, NDWI2, NDWI4, and NDWI5. TCW can provide better results in extracting narrow portions of lakes. The results obtained by WI were 22.33% higher than TCW and 43.19% higher than NDWI3. Integrating the Normalized Difference Pond Index (NDPI) with a conditional classifier identifies small ponds in the RS images. This method also identifies the vegetation cover within the ponds. In the same paper, the authors also proposed the Normalized Difference Turbidity Index (NDTI) to determine the turbid/turbid-free water within the ponds (Lacaux et al. 2007). Enhanced Water Index (EWI) and Geographic Information System (GIS) are combined to extract the semidry watercourse from the noise in semi-arid regions. EWI was computed using green, NIR, and SWIR Bands (Yan et al. 2007). The water indices, namely sum457, ND5723, and ND571, were integrated (SNN) for SWM from Landsat images (Beeri and Phillips, 2007). Combining ND5723 and ND571 with sum457 mitigates the impact of aerosols and other atmospheric disturbances. This method performs better in extracting water from objects with similar water spectral patterns. The CIWI (Combined Index for Water Body Identification) was developed using Vegetation Index (VI) and NIR MODIS data (Mo et al. 2007). CIWI discriminates water from other background noises, including vegetation cover, clouds, and built-up areas. CIWI monitored the surface dynamics of the Pinglong reservoir, Guangxi Province, China, from 2004 to 2005 using MODIS data. Using Landsat 5 TM data, (Cao et al. 2008) developed the Revised Normalized Difference Water Index (RNDWI) for SWM, utilizing the red and SWIR bands. RNDWI can extract narrow water bodies by eliminating the effects of dark shadow and mixed pixel problems. The precision of RNDWI was better than single-band thresholding and MNDWI. Additionally, the surface dynamics of water of the Miyun reservoir were analyzed from 1984-2005 using Landsat TM images. The results show that the water distribution of the reservoir was highest in 1996 and then started declining from 1994 to 2004. In 2004, the reservoir water extent was one-third of the 1996 water extent. The NEW spectral index was proposed using band 1 and band 7 of Landsat TM imagery (Xiao and Zhu, 2010). The results indicate that this spectral index outperforms NDWI and MNDWI in urban areas. The Water Ratio Index (WRI) is a band ratio technique with visible bands in the numerator and Infrared bands in the denominator. The values greater than one in WRI represent water pixels (Shen and Li, 2010). NDWI-B was calculated using blue and NIR bands capable of extracting larger and smaller water bodies and wetland areas. Due to high spatial resolution and temporal resolution, the HJ satellite's CCD images were used in (Wei et al. 2011). In Lu et al. 2011, a novel water index was formulated by integrating the NDVI–NDWI, NIR, and SLOPE data for extracting water bodies from HJ-1A/B satellite images. The SLOPE data, derived from 90m spatial resolution DEM data produced by the Shuttle Radar Topography Mission (SRTM), effectively removes mountain shadows. Similarly, the NIR band diminishes the influence of artificial urban structures. This combined approach amplifies the distinction between water bodies and the surrounding landscapes. The NDVI–NDWI, and NIR were employed with Otsu thresholding to partition water bodies. The threshold of 10 was employed for SLOPE data to distinguish between shadows and water bodies. This strategy demonstrated improved performance compared to using the NDVI and NDWI indices in isolation, leading to enhanced water features. However, it does exhibit notable limitations, including an inclination to overestimate small water bodies and underestimate slender river channels. The Pixel-Based (PB) and Object-Based (OB) methods are used for water body extraction from RS images. The PB method extracts water bodies and types by the following approach: 1) green band (Threshold < 0.18) to extract clear water; 2) NIR band < 0.2 & NDVI < 0.3 to extract green water; 3) SWIR < 0.15 to extract turbid water. The slopes < 20° was used to eliminate the mountain shadows. OB method uses bottom-up segmentation with scale parameter = 15, shape factor = 0.1, and compactness = 0.5 for water body extraction. The integration of PB and OB performs better than MNDWI, NDWI, and Maximum Likelihood Classifier (MLC) +NIR and provides better Producer Accuracy (PA). However, it overestimates the water (shadows, coal fields misclassified as water) (Sun et al. 2012). The New Water Index (NWI) was formulated by replacing the band blue with the band green and NIR with the sum of the reflectance of Infrared bands in NDWI. NWI provides better results in mountain regions (Feng, 2012). In Qiao et al. 2012, the adaptive water extraction based on NDWI on Landsat ETM+ imagery was developed. First, the preliminary water map was generated using NDWI/ RNDWI. The water pixels in the RNDWI have smaller values (less than zero) rather than larger values (more than zero) in NDWI. The modified peak and valley method selected the most fitting pixels, and the direction and Signal-to-Noise Ratio (SNR) information removes the shadow pixels present in fitting pixels. This step ensures that the fittest pixels are only pure water pixels. Afterward, seed pixels are selected from the fittest pixels, creating the local water area by region growing technique. Finally, each local area's boundary pixels are identified and used as centers of template windows. Within each window, the background pixels were reconfirmed based on statistics (spectral mean and standard deviation of water and background pixels) and local area classification. This method performs better than segmentation by the valley between the two highest peaks, segmentation by a valley with the highest drop height, MLC, and Support Vector Machine (SVM) by the performance metrics OA (96.5%) and kappa (0.946). Automated Water Extraction Index (AWEI) was proposed for water body extraction from RS data (Landsat 5 TM data), mainly in dark shadow and low/high albedo surfaces. The AWEI can also classify edge pixels (mixed pixels) with high accuracy and a constant threshold. AWEI outperforms MNDWI and ML classifiers with a kappa coefficient (Feyisa et al. 2014). The three water indices, namely NDWI (NDWIo5,3), MNDWI (NDWIo6,3), and NDWIo7,3, were developed for SWM of the Yangtze River Basin (YRB) and the Huaihe River Basin, China, from Landsat 8 OLI Imagery (Du et al. 2014). Since the zero threshold includes some built-up areas as water bodies (Commission Error (CE)), these three water indices were combined with Otsu thresholding. The three NDWIs were analyzed in three different regions: Region 1 (Dongpu Reservoir), Region 2 (Gorges Reservoir and the Yangtze River), and Region 3 (Shahu Lake and Dong Lake). The experiment results show that MNDWI (NDWIo6,3) performs better in extracting water bodies (in all the regions) than the other water indices, NDWIo5,3 and NDWIo7,3. The findings also show a few misclassifications due to mixed-pixel problems and overestimation of small water features. The spectral unmixing technique can solve this misclassification problem. An Automated Method for Extracting Rivers and Lakes (AMERL) was developed by integrating water indices (MNDWI, NMDWI, AWEI_sh, AWEI_nsh) with image processing techniques (Jiang et al. 2014). AMERL was developed to extract wide rivers, lakes, and narrow rivers of Hebei, Jiangxi, and Ningxia regions from Landsat imagery. The pure land and water pixels were segmented by thresholding. Nevertheless, the challenge lies in effectively applying thresholding to the mixed pixels at the edges of water bodies. To address this issue, image processing techniques were performed on a water indices map (output of water indices) to accurately detect water pixels at the edges. The procedure for extracting wide rivers and lakes differs from narrow river extraction. The wide rivers and lakes were extracted by applying a watershed segmentation algorithm on the gradient image of water indices. The gradient image was determined using the Sobel operator. The narrow river extraction was performed by linear feature enhancement (LFE), line tracking, and noise reduction. The LFE image highlights the linear spatial forms of water maps. Then, the line tracking applies thresholds to extract the river networks from LFE images. Finally, the noises, such as mountain shadows, roads, and small segments, were removed by applying thresholding based on the green band, SWIR band, and segment size. Since AMERL aims to improve mixed water pixel identification, they measure the edge performance using metrics such as edge OA, edge Commission Error, edge Omission Error (for wide rivers and lakes), correctness, completeness, and quality (for narrow rivers). The MNDWI and AWEI_sh perform better than NDWI and AWEI_nsh. Noises like roads intersecting with waterways and shadows are still challenging. In Maglione et al. 2014, NDVI and NDWI were used to delineate the shoreline in the Phlegrean area of the Campania Region, Italy, using WorldView-2 Imagery. The pansharpening technique was applied to transfer the spatial resolution of the panchromatic image to a multispectral image. Pan-sharpened images provide enhanced spectral and spatial resolution, improving geometric accuracy. The Correlation Coefficients (CC) and Erreur Relative Globale Adimensionnelle de Synthèse (ERGAS) are the metrics used to analyze the quality of pan-sharped results. Then, the NDVI and NDWI were applied to the pan-sharped images for shoreline extraction. The threshold values used to differentiate land and water were calculated using the Maximum likelihood method. The results reveal that the NDWI derived from pan-sharpened images yields superior outcomes than the NDVI derived from original and pan-sharpened images. The Index of Water Surfaces (IWS) was calculated using blue and SWIR bands of Landsat ETM images. IWS differentiates surface water from other surfaces such as chott, sebkha, and wadis (Hassani et al. 2015). The Index (I) is a new spectral index formulated by combining NDWI and proposed mNDWI. The MNDWI and mNDWI are distinct spectral indicators. While the MNDWI relies on Green and SWIR1 bands, the mNDWI utilizes Blue and NIR bands to detect water bodies. The Index (I) performs better in delineating shallow water bodies but suffers from spectral noise (Mishra and Prasad, 2015). In Yao et al. 2015, the Urban Water Extraction Method (UWEM) was developed that combines the new spectral index named High Resolution Water Index (HRWI) and the dark shadow prediction model. UWEM was designed to eliminate the misclassification caused by dark shadows. The HRWI was formulated using red, green, and NIR bands, whose coefficients were obtained by SVM. The SVM was trained to classify water and non-water classes except dark shadow cover types. The dark shadow prediction model was trained by SVM using the spectral contrast between inner and outer edge pixels in the green band, along with NDWI, as its input features. The dark shadow prediction model distinguishes small water bodies and dark shadows. After removing large water bodies from the NIR band (thresholded with 0.1), the inputs are fed to the dark shadow prediction model to separate dark shadows and small water bodies. The dark shadow mask was created and applied to the output of HRWI to remove dark shadows. The UWEM outperforms NDWI and NDWI with dark shadow detection (NDWIS) regarding kappa, CE, and Omission Error (OE). UWEM provides better extraction accuracy for different water types (water with turbidity and pollution). Using TOA data without atmospheric correction, water bodies filled with aquatic vegetation and small water bodies connected with dark shadows reduce the accuracy. The NDWI and Land Surface Water Index (LSWI) (Chandrasekar et al. 2010) have high CE due to the misclassification of other land cover objects as water, especially wetland vegetation. To suppress the noise due to vegetation, (Menarguez, 2015) developed the water body extraction rule using the existing water and VI. The two independent constraints, namely NDWI plus VI and LSWI plus VI, were developed by integrating each of the two water indices (NDWI and LSWI) with NDVI and Enhanced Vegetation Index (EVI) (Huete et al. 2002). The pixels that satisfy the constraints were classified as water pixels. Combining the VI with water indices significantly reduces the misclassification due to vegetation noise, especially in wetland areas with lush vegetation. However, the misclassifications due to the built-up areas and shadows are not significantly reduced. In Zhai et al. 2015, the surface water body extraction results of water indices from Landsat 8 OLI and TM imagery were analyzed. The water indices such as NDWI, MNDWI, AWEI, and NDVI were used to extract the water bodies from these two sensors. Two distinct locations within Tianjin city were chosen as the designated study areas: Hexi district (region with abundant buildings, building shadows, and asphalt roads and bridges) and Nanyang Pier Village (village area dominated by vegetation, ponds, and rivers). The water body extraction results of Landsat 8 OLI (OA=97.61%, kappa=0.68) are slightly better than Landsat TM data (OA= 97.10%, kappa=0.63) in the city area. Also, the MNDWI and AWEI perform better in discriminating shadow water from shadow and built-up areas than the other two water indices (NDVI and AWEI). The threshold stability is better in Landsat 8 OLI than in Landsat TM data. In Sharma et al. 2015, the Superfine Water Index (SWI) was created to globally identify water bodies by utilizing MODIS data. SWI was generated by substituting the green band present in NDWI with the Saturation component derived from the Hue-Saturation-Value (HSV) transformation of the red (R), green (G), and blue (B) bands of the MODIS data. The normalization difference between the saturation values and NIR makes the SWI range between -1 and 1. The SWI significantly differentiates surface water and other land cover elements. The random walker algorithm was employed on the SWI image to generate a water segmentation map aided by training data encompassing continental and coastal areas. The graph-based random walker approach segments images by considering each pixel as a node connected to its neighbors by edges weighted by similarity. This method needs seed pixels with labels. The likelihood of a random walker originating from any unlabeled pixel reaching a pre-labeled pixel can be influenced by a small number of initial seeds. By assigning each pixel to the label associated with the highest calculated probability, the process enhances the segmentation of the image. The SWI performs better in identifying narrow water bodies, extracting non-turbid and turbid water bodies covered by dense vegetation, and discriminating surface water bodies from dark soils, shadows, and volcanic eruptions. SWI outperforms MNDWI, AWEI, and NDWI by the performance metrics PA (86.93%), User Accuracy (UA) (98.57%), and Overall Accuracy (OA) (92.84%). The coastline dynamics of Hatiya Island, Bangladesh, from 1989-2010 were analyzed using Landsat Imagery (Ghosh et al. 2015). Coastal regions are susceptible to sea level rise and extreme climatic changes (cyclones, precipitation, and surface temperatures). The coastline dynamics can be analyzed through water body extraction along the coastal line, followed by the amount of erosion and accretion determination. The MNDWI, a water index, was utilized for coastline water body extraction and estimated the water extent for 1989, 2000, and 2010. The OA and kappa for water body extraction were more than 93% and 0.83, respectively. Substantial erosion occurred in the northern and western parts of the island, while sedimentation led to land gain (accretion) in the southern and eastern areas. The Water Index 2015 (WI2015) was proposed employing the same training data and statistical analysis of WI2006, except for input (WI2015 uses surface reflectance as input). The linear discriminant analysis (LDA) was used to determine the intercepts and coefficients. WI2015 compared with AWEI, MNDWI, NDWI, TCW, and WI2006. The misclassification (OE) was observed in all the water indices due to the same spectral reflectance (green-brown), slender water bodies, and mixed pixels (Fisher et al. 2016). NDWI-DB was computed from dark blue (coastal aerosol) and SWIR bands from Landsat 8 OLI images. The NDWI-DB accurately extracts water bodies in urban and mountainous regions by eliminating dark plants, impervious surfaces, suspended sediments, ice, snow, bedrock, shadows, etc (Li et al. 2016b). The NDWI-DB performs better than MNDWI, NEW, and slightly lower than AWEI. The new water index was formulated by merging NDWI and MSI to accurately extract the water bodies by suppressing the shadow regions (Xie et al. 2016a). The new NDWIs were formulated using eight-band WorldView-2 Imagery rather than traditional NDWI (NDWI formulated using the high-reflective and low-reflective bands such as green and NIR, respectively. A total of 20 NDWIs were formulated using high-reflective bands (Coastal, Blue, Green, Yellow, and avg1) and low-reflective bands (Red-edge, NIR1, NIR2, and avg2). The avg1 and avg2 correspond to the average of high-reflective and low-reflective bands, respectively). Similarly, NDWIsum was computed by adding all the NDWIs. First, the optimal NDWI (NDWIoptimal) was identified from the 21 NDWIs using the performance metric (kappa coefficient). The experimental results show that the NDWIs calculated from NIR2-Coastal and NIR2-Green combinations achieve the highest kappa compared to others. Therefore, either NDWINIR2-Coastal or NDWINIR2-Green can be selected as NDWIoptimal. The water segmented map provided by the NDWIoptimal suffers from shadow noise (shadows misclassified as water). To suppress the shadow noise, the MSI was combined with NDWIoptimal. The NDWI-MSI outperforms other techniques such as NDWI, SVM, MLC, SVM-MSI, and MLC-MSI by the performance metrics (PA, UA, and Kappa). Even though the NDWI-MSI performs better in suppressing the shadow noise, the seasonal variation and biochemical properties of water bodies affect the performance of NDWI-MSI. In Du et al. 2016, the performance of the MNDWI water index with a pan-sharped SWIR band was analyzed to extract water bodies in Venice coastland, Italy using sentinel-2 Imagery. The spatial resolution of green, NIR, and SWIR bands of sentinel-2 Imagery is 10m, 10m, and 20m, respectively. The NDWI10m was obtained using green and NIR bands. The MNDWI20m was obtained using an up-scaled green band (10m to 20m) and a SWIR band. Similarly, MNDWI10m was obtained using the green band and downscaled SWIR band (20m to 10m). The downscaling or pan-sharpening of SWIR was determined using four methods, namely Intensity Hue Saturation (IHS), Principal Component Analysis (PCA), À Trous Wavelet Transform (ATWT), and High Pass Filter (HPF). Quality with No Reference (QNR) is the performance indicator that measures pan-sharpening quality. HPF produces better pan-sharpening (High QNR) results than others by retaining spatial and spectral information. Therefore, the MNDWI10m image produced by HPF has a higher Correlation Coefficient (CC) and lower Root Mean Square Error (RMSE). Four MNDWI images were determined using green and four SWIR10m bands (produced by four pansharpening techniques PCA, HIS, HPF, and ATWT), namely \\({MNDWI}_{10m}^{PCA}\\), \\({MNDWI}_{10m}^{IHS},\\kern0.5em {MNDWI}_{10m}^{HPF}, and\\kern0.75em {MNDWI}_{10m}^{ATWT}\\). The \\({MNDWI}_{10m}^{ATWT}\\) performs better in extracting water bodies by suppressing built-up noise and vegetation noise. \\({MNDWI}_{10m}^{ATWT}\\) can extract accurate water bodies compared to NDWI10m, MNDWI20m, \\({MNDWI}_{10m}^{PCA}\\), \\({MNDWI}_{10m}^{IHS}, and\\kern0.5em {MNDWI}_{10m}^{HPF}\\) by the performance metrics, kappa (0.8962), OA (96.57%), CE (4.53%), and OE (10.77%). The new modified method of extracting river networks in the mountainous plateau regions (Part of Yarkant River, China) was developed using Landsat 8 OLI imagery (Gao et al. 2016). The study area has a lot of dense and fine tributaries and seasonal rivers, surrounded by mountainous and plateau regions. The new modified method combines the binary water maps of three methods (B1, B2, and B3). The k-means clustering and likelihood classification provide the binary image B1. The NDWI and TCW provide the binary images B2 and B3, respectively. The final water map is obtained using (B1 ∩ (B2 ∪ B3). This method could accurately extract fine and dense tributaries and artificial canals in the alluvial plain of the Yarkant River. However, terrain shadows showing similar spectral responses of water are not suppressed well. The modified approach achieves an OA of 94.18%, which is 3.64% higher than TCW and NDWI. The Enhanced Water Index (EWI) was formulated by integrating two principal components and mNDWI (Yang and Du, 2017). EWI exhibits superior effectiveness compared to the General Water Index (GWI), NWI, and MNDWI. Relying solely on the NIR band in NDWI and the SWIR band in MNDWI might result in omitting some water characteristics, including turbid water, minor water bodies, and pixels in shaded areas. The Weighted Normalized Difference Water Index (WNDWI) was formulated to extract water bodies utilizing NIR and SWIR bands. WNDWI compared with NDWI, MNDWI, and AWEI for zero threshold, Otsu threshold, and multiple threshold methods. The outcomes of the experiments demonstrate that WNDWI exhibits superior performance at zero thresholds compared to non-zero thresholds (Guo et al. 2017). In Zou et al. 2017, the constraint (MNDWI plus VI) using MNDWI (water index) and VI (EVI and NDVI) was developed to effectively suppress the vegetation and built-up noises for SWM. Due to superior performance in suppressing the built-up noise, MNDWI is favored over NDWI and is merged with a VI to mitigate the impact of vegetation-induced noise. Including EVI in the constraint aims to eliminate noise stemming from wetland vegetation. The pixels that satisfy the constraint are classified as water pixels. After successful water body extraction, the four indicators, such as year-long, maximum, seasonal, and average water maps, were determined to analyze the water extent throughout the year. Additionally, the variations of water extent with climatic variables (rainfall and temperature) were analyzed. The rainfall and temperature correlate positively and negatively with the water extent. MNDWI plus VI has more OE than CE. Because this method effectively suppresses noise from built-up areas and vegetation. However, misclassifying the water pixels as non-water in the boundary region is the primary reason for the high OE. MNDWI plus VI shows better results in the plateau region. The performance of nine water indices was analyzed independently on three different RS images for SWM (Zhou et al. 2017). The spectral indices such as TCW, MNDWI, NDWI, AWEI, SNN, LSWI, MNDWI plus VI, LSWI plus VI, and NDWI plus VI were used to extract surface water bodies on Sentinel-2, Landsat 8 OLI, and Landsat 7 ETM+ images. The performance metrics such as OA, Kappa, PA, and UA were used for evaluation. The results show that NDWI and NDWI plus VI methods have high OA (95.7%), kappa (0.915), and UA (94.3%) than other water indices on Landsat 8 OLI. Similarly, the TCW method records the lowest OA (88.7%), kappa (0.772), and UA (82.6%) than other water indices (built-up areas misclassified as water). Due to the Poyang Lake basin's flat topography and warm climate, the input has pure water pixels without shadows and snow. The study reveals that NDWI performs better than integrated approaches. The performance of water indices was better in Sentinel-2 and Landsat 8 OLI images due to the following reasons: 1) High Signal-to-Noise Ratio (SNR); 2) Enhanced dynamic range that prevents band saturation in highly reflective objects; 3) Narrow spectral bands avoid the water absorption feature; 4) Improved calibration and 12- bit radiometric resolution. The performance of water indices was similar in sentinel-2 and Landsat 8 OLI images due to similar band wavelength and radiometric resolution. The efficacy of water indices was confined to the specified study area, namely the Poyang Lake basin. The modified optimization water index (MOWI) was formulated using all the spectral bands of Landsat 8 OLI imagery (Moradi et al. 2017). The coefficients of each band were calculated using Particle Swarm Optimization (PSO). MOWI provides good results in extracting water bodies under different environmental conditions (shadows of buildings, clouds, and mountains). Multi-Band Water Index (MBWI) was computed from the green, red, NIR, SWIR1, and SWIR2 spectral bands. MBWI accurately extracts water bodies by removing noises from dark built-up surfaces and mountainous shadows. Also, MBWI has the potential to identify the water bodies from different surface covers, turbidity, seasonal and climatic variations. MBWI performs better than AWEI, MNDWI, NDWI, TCW, and WI2006 (Wang et al. 2018a). Enhanced mNDWI (EMNDWI) extracts water features using band composites and decorrelation stretch. EMNDWI perform slightly better in identifying narrow river bodies and brown watercolor (eliminates the distractions by bushes, tree, and shadows) (Nugraha et al. 2018). The WI2018 was developed to extract water bodies using coastal aerosol, red, NIR, and SWIR1 bands of Landsat 8 OLI images. The coefficients and threshold are determined using Bayesian Optimization. The WI2018 provides better results than NDWI, MNDWI, and WI2015 (Raheem, 2018). In Yang et al. 2018, the urban SWM was developed based on a noise prediction strategy. The L2A Bottom of Atmosphere (BOA) data was obtained by pre-processing the L1C sentinel-2 imagery. The AWEI_sh and MNDWI were applied to BOA data for obtaining initial water maps. The difference between the two water maps generates the noise map. The noise map refers to non-water built-up areas such as shadows, dark objects, and extremely high albedo surfaces. The unsupervised Iterative Self Organizing Data Analysis Technique (ISODATA) classification technique classifies two types of noise ROI: low-albedo and extremely high-albedo noises. Then, Constrained energy minimization (CEM) was employed to determine the noise prediction map based on prior noise samples. The two noise maps were obtained by applying low-threshold (0.4) and high-threshold (1.2) for extremely high albedo and low albedo object areas, respectively. The final water segmentation map was obtained by subtracting these two noise maps from AWEI_sh. This method performs better than AWEI_sh and SVM in terms of performance metrics such as PA (92.65%), UA (94.79%), OA (99.13%), and Kappa (0.932). The two-step urban water index (TSUWI) was developed for SWM from high-resolution RS images (Wu et al. 2018). Extracting water bodies within urban regions posed difficulties owing to the presence of shadows and low albedo objects, which exhibit spectral reflectance similar to water. TSUWI was formulated using two subindexes: the Urban Water Index (UWI) and the Urban Shadow Index (USI). The UWI and USI were created by combining various spectral bands and band ratios. The coefficients of UWI and USI were determined using Linear SVM. In UWI, the linear SVM was trained to classify three classes (water, dark shadows, and other land cover types) using feature vectors such as red, green, and NIR bands. The UWI creates temporary segmented maps with three classes (water, light and dark shadows, and others). The USI was trained on temporary segmented maps using the feature vectors (NIR/G, G/R, and B/G) to distinguish water from light and dark shadows. Finally, TSUWI was formulated by combining UWI and USI. The TSUWI outperforms NDWI, HRWI, and SVM by the performance metrics kappa and total error (including CE and OE). The TSUWI accurately extracts urban water bodies in various water (chemical proportion, turbidity, depth) and environmental conditions. The atmospheric correction, radiometric calibration, Seasonal variations in the sun's angle, and seasonal changes in water bodies affect the accuracy. The Multi-Spectral Water Index (MuWI) was constructed for SWM from Sentinel-2 Imagery (Wang et al. 2018b). MuWI can produce 10-m water maps without a pan-sharpening technique. MuWI has two forms: Complete (MuWI-C) and Refined (MuWI-R). The MuWI was formulated using the Normalized Difference (ND) of sentinel-2 bands. Ex: ND (2,3) indicates the normalized difference between band 2 and band 3. The coefficients of MuWI were generated using SVM. The SVM was trained on 6 sentinel-2 bands (red, green, blue, NIR, SWIR1, and SWIR2) and 15 ND as input attributes and target labels (non-water and water). The MuWI-R is the refined version of MuWI-C, having highly weighted coefficients and includes ND computed from SWIR bands. MuWI is compared with traditional water indices such as NDWI, AWEI, and MNDWI by the performance metric, OA, CE, OE, and Kappa. MuWI-C performs better than MuWI-R. The result shows that MuWI performs better in extracting low-albedo surfaces (bridges, asphalt roads, built-up shadows, cloud shadows, and vegetation shadows) and high-albedo surfaces (sunlight contaminations) than other water indices. However, MuWI has some CE mainly due to building, vegetation shadows, and sunlight contamination. Several water indices were analyzed for SWM in the Nepal region from Landsat 8 OLI images (Acharya et al. 2018). The area was encompassed by a single frame that spans diverse terrains, encompassing plains (at 60 meters elevation) to towering Himalayan peaks (reaching 8848 meters). This region features a wide array of surface water with different depths, turbidity levels, temperatures, and degrees of vegetation coverage. The different surface water bodies observed in the region are ice water with snow cover, narrow rivers in hilly and flat lands, urban ponds, and broad and shallow braided rivers. Initially, the water indices, namely NDWI, NDVI, MNDWI, and AWEI, were used to extract the water bodies. The standard thresholds may not accurately extract surface water bodies with more confusing environmental noises (forest, shadow, snow, and clouds). Therefore, optimal thresholds were determined using the trial-and-error method. The performance metrics such as PA, UA, OA, and kappa were used to evaluate the performance of water indices. Although many water indices perform better in flat and hilly regions, their performance was inadequate in the Himalayan terrain characterized by ice water and snow coverage. MNDWI and AWEI struggled to distinguish snow cover and shadows, while NDVI and NDWI exhibited better performance, primarily for pure water pixels. The combination of water indices NDWI with AWEI_sh with NDVI provides satisfactory results. Combining elevation data (DEM) and water indices improves the extraction accuracy. The Elevation with NDWI and NDVI (Elev_NDWnVI) provides better OA (96.38%) and kappa (0.8979) than other indices. NDVI and NDWI were applied to extract surface water above and below 665 m, respectively. In Landsat 8 imagery, the NIR band was employed for SWM due to its superior ability to differentiate between water and non-water features. The NIR with dynamic thresholding (obtained using a geoprocessing model) performs better than MNDWI, NDWI, and AWEI (Mondejar and Tongco, 2019). The same technique (MNDWI plus VI) was used for SWM and analyzed the surface dynamics of lakes (>1 km2) in the Mongolian Plateau (MP) from 1991 to 2017 on Landsat Imagery (Zhou et al. 2019). The lake area and number show decreasing trends from 1991 to 2009. After that, it started increasing due to increased rainfall from 2009. The surface dynamics of lakes were significantly affected by natural and anthropogenic factors. The multiple index water detection rule (MIWDR) named AWEI plus VI was developed using AWEI and VI (EVI and NDWI) (Deng et al. 2019). The pre-processing procedure involved the utilization of the Fmask algorithm to eliminate clouds, cloud shadows, and ice/snow. Then, after finding the necessary indices, the MIWDR rule was applied to delineate the surface water bodies. Finally, the JRC Global surface water occurrence layer was employed to rectify misclassifications caused by hill shadows and other noises. The AWEI plus VI accurately extracts water bodies in urban environments by reducing noise from wetland vegetation, built-up areas, and building and mountain shadows. AWEI plus VI performs better in extracting water bodies at low-altitude regions than in high-altitude regions. By taking advantage of the Global Earth Engine (GEE) cloud platform, the large-scale and long-term SWM was analyzed from 1984-2018 in the YRB region. Additionally, the extent of seasonal and permanent water bodies was analyzed from 1984-2018. The Proposed Index (PI) was proposed by combining NDWI and mNDWI to minimize the influence of cloud shadows when identifying shallow water bodies (Jain et al. 2020). The four indices, namely MNDWI, NDWI, RNDWI, and AWEI_sh + MNDWI, were used to analyze the surface water dynamics of Miyun reservoir, Beijing, China, from 1979-2018 on Landsat Images (Lai et al. 2020). The result shows that the AWEI_sh + MNDWI outperforms the other three water indices by eliminating misclassification due to shadows and built-up objects. The reservoir’s water extent area experienced four stages: the rising stage (1979-1997), the declining stage (1997-2004), the maintaining stage (2004-2015), and the sudden rising stage (2015-2018). The surface dynamics of the reservoir are mainly influenced by the precipitation and water consumption for economic development. Similar to (Zou et al. 2017; Deng et al. 2019), (Chen et al. 2020a) developed the Arid Region Water Detection Rule (ARWDR) on water and vegetation index. In (Zou et al. 2017), due to spectral similarity, the actual water pixels showing a water index less than zero and a vegetation index greater than zero violated the water detection rule and misclassified the land pixels as water. Therefore, ARWDR adds the condition to the water index and vegetation index. ARWDR outperforms other spectral indices and water detection rule methods such as AWEI, EWI, MNDWI, RNDWI, WI_2015, SNN, AWEI plus VI, MNDWI plus VI, LSWI plus VI, and NDWI plus VI by the performance metric OA and kappa. ARWDR performs better than (Zou et al. 2017) in areas with sparse vegetation/no vegetation and bare ground. However, ARWDR also has CE and OE due to low albedo surfaces and mixed pixels. In addition, Tarim River Basin surface water dynamics (monthly, yearly, and seasonal variations) were also analyzed from 1992-2019. The results show that Tarim River Basin's seasonal and permanent water bodies show an increasing trend from 1992-2019. The effects of rainfall, evaporation, and overexploitation influence the water distribution of surface water bodies. The framework to extract the surface river network in the upper Yellow River basin using sentinel-2 imagery and SRTM 90m DEM data (Li et al. 2020). The water indices, namely RNDWI, AWEI, and MNDWI, were used to extract the water bodies. Individually, MNDWI performs better in urban areas and sandy lands, AWEI extracts water bodies very well in regions dominated by vegetation and mountainous shadows, and RNDWI extracts the small rivers in hilly areas. Among the three water indices, RNDWI with Otsu thresholding performs better and is adopted to extract water bodies in all the sub-regions than the other two indices, MNDWI and AWEI. However, while extracting a larger river network, RNDWI suffers from salt and pepper noise. Therefore, the result of RNDWI was fused with MNDWI and AWEI to extract the water bodies accurately. The water-segmented map generated by the indices is transformed into vector features for denoising (removing the background noise such as clouds, snow, vegetation, and shadows) and connectivity processing. Following the post-processing phase, the segmented map was employed to estimate river widths, which were subsequently compared against global river widths and hydrological data obtained in situ. Statistical metrics, including R-square (R2), RMSE, and Mean Bias Error (MBE), were utilized to evaluate the accuracy of river width estimation. This technique effectively captured river widths exceeding 30 meters. The MNDWI with an adaptable threshold was used for SWM in Tianjin Binhai New Area on Landsat images (Guo et al. 2020a). MNDWI effectively reduces the built-up noises and shadows in the urban environment. Dynamic thresholding used local contextual information, effectively reducing false change information. The MNDWI-based adaptive dynamic threshold outperformed the other water extraction methods — MNDWI single-band threshold, ISODATA, and multi-band spectral relationship. The experiment results showed that the lake and river areas increased while seawater areas decreased. The correlation between the surface dynamics of water and impact variables showed that climatic (precipitation) and anthropogenic factors (human activity and economic development) positively influence the water environment. Land Surface Temperature (LST) Based Water Extraction Index (LBWEI) was formulated to accurately extract water bodies in cryospheric regions. LBWEI uses NDWI and LST values to segment water bodies. The LBWEI performs better in eliminating all the impediments caused by clouds, snow, ice, and mountain shadows compared to MNDWI, NDWI, NWI, NDMI, WRI, and AWEI_sh in all weather conditions (Khalid et al. 2021). Augmented Normalized Difference Water Index (ANDWI) employs visible (Red, Green, and Blue) and infrared (NIR, SWIR1, and SWIR2) bands to increase the contrast between non-water and water pixels (Rad et al. 2021). ANDWI performs better in all types of land surfaces, such as muddy water, urban areas, dark vegetation, hydrothermal water, snow and ice particles, mountainous shadow regions, and dust storms over the water regions. The ANDWI with Otsu thresholding provides better accuracy than other water indices such as NDWI, MNDWI, AWEI, and WI. Sentinel-2 Water Index (SWI) was calculated using vegetation red edge and SWIR bands of Sentinel-2 imagery. SWI has a high contrast value, which helps in identifying pure, turbid, and saltwater effectively. SWI combined with the Otsu algorithm improves the accuracy of extracting water bodies. SWI performs well in extracting larger and smaller water bodies in bare land and eliminating shadows in urban areas (Jiang et al. 2021). The Proposed Water Index (PWI) was proposed to extract the water bodies in three regions: Florida, Shanghai, and New York. The PWI outperforms DeepLabV3 models and other spectral indices in terms of F1-Score and Kappa (James et al. 2021). In Ning and Lee, 2021, the water indices and mathematical morphological operation were combined to extract the river networks in Taiwan on Landsat 7 ETM+ and Landsat 8 OLI Imagery. The water indices, namely MNDWI, NDWI, and AWEI, were used to extract the water bodies. Following the extraction of water bodies, a sequence of mathematical morphological processes was applied to retain the outlines of the river networks. Mathematical morphology considers parameters like size, shape, context, and other attributes to uphold the integrity of edge information. Mathematical morphology involves defining structural elements, applying dilatation and erosion, and opening and closing operations. The opening operation smooths the contours, disconnects small discontinuities, and eliminates thin protrusions. Like opening, closure smooths the contour. It narrows long, thin gaps, fills small holes, and contour line ruptures. The structural element size of four extracts river networks with fewer misclassifications. MNDWI and NDWI are best for braided rivers, and AWEI for meandering rivers. AWEI_nsh achieved the OA of 96.1% for the SE=4. The Improved Spectral Water Index (IWI) was formulated to extract muddy coastlines from Landsat 8 OLI imagery (Tang et al. 2022). The spectral reflectance of silty mudflats and sediment-water are similar, reducing accuracy. IWI is expressed by two high-reflectance bands (blue and green) and low-reflectance bands (SWIR1 and SWIR2). The square ratio of these two band combinations amplifies the reflectance of sediment water. It reduces the reflectance of silty mudflats, which forms two groups (high and low-sediment water and other classes). The difference between these groups is approximately 0.5, which follows the bimodal distribution. The IWI with the Otsu Algorithm can accurately extract muddy coastlines from offshore. Although IWI extracts artificial offshore structures and silty mudflats with higher accuracy, it has some misclassification in the deep water. IWI can extract the offshore from the coastline with different tidal conditions. At low tide, IWI enhances the separability of silty mudflats from sediment water. Similarly, IWI enhances the separability of coastal vegetation from sediment water at high tide. IWI performs better than NDWI, MNDWI, RNDWI, EWI, and AWEI. In Liu et al. 2022, several Landsat water indices (MNDWI, AWEI, and WI2015) were analyzed on sentinel-2 imagery to extract water bodies in Guangzhou city. In sentinel-2, the SWIR bands have 20 m spatial resolution and 10 m visible and NIR bands. Area-to-Point Regression Kriging (ATPRK), Gram–Schmidt (GS) Pan-Sharpening, and bilinear interpolation (BIL) approaches were used to downsample the 20m SWIR bands to 10m. After down-sampling, the water indices were determined to extract the water body images. Finally, the Marker-Controlled Watershed (MCW) algorithm performs segmentation in three steps: (i) Marking water and non-water using the threshold approach, (ii) generating gradient pictures using the Sobel operator, and (iii) segmenting water bodies using markers and gradient images. WI2015 + GS down-sampling has the best UA (94.48%), PA (89.10%), OA (96.79%), and kappa (0.897) among the nine combinations. WI2015 + GS approach misclassifies building shadows as water and ignores small streams. In Choudhary and Ghosh, 2022, the water indices were combined with a double-window flexible pace search (DFPS) method for extracting surface water bodies of Kaylana Lake, India, using Landsat and Sentinel-2 Imagery. The water indices with zero threshold values have some misclassification of non-water areas as water. Otsu thresholding was adopted to reduce the misclassification. However, the major drawback of the Otsu method is that it assumes that the histogram of water maps (provided by water indices) is bimodal. Therefore, the DFPS method was used to determine the optimal threshold values to segment water bodies from background objects. The DFPS method uses four steps to determine the optimal threshold. 1) Identify the water area and set the inner and outer window with the difference of 2 pixels. 2) The search range and pace are determined from the histogram of water indices. The difference between maximum and minimum histogram values from all inner window training samples obtains the search range pace is obtained by dividing the search range by the integer. The maximum histogram value and pace in the search range determine the potential threshold. 3) The success rate was calculated from each threshold value, and find the maximum and minimum success rates. 4) If the success rate difference is smaller than the error constant, the threshold with the highest success rate is optimal. The segmented water maps are obtained by applying an optimal threshold on six water indices: MNDWI, NDWI, NDVI, WRI, and AWEI. The NDWI with optimal threshold outperforms other water indices in all climatic conditions. Extracting water bodies from satellite images using the spectral indices method is a straightforward approach. However, the spectral indices method has significant challenges in determining the correct threshold for separating water from non-water pixels. Furthermore, the determination of the threshold value is contingent upon the image's acquisition time and geographical location. Therefore, the researchers searched for a new approach to extract /identify/ segment the water bodies from the RS images. ML, a subsection of Artificial Intelligence (AI), was developed to create algorithms that can learn from the patterns observed from the input data (features). Surface Water Mapping using ML Techniques ML algorithms are categorized into three main groups: supervised learning, unsupervised learning, and reinforcement learning. The supervised ML model is trained using the features and their corresponding labels (ground truth) in contrast to unsupervised ML, which does not require training. Unsupervised ML works based on pixel similarity. ML techniques are stepped in for SWM applications. Figure 6 depicts the workflow of supervised and unsupervised ML for SWM. The SWM from the RS images was performed by: 1) Identifying and extracting the required features from the input RS images. 2) Train the ML model using the extracted features and class labels. 3) The same features were extracted from the input test image and fed to trained ML for pixel classification during testing. Some pre-processing steps, like feature scaling and removing redundant or highly correlated features by dimensionality reduction techniques, improve the ML model's prediction accuracy. Several ML techniques used for water body extraction are discussed below and outlined in Table 5. Fig. 6 Workflow of supervised and unsupervised ML for SWM Full size image Table 5 SWM using ML Techniques Full size table The SVM classifier was trained using normalized values [0,1] of the spectral bands (four for Landsat MSS and six for Landsat TM) to create binary water masks. Contour tracing was performed on all surface objects to obtain contours with associated characteristics (perimeter and centroid). A piecewise linear polygonal technique generates polygons from contours. Finally, the shape similarity metric was used to evaluate the prediction, and the surface dynamics were analyzed (Li and Narayanan, 2003). The Classification Tree Analysis (CTA) and Stochastic Gradient Boosting (SGB) decision-tree algorithms were used to distinguish wetlands and riparian areas in the Gallatin Valley of Southwestern Montana, USA, using Landsat ETM+ Imagery (Baker et al. 2006). CTA creates a single decision tree using spectral bands, Tasselled Cap (TC) indexes (greenness, wetness, and brightness), DEM (elevation and slope data), and hydric soil data. The SGB algorithm creates an ensemble of Decision Trees (DT) and combines multiple DTs' results to provide the final output. The CTA misclassifies wetlands into non-wetlands (high OE) and vice-versa in SGB (high CE). To avoid overfitting, the SGB trained with 29 DTs (reduced from 80) and CTA trained with 17 leaf nodes (reduced from 39). SGB utilized 19 of the 23 variables, whereas CTA used 18. The result shows that the SGB outperforms CTA in identifying wetlands and riparian zones. The DT was trained using the three features such as 1) visible bands reflect more than infrared bands (B2 + B3) > (B4 + B5), 2) The NIR band reflectance is less than 60 (B4 < 60), and 3) The NIR emits more radiation than SWIR in water regions (B4 > B5) & (B5 < B2). DT performs better than MLC but also underperforms in identifying small water bodies and mixed pixels (Fu et al. 2008). The ISODATA is an unsupervised ML algorithm that groups the pixels based on spectral similarity. This method was used for SWM from ASTER and Landsat imagery. The experiment results show that the ASTER with only three spectral bands (red, green, and reflected IR) can accurately extract clear, green, and muddy water. Moreover, this method extracts small water bodies at a satisfactory level. More spectral and high spatial resolution images are required to improve the accuracy (Sivanpillai and Miller, 2010). The ML algorithms DT, SVM, and MLC were analyzed for LULC mapping using Landsat TM and ETM+ Imagery (Otukei and Blaschke, 2010). The original and derived bands were merged into a unified composite band and employed during training. The derived bands encompass three PCs, three TCs indices, NDVI, and a texture band (established by spectral variance). The C4.5 data mining algorithm identifies suitable bands and establishes decision rules. The SVM and MLC were trained on appropriate bands (provided by the C4.5 algorithm) and significant bands (after removing less significant bands from appropriate bands). The filter (3 × 3) was applied to all ML algorithms to minimize the salt and pepper noise. The results show that DT (OA= 93.48% and kappa=0.93) performs better than SVM and MLC. SVM and MLC trained on significant bands perform similarly to those trained on appropriate bands without compromising accuracy. The Adaptive Boosting (AdaBoost) algorithm is the ensemble ML classifier, which constructs and combines several weak classifiers to create a robust classifier. In each iteration, the Adaboost classifier updates the weights of training samples (provides more importance (weights) to the samples misclassified in the previous iteration). The spectral reflectance of Landsat ETM+ (except Panchromatic), NDVI, NDWI, MNDWI, and WRI was used as the features for training the weak classifiers (Shen and Li, 2010). The FCC images highlight the water features, and MLC was used to extract the water bodies. The shape index (k) was calculated using area and perimeter of the water pixels from the segmentation map. The value k < 0.044, k ≥ 0.2, and 0.044 ≤ k < 0.2 was represented as river, dike-pond and other water bodies. The experiment results concluded that human factors (over-utilization) decreased the dike-pond area from 1999 to 2008 (Lian and Jianfei, 2011). The SVM classifier was developed using training datasets with less than 5000 samples for each of the six classes (water, plant, snow, clouds, soil, and ice). The Red, NIR, Blue, Green, SWIR2, and SWIR3 spectral bands were employed as input feature sets. The spectral bands defined with rules and constraints were used to produce the training dataset (Sun et al. 2014). The ML algorithms, namely SVM, Extreme Learning Machine (ELM), DT, RF, Tree Bagger (TB), Logistic Regression via Variable Splitting, and Augmented Lagrangian (LORSAL), were trained to extract the water bodies and water types (rivers, ponds, lakes, and canals). These ML models for water body extraction employed NDVI, NDMI, and Morphological Shadow Index (MSI) as features. The ML models (to classify different water types) were trained using density, shape index, area, homogeneity, and length-to-width ratio as features (Huang et al. 2015). In the perceptron model, the output is the weighted linear function of feature vectors. Three features, namely SWIR spectral reflectance, conditional reflectance between Green, NIR, and SWIR bands, and mNDWI, are extracted from the Landsat ETM data. The results are analyzed for different perceptron thresholds (1-3), SWIR thresholds (40-65), and size parameters (0-75). The perceptron threshold, SWIR threshold, and the size parameter of 2, 40, and 40, respectively, provided an accuracy of 96.91% in extracting water bodies. Also, it concluded that the perceptron thresholds of 1 and 3 result in overestimation and underestimation of water bodies, respectively (Mishra and Prasad, 2015). The J48 Decision Tree (JDT) was constructed to detect water and non-water bodies from Landsat 8 OLI images (Acharya et al. 2016). The JDT was trained using deep blue, green, NIR, and SWIR1 bands to classify multispectral images into water and land pixels. The JDT was compared with three water indices (density slicing, MNDWI, and NDWI) and two ML (MLC and SVM) techniques. The performance of JDT was similar to density slicing, MLC, and SVM. In contrast to using all reflectance bands as inputs in MLC and SVM, the JDT approach employed only four bands in a training process. The deep blue band has contributed more to water body extraction in addition to the NIR and SWIR bands. The use of black plastics in farmlands (for mulching potatoes and maize), shadows from bridge structures, and mixed pixels at water-land boundaries are misclassified as water. The Random Forest (RF) classifier was constructed to extract water bodies from Landsat imagery in the YRB region. The well-known cloud pixels (by cloud masking), water pixels (by NDWI), and vegetation pixels (by NDVI) were removed before training. Then, the RF classifier was trained to classify water from soil and shadow pixels. The original spectral bands and spectral indices were used as feature vectors. The major limitation is removing water pixels under clouds directly by the cloud masking technique (Wang et al. 2018c). The RF classifier was trained to classify the pixels into land or water using a set of attributes (features). The features such as NDWI, NDVI, MNDWI, NDMI, and HSV were extracted from the multispectral images. The cloud, terrain, ocean, and glacier masks were applied before extracting the attributes. The experimental analysis of surface dynamics concludes that decreasing water extent depends on surface temperature (Sui et al. 2018). The multi-feature water body extraction (MFWE) was developed based on spectral and spatial features for SWM using GF-1 RS imagery (Zhang et al. 2018). The Pixel Region Index (PRI) was calculated on the input image, reflecting the object's local spatial feature (smoothness). Then, the pixels were classified into large and small PRI feature classes according to the PRI features. The NDWI was computed for each class, and the primary water mask was generated by applying the peak-valley technique to the NDWI histogram. Concurrently, the initial water map was created using the k-means (km) clustering algorithm. The predominant water body mask guides the plausible cluster types. If the water mask categorizes over 10% of pixels within a group as water, that cluster is deemed a potential water category. Ultimately, combining the primary water mask and the water-guided map yields the final water map. The SWM was performed by combing the features of Sentinel-1 (SAR images) and Sentinel-2 (optical images). The Sentinel-1 image features such as VH, HV, and polarization ratios, and Sentinel-2 image features such as blue, green, red, Vegetation Red-edge, NIR, SWIR bands, Spectral indices (NDWI, NDMI, MNDWI, and WRI), and MNDWI (calculated on pan-sharped SWIR(Band11)), textural features (Grey level difference vector (GLDV) and Grey level co-occurrence matrix (GLCM)), and image transforms (PCs) were combined to train the ML algorithms (DT, RF, SVM, and KNN). The ML results were compared with T1 (NDWI with Otsu thresholding), T2 (VH derived from Refined Lee speckle filtering (RL)), T3 (MNDWI calculated from À Trous wavelet transform pan-sharpening), and (T1 & T2). SVM outperforms other methods; however, the combined T1 and T2 produced satisfactory results (Bangira et al. 2019). The Automatic Cost-effective Method for Land Cover Classification (ALCC) employs an unsupervised classification approach (k-means clustering) on a combined image constructed using the spectral indices and six spectral bands from Landsat 8 imagery. This technique differentiates water through a combination of MNDWI and spectral bands, high and low vegetation through NDVI and spectral bands, bare land through the Normalized Difference Bareness Index (NDBaI) and spectral bands, and built-up areas through the Normalized Difference Bare Land Index (NBLI) and spectral bands (Gašparović et al. 2019). In Acharya et al. 2019, the SWM was performed on Landsat 8 OLI images by considering six ML algorithms (Naïve Bayes (NB), RF, SVM, Gradient Boosted Machines (GBM), Recursive Partitioning and Regression Trees (RPART), and Neural Networks (NNET)). The ML algorithms were assessed using input combinations of OLI bands (LS8) and three secondary bands: slope, NDVI, and NDWI. Five distinct datasets were used to train the ML algorithms: LS8, LS8+Slope, LS8+NDVI, LS8+NDWI, and LS8+Slope+NDVI+NDWI. The Classification and Regression Training (CARET) tool in R 3.5.0 was employed for the training process. The findings indicated that all ML algorithms performed well in flatlands and hilly regions but faced challenges in the Himalayas due to snowy conditions and shadows. Among the algorithms, RF showed the best performance, followed by GBM, NNET, and SVM based on metrics like OA and Kappa. The NB and RPAT demonstrated lower performance compared to the others. The inclusion of slope and NDWI improved the performance, while NDVI had a diminishing effect. The RS images (sentinel-1 and sentinel-2) was segmented by the set of rules (R1 : NDWI − B > 0.6; R2 : NDWI > 0.05; R3 : NDWI > 0.3; R4 : dB <  − 14) to generate level 0 discrete objects. Then, the RF classifier was trained with six features (NIR, slope, compactness ratio, radar backscatter image, NDWIgreen image, NDWIblue image) to classify the level 0 discrete objects into glacial and non-glacial lake objects (Wangchuk and Bolch, 2020). In the context of river mapping in Northwestern China, the SVM classifier was trained using six attributes: Red, Green, NIR, SWIR1, SWIR2 bands, and Height Above Nearest Drainage (HAND) calculated from the DEM. SVM demonstrated superior performance compared to NDWI and MNDWI based on metrics like OA and Kappa. The findings suggest that this approach eliminates hill shading concerns in mountainous areas (Liu et al. 2020). The Cyclone Global Navigation Satellite System (CYGNSS) is a group of eight satellites with a Global Navigation Satellite System Reflectometry (GNSS-R) sensor, and its data is used for RS applications. The variables such as kurtosis, maximum, variance, and corrected Signal-to-Noise (SNRc) were measured using a Surface Reflectance (SR) Delay-Doppler map (DDM). The Random Under Sampling Boosted (RUSBoost) algorithm uses these variables except SNRc to classify each grid as water or land. The results show that the RUSBoost classifier outperforms the inland water detection method in predicting water bodies (Ghasemigoudarzi et al. 2020). The surface water bodies can be extracted from the LISS-III using feature extraction and ML classification. The combined spectral and textural features such as MNDWI, NDWI, EWI, NDVI, and Gabor filters were extracted from LISS-III multispectral images. Then, the ML classifier NB, RF, SVM, and eXtreme Gradient Boosting (XGB) was used to classify water or land pixels based on the features (Nagaraj and Kumar, 2021). Automatic Urban Water Mapping (AUWM) was proposed to map the urban water bodies in 10m spatial resolution. AUWM was developed using MNDWI, PanSharpening (PS) techniques, and a km clustering algorithm. Four different variants of inputs, such as MNDWI without/with PS (MNDWI, MNDWIps), MNDWI + spectral bands (red, green, blue, and NIR) without/with PS (MNDWI + bands, MNDWIps + bands), were generated and used in km clustering. The km clustering was performed for different classes (k=2 to 10) (Gašparović and Singh, 2022). The Pixel-Level Feature (PLF) extraction and ML classification were performed for SWM using LISS-III RS images. The PLF features such as MNDWI, NDWI, NDVI, EWI, NDTI, NDPI, WRI, band inequality, spectral inequality, and Gabor filters were extracted and applied to ML classifiers (KNN, DT, RF, SVM, and XGB) for surface water body extraction. The PLF+XGB outperforms DL models in terms of performance measures. Also, the change detection of two reservoirs was analyzed for four years (2016-2019) (Rajendiran and Kumar, 2022). Instead of extracting PLF maps manually from the multispectral images, the dedicated feature extraction network, Multi Scale Feature Extraction Network (MSFEN), was designed to extract the features automatically from the LISS-III images. These features were used by the ML classifiers (DT, RF, NB, SVM, and XGB) to extract surface water bodies. The experimental results show that MSFEN+SVM outperforms other ML and state-of-the-art DL models (Nagaraj and Kumar, 2022). The SWM of Lake Victoria on Landsat imagery was performed using feature extraction and pixel classification. The features such as NDWI, MNDWI, NDVI, AWEI, and Gabor filters were extracted and fed to the ML classifiers (DT, RF, NB, XGB, Light Gradient Boosting Machine (LightGBM), Categorical Boosting (CatBoost)) for SWM. The experiment results show that LightGBM outperforms other ML classifiers. Multiplying the segmentation map with the depth information (obtained through Bathymetry data) determines the volume of Lake Victoria (water capacity) (Nagaraj et al. 2023). The combined handcrafted features (Rajendiran and Kumar, 2022) (both spectral and textural) and Convolutional Neural Network (CNN) features (Nagaraj and Kumar, 2022) were used to train the ML classifiers. During testing, the trained ML classifiers (NB, DT, RF, SVM, XGB, AdaBoost, LightGBM, and CatBoost) accept the combined features to classify water and non-water pixels. The combined features with the RF classifier perform better than others. The surface water dynamics of the Vaigai dam were analyzed from 2012-2019 using rainfall and water availability data provided by the Indian Meteorological Department (IMD) (Nagaraj and Kumar, 2023a). The papers Li and Narayanan, 2003; Baker et al. 2006; Fu et al. 2008; Sivanpillai and Miller, 2010; Otukei and Blaschke, 2010; Lian and Jianfei, 2011; Sun et al. 2014; Huang et al. 2015; Acharya et al. 2016; Wang et al. 2018c; Sui et al. 2018; Zhang et al. 2018; Bangira et al. 2019; Gašparović et al. 2019; Acharya et al. 2019; Wangchuk and Bolch, 2020; Liu et al. 2020; Ghasemigoudarzi et al. 2020; Nagaraj and Kumar, 2021; Gašparović and Singh, 2022; Rajendiran and Kumar, 2022; Nagaraj and Kumar, 2022; Nagaraj et al. 2023; Nagaraj and Kumar, 2023a explain the procedure of SWM from RS images using ML algorithms. The ML algorithms used for water body extraction have the advantage of less hyperparameter tuning, less feature interpretation, require less data and time, and do not necessitate high-end systems. However, manually extracting more water features from the RS images and selecting the optimal feature (accounts for better accuracy) is challenging. Therefore, researchers have explored DL models for water body extraction. Surface Water Mapping using DL Techniques The DL model is an end-to-end model (Deep Neural Network (DNN); here, Deep indicates the depth of the network, usually more than three) trained with the inputs and required outputs. The model automatically learns the necessary features during the training process. It is broadly classified into two types: 1) Convolutional Neural Networks (CNN) used for image processing applications (Castelluccio et al. 2015) and Recurrent Neural Networks (RNN) used for time-series or forecasting applications (Nagaraj and Kumar, 2023b). The CNN was built using an input layer, convolutional layers, pooling layers, Fully Connected (FC) layers, and output layers (Castelluccio et al. 2015). The input layer accepts the input and feeds the next layer. The sequence of convolution and pooling layers extracts the required features from the inputs (images). The FC layer is a multi-layer perceptron layer that triggers specific neurons by accepting these features. Finally, the output layer produces the output based on the neurons triggered in the FC layers. Several DL models were designed by varying the number of convolutions, pooling, and FC layers for various applications. Several DNNs were designed for multiple applications, such as 1) handwritten recognition (LeNet) (LeCun et al. 1998); 2) Image classification assigns a single label for an Image (AlexNet (Krizhevsky et al. 2012), VGGNet (Simonyan and Zisserman, 2014), GoogLeNet (Szegedy et al. 2015), ResNet (He et al. 2016), DenseNet (Huang et al. 2017)); 3) Semantic segmentation (Fully Convolutional Neural Network (FCN) (Shelhamer et al. 2017), Unet (Ronneberger et al. 2015), DeconvNet (Noh et al. 2015), Pyramid Scene Parsing Network (PSPNet) (Zhao et al. 2017), SegNet (Badrinarayanan et al. 2017), DeepLab (Chen et al. 2017)). The accuracy of these DNN models depends on tuning the parameters such as layer depth, activation function, loss function, optimizers, and many more used while training. These DNNs were modified and designed for various applications in the RS field, which accept RS images (multispectral/hyperspectral) rather than RGB images. In RS, the DNN was used for scene classification (Zhang et al. 2015), semantic segmentation (Shelhamer et al. 2017; Ronneberger et al. 2015; Noh et al. 2015; Zhao et al. 2017; Badrinarayanan et al. 2017; Chen et al. 2017), etc. The several DL techniques used for SWM are discussed below and outlined in Table 6. Figure 7 depicts the general fundamental architectures used for SWM, and Fig. 8 depicts the timeline diagram of the development of DL techniques for SWM. Table 6 SWM using DL Techniques Full size table Fig. 7 Architectures used for Surface Water Mapping; (a) Encoder-Decoder architecture with skip connections; (b) Encoder -Decoder architecture with feature extraction module; (c) Encoder-Decoder architecture with attention; (d) Encoder-Decoder architecture with ASPP. Full size image Fig. 8 Timeline diagram for development of DL techniques used for SWM Full size image The DNN model was developed to classify the pixels into water, building, road, ground, and vegetation (Längkvist et al. 2016). The single or multi-CNN (training multiple CNNs in parallel with different contextual input sizes) was designed to extract the features from the images. The post-processing approach of smoothing (classification averaging) yields better results than without smoothing by removing salt-and-pepper noise. The RS images were segmented by the simple linear clustering (SLIC) method (which produces equal segments). After initial segmentation, the nearby segments having the same class with 70% classification certainty (information obtained from DNN) were merged to improve the segmentation results. The DNN with seven layers (input layer, two convolution layers, two max-pooling layers, FC layer, and output layer) was designed for water body extraction (Yu et al. 2017). The combined spatial and spectral features extracted from the CNN layers achieve higher accuracies than ANN and SVM. In the Hubei study area, CNN provides 97.32% accuracy in extracting the water bodies. They recommended that the higher the samples used in training, the better the accuracies. FCN (Shelhamer et al. 2017) is a DNN that modifies the CNN architecture by replacing FC layers with convolutional layers. This modification enables the FCN to accept the arbitrary size inputs for semantic segmentation application. The FCN encoder was designed by traditional CNN architectures (Nagaraj and Kumar, 2021; Gašparović and Singh, 2022; Rajendiran and Kumar, 2022; Nagaraj and Kumar, 2022; Nagaraj et al. 2023) used in image classification applications (a network without FC and output layer). Then, the deconvolution network was designed using upsampling or transpose convolution layers, which uses bilinear interpolation to restore the original spatial dimension. Combining low- and high-level information (coarse and fine information) using skip connections and upsampling leads to accurate results. The FCN8 was obtained by combining feature maps of pool 3, 2 × pool 4, and 4 × conv7, followed by 8 × upsampling. FCN8 performs better than FCN16 and FCN32 variants. The FCN was modified to accept multispectral images and used for water body extraction. The improved FCN was designed by replacing standard convolution with atrous convolution and adding Conditional Random Field (CRF) as a post-processing technique (Fu et al. 2017). The atrous convolution expands the receptive field without additional complexity, and CRF refines the boundary structures. The results were compared with Multi-Resolution SVM (MR-SVM), patch-based CNN, and FCN8. MR-SVM is a segmentation-classification approach that segments the pixels based on spectral reflectance. Due to high spectral similarity, incorrect image objects produced by segmentation lead to incorrect classification. In Patch-based CNN, independent processing of patches leads to a loss of contextual information about patches, which creates discontinuities at the patch boundaries. The improved FCN eliminates these disadvantages by handling feature extraction and classification end-to-end for the whole image. Unet (Ronneberger et al. 2015) was designed initially for bio-medical image segmentation, which has a contracting and expanding path. It is an end-to-end DNN architecture trained using input images and their corresponding output. The contracting path was designed using convolution and pooling layers to extract image features. The expanding path uses upsampling and convolutional layers to increase the output resolution. The skip connection transfers features from the encoder to the decoder for better localization. Like the contracting path, the expanding path also has convolutional layers, which transfer context information to high-resolution layers. Since Unet performs semantic segmentation, it can be easily used for RS applications (LULC Mapping). The Unet was modified to accept multispectral images and used for water body extraction. The multispectral U-Net was designed similarly to Unet architecture to perform semantic segmentation to classify buildings, structures, tracks, roads, trees, crops, waterways, standing water, and small and large vehicles. The ReLU activation was replaced by Exponential Linear Unit (ELU). The input image combines multispectral bands, panchromatic bands, and reflectance indices (canopy chlorophyll content index (CCCI) and NDWI) into a single tensor. This method performs better in extracting waterways than other classes (Iglovikov et al. 2017). The DeepWaterMap architecture was designed to extract water bodies from Landsat imagery (Isikdogan et al. 2017). DeepWaterMap has an encoder and decoder structure with skip connections. The architecture was designed with a convolution layer, pooling layer, transposed convolution, Batch Normalization, and softmax layer. The first skip connection fuses the fine feature maps from the encoder to the upsampled coarse feature maps in the decoder through concatenation followed by a convolution operation. The second skip connection reuses previous layers' features, reducing the number of filters at each convolutional without negotiating accuracy. The architecture has ten stages with three convolutional blocks at each stage. Since the DeepWaterMap learns multi-scale features (shape, spectral, and textural), it can discriminate snow/ice, clouds, and shadows from water bodies. The authors used the global land cover facility (GLCF) inland water dataset as a ground truth reference. The DeepWaterMap performs better than MLP and MNDWI regarding recall, precision, CE, OE, and F1-score. DeepWaterMap extracts water bodies in all atmospheric conditions and complex terrain types. The self-adaptive pooling convolutional neural network (SAPCNN) was designed with an input layer, convolution layer, self-adaptive pooling (SAP) layers, FC layer, and output layer to extract water bodies from high-resolution RS images. The DNN was trained using the superpixels generated by an adaptive simple linear clustering (A-SLIC) algorithm (the improved version of SLIC with affinity propagation). Then, the trained SAPCNN can classify the superpixel into water or land pixels. The water body extraction results were compared with two traditional pooling layers CNNs (replacing the SAP layer in SAPCNN with max and average pooling layers). The traditional pooling layers CNNs provide blurred water boundaries, resulting in more misclassification around the water boundaries. Also, the proposed method outperforms SVM, NDWI, Deepwater map, and (Yu et al. 2017) in extracting water bodies with high accuracy (Chen et al. 2018). The DL framework was designed by integrating the Deep U-Net and post-processing techniques to extract accurate water bodies from RS images (Feng et al. 2018). Deep U-Net is the modification of Unet with Batch Normalization (BN) and ELU. The Deep U-Net produces segmented results with blurry boundaries. The post-processing technique CRF and Regional Restriction (RR) helps to remove the False Positives and mixed pixel misclassification problem. The CRF uses contextual information to refine the boundary structures, which leads to over-smoothing. Then, RR corrects each pixel's prediction result by determining each super pixel's average membership probabilities. The SLIC algorithm generates the superpixel. The Deep U-Net with post-processing techniques (CRF + RR) outperforms Deep U-Net, Deep U-Net + CRF, Chan–Vese (CV)- and Markov random field (MRF) technique, SegNet, and DeepWaterMap. The Multilayer perceptron (MLP) model was constructed for SWM using Landsat 8 OLI images (Jiang et al. 2018). The radiometric calibration and atmospheric correction were applied on Landsat 8 OLI images to get surface reflectance data. The MLP was designed with an input layer, four hidden layers (the first three layers have 30 neurons, and the fourth layer has 10 neurons), and an output layer. The MLP was trained using surface reflectance of seven bands and its corresponding labels (water or non-water). The performance of MLP was analyzed using OA and kappa metrics and compared with spectral indices and SVM methods. MLP performs better in extracting narrow rivers, lakes, ponds, turbid water, and seawater than spectral indices and SVM. The spectral indices and SVM fails to extract small water bodies. Also, the MLP shows promising effects in mitigating noise, such as buildings, clouds, and mountain shadows, during surface water body extraction. The DeepUNet was designed to perform sea-land segmentation using Google Earth (GE) images (Li et al. 2018). Like Unet, DeepUNet has a contracting and expansive path with five stages. In the encoder, each stage has two convolution layers concatenated with the ReLU activation function followed by one max pooling layer. A similar structure was followed in the decoder, and an upsampling layer was used instead of a max pooling layer. The skip connections were used in this DeepUNet to transfer features from encoder to decoder in each stage. Inspired by ResNet, the plus connection adds the input to the output of two convolution layers. The Plus connection allows the DeepUNet for fast convergence. The performance of DeepUNet was better than Unet and SegNet by the performance metrics, Land Precision (LP), Land Recall (LR), Overall Precision (OP), Overall Recall (OR), and F1-Score. DeepUNet can discriminate complex structures and small ships from water bodies (Li et al. 2018). The Restricted Receptive field deconvolution network (RRF DeconvNet) was designed for surface water body extraction from high-resolution satellite images (Miao et al. 2018). The RRF DeconvNet restricts the receptive field to capture the pixel-wise details in the segmentation task. The RRF DeconvNet is an encoder and decoder architecture designed with residual units. Each residual unit was constructed by a 3×3 convolution layer followed by a 1×1 convolution layer. The first two stages of the encoder were designed using residual units along with Strided convolution with the stride of 2. The remaining three stages were designed using residual units and the atrous convolution. The decoder was designed using residual units and deconvolution layers. In the decoder, encoder feature maps were collected via skip connections and concatenated to the upsampling feature maps to retain the local and global information. The final layer is the softmax activation layer, which provides the class probabilities of each pixel. Instead of the traditional loss function (which treats the pixels equally), it uses a novel loss function named the Edges Weighting Loss function, where every pixel is multiplied by the weight mask. Each pixel was the weighted contribution of all the edge pixels. This loss function greatly enhances segmentation boundary details. RRF DeconvNet outperforms FCN8 and DeconvNet in terms of OA. The fine-tuned ResNet-50 was developed for recognition of the reservoirs and natural lakes at the global level (Fang et al. 2019). A Global Reservoir and Lake Training (GRaLT) database was generated using Landsat 8 TOA and the HydroLAKES database to train the model. The model was trained with different band combination inputs such as all bands, band 543, band 654, band 8, pan 654 (Red, NIR, and SWIR1 fused using pan band), water contour (pixels with MNDWI > 0 set to one, remaining as zero). The results show that pan 654 achieves the best OA (91.45%) and precision (94.37%) compared to other state-of-the-art techniques (SVM, RF, gradient boosting (GB), bag-of-visual-words (BoVW), AlexNet, and VGG). The authors found that utilizing all bands as inputs does not improve the accuracy. The fusion feature multi-scale pooling method for SWM was developed using panchromatic images of SPOT-5 and GF-2 images (Qi et al. 2019). Seven Chinese ports: Shanghai, Tianjin, Qingdao, Xiamen, Dalian, Shenzhen, and Haikou ports were selected as study areas. SWM from the panchromatic images is challenging due to different imaging conditions and complex environmental scenes because it has one level of gray information. Therefore, additional feature descriptors such as gray level, gradient, and entropy were considered to create the fusion feature map. Then, different pooling layers are applied to the fusion feature maps to enhance the difference between water and non-water areas. The Otsu algorithm created the series of binary masks from each pooling scale feature map. The minimized energy binary mask was found using the observation function from the series of binary masks. The Markov modeling integrated with the iteration condition model (ICM) accepts the initial label and feature field vectors and is processed iteratively to generate the final water body extraction. The initial label field generated by the fusion feature multi-scale pooling model performs better than K-means and selected auto encoding (SAE) label field initialization methods. The fusion feature multi-scale pooling method retains the edge and area integrity in the final water body extraction. The fusion feature multi-scale pooling method performs better than gray level (GL), local binary pattern (LBP), Maximum entropy (ME), hierarchical sea-land segmentation (HSS), and SegNet by the performance metrics such as OA (89%), precision (87%), recall (93%), kappa (83%), and edge detection ratios (84%). The FCN model was developed to extract water bodies on very high spatial resolution satellite images (Li et al. 2019a). The radiometrically corrected images are used to train the FCN model. The FCN model was designed using an encoder (similar to the VGG16 model) and decoder. The decoder has a sequence of upsampling layers (realized by transpose convolution) to return the label map similar to the original dimension of the input image. The performance of the FCN model was analyzed with four key parameters: input features (if1, if2, and if3), training data (td1, td2, and td3), transfer learning (tl1 and tl2), and data augmentation (da1 and da2). A total of 36 models were generated using the four critical parameters with different combinations. The results show that the FCN model trained with input feature-if2 (Green, Red, and NIR bands), training data td1 (patches covering water and shadows in a balanced manner), transfer learning-tl1 (with transfer learning), and data augmentation-da2 (with data augmentation- flipping and contrast enhancement) performs better than NDWI, SVM, and Sparsity Model. Although FCN shows a promising effect in discriminating the high building shadows from water bodies, it fails to extract the narrow rivers. The multiscale refinement network (MSR-Net) was designed to extract the water bodies in high-resolution satellite images (Duan and Hu, 2019). The MSR-Net was constructed using a backbone network, Erasing-Attention (EA), and classifier module. The instance-batch normalization network (IBN-Net) was selected as the backbone Network. The backbone network has five layers (layer-0 to 4) that extract the features from input images. The output of layer4 is fed to the classifier module to get coarse segmentation results (P0). The classifier consists of a deconvolution layer and a global convolution network, which provides a large receptive field for localization and classification. The EA module removes the information redundancy in each stage by focusing only on the unclassified areas in the previous prediction. For example, if the previous prediction identified the water bodies, then it is erased by the EA and focuses on unidentified detailed portions. EA module accepts the upsampled prediction map (\\({P}_i^u\\)) and Fi + 1 in stage i+1 as inputs, producing EA weight (Ai + 1) and refined feature map (\\({F}_{i+1}^{\\prime }\\)) as outputs. Then, the final prediction (Pi + 1) can be obtained by adding the upsampled prediction map (\\({P}_i^u\\)) and classified output of the refined feature map (\\({F}_{i+1}^{\\prime }\\)). The EA weight, refined feature map, and prediction are taken from ((Duan and Hu, 2019), Eq. (3), Eq. (4), and Eq. (5)) and it is expressed as. $${A}_{i+1}=\\mathit{\\max}\\left(0.5-\\sigma \\left({P}_i^u\\right),0\\right)\\ast 2$$ (1) $${F}_{i+1}^{\\prime }={A}_{i+1}.{F}_{i+1}$$ (2) $${P}_{i+1}=C\\left({F}_{i+1}^{\\prime}\\right)+{P}_i^u$$ (3) At last, combining all the predictions (P0-P5) produces a final segmentation map. The MSR-Net provides sharper boundaries with more sufficient details and a higher degree of completeness on both linear rivers and planar water bodies. The MSR-Net outperforms other state-of-the-art models: Unet, SegNet, FCN8s, GCN, ExFuse, and DeepLabV3+. The new framework was developed for SWM in high spatial resolution GF-1 RS images (Li et al. 2019b). The framework includes a multi-scale image splitting technique, DeepLabV3+ optimization model, and CRF post-processing. First, the RS images were divided into three scales (128×128, 256×256, and 512×512). The image block (512× 512) has high contextual information about the background. Similarly, the image block (128×128) has fine details. This method enables the collection of different contextual information from the original images by upsampling the low-resolution images to high-resolution images (512×512) to create benchmark image blocks (multi-scale inputs). Then, the modified DeepLabv3+ model was trained by these multi-scale inputs. The DeepLabv3+ model has an encoder, ASPP, and decoder. The encoder has five convolution stages with different bottleneck building blocks in each stage. The feature maps output of the first and second convolution stages were concatenated to retain the global information (low-level feature maps). The fifth convolution layer feature maps were passed to the ASPP module to extract multi-scale features. ASPP uses five convolutional layers with different dilation rates to extract the multi-scale features. Then, the multi-scale features were concatenated and sent to the decoder module. In the decoder, the multi-scale feature maps from ASPP were upsampled and concatenated with the low-level feature maps (from the encoder) to create new feature maps. Then, these feature maps were upsampled to three different sizes of the corresponding input image blocks. These three feature maps were mosaiced to the size of benchmark image blocks (512×512). The mosaiced feature maps were weighted and fused to create the coarse segmentation map. The coarse segmentation map was further refined by CRF post-processing to create a precise water map. The CRF post-processing provides a water segmentation map with sharp boundaries. The modified DeepLabV3+ model performs better in extracting water bodies under cloud shadows, surrounded by paddy fields, complex buildings, and shallow water beaches. The modified DeepLabV3+ outperforms NDWI, FCN, and traditional DeepLabV3+ by the performance metrics, recall, PA, and IoU. The Automated Surface Water Extraction (ASWE) was developed based on the presence and background learning (PBL) for SWM using Sentinel-2 imagery and OpenStreetMap (OSM) data (Zhang et al. 2019). The OSM data layers pertaining to land use, natural features, and waterways include substantial water information. However, it has more false positives. The MNDWI determined from surface reflectance data was used to remove the false positives in the OSM data. Further, the mixed pixels in the mask were removed by the morphology erosion process. Finally, the homogenous water and background pixels were generated to train the Back Propagation Neural Network (BPNN) model. The BPNN was designed using input, two hidden layers (with nodes 10 and 6), and an output layer. The trained BPNN determined the observed presence probability (Pobs). Then, the water presence probability (Pw) was determined using Pobs and Probability transformation constant (c). The final segmentation result was obtained from the Pw using the optimal segmentation threshold (Ts). The Ts was obtained iteratively by determining the maximum modified F-Score (Fm) on the segmentation results. The performance of ASWE-PBL was evaluated with the performance metrics CE, OE, and Kappa and compared with MNDWI, AWEI, and RF methods. The result shows that ASWE-PBL outperforms other methods in all the performance measures. The ASWE-PBL performs better in extracting water from shadows and built-up areas. A novel DL framework was developed by combining FCN with an adversarial network and context module (Alhassan et al. 2020). The encoder section in FCN was designed using VGG, ResNet, and GoogLeNet, referred to as base networks (FCN-VGG, FCN-ResNet, FCN-GoogLeNet). Later, these variants were combined with adversarial network and context module to improve accuracy. The base network with an adversarial network mimics a Generative Adversarial Network (GAN). The FCN acts as a generator (produces prediction map), and the discriminator network discriminates ground truth as real and prediction maps as fake. This process makes the generator produce the prediction map closer to the ground truth. Next, the base networks are combined with the context module (designed with dilated convolution), improving the accuracy by extracting more contextual information. At last, the base networks were combined with adversarial and context module to improve the accuracy further. The FCN-ResNet+ Adversarial + context provides the OA= 90.46%. A new two-level framework called offline training and online prediction (OTOP) was developed using multiscale convolutional neural networks (MSCNN) and Global Earth Engine (GEE), respectively (Wang et al. 2020a). The MSCNN was designed with six feature extraction stages. Each stage was designed using three convolutional layers (to extract higher-level features) and one max pooling layer (to reduce the spatial dimension). The feature map from the last convolutional layer of each stage is fed to a single-feature convolution operation to reduce the feature map channels and upsampled to the original spatial dimension of the input. The six single feature maps were concatenated and processed by the softmax layer to provide water or land class probabilities. The MSCNN model was implemented, and trained parameters were uploaded on GEE. Since GEE has access to Landsat images, the urban water bodies were predicted online without downloading the data. MSCNN outperforms MNDWI and RF in extracting complex urban scenes such as building shadows and low-albedo surfaces in urban areas. However, this method fails to classify mixed pixels around the water bodies. Like Unet, SegNet (Badrinarayanan et al. 2017) has an encoder, decoder, and final classification layer. Since the SegNet encoder was designed using the first 13 layers of VGG16 architecture, it has a 13-layer decoder structure. The max pooling layers in the encoder reduce the spatial resolution of feature maps, thereby losing boundary details. Therefore, transferring the feature maps from the encoder to the decoder is necessary. However, it consumes more memory. The SegNet transfers max pooling indices from encoder to decoder, which eliminates the need for learning to upsample. In the decoder, each layer uses the max-pooling indices from the corresponding encoder layer to upsample the input feature maps into sparse feature maps. The sparse feature maps convolved with the convolution layer to produce dense feature maps. Finally, the classification layer uses the softmax function to provide class probabilities for each pixel. SegNet consumes less memory than Unet. The SegNet was modified to accept multispectral images and used for water body extraction. Separable Residual SegNet (SR-SegNet) (Weng et al. 2020) was designed for SWM from the RS images. Like SegNet, SR-SegNet has the encoder and decoder structure with some modifications. The SR-SegNetv1 was developed by applying the following modifications to the traditional SegNet: 1) The last five convolutional layers in the encoder were removed and performed 4 × upsampling operation (reduces the number of trainable parameters). 2) The deep and shallow layers were added (fused) to retain the location information. 3) Modified Residual block (two successive 2 x2 convolution layers and one 1×1 convolution layer) was used in the encoder stage to eliminate the vanishing and exploding gradient problem. 4) The Depthwise Separable (DS) convolution is introduced to the convolution layer in the encoder (reduce the number and parameters and computation complexity). The SR-SegNetv2 uses dilated convolution in the modified residual block instead of standard convolution. The SR-SegNet extracts small water bodies (lakes) and narrow rivers well. The SR-SegNet outperforms FCN, SegNet, and DeconvNet. In Guo et al. 2020b, a multi-scale water extraction convolutional neural network (MWEN) was developed to detect water bodies from GF-1 RS images. The MWEN structure comprises three essential components: an encoder, a multi-scale feature extractor (MTFE), and a decoder. The encoder extracts the features from the input and generates the encoder feature maps (with output stride =16). The MTFE generates multi-scale features by simultaneously performing dilated convolution operations with different dilation rates (rate = 0, 2, 4, and 8) on the encoder feature maps. Then, these multi-scale features were concatenated and further processed by three convolutional layers. Finally, the decoder converts the MTFE feature maps into segmented images through the upsampling and convolution layers. The encoder and decoder have been configured with a depth of 4. The multi-scale features extracted from MTFE were useful in suppressing noise, such as building and mountain shadows, highways, dark lawns, and roofs. Since the MTFE feature maps were extracted using dilated convolutions, they can extract water bodies of various sizes, such as tiny rivers, open ponds, plateau lakes, and small puddles. The MWEN outperforms FCN, Unet, and DeepLab V3+ by the performance metrics OA, True water rate (TWR), false water rate (FWR), water IoU, and mIoU. The multi-scale lake water extraction network (MSLWENet) was developed to identify the small lakes from the Google Earth RS images (Wang et al. 2020b). MSLWENet was designed using the encoder, feature extraction module, and decoder. The encoder in the MSLWENet was designed using a modified ResNet-101 structure (3×3 DS convolution + BN + ReLU between two 1×1 conv + BN + ReLU, with 1×1 conv + downsample in the identity path). This structure extracts high-level features and feeds the feature maps to the feature extractor module. Like MWEN, the MSLWENet feature extraction module has four paths for extracting features at different scales. Each path has three stages of dilated convolution operation with skip connections for using reuse information from the previous layers. The reuse information is concatenated only after the first and second dilation convolution operations. The feature maps from the third stage of dilated convolution are concatenated with other path feature maps to produce multi-scale feature maps. These multi-scale feature maps help to extract small water bodies and suppress the noises due to shadows and snow. Finally, the multi-scale features are sent to the decoder for upsampling the feature maps into the original resolution of the input. Additionally, the features from the encoders are transferred to the decoder (through skip connections). These features are processed through convolutional layers, concatenation, and added to the decoder features before the final classification layer. These skip connection features from shallow (rich in spatial details) and deep layers (rich in semantic details) improve the water extraction accuracy. MSLWENet outperforms Unet, MWEN, PSPNet, and DeepLab V3+ by the performance metrics OA, Recall, mIoU, TWR, and FWR. The water body extraction neural network (WBE-NN) was designed for SWM from high-resolution RS images (Chen et al. 2020b). The WBE-NN comprises the Global Spatial-Spectral Convolution (GSSC) module, multiscale learning module, and boundary refinement module. The GSSC module uses 3D convolution followed by 3D max pooling operation to extract features from the input images. However, to reduce the computational cost, the 3D convolution is decomposed into 2D spatial convolution followed by 1D spectral convolution. Similarly, 3D max pooling is decomposed into 2D spatial and 1D spectral max pooling. Second, the multiscale learning module comprises upsampling, feature extractor, and feature fusion modules. In the upsampling module, the features from the GSSC module are upsampled and down-sampled to get three different-sized patches. These different-sized patches are processed separately by the feature extractor module through four stages of spatial-spectral convolution. The feature extractor extracts features at different scales (global and local features), and finally, three low-resolution maps are fused and upsampled to the original dimension. The boundary refinement module combines the direct path coarse maps and residual path (designed using two spectral-spatial convolutions of 3×3×4 and 1×1×4) fine maps through elementwise summation to retain the boundary information. WBE-NN accurately classifies cloud, mountain, and building shadows as water compared to NDWI and SVM. WBE-NN outperforms other DL models CNN+ superpixel, Unet, and Deep U-Net + CRF by the performance metrics OA, Kappa, and Boundary overall accuracy (BOA). However, WBE-NN slightly underperforms in identifying narrow rivers. The MLP was used to produce the surface water map of China for 2015 (SWMC-2015) using Landsat 8 OLI images (Jiang et al. 2020). The structure and the hyperparameters used to design and train the MLP were similar to the previous study (Jiang et al. 2018). The MLP was trained with TOA reflectance data and their corresponding class labels (water and land). The mixed pixels in river banks, coastal areas, and wetlands were not considered for training. The results were compared with the Global 3 arc-second Water Body Map (G3WBM) reference data. The OA and kappa of SWMC-2015 are 90% and 0.78. The reduction in accuracy is due to 1) misclassification of water pixels in wetlands and marshes area, 2) mixed pixels at the edges, and 3) coarse resolution of the sensor (Surface water smaller than the pixel resolution is unidentifiable). A multi-dimensional, densely connected CNN was designed to extract the water bodies in the Poyang Lake basin using GF-1 satellite images (Wang et al. 2020c). Since DenseNet was used as a feature extraction network, it is named DenseNet. Like DenseNet (Huang et al. 2017), it has four stages of dense blocks designed with 1×1 and 3×3 convolution. The transition block lies between the dense blocks and contains 1×1 convolution followed by a 2×2 pooling layer. Like the encoder, the decoder has four stages, each stage designed with two 3×3 convolution followed by transpose convolution, which performs the upsampling operation. The skip connections were used in the model to combine each stage's encoder features to the corresponding decoder feature maps by concatenation operation. The decoder gradually increases the spatial resolution of the feature maps, similar to the input spatial resolution. In addition to DenseNet121, DenseNet169, and DenseNet201, DenseNet79 and DenseNet63 were proposed by adjusting the number of dense blocks in the architecture. The DenseNet79 was designed using 3, 6, 12, and 16 dense blocks in each stage. Similarly, DenseNet63 was designed using 3, 6, 12, and 8 dense blocks in each stage. Among the five architectures, DenseNet79 performs better than others by the performance metrics, recall (0.904), F1-Score (0.931), and mIoU (0.872). The DenseNet79 outperforms ResNet, VGG, SegNet, DeepLabV3+, and NDWI. The DenseNet accurately extracts small rivers and lakes and effectively separates small rivers in cities and bridges in river networks. The DenseNet performs better in discriminating mountain shadows, towns, and bare lands but fails in cloud shadows. A multi-scale context extractor network (MSCENet)was developed to extract water bodies from high-resolution satellite images (Kang et al. 2021). MSCENet architecture contains an encoder, context feature extractor, and decoder modules. The encoder block accepts the input images and performs convolution (3×3) with a stride of 2 and double convolution (3×3) with a stride of 1 to generate low-level feature maps. Then, the features are processed by three Res2net layers with the number of Res2net blocks as 3, 4, and 6, respectively. The Res2net block is the modified version of the bottleneck layer. After one convolution layer (1×1), the input feature maps split equally into N feature maps. The output feature map is taken from (Kang et al. 2021), Eq. (1)) and it is expressed as $${y}_n=\\left\\{\\begin{array}{c}{x}_n\\kern3em n=1\\\\ {}{k}_n\\left({x}_n\\right)\\kern1em \\textit{n}=2\\\\ {}{k}_n\\left({x}_n+{y}_{n-1}\\right)\\kern1em 2<\\textit{n}\\le N\\end{array}\\right.\\ \\textrm{Where}\\ {x}_n,n\\in \\left\\{1,2,3.\\dots N\\right\\}$$ (4) Then, feature maps were processed by one more convolution (1×1) and concatenated with the input feature to produce the final encoder features. The encoder feature maps are applied to the context feature extractor module. The context feature extractor module contains Assorted dilated convolution (ADC) followed by Complex Multi-kernel pooling (CMP) modules. ADC uses dilated convolution to extract the global contextual information, and CMP uses a strip pooling unit to highlight the spatial features of water classes. CMP also extracts contextual information using various multi-kernel pooling layers of different sizes. The CMP concatenates features from multi-kernel pooling layers and strip pooling unit. The decoder uses upsampling (bilinear interpolation) and a Double convolution layer to recover segmented maps from feature maps. In addition, encoder feature maps are added in the decoder using skip connection to enhance feature robustness. MSCENet outperforms Unet, SegNet, PSPNet, MWEN, FCN8, DeepLab v3+, and DANet by the performance metrics OA, kappa, F1-score, and mIoU. MSCENet performs well in extracting water bodies of different sizes, shapes, distributions, and environmental conditions. The DeepLabv3 is an extended version of DeepLab2, which uses ResNet-101 as the backbone to extract low and high-level features. The last two convolution block uses atrous convolution (i.e., dilated convolution) to extract global contextual information. The atrous convolution increases the field of view (receptive field). The Atrous spatial pyramid pooling (ASPP) module was introduced to enhance feature extraction at multiple scales. The ASPP module simultaneously applies a convolutional kernel with different dilation rates on the encoder feature maps. Then, the multiscale features are concatenated and processed by convolutional layers, followed by upsampling to produce the final segmentation map. DeepLabv3-ResNet-101 was used to extract the water bodies specifically for three study areas (Florida, New York, and Shanghai) (James et al. 2021). Initially, the model (DeepLabv3_global) was trained on the global dataset (33,311) to extract water bodies globally. Then, the trained model was independently retrained on the three datasets (Florida 2314, New York 1912, and Shanghai 2345) to extract water bodies for specific locations. The model trained for specific locations (DeepLabv3_Florida, DeepLabv3_New_York, DeepLabv3_Shanghai) performs better than the global (DeepLabv3_global). The Lightweight Multi-Scale Land Surface Water Extraction Network (LMSWENet) was developed using the encoder, feature extractor, bottleneck module, and decoder for SWM (Duan et al. 2021). The encoder and decoder have four stages. Each stage has two convolutional layers followed by Spatial and Channel Squeeze and Excitation (scSE) and Pooling layers. The convolutional layers extract high-level semantic information from the input images. The scSE block contains the Spatial Squeeze and Channel Excitation (cSE) (to give importance to the channel information) and the Channel Squeeze and Spatial Excitation (sSE) block (pays more attention to the spatial information). The scSE block provides more weightage to the relevant features (water) and ignores others (non-water features). Then, the pooling layers perform down sampling and provide higher activation for the features having more weightage. Like MWEN (Guo et al. 2020b), the feature extractor receives the encoder features and processes them using four dilated convolutions with dilation rates of 0, 2, 4, and 8 to extract the spatial contextual information. The output features are fed to the bottleneck module to reduce the trainable parameters and data dimensions. Finally, the decoder upsamples the low-resolution feature maps into the original input dimension using the same structure adapted in the encoder. LMSWENet compared with DeeplabV3+, FCN, PSPNet, and UNet using the performance metrics OA, Recall, F1-score, error rate, mean precision, mIoU, and WIoU. The LMSWENet with other variants, \"LMSWENet without scSE\" and \"LMSWENet without dilated convolution\" was developed and compared. The \"LMSWENet without scSE\" fails to suppress noises from water floats and shadows. Similarly, \"LMSWENet without dilated convolution\" cannot extract small ponds and streams. LMSWENet faces challenges in extracting playgrounds, sports fields, small shadows in urban areas, water floats, and connecting parts in sub-urban areas. A Dense Local Feature Compression (DLFC) Network was designed to extract water bodies from multi-sensor RS images (Li et al. 2021). The DLFC is composed of an encoder and a decoder. The encoder has five stages designed with a dense block and transition layer combination (except the last stage; the last stage only has a dense block). Similarly, the decoder layer has five stages with dense block and transpose layer combinations. The dense block contains three layers with a growth rate = 32. The transition layer contains 1×1 convolution, a dropout layer (rate = 0.2), and 2×2 average pooling. The transpose layer contains a 3×3 convolution layer with ReLU activation. The local feature compression (LFC) module was introduced (designed using two convolution layers with kernel sizes of 7×7 and 5×5) to strengthen the high-level abstract features. LFC accepts high-level abstract features from each encoder stage through skip connections and produces LFC features. Each dense block in the decoder receives combined features from the previous layer and LFC features of the corresponding stage. Group Normalization (GN) is used rather than Batch Normalization (BN) to produce stable accuracy in various batch sizes. DLFC performs better in extracting water bodies in urban areas, where many low albedo objects have similar spectral reflectance. DLFC outperforms other water body extraction techniques such as NDWI, SVM, Unet, Deep U-Net, and DeepLabv3+ by performance metrics such as OA, F1-Score, and IoU. DLFC cannot extract slender water bodies (less than 2 pixels) and suffers from incomplete extraction of small water bodies. In (Yu et al. 2021), the water bodies were extracted from RS images using a self-attention capsule feature pyramid network (SA-CapsFPN). The SA-CapsFPN was designed using the encoder-decoder structure. The encoder module starts with two conventional convolutional layers, followed by capsule convolution and pooling layers. The capsule layer was designed using conventional convolution operations. The advantage of the capsule layer over conventional convolution is powerful feature extraction and representation capabilities. After the first two convolutional layers, the encoder has four stages of capsule blocks to extract different-level and scale feature maps. Each stage contains capsule convolutional and capsule max-pooling layers. Within each stage, the capsule convolutional layer maintains the exact spatial dimensions. The capsule max-pooling layers down-sample the feature maps by factor two. This step increases the capsule’s field of view. The deepest capsule layer has semantically strong feature representations. The dimension of the capsule layer was fixed to 16. The max-pooling operations reduce the localization details, and feature maps are partially damaged in the resultant low-resolution feature maps. A context augmentation and self-attention (CA-SA) module was introduced to address this issue. The CA-SA module is divided into CA and SA modules. The CA module was designed with four parallel paths operated on input feature maps. The four paths (first three paths: 3×3 dilated convolution with rate=1,2 and 3; fourth path: two 3×3 dilated convolution with rate = 3 and 5) were used to extract contextual information. Then, a 1×1 dilated convolution is applied to smooth the feature maps, followed by concatenation and further applied 1×1 dilated convolution to get output feature maps. The inclusion of the CA module identifies water bodies of different sizes. The output feature maps are fed to the SA module to highlight the relevant features and ignore others. The SA module has channel and attention descriptors. The FC layers with ReLU and sigmoid activations exploit channel-wise interdependencies. In the decoder, the feature maps are upsampled by the capsule deconvolution layer and concatenated with feature maps from the encoder (obtained through skip connections). The concatenated feature maps are processed by a 3×3 capsule convolution layer to module the channel number. Concatenating the upsampled low-resolution features (semantically more robust features coming from the deep layer) with high-resolution features (better localization information from the encoder features through skip connections) provides the high-resolution semantically strong feature maps. After four decoder stages, the water prediction map was obtained with the exact spatial resolution as the original input image. The SA-CapsFPN outperforms other DL models FCN, Deep Unet + CRF + RR, DeepLabv3+, RRF DeconvNet, and MSR-Net by the performance metrics precision, recall, and F1-score. SA-CapsFPN misclassifies shadows of high-rise objects (buildings, bridges, and trees) as water bodies. The lightweight MobileNetV2 architecture was designed to extract the complex water bodies from three different RS images (GF-2, World View-2, and Unmanned Aerial Vehicle (UAV)) (Wang et al. 2021). After Geometric correction and radiometric calibration, the Mean shift segmentation was applied to cropped images to combine pixels with similar spectral and textural characteristics. Then, the cropped images were split into training, validation, and test datasets. MobileNetV2 architecture is an improved version of MobileNetV1, and it has an inverted residual block, linear bottleneck, and ReLU6 activation function. The inverted residual block has a skip connection, which transfers the shallow features to deep layers (solves the network degradation problem). Linear bottleneck replaces ReLU with Linear activation in the last layer of the bottleneck structure. ReLU6 shows more robustness in the low-precision calculation. The performance of MobileNetV2 was evaluated by four performance metrics (precision, recall, F1-score, and kappa) and compared with SVM, RF, and U-Net. MobileNetV3 has less computations, parameters, and training time than U-Net. MobileNetV2 effectively extracts complete boundary information of broken water bodies, slender rivers, and ditches. The MobileNetV2 has some problems in the generalization test: salt and pepper noise, misclassification of artificial facilities near water bodies, and incomplete extraction of slender and broken water bodies. Similarly, MobileNetV2 has a problem with extracting small and mixed water bodies (eutrophic water bodies, irrigated farmland with crops, and vegetation around the water bodies). The MobileNetV2 model performs better when trained with low and high-spatial-resolution images. The multichannel water body detection network (MC-WBDN) was constructed using three novel components: a multichannel fusion module, an Enhanced Atrous Spatial Pyramid Pooling module (ESAPP), and Space-to-Depth (S2D)/Depth-to-Space (D2S) operations (Yuan et al. 2021). The multichannel fusion module processes three input images, including the RGB channels, NIR channel, and SWIR channel, using convolution kernels and generates feature maps of the same size. Then, the feature maps were concatenated and served as input to our backbone encoder-decoder network, which is responsible for pixel-level labeling. The encoder was designed by the ResNet-34 model, which has four stages of feature extraction network. The ESAPP module further enhanced these feature maps of the encoder. The ESAPP has parallel convolution layers with different dilation rates for extracting rich contextual information. S2D and D2S operations can mitigate the issues associated with information loss resulting from upsampling and downsampling operations. The S2D transforms pixels from their original locations to channel dimensions. S2D preserves more local features, which are helpful in the decoder process. The S2D was treated as an intramodal augmentation to examine inputs with varying pixel shifts. D2S reverses the procedure. D2S, an alternative to transposed convolutions in upsampling, improves channel information exchange. While training, MC-WBDN combines a pixel-wise Binary Cross Entropy (BCE Loss) and region-based loss (Dice Loss) term to reduce errors and optimize regions' smoothness. MC-WBDN outperforms other conventional spectral indices (NDWI, NDMI, and MNDWI) and DL models (Unet, D-LinkNet, DeepLabV3+, sharp mask, and kemker) in terms of mIoU. Moreover, compared to other methods, MC-WBDN performs better in extracting water bodies in varying light and weather conditions. The W-Net, an end-to-end multi feature-based CNN model, was constructed for SWM using Landsat 8 OLI images (Tambe et al. 2021). The W-Net has a contracting path and an expanding path. The contracting path was five stages, each designed using an Encoder Unit (EU) followed by an Inception Down Unit (IDU). Similarly, the expanding path has five stages, and each stage was designed using a Decoder Unit (DU) followed by an Inception Up unit (IUU). The Bottleneck Unit (BU) connects the fifth stage IDU to the first stage DU without changing spatial dimension. The EU unit contains two 3×3 convolutions (stride=1) followed by 2×2 max pooling. Similarly, the DU unit has upsampling (by factor 2) followed by transpose convolution. IDU was designed using the Inception module, which significantly increases computational efficiency by reducing the number of trainable parameters. The trainable parameters were further reduced by factorizing the symmetric convolution into asymmetric convolution. The 3×3 convolution was factorized into 1×3 convolution followed by 3×1 convolution. Similarly, the 5×5 convolution in the inception module was replaced by two 3×3 convolution, followed by spatial factorization. BU has two 3×3 filter convolution layers followed by a first DU. The IUU is similar to IDU, replacing convolution with transpose convolution. The output of the expanding path was given as input to refinement modules—the contrast stretching for enhancement and Gaussian filtering followed by canny edge detection. The Gaussian filtering reduces the blurriness and improves the prediction quality. Whereas edge detection refines the continuity and discontinuity of boundary pixels of the water body. The W-Net outperforms other DL models, Unet, Deep Unet, Deepcrack, and DeepWMV2, by the performance metrics OA, precision, recall, F1-score, and mIoU. The W-net shows promising effects in extracting narrow river networks. The multiscale residual network (MSResNet) was constructed with self-supervised learning (SSL) for SWM (Dang and Li, 2021). The MSResNet has an encoder and decoder architecture with a bottleneck containing Multiscale Dilated Convolution (MSDC) and Multichannel Max Pooling (MKMP) Modules. The MSResNet uses ResNet34 as a feature extraction network. The skip connections in the architecture were replaced by residual blocks, which reduces the semantic gap and eliminates the vanishing and exploding problems. The high-level feature maps from the encoder were fed to the MSDC module, which enables the effective encoding of high-level semantic feature maps. Furthermore, it enables the collection of diverse contextual information from various levels. The MSDC was constructed by six parallel convolution layers with different dilation rates (rate = 1, 2, 4, 8, and 16). The output of MSDC was fed to the MKMP module, which uses different pooling sizes (2, 3, 5, and 6) to extract global and local features. The MKMP outputs the feature maps of different sizes; later, it was applied to 1×1 convolution for dimensionality reduction, followed by upsampling and concatenation. The feature maps from MKMP enter the decoder section, which gradually recovers the segmentation map from the feature maps. The SSL technique was adopted during the training of MSResNet with total loss function was the combination of SSL loss and supervised learning loss. Based on previous knowledge of water bodies in optical images, four SSL strategies were considered: geometric transformation, noise disturbance, image resolution, and image context fusion learning. The MSResNet + SSL (geometric transformation) technique outperforms MSResNet without SSL and other state-of-the-art DL models LinkNet, HR-Net, DeepLabV3+, FCN, and MECNet by the performance metrics OA and mIoU. The MSResNet could effectively discern water bodies of varying sizes and shapes and helped to preserve water boundaries. In contrast to conventional CNN that only relies on global or local features for water body extraction, (Lu et al. 2022) developed a new framework called neighbor sampler that incorporates neighbor information. The neighbor sampler divided the input RS images into the number of neighbor images. The weakly supervised DL model named neighbor feature aggregation network (NFANet) was designed and trained initially by neighbor images and point labels. The full supervision model uses pixel labels, whereas the weak supervision model uses point labels as initial supervision. The NFANet has a feature aggregation and post-processing module that generates the pseudo labels. The pseudo-labels were put into the neighbor sampler to generate pseudo-label groups and retrain the NFANet using neighbor image groups and pseudo-label groups. By recursive training, the boundaries of water bodies were extracted smoothly without blurring. The NFANet outperforms other state-of-the-art weak supervision approaches by the performance metrics, IoU, and Dice coefficient. The NFANet performs slightly less than full supervision methods in extracting edge water pixels. However, the labeling cost is much less than the full supervision method. The NFANet suffers from misclassifying small water bodies as land and vice-versa. In some cases, the NFANet performs better than full supervision methods. The lightweight U-Net, BU-Net, was constructed for SWM from the RS images (An and Rui, 2022). The structure of BU-Net was similar to Unet but designed with bottleneck blocks instead of conventional convolution layers. The encoder was designed using bottleneck blocks and max pooling layers. Similarly, the decoder was designed using bottleneck block and upsampling layers. The bottleneck block was designed using the sequence of 1×1, 3×3, and 1×1 convolution layers. The skip connections were used to transfer features from the encoder and combine them in the decoder stage. The BU-Net outperforms other DL models, such as Unet, SegNet, ResNet, DenseNet, PSPNet, and NDWI, by the performance metrics OA, F1-Score, and IoU. The parameter benefit measure was formulated to reflect the benefits of using parameters in the model. The BU-Net performs better in extracting large continuous water bodies, discriminating boats and reefs in the water bodies. However, BU-Net misclassifies paddy fields, some residential and industrial lands as water bodies, and slender river networks were incompletely extracted. The Multi-scale Information Enhancement Network (MIE-Net) was constructed to accurately extract the lakes from the RS images (Zhong et al. 2022). The MIE-Net comprises the encoder, Two Way Channel Attention Mechanism (TWCAM), and decoder. The encoder was constructed by five Deep-Down Sampling Blocks (D-DSB). Each D-DSB block contains a Deep Dilation Residual Structure (DDRS) and pooling layer. The DDRS block was designed by local feature extraction and deep feature extraction modules. The local feature extraction module structure was similar to ASPP, which uses three parallel convolution layers with different dilation rates to extract the contextual information. The contextual information is valuable for extracting small water bodies. The deep feature extraction module contains two residual blocks (two 3×3 convolution + BN + ReLU) to extract deep features. Finally, the deep and local features were combined and sent to TWCAM. The TWCAM enhances and suppresses the water and noise features by adopting weight increase and denoise modules. After suppressing the noise, the denoised feature maps were fed into the weight increase module. In the weight increase module, the denoised feature maps fed into two channel attention mechanisms adopted by global average pooling and global max pooling to collect background and water texture features. The two FC layers with activation functions were used in each channel attention mechanism to enhance the water features by giving more weight. The final feature maps were obtained by concatenating the feature maps from the two-channel attention mechanism. The decoder was constructed by five Convolution-Up Sampling Blocks (C-USB). Instead of an upsampling operation, upsampling convolution was performed to avoid the loss of detailed information. The performance of MIE-Net outperforms other DL models Unet, DeepLabV3+, DP-Net, DCN-Net, LA-Net, and MAP-Net by the performance metrics mean pixel accuracy (mPA), mean target accuracy (mTA), and mIoU. The multiscale residual and SE-attention Network (MRSE-Net) was constructed to extract surface water bodies from the RS images (Zhang et al. 2022). As the name indicates, it comprises multiscale residual blocks and Squeeze and Excitation (SE) attention modules. MRSE-Net has an encoder, bottleneck layer, and decoder. The encoder has four stages, and each stage was designed using a multiscale residual module. The multiscale residual module structure was similar to the inception module; instead of employing 3×3, 5×5, and 7×7 convolution in parallel, it was decomposed into a series of three 3×3 convolutions along with residual connection using a 1×1 convolution. Two successive 3×3 and three 3×3 convolutional layers provide outputs similar to 5×5 and 7×7 operations, respectively. The multiscale residual module evaluates targets at multiple scales and extracts detailed high-level features. Instead of max pooling and upsampling, the strided convolution and D2S modules were used to downscale and upscale feature maps. The extraction accuracy was improved by incorporating improved skip connection and SE attention modules in the network. The SE-attention module uses a feature channel recalibration strategy to adjust the weights of each channel based on their contribution to the network. The network automatically obtains new weights for each feature channel based on learned global information to improve extraction accuracy. The SE attention uses global average pooling to compress the feature maps in the spatial dimension. Then, new weights were assigned to each channel (from 0 to 1) using two FC layers. Finally, multiplying the new weight value by the 2D matrix of the original feature map channel provides the final output. The bottleneck layer was designed using two residual modules, each containing three residual blocks for feature learning. The decoder features have undergone more processing layers, which have high-level semantic information than encoder features. Directly combining them using skip connections causes a semantic gap, which hinders network optimization. Two forms of improved skip connections were introduced to alleviate the semantic gap problem: multiscale residual skip connections and inception layer skip connections. The MRSE-Net outperforms other methods such as NDWI, MNDWI, MLP, Unet, DeepUNet, DeepwatermapV2, Deepwatermap-3, Deepcrack, and FCN8 by the performance metrics, precision, recall, and F1-score. MRSE-Net performs better in extracting large and small-scale water bodies (e.g., narrow rivers and lakes). Multihead attention mechanism guided ConvLSTM (MAGC-Net) was designed for pixel-level segmentation of ocean RS images (Pang and Gao, 2022). Three RS images were selected as study areas, including island, beach, and sea ice. Then, grayscale, texture, and HSV features were extracted and concatenated to feed two parallel convolution layers for further feature extraction. The Multihead attention module contains Global Average Pooling (GAP), Average Pooling (AP), and Maxpooling (MP) Attention modules. These three attention modules were applied to the feature vector of each pixel and assigned weight coefficients for each pixel. The combination of Multihead attention mechanisms provides fusion features that offer enhanced deep features for the ConvLSTM layers. The three parallel ConvLSTM layers facilitate the processing of deep features, resulting in the reduction of redundant features and the enhancement of feature fusion. The output features of three ConvLSTM layers were concatenated and fed to the Conv1D layer, followed by sigmoid activation, which was used for pixel prediction. The pyramid split attention Network (PSAGNet) was designed by integrating pyramid split attention and gated convolution modules (Fang et al. 2022). PSAGNet enhances the accuracy of small water body extraction in complicated RS situations. The gated convolution module effectively captures the morphological characteristics of small water bodies from the shallow feature map of the encoder. The pyramid split attention module enables the extraction and fusion of high-order features from multi-scale water bodies, hence offering significant feature encoding that enhances the accuracy of water body extraction. A unique loss function known as FE loss was introduced to mitigate the challenges posed by fuzzy boundaries and class imbalance within the dataset. The proposed method dramatically enhances the delineation of water bodies. The PSAGNet performs better in extracting small water bodies accurately. The Pyramid Scene Parsing Network (PSPNet) (Zhao et al. 2017) was initially designed for semantic segmentation, especially for Scene parsing. Later, the PSPNet was used for RS applications for LULC mapping. The PSPNet was designed using the encoder and pyramid pooling module (PPM). The encoder is the typical CNN architecture (ResNet) that extracts high-level image features. The PPM extracts global contextual information by applying different pooling kernels on high-level feature maps. The levels and size of kernels vary based on the size of input feature maps. The 1×1, 2×2, 3×3, and 6×6 pooling kernels were used to extract global and sub-region contextual information. Then, we applied the convolution layer for channel dimension reduction. Later, the output of all the PPM feature maps was upsampled to the original input feature map dimension and concatenated. Finally, the output feature map was applied to the convolutional layer for pixel classification. The PSPNet was modified to accept multispectral images and used for water body extraction. The Improved PSPNet was designed to detect shorelines in difficult inland river conditions (Yin et al. 2023). The Improved PSPNet has two modifications from the original PSPNet. First, the inclusion of an attention module called Convolutional Block Attention Module (CBAM) in the first and last layer of the encoder (ResNet50). This approach assigns more importance (weights) to the region of interest (water bodies) than other classes. CBAM has a channel attention block followed by a spatial attention block. The channel attention block compresses the spatial dimension of the input feature to a single vector using pooling layers (max- and average pooling) followed by MLP. The features from the channel attention block were element-wise multiplied with the original input feature to feed the spatial attention block. Then, the spatial attention block determines the max-and average-pooling features, followed by concatenation and sigmoid. The spatial attention feature was multiplied with the channel attention feature to get refined feature maps. The spatial attention compresses the channels. Second, the atrous convolution module was added parallel to PPM to extract multiscale contextual information. The atrous convolution uses dilated convolution, which expands the receptive field without additional parameters. The encoder features (shallow), PPM, and atrous convolution features were concatenated and fed to the convolution layer for per-pixel classification. These two modifications improve the irregular water shoreline extraction and eliminate the misclassification errors due to walls and reflection areas. Improved PSPNet outperforms Unet, PSPNet, and DeepLabv3. The performance of various state-of-the-art FCN models was analyzed for water body extraction (Billson et al. 2023). FPN, DeepLabV3+, Swin-Unet, Unet, Unet++, Attention Unet, and R2U-Net were the FCN models considered for the analysis. The FCN models were evaluated on different loss functions and various input combinations. The R2U-Net performs better than other FCN models if trained by combining BCE and Jaccard Loss function. The BCE emphasizes pixel-wise loss, whereas Jaccard emphasizes region-based loss. Similarly, all the FCN models were trained with different input combinations (RGB, NIR, and multispectral). Unsurprisingly, FCN models trained on multispectral inputs produce better IoU than the FCN models trained on RGB and NIR inputs. The narrow rivers and small lakes were missed by the FCN models trained on RGB. Another major issue in the water extraction from RS images is that class imbalance. i.e., the region of interest (water pixels) was significantly less than non-water pixels. A novel pixel category Transplantation (PCT) was implemented to address the class imbalance issue by transferring the water features from the source tile to the destination tile. The augmented tile after applying PCT is considered from ((Billson et al. 2023), Eq. (9)) and it is represented by $$T_{PCT}=\\left(M\\;\\odot\\;T_{source}\\right)+\\left(\\widetilde M\\;\\odot\\;T_{destination}\\right)$$ (5) Where M is the water mask of the source tile representing 1 for water and 0 for non-water. ʘ is the elementwise multiplication. \\(\\overset{\\sim }{M}\\) is an inversion of M. Using PCT, the water feature from one tile can be transferred to another. Transferring the same water features has the risk of overfitting. Two methods can avoid overfitting: 1) random subsampling and 2) using small water features from multiple source tiles instead of transferring from a single tile. The R2U-Net, utilizing the combined loss function (BCE+ Jaccard), multispectral input, and PCT, performs better in extracting water bodies, especially narrow river networks running through mountainous and valley regions. The performance of three DL models, Unet, DeepLabV3+, and PSPNet, was analyzed for surface water body extraction on GF-2 RS images (Shi et al. 2023). A total of six DL models were constructed by varying the feature extraction network (backbone network) of the above three DL models. The Mobilenetv2_PSPNet, Resnet50_PSPNet, Mobilenetv2_DeepLabV3+, Xception_DeepLabV3+, Resnet50_Unet, and vgg16_Unet were the six DL models considered for water body extraction. Among the six DL models, vgg16_Unet (Unet with Vgg16 as feature extraction network) performs better in extracting water bodies. It outperforms other DL models by the performance metrics, accuracy, precision, IoU, mIoU, Pixel Accuracy (PA), and mPA.Then, the performance of vgg16_Unet was further improved by introducing three different attention mechanisms (ECA-vgg16_UNet, MS-CAM-vgg16_UNet, CBAM-vgg16_Unet). The attention mechanism was applied to the concatenated feature maps (feature maps from upsampling + feature maps from encoder via skip connections) at each stage of the decoder section. The attention mechanism emphasizes the relevant objects (water) and ignores irrelevant parts (non-water). Among the three attention mechanisms, the CBAM combined with vgg16_Unet performs better in all the performance measures. The CBAM-Vgg16_Unet model was also evaluated on GF-1, GF-6, Hyperion/ EO1, and Landsat 8 OLI datasets. The Faster R-CNN combined with Region Proposal Network (RPN) was used to detect and localize the water bodies in RS images (Gharbia, 2023). The sentinel-2 and Landsat 8 OLI images captured over the Egypt region were selected as the study area. The RPN generates the candidate object region, and the Region of Interest (ROI) pooling layer extracts features from it. The extracted features were fed into FC layers to classify the objects. The performance of Faster R-CNN was compared with CNN by the performance metrics, OA, precision, recall, and F1-Score. The OA of faster R-CNN was 98.7% and 96.1% for sentinel-2 and Landsat 8 OLI datasets, respectively. The customized U-net (encoder and decoder architecture) was constructed with attention modules and residual blocks for SWM (Kadhim and Premaratne, 2023). The customized U-net has four stages, where each stage has strided convolution (for downsampling) followed by a residual block. The four stages of the encoder extract the multiscale features using residual blocks. The residual block comprises two 3×3 convolutions followed by BN and ReLU for feature extraction. The CBAM attention module was attached as the bottleneck layer, which accepts encoder feature maps to focus on relevant features (water features). Then, the feature maps were passed to the decoder section. Each stage in the decoder concatenates the feature maps from the encoder and feature maps from the previous layer. Transpose convolution with the stride of 2 was used for upsampling the feature maps. The combined features in each decoder stage were passed to the residual block for feature extraction. The features from each decoder stage were concatenated and fed to another CBAM attention module. The final classification layer accepts input from the CBAM module and uses the sigmoid activation function to provide the segmentation map. This customized U-net outperforms residual U-net, Unet, and MRSE-net by the performance metrics, precision, sensitivity, Dice-score, specificity, and accuracy. However, this model fails to extract narrow rivers and complex water boundaries. The multiscale successive attention fusion network (MSAFNet) was proposed that combines multi-level feature aggregation and attention mechanism to extract water bodies from RS images (Lyu et al. 2023). The MSAFNet progressively captures semantic information and spatial features at different scales. The MSAFNet contains a successive attention fusion module (SAFM) and Joint attention module (JAM) in the encoder and a feature fusion module (FFM) in the decoder. In the encoder, the ResNet50 was used to extract the multi-level features. The SAFM employs a single-level attention block (SAB) and multi-level fusion block (MFB) to provide attention to relevant feature maps. The SAB applies patch-wise average pooling to extract informative features from feature maps of different scales and fuse them. The global average pooling was applied on fused multi-level feature maps to obtain global attention. The JAM was constructed by a patch-based local attention block (PLAB) and position self-attention block (PSAB). The JAM was applied to high-level encoder features to enhance feature maps further and suppress the noises. The PLAB improves channel relevance of local features by concentrating on local contextual information, and PSAB extracts correlation between two pixels. Finally, the enhanced low-level and high-level features were aggregated by FFM. FFM alleviates the problem of misclassifying mixed pixels at the edges of water bodies. The MSAFNet outperforms other DL models UNet, PSPNet, DeepLabV3+, UNet++, U2-Net, Attention-UNet, FCN + CBAM, FCN + DA, FCN + SE, MSNANet, and LANet by the performance metrics, OA, Kappa, F1-Score, and mIoU. The MSAFNet accurately extracts small continuous water bodies and shows promising effects in mitigating noises such as building shadows, clouds, and glaciers. SWM using Transformation Techniques The LBV transformation was used to extract the water bodies from Landsat 8 OLI images (Zhang et al. 2017). The general radiance level (L), the visible–infrared radiation balance (B), and the radiance variation vector between bands (V) were the three characteristics extracted by LBV transformation. L represents high or low pixel radiation, B represents relatively high or low radiation in visible-infrared bands, and V indicates radiance variance between bands. The bands with maximum information and minimum correlation were selected from the Landsat 8 OLI images. Among the seven bands (except panchromatic and cirrus bands), bands 3-6 (green, red, NIR, and SWIR) were selected using the band index method. The LBV transformation determines the L, B, and V bands from the surface reflectance of the four bands. The distribution of values in the L band was highly dispersed for the same land cover types because of different topography and environment. Therefore, using the L band was less reliable for water body extraction, and it was discarded from the analysis. From the B and V bands, it was clear that the values in the B band were significantly higher than the values in the V band for water pixels. Therefore, the simple condition states that if the pixels in the bands were higher than the V bands, it was classified as water pixels. The LBV transformation performs better than other popularly known water indices NDWI, MNDWI, and AWEI by the performance metrics PA, UA, OA, and kappa. The LBV transformation shows promising results in extracting water bodies under different water types, topographies, land cover types, and light environments. Also, the LBV method can discriminate shallow water and shadow pixels in RS images. The LBV transformation segments water and non-water pixels from RS images without relying on threshold, prior knowledge, and human expertise. However, turbid pixels were not extracted correctly by this method. The HSI transformation was used to extract the water bodies from sentinel-2 imagery (Bie et al. 2020). The three spectral indices, namely Normalized Difference Built-up Index (NDBI), NDVI, and MNDWI, were determined from the input images and used NDBI as R, NDVI as G, and MNDWI as B to obtain the False Color Composite (FCC) image, named land-veg-water image. Similarly, another FCC image (veg-water image) was obtained using Band-8 as R, NDVI as G, and Band-2 as B. The HSI color space represents achromatic properties compared to the RGB color space. Hue distinguishes feature categories, saturation reflects pixel richness, and intensity eliminates shadows. The two FCC (FCC1 and FCC2) images, namely, land-veg-water and veg-water images, were transformed into two HSI color spaces (HSI1 and HSI2) using the equation outlined in Table 7. The water bodies and building shadows were identified by applying a threshold on HSI1. Similarly, the paddy fields and mountain shadows were identified by applying a threshold on HSI2. The HSI technique outperforms other spectral indices, EWI and MNDWI, by the performance metrics PA, UA, OA, and kappa. The HSI transformation clearly identified paddy fields and eliminated the shadows. Also, the HSI reduced the misclassification of low-albedo roofs as water bodies. The HSI approach misclassified the small amount of building shadows as water bodies. The major drawback was threshold determination when it was applied to other regions. The SWM using transformation techniques are outlined in Table 7. Table 7 SWM using Transformation Techniques Full size table SWM using Particle Swarm Optimization The new method called spectrum matching based on discrete particle swarm optimization (SMDPSO) was developed to extract the water bodies from Landsat 8 OLI images (Jia et al. 2018). It is based on spectral properties like low reflectance and monotonicity. The framework of SMDPSO was divided into two phases. First, from the input images, the water probability map was determined. The water probability (Pw) is the difference between the standard water spectral curve and the spectral curves of the targets. It is the product of cosine and distance similarities. The higher the Pw indicates a greater probability of water. Then, the water probability map was divided into several tiles. The mean μ and standard deviation σ were determined using the pixels of each tile. Each tile was classified into different classes based on μ/σ values. The μ/σ > 20, 3< μ/σ ≤ 20, μ/σ < 3 and μ ≤ 0.25, and μ/σ < 3 and μ ≤ 0.25 was classified into homogeneous water or non-water, heterogeneous non-water, small tributaries, land-water interface, respectively. Each tile's pixel is classified as water or non-water by maximizing the objective function resolved by DPSO. Finally, all the tiles were combined to form the final prediction map. SMDPSO effectively removes shallows and dark vegetation while preserving the natural distribution of small ponds, outperforming unsupervised and supervised approaches. Due to spectral similarity, SMDPSO is ineffective for aquatic cities, constructions, and land-water inundation areas. Additionally, SMDPSO struggles to differentiate shadows, ice, snow, and clouds without additional information, such as DEM. The SMDPSO outperforms ISODATA, K-Means, ML, NNC, and SVM by the performance metrics, OA (98.98%), Kappa (94.59%), CE (7.18%), and OE (0.695%). The SMDPSO has high CE (misclassification of infrastructure and mixed pixel as water) and OE due to misclassification of arid land as water. The SMDPSO with Linear Feature Enhancement (LFE) was used to extract the water bodies, especially small rivers and tributaries, from FengYun-3 images (Wei et al. 2020). The water probability image was determined from the input image by selecting the standard spectrum. Then, the water probability map was divided into 4x4 blocks, and DPSO processed each block to extract water bodies. The mean μ and standard deviation σ were calculated from the water probability map, and the blocks were roughly classified based on μ and σ. The block which satisfies the μ/σ > 20, μ/σ > 0.7, μ/σ > 0.3 were classified as the homogenous water or non-water class, mixed non-water, small tributaries. The Duda Road Operator (DRO) was introduced to enhance the linear features and extraction of small tributaries. The DRO evaluates the image pixel by pixel based on four operators in different directions. The maximum values determined on 3×3 and 5×5 pixels in different directions produce linear feature enhancement results. The SMDPSO outperforms other methods, single-band thresholding, spectral index method, DT, supervised and unsupervised classification, and SMDPSO by the performance metrics, OA (97.56%), Kappa (0.95), F1-score (96.99%), and mIoU (95.17%). The SMDPSO shows promising effects in discriminating vegetation, ice, and clouds from water bodies. Also, SMDPSO performs better in extracting small puddles, lakes, and tributaries. Surface Water Mapping using Spectral Unmixing The common problem in coarse or medium resolution RS images was the mixed pixel. Due to the spatial resolution, the single pixel may contain more than single land cover types. Example: 1) The edge pixels of the water bodies have two land cover types (land and water). 2) The urban RS images commonly include mixed pixels due to the spectrally different materials being near together in urban areas. The traditional pixel-based methods fail to analyze the spectral reflectance within a pixel, resulting in severe misclassification at land-water boundaries and urban areas. The spectral mixture analyses (SMA) address these spectral heterogeneity issues and provide an accurate segmentation map. The SMA or Spectral unmixing decomposes the spectral signature of the single pixel into fractional coverage of each class present within a pixel. The linear spectral mixture analysis (LSMA) shows a promising technique to extract sub-pixel information. In the LSMA approach, every pixel's spectral reflectance is expressed through a linear combination of spectrally pure land cover elements referred to as endmembers. LSMA aims to break down a mixed pixel into the spectral profiles of end members and determine the proportionate presence of each end member within that pixel. The LSMA equation is taken from ((Ling et al. 2020), Eq. (2)) and it is represented by $${\\rho}_j=\\sum\\nolimits_{i=1}^N{f}_i\\times {\\rho}_{ij}+{\\varepsilon}_j$$ (6) where ρj represents the pixel reflectance of band j, N represents number of end members, ρij and fi represents the reflectance and fractional cover of ith endmember, and εj denotes the residual term. LSMA models the landscapes using an invariant collection of endmembers with constant spectrums for single land cover types, which are inappropriate for urban areas. In urban areas, the same material possesses different spectral curves (high within-class spectral variability). To address the above drawbacks of LSMA, Multiple Endmember Spectral Mixture Analysis (MESMA) was introduced. The MESMA allows the type and number of endmembers to vary for each pixel by considering the spectral and spatial variability of complex urban environments. The research exploring the spectral unmixing techniques for surface water body extraction is discussed below. The spectral unmixing (LSMA) technique was used for mapping coastal wetlands using LISS-III and Landsat TM images (Shanmugam et al. 2006). This paper compares LSMA with hard classification techniques such as MLC and ISODATA. The performance of MLC and ISODATA decreased when the number of classes increased. It was identified that the misclassification was due to spectral separability and limited instantaneous field of view (IFOV). The linear spectral unmixing technique was used to estimate the fractional abundance of endmembers within the pixel. The endmembers were selected directly from the image or scene instead of the spectral library, which significantly suffers from spatial and temporal variability in reflectance properties of land cover types. Due to limited spectral bands, three send members were selected using minimum noise fraction (MNF) transformation. The spectral endmembers (vegetation, soil, and moisture) were selected from scatter plot of MNF B1 and MNF B2. Then, linear spectral unmixing was used to determine the fraction maps of endmembers. In moisture fraction, moisture (water) has a higher value than vegetation and soil. The experimental result shows that the linear spectral unmixing technique outperforms other hard classification techniques. The Hierarchical MESMA was developed to map urban land cover types using Hyperspectral Mapper (HyMap) data captured over Bonn, Germany (Franke et al. 2009). MESMA, combined with the spatial constraints, was utilized to map land covers ranging from imperviousness to material discrimination. The Endmember Average RMS (EAR), Minimum Average Spectral Angle (MASA), and Count Based Endmember Selection (COB) were the techniques used to identify the most representative endmembers (high degree of spectral confusion with members outside the class) in each complexity level. These methods need knowledge of the spectral characteristics of each material to assign each spectrum to a particular class. First-level (impervious and pervious classes), second-level (Water, vegetation, built-up, and bare soil), third-level (River, lakes/basins, road, roof/building, trees, grass, and bare soil), and fourth-level (20 classes) were the four-levels considered in this study. After the optimal endmember selection, 2-, 3- or four endmember models were developed, and the single/combination of endmember models was used to determine the highest endmember fractions for assigning a land cover class. The highly accurate models at the lower level were used to constrain higher-level model selection, showing promising effects in extracting land cover types in urban environments. The combination of MESMA with a hierarchical framework achieved accuracies of 97.2%, 97.2%, 81.7%, and 75.9% for hierarchical levels 1 to 4, respectively. The NDVI and spectral unmixing (MF) technique (NDVI+MF) was combined to extract the isolated wetlands in Cuyahoga County, Ohio (Frohn et al. 2012). The NDVI was initially used to mask vegetation and impervious surfaces such as pavements, roads, parking lots, and buildings. The CE (i.e., false positives) were significantly reduced using NDVI before the spectral unmixing. The MF was the partial unmixing technique to determine the fractional proportion of specific/ target endmember (water) within a pixel (i.e., mixed pixel). The MF eliminated the determination of other endmembers of other land cover types unnecessarily. The knowledge of water spectra was enough to unmix the water from the mixed pixels. After spectral unmixing, the thresholding was used to segment the wetland areas from other background regions. The threshold value was determined from the mean and standard deviation. After classification, the isolated wetland map was post-processed to combine adjacent pixels based on four neighbors. The NDVI + MF shows better performance in extracting isolated wetlands with the performance metrics OA (92.79%), kappa (0.86), PA (87.9%), and UA (97.4%). However, the isolated wetlands less than 30m were not identified. A Locally Adaptive Unmixing (LAU) approach was developed to extract and monitor the lakes in semi-arid and arid regions of China using MODIS data (Ma et al. 2014). Since the histogram of the NIR band effectively discriminates the water and land pixels, it was used to extract the pure water pixels. The mixed pixels were surrounded by pure water pixels with the contributions of two classes or endmembers (water and land). After extracting pure water pixels, the morphological dilation operation was applied to pure water pixels, and the expanded pixels were identified as mixed pixels. The spectral unmixing includes two steps: 1) endmember selection and 2) spectral unmixing. The efficiency of unmixing depends on the selection of endmembers. The traditional unmixing technique determines endmembers through pixel purity assessment, which relies on spatial heterogeneity and spectral reflectance. Variables like water impurities and depth influence pure water pixels, while pure land pixels are affected by geographic location and terrain. In this method, the endmembers for mixed pixels (comprising both water and land) were determined by multiplying the reflectance of adjacent pixels using varying weights. The endmember reflectivity (water) was determined by multiplying the weights and reflectivity of neighboring water pixels in the window. Here 3×3 or 5x5 window was used to determine the endmembers. After selecting potential endmembers, linear unmixing was used to determine the fraction maps, followed by thresholding to produce water extraction. The LAU method outperforms the thresholding method in terms of error analysis. The surface area determined with the LAU method was closely correlated with reference data. The inundation and surface dynamics of wetlands were mapped using Landsat and LiDAR data (Huang et al. 2014). The surface reflectance (SR) data of 2005, 2009, and 2010 images were normalized to 2007 SR data using dark object normalization. Then, the 2007 Landsat image and the corresponding Subpixel Inundation percentage (SIP) were modeled using correlation analysis, stepwise linear regression, and regression trees. A 1m SIP map obtained from 1m LiDAR data validated the predicted SIP maps. Additionally, the surface dynamics of wetlands were monitored by this technique, and a correlation between the water extent and drought conditions, and stream flow was analyzed. The MESMA with the RF ML technique was integrated for flood mapping over Yuyao City, China, using HJ-1B satellite images (Feng et al. 2015). The optimal endmember selection was performed after the atmospheric and geometric correction and radiometric calibration. A total of 35 optimal endmembers grouped into vegetation (10 endmembers), water (12), impervious surface (8), and bare soil (5) were determined by CoB, MASA, and EAR techniques. The SMA models were obtained by combining the all-possible combination of the endmembers. The shade endmember (0s in the bands) was also considered to determine the potential SMA models. The two- (35), three - (446), and four-endmember (2640) models were generated to account for all possible variations of endmembers. The water fraction maps provided by MESMA and other attributes such as reflectance bands, NDWI, DEM, Slope, and Aspect were used as feature sets for RF classification. The final flood prediction map was obtained by RF classification. The use of MESMA fractions improves classification accuracy by 2.5%. The experimental result shows that MESMA with RF outperforms MLC and NDWI by the performance metrics OA (94%) and kappa (0.88). The automatic subpixel water mapping method (ASWM) was developed for SWM using Landsat 8 OLI images for heterogeneous urban conditions (Xie et al. 2016b). First, the NDWI water index was obtained from the input image. Then, based on the slopes of the histogram's bimodal distribution, the thresholds for water and land pixels were determined. The pixels between these two thresholds were selected as initial mixed pixels. The mixed pixel extraction was refined by applying post-processing techniques. The pixels that satisfy the conditions (were selected as potential mixed pixels. The water fraction map was obtained from the mixed pixels by two steps: 1) end member selection using the adjacent spatial information and 2) spectral unmixing procedure. The spectrum of the land endmember was computed by adaptively iterating the local window to identify the purest land pixel, whereas the spectrum of the water endmember was generated by averaging the water pixels in the local window. Next, the spectral unmixing technique (LSMA) determined the water fraction map based on the fractional abundance of endmembers within the pixel. The total and range of endmember abundances were limited to one and 0–1, respectively. The ASWM outperforms MNDWI, CEM, fully-constrained least squares (FCLS), and MESMA by the performance metrics PA (82.8%), UA (91.8%), Kappa (0.862), and systematic error (SE). In real-world scenarios, the technique used for endmember selection and linear unmixing affects the final results. The SMA technique was used to determine the surface water extent of wetlands and reconstruct the wetland hydrographs (temporal changes in surface area) in the semi-arid regions from 1984 to 2011 using Landsat data (Halabisky et al. 2016). Wetlands were typically shallow without floating vegetation. The four endmembers, such as water, sage steppe, salt, and wetland vegetation, were selected and constructed a four-endmember SMA model. The water and sage steppe were selected directly from the Landsat images. The spectra of water were selected in the deep portion of the river to ensure a reliable/ stable spectral signature. Since the salt and wetland vegetation were not apparent in every Landsat image, mean spectral signatures were used. The LSMA model was used to extract the fraction maps and determine the surface water area. The water fraction of each pixel was multiplied by the area of a single pixel (900 m2) to get the surface water area of a single pixel. The surface water area predicted from the Landsat images was validated with the reference data. The reference data was obtained by delineating the water surface in high-resolution aerial images. Additionally, the hydrographs of 750 wetlands were reconstructed. This method was tested only in semi-arid regions and worked well for small wetlands under 2 pixels (<1800 m2). The possible sources of misclassification were the average spectral signatures for salt and wetland vegetation and the spectral mismatch of spectra in wetlands. The low albedo fraction (LAF) representing the High Albedo-Low Albedo-Vegetation (H-L-V) method was developed based on linear spectral unmixing for surface water body extraction in urban environments (Sun et al. 2017). The H-L-V three-endmember model was implemented to analyze the surface reflectance of input images. The three endmembers were selected using the combined effect of PCA transformation, image-based manual selection, and endmember optimization using cross-validation. The triangular topology was observed upon visualization of the scatter plot of the first two PCs, and the vertexes indicated the H-L-V endmembers. Next, the dark water pixels were selected as low-albedo endmembers in the image and cross-validated by a minimal brightness value. Similarly, the grass and pasture pixels were selected as vegetation endmembers in the image and cross-validated by maximum NDVI values. At last, building roofs, airport runways, and highway intersection pixels were selected as high-albedo endmembers. Then, the unconstrained least square approach was used to determine the LAF maps. Finally, the binary map was obtained by segmenting the LAF map using the optimum threshold (threshold=1). The per-pixel and sub-pixel accuracy was measured using kappa and estimation errors. The LAF method outperforms MNDWI and AWEI in extracting water bodies, especially in boundary regions. The new framework was developed to estimate the subpixel water fraction (SWF) using Landsat Imagery (DeVries et al. 2017). The Dynamic surface water extent model (DSWE) uses a set of decision rules that rely on fixed thresholds to categorize pixels into several classes, including high-confidence water pixels, moderate-confidence water pixels, partial water pixels, and non-water. All high-confidence, moderate-confidence, and partial water pixels were considered as open water with a SWF value of 1. Conversely, land pixels had a SWF of zero. The surface reflectance bands (Blue, Green, Red, NIR, SWIR1, and SWIR2) and spectral indices (NDWI, MNDWI, NDVI, Tasseled Cap Indices, TCW-TCG difference) were combined and aggregated to 150m spectral inputs. Similarly, the SWF was aggregated to 150m SWF. The RF model built with 100 DTs was trained by these 150m spectral inputs and 150m SWFs. Then, the trained RF model was used to predict the 30m SWF by providing 30m spectral inputs. The water extent of a single pixel was determined by multiplying SWF with the area of a single Landsat pixel (0.09ha) and summed over an image to estimate the total water extent. The RMSE and normalized RMSE (nRMSE) were computed to analyze the performance. Comparing SWF with reference data, this method provides very low nRMSE ranging from 0.11 to 0.19. This approach effectively depicts water bodies, massive flooded areas, narrow canals, and canopy-covered water bodies. The subpixel surface water extraction (SSWE) method was developed to enhance the extraction of surface water bodies by subpixel analysis (Xiong et al. 2018). The preprocessing techniques, such as radiometric calibration and atmospheric correction, were applied to raw Landsat images. The SSWE extracts surface water bodies in three steps: 1) The pure water pixels were extracted by the newly derived spectral index, All Band Water Index (ABWI). The ABWI computed the normalized difference between visible (Coastal, blue, green, and red) and infra-red bands (NIR, SWIr1, and SWIR2) of Landsat data. The ABWI outperforms NDWI in extracting pure water pixels by the performance metrics kappa (0.957) and Total Error (7.56%). 2) Extracting the mixed pixels using morphological dilation operation. 3) The MESMA technique effectively extracts various water endmembers and determines the proportions of water fractions within mixed water-land pixels. Due to water pixels' high within-class spectral variability, the water endmembers were selected based on local spatial constraints. i.e., the nearest pure water pixels connected to mixed pixels were selected as endmembers. The SSWE outperforms ASWM and registers high extraction accuracy in optically complex aquatic environments. A novel method for reliable and timely reservoir water dynamics monitoring using sub-pixel size information from daily MODIS images was introduced in (Ling et al. 2020). The MNDWI determined on green and SWIR bands of Landsat images were used as reference data. Spectral unmixing (LSMA) was used to derive daily water fraction images from original MODIS imagery. Then, for each mixed MODIS pixel, linear regression was performed between the reservoir water areas and corresponding water fraction maps. The water fraction maps with values less than 20% and more than 80% were considered as saturated pixels and removed before regression. The water extent was estimated by using the regression coefficient of each MODIS pixel. The final water extent was obtained by averaging the predicted values. The results were further improved by using other spectral unmixing techniques or utilizing more spectral bands of MODIS images and ancillary data, such as DEM in the spectral unmixing model. The quality of reference maps was improved using better water mapping algorithms and post-processing techniques. The full spectral unmixing technique (LSMA) and partial spectral unmixing (Matched Filtering (MF)) were analyzed to estimate the inundation extent of small ponds in Arid regions (Jarchow et al. 2020). Here, the efficiency of LSMA and MF was compared based on accuracy, complexity, and time. LSMA unmixes the spectral signature of a mixed pixel into the linear proportion of endmembers with their fractional abundance covered within the pixel. In contrast, MF identified the target or specified endmember (water in case of water body extraction application) and approximately estimated the fractional abundance of the target endmember within the pixel. The time required to identify and determine all the significant endmembers was high compared to identifying one target endmember. The Spearman rank correlations (rs) was the metric used to analyze the efficiency of MF and LSMA. The experiment results show that the rs of MF and LSMA were better for ponds with an inundation area > 900m2. For the ponds with an inundation area <900m2, both MF and LSMA provide satisfactory results. The primary reasons for the misclassifications were the spectral mismatch between the endmember selection area (Patagonia Lake) and validation area (small stock ponds) due to chlorophyll concentration, shallow waterbodies with floating vegetation, suspended solids, and water depth. The partial unmixing technique (MF) was used to estimate the inundation of small water bodies using Landsat images (Sall et al. 2021). The Landsat images were pre-processed by radiometric calibration to convert DN values to TOA reflectance. After that, dark object subtraction was performed to remove the effects of atmospheric effects from the reflectance of dark objects. Then, spectral unmixing estimates the fractional abundance of endmembers present in a pixel. Here, MF was used as a spectral unmixing technique. Therefore, selecting the water endmember was enough to produce the fraction maps. The water endmember was selected in a nearby large water body (Parker Canyon Lake) to capture the best spectral characteristics. The water endmember was directly obtained from the image by taking the mean of 53 pure water pixels. After selecting the endmember, MF estimates the water abundance of a single pixel ranging from negative to ≥ 1. The negative values indicate no water and positive values indicate water coverage. A cell covered 100% by water was indicated by values ≥ 1.0. The surface water extent was obtained by multiplying the fraction map with the area of a single pixel (900 m2). The surface water area was validated by high-resolution worldview-2 and NAIP imagery. The 34-year surface water area was also analyzed with a three-month standardized precipitation index (SPI01) and different drought indices. A novel automated and hierarchical surface water fraction mapping (AHSWFM) framework was developed for SWM from sentinel-2 imagery (Wang et al. 2022). First, the sentinel-2 multispectral images were downscaled to 10m resolution using the principal component analysis pansharpening technique. Then, the NDWI determination followed by OTSU segmentation provides the 10m binary surface water map. The hierarchical structure of AHSWFM splits the pixels into pure water, pure land, and mixed pixels based on statistical values (mean and standard deviation) of binary surface water maps. It predicts their water fractions individually to prevent overestimating water fractions for pure land pixels and underestimating water fractions for pure water pixels. This step segregates the mixed pixels from pure land and water pixels. The mixed pixels were addressed by a self-trained model, which does not require prior information about the pixel. The self-trained model aggregates the 10m resolution multispectral and binary surface water map into coarse resolution multispectral image and binary water map. The coarse-resolution vectors of multispectral image and binary water map trained the RF model. Then, a self-trained RF model was applied to mixed pixels to obtain the mixed pixels' water fraction maps. The final water fraction map was obtained by combining pure land and water pixel fraction maps and the water fraction map provided by the RF model. AHSWFM outperforms MF, LSMA, and MESMA in estimating surface water bodies. Considering other techniques for preparing binary water maps (instead of NDWI+ Otsu segmentation) eliminates the problem of built-up noise. Experiment Results and Discussions SWM is a challenging task that provides significant hurdles to researchers due to numerous environmental factors such as shadows, high/low albedo surfaces, and cloud covers. In addition to reviewing the papers on surface water body extraction, this paper provides the results of SI, ML, and DL techniques. However, it is complicated to compare the results of all the research papers discussed in this paper because of different study areas and datasets. But it is possible to compare a few SI, ML, and DL techniques to provide a comprehensive idea for the researchers working in this community. The qualitative and quantitative analysis of SL, ML, and DL techniques are discussed next. Water Body Extraction using Spectral Indices The Landsat 8 OLI data (shown in Fig. 2(a)) were cropped to the required dimension covering the Vaigai dam. The spectral bands of Landsat 8 OLI data are provided in Table 2. Several spectral indices were determined using spectral bands of Landsat images to produce the binary water mask. In the binary water mask, the yellow and purple region represents the water and non-water areas. The qualitative results of various spectral indices methods are shown in Fig. 9. Fig. 9 SWM using spectral indices Full size image Visually, the spectral indices such as EWI (Yan et al. 2007), NEW (Xiao and Zhu, 2010), and I (Mishra and Prasad, 2015) have misclassifications (water bodies are misclassified into non-water bodies and vice-versa). Similarly, spectral indices such as HRWI (Yao et al. 2015), WI2015 (Fisher et al. 2016), WNDWI (Guo et al. 2017), WI2018 (Raheem, 2018), PI (Jain et al. 2020), ANDWI (Rad et al. 2021), and IWI (Tang et al. 2022) perform better in water body extraction. Figure 10 depicts the quantitative analysis of the spectral indices. Fig. 10 Quantitative analysis of spectral indices Full size image From Fig. 10, it is clear that WI2018 (Raheem, 2018) outperforms other spectral indices by the performance metrics OA (0.998), F1-Score (0.984), and Kappa (0.984). Similarly, the I (Mishra and Prasad, 2015) spectral index shows the least performance among other spectral indices. Water Body Extraction using ML Techniques The ML models are trained using the features extracted from the input multispectral images and their ground truth labels. During testing, the same features were extracted and given to the trained ML model for pixel classification. The spatial, spectral, and textural features can be extracted from the input multispectral images. The results of (Rajendiran and Kumar, 2022) and (Nagaraj et al. 2023) are discussed in this paper. In (Rajendiran and Kumar, 2022), the spectral and textural features are extracted from the LISS-III images and trained ML classifiers for pixel classification. Similarly, (Nagaraj et al. 2023) used Landsat images instead of LISS-III images. The type and number of features extracted from these two input RS images (LISS-III and Landsat 7 ETM+) vary due to the change in spectral resolution. i.e., the features extracted from the Landsat multispectral image cannot be extracted in LISS-III due to the limitation of the number of spectral bands. The number and type of features used for training the model control the pixel classification accuracy. The qualitative and quantitative analysis of (Rajendiran and Kumar, 2022) and (Nagaraj et al. 2023) are explained next. Figures. 11 and 12 depicts the qualitative analysis of ML techniques (Rajendiran and Kumar, 2022) and (Nagaraj et al. 2023). Fig. 11 SWM of Stanely reservoir using ML techniques (Rajendiran and Kumar, 2022) Full size image Fig. 12 SWM of Lake Victoria using ML techniques (Nagaraj et al. 2023) Full size image Figure 11(a) and (b) show the FCC and ground truth images of the Stanely reservoir. Figure 11 (c-g) shows the KNN, DT, RF, SVM, and XGB predictions. Similarly, Fig. 12(a) and (b) show Lake Victoria's multispectral and ground truth images. Figure 12(c-h) shows the GNB, DT, RF, XGB, LightGBM, and CatBoost predictions. While comparing the water predictions with the ground truth, there are misclassifications along the edges and around the water bodies. The details about the dataset, feature extraction, and ML techniques were provided in (Rajendiran and Kumar, 2022) and (Nagaraj et al. 2023). The quantitative analysis of ML techniques (Rajendiran and Kumar, 2022) and (Nagaraj et al. 2023) is provided in Fig. 13. Fig. 13 Quantitative analysis of ML techniques for SWM; (a) Quantitative results of (Rajendiran and Kumar, 2022); (b) Quantitative results of (Nagaraj et al. 2023) Full size image From Figs. 11 and 13(a), it is clear that the XGB outperforms other ML techniques for SWM. The PLF+XGB has Accuracy, Precision, Recall, and mIoU of 0.995, 0.977, 0.990, and 0.969, respectively. The PLF+XGB shows an improvement of 1.53%, 14.26%, 1.33%, and 15.77% in Accuracy, Precision, Recall, and mIoU, respectively, compared to KNN. Figures. 12 and 13(b) clearly show that the LightGBM outperforms other ML techniques. The PLF+LightGBM has an improvement of 5.17%, 4.81%, 6.36%, and 10.85% in Accuracy, Precision, Recall, and mIoU, respectively, compared to DT. Water Body Extraction using DL Techniques The DL techniques use DNNs to extract the water bodies from RS images. The DNNs are trained end-to-end with the input multispectral/hyperspectral images and their corresponding ground truth images. The trained DNN accepts the input image during testing and produces an output binary water mask. The results of DNNs, namely FCN8 (Shelhamer et al. 2017), Unet (Ronneberger et al. 2015), PSPNet (Zhao et al. 2017), SegNet (Badrinarayanan et al. 2017), Deepwater map (Isikdogan et al. 2017), MSCNN (Wang et al. 2020a), SR-SegNet (Weng et al. 2020), MWEN (Guo et al. 2020b), MSLWENet (Wang et al. 2020b), and Improved PSPNet (Yin et al. 2023) are discussed in this paper. These DNNs are trained using the LISS-III multispectral images (Nagaraj and Kumar, 2022) for mapping large-scale water bodies. The qualitative and quantitative analyses of these DNNs are explained next. Figure 14 depicts the qualitative analysis of DNNs for water body extraction. Fig. 14 SWM using DNNs (Nagaraj and Kumar, 2022) Full size image Comparing the water predictions of DNNs (Fig. 14(c-l)) with ground truth (Fig. 14(b)) reveals severe misclassification along and around the water bodies. In terms of visual perception, the Unet and MSCNN predictions are better than other DNNs. Similarly, the SR-SegNet and FCN predictions record the lowest performance among other DNNs. Figure 15 depicts the quantitative analysis of DNNs for SWM. Fig. 15 Quantitative analysis of DNNs for SWM Full size image Figure 15 shows that Unet performs better in all the performance measures followed by Deepwater map, MSCNN, and MWEN. Then, SR-SegNet provides the lowest performance among the DNNs. The Unet has accuracy, precision, recall, specificity, F1-Score, Kappa, FPR, FNR, MCC, and mIoU of 0.990, 0.981, 0.961, 0.990, 0.990, 0.963, 0.009, 0.040, 0.963, and 0.942, respectively. The Unet shows an improvement of 3.23%, 5.71%, 24.32%, 0.71%, 19.27%, 19.77%, 47.05%, 82.30%, 18.15%, and 26.27% in terms of accuracy, precision, recall, specificity, F1-Score, Kappa, FPR, FNR, MCC, and mIoU, respectively compared to SR-SegNet. By analyzing the water body extraction using SI, ML, and DL techniques, it is concluded that the DL techniques perform better than SI and ML methods in terms of performance measures. Summary and Challenges SWM is vital in comprehending and overseeing the planet's water resources, environmental surveillance, and upholding diverse socio-economic undertakings. Given the limitations posed by conventional on-site measurements for mapping water resources, RS imagery has been employed for SWM. Several techniques were explored by the researchers for water body extraction. This paper extensively analyzed the SWM using four major techniques: single band thresholding, spectral indices, ML, DL, and spectral unmixing. Applying a threshold to a single band in the RS image is a direct approach for extracting water bodies. However, it has several limitations due to mixed pixels, variability in water characteristics, environmental conditions, the influence of confused objects (dark vegetation, shadows, low-albedo materials, and surfaces), and lack of contextual information. Spectral indices (Tucker, 1979; Crist and Cicone, 1984; Crist, 1985; McFeeters, 1996; Wilson and Sader, 2002; Al-Khudhairy et al. 2002; Sethre et al. 2005; Jain et al. 2005; Xu, 2006; Lira, 2006; Danaher and Collett, 2006; Ouma and Tateishi, 2006; Lacaux et al. 2007; Yan et al. 2007; Beeri and Phillips, 2007; Mo et al. 2007; Cao et al. 2008; Xiao and Zhu, 2010; Shen and Li, 2010; Wei et al. 2011; Lu et al. 2011; Sun et al. 2012; Feng, 2012; Qiao et al. 2012; Feyisa et al. 2014; Du et al. 2014; Jiang et al. 2014; Maglione et al. 2014; Hassani et al. 2015; Mishra and Prasad, 2015; Yao et al. 2015; Chandrasekar et al. 2010; Menarguez, 2015; Huete et al. 2002; Zhai et al. 2015; Sharma et al. 2015; Ghosh et al. 2015; Fisher et al. 2016; Li et al. 2016b; Xie et al. 2016a; Du et al. 2016; Gao et al. 2016; Yang and Du, 2017; Guo et al. 2017; Zou et al. 2017; Zhou et al. 2017; Moradi et al. 2017; Wang et al. 2018a; Nugraha et al. 2018; Raheem, 2018; Yang et al. 2018; Wu et al. 2018; Wang et al. 2018b; Acharya et al. 2018; Mondejar and Tongco, 2019; Zhou et al. 2019; Deng et al. 2019; Jain et al. 2020; Lai et al. 2020; Chen et al. 2020a; Li et al. 2020; Guo et al. 2020a; Khalid et al. 2021; Rad et al. 2021; Jiang et al. 2021; James et al. 2021; Ning and Lee, 2021; Tang et al. 2022; Liu et al. 2022; Choudhary and Ghosh, 2022) associated with water utilize mathematical calculations on the spectral bands present in the input image to accentuate water-related characteristics. Subsequently, an appropriate thresholding method is utilized to generate a binary water mask. Spectral indices enhance the accuracy of mapping surface water by using multiple bands to amplify water-related attributes more effectively than single-band thresholding (Mondejar and Tongco, 2019). However, they also encounter challenges in identifying water pixels located near boundaries and in the presence of interference like shadows and low-reflectance materials. Additionally, establishing a suitable threshold is complicated due to the variability in spectral characteristics across diverse spatial areas. The results of existing spectral indices (qualitative and quantitative analysis) are explained in section \"Water Body Extraction using Spectral Indices\". The experimental results show that the HRWI (Yao et al. 2015), WI2015 (Fisher et al. 2016), WNDWI (Guo et al. 2017), WI2018 (Raheem, 2018), PI (Jain et al. 2020), ANDWI (Rad et al. 2021), and IWI (Tang et al. 2022) perform better in water body extraction. From Fig. 10, the HRWI has a kappa of 0.943, which agrees with the HRWI (Yao et al. 2015) (Kappa = 0.95 provided in Table 4). From Fig. 10, the WI2015, WNDWI, and IWI have the OA of 99.8%, 99.7%, and 99.7%, respectively. From Fig. 10, the PI has F1-Score and Kappa of 0.968 and 0.967, respectively, which agrees with the PI (Jain et al. 2020) (F1-Score=0.96 and Kappa=0.92 provided in Table 4). The ANDWI provides OA, F1-Score, and Kappa of 0.998, 0.976, and 0.975, respectively, it is in good agreement with the ANDWI (Rad et al. 2021) (OA, F1-Score, and Kappa of 0.98, 0.98, and 0.96, respectively provided in Table 4). From Fig. 10, the WI2018 has an OA, F1-Score, and kappa of 0.998, 0.984, and 0.984, better than all the spectral indices. The WI2018 shows an improvement of 0.41%, 7.07%, and 7.42% in OA, F1-Score, and Kappa, respectively, compared to I (Mishra and Prasad, 2015). SWM using ML techniques was broadly classified into supervised and unsupervised ML approaches. The unsupervised ML entails grouping the pixels based on spectral reflectance to represent water and various land cover categories. The supervised ML techniques (Li and Narayanan, 2003; Baker et al. 2006; Fu et al. 2008; Sivanpillai and Miller, 2010; Otukei and Blaschke, 2010; Lian and Jianfei, 2011; Sun et al. 2014; Huang et al. 2015; Acharya et al. 2016; Wang et al. 2018c; Sui et al. 2018; Zhang et al. 2018; Bangira et al. 2019; Gašparović et al. 2019; Acharya et al. 2019; Wangchuk and Bolch, 2020; Liu et al. 2020; Ghasemigoudarzi et al. 2020; Nagaraj and Kumar, 2021; Gašparović and Singh, 2022; Rajendiran and Kumar, 2022; Nagaraj and Kumar, 2022; Nagaraj et al. 2023; Nagaraj and Kumar, 2023a) train the model using features and ground truth labels. The spectral, textural, and morphological features are manually extracted from the input RS images. Supervised ML offers a better understanding of features, demands less training data and time, involves less hyperparameter adjustment, and reduces resource requirements. However, manually extracting features from the input RS image is arduous, and utilizing optimal features produces better accuracy in water mapping. In response to this challenge, some researchers utilized CNN for feature extraction and ML for pixel classification, leading to a notable enhancement in the accuracy of SWM. Some post-processing techniques were adopted to refine the predictions. Some researchers employed unsupervised ML algorithms for water mapping and supervised ML techniques to validate and enhance the results. The results of existing ML techniques for SWM (qualitative and quantitative analysis) are explained in section \"Water Body Extraction using ML Techniques\". In (Rajendiran and Kumar, 2022), the PLF+XGB outperforms other ML techniques and shows an improvement of 1.53%, 14.26%, 1.33%, and 15.77% in Accuracy, Precision, Recall, and mIoU, respectively, compared to KNN. Similarly, in (Nagaraj et al. 2023), the PLF+LightGBM outperforms other ML techniques and shows an improvement of 5.17%, 4.81%, 6.36%, and 10.85% in Accuracy, Precision, Recall, and mIoU, respectively, compared to DT. The DL techniques have demonstrated superiority over traditional ML approaches in SWM because they automatically learn intricate patterns and features from data. The DL is an end-to-end model that outperforms ML in the following aspects: hierarchical feature learning and the ability to extract contextual and non-linear relationships. Several variants of DL techniques were explored to enhance the accuracy of water body extraction. The FCN architecture with proper encoder and abrupt upsampling eliminates small water bodies and provides a patchy appearance at water boundaries. The encoder-decoder architectures with skip connection (Unet (Ronneberger et al. 2015), SegNet (Badrinarayanan et al. 2017), Deepwater map (Isikdogan et al. 2017), MSCNN (Wang et al. 2020a), SR-SegNet (Weng et al. 2020), MWEN (Guo et al. 2020b), MSLWENet (Wang et al. 2020b)) improves the accuracy by accurately identifying small water bodies and water boundaries. Transferring features using skip connections provides better localization. Several improvements are introduced to mitigate the several issues in DL models. The residual and modified residual blocks (SR-SegNet (Weng et al. 2020), DLFC Net (Li et al. 2021), MSResNet (Dang and Li, 2021), MIE-Net (Zhong et al. 2022), MRSE-Net (Zhang et al. 2022), and MSAFNet (Lyu et al. 2023)) were introduced to mitigate the issue of vanishing and exploding gradient. To address the computational complexity, depthwise separable convolutions (SR-SegNet (Weng et al. 2020)) were introduced to reduce the number of trainable parameters. The dilated convolutions (MWEN (Guo et al. 2020b), MSLWENet (Wang et al. 2020b)) were introduced to capture global and local features by increasing the receptive field without increasing computation complexity. The attention blocks (CBAM, scSE) were introduced in MSR-Net (Duan and Hu, 2019), SA-CapsFPN (Yu et al. 2021), MIE-Net (Zhong et al. 2022), MRSE-Net (Zhang et al. 2022), MAGC-Net (Pang and Gao, 2022), PSAGNet (Fang et al. 2022), Improved PSPNet (Yin et al. 2023), customized U-net (Kadhim and Premaratne, 2023), and MSAFNet (Lyu et al. 2023) provide importance to water features and ignores other landcover types. The ASPP module is introduced in PSPNet (Zhao et al. 2017), MC-WBDN (Yuan et al. 2021), MSResNet (Dang and Li, 2021), and Improved PSPNet (Yin et al. 2023) to capture multi-scale contextual information by adopting different pooling kernels. The post-processing module is introduced in (Fu et al. 2017), (Feng et al. 2018), (Li et al. 2019b), and (Lu et al. 2022) to refine the details of the coarse segmentation map provided by the DNNs. The results of existing DNNs (FCN8, Unet, PSPNet, SegNet, Deepwater map, MSCNN, SR-SegNet, MWEN, MSLWENet, and Improved PSPNet) for SWM (qualitative and quantitative analysis) are explained in section \"Water Body Extraction using DL Techniques\". The experiment results show that the Unet outperforms other DNNs for water body extraction. The Unet shows an improvement of 3.23%, 5.71%, 24.32%, 0.71%, 19.27%, 19.77%, 47.05%, 82.30%, 18.15%, and 26.27% in terms of accuracy, precision, recall, specificity, F1-Score, Kappa, FPR, FNR, MCC, and mIoU, respectively compared to SR-SegNet. DL techniques provide higher accuracy than traditional ML and SI methods but require substantial labeled training data and significant computational resources. However, DL methods also face issues in extracting shadows and mixed pixels. This issue can be addressed using spectral unmixing. The spectral unmixing determines the abundance of endmember spectral signatures in a pixel (fraction map). Then, a suitable thresholding technique is applied to the fraction map to create the final binary water mask. Additionally, the water body extraction using RS images posed several challenges to the researchers. Some of them are listed below. Lack of labeled dataset: DL techniques require vast data for training to provide good accuracy. Obtaining data has become easier due to the increased availability of RS satellites. However, these data come without a reference or ground truth. The DL model trained with the ‘X’ location may not provide good results on the ‘Y’ location. Even though a plethora of data is available, it is unusable due to a lack of ground truth data. Hence, it necessitates data with ground truth on a regional basis to develop a better SWM model. Lack of freely available high-resolution images: The medium resolution sensor images like Landsat, Sentinel-2, and LISS-III are available publicly. The high-resolution images came with financial constraints, where the individual researchers could not afford to buy these datasets due to limited budgets. Extraction of smaller water regions: Numerous DL models were developed to map large-scale water bodies. However, accurately delineating small water bodies like ponds and narrow streams has been challenging, primarily due to their sizes falling below the pixel resolution of medium-resolution sensors. Despite some researchers exploring methods to extract these smaller water bodies, their success has been limited in achieving high levels of accuracy. Extraction of mixed pixels: Misclassification of mixed pixels in medium and small-scale water bodies provides inaccurate water extent estimation. The spectral unmixing technique has been explored and provides accurate subpixel mapping. Selecting endmember (pure spectral signatures) of land cover types is crucial in spectral unmixing. Although, some researchers selected the endmembers from the input RS images. However, it is scale-dependent (the mixture of land cover types within a pixel changes with scale). In practice, the spectral signature of water can vary across different spatial locations. Therefore, it is necessary to have spectral signatures on a regional basis for better subpixel SWM. Extraction of urban water bodies: The extraction of urban water bodies was challenging due to urban noises such as shadows, low-albedo roofs, and surfaces. This can be addressed by spectral unmixing. Integrating DL models with spectral unmixing provides better SWM. Addressing cloud obscuration: Optical images are hindered by a notable issue—cloud obscuration. Nearly all optical images exhibit cloud cover, with only a few being cloud-free. Techniques for cloud masking are employed to remove clouds, but this results in the loss of information below cloud-covered regions. Since Synthetic Aperture Radar (SAR) can penetrate clouds, fusing SAR data with optical data proves advantageous for SWM. Although researchers have explored combining optical and SAR data, challenges persist due to the heterogeneous nature of these datasets. Achieving pixel-level fusion of SAR and optical data is essential for improved surface mapping. Conclusion and Future Scope Spatio-temporal monitoring of surface water dynamics is vital for eco-hydrological studies and water resource management. This review focussed on four major approaches: Spectral Indices, Machine Learning, Deep Learning, and Spectral unmixing for water body extraction. Notably, each approach is extensively reviewed with satellite data, study area, methodology, results, hyperparameter, advantages, and disadvantages to provide valuable insights for upcoming researchers in the field of SWM. Based on the literature and experimental results, it is concluded that the use of spectral indices is the straightforward technique for SWM. However, it requires an appropriate threshold, and determining it poses a challenge. The thresholds of spectral indices methods should be fine-tuned to produce better results. The ML techniques require manual feature extraction from the input images, directly influencing the model's performance. However, determining the optimal features from the input RS image remains challenging. The DNNs with additional key components, including skip connections, dilated convolution, attention mechanisms, and residual blocks, provide better segmentation accuracy. The DNNs perform better than spectral indices and ML techniques. However, all the methods have the problem of extracting mixed pixels. Finally, this review points out the ability of the spectral unmixing approach to address mixed pixel misclassification. The experimental results from state-of-the-art methods aid researchers in grasping the limitations of various approaches and guide them toward future research directions. Based on the review, the possible recommendations are outlined for future research. They include: SWM in the presence of clouds: The serious issue of optical sensors is cloud cover and vegetation obstruction, which make them less effective in accurately identifying water bodies beneath clouds and vegetation. Combining optical data with SAR data or fusion of features extracted from both datasets is a promising approach to enhance SWM. Explainable DL models: The DL models, particularly those with complex architectures, often require large datasets for effective training and better performance. However, this leads to overfitting. Therefore, it is necessary to determine the minimum quantity of data needed for training the DL models. Also, the call for interpreting patterns or features learned by DL models is significant. Need to address mixed pixel problem: After extracting the pure water and land pixels from the RS images by the simple technique, the spectral unmixing technique is applied for extracting trust-worthy water pixels from the mixed pixels. However, using simple techniques like spectral indices for creating coarse binary water maps provides misclassification due to built-up noise, shadows, and dark vegetation. Therefore, integrating the lightweight DL model and spectral unmixing as post-processing mitigates the challenges posed by the mixed pixels. The effective water body extraction by a precise model could be helpful in understanding surface water dynamics and effectively maintaining valuable water resources for future generations. Data availability The datasets utilized in this study can be downloaded from the National Remote Sensing Centre (NRSC), Hyderabad, Indian Space Research Organisation (ISRO), India, which is publicly accessible. Since the datasets are publicly accessible, authors are encouraged to access them via the link https:// bhuvan-app3.nrsc.gov.in/data/download/index.php. The images used for research purposes are illustrated in the manuscript. References Acharya TD, Lee DH, Yang IT, Lee JK (2016) Identification of water bodies in a Landsat 8 OLI image using a J48 decision tree. Sensors 16(7):1075. https://doi.org/10.3390/s16071075 Article   ADS   PubMed   PubMed Central   Google Scholar   Acharya TD, Subedi A, Lee DH (2018) Evaluation of water indices for surface water extraction in a Landsat 8 scene of Nepal. Sensors 18(8):2580. https://doi.org/10.3390/s18082580 Article   ADS   PubMed   PubMed Central   Google Scholar   Acharya TD, Subedi A, Lee DH (2019) Evaluation of machine learning algorithms for surface water extraction in a Landsat 8 scene of Nepal. Sensors 19(12):2769. https://doi.org/10.3390/s19122769 Article   ADS   PubMed   PubMed Central   Google Scholar   Alhassan V, Henry C, Ramanna S, Storie C (2020) A deep learning framework for land-use/land-cover mapping and analysis using multispectral satellite imagery. Neural Comput & Applic 32:8529–8544. https://doi.org/10.1007/s00521-019-04349-9 Article   Google Scholar   Al-Khudhairy DHA, Leemhuis C, Hoffmann V, Shepherd IM, Calaon R, Thompson JR, Gavin H, Gasca-Tucker DL, Zalidis G, Bilas G, Papadimos D (2002) Monitoring wetland ditch water levels using Landsat TM and ground-based measurements. Photogramm Eng Remote Sens 68(8):809–818 Google Scholar   An S, Rui X (2022) A high-precision water body extraction method based on improved lightweight u-net. Remote Sens 14(17):4127. https://doi.org/10.3390/rs14174127 Article   ADS   Google Scholar   Badrinarayanan V, Kendall A, Cipolla R (2017) Segnet: A deep convolutional encoder-decoder architecture for image segmentation. IEEE Trans Pattern Anal Mach Intell 39(12):2481–2495. https://doi.org/10.1109/tpami.2016.2644615 Article   PubMed   Google Scholar   Baker C, Lawrence R, Montagne C, Patten D (2006) Mapping wetlands and riparian areas using Landsat ETM+ imagery and decision-tree-based models. Wetlands 26(2):465–474. https://doi.org/10.1672/0277-5212(2006)26[465:MWARAU]2.0.CO;2 Article   Google Scholar   Bangira T, Alfieri SM, Menenti M, Van Niekerk A (2019) Comparing thresholding with machine learning classifiers for mapping complex water. Remote Sens 11(11):1351. https://doi.org/10.3390/rs11111351 Article   ADS   Google Scholar   Beeri O, Phillips RL (2007) Tracking palustrine water seasonal and annual variability in agricultural wetland landscapes using Landsat from 1997 to 2005. Glob Chang Biol 13(4):897–912. https://doi.org/10.1111/j.1365-2486.2006.01306.x Article   Google Scholar   Bie W, Fei T, Liu X, Liu H, Wu G (2020) Small water bodies mapped from Sentinel-2 MSI (MultiSpectral Imager) imagery with higher accuracy. Int J Remote Sens 41(20):7912–7930. https://doi.org/10.1080/01431161.2020.1766150 Article   Google Scholar   Billson J, Islam MS, Sun X, Cheng I (2023) Water Body Extraction from Sentinel-2 Imagery with Deep Convolutional Networks and Pixelwise Category Transplantation. Remote Sens 15(5):1253. https://doi.org/10.3390/rs15051253 Article   ADS   Google Scholar   Cao RL, Li CJ, Liu LY, Wang JH, Yan GJ (2008) Extracting Miyun reservoir’s water area and monitoring its change based on a revised normalized different water index. Sci Surv Mapp 33:158–160 Google Scholar   Castelluccio M, Poggi G, Sansone C, Verdoliva L, 2015. Land use classification in remote sensing images by convolutional neural networks. arXiv preprint arXiv:1508.00092 Chandrasekar K, Sesha Sai MVR, Roy PS, Dwevedi RS (2010) Land Surface Water Index (LSWI) response to rainfall and NDVI using the MODIS Vegetation Index product. Int J Remote Sens 31(15):3987–4005. https://doi.org/10.1080/01431160802575653 Article   Google Scholar   Chen J, Chen S, Fu R, Li D, Jiang H, Wang C, Peng Y, Jia K, Hicks BJ (2022) Remote sensing big data for water environment monitoring: Current status, challenges, and future prospects. Earth's. Future 10(2). https://doi.org/10.1029/2021ef002289 Chen J, Kang T, Yang S, Bu J, Cao K, Gao Y (2020a) Open-surface water bodies dynamics analysis in the Tarim River Basin (North-Western China), based on Google Earth Engine cloud platform. Water 12(10):2822. https://doi.org/10.3390/w12102822 Article   CAS   Google Scholar   Chen LC, Papandreou G, Kokkinos I, Murphy K, Yuille AL (2017) Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and fully connected crfs. IEEE Trans Pattern Anal Mach Intell 40(4):834–848. https://doi.org/10.1109/tpami.2017.2699184 Article   PubMed   Google Scholar   Chen Y, Fan R, Yang X, Wang J, Latif A (2018) Extraction of urban water bodies from high-resolution remote-sensing imagery using deep learning. Water 10(5):585. https://doi.org/10.3390/w10050585 Article   Google Scholar   Chen Y, Tang L, Kan Z, Bilal M, Li Q (2020b) A novel water body extraction neural network (WBE-NN) for optical high-resolution multispectral imagery. J Hydrol 588:125092. https://doi.org/10.1016/j.jhydrol.2020.125092 Article   Google Scholar   Choudhary SS, Ghosh SK (2022) Surface water area extraction by using water indices and DFPS method applied to satellites data. Sensing Imaging 23(1):33. https://doi.org/10.1007/s11220-022-00403-4 Article   ADS   Google Scholar   Corbane C, Pesaresi M, Kemper T, Politis P, Florczyk AJ, Syrris V, Melchiorri M, Sabo F, Soille P (2019) Automated global delineation of human settlements from 40 years of Landsat satellite data archives. Big Earth Data 3(2):140–169. https://doi.org/10.1080/20964471.2019.1625528 Article   Google Scholar   Crist EP (1985) A TM tasseled cap equivalent transformation for reflectance factor data. Remote Sens Environ 17(3):301–306. https://doi.org/10.1016/0034-4257(85)90102-6 Article   ADS   Google Scholar   Crist EP, Cicone RC (1984) A physically-based transformation of Thematic Mapper data---The TM Tasseled Cap. IEEE Trans Geosci Remote Sens 3:256–263. https://doi.org/10.1109/tgrs.1984.350619 Article   ADS   Google Scholar   Danaher T, Collett L, 2006 Development, optimisation and multi-temporal application of a simple Landsat based water index. In Proceeding of the 13th Australasian Remote Sensing and Photogrammetry Conference, Canberra, ACT, Australia (Vol. 2024) Dang B, Li Y (2021) MSResNet: Multiscale residual network via self-supervised learning for water-body detection in remote sensing imagery. Remote Sens 13(16):3122. https://doi.org/10.3390/rs13163122 Article   ADS   Google Scholar   Deng Y, Jiang W, Tang Z, Ling Z, Wu Z (2019) Long-term changes of open-surface water bodies in the Yangtze River basin based on the Google Earth Engine cloud platform. Remote Sens 11(19):2213. https://doi.org/10.3390/rs11192213 Article   ADS   Google Scholar   DeVries B, Huang C, Lang MW, Jones JW, Huang W, Creed IF, Carroll ML (2017) Automated quantification of surface water inundation in wetlands using optical satellite imagery. Remote Sens 9(8):807. https://doi.org/10.3390/rs9080807 Article   ADS   Google Scholar   Donchyts G, Baart F, Winsemius H, Gorelick N, Kwadijk J, Van De Giesen N (2016) Earth's surface water change over the past 30 years. Nat Clim Chang 6(9):810–813. https://doi.org/10.1038/nclimate3111 Article   ADS   Google Scholar   Du Y, Zhang Y, Ling F, Wang Q, Li W, Li X (2016) Water bodies’ mapping from Sentinel-2 imagery with modified normalized difference water index at 10-m spatial resolution produced by sharpening the SWIR band. Remote Sens 8(4):354. https://doi.org/10.3390/rs8040354 Article   ADS   Google Scholar   Du Z, Li W, Zhou D, Tian L, Ling F, Wang H, Gui Y, Sun B (2014) Analysis of Landsat-8 OLI imagery for land surface water mapping. Remote Sens Lett 5(7):672–681. https://doi.org/10.1080/2150704x.2014.960606 Article   Google Scholar   Duan L, Hu X (2019) Multiscale refinement network for water-body segmentation in high-resolution satellite imagery. IEEE Geosci Remote Sens Lett 17(4):686–690. https://doi.org/10.1109/lgrs.2019.2926412 Article   ADS   Google Scholar   Duan Y, Zhang W, Huang P, He G, Guo H (2021) A New Lightweight Convolutional Neural Network for Multi-Scale Land Surface Water Extraction from GaoFen-1D Satellite Images. Remote Sens 13(22):4576. https://doi.org/10.3390/rs13224576 Article   ADS   Google Scholar   Fang W, Wang C, Chen X, Wan W, Li H, Zhu S, Fang Y, Liu B, Hong Y (2019) Recognizing global reservoirs from Landsat 8 images: A deep learning approach. IEEE J Selected Top Appl Earth Observ Remote Sens 12(9):3168–3177. https://doi.org/10.1109/jstars.2019.2929601 Article   ADS   Google Scholar   Fang Y, Lyu X, Tong B, Gao S, Li X, Wang X, Xu Z (2022) PSAGNet: A Water Body Extraction Method for High Resolution Remote Sensing Images. In: International Conference on Image, Vision and Intelligent Systems. Springer Nature Singapore, Singapore, pp 257–269. https://doi.org/10.1007/978-981-99-0923-0_26 Chapter   Google Scholar   Feng D (2012) A new method for fast information extraction of water bodies using remotely sensed data. Remote Sens Technol Appli 24(2):167–171. https://doi.org/10.11873/j.issn.1004-0323.2009.2.167 Article   Google Scholar   Feng L, Hu C, Chen X, Cai X, Tian L, Gan W (2012) Assessment of inundation changes of Poyang Lake using MODIS observations between 2000 and 2010. Remote Sens Environ 121:80–92. https://doi.org/10.1016/j.rse.2012.01.014 Article   ADS   Google Scholar   Feng Q, Gong J, Liu J, Li Y (2015) Flood mapping based on multiple endmember spectral mixture analysis and random forest classifier—The case of Yuyao. China Remote Sens 7(9):12539–12562 Article   ADS   Google Scholar   Feng W, Sui H, Huang W, Xu C, An K (2018) Water body extraction from very high-resolution remote sensing imagery using deep U-Net and a superpixel-based conditional random field model. IEEE Geosci Remote Sens Lett 16(4):618–622. https://doi.org/10.1109/lgrs.2018.2879492 Article   ADS   Google Scholar   Feyisa GL, Meilby H, Fensholt R, Proud SR (2014) Automated Water Extraction Index: A new technique for surface water mapping using Landsat imagery. Remote Sens Environ 140:23–35. https://doi.org/10.1016/j.rse.2013.08.029 Article   ADS   Google Scholar   Fisher A, Flood N, Danaher T (2016) Comparing Landsat water index methods for automated water classification in eastern Australia. Remote Sens Environ 175:167–182. https://doi.org/10.1016/j.rse.2015.12.055 Article   ADS   Google Scholar   Franke J, Roberts DA, Halligan K, Menz G (2009) Hierarchical multiple endmember spectral mixture analysis (MESMA) of hyperspectral imagery for urban environments. Remote Sens Environ 113(8):1712–1723 Article   ADS   Google Scholar   Frohn RC, D’Amico E, Lane C, Autrey B, Rhodus J, Liu H (2012) Multi-temporal sub-pixel Landsat ETM+ classification of isolated wetlands in Cuyahoga County, Ohio, USA. Wetlands 32:289–299. https://doi.org/10.1007/s13157-011-0254-8 Article   Google Scholar   Fu G, Liu C, Zhou R, Sun T, Zhang Q (2017) Classification for high resolution remote sensing imagery using a fully convolutional network. Remote Sens 9(5):498. https://doi.org/10.3390/rs9050498 Article   ADS   Google Scholar   Fu J, Wang J, Li J, 2008. Study on the automatic extraction of water body from TM image using decision tree algorithm. In International Symposium on Photoelectronic Detection and Imaging 2007: Related Technologies and Applications (Vol. 6625, pp. 17-25). SPIE. https://doi.org/10.1117/12.790602 Gao H, Wang L, Jing L, Xu J, 2016 An effective modified water extraction method for Landsat-8 OLI imagery of mountainous plateau regions. In IOP conference series: earth and environmental science (Vol. 34, No. 1, p. 012010). IOP Publishing. https://doi.org/10.1088/1755-1315/34/1/012010 Gašparović M, Singh SK (2022) Urban surface water bodies mapping using the automatic k-means based approach and sentinel-2 imagery. Geocarto Int:2148757. https://doi.org/10.1080/10106049.2022.2148757 Gašparović M, Zrinjski M, Gudelj M (2019) Automatic cost-effective method for land cover classification (ALCC). Comput Environ Urban Syst 76:1–10. https://doi.org/10.1016/j.compenvurbsys.2019.03.001 Article   Google Scholar   Ghaderizadeh S, Abbasi-Moghadam D, Sharifi A, Tariq A, Qin S (2022) Multiscale dual-branch residual spectral–spatial network with attention for hyperspectral image classification. IEEE J Selected Top Appl Earth Observ Remote Sens 15:5455–5467. https://doi.org/10.1109/jstars.2022.3188732 Article   ADS   Google Scholar   Gharbia R (2023) Deep Learning for Automatic Extraction of Water Bodies Using Satellite Imagery. J Indian Soc Remote Sens 51(7):1511–1521. https://doi.org/10.1007/s12524-023-01705-0 Article   Google Scholar   Ghasemigoudarzi P, Huang W, De Silva O, Yan Q, Power D (2020) A machine learning method for inland water detection using CYGNSS data. IEEE Geosci Remote Sens Lett 19:1–5. https://doi.org/10.1109/lgrs.2020.3020223 Article   Google Scholar   Ghosh MK, Kumar L, Roy C (2015) Monitoring the coastline change of Hatiya Island in Bangladesh using remote sensing techniques. ISPRS J Photogramm Remote Sens 101:137–144. https://doi.org/10.1016/j.isprsjprs.2014.12.009 Article   ADS   Google Scholar   Guo H, He G, Jiang W, Yin R, Yan L, Leng W (2020b) A multi-scale water extraction convolutional neural network (MWEN) method for GaoFen-1 remote sensing images. ISPRS Int J Geo Inf 9(4):189. https://doi.org/10.3390/ijgi9040189 Article   Google Scholar   Guo Q, Pu R, Li J, Cheng J (2017) A weighted normalized difference water index for water extraction using Landsat imagery. Int J Remote Sens 38(19):5430–5445. https://doi.org/10.1080/01431161.2017.1341667 Article   Google Scholar   Guo Q, Wu X, Sang X, Fu Y, Zang Y, Gong X (2020a) An integrated study on change detection and environment evaluation of surface water. Appl Water Sci 10(1):1–15. https://doi.org/10.1007/s13201-019-1109-3 Article   Google Scholar   Halabisky M, Moskal LM, Gillespie A, Hannam M (2016) Reconstructing semi-arid wetland surface water dynamics through spectral mixture analysis of a time series of Landsat satellite images (1984–2011). Remote Sens Environ 177:171–183. https://doi.org/10.1016/j.rse.2016.02.040 Article   ADS   Google Scholar   Hassani M, Chabou MC, Hamoudi M, Guettouche MS (2015) Index of extraction of water surfaces from Landsat 7 ETM+ images. Arab J Geosci 8:3381–3389. https://doi.org/10.1007/s12517-014-1475-y Article   Google Scholar   He K, Zhang X, Ren S, Sun J, 2016. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition (pp. 770-778). https://doi.org/10.1109/cvpr.2016.90 Huang C, Chen Y, Zhang S, Li L, Shi K, Liu R (2016) Surface water mapping from Suomi NPP-VIIRS imagery at 30 m resolution via blending with Landsat data. Remote Sens 8(8):631. https://doi.org/10.3390/rs8080631 Article   ADS   Google Scholar   Huang C, Chen Y, Zhang S, Wu J (2018) Detecting, extracting, and monitoring surface water from space using optical sensors: A review. Rev Geophys 56(2):333–360. https://doi.org/10.1029/2018rg000598 Article   ADS   Google Scholar   Huang C, Peng Y, Lang M, Yeo IY, McCarty G (2014) Wetland inundation mapping and change monitoring using Landsat and airborne LiDAR data. Remote Sens Environ 141:231–242. https://doi.org/10.1016/j.rse.2013.10.020 Article   ADS   Google Scholar   Huang G, Liu Z, Van Der Maaten L, Weinberger KQ 2017. Densely Connected Convolutional Networks. 2017 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pp. 2261–2269. https://doi.org/10.1109/cvpr.2017.243 Huang X, Xie C, Fang X, Zhang L (2015) Combining pixel-and object-based machine learning for identification of water-body types from urban high-resolution remote-sensing imagery. IEEE J Selected Top Appl Earth Observ Remote Sens 8(5):2097–2110. https://doi.org/10.1109/jstars.2015.2420713 Article   ADS   Google Scholar   Huete A, Didan K, Miura T, Rodriguez EP, Gao X, Ferreira LG (2002) Overview of the radiometric and biophysical performance of the MODIS vegetation indices. Remote Sens Environ 83(1-2):195–213. https://doi.org/10.1016/s0034-4257(02)00096-2 Article   ADS   Google Scholar   Iglovikov, V., Mushinskiy, S. and Osin, V., 2017. Satellite imagery feature detection using deep convolutional neural network: A kaggle competition. arXiv preprint arXiv:1706.06169. Isikdogan F, Bovik AC, Passalacqua P (2017) Surface water mapping by deep learning. IEEE J Selected Top Appl Earth Observ Remote Sens 10(11):4909–4918. https://doi.org/10.1109/jstars.2017.2735443 Article   ADS   Google Scholar   Jain SK, Saraf AK, Goswami A, Ahmad T (2006) Flood inundation mapping using NOAA AVHRR data. Water Resour Manag 20:949–959. https://doi.org/10.1007/s11269-006-9016-4 Article   Google Scholar   Jain SK, Singh RD, Jain MK, Lohani AK (2005) Delineation of flood-prone areas using remote sensing techniques. Water Resour Manag 19:333–347. https://doi.org/10.1007/s11269-005-3281-5 Article   Google Scholar   Jain, P., Schoen-Phelan, B. and Ross, R., 2020. Automatic flood detection in SentineI-2 images using deep convolutional neural networks. In Proceedings of the 35th Annual ACM Symposium on Applied Computing (pp. 617-623). https://doi.org/10.1145/3341105.3374023 James T, Schillaci C, Lipani A (2021) Convolutional neural networks for water segmentation using sentinel-2 red, green, blue (RGB) composites and derived spectral indices. Int J Remote Sens 42(14):5338–5365. https://doi.org/10.1080/01431161.2021.1913298 Article   Google Scholar   Jarchow CJ, Sigafus BH, Muths E, Hossack BR (2020) Using full and partial unmixing algorithms to estimate the inundation extent of small, isolated stock ponds in an arid landscape. Wetlands 40:563–575. https://doi.org/10.1007/s13157-019-01201-7 Article   Google Scholar   Jia K, Jiang W, Li J, Tang Z (2018) Spectral matching based on discrete particle swarm optimization: A new method for terrestrial water body extraction using multi-temporal Landsat 8 images. Remote Sens Environ 209:1–18. https://doi.org/10.1016/j.rse.2018.02.012 Article   ADS   Google Scholar   Jiang H, Feng M, Zhu Y, Lu N, Huang J, Xiao T (2014) An automated method for extracting rivers and lakes from Landsat imagery. Remote Sens 6(6):5067–5089. https://doi.org/10.3390/rs6065067 Article   ADS   Google Scholar   Jiang W, He G, Long T, Ni Y, Liu H, Peng Y, Lv K, Wang G (2018) Multilayer perceptron neural network for surface water extraction in Landsat 8 OLI satellite images. Remote Sens 10(5):755. https://doi.org/10.3390/rs10050755 Article   ADS   Google Scholar   Jiang W, He G, Pang Z, Guo H, Long T, Ni Y (2020) Surface water map of China for 2015 (SWMC-2015) derived from Landsat 8 satellite imagery. Remote Sensing Lett 11(3):265–273. https://doi.org/10.1080/2150704x.2019.1708501 Article   ADS   Google Scholar   Jiang W, Ni Y, Pang Z, Li X, Ju H, He G, Lv J, Yang K, Fu J, Qin X (2021) An effective water body extraction method with new water index for sentinel-2 imagery. Water 13(12):1647. https://doi.org/10.3390/w13121647 Article   Google Scholar   Kadhim IJ, Premaratne P (2023) A Novel Deep Learning Framework for Water Body Segmentation from Satellite Images. Arab J Sci Eng. https://doi.org/10.1007/s13369-023-07680-5 Kang J, Guan H, Peng D, Chen Z (2021) Multi-scale context extractor network for water-body extraction from high-resolution optical remotely sensed images. Int J Appl Earth Obs Geoinf 103:102499. https://doi.org/10.1016/j.jag.2021.102499 Article   Google Scholar   Karpatne A, Khandelwal A, Chen X, Mithal V, Faghmous J, Kumar V (2016) Global monitoring of inland water dynamics: State-of-the-art, challenges, and opportunities. Comput Sustainability:121–147. https://doi.org/10.1007/978-3-319-31858-5_7 Khalid HW, Khalil RMZ, Qureshi MA (2021) Evaluating spectral indices for water bodies extraction in western Tibetan Plateau. Egypt J Remote Sens Space Sci 24(3):619–634. https://doi.org/10.1016/j.ejrs.2021.09.003 Article   Google Scholar   Klemenjak S, Waske B, Valero S, Chanussot J (2012) Unsupervised river detection in RapidEye data. In: In 2012 IEEE International Geoscience and Remote Sensing Symposium. IEEE, pp 6860–6863. https://doi.org/10.1109/igarss.2012.6352587 Chapter   Google Scholar   Kosari A, Sharifi A, Ahmadi A, Khoshsima M (2020) Remote sensing satellite’s attitude control system: rapid performance sizing for passive scan imaging mode. Aircr Eng Aerosp Technol 92(7):1073–1083. https://doi.org/10.1108/aeat-02-2020-0030 Article   Google Scholar   Krizhevsky A, Sutskever I, Hinton GE (2012) Imagenet classification with deep convolutional neural networks. Commun ACM 60(6):84–90. https://doi.org/10.1145/3065386 Article   Google Scholar   Lacaux JP, Tourre YM, Vignolles C, Ndione JA, Lafaye M (2007) Classification of ponds from high-spatial resolution remote sensing: Application to Rift Valley Fever epidemics in Senegal. Remote Sens Environ 106(1):66–74. https://doi.org/10.1016/j.rse.2006.07.012 Article   ADS   Google Scholar   Lai Y, Zhang J, Song Y, Cao Y (2020) Comparative analysis of different methods for extracting water body area of Miyun Reservoir and driving forces for nearly 40 years. J Indian Soc Remote Sens 48:451–463. https://doi.org/10.1007/s12524-019-01076-5 Article   Google Scholar   Längkvist M, Kiselev A, Alirezaie M, Loutfi A (2016) Classification and segmentation of satellite orthoimagery using convolutional neural networks. Remote Sens 8(4):329. https://doi.org/10.3390/rs8040329 Article   ADS   Google Scholar   LeCun Y, Bottou L, Bengio Y, Haffner P (1998) Gradient-based learning applied to document recognition. Proc IEEE 86(11):2278–2324. https://doi.org/10.1109/5.726791 Article   Google Scholar   Li D, Wu B, Chen B, Qin C, Wang Y, Zhang Y, Xue Y (2020) Open-surface river extraction based on Sentinel-2 MSI imagery and DEM data: case study of the upper Yellow River. Remote Sens 12(17):2737. https://doi.org/10.3390/rs12172737 Article   ADS   Google Scholar   Li J, Narayanan RM (2003) A shape-based approach to change detection of lakes using time series remote sensing images. IEEE Trans Geosci Remote Sens 41(11):2466–2477. https://doi.org/10.1109/tgrs.2003.817267 Article   ADS   Google Scholar   Li L, Yan Z, Shen Q, Cheng G, Gao L, Zhang B (2019a) Water body extraction from very high spatial resolution remote sensing data based on fully convolutional networks. Remote Sens 11(10):1162. https://doi.org/10.3390/rs11101162 Article   ADS   Google Scholar   Li M, Wu P, Wang B, Park H, Yang H, Wu Y (2021) A deep learning method of water body extraction from high resolution remote sensing images with multisensors. IEEE J Selected Top Appl Earth Observ Remote Sens 14:3120–3132. https://doi.org/10.1109/jstars.2021.3060769 Article   ADS   Google Scholar   Li R, Liu W, Yang L, Sun S, Hu W, Zhang F, Li W (2018) DeepUNet: A deep fully convolutional network for pixel-level sea-land segmentation. IEEE J Selected Top Appl Earth Observ Remote Sens 11(11):3954–3962. https://doi.org/10.1109/jstars.2018.2833382 Article   ADS   Google Scholar   Li X, Chen W, Cheng X, Wang L (2016a) A comparison of machine learning algorithms for mapping of complex surface-mined and agricultural landscapes using ZiYuan-3 stereo satellite imagery. Remote Sens 8(6):514. https://doi.org/10.3390/rs8060514 Article   ADS   Google Scholar   Li Y, Gong X, Guo Z, Xu K, Hu D, Zhou H (2016b) An index and approach for water extraction using Landsat–OLI data. Int J Remote Sens 37(16):3611–3635. https://doi.org/10.1080/01431161.2016.1201228 Article   Google Scholar   Li Z, Wang R, Zhang W, Hu F, Meng L (2019b) Multiscale features supported DeepLabV3+ optimization scheme for accurate water semantic segmentation. IEEE Access 7:155787–155804. https://doi.org/10.1109/access.2019.2949635 Article   Google Scholar   Lian L, Jianfei C (2011) Spatial-temporal change analysis of water area in Pearl River Delta based on remote sensing technology. Procedia Environ Sci 10:2170–2175. https://doi.org/10.1016/j.proenv.2011.09.340 Article   Google Scholar   Ling F, Li X, Foody GM, Boyd D, Ge Y, Li X, Du Y (2020) Monitoring surface water area variations of reservoirs using daily MODIS images by exploring sub-pixel information. ISPRS J Photogramm Remote Sens 168:141–152. https://doi.org/10.1016/j.isprsjprs.2020.08.008 Article   ADS   Google Scholar   Lira J (2006) Segmentation and morphology of open water bodies from multispectral images. Int J Remote Sens 27(18):4015–4038. https://doi.org/10.1080/01431160600702384 Article   Google Scholar   Liu H, Hu H, Liu X, Jiang H, Liu W, Yin X (2022) A Comparison of Different Water Indices and Band Downscaling Methods for Water Bodies Mapping from Sentinel-2 Imagery at 10-M Resolution. Water 14(17):2696. https://doi.org/10.3390/w14172696 Article   Google Scholar   Liu Q, Huang C, Shi Z, Zhang S (2020) Probabilistic river water mapping from Landsat-8 using the support vector machine method. Remote Sens 12(9):1374. https://doi.org/10.3390/rs12091374 Article   ADS   Google Scholar   Lu M, Fang L, Li M, Zhang B, Zhang Y, Ghamisi P (2022) NFANet: A novel method for weakly supervised water extraction from high-resolution remote-sensing imagery. IEEE Trans Geosci Remote Sens 60:1–14. https://doi.org/10.1109/tgrs.2022.3140323 Article   Google Scholar   Lu S, Wu B, Yan N, Wang H (2011) Water body mapping method with HJ-1A/B satellite imagery. Int J Appl Earth Obs Geoinf 13(3):428–434. https://doi.org/10.1016/j.jag.2010.09.006 Article   Google Scholar   Lyu X, Jiang W, Li X, Fang Y, Xu Z, Wang X (2023) MSAFNet: Multiscale Successive Attention Fusion Network for Water Body Extraction of Remote Sensing Images. Remote Sens 15(12):3121. https://doi.org/10.3390/rs15123121 Article   ADS   Google Scholar   Ma B, Wu L, Zhang X, Li X, Liu Y, Wang S (2014) Locally adaptive unmixing method for lake-water area extraction based on MODIS 250 m bands. Int J Appl Earth Obs Geoinf 33:109–118. https://doi.org/10.1016/j.jag.2014.05.002 Article   Google Scholar   Maglione P, Parente C, Vallario A (2014) Coastline extraction using high resolution WorldView-2 satellite imagery. European J Remote Sens 47(1):685–699. https://doi.org/10.5721/eujrs20144739 Article   Google Scholar   Malinowski R, Groom G, Schwanghart W, Heckrath G (2015) Detection and delineation of localized flooding from WorldView-2 multispectral data. Remote Sens 7(11):14853–14875. https://doi.org/10.3390/rs71114853 Article   ADS   Google Scholar   McFeeters SK (1996) The use of the Normalized Difference Water Index (NDWI) in the delineation of open water features. Int J Remote Sens 17(7):1425–1432. https://doi.org/10.1080/01431169608948714 Article   Google Scholar   Menarguez M (2015) Global water body mapping from 1984 to 2015 using global high resolution multispectral satellite imagery. University of Oklahoma, Norman, OK, USA Google Scholar   Miao Z, Fu K, Sun H, Sun X, Yan M (2018) Automatic water-body segmentation from high-resolution satellite images via deep networks. IEEE Geosci Remote Sens Lett 15(4):602–606. https://doi.org/10.1109/lgrs.2018.2794545 Article   ADS   Google Scholar   Mishra K, Prasad P (2015) Automatic extraction of water bodies from Landsat imagery using perceptron model. J Computational Environ Sci 2015. https://doi.org/10.1155/2015/903465 Mo WF, Sun H, Zhong SQ, Huang YL, He L (2007) Research on the CIWI model and its application. Remote Sensing Inform 5:16–21 Google Scholar   Mohammadi M, Sharifi A, Hosseingholizadeh M, Tariq A (2021) Detection of oil pollution using SAR and optical remote sensing imagery: a case study of the Persian Gulf. J Indian Soc Remote Sens 49(10):2377–2385. https://doi.org/10.1007/s12524-021-01399-2 Article   Google Scholar   Mondejar JP, Tongco AF (2019) Near infrared band of Landsat 8 as water index: a case study around Cordova and Lapu-Lapu City, Cebu, Philippines. Sustainable Environ Res 29:1–15. https://doi.org/10.1186/s42834-019-0016-5 Article   CAS   Google Scholar   Moradi M, Sahebi M, Shokri M (2017) Modified optimization water index (MOWI) for Landsat-8 OLI/TIRS. Int Arch Photogramm Remote Sens Spat Inf Sci 42:185–190. https://doi.org/10.5194/isprs-archives-xlii-4-w4-185-2017 Article   Google Scholar   Mukherjee J, Gebru G, Sood A, Mahey RK, Bal SK, Singh H, Sidhu PK (2010) Wheat yield and acreage prediction using LISS-III and AWiFS sensors data of indian remote sensing satellite of Rupnager district of Punjab, India. Italian J Remote Sens 42(3):115–127. https://doi.org/10.5721/itjrs20104239 Article   Google Scholar   Nagaraj R, Arulvadivelan V, Gouthamkumar K, Dharshen K, Kumar LS (2023) Surface water mapping and volume estimation of Lake Victoria using Machine Learning Algorithms. In: In 2023 International Conference on Signal Processing, Computation, Electronics, Power and Telecommunication (IConSCEPT). IEEE, pp 1–6. https://doi.org/10.1109/IConSCEPT57958.2023.10170600 Chapter   Google Scholar   Nagaraj R, Kumar LS (2021) Performance analysis of machine learning techniques for water body extraction. In: In 2021 IEEE Bombay Section Signature Conference (IBSSC). IEEE, pp 1–6. https://doi.org/10.1109/ibssc53889.2021.9673372 Chapter   Google Scholar   Nagaraj R, Kumar LS (2022) Multi scale feature extraction network with machine learning algorithms for water body extraction from remote sensing images. Int J Remote Sens 43(17):6349–6387. https://doi.org/10.1080/01431161.2022.2136505 Article   Google Scholar   Nagaraj R, Kumar LS (2023a) Surface water body extraction and Change Detection Analysis using Machine Learning Algorithms: A Case study of Vaigai Dam, India. In: In 2023 International Conference on Signal Processing, Computation, Electronics, Power and Telecommunication (IConSCEPT). IEEE, pp 1–6. https://doi.org/10.1109/IConSCEPT57958.2023.10170342 Chapter   Google Scholar   Nagaraj R, Kumar LS (2023b) Univariate Deep Learning models for prediction of daily average temperature and Relative Humidity: The case study of Chennai, India. J Earth Syst Sci 132(3):100. https://doi.org/10.1007/s12040-023-02122-0 Article   ADS   Google Scholar   Ning FS, Lee YC (2021) Combining spectral water indices and mathematical morphology to evaluate surface water extraction in Taiwan. Water 13(19):2774. https://doi.org/10.3390/w13192774 Article   Google Scholar   Noh H, Hong S, Han B (2015) Learning deconvolution network for semantic segmentation. In Proceedings of the IEEE International Conference on Computer Vision (ICCV) (pp. 1520-1528). https://doi.org/10.1109/ICCV.2015.178 Nugraha PVN, Wibirama S, Hidayat R (2018) River body extraction and classification using enhanced models of modified normalized water difference index at Yeh Unda River Bali. In: In 2018 International Conference on Information and Communications Technology (ICOIACT). IEEE, pp 337–342. https://doi.org/10.1109/icoiact.2018.8350789 Chapter   Google Scholar   Otukei JR, Blaschke T (2010) Land cover change assessment using decision trees, support vector machines and maximum likelihood classification algorithms. Int J Appl Earth Obs Geoinf 12:S27–S31. https://doi.org/10.1016/j.jag.2009.11.002 Article   Google Scholar   Ouma YO, Tateishi R (2006) A water index for rapid mapping of shoreline changes of five East African Rift Valley lakes: an empirical analysis using Landsat TM and ETM+ data. Int J Remote Sens 27(15):3153–3181. https://doi.org/10.1080/01431160500309934 Article   Google Scholar   Pang S, Gao L (2022) Multihead attention mechanism guided ConvLSTM for pixel-level segmentation of ocean remote sensing images. Multimed Tools Appl 81(17):24627–24643. https://doi.org/10.1007/s11042-022-12849-5 Article   Google Scholar   Perez-Planells L, Valor E, Coll C, Niclòs R (2017) Comparison and evaluation of the TES and ANEM algorithms for land surface temperature and emissivity separation over the area of Valencia. Spain Remote Sens 9(12):1251. https://doi.org/10.3390/rs9121251 Article   ADS   Google Scholar   Qi B, Zhuang Y, Chen H, Dong S, Li L (2019) Fusion feature multi-scale pooling for water body extraction from optical panchromatic images. Remote Sens 11(3):245. https://doi.org/10.3390/rs11030245 Article   ADS   Google Scholar   Qiao C, Luo J, Sheng Y, Shen Z, Zhu Z, Ming D (2012) An adaptive water extraction method from remote sensing image based on NDWI. J Indian Soc Remote Sens 40:421–433. https://doi.org/10.1007/s12524-011-0162-7 Article   Google Scholar   Rad AM, Kreitler J, Sadegh M (2021) Augmented Normalized Difference Water Index for improved surface water monitoring. Environ Model Softw 140:105030. https://doi.org/10.1016/j.envsoft.2021.105030 Article   Google Scholar   Raheem F (2018) Development of a New Water Index for Landsat Operational Land Imager (OLI) Data Using Bayesian Optimization, vol. 10, 05 Rajendiran N, Kumar LS (2022) Pixel Level Feature Extraction and Machine Learning Classification for Water Body Extraction. Arab J Sci Eng:1–24. https://doi.org/10.1007/s13369-022-07389-x Ronneberger O, Fischer P, Brox T, 2015. U-net: Convolutional networks for biomedical image segmentation. In Medical Image Computing and Computer-Assisted Intervention–MICCAI 2015: 18th International Conference, Munich, Germany, October 5-9, 2015, Proceedings, Part III 18 (pp. 234-241). Springer International Publishing. https://doi.org/10.1007/978-3-319-24574-4_28 Sall I, Jarchow CJ, Sigafus BH, Eby LA, Forzley MJ, Hossack BR (2021) Estimating inundation of small waterbodies with sub-pixel analysis of Landsat imagery: long-term trends in surface water area and evaluation of common drought indices. Remote Sens Ecology Conserv 7(1):109–124. https://doi.org/10.1002/rse2.172 Article   Google Scholar   Schumann GJP, Moller DK (2015) Microwave remote sensing of flood inundation. Phys Chem Earth, Parts a/b/c 83:84–95. https://doi.org/10.1016/j.pce.2015.05.002 Article   ADS   Google Scholar   Sethre PR, Rundquist BC, Todhunter PE (2005) Remote detection of prairie pothole ponds in the Devils Lake Basin, North Dakota. GISci Remote Sens 42(4):277–296. https://doi.org/10.2747/1548-1603.42.4.277 Article   Google Scholar   Shanmugam P, Ahn YH, Sanjeevi S (2006) A comparison of the classification of wetland characteristics by linear spectral mixture modelling and traditional hard classifiers on multispectral remotely sensed imagery in southern India. Ecol Model 194(4):379–394. https://doi.org/10.1016/j.ecolmodel.2005.10.033 Article   Google Scholar   Sharifi A (2021) Development of a method for flood detection based on Sentinel-1 images and classifier algorithms. Water and Environ J 35(3):924–929. https://doi.org/10.1111/wej.12681 Article   Google Scholar   Sharifi A, Amini J (2015) Forest biomass estimation using synthetic aperture radar polarimetric features. J Appl Remote Sens 9(1):097695–097695. https://doi.org/10.1117/1.jrs.9.097695 Article   Google Scholar   Sharifi A, Amini J, Sri Sumantyo JT, Tateishi R (2015) Speckle reduction of PolSAR images in forest regions using fast ICA algorithm. J Indian Soc Remote Sens 43:339–346. https://doi.org/10.1007/s12524-014-0423-3 Article   Google Scholar   Sharifi A, Amini J, Tateishi R (2016) Estimation of forest biomass using multivariate relevance vector regression. Photogramm Eng Remote Sens 82(1):41–49. https://doi.org/10.14358/pers.83.1.41 Article   Google Scholar   Sharma RC, Tateishi R, Hara K, Nguyen LV (2015) Developing superfine water index (SWI) for global water cover mapping using MODIS data. Remote Sens 7(10):13807–13841. https://doi.org/10.3390/rs71013807 Article   ADS   Google Scholar   Shelhamer E, Long J, Darrell T (2017) Fully Convolutional Networks for Semantic Segmentation. IEEE Transac Patt Analy Mach Intel, [online] 39(4):640–651. https://doi.org/10.1109/TPAMI.2016.2572683 Article   Google Scholar   Shen L, Li C (2010) Water body extraction from Landsat ETM+ imagery using adaboost algorithm. In: In 2010 18th International Conference on Geoinformatics. IEEE, pp 1–4. https://doi.org/10.1109/geoinformatics.2010.5567762 Chapter   Google Scholar   Shi T, Guo Z, Li C, Lan X, Gao X, Yan X (2023) Improvement of deep learning Method for water body segmentation of remote sensing images based on attention modules. Earth Sci Inf 16(3):2865–2876. https://doi.org/10.1007/s12145-023-00988-8 Article   ADS   Google Scholar   Sidle RC, Ziegler AD, Vogler JB (2007) Contemporary changes in open water surface area of Lake Inle, Myanmar. Sustain Sci 2:55–65. https://doi.org/10.1007/s11625-006-0020-7 Article   Google Scholar   Simonyan K, Zisserman A, 2014 (2015) Very deep convolutional networks for large-scale image recognition. In: 3rd International Conference on Learning Representations (ICLR 2015), pp. 1–14. https://doi.org/10.48550/arXiv.1409.1556 Sivanpillai R, Miller SN (2010) Improvements in mapping water bodies using ASTER data. Ecological Inform 5(1):73–78. https://doi.org/10.1016/j.ecoinf.2009.09.013 Article   Google Scholar   Sui Y, Fu D, Wang X, Su F (2018) Surface water dynamics in the North America Arctic based on 2000–2016 Landsat data. Water 10(7):824. https://doi.org/10.3390/w10070824 Article   Google Scholar   Sun F, Sun W, Chen J, Gong P (2012) Comparison and improvement of methods for identifying waterbodies in remotely sensed imagery. Int J Remote Sens 33(21):6854–6875. https://doi.org/10.1080/01431161.2012.692829 Article   Google Scholar   Sun F, Zhao Y, Gong P, Ma R, Dai Y (2014) Monitoring dynamic changes of global land cover types: Fluctuations of major lakes in China every 8 days during 2000–2010. Chin Sci Bull 59:171–189. https://doi.org/10.1007/s11434-013-0045-0 Article   Google Scholar   Sun W, Du B, Xiong S (2017) Quantifying sub-pixel surface water coverage in urban environments using low-albedo fraction from Landsat imagery. Remote Sens 9(5):428 Article   ADS   Google Scholar   Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov D, Erhan D, Vanhoucke V, Rabinovich A, 2015. Going deeper with convolutions. In Proceedings of the IEEE conference on computer vision and pattern recognition (pp. 1-9). https://doi.org/10.1109/CVPR.2015.7298594 Tambe RG, Talbar SN, Chavan SS (2021) Deep multi-feature learning architecture for water body segmentation from satellite images. J Vis Commun Image Represent 77:103141. https://doi.org/10.1016/j.jvcir.2021.103141 Article   Google Scholar   Tang W, Zhao C, Lin J, Jiao C, Zheng G, Zhu J, Pan X, Han X (2022) Improved Spectral Water Index Combined with Otsu Algorithm to Extract Muddy Coastline Data. Water 14(6):855. https://doi.org/10.3390/w14060855 Article   Google Scholar   Tariq A, Yan J, Ghaffar B, Qin S, Mousa BG, Sharifi A, Huq ME, Aslam M (2022) Flash flood susceptibility assessment and zonation by integrating analytic hierarchy process and frequency ratio model with diverse spatial data. Water 14(19):3069. https://doi.org/10.3390/w14193069 Article   Google Scholar   Tucker CJ (1979) Red and photographic infrared linear combinations for monitoring vegetation. Remote Sens Environ 8(2):127–150 Article   ADS   Google Scholar   Vorosmarty, C.J., Green, P., Salisbury, J. and Lammers, R.B., 2000. Global water resources: vulnerability from climate change and population growth. science, 289(5477), pp.284-288. https://doi.org/10.1126/science.289.5477.284 Vörösmarty CJ, McIntyre PB, Gessner MO, Dudgeon D, Prusevich A, Green P, Glidden S, Bunn SE, Sullivan CA, Liermann CR, Davies PM (2010) Global threats to human water security and river biodiversity. Nature 467(7315):555–561. https://doi.org/10.1038/nature09440 Article   ADS   CAS   PubMed   Google Scholar   Wang C, Jia M, Chen N, Wang W (2018c) Long-term surface water dynamics analysis based on Landsat imagery and the Google Earth Engine platform: A case study in the middle Yangtze River Basin. Remote Sens 10(10):1635. https://doi.org/10.3390/rs10101635 Article   ADS   Google Scholar   Wang G, Wu M, Wei X, Song H (2020c) Water identification from high-resolution remote sensing images based on multidimensional densely connected convolutional neural networks. Remote Sens 12(5):795. https://doi.org/10.3390/rs12050795 Article   ADS   CAS   Google Scholar   Wang X, Xie S, Zhang X, Chen C, Guo H, Du J, Duan Z (2018a) A robust Multi-Band Water Index (MBWI) for automated extraction of surface water from Landsat 8 OLI imagery. Int J Appl Earth Obs Geoinf 68:73–91. https://doi.org/10.1016/j.jag.2018.01.018 Article   CAS   Google Scholar   Wang Y, Li S, Lin Y, Wang M (2021) Lightweight Deep Neural Network Method for Water Body Extraction from High-Resolution Remote Sensing Images with Multisensors. Sensors 21(21):7397. https://doi.org/10.3390/s21217397 Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Wang Y, Li X, Zhou P, Jiang L, Du Y (2022) AHSWFM: Automated and hierarchical surface water fraction mapping for small water bodies using sentinel-2 images. Remote Sens 14(7):1615. https://doi.org/10.3390/rs14071615 Article   ADS   Google Scholar   Wang Y, Li Z, Zeng C, Xia GS, Shen H (2020a) An urban water extraction method combining deep learning and Google Earth engine. IEEE J Selected Top Appl Earth Observ Remote Sens 13:769–782. https://doi.org/10.1109/jstars.2020.2971783 Article   ADS   Google Scholar   Wang Z, Gao X, Zhang Y, Zhao G (2020b) MSLWENet: A novel deep learning network for lake water body extraction of Google remote sensing images. Remote Sens 12(24):4140. https://doi.org/10.3390/rs12244140 Article   ADS   Google Scholar   Wang Z, Liu J, Li J, Zhang DD (2018b) Multi-spectral water index (MuWI): a native 10-m multi-spectral water index for accurate water mapping on Sentinel-2. Remote Sens 10(10):1643. https://doi.org/10.3390/rs10101643 Article   ADS   Google Scholar   Wangchuk S, Bolch T (2020) Mapping of glacial lakes using Sentinel-1 and Sentinel-2 data and a random forest classifier: Strengths and challenges. Sci Remote Sens 2:100008. https://doi.org/10.1016/j.srs.2020.100008 Article   Google Scholar   Wei Q, Jingxuan L, Lin LI, Xiao-Wen L (2011) Research on automatic extraction of water bodies and wetlands on HJ satellite CCD images. Remote Sensing Inform 4(2011):28–33 Google Scholar   Wei X, Xu W, Bao K, Hou W, Su J, Li H, Miao Z (2020) A water body extraction methods comparison based on FengYun Satellite data: a case study of Poyang Lake Region. China Remote Sens 12(23):3875. https://doi.org/10.3390/rs12233875 Article   ADS   Google Scholar   Weng L, Xu Y, Xia M, Zhang Y, Liu J, Xu Y (2020) Water areas segmentation from remote sensing images using a separable residual segnet network. ISPRS Int J Geo Inf 9(4):256. https://doi.org/10.3390/ijgi9040256 Article   Google Scholar   Wilson EH, Sader SA (2002) Detection of forest harvest type using multiple dates of Landsat TM imagery. Remote Sens Environ 80(3):385–396 Article   ADS   Google Scholar   Wu W, Li Q, Zhang Y, Du X, Wang H (2018) Two-step urban water index (TSUWI): A new technique for high-resolution mapping of urban surface water. Remote Sens 10(11):1704. https://doi.org/10.3390/rs10111704 Article   ADS   Google Scholar   Xiao YF, Zhu L (2010) A study on information extraction of water body using band 1 and band 7 of TM imagery. Sci Surv Map 35(5) Xie C, Huang X, Zeng W, Fang X (2016a) A novel water index for urban high-resolution eight-band WorldView-2 imagery. Int J Digital Earth 9(10):925–941. https://doi.org/10.1080/17538947.2016.1170215 Article   Google Scholar   Xie H, Luo X, Xu X, Pan H, Tong X (2016b) Automated subpixel surface water mapping from heterogeneous urban environments using Landsat 8 OLI imagery. Remote Sens 8(7):584. https://doi.org/10.3390/rs8070584 Article   ADS   Google Scholar   Xiong L, Deng R, Li J, Liu X, Qin Y, Liang Y, Liu Y (2018) Subpixel surface water extraction (SSWE) using Landsat 8 OLI data. Water 10(5):653. https://doi.org/10.3390/w10050653 Article   Google Scholar   Xu H (2006) Modification of normalised difference water index (NDWI) to enhance open water features in remotely sensed imagery. Int J Remote Sens 27(14):3025–3033. https://doi.org/10.1080/01431160600589179 Article   Google Scholar   Xu K, Zhang J, Watanabe M, Sun C (2004) Estimating river discharge from very high-resolution satellite data: a case study in the Yangtze River, China. Hydrological Proc 18(10):1927–1939. https://doi.org/10.1002/hyp.1458 Article   ADS   Google Scholar   Yan P, Zhang Y, Zhang Y (2007) A study on information extraction of water enhanced water index (EWI) and GIS system in semi-arid regions with the based noise remove techniques. Remote Sens Inf 6:62–67 Google Scholar   Yang J, Du X (2017) An enhanced water index in extracting water bodies from Landsat TM imagery. Ann GIS 23(3):141–148. https://doi.org/10.1080/19475683.2017.1340339 Article   Google Scholar   Yang X, Qin Q, Grussenmeyer P, Koehl M (2018) Urban surface water body detection with suppressed built-up noise based on water indices from Sentinel-2 MSI imagery. Remote Sens Environ 219:259–270. https://doi.org/10.1016/j.rse.2018.09.016 Article   ADS   Google Scholar   Yao F, Wang C, Dong D, Luo J, Shen Z, Yang K (2015) High-resolution mapping of urban surface water using ZY-3 multi-spectral imagery. Remote Sens 7(9):12336–12355. https://doi.org/10.3390/rs70912336 Article   ADS   Google Scholar   Yin Y, Guo Y, Deng L, Chai B (2023) Improved PSPNet-based water shoreline detection in complex inland river scenarios. Complex Intelligent Syst 9(1):233–245. https://doi.org/10.1007/s40747-022-00793-8 Article   Google Scholar   Yu L, Wang Z, Tian S, Ye F, Ding J, Kong J (2017) Convolutional neural networks for water body extraction from Landsat imagery. Int J Comput Intell Appl 16(01):1750001. https://doi.org/10.1142/s1469026817500018 Article   Google Scholar   Yu Y, Yao Y, Guan H, Li D, Liu Z, Wang L, Yu C, Xiao S, Wang W, Chang L (2021) A self-attention capsule feature pyramid network for water body extraction from remote sensing imagery. Int J Remote Sens 42(5):1801–1822. https://doi.org/10.1080/01431161.2020.1842544 Article   Google Scholar   Yuan K, Zhuang X, Schaefer G, Feng J, Guan L, Fang H (2021) Deep-learning-based multispectral satellite image segmentation for water body detection. IEEE J Selected Top Appl Earth Observ Remote Sens 14:7422–7434. https://doi.org/10.1109/jstars.2021.3098678 Article   ADS   Google Scholar   Zamani A, Sharifi A, Felegari S, Tariq A, Zhao N (2022) Agro climatic zoning of saffron culture in miyaneh city by using WLC method and remote sensing data. Agriculture 12(1):118. https://doi.org/10.3390/agriculture12010118 Article   Google Scholar   Zhai K, Wu X, Qin Y, Du P (2015) Comparison of surface water extraction performances of different classic water indices using OLI and TM imageries in different situations. Geo-spatial Inform Sci 18(1):32–42. https://doi.org/10.1080/10095020.2015.1017911 Article   Google Scholar   Zhang F, Du B, Zhang L (2015) Scene classification via a gradient boosting random convolutional network framework. IEEE Trans Geosci Remote Sens 54(3):1793–1802. https://doi.org/10.1109/tgrs.2015.2488681 Article   ADS   Google Scholar   Zhang H, Li J, Xiang N, Shen Q, Zhang F, Liang W, 2014. An automatic method of monitoring water bodies based on GF-1 data. In Ocean Remote Sensing and Monitoring from Space (Vol. 9261, pp. 7-13). SPIE. https://doi.org/10.1117/12.2068815 Zhang T, Ren H, Qin Q, Zhang C, Sun Y (2017) Surface water extraction from Landsat 8 OLI imagery using the LBV transformation. IEEE J Selected Top Appl Earth Observ Remote Sens 10(10):4417–4429. https://doi.org/10.1109/jstars.2017.2719029 Article   ADS   Google Scholar   Zhang X, Li J, Hua Z (2022) MRSE-Net: multiscale residuals and SE-attention network for water body segmentation from satellite images. IEEE J Selected Top Appl Earth Observ Remote Sens 15:5049–5064. https://doi.org/10.1109/JSTARS.2022.3185245 Article   ADS   Google Scholar   Zhang Y, Kerle N (2008) Satellite remote sensing for near-real time data collection. Geospatial Inform Technol Emerg Resp 6:75–102 Google Scholar   Zhang Y, Liu X, Zhang Y, Ling X, Huang X (2018) Automatic and unsupervised water body extraction based on spectral-spatial features using GF-1 satellite imagery. IEEE Geosci Remote Sens Lett 16(6):927–931. https://doi.org/10.1109/lgrs.2018.2886422 Article   ADS   Google Scholar   Zhang Z, Zhang X, Jiang X, Xin Q, Ao Z, Zuo Q, Chen L (2019) Automated surface water extraction combining Sentinel-2 imagery and OpenStreetMap using presence and background learning (PBL) algorithm. IEEE J Selected Top Appl Earth Observ Remote Sens 12(10):3784–3798. https://doi.org/10.1109/jstars.2019.2936406 Article   ADS   Google Scholar   Zhao H, Shi J, Qi X, Wang X, Jia J (2017) Pyramid scene parsing network. In: IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Honolulu, HI, USA, pp 6230–6239. https://doi.org/10.1109/cvpr.2017.660 Zheng Q, Huang W, Cui X, Shi Y, Liu L (2018) New spectral index for detecting wheat yellow rust using Sentinel-2 multispectral imagery. Sensors 18(3):868. https://doi.org/10.3390/s18030868 Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Zhong HF, Sun HM, Han DN, Li ZH, Jia RS (2022) Lake water body extraction of optical remote sensing images based on semantic segmentation. Appl Intell 52(15):17974–17989. https://doi.org/10.1007/s10489-022-03345-2 Article   Google Scholar   Zhou Y, Dong J, Xiao X, Liu R, Zou Z, Zhao G, Ge Q (2019) Continuous monitoring of lake dynamics on the Mongolian Plateau using all available Landsat imagery and Google Earth Engine. Sci Total Environ 689:366–380. https://doi.org/10.1016/j.scitotenv.2019.06.341 Article   ADS   CAS   PubMed   Google Scholar   Zhou Y, Dong J, Xiao X, Xiao T, Yang Z, Zhao G, Zou Z, Qin Y (2017) Open surface water mapping algorithms: A comparison of water-related spectral indices and sensors. Water 9(4):256. https://doi.org/10.3390/w9040256 Article   ADS   Google Scholar   Zou Z, Dong J, Menarguez MA, Xiao X, Qin Y, Doughty RB, Hooker KV, Hambright KD (2017) Continued decrease of open surface water body area in Oklahoma during 1984–2015. Sci Total Environ 595:451–460. https://doi.org/10.1016/j.scitotenv.2017.03.259 Article   ADS   CAS   PubMed   Google Scholar   Download references Acknowledgements We gratefully acknowledge the National Remote Sensing Centre (NRSC), Hyderabad, Indian Space Research Organisation (ISRO), India, for supplying the Resourcesat-2: LISS-III image data for educational purposes. We also thank the National Institute of Technology Puducherry in Karaikal, India, for providing research facilities. Funding The authors declare that they did not receive any financial support or grants for this study. Author information Authors and Affiliations Department of Electronics and Communication Engineering, National Institute of Technology Puducherry, Karaikal, India R Nagaraj & Lakshmi Sutha Kumar Contributions Every author has contributed to the successful compilation of this study. Nagaraj. R: Data collection, validation, Methodology, Formal Analysis, and Writing - original draft. Lakshmi Sutha Kumar: Conceptualization, and Supervision. All authors read and approved the final manuscript. Corresponding author Correspondence to R Nagaraj. Ethics declarations Competing interests The authors declare no competing interests. Additional information Communicated by: H. Babaie Publisher’s Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Rights and permissions Springer Nature or its licensor (e.g. a society or other partner) holds exclusive rights to this article under a publishing agreement with the author(s) or other rightsholder(s); author self-archiving of the accepted manuscript version of this article is solely governed by the terms of such publishing agreement and applicable law. Reprints and permissions About this article Cite this article Nagaraj, R., Kumar, L.S. Extraction of Surface Water Bodies using Optical Remote Sensing Images: A Review. Earth Sci Inform 17, 893–956 (2024). https://doi.org/10.1007/s12145-023-01196-0 Download citation Received 22 September 2023 Accepted 11 December 2023 Published 12 February 2024 Issue Date April 2024 DOI https://doi.org/10.1007/s12145-023-01196-0 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Keywords Surface water mapping Spectral Indices Machine Learning Deep Learning Spectral unmixing Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections Figures References Abstract Introduction Sensors used in Surface Water Body Extraction Surface Water Mapping Techniques Experiment Results and Discussions Summary and Challenges Conclusion and Future Scope Data availability References Acknowledgements Funding Author information Ethics declarations Additional information Rights and permissions About this article Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 10:
- APA Citation: Yadav, R. N., Bajwa, S. G., & Zilberman, D. (2021). Information and communication technologies for sustainable agriculture: A review. Journal of Cleaner Production, 283, 124621.
  Main Objective: To assess the current state and future potential of automated, real-time irrigation management systems, identify gaps, and propose solutions for seamless integration across the system to achieve fully autonomous, scalable irrigation management.
  Study Location: Unspecified
  Data Sources: Sensor data, weather data, plant growth parameters
  Technologies Used: Machine learning, Internet of Things (IoT)
  Key Findings: Automated, real-time irrigation management systems, integrated with IoT and machine learning technologies, can adjust irrigation schedules based on variations in weather, soil moisture levels, and plant growth parameters. The integration of a wide range of sensors and data sources allows for real-time monitoring of crop water status, weather conditions, and other relevant parameters, enabling precise and timely irrigation decisions.
  Extract 1: "By integrating IoT and machine learning technologies, automated, real-time irrigation management systems can adjust irrigation schedules based on variations in weather, soil moisture levels, and plant growth parameters."
  Extract 2: "The integration of a wide range of sensors and data sources allows for real-time monitoring of crop water status, weather conditions, and other relevant parameters, enabling precise and timely irrigation decisions."
  Limitations: None
  Relevance Evaluation: The paper is highly relevant to the specific point in my literature review, which is the relevance and utility of automated, real-time irrigation management systems. The paper assesses the current state and future potential of these systems, providing valuable insights into their capabilities and limitations. It also proposes solutions and best practices based on the analysis of case studies and real-world implementations, which is highly pertinent to the goals of my literature review.
  Relevance Score: 1.0
  Inline Citation: (Yadav et al., 2021)
  Explanation: This paper employs a comprehensive and systemic analysis to explore the effects of automated, real-time irrigation management systems on crop yield, contributing to the global food challenge. The study examines the existing state, identifies gaps, and proposes solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement Search Get published Explore Journals Books About Login Environmental Sciences Europe About Articles Submission Guidelines Submit manuscript Research Open access Published: 26 February 2024 Irrigation expansion has kept pace with the CO2 fertilization effect on vegetation growth in a typical arid region Xiaoyao Lu, Lu Zhang, William J. Davies, Minzhong Zou, Jun Niu, Jinliang Chen, Risheng Ding, Sien Li & Shaozhong Kang  Environmental Sciences Europe  36, Article number: 40 (2024) Cite this article 395 Accesses Metrics Abstract Dynamics of vegetation in arid areas have drawn worldwide attention. The expansion of irrigated cropland (ICE) in arid regions contributes to increased food security and impacts on the extent and development of regional vegetation. However, the quantitative attribution of vegetation growth variation from ICE and biogeochemical factors (e.g., atmospheric CO2 concentration, climatic factors) is still lacking. Here, we assessed key drivers of vegetation growth in the inland arid region of Northwest China (IANC) from 1982 to 2018, including ICE, increased nitrogen rates, elevated atmospheric CO2 concentration (eCO2) and climate drivers, using normalized difference vegetation index (NDVI) and ecosystem gross primary productivity (GPP) as measures. These variables were quantified through trend decomposition, machine learning algorithms, and a satellite-based model. The results show that vegetation growth was increased in IANC mainly due to eCO2 and ICE. After 1995, as the regional climatic aridity intensified, the CO2 fertilization effect on vegetation growth decreased, as the atmospheric CO2 concentration continued to increase. Meanwhile, irrigated cropland area increased sharply, and ICE-driven GPP variation exceeded that driven by eCO2 in the whole region, while the ICE-driven NDVI variation exceeded that due to eCO2 when the ICE reached 6.38%. The ICE effect on regional vegetation growth rather than the CO2 fertilization effect has mitigated the slowdown of the rate of vegetation growth caused by climate changes. Although the ICE is conducive to food security and continuous greening of arid areas, further reclamation will exacerbate water scarcity. Our results provide research base for identifying the scale of sustainable agricultural development. Highlights Vegetation growth was enhanced in Northwest China mainly due to the CO2 fertilization effect and irrigation expansion during 1982–2018. The effect of irrigation on vegetation growth approached or even outweighed that of elevated atmospheric CO2 concentration after 1995. The effect of irrigation expansion mitigates the slowdown of vegetation growth trend, instead of the CO2 fertilization effect. Introduction Satellite observations have shown that since the 1980s, global vegetation has exhibited an overall greening. Despite this, some areas show browning trends [5, 28, 32, 50, 56]. After the mid-1990s, due to the intensification of drought condition, the intensity and extent of vegetation browning expanded, resulting in a stalling or reversal of vegetation greening in different parts of the world [28, 31, 50]. Although the trends of vegetation growth in some regions have declined, there are still regions that continue greening as a result of land-use management. In recent years, to protect and restore degraded forest ecosystems, many countries have implemented a series of forest restoration projects, such as the Three North Shelterbelt Development Program and the Grain to Green Program in China, the New York Forest Declaration and the Bonn Challenge [4, 20, 39, 52]. In addition, expanding the sown area through irrigation and fertilization increases crop yield [25], which not only enhances food security, but also promotes regional greenness. Studies have shown that since 2000, the increase in global vegetation growth is mainly caused by the greening of forests and cropland [4]. Many studies have attached great importance to the impact of afforestation on regional vegetation growth [4, 21, 33, 40]. However, the quantitative effects of expansion of irrigated cropland (ICE) on NDVI and GPP are still uncertain. Vegetation growth dynamics are influenced by a combination of factors, including biogeochemical factors, as well as land-use-related drivers (e.g., land use changes and agricultural management measures) [32, 56]. Globally, elevated atmospheric CO2 concentration (eCO2) is considered to be the most important driver of vegetation greening [56]. In arid regions, climate change has had an important impact on vegetation growth [9, 26, 56]. Recently, as atmospheric CO2 concentration continues to increase, the warming-induced atmospheric aridity is intensifying, which generates a negative impact on vegetation growth [27, 31, 50]. Studies have shown that the physiological response of plants to eCO2 can enhance leaf photosynthesis, improve water use efficiency [7], and alleviate some of the impact of atmospheric drought on vegetation growth [2, 48]. However, some studies have reported that enhanced vegetation growth means more water and nutrients consumption, aggravating the water scarcity in arid regions [8, 22], and the CO2 fertilization effect will decrease due to water and nutrient limitations [17, 38, 42, 44]. These indicate that in drier conditions, the fertilization effect of CO2 may decrease. A critical gap in our understanding pertains to the synergy and antagonism between different drivers. The inland arid region of Northwest China (IANC) is located in the hinterland of the Eurasian continent (Additional file 1: Fig. S1a). It is an important strategic place of the ancient and modern ‘Silk Road’. It covers an area of 2.115 million km2, equivalent to about half of the area of the European Union. Four of the eight deserts in China are completely contained in the IANC, and two deserts are adjacent to it. Among them, the Taklimakan Desert is the largest desert in China and the second largest mobile desert in the world. The agriculture in IANC is highly dependent on irrigation, and the oasis agriculture formed at the edge of the desert has become important ecological barrier. Since the mid-1990s, large-scale ICE has taken place to meet the surging food demand, increasing the area of irrigated cropland by about 55% (Additional file 1: Figs. S2b, S3). In addition, over the last few decades IANC has experienced remarkable climatic warming, and the relative humidity decreased significantly after 1990s (Additional file 1: Figs. S2c, S4c), which has had an impact on regional ecological vegetation. It is urgent to clarify the impacts of various factors on regional vegetation growth in such an ecologically fragile environment, and it is necessary to explore the interaction between human activities and ‘natural’ factors, as well as different ‘natural’ factors to ensure food security and ecological health in this and other arid regions. In this paper, satellite-based GIMMS3g NDVI and MODIS NDVI data sets were used to show the greening pattern in IANC from 1982 to 2018. We then quantified the effects of biogeochemical factors (including atmospheric CO2 concentration and climate) and land-use-related drivers (including ICE and change of nitrogen fertilization per unit area) on IANC’s NDVI variation in the growing season (from May to October). This was achieved through trend decomposition and three machine learning algorithms. In addition, the cumulative GPP in the growing season was calculated using a revised remote sensing-based light use efficiency (LUE) model, and model experiments were performed to quantify the effects of various factors on ecosystem productivity. Methods Data sets The data used in this paper include satellite remote sensing data, meteorological data, reanalysis data, and statistical yearbook data. The time period, temporal and spatial resolutions, and sources of the data are shown in Additional file 1: Table S1. Vegetation greenness As an indicator of vegetation greenness, the satellite-based NDVI data was used in this study, including the GIMMS3g NDVI and the MOD13A3 NDVI (see details in Additional file 1: Table S1). The multi-year monthly average values of GIMMS3g NDVI in IANC were calculated, and the months with NDVI greater than 0.1 were designated as the growing season (from May to October). The growing season NDVI was integrated by taking the average value from May to October. The GIMMS3g NDVI is represented on a resolution of 0.0833°. The MOD13A3 NDVI was resampled to the same spatial resolution as the GIMMS3g NDVI by the nearest neighbour method, and the variation and magnitude of the GIMMS3g NDVI and the MOD13A3 NDVI were almost the same in the study area (Additional file 1: Fig. S5). Therefore, the MOD13A3 NDVI was used to supplement the GIMMS3g NDVI to obtain vegetation greenness information for a longer time period (1982–2018). Human activities Two land use data sets (see Additional file 1: Table S1 for details) were collected as indicators of spatial change in regional irrigated cropland area from 1982 to 2018, and the irrigated cropland area and its changes displayed in these two sets of data are highly consistent (Additional file 1: Fig. S3). By summing the cropland area of all 0.00833° pixels in each 0.0833° pixel, the data were aggregated to the same spatial resolution as the NDVI data. We used data on nitrogen application per unit area in Xinjiang and the Hexi Corridor from the Xinjiang Statistical Yearbook and the Gansu Development Yearbook. In addition, spatial nitrogen application data were obtained from a global data set [23]. There was a significant linear correlation between the nitrogen fertilization data in the statistical yearbook and the global data set (Additional file 1: Fig. S6a), so the statistical yearbook data were used to correct and extend the data in the global data set. Meteorological data and atmospheric CO2 concentration data Meteorological data mainly came from the China National Meteorological Center. The data collected at 110 meteorological stations were interpolated to 0.0833° spatial grid data using the nearest neighbor method. The cumulative solar radiation for the growing season was calculated from the solar radiation data in the re-analyzed data set and the record of sunshine hours from the meteorological stations. Atmospheric CO2 concentration data observed at the Global Atmospheric Background Station at Waliguan was obtained from the National Cryosphere Desert Data Center. Waliguan Station is the only atmospheric background observation station in the inland region of the Northern Hemisphere, and its observations reflect the atmospheric greenhouse gas concentrations and their changes in the mid-latitude inland regions of the Northern Hemisphere. In addition, longer observation from the Mauna Loa Observatory was obtained from the Global Monitoring Laboratory. The interannual variations in CO2 data from the two stations were highly consistent (Additional file 1: Fig. S6b), so the observations from Mauna Loa Observatory were used in calculations. Trend change point detection The Akaike Information Criterion (AIC) and segmented regression [1] (a linear regression that modifies its slope at a certain value of the predictor, or threshold) were used to determine the trend change points of interannual variations of observation elements. We used AIC to choose the model that best-fitted the data. When non-linear regression (e.g., quadratic function) was a better fit to the data, trend change point may be present, and in these cases, the trend change point is defined by segmented regression. The segmented regressions were achieved through the ‘SiZer’ package in R, and the bootstrap sampling on each database was set 1000 times, with a confidence interval of 95%. After AIC judgement, we found that there were trend change points in the trends of ‘growing season’ mean GIMMS3g NDVI in the natural vegetation zone, the irrigated cropland area, and the relative humidity. The trend change points of the above three elements are 1990, 1995 and 1992 respectively (Additional file 1: Fig. S2). We selected 1995 as the dividing point between the early and later periods, because 1995 is not only the change point for the trend in irrigated cropland area, but also falls within the 95% confidence interval of the trend change points for natural vegetation NDVI and relative humidity (Additional file 1: Fig. S2). Effect of ICE on NDVI calculated by trend decomposition We used the trend decomposition method to quantify the effect of ICE on NDVI. We use a linear trend to represent the change in NDVI over a period of time. First, we calculated the growing season NDVI trend of each 0.0833° pixel (pel0.0833) from1982 to 2018. Secondly, the pels0.0833 with the proportion of cropland greater than 10% were identified as cropland pixels in 1982 and 2018, and then the cropland change pixels between 1982 and 2018 (hereinafter referred to as ICE pixels) were identified (Additional file 1: Fig. S7a). The pels0.0833 with the proportion of natural vegetation (uncultivated vegetation) greater than 60% coverage, both in 1982 and 2018, were defined as natural vegetation pixels. The proportions of cropland and natural vegetation were derived from the land use data products. We then decomposed the NDVI trends of ICE pixels by considering two cases: a) If there was natural vegetation in the ICE pixel before 1982, it was considered that the NDVI variation trend caused by ICE was the actual NDVI trend minus the reference trend value [Eq. (1)]. b) If there was no natural vegetation in the ICE pixel before 1982, it was considered that the variation of NDVI was caused by ICE [Eq. (2)]: (1) (2) Where represents the NDVI trend caused by ICE in the ICE pixel, represents the actual NDVI trend in the corresponding pel0.0833, and represents the reference trend value which is calculated at the grid with spatial resolution of 0.75° (grid0.75) (Additional file 1: Fig. S7c). Each grid0.75 contains 81 pels0.0833. The is calculated by averaging the NDVI trends of all natural vegetation pixels in the grid0.75. It should be noted that we assume that at each grid0.75, all pels0.0833 have the same climate background and are taken to have experienced the same agricultural management measures. Through the above operation, we calculated the effects of ICE on NDVI in ICE pixels. However, the pels0.0833 that had cropland before 1982 and the pels0.0833 with small change in the irrigated cropland area were ignored. Where there was a significant linear correlation between cropland area change and NDVI variation (Additional file 1: Fig. S7b), the NDVI variation caused by ICE was spatially extrapolated through the actual irrigated cropland proportion of change of the pel0.0833 and the of the grid0.75 where the pel0.0833 is located [Eqs. (3), (4)]: (3) (4) where is actual cropland proportion changes of the ICE pixels; is the NDVI trend caused by the change of unit cropland proportion in the ICE pixels, and the is the average value of in a grid0.75; is the NDVI trend caused by the ICE (Additional file 1: Fig. S7d), and is the actual irrigated cropland proportion changes in the pels0.0833. Machine learning algorithms for estimating the effects of various factors on NDVI Three machine learning algorithms (Additional file 1: Table S2) were used to model and estimate NDVI with variation in different biogeochemical factors (atmospheric CO2 concentration, photosynthetically active radiation, relative humidity and air temperature) and human activities (irrigated cropland area, nitrogen fertilization). Satellite-derived growing season mean NDVI data were used for model training and verification. If the numbers of target data are small, the machine learning algorithm may ‘over fit’. Therefore, we used grid0.75 as the calculation unit to expand the sample size. We had 81 pels0.0833 in each grid0.75, and each pel0.0833 contained 35 years of data, that is, there were 2835 samples at each grid0.75 for model construction. 70% of the samples were randomly selected for model training and the remaining 30% for testing. Through the random search and the cross validation, the optimal parameters were selected for each grid. We use the coefficient of determination (R2) between the simulated values and observed values in the test set as the evaluation metric for the model, and our results suggest that machine learning algorithms can effectively estimate NDVI (Additional file 1: Fig. S8). Among them, the simulation efficiency of the Random Forest and MLP Neural Network is superior to that of the Support Vector Machine. We synthesized the results of the three models by calculating their average. We calculated the effects of various drivers on variation of NDVI through model experiments. Firstly, we made all factors change over time to calculate (a normal model run). Next, we kept the variable x constant (e.g., ICE, eCO2) to calculate with other factors changing over time. The difference between and is the NDVI variation driven by variable x: (5) where is the NDVI variation driven by variable x in the ith year. The trend of NDVI driven by x was calculated by the least square method. The sensitivity of NDVI to the ICE was analyzed through linear regression. The calculation equation is as follows: (6) where is the NDVI variation driven by ICE between 1982 and 2018 in the kth grid0.75, and is ICE proportion (i.e., the proportion of irrigated cropland area to total vegetation area between 1982 and 2018) in the kth grid0.75; is the sensitivity of NDVI to ICE; is the residual term. Regional productivity estimation and attribution A revised light use efficiency (LUE) model was used to estimate regional productivity of vegetation (GPP), and the calculation equation is as follows [10, 50]: (7) where PAR is photosynthetically active radiation, calculated as 1/2 of the solar radiation (unit: MJ/m2/month); FPAR is the fraction of PAR absorbed by the vegetation canopy, which can be calculated by NDVI [Eq. (8)] [3]; is the maximum LUE, and we take the fixed empirical value of 2.76 g C/MJ [12, 37, 50] to prevent the effects of some factors from being repeatedly considered; , and represent the downward-regulation scalars for the respective effects of eCO2, air temperature and moisture conditions on the LUE [3, 10, 29, 50, 53]. The effect of atmospheric CO2 concentration on LUE ( ) was obtained from the work of Yuan et al. [50], and see details in the supplementary information. was calculated by mean air temperature ( , unit: ) and the optimal air temperature which is the average temperature of the month with the largest NDVI in a year [10] (see details in the supplementary information). was calculated using regional evapotranspiration (ET) and potential evapotranspiration [PET, Eq. (9)]. The regional ET was obtained through the GLASS ET product [49] and PET was calculated using the Hargreaves equation [Eq. (10)]: (8) (9) (10) where and represent the maximum and minimum air temperature in the calculation period, respectively (unit: ). is the theoretical solar radiation at the top of the atmosphere (unit: MJ/m2/month); the is the conversion coefficient with a value of 9.39 × 10–4. In the cropland zone, we made some adjustments to the above LUE model. In addition to natural factors, we also considered the effects of ICE and nitrogen fertilization on GPP. The calculation is as follows: (11) We found that there was a significant linear correlation between the ICE and regional ET, so we substituted this relationship into Eq. (9) to obtain : (12) (13) here, a and b are the coefficients in the regression equation between ET and ICE, which were quantified by the ET of GLASS products and irrigated cropland area in the land use data set, and each pel0.0833 has specific values of a and b. Within a certain range, there is a stable proportional relationship between biomass and GPP [16, 24], so we collected nitrogen fertilization and biomass data for three main crops (corn, wheat and cotton) in IANC to quantify . Wheat, corn, and cotton occupy 22.4%, 15.4%, and 31.8% of the planting area, respectively. Over the years, these three crops together have consistently comprised around 70% of the total cultivated area. The regression relationship between nitrogen fertilization and relative biomass (biomass after nitrogen application divided by biomass without nitrogen application) was established, and the AIC was used for judgment. The results showed that there was a significant quadratic function relationship between nitrogen fertilization and relative biomass (Additional file 1: Fig. S9a). We integrated data of different crops to establish a unified relationship (Additional file 1: Fig. S9b). The revised LUE model was verified by the GPP observation data for the experimental sites, and the simulated results matched well with the observed values (Additional file 1: Fig. S10). GPP was then calculated by weighted averaging based on the proportions of cropland and natural vegetation in each of the pels0.0833: (14) where represents the GPP in the jth pel0.0833; and represent the GPP of cropland and natural vegetation, respectively in the jth pel0.0833; and represent the proportions of cropland and natural vegetation area in the jth pel0.0833. We performed numerical simulations to evaluate the effects of various factors on GPP with the revised LUE model. In the LUE model, various factors affect GPP through two aspects: on one hand, drivers regulate GPP by affecting the FPAR which is calculated directly through NDVI, so we call this path the FPAR variable [Eq. (8)]; on the other hand, GPP is affected by various factors through controlling the downward-regulation scalars (e.g., , ) of the LUE, and we call this path LUE variable [Eq. (16)]: (15) (16) where NFER is the nitrogen fertilization and RH is the relative humidity. In the normal model run, all variables changed with time both in the FPAR path and LUE path, which we called . Next, we calculated by allowing other factors to change over time while holding the variable x constant at its initial baseline level in the LUE path and substituting NDVI with the in the FPAR path. was calculated by keeping the variable x to maintain the initial value and other factors to change over time in the machine learning algorithm models mentioned above. The difference between and is the GPP variation driven by variable x [Eq. (17)]. In addition, we conducted another set of simulation experiments by substituting NDVI with the in the FPAR path and making all variables change with time in the LUE path, which was named . The difference between and is the GPP variation driven by variable x through the LUE path [Eq. (18)]: (17) (18) where is the GPP variation driven by variable x in the ith year, and is the GPP variation driven by variable x through the LUE path. The trend of GPP driven by x was calculated by the least square method. In the same way, the sensitivity of GPP to the change of ICE was analyzed through linear regression: (19) where is the GPP variation driven by ICE between 1982 and 2018 in the kth grid0.75, and is the ICE proportion (i.e., the proportion of the total vegetation area which is irrigated cropland area), a value which changes between 1982 and 2018 in the kth grid0.75; is the sensitivity of GPP to ICE; is the residual term. Results Vegetation growth changes in IANC The GIMMS3g NDVI data showed the interannual variation of the average NDVI during the growing season in IANC, with the trends of NDVI calculated by the least square method, as shown in Fig. 1a, b, c. The trends were tested and the trend change points were determined by the AIC and segmented regressions. From 1982 to 2015, the NDVI increased significantly, especially in the cropland zone (Fig. 1a, b). The NDVI trends are 0.000572 yr−1 (p = 3.77e-8) and 0.00154 yr−1 (p = 1.5e-11) for the whole area and the cropland zone, respectively. The trend change point was found in the NDVI variation in the natural vegetation zone (mainly woodland and grassland) (Additional file 1: Fig. S2a). Since the 1990s, the growth rate of natural vegetation NDVI has slowed down. The study period was divided into two periods, before and after 1995. The NDVI in the natural vegetation zone increased significantly over the early period (from 1982 to 1995), but the growth trend in the later period (from 1995 to 2018) decreased by 84.4% compared with the early period, and the slope became statistically insignificant (Fig. 1c). Figure 2a, c, d shows the spatial distributions of GIMMS3g NDVI trends. After 1995, the intensity and extent of vegetation browning increased significantly, but the cropland zones in the central part of Northern Xinjiang, the Tarim River Basin, and the central and western Hexi Corridor continued greening (Fig. 2a, c, d, Additional file 1: Fig. S1). In addition, the MOD13A3 NDVI data also shows that from 2001 to 2018, the vegetation greenness in the cropland zone increased significantly during the growing season, and the zones with vegetation browning were mainly concentrated in the mid-range of the Tianshan Mountains and the northern mountainous area of Northern Xinjiang (Fig. 2b, Additional file 1: Fig. S1), which was consistent with the GIMMS3g NDVI result. Fig. 1 Variations of vegetation growth in IANC. Interannual variations of growing season (from May to October) mean GIMMS3g NDVI in a the whole region, b the cropland zone, and c the natural vegetation zone. Interannual variations of growing season accumulative GPP calculated by revised LUE model in d the whole region, e the cropland zone, and f the natural vegetation zone. The shaded areas in the figure represent the 95% confidence intervals of the fitted curves. In panels (c, f), we divided two periods, before and after 1995 Full size image Fig. 2 Spatial patterns of trends in GIMMS3g NDVI in inland arid region of Northwest China (IANC) (unit: yr.−1). Growing season mean GIMMS3g NDVI trends during a 1982–2015, c 1982–1995, and d 1995–2015. b Spatial patterns of trends in growing season mean MOD13A3 NDVI during 2001–2018 Full size image We used the revised LUE model to estimate regional GPP [10, 50]. The results of the revised LUE model matched well with the measured GPP at the ground experimental sites, especially in the cropland zone (Additional file 1: Fig. S10). We also verified the result of revised LUE model by comparing it with other GPP products. The cumulative GPP in the growing season estimated by the revised LUE model is close to the GLASS GPP product, and is consistent with the variation of MODIS GPP, but the value is greater than that of MODIS GPP (Additional file 1: Fig. S11). From 1982 to 2018, the cumulative GPP in the growing season in IANC increased significantly. The GPP trends are 2.77 g C m−2 yr−1 (p = 9.46e-13) and 9.29 g C m−2 yr−1 (p = 2.08e-16) for the whole area and the cropland zone, respectively (Fig. 1d, e). After 1995, the growth of GPP in the natural vegetation zone stalled. The increasing rate of GPP at the late period of the natural vegetation zone decreased by 79.1% compared with the early period (Fig. 1f). Attribution of vegetation growth trend The relative importance of various factors in the attribution calculated by the three machine learning algorithms are basically consistent (Additional file 1: Fig. S12a), and we integrated the results of the three models by averaging. The machine learning algorithms and trend decomposition method showed similar effects of ICE on NDVI (Additional file 1: Fig. S12b). Figure 3 shows the attribution of NDVI trend obtained from the model experiments using the machine learning algorithms. ICE was the dominant factor in NDVI variation in the cropland zone, explaining 61% (61.12 ± 9.78%) of NDVI variation (Fig. 3a). In the natural vegetation zone, NDVI variation was mainly due to eCO2 (Fig. 3b). Over the whole region, the effect of eCO2 also dominated, explaining 70% (70.25 ± 7.72%) of the NDVI variation (Fig. 3c). Among the climatic factors, change in relative humidity had the greatest effect on NDVI, and the relative humidity-driven NDVI trend is significantly negative in both cropland zone and natural vegetation zone (Fig. 3a, b). From 1982 to 1995, the regional relative humidity increased, and the NDVI trend driven by relative humidity was positive as well. In the late period (1995–2018), due to the significant decline of regional relative humidity, the NDVI trend driven by relative humidity also became negative (Additional files 1: Figs. S4c and Fig. 3d, e, f). After 1995, the effect of ICE on NDVI trend increased substantially, while the effect of eCO2 decreased (Fig. 3d, e, f). ICE showed an equally significant effect on NDVI variation as did eCO2 during the latter part of the study period (ICE: 0.356 ± 0.502, eCO2: 0.408 ± 0.992, unit: 10–3 yr−1) in the whole region (Fig. 3f). Fig. 3 Attribution of variation in NDVI calculated from model experiments with three machine learning algorithms. In panel (a), (b), (c), the effects of various factors on NDVI in the cropland zone, the natural vegetation zone and the whole region are shown respectively from 1982 to 2018, while panel (d), (e), (f) represent the attribution of NDVI variation in the two periods. The “early” notation indicates the period of 1982–1995, and “late” indicates 1995–2018. The drivers include irrigated cropland expansion (ES_ICE), nitrogen fertilization change (ES_NFER), elevated atmospheric CO2 concentration (ES_eCO2), photosynthetically active radiation change (ES_PAR), relative humidity change (ES_RH) and air temperature change (ES_Ta). ES_ALL notation indicates the result of model simulation with all factors changing over time. Error bars show the 95% confidence intervals of the trends. Two asterisks indicate that the trend is extremely significant (P < 0.01), and one asterisk indicates that the trend is significant (P < 0.05) Full size image Model experiments were conducted through the revised LUE model to quantify the effects of various factors on GPP variation. In the cropland zone, ICE is the dominant factor in GPP variation, explaining 58% (57.93 ± 11.66%) of the GPP trend (Fig. 4a). In the natural vegetation zone, as well as the whole region, the eCO2 had the greatest influence on GPP variation (Fig. 4b, c), which is consistent with the attribution of NDVI trend. However, over the whole region, the contribution of ICE to GPP trend reached 42% (41.99 ± 8.45%), which was close to that of eCO2 (49.79 ± 12.43%) (Fig. 4c). The effects of various factors on GPP trend were also analyzed in two periods (Fig. 4d, e, f), and the GPP trend driven by relative humidity change was positive at the early period and negative at the late period. The effect of eCO2 decreased during the late period, while the effect of ICE increased significantly, and the ICE-driven GPP trend over the whole zone exceeded that of eCO2 at the late period (ICE: 1.30 ± 0.229, eCO2: 0.800 ± 0.265, unit: g C m−2 yr−1) (Fig. 4f). Fig. 4 Attribution of trend in GPP calculated by model experiments of revised LUE model. In panel (a), (b), (c), the effects of various factors on GPP in the cropland zone, the natural vegetation zone and the whole region are shown respectively from 1982 to 2018, while panel (d), (e), (f) represent the attribution of GPP trend in the two periods. The “early” notation indicates the period of 1982–1995, and “late” notation indicates 1995–2018. The drivers include irrigated cropland expansion (ES_ICE), nitrogen fertilization change (ES_NFER), elevated atmospheric CO2 concentration (ES_eCO2), photosynthetically active radiation change (ES_PAR), relative humidity change (ES_RH) and temperature change (ES_Ta). ES_ALL notation indicates the result of model simulation with all factors changing over time. Error bars show the 95% confidence intervals of the trends. Two asterisks indicate that the trend is extremely significant (P < 0.01), and one asterisk indicates that the trend is significant (P < 0.05) Full size image ICE threshold The percentage of the change of irrigated cropland area as a function of total vegetation area (ICE proportion) reached 5.25% by 2018. As the ICE proportion grows, the ICE-driven NDVI (or GPP) variation becomes greater, and eventually exceeds the effect of eCO2. The relationships of the ICE-driven NDVI and GPP variations against ICE proportion between 1982 and 2018 were calculated spatially [Eq. (6), (19)], and showed significant linear correlations (Fig. 5). This means that the sensitivities of NDVI and GPP variations to ICE are consistent in the spatial grids0.75, with values of 0.0022 for NDVI and 12.9 for GPP. During the whole period, only if the ICE proportion reaches 10.4%, ICE-driven NDVI variation can exceed the eCO2 effect in the whole region (Fig. 5a), while the threshold for ICE-driven GPP variation exceeded eCO2-driven GPP variation is 6.55% (Fig. 5b). Since regional irrigated cropland began to expand after 1995, the ICE-driven vegetation growth variation in the late period was close to that recorded during the entire period. The GPP variation driven by ICE outstripped that by eCO2 when the ICE proportion exceeded 4.37% in the late period. The ICE-driven NDVI variation reached a level equivalent to the eCO2 effect in the late period, when the ICE proportion increases to 6.38% (Fig. 5). Fig. 5 Threshold of the ICE-driven NDVI and GPP variation ( and ) outpace that of eCO2. ICE proportion is the percentage of the change of irrigated cropland area to total vegetation area. a Relationship of the and ICE proportion. b Relationship of the and ICE proportion. The shaded areas represent the 95% confidence intervals of the fitted curves. The red dots in the figure represent ICE proportion and ( ) of different 0.75° grids in the region. The green dots represent ICE proportion and ( ) between 1982 and 2018 in the whole region. The “ + ” represent ICE proportion and ( ) between 1995 and 2018 in the whole region Full size image Discussion Effects of ICE on NDVI and GPP The term ‘Vegetation growth dynamics’ is often used with reference to changes in vegetation structures and functions, which are affected both by natural drivers and by human activities. As such, such growth dynamics can play a critical role in the material and energy flows of ecosystems [11, 32]. The growth dynamics of vegetation can be quantified by various indicators, such as vegetation greenness, vegetation cover, and ecosystem productivity [13, 21, 45]. Satellite-based NDVI represents vegetation greenness, which can reflect the capacity of vegetation to absorb PAR, as well as the extent of vegetation coverage. The ecosystem productivity quantified by GPP represents the carbon sequestration capacity of vegetation and is an important indicator of the amount of carbon cycling between ecosystems and the atmosphere [6, 36]. The annual precipitation in the desert oasis area in northwest China is less than 200 mm, and the natural vegetation cover is mainly desert steppe and low shrubs [47]. Since the mid-1990s, substantial areas of cropland have been developed and improved in the region through diverting water for irrigation to previously uncultivated areas and to grassy areas in IANC. This has resulted in enhanced vegetation growth regionally. The ICE in IANC supplements the water and nutrient conditions required for vegetation growth through irrigation and fertilization, which promotes regional vegetation greening, increases fixation of CO2 by plants and further increases ecosystem productivity [43, 51, 55]. After 1995, ICE in IANC had a significant positive effect on regional vegetation growth, and had a greater effect than NDVI on GPP (Figs. 3c, f and 4c, f). In the LUE model, GPP is calculated by multiplying the PAR, FPAR, and LUE [Eq. (15)], where FPAR is related to vegetation greenness and can be estimated by NDVI. The environmental factors that affect FPAR also affect the LUE. Figure S13 shows the GPP trends for the whole region from 1982 to 2018 driven by environmental variables through effects on LUE. During this period, the ICE contribution was the most significant of that of all driving variables (Additional file 1: Fig. S13c). As a result, ICE not only increases NDVI, which improves the ability of the vegetation canopy to absorb PAR, but more importantly, increases LUE, and further improves regional carbon sequestration. ICE has slowed the decline of vegetation growth in the region Plant photosynthesis is enhanced as by the climate change-driven enhancement of atmospheric CO2 concentration and this can significantly promote vegetation growth. In addition, the physiological response of plant leaves to eCO2 can improve water use efficiency [7]. Globally, eCO2 is considered the most important factor in vegetation greening [32, 56]. However, climate change is also increasing air temperatures, crop water losses and the development of drought on all continents of the world [15, 48], thereby adversely affecting plant growth [18, 35, 50]. Some studies suggest that the positive influence of eCO2 on vegetation growth can offset the negative impact of climatic drought, which can avoid further expansion of drylands [2, 48]. However, an increasing number of studies also show that the CO2 fertilization effect is reduced by the limitation of water and nutrient conditions in the ecosystem [17, 34, 42, 44]. The observed data from meteorological stations show that since the 1980s, the air temperature and precipitation in IANC have increased. The early precipitation trend is 2.00 mm/yr, and the later precipitation trend is 1.11 mm/yr, which decreased by 45% compared with the earlier period. However, the air temperature continued to rise, and the relative humidity increased significantly in the early period and decreased significantly in the later period. As a result, the regional climatic aridity intensified in more recent time (Additional file 1: Fig. S4). We found that as the relative humidity-driven NDVI and GPP trends changed from positive to negative, the fertilization effect of CO2 on NDVI and GPP also decreased (Figs. 3d, e, f and 4d, e, f), although the atmospheric CO2 concentration continued to increase (Fig. S6b). In the later period, the natural vegetation is 0.338 0.094 (unit: 10–3 yr−1) and the is − 0.15 0.119 ( : -0.298 0.568, unit: g C m−2 yr−1, Figs. 3e and 4e). The fertilization effect of CO2 alleviated the effect of drought, but its effect was not enough to alleviate the decline of NDVI and GPP trends. The trends of NDVI and GPP in cropland zone did not decrease as in natural vegetation zone, mainly due to the significant positive impact of ICE (Figs. 3d and 4d). The results of this paper show that in arid regions, it is ICE that mitigates the decline of vegetation growth trend, rather than the CO2 fertilization effect, in the case of intensified climatic drought. In addition, over the entire region, the effect of ICE on the NDVI or GPP variation, was close to or even has outpaced that of eCO2 at the late period (Figs. 3f and 4f). Our results indicate that the impact of ICE on vegetation growth has kept pace with the CO2 fertilization effect in IANC, which is due to the significant increase in irrigated cropland area and the reduced effect of eCO2 in the later years of the period under study. In summary, ICE plays a significant role in the growth of vegetation in arid regions. We highlight the role of ICE, which on one hand confirms the importance of water availability in arid areas. Although the fertilization effect of CO2 has a considerable impact on vegetation growth, the limitation of water conditions still predominates in arid regions [19, 32, 54]. On the other hand, we emphasize the impact of human activities on fragile ecosystems, which continuously challenge natural regulatory capacities. This finding is consistent with many other research results [4, 30]. ICE may exacerbate regional water conflicts in the future The fertilization effect of CO2 and human land use management promote regional vegetation growth, however, vegetation expansion, especially the increase of the afforestation and cropland, will exacerbate regional water conflicts in arid regions [8, 22]. In recent years, as the population grows rapidly and the demand for food increases, more and more land has been reclaimed. The data from the statistical yearbook show that the agricultural production in the northwest region has significantly increased, ensuring regional food security (Additional file 1: Fig. S14). More output means more water consumption, and agricultural water consumption also significantly increases (Additional file 1: Fig. S14). For the total amount of water resources in the region remains stable, the increase of agricultural water use will inevitably crowd out ecological water use, which will lead to the cutoff of downstream inland rivers and the formation of more groundwater table drop funnels. Terrestrial water storage observations from NASA’s Gravity Recovery and Climate Experiment (GRACE) satellite mission have revealed significant decline in regional water resources (Additional file 1: Fig. S14). The soil drought in some areas will intensify, and the natural vegetation will be affected and even face the threat of death, which will have an adverse impact on the regional ecology [14]. Facing the twofold pressure of water shortage and the adverse effects of climate change, maintaining an appropriate scale of irrigated cropland is critical for ensuring food security and ecological health in IANC in the future. Assessment of data and methodological reliability In this study, we employed multiple sources of data and a variety of methodologies to demonstrate the impact of natural factors and human activities on regional NDVI and GPP. To ensure the reliability and validity of our research findings, we conducted a comprehensive evaluation of the completeness and accuracy of the data, as well as the appropriateness of the methods. First, we utilized GIMMS3g NDVI and MOD13A3 NDVI data to study regional greenness variations and as input data for the LUE model. These data sets have been widely used and analyzed by many scholars and are broadly considered to have high reliability and representativeness [28, 41, 46, 50]. The driving data, such as climate data and atmospheric carbon dioxide concentration, are derived from authoritative observation organizations, ensuring high quality. Second, we integrated three machine learning algorithms to attribute NDVI, and subdivided larger grids into smaller ones to increase the data volume for training models, meeting the requirements of machine learning algorithms. The impacts of ICE on NDVI quantified by machine learning algorithms and trend decomposition methods are largely consistent, mutually validating each other. Finally, we used a revised LUE model to calculate GPP and attributed it. We collected real measurement data from four ground stations to validate the results of the improved LUE model, which showed that the LUE model performs well (Additional file 1: Fig. S10). Although there are certain limitations in the data and methods, we have taken measures to address them: (1) Some data have a short time range and can only be supplemented with other data to ensure the timeliness of the article. We have chosen data with consistent results for mutual verification and supplementation, and the supplementation period is short to ensure that it minimally impacts the main findings of our study. (2) The research objective of the text is to study the overall variation in regional vegetation growth indicators and their attribution. Using regional average values provides an overview of large-area trends, facilitating comparisons across the entire region, cropland zone, and natural vegetation zone. However, this approach lacks a more detailed and nuanced understanding of spatial variations, which should be addressed in future work through increased research on regional spatial changes. Conclusions Our results show that, from 1982 to 2018, vegetation growth was enhanced in IANC mainly under the influence of ICE and eCO2, with ICE being the dominant factor in cropland zones. Since the mid-1990s, the significantly decreased regional relative humidity has negatively affected vegetation growth, and the CO2 fertilization effects on NDVI and GPP also decreased. However, the irrigated cropland area has increased sharply, and its positive impact on vegetation growth approached or even exceeded that of eCO2 in the later period, which has delayed the slowing down of the growth trend. In the whole region, the change of irrigated cropland area accounts for 5.25% of the total vegetation area, and the variation of GPP driven by ICE reached a level equivalent to that by eCO2 at the late period when the ICE proportion reached 4.37%, while the ICE-driven NDVI variation will outpace the eCO2 effect when the ICE proportion raises to above 6.38%. Although our study highlights the positive effect of irrigation cropland expansion on vegetation growth in arid areas, further expansion of irrigated cropland in the future will exacerbate regional conflict between water demand and supply, which may adversely affect the growth of natural vegetation. In the future, the ecological impact of ICE needs to be in-depth studied. Availability of data and materials Data sources were provided with this paper in the Table S1 in the supplementary information. References Berdugo M et al (2020) Global ecosystem thresholds driven by aridity. Science 367(6479):787–790 Article   CAS   PubMed   ADS   Google Scholar   Berg A, McColl KA (2021) No projected global drylands expansion under greenhouse warming. Nat Clim Chang 11(4):331-U71 Article   ADS   Google Scholar   Cai W et al (2014) large differences in terrestrial vegetation production derived from satellite-based light use efficiency models. Remote Sens 6:8945–8965 Article   ADS   Google Scholar   Chen C et al (2019) China and India lead in greening of the world through land-use management. Nat Sustain 2(2):122–129 Article   PubMed   PubMed Central   Google Scholar   de Jong R, Verbesselt J, Schaepman ME, de Bruin S (2012) Trend changes in global greening and browning: contribution of short-term trends to longer-term change. Glob Change Biol 18(2):642–655 Article   ADS   Google Scholar   Ding Z, Peng J, Qiu S, Zhao Y (2020) Nearly half of global vegetated area experienced Inconsistent vegetation growth in terms of greenness, cover, and productivity. Earths Future 8(10):e2020EF001618 Article   ADS   Google Scholar   Dusenge ME, Duarte AG, Way DA (2019) Plant carbon metabolism and climate change: elevated CO2 and temperature impacts on photosynthesis, photorespiration and respiration. New Phytol 221(1):32–49 Article   CAS   PubMed   Google Scholar   Feng X et al (2016) Revegetation in China’s loess plateau is approaching sustainable water resource limits. Nat Clim Chang 6(11):1019–1022 Article   ADS   Google Scholar   Fensholt R et al (2012) Greenness in semi-arid areas across the globe 1981–2007 — an earth observing satellite based analysis of trends and drivers. Remote Sens Environ 121:144–158 Article   ADS   Google Scholar   Field CB, Randerson JT, Malmström CM (1995) Global net primary production: combining ecology and remote sensing. Remote Sens Environ 51(1):74–88 Article   ADS   Google Scholar   Forzieri G, Alkama R, Miralles Diego G, Cescatti A (2017) Satellites reveal contrasting responses of regional climate to the widespread greening of Earth. Science 356(6343):1180–1184 Article   CAS   PubMed   Google Scholar   Gan R et al (2021) Estimating ecosystem maximum light use efficiency based on the water use efficiency principle. Environ Res Lett 16(10):104032 Article   ADS   Google Scholar   Gonsamo A et al (2021) Greening drylands despite warming consistent with carbon dioxide fertilization effect. Glob Change Biol 27(14):3336–3349 Article   Google Scholar   Green JK et al (2019) Large influence of soil moisture on long-term terrestrial carbon uptake. Nature 565(7740):476–479 Article   CAS   PubMed   ADS   PubMed Central   Google Scholar   Huang J, Yu H, Guan X, Wang G, Guo R (2016) Accelerated dryland expansion under climate change. Nat Clim Chang 6(2):166–171 Article   ADS   Google Scholar   Ise T, Litton CM, Giardina CP, Ito A (2010) Comparison of modeling approaches for carbon partitioning: Impact on estimates of global net primary production and equilibrium biomass of woody vegetation from MODIS GPP. J Geophys Res-Biogeosci. https://doi.org/10.1029/2010JG001326 Article   Google Scholar   Jin Z, Ainsworth EA, Leakey ADB, Lobell DB (2018) Increasing drought and diminishing benefits of elevated carbon dioxide for soybean yields across the US Midwest. Glob Change Biol 24(2):e522–e533 Article   ADS   Google Scholar   Konings AG, Williams AP, Gentine P (2017) Sensitivity of grassland productivity to aridity controlled by stomatal and xylem regulation. Nat Geosci 10(4):284–288 Article   CAS   ADS   Google Scholar   Lemordant L, Gentine P, Swann AS, Cook BI, Scheff J (2018) Critical impact of vegetation physiology on the continental hydrologic cycle in response to increasing CO2. Proc Natl Acad Sci USA 115(16):4093–4098 Article   CAS   PubMed   ADS   PubMed Central   Google Scholar   Lewis SL, Wheeler CE, Mitchard ETA, Koch A (2019) Regenerate natural forests to store carbon. Nature 568(7750):25–28 Article   CAS   PubMed   ADS   Google Scholar   Li J, Peng S, Li Z (2017) Detecting and attributing vegetation changes on China’s Loess Plateau. Agric For Meteorol 247:260–270 Article   ADS   Google Scholar   Liu Y et al (2022) Effects of global greening phenomenon on water sustainability. CATENA 208:105732 Article   Google Scholar   Lu C, Tian H (2016) Half-degree gridded nitrogen and phosphorus fertilizer use for global agriculture production during 1900–2013, Supplement to: Lu, C; Tian, H (2017): Global nitrogen and phosphorus fertilizer use for agriculture production in the past half century: shifted hot spots and nutrient imbalance. Earth Syst Sci Data 9(1):181–192. https://doi.org/10.5194/essd-9-181-2017.PANGAEA Article   ADS   Google Scholar   Malhi Y et al (2015) The linkages between photosynthesis, productivity, growth and biomass in lowland Amazonian forests. Glob Change Biol 21(6):2283–2295 Article   ADS   Google Scholar   Mueller ND et al (2012) Closing yield gaps through nutrient and water management. Nature 490(7419):254–257 Article   CAS   PubMed   ADS   Google Scholar   Nemani Ramakrishna R et al (2003) Climate-driven increases in global terrestrial net primary production from 1982 to 1999. Science 300(5625):1560–1563 Article   CAS   PubMed   ADS   Google Scholar   Novick KA et al (2016) The increasing importance of atmospheric demand for ecosystem water and carbon fluxes. Nat Clim Chang 6(11):1023–1027 Article   CAS   ADS   Google Scholar   Pan N et al (2018) Increasing global vegetation browning hidden in overall vegetation greening: insights from time-varying trends. Remote Sens Environ 214:59–72 Article   ADS   Google Scholar   Pei Y et al (2022) Evolution of light use efficiency models: improvement, uncertainties, and implications. Agric For Meteorol 317:108905 Article   Google Scholar   Peng Q, Wang RH, Jiang YL, Li C (2021) Contributions of climate change and human activities to vegetation dynamics in Qilian Mountain National Park, northwest China. Glob Ecol Conserv 32:e01947 Google Scholar   Piao S et al (2011) Changes in satellite-derived vegetation growth trend in temperate and boreal Eurasia from 1982 to 2006. Glob Change Biol 17(10):3228–3239 Article   ADS   Google Scholar   Piao S et al (2020) Characteristics, drivers and feedbacks of global greening. Nat Rev Earth Environ 1(1):14–27 Article   MathSciNet   ADS   Google Scholar   Piao S et al (2015) Detection and attribution of vegetation greening trend in China over the last 30 years. Glob Change Biol 21(4):1601–1609 Article   ADS   Google Scholar   Reich PB, Hobbie SE, Lee TD (2014) Plant growth enhancement by elevated CO2 eliminated by joint water and nitrogen limitation. Nat Geosci 7(12):920–924 Article   CAS   ADS   Google Scholar   Restaino Christina M, Peterson David L, Littell J (2016) Increased water deficit decreases Douglas fir growth throughout western US forests. Proc Natl Acad Sci 113(34):9557–9562 Article   CAS   PubMed   ADS   PubMed Central   Google Scholar   Ryu Y, Berry JA, Baldocchi DD (2019) What is global photosynthesis? History, uncertainties and opportunities. Remote Sens Environ 223:95–114 Article   ADS   Google Scholar   Sánchez ML, Pardo N, Pérez IA, García MA (2015) GPP and maximum light use efficiency estimates using different approaches over a rotating biodiesel crop. Agric For Meteorol 214–215:444–455 Article   ADS   Google Scholar   Smith WK et al (2016) Large divergence of satellite and earth system model estimates of global terrestrial CO2 fertilization. Nat Clim Chang 6(3):306–310 Article   ADS   Google Scholar   Suding K et al (2015) Committing to ecological restoration. Science 348(6235):638–640 Article   CAS   PubMed   ADS   Google Scholar   Tong X et al (2018) Increased vegetation growth and carbon stock in China karst via ecological engineering. Nat sustain 1(1):44–50 Article   Google Scholar   Wan W et al (2022) Spatiotemporal patterns of maize drought stress and their effects on biomass in the Northeast and North China Plain from 2000 to 2019. Agric For Meteorol 315:108821 Article   Google Scholar   Wang S et al (2020) Recent global decline of CO2 fertilization effects on vegetation photosynthesis. Science 370(6522):1295–1300 Article   CAS   PubMed   ADS   Google Scholar   Wang XH et al (2021) Global irrigation contribution to wheat and maize yield. Nat Commun 12(1):1235 Article   CAS   PubMed   ADS   PubMed Central   Google Scholar   Winkler AJ et al (2021) Slowdown of the greening trend in natural vegetation with further rise in atmospheric CO2. Biogeosciences 18(17):4985–5010 Article   CAS   ADS   Google Scholar   Wu D et al (2020) Accelerated terrestrial ecosystem carbon turnover and its drivers. Glob Change Biol 26(9):5052–5062 Article   ADS   Google Scholar   Wu DH et al (2015) Time-lag effects of global vegetation responses to climate change. Glob Change Biol 21(9):3520–3531 Article   ADS   Google Scholar   Xu HJ, Wang XP, Zhao CY, Zhang XX (2019) Responses of ecosystem water use efficiency to meteorological drought under different biomes and drought magnitudes in northern China. Agric For Meteorol 278:107660 Article   Google Scholar   Xu L et al (2021) Multifaceted characteristics of dryland aridity changes in a warming world. Nat Rev Earth Environ 2(4):232–250 Article   MathSciNet   ADS   Google Scholar   Yao Y et al (2014) Bayesian multimodel estimation of global terrestrial latent heat flux from eddy covariance, meteorological, and satellite observations. J Geophys Res Atmos 119(8):4521–4545 Article   ADS   Google Scholar   Yuan W et al (2019) Increased atmospheric vapor pressure deficit reduces global vegetation growth. Sci Adv 5(8):eaax1396 Article   CAS   PubMed   ADS   PubMed Central   Google Scholar   Zeng N et al (2014) Agricultural green revolution as a driver of increasing atmospheric CO2 seasonal amplitude. Nature 515(7527):394–397 Article   CAS   PubMed   ADS   Google Scholar   Zhang J, Fu B, Stafford-Smith M, Wang S, Zhao W (2021) Improve forest restoration initiatives to meet sustainable development goal 15. Nat Ecol Evolut 5(1):10–13 Article   CAS   Google Scholar   Zhang L-X, Zhou D-C, Fan J-W, Hu Z-M (2015) Comparison of four light use efficiency models for estimating terrestrial gross primary production. Ecol Model 300:30–39 Article   Google Scholar   Zhang Y et al (2022) Increasing sensitivity of dryland vegetation greenness to precipitation due to rising atmospheric CO2. Nat Commun 13(1):4875 Article   MathSciNet   CAS   PubMed   ADS   PubMed Central   Google Scholar   Zhang YL, Song CH, Band LE, Sun G (2019) No proportional increase of terrestrial gross carbon sequestration from the greening earth. J Geophys Res Biogeosci 124(8):2540–2553 Article   CAS   Google Scholar   Zhu Z et al (2016) Greening of the earth and its drivers. Nat Clim Chang 6(8):791–795 Article   CAS   ADS   Google Scholar   Download references Acknowledgements Not applicable. Funding We acknowledge financial supports by National Natural Science Foundation of China (51790534) and National Key R&D Program of China (2022YFD1900503). Author information Authors and Affiliations State Key Laboratory of Efficient Utilization of Agricultural Water Resources, Beijing, China Xiaoyao Lu, Minzhong Zou, Jun Niu, Jinliang Chen, Risheng Ding, Sien Li & Shaozhong Kang National Field Scientific Observation and Research Station On Efficient Water Use of Oasis Agriculture, Wuwei, China Xiaoyao Lu, Minzhong Zou, Jun Niu, Jinliang Chen, Risheng Ding, Sien Li & Shaozhong Kang Center for Agricultural Water Research in China, China Agricultural University, Beijing, China Xiaoyao Lu, Minzhong Zou, Jun Niu, Jinliang Chen, Risheng Ding, Sien Li & Shaozhong Kang State Key Laboratory of Water Resources Engineering and Management, Wuhan University, Wuhan, China Lu Zhang CSIRO Environment, Canberra, Australia Lu Zhang Lancaster Environment Centre, Lancaster University, Lancaster, UK William J. Davies Contributions XL carried out the analysis and wrote the manuscript. SK contributed to the analysis and ideas and modified the paper. LZ, WD and MZ contributed ideas to the manuscript development and modified the paper. JN and JC contributed to the analysis. RD and SL provided the measured data of model validation. Corresponding author Correspondence to Shaozhong Kang. Ethics declarations Ethics approval and consent to participate Not applicable. Consent for publication Not applicable. Competing interests The authors declare no conflict of interests. Additional information Publisher's Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Supplementary Information Additional file 1. Table S1. Dataset description. Table S2. Machine learning algorithms and their parameters. Table S3. Experiment station information for LUE model validation. Figure S1. Basic information of the IANC. Figure S2. Trend change point detection. Figure S3. Interannual variation of irrigated cropland area in IANC. Figure S4. Variations of air temperature, humidity climatic conditions in IANC. Figure S5. Comparison of MOD13A3 NDVI and GIMMS3g NDVI. Figure S6. Information of nitrogen application per unit area and atmospheric CO2 concentration. Figure S7. Calculate the effect of irrigated cropland expansion (ICE) on NDVI variation by trend decomposition method. Figure S8. Goodness of fit (R2) of linear regression between simulated and measured values in the test set. Figure S9. Relationship between nitrogen fertilization and relative biomass. Figure S10. Revised LUE model validation. Figure S11. Comparison of GPP estimate derived from revised LUE model and other GPP products in IANC. Figure S12. Attribution comparison of growing season NDVI trend by the different methods. Figure S13. GPP trend driven by various factors through the path of LUE item. Figure S14. Changes in total agricultural yield and regional total agricultural water consumption in the IANC. Rights and permissions Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About this article Cite this article Lu, X., Zhang, L., Davies, W.J. et al. Irrigation expansion has kept pace with the CO2 fertilization effect on vegetation growth in a typical arid region. Environ Sci Eur 36, 40 (2024). https://doi.org/10.1186/s12302-024-00852-6 Download citation Received 12 September 2023 Accepted 27 January 2024 Published 26 February 2024 DOI https://doi.org/10.1186/s12302-024-00852-6 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Keywords Irrigated cropland expansion Arid regions CO2 fertilization effect NDVI GPP Climate changes Download PDF Sections Figures References Abstract Highlights Introduction Methods Results Discussion Conclusions Availability of data and materials References Acknowledgements Funding Author information Ethics declarations Additional information Supplementary Information Rights and permissions About this article Advertisement Support and Contact Jobs Language editing for authors Scientific editing for authors Leave feedback Terms and conditions Privacy statement Accessibility Cookies Follow SpringerOpen By using this website, you agree to our Terms and Conditions, Your US state privacy rights, Privacy statement and Cookies policy. Your privacy choices/Manage cookies we use in the preference centre. © 2024 BioMed Central Ltd unless otherwise stated. Part of Springer Nature."

</subsection_point_Point 2>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.

3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
Real-time irrigation management systems heavily rely on the efficient and reliable transmission of data from sensors and weather stations to the cloud for processing and decision-making. However, agricultural environments present unique challenges to wireless communication, including adverse weather conditions, physical obstacles, and the limitations of wireless technologies. These challenges necessitate robust and adaptive solutions to ensure the consistent and timely flow of data, enabling truly autonomous irrigation scheduling.
Environmental factors, such as heavy rain, fog, and strong winds, can significantly disrupt wireless communication by attenuating or even blocking radio signals, leading to data loss and compromised system performance (Ed-daoudi et al., 2023; Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). Dense vegetation, buildings, and uneven terrain create further complications by causing multipath propagation and shadowing effects (Yim et al., 2018; Gautam and Pagay, 2020). The study by Yim et al. (2018) on LoRa networks in a tree farm environment exemplifies these challenges, revealing reduced communication range and data reliability compared to theoretical expectations. This underscores the need for carefully selecting and optimizing communication protocols and network parameters to ensure reliable data transmission in such environments.
The study by Guzinski et al. (2014a) using a modified TSEB model further highlights the importance of high-resolution data in accurately capturing the spatial and temporal dynamics of energy fluxes influenced by environmental factors. This emphasizes the need for advanced data acquisition and processing techniques that can effectively represent the complexities of agricultural settings.
The limitations of traditional wireless communication technologies, such as limited range and network congestion, pose additional challenges for large-scale agricultural operations. Long-distance data transmission can be hindered by range limitations, while network congestion arising from numerous sensors transmitting concurrently can lead to delays and data loss, hindering real-time decision-making (Hameed et al., 2020). Addressing these challenges requires the exploration of advanced networking technologies that can optimize spectrum utilization, mitigate interference, and improve reliability and efficiency.
Cognitive Radio Networks (CRNs) and Dynamic Spectrum Access (DSA) offer promising solutions for optimizing wireless communication in agricultural settings. CRNs empower devices with the ability to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). Research has explored the potential of CRNs in predicting Radio Frequency (RF) power to avoid noisy channels and optimize spectrum utilization (Iliya et al., 2014; Iliya et al., 2014). These studies demonstrate the effectiveness of combining optimization algorithms with artificial neural networks (ANNs) to enhance the accuracy and generalization of RF power prediction, enabling CRNs to make informed decisions about channel selection and avoid interference.
DSA complements CRN technology by dynamically allocating unused spectrum, further enhancing spectrum utilization and reducing congestion (Shi et al., 2023). The numerical model developed by Shi et al. (2023) showcases the potential of CRNs and DSA for optimizing wireless communication in challenging environments.
The integration of CRNs and DSA into the IoT network architecture requires careful consideration of spectrum sensing techniques, network topology, and data security. Research on cooperative spectrum sensing suggests that distributed approaches, where sensor nodes collaborate and share information, can significantly improve the accuracy and efficiency of spectrum sensing, particularly in dynamic environments (Trigka and Dritsas, 2022; Khalid & Yu, 2019). This collaborative approach enables a more comprehensive understanding of the radio environment and facilitates the identification of available frequency bands for data transmission.
The choice of network topology also impacts the performance and scalability of CRN-based irrigation systems. Mesh networks, where sensor nodes are interconnected and relay data for each other, offer enhanced resilience and coverage compared to star topologies where nodes communicate directly with a central gateway (Akyildiz & Vuran, 2010). However, mesh networks can be more complex to manage and may introduce additional routing overhead. The trade-off between network resilience and complexity needs to be carefully evaluated to select the most appropriate topology for a specific agricultural setting.
Data security and privacy are paramount concerns in IoT-based irrigation systems due to the sensitive nature of agricultural data (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential for protecting data integrity and ensuring system trustworthiness. Research on secure spectrum leasing and resource allocation algorithms for CR-WSN-based irrigation systems has demonstrated the potential of these technologies for enhancing security and efficiency (Hassan, 2023; Afghah et al., 2018).
In conclusion, the development of effective and reliable real-time irrigation management systems requires a comprehensive approach that addresses the challenges of data transmission in agricultural environments. The integration of robust and adaptive communication protocols, optimized network architectures, and advanced networking technologies like CRNs and DSA, along with a focus on data security and privacy, can contribute significantly to achieving the goal of autonomous and efficient irrigation scheduling.
4. AUTOMATED DATA PROCESSING IN THE CLOUD
4.1. Data Quality and Preprocessing
Data quality is paramount in automated irrigation systems as it directly influences the effectiveness of decision-making and water use efficiency. Issues like missing values, inconsistencies, and outliers arising from sensor malfunctions, environmental interference, or network problems (Lv et al., 2023) can significantly impact the performance of machine learning models used for irrigation scheduling and management.
Real-time data cleaning techniques are essential for addressing these challenges. Kalman filtering proves particularly effective in handling missing values and correcting erroneous readings by recursively estimating the system's state based on previous measurements and current sensor data, taking into account noise and uncertainty (Kim et al., 2020). Moving average techniques, by averaging consecutive data points, provide a more stable representation of the underlying trend, filtering out short-term fluctuations (Chhetri, 2023). For outlier detection, adaptive thresholding methods offer a dynamic approach, adjusting thresholds based on the statistical properties of the data to effectively identify anomalies and minimize false positives (Bah et al., 2021). These techniques are crucial in maintaining the integrity of real-time data streams and ensuring the accuracy of subsequent analyses.
Adaptive data preprocessing is essential for managing the diversity of data sources and formats commonly found in irrigation systems. Data normalization techniques, such as min-max scaling or z-score normalization, ensure that all features contribute equally to the analysis by transforming data values to a common scale (Pradal et al., 2016). This is crucial for preventing features with larger values from dominating the analysis and ensuring that all features are given equal consideration. Similarly, feature scaling methods, like standardization or normalization, optimize the range of feature values to improve the performance and convergence of machine learning models (Tortorici et al., 2024). By scaling features to a similar range, the influence of outliers is reduced, and the model's ability to learn from the data is enhanced.
Data fusion techniques play a critical role in integrating information from diverse sources, creating a more comprehensive and reliable dataset for irrigation management. Dempster-Shafer theory, a generalization of probability theory, allows for the expression of both uncertainty and the degree of conflict in evidence, making it suitable for fusing uncertain and conflicting data from heterogeneous sources (Sadiq and Rodriguez, 2004). This is particularly relevant in irrigation systems where data from different sensors may provide slightly different or even contradictory information due to sensor variations or environmental factors. Bayesian inference offers another powerful framework for combining information from multiple sources, updating the probability of a hypothesis as new evidence becomes available. By applying these techniques, data from soil moisture sensors, canopy temperature sensors, weather stations, and other sources can be integrated to provide a holistic understanding of crop water requirements and environmental conditions, leading to more informed and accurate irrigation decisions.
The impact of data quality extends beyond model accuracy to the robustness of machine learning models under varying conditions. Robust models should maintain consistent performance even when faced with data inconsistencies or unexpected situations. Techniques like data augmentation and domain adaptation can enhance model robustness by exposing the model to a wider range of data variations during training. Data augmentation involves generating additional training data by applying transformations or introducing noise to existing data, making the model more resilient to noise and variations in the real-world data. Domain adaptation techniques aim to adapt a model trained on one domain (e.g., a specific crop or geographic location) to perform well on another domain with different data characteristics. This is particularly relevant in irrigation management, where models may need to be applied to different crops, soil types, or climatic conditions.
The choice of data cleaning, preprocessing, and fusion techniques should be carefully considered based on the specific characteristics of the irrigation system and the available data. By selecting and implementing appropriate techniques, the accuracy, reliability, and robustness of machine learning models can be significantly improved, leading to more efficient and sustainable irrigation management practices.
4.2. Scalable and Autonomous Deployment using Containerization Strategies
The transition from data collection and transmission to efficient data processing requires a robust infrastructure capable of handling diverse workloads and data volumes. Containerization technologies, specifically Docker and Kubernetes, offer a promising solution for deploying and scaling data processing and machine learning modules within cloud environments like AWS, Azure, and GCP (Vargas-Rojas et al., 2024; Rosendo et al., 2022; Solayman & Qasha, 2023). Docker provides a standardized way to package applications and their dependencies into self-contained units known as containers, ensuring consistent and reproducible execution across different platforms (Rosendo et al., 2022). Kubernetes, acting as a container orchestrator, manages their deployment, scaling, and networking across a cluster of machines (Rosendo et al., 2022). This combination presents several advantages for automated irrigation management systems.
Firstly, containerization facilitates efficient resource utilization and scalability. By encapsulating applications and their dependencies, containers enable the isolation of resources and prevent conflicts between different modules (Vargas-Rojas et al., 2024; Solayman & Qasha, 2023). This isolation allows for the efficient allocation of resources, such as CPU, memory, and storage, to each container based on its specific needs. Kubernetes further enhances scalability by allowing for the automatic scaling of containers based on real-time demand, ensuring the system can adapt to varying workloads and data volumes, preventing bottlenecks, and ensuring responsiveness to changing conditions (Karamolegkos et al., 2023).
Secondly, containerization promotes portability and reproducibility. By packaging applications and their dependencies into a single unit, containers make it easy to move and deploy them across different cloud environments without the need for environment-specific configurations (Rosendo et al., 2022; Solayman & Qasha, 2023). This portability simplifies the development and deployment process, reducing the time and effort required to set up and manage the system. Additionally, containers ensure reproducibility by providing a consistent execution environment, regardless of the underlying infrastructure. This eliminates variability and ensures that the system will behave consistently across different deployments (Zhou et al., 2023).
Optimizing container orchestration and resource allocation is crucial to minimizing latency and maximizing throughput in real-time data processing pipelines. Techniques like auto-scaling and dynamic resource allocation play a critical role in this context (Hethcoat et al., 2024; Werner and Tai, 2023; Kumar et al., 2024). Auto-scaling automatically adjusts the number of container instances based on real-time demand, ensuring that sufficient resources are available to handle peak workloads while avoiding over-provisioning during periods of low demand (Hethcoat et al., 2024; Kumar et al., 2024). Dynamic resource allocation enables the fine-grained adjustment of resources allocated to each container based on its specific needs and the current workload (Werner and Tai, 2023). This ensures efficient resource allocation and provides each container with the necessary resources to perform its tasks effectively.
Performance monitoring tools, such as Kubernetes Metrics Server and Prometheus, are essential for gaining insights into the performance of containers and the overall system (Hethcoat et al., 2024; Kuity & Peddoju, 2023). These tools provide valuable data on key performance indicators, such as CPU and memory usage, network traffic, and application-specific metrics. By monitoring this data, administrators can identify bottlenecks, optimize resource allocation strategies, and continuously improve system performance (Hethcoat et al., 2024). This data-driven approach ensures that automated irrigation management systems can operate efficiently and reliably.
By integrating containerization technologies with optimization techniques and performance monitoring, automated irrigation management systems achieve the scalability, autonomy, and efficiency required for effective real-time data processing and decision-making. This approach facilitates a seamless and responsive system that can adapt to changing conditions and contribute to the overall goal of optimizing water resource management and increasing agricultural productivity.

4.3. Deploying ML Models for Data Processing
Transitioning from data collection, preprocessing, and transmission, the deployment of machine learning (ML) models marks a pivotal stage in the automated irrigation management pipeline. This stage entails utilizing cloud platforms to facilitate real-time data processing and inference, enabling data-driven decision-making for optimal irrigation management and ultimately contributing to fully autonomous, scalable irrigation management.
Several architectures and frameworks exist for deploying ML models on cloud platforms, each offering unique advantages and catering to different requirements. TensorFlow Serving, for instance, provides a high-performance system specifically designed for serving TensorFlow models (Abadi et al., 2016). This framework enables efficient and scalable inference, making it suitable for real-time applications where low latency and high throughput are crucial. For instance, in a large-scale irrigation system with numerous sensors generating data continuously, TensorFlow Serving can efficiently handle the high volume of inference requests and provide timely predictions for irrigation scheduling. Similarly, Apache MXNet Model Server offers a flexible and efficient solution for deploying models trained with MXNet, supporting a wide range of deep learning models and inference backends (MXNet Developers, 2015). This versatility makes it suitable for complex irrigation systems that may utilize different types of ML models for various tasks, such as predicting crop water requirements, detecting plant stress, or forecasting weather conditions. ONNX Runtime, on the other hand, provides a cross-platform inference engine compatible with various ML frameworks, including PyTorch, TensorFlow, and MXNet (Microsoft, 2017). This versatility enables the deployment of models in diverse environments, facilitating interoperability and reducing the need for model conversion. For example, an irrigation system that uses models trained in different frameworks can utilize ONNX Runtime to deploy them on a single platform without the need for time-consuming and error-prone model conversion processes.
Choosing the appropriate architecture or framework depends on several factors, including the specific ML framework used for model training, the desired level of performance and scalability, and the need for cross-platform compatibility. For instance, if the primary concern is low latency and high throughput for real-time inference, TensorFlow Serving might be the optimal choice for TensorFlow models. However, if flexibility and support for various deep learning models are required, Apache MXNet Model Server could be more suitable. In cases where cross-platform compatibility is essential, ONNX Runtime offers a versatile solution.
Once the ML model is deployed, optimizing its performance and resource utilization becomes crucial for ensuring the efficiency of integrated end-to-end automated irrigation systems. Model compression techniques, such as pruning and quantization, offer effective methods for reducing the size and computational requirements of ML models without compromising accuracy (Premkumar & Sigappi, 2022). Pruning involves eliminating unnecessary connections or neurons from the model, effectively streamlining its structure and reducing computational complexity. This can be particularly beneficial for deep learning models, which often have a large number of parameters and can be prone to overfitting. By removing redundant or less important connections, pruning can improve modelgeneralizability and reduce inference time. Quantization, on the other hand, involves reducing the precision of model parameters, typically from 32-bit floating-point numbers to lower-precision formats such as 8-bit integers. This reduction in precision leads to smaller model sizes and faster inference speeds, making it particularly beneficial for resource-constrained environments or real-time applications. For instance, in edge computing scenarios where ML models are deployed on devices with limited computational resources, quantization can enable efficient inference without sacrificing accuracy.
Furthermore, hardware acceleration through the utilization of GPUs or TPUs can significantly enhance model performance by leveraging specialized hardware designed for parallel processing (Premkumar & Sigappi, 2022). GPUs, with their massive parallelism and high memory bandwidth, excel at accelerating matrix operations and convolutions, which are fundamental computations in many deep learning models. This acceleration can significantly reduce inference time and enable real-time processing of sensor data for timely irrigation decisions. TPUs, specifically designed for deep learning workloads, offer even greater performance and energy efficiency for specific model architectures. These hardware accelerators can drastically reduce inference time, enabling near real-time decision-making and enhancing the responsiveness of automated irrigation systems. For example, in a scenario where immediate response to changing weather conditions or soil moisture levels is critical, hardware acceleration can ensure that irrigation decisions are made and executed promptly.
In addition to model compression and hardware acceleration, distributed training techniques play a crucial role in optimizing the training process for large-scale ML models. Techniques such as Horovod and BytePS enable the distribution of training across multiple machines, effectively parallelizing the process and reducing training time (Premkumar & Sigappi, 2022). This is particularly beneficial for complex models with a large number of parameters or when dealing with large datasets. By leveraging distributed training, irrigation management systems can train more sophisticated models and improve their predictive capabilities, leading to more accurate and efficient irrigation decisions. For instance, a system that utilizes a deep learning model with millions of parameters can benefit from distributed training to reduce training time from days to hours, enabling faster model iteration and improvement.
Integrating the deployed ML models with other components of the automated irrigation management pipeline is essential for achieving a fully autonomous and cohesive system and addressing the need for seamless integration across the automated irrigation management system. Standardized protocols, such as MQTT and CoAP, provide lightweight and efficient communication channels for exchanging data between these components (Poojara et al., 2023; Jimenez et al., 2020a; Gour et al., 2023). MQTT, with its publish-subscribe architecture, enables real-time data streaming and event-driven communication, making it suitable for transmitting sensor data, control signals, and inference results (Raikar & M, 2023). This enables the ML model to receive real-time updates on soil moisture, weather conditions, and plant health, allowing for dynamic adjustments to irrigation schedules based on the latest data. CoAP, designed for constrained devices and low-power networks, offers a web-transfer protocol for resource-constrained environments, enabling efficient communication between sensors, actuators, and the ML models (Raikar & M, 2023). This is particularly relevant in situations where sensors or actuators have limited processing power or battery life, as CoAP minimizes communication overhead and energy consumption. Additionally, RESTful APIs provide a standardized interface for accessing and controlling the ML models, enabling seamless integration with other software components and facilitating system management and monitoring (Wang et al., 2022). This allows for easy integration with existing farm management systems or third-party applications, creating a unified platform for comprehensive irrigation management.4.4. Online Learning in the Cloud
The complexities of real-time data processing in irrigation management necessitate the exploration of advanced techniques to continuously learn and adapt to the dynamic nature of agricultural environments. Online learning algorithms offer a promising solution, enabling the continuous update and improvement of machine learning models based on incoming real-time data. This adaptability is crucial for addressing the challenges of changing environmental conditions, such as weather patterns and crop growth stages, and optimizing irrigation decision-making to enhance water usage efficiency and crop productivity.
Several online learning algorithms have demonstrated potential for real-time data processing and model adaptation in the context of irrigation management. Stochastic Gradient Descent (SGD) facilitates the incremental update of model parameters with each new data point, allowing for efficient adaptation to changing data distributions (Bottou, 2010). This incremental learning process ensures that the model remains responsive to the latest conditions, minimizing the risk of outdated predictions and improving the accuracy of irrigation decisions. Passive-Aggressive algorithms, on the other hand, adjust model parameters only when a misclassification occurs, providing a computationally efficient approach for handling large data streams (Crammer et al., 2006). These algorithms offer a robust approach to handling noisy data, a common challenge in real-world sensor readings, by making small adjustments only when the model's prediction deviates significantly from the actual value (Fei et al., 2019). Online Random Forests extend the concept of random forests to the online setting, enabling the incremental construction and update of decision trees as new data arrives (Saffari et al., 2009). The continuous evolution of the ensemble ensures that the model remains relevant to the changing environment, capturing intricate relationships between variables and leading to more informed irrigation decisions.
Research in various domains highlights the importance of online learning for real-time data stream analytics. Snyder et al. (2020) explored the application of online learning techniques for identifying relevant tweets in real-time, improving situational awareness for first responders. The proposed interactive learning framework allows users to continuously label the relevance of incoming tweets, enabling the real-time refinement of the underlying machine learning model. This user-guided approach aligns well with the dynamic nature of irrigation management, where models need to continuously adjust to varying environmental conditions and crop water requirements. Similarly, research in the field of cyber-physical systems (CPS) underscores the need for online learning algorithms to effectively extract insights and knowledge from continuously generated data streams (Fei et al., 2019). These capabilities are crucial for enabling feedback loops between physical processes and cyber elements, facilitating the integration and optimization of CPS in irrigation management systems.
To implement online learning in cloud-based irrigation management systems, various architectures and frameworks can be considered. Apache Spark Streaming, Apache Flink, and AWS Kinesis provide scalable and fault-tolerant platforms for processing real-time data streams, allowing for the development of online learning pipelines that continuously ingest and analyze data to update machine learning models (Zaharia et al., 2012; Carbone et al., 2015; Amazon Web Services, 2023). These frameworks leverage serverless computing paradigms, automatically scaling resources based on the volume and velocity of incoming data, ensuring efficient resource utilization and responsiveness to fluctuations in demand (Fei et al., 2019).
Effectively managing the exploration-exploitation trade-off is crucial for optimizing online learning in irrigation management. Techniques such as Multi-armed bandits (Sutton & Barto, 2018), Bayesian optimization (Shahriari et al., 2016), and Reinforcement Learning (RL) (Sutton & Barto, 2018) can be employed to balance the allocation of resources between exploring new irrigation strategies and exploiting the current best-performing approaches. These techniques enable the identification of optimal irrigation policies, adapting to changing environmental conditions and maximizing long-term rewards.
In conclusion, online learning techniques, coupled with scalable cloud-based architectures, offer a powerful solution for real-time data processing and continuous adaptation in irrigation management systems. By leveraging algorithms like SGD, Passive-Aggressive, and Online Random Forests, along with stream processing frameworks like Apache Spark Streaming, Apache Flink, and AWS Kinesis, irrigation management systems can effectively handle the complexities of real-time data, optimize water usage, and enhance crop productivity in the face of dynamic environmental conditions.

5. GENERATING AND APPLYING IRRIGATION INSIGHTS 
5.1. Real-Time Generation of Actionable Irrigation Insights
•	Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations
•	Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution
•	Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
•	Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)
5.2. Automated Application of Irrigation Insights
•	Architectures and protocols for seamless integration of ML-generated insights with IoT-enabled irrigation control systems, such as MQTT and CoAP for lightweight, real-time communication
•	Analysis of industry-leading products and services, such as smart irrigation controllers (e.g., Rachio) and cloud-based irrigation management platforms (e.g., CropX)
•	Strategies for ensuring reliability, security, and scalability of automated insight application, such as redundant communication channels and secure edge-to-cloud architectures
•	Case studies of successful implementations of closed-loop, autonomous irrigation systems in research and commercial settings, highlighting technologies used and benefits achieved

6. INTEGRATION, INTEROPERABILITY, AND STANDARDIZATION 
6.1. Interoperability and Standardization
•	Importance of interoperability and standardization in enabling seamless integration of automated irrigation components
•	Overview of existing and emerging standards for IoT devices, communication protocols, and data formats in precision agriculture (e.g., ISOBUS, agroXML, SensorML)
•	Role of standardization bodies and industry consortia in promoting interoperability (e.g., AgGateway, Open Ag Data Alliance, Agricultural Industry Electronics Foundation)
•	Challenges in adopting and implementing standards across diverse hardware and software platforms
•	Strategies for encouraging widespread adoption of standards and best practices for interoperability in automated irrigation systems
6.2. Integration with Existing Irrigation Infrastructure
•	Challenges and strategies for retrofitting legacy irrigation systems with IoT sensors, actuators, and communication devices
•	Hardware compatibility issues and solutions (e.g., adapters, modular designs)
•	Software and firmware updates to enable integration with automated decision-making systems
•	Data integration and normalization techniques for merging legacy and new data sources
•	Economic and practical considerations for transitioning from manual to automated irrigation management
•	Cost-benefit analysis of upgrading existing infrastructure vs. implementing new systems
•	Phased implementation approaches to minimize disruption and optimize resource allocation
•	Training and support requirements for farmers and irrigation managers adopting automated systems
•	Case studies and real-world examples of successful integration of automated irrigation with existing infrastructure
6.3. Integration with Other Precision Agriculture Technologies
•	Synergies between automated irrigation and complementary technologies
•	Remote sensing (satellite, UAV, and ground-based) for crop monitoring and evapotranspiration estimation
•	Soil moisture sensors and weather stations for real-time, localized data collection
•	Variable rate application systems for precise irrigation delivery based on crop requirements
•	Yield mapping and analytics for assessing the impact of automated irrigation on crop productivity
•	Architectures and frameworks for integrating diverse data sources and technologies into a unified precision agriculture ecosystem
•	Edge computing and fog computing paradigms for real-time data processing and decision-making
•	Cloud-based platforms for data storage, analysis, and visualization
•	API-driven approaches for modular integration of third-party services and applications
•	Challenges and solutions for ensuring data quality, consistency, and security across integrated precision agriculture systems
•	Data cleaning, preprocessing, and harmonization techniques
•	Blockchain and distributed ledger technologies for secure, tamper-proof data sharing and traceability
•	Access control and authentication mechanisms for protecting sensitive data and resources
•	Future trends and research directions in the integration of automated irrigation with advanced precision agriculture technologies (e.g., AI-driven crop modeling, robotics, and autonomous vehicles)
6.4. Cybersecurity Considerations for Integrated Automated Irrigation Systems
•	Unique security risks and vulnerabilities associated with IoT-based automated irrigation systems
•	Potential for unauthorized access, data tampering, and system manipulation
•	Implications of security breaches for crop health, water resource management, and farm productivity
•	Best practices and strategies for securing automated irrigation systems
•	Secure device provisioning and authentication (e.g., hardware security modules, certificates)
•	Encryption and secure communication protocols (e.g., TLS, DTLS)
•	Firmware and software updates to address emerging security threats
•	Network segmentation and access control to limit the impact of breaches
•	Role of cybersecurity standards and frameworks in guiding the development and deployment of secure automated irrigation systems (e.g., NIST CSF, IEC 62443)
•	Importance of user awareness, training, and incident response planning in maintaining the security of integrated automated irrigation systems

7. MONITORING AND ENSURING SYSTEM RELIABILITY
7.1. Resilience and Fault Tolerance in Automated Irrigation Systems
•	Strategies for ensuring robustness and reliability in the face of failures, disruptions, or unexpected events
•	Redundancy: Implementing redundant components, such as duplicate sensors (e.g., soil moisture sensors, weather stations), controllers (e.g., PLCs, microcontrollers), and communication channels (e.g., cellular, satellite, LoRaWAN) to maintain system functionality during component failures
•	Failover mechanisms: Designing seamless failover mechanisms that automatically switch to backup components or systems in case of primary system failure, such as hot-standby controllers or multi-path communication protocols (e.g., mesh networks, software-defined networking)
•	Self-healing capabilities: Incorporating AI-driven self-healing mechanisms that can detect, diagnose, and recover from faults without human intervention, using techniques like reinforcement learning, Bayesian networks, or self-organizing maps
•	The role of distributed architectures and edge computing in enhancing system resilience
•	Decentralizing critical functions and data processing to minimize the impact of single points of failure, using fog computing or multi-agent systems
•	Leveraging edge computing to enable localized decision-making and control, reducing dependence on cloud connectivity and improving response times, using technologies like Raspberry Pi, NVIDIA Jetson, or Intel NUC
•	Anomaly detection and predictive maintenance using AI techniques
•	Employing unsupervised learning algorithms (e.g., autoencoders, clustering) to detect anomalies in sensor data, system performance, and water usage patterns
•	Developing predictive maintenance models using techniques like long short-term memory (LSTM) networks, convolutional neural networks (CNNs), or gradient boosting machines (GBMs) to anticipate and prevent potential system failures based on historical data and real-time monitoring
7.2. Advanced Monitoring Techniques for Automated Irrigation Systems
•	Remote monitoring using IoT-enabled sensors and computer vision
•	Deploying a heterogeneous network of IoT sensors to collect real-time data on soil moisture (e.g., capacitive, tensiometric), temperature (e.g., thermocouples, thermistors), humidity (e.g., capacitive, resistive), and plant health (e.g., sap flow, leaf wetness)
•	Integrating high-resolution cameras (e.g., multispectral, hyperspectral) and computer vision algorithms for visual monitoring of crop growth, disease detection (e.g., using deep learning-based object detection and segmentation), and irrigation system performance (e.g., leak detection, sprinkler uniformity)
•	Transmitting sensor and camera data to cloud-based platforms (e.g., AWS IoT, Google Cloud IoT, Microsoft Azure IoT) for remote access and analysis using protocols like MQTT, CoAP, or AMQP
•	Innovative approaches for real-time system health assessment
•	Developing novel algorithms and metrics for evaluating the health and performance of automated irrigation systems, such as entropy-based measures, network resilience indices, or multi-criteria decision analysis (MCDA) frameworks
•	Combining data from multiple sources (e.g., sensors, weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filters, Dempster-Shafer theory) to create a comprehensive view of system health
•	Employing advanced data visualization techniques (e.g., interactive dashboards, augmented reality) to present system health information in an intuitive and actionable format
7.3. Closed-Loop Control and Feedback Mechanisms
•	Exploring the concept of closed-loop control in autonomous irrigation systems
•	Implementing feedback loops that continuously monitor system performance and adjust irrigation schedules based on real-time data, using control techniques like proportional-integral-derivative (PID), model predictive control (MPC), or fuzzy logic control (FLC)
•	Integrating machine learning algorithms (e.g., reinforcement learning, genetic algorithms) to optimize closed-loop control strategies over time, adapting to changing environmental conditions and crop requirements
•	Designing effective feedback mechanisms for user interaction and system optimization
•	Providing user-friendly interfaces (e.g., mobile apps, web dashboards) for farmers to input preferences, constraints, and expert knowledge into the automated irrigation system, using techniques like participatory design or user-centered design
•	Incorporating user feedback and domain expertise to refine irrigation strategies and improve system performance
8. CASE STUDIES AND REAL-WORLD IMPLEMENTATIONS OF FULLY AUTONOMOUS IRRIGATION SYSTEMS
8.1. Fully Autonomous Irrigation Systems in Diverse Agricultural Settings
•	Row Crops: maize, wheat, soybean with real-time soil moisture monitoring and weather-based irrigation scheduling for fully automated precision irrigation
•	Orchards: citrus, apple, almond with plant health monitoring and precision water application for fully autonomous orchard management
•	Greenhouses: tomato, lettuce, herbs with automated drip irrigation and climate control integration for fully automated greenhouse operations
•	Urban Farming: rooftop gardens, vertical farms with IoT-enabled hydroponic systems and remote management for fully autonomous urban crop production
8.2. Integration of Advanced System Components for End-to-End Automation
•	Wireless sensor networks: soil moisture probes, weather stations, plant health monitoring cameras with low-power, long-range communication for fully automated data acquisition
•	Secure data transmission: LoRaWAN, NB-IoT, 5G, satellite communication for reliable, real-time data transfer from field to cloud in fully autonomous irrigation systems
•	Intelligent data processing: edge computing for local data filtering, cloud platforms for scalable storage and analysis, machine learning algorithms for predictive insights in fully automated irrigation management
•	Autonomous decision-making: advanced irrigation scheduling algorithms, precise valve control, closed-loop feedback systems for optimal water management in fully autonomous irrigation systems
8.3. Quantitative Performance Evaluation of Fully Automated Irrigation Systems
•	Water use efficiency: percent reduction in water consumption compared to conventional methods, improved water productivity (yield per unit of water) achieved through fully autonomous irrigation
•	Crop yield and quality improvements: percent increase in yield, enhanced crop uniformity, improved nutritional content attributed to fully automated precision irrigation
•	Labor and energy savings: quantified reduction in labor hours for irrigation management, decreased energy consumption for pumping due to optimized scheduling in fully autonomous systems
•	Economic viability: detailed return on investment analysis, payback period calculations, comprehensive cost-benefit analysis for fully autonomous irrigation management systems
8.4. Lessons Learned and Challenges Encountered in Deploying Autonomous Irrigation Systems
•	Technical challenges and solutions: ensuring reliable data transmission in remote locations, addressing interoperability issues between diverse system components, optimizing power consumption for extended battery life, adapting algorithms to local soil and weather conditions in fully autonomous irrigation systems
•	Operational and logistical hurdles: streamlining installation and maintenance procedures, providing effective user training, seamlessly integrating with existing farm management practices and legacy systems for fully automated irrigation management
•	Regulatory and socio-economic considerations: navigating complex water use regulations, addressing data privacy and security concerns, ensuring equitable access and affordability for smallholder farmers adopting fully autonomous irrigation technologies
8.5. Best Practices and Recommendations for Successful Implementation
•	Designing scalable, modular, and adaptable autonomous irrigation systems to accommodate future growth and changing requirements for fully automated water management
•	Prioritizing user-centered design principles and actively engaging stakeholders throughout the development and deployment process of fully autonomous irrigation solutions
•	Adopting open standards and communication protocols to enable seamless integration of system components and interoperability with third-party platforms in fully automated irrigation setups
•	Implementing robust data validation, filtering, and quality control mechanisms to ensure data integrity and reliability for decision-making in fully autonomous irrigation systems
•	Establishing clear data governance policies and security frameworks to protect sensitive information and maintain user trust in fully automated irrigation management
•	Developing intuitive user interfaces and decision support tools to facilitate easy adoption and effective use of fully autonomous irrigation systems
•	Collaborating with local extension services, agribusinesses, and technology providers for knowledge transfer, technical support, and continuous improvement of fully automated irrigation solutions
8.6. Synthesis of Case Studies and Implications for Autonomous Irrigation Adoption
•	Cross-case analysis of key performance indicators and critical success factors for fully autonomous irrigation scheduling systems in various contexts
•	Identification of common themes, challenges, and innovative solutions across diverse implementations of end-to-end fully automated irrigation management
•	Assessment of the potential for replicability and scaling of successful fully autonomous irrigation projects in different regions and farming systems
•	Implications for future research priorities, technology development roadmaps, and policy interventions to support widespread adoption of fully autonomous irrigation technologies

CONCLUSION/FUTURE DIRECTIONS AND UNANSWERED QUESTIONS
•	Summarize the key insights gained from the question-driven review, emphasizing how each section contributes to the overarching goal of achieving real-time, end-to-end automation in irrigation management
•	Based on the questions addressed, propose new research directions and unanswered questions
•	Identify key research gaps and propose concrete research questions and hypotheses for advancing the field of real-time, automated irrigation management
•	Highlight the need for collaborative research efforts across disciplines, such as computer science, agricultural engineering, and environmental science, to address the complex challenges of automated irrigation systems
•	Emphasize the need for further innovation and exploration in real-time, automated irrigation systems




</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper. 

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 5.2. Automated Application of Irrigation Insights
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 4>
Point: Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)

Papers to support point:

Paper 1:
- APA Citation: Alaba, F. A., Jegede, A., Sani, U., & Dada, E. G. (2024). Artificial intelligence of things (AIoT) solutions for sustainable agriculture and food security. In: Misra, S., Siakas, K., & Lampropoulos, G. (eds) Artificial Intelligence of Things for Achieving Sustainable Development Goals. Lecture Notes on Data Engineering and Communications Technologies, vol 192. Springer, Cham. https://doi.org/10.1007/978-3-031-53433-1_7
  Main Objective: To investigate the application of AI-based insights to smart irrigation systems without human intervention, with a focus on real-time generation and automated application of actionable irrigation insights.
  Study Location: Unspecified
  Data Sources: Literature review
  Technologies Used: Edge computing, model compression, hardware accelerators
  Key Findings: Edge computing, model compression, and hardware accelerators are crucial techniques for enabling real-time generation of actionable irrigation insights, which is essential for efficient and effective irrigation management.
  Extract 1: "Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)"
  Extract 2: The study's focus on the real-time generation and automated application of actionable irrigation insights is highly relevant to the point in the literature review that discusses techniques for minimizing computational complexity and latency in real-time irrigation management systems.
  Limitations: The study does not provide a comprehensive evaluation of the performance and accuracy of the proposed techniques in real-world irrigation scenarios.
  Relevance Evaluation: The study provides insights into the generation of actionable irrigation insights, which are highly relevant to the point in the literature review that discusses techniques for minimizing computational complexity and latency in real-time irrigation management systems. By examining edge computing, model compression, and hardware accelerators, the study contributes to the understanding of how these techniques can enable real-time insight generation, which is crucial for efficient and effective irrigation management.
  Relevance Score: 1.0
  Inline Citation: (Alaba, Jegede, Sani & Dada, 2024)
  Explanation: The study's objective is to determine the application of AI-based insights to smart irrigation systems without human intervention, looking into the real-time generation and automated application of actionable irrigation insights, with a focus on interpretability and explainability. It is argued that reduction of computational complexity and latency using edge computing, model compression, and hardware accelerators are among the crucial techniques that facilitate the real-time generation of actionable irrigation insights.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement Log in Find a journal Publish with us Track your research Search Cart Home Artificial Intelligence of Things for Achieving Sustainable Development Goals Chapter Artificial Intelligence of Things (AIoT) Solutions for Sustainable Agriculture and Food Security Chapter First Online: 09 March 2024 pp 123–142 Cite this chapter Access provided by University of Nebraska-Lincoln Download book PDF Download book EPUB Artificial Intelligence of Things for Achieving Sustainable Development Goals Fadele Ayotunde Alaba, Abayomi Jegede, Usman Sani & Emmanuel Gbenga Dada  Part of the book series: Lecture Notes on Data Engineering and Communications Technologies ((LNDECT,volume 192)) 39 Accesses Abstract The United Nations established the Sustainable Development Goals (SDGs) in 2015 to address worldwide social, economic, and environmental challenges. This study examines the significance of the Artificial Intelligence of Things (AIoT) in sustainable agriculture and food security. Innovative and effective agriculture practices are needed more than ever due to population growth and environmental issues. Real-time data and analytics from AIoT enable farmers and stakeholders to make smart choices and optimize resource use. AIoT’s role in food security and sustainable agriculture is introduced in the study. It discusses AIoT in precision agriculture, smart irrigation, animal management, and supply chain efficiency. Case studies and real-world deployments evaluate successful AIoT systems in diverse areas, including lessons learned and best practices. The study also examines AIoT developments, AI and machine learning integration, 5G and edge computing, and agricultural AIoT applications. It highlights technical, data security, and financial issues with AIoT adoption and offers solutions. The results emphasize AIoT role in sustainable agriculture and food security. AIoT and multinational cooperation may make agriculture more resilient, resource-efficient, and transparent. The chapter concludes with a call for further research and implementation, highlighting the need for interdisciplinary cooperation to maximize the potential of AIoT in agriculture. Keywords AIoT Sustainable agriculture Food security Precision agriculture Smart irrigation Access provided by University of Nebraska-Lincoln. Download chapter PDF 1 Introduction Food security is a crucial global problem affecting billions of people worldwide. Food security is defined by the Food and Agriculture Organisation of the United Nations (FAO) as “when all people, at all times, have physical, social, and economic access to sufficient, safe, and nutritious food to meet their dietary needs and food preferences for an active and healthy life” (Cudjoe et al. 2021). Despite tremendous improvements in recent decades, food security remains a key concern, especially in developing nations and among vulnerable people (Keesstra et al. 2016). The world’s population continues to rise, placing enormous strain on agricultural systems to produce enough food to feed everyone effectively. Weather patterns that are erratic, severe occurrences, and changing climatic circumstances significantly influence agricultural production, resulting in crop failures, lower yields, and food shortages (Nathan and Joel Uche 2023; Oseni and Masarirambi 2011). Soil erosion, deforestation, and degradation of arable land endanger agricultural production and restrict cultivable land availability. Water shortage in many locations impedes irrigation and farming practices, resulting in water stress and lower crop yields. Much of the world’s food supply is lost or squandered at different points throughout the supply chain, from production to consumption, aggravating food poverty (Khanna, 2018). Sustainable agriculture is an important strategy for addressing global food security concerns while minimizing negative environmental consequences. Sustainable agriculture seeks to increase production, protect natural resources, promote ecological balance, and assure farmers’ economic viability (Herzberg et al. 2022). It entails putting practices that promote long-term food production in place while neither depleting resources nor damaging the environment (Abubakar 2021). The AIoT has emerged as a disruptive technology with enormous promise to revolutionise the agriculture industry in recent years. The AIoT is a network of networked devices with sensors, software, and data analytics capabilities that gather and share data via the Internet. AIoT may be used in agriculture to monitor and manage different elements of farming, such as crop health, irrigation, pest control, and animal management (Saad et al. 2023). Furthermore, recision farming is made possible by AIoT-enabled sensors and data analytics, which allow farmers to monitor and optimise inputs such as water, fertilizer, and pesticides, resulting in higher efficiency and decreased resource waste (Giuffrida et al. 2022). Weather forecasting and monitoring powered by AIoT assist farmers in adapting to changing weather patterns, mitigating risks, and making educated crop management choices. AIoT enables farmers to monitor their crops and animals from afar remotely, increasing output and minimising the requirement for personal presence (Kemmoe et al. 2022). AIoT applications in the food supply chain increase traceability, minimize food loss, and improve overall supply chain efficiency. AIoT technologies improve efficiency and solve problems in agriculture and food supply systems. Food security and sustainable agriculture need precision farming, smart irrigation, livestock monitoring, supply chain traceability, climate resilience, data-driven decision-making, and sustainable resource management (Kazmi and Sodangi 2022). The United Nations established the Sustainable Development Goals (SDGs) in 2015 to address worldwide social, economic, and environmental challenges. These 17 global objectives provide a comprehensive framework for promoting sustainable development and improving people’s well-being. They cover various issues such as poverty eradication, hunger, health, education, gender equality, clean water, sanitation, affordable energy, decent work, industry, innovation, climate action, life below water, life on land, peace and justice, and strong institutions (Kalu et al. 2021). The SDGs emphasize collaboration among governments, businesses, civil society, and individuals to achieve sustainable development. By 2030, the SDGs aim to end poverty, hunger, inequality, access to quality education and healthcare, promote sustainable economic growth, combat climate change, and protect biodiversity (Erin and Bamigboye 2022). Implementing the SDGs requires political commitment, adequate resources, and effective policies. Governments play a crucial role in setting national priorities, aligning policies with the SDGs, and mobilizing financial resources. Businesses are encouraged to adopt sustainable practices, invest in innovation, and contribute to the achievement of the goals (Khan et al. 2022). In conclusion, the SDGs represent a global roadmap for creating a more sustainable and equitable future for all, addressing the root causes of poverty, inequality, and environmental degradation. Achieving the SDGs requires collective efforts and a shared commitment to leaving no one behind. The study’s research goal is to look at the role of AIoT in promoting sustainable agriculture and tackling food security issues. The research will examine the possible advantages and drawbacks of AIoT applications in agriculture, such as crop management, water conservation, animal monitoring, and supply chain management. The study will thoroughly examine current literature, case studies, and real-world deployments of AIoT solutions in agriculture. It will concentrate on the influence of AIoT on agricultural production, resource efficiency, and climate change resistance. In addition, the research will look at the problems and hurdles to AIoT adoption in agriculture, policy implications, and future trends. Overall, this study aims to improve knowledge of how AIoT may play an important role in promoting sustainable agriculture and maintaining food security in a fast-changing world. The study seeks to give significant insights for policymakers, academics, and stakeholders to make informed choices and build strategies for sustainable agricultural growth by highlighting the prospects and difficulties of AIoT adoption in agriculture. This chapter is arranged into nine different sections. In Sect. 2, the related works are discussed in detail. The research on AIoT applications in sustainable agriculture is presented in detail in Sect. 3. Section 4 provides a discussion on AIoT in food supply chain management. Section 5 provides the challenges and barriers. Section 6 discusses the policy and regulatory considerations. Section 7 provides the Case Studies and real-world implementations as well as future trends and innovations are provided in Sect. 8. Finally, Sect. 9 concludes the study. 2 Literature Review Climate change, water shortages, and the need for effective resource management are just a few of the many obstacles that agriculture must overcome to ensure the world's food supply. The AIoT has emerged as a potent tool to overcome these obstacles and improve agriculture’s long-term viability (Praveen et al. 2021). AIoT systems use sensors, data analytics, and real-time connectivity to monitor and optimize agricultural operations for higher yields, lower resource waste, and safer food supplies (Nwankwoala and Okujagu 2021). This section examines current AIoT technologies for sustainable agriculture and food security. Using sensors to monitor soil moisture, temperature, nutrient levels, and crop health is at the heart of precision farming, a prominent use in agriculture. More informed choices about watering, fertilizing, and controlling pests may be made by farmers thanks to this information (Sohel et al. 2022). With real-time data from weather stations and soil moisture sensors, AIoT-enabled smart irrigation systems can fine-tune watering schedules to meet the precise needs of individual crops. These methods help farmers save water and irrigate their crops more efficiently, especially in arid areas (Farooq et al. 2022). AIoT devices with sensors and GPS may track cattle and monitor their well-being and habits. Better livestock management and greater food production result from using livestock monitoring tools that assist farmers in identifying health problems early, optimizing feeding patterns and enhancing breeding practices (Eze et al. 2022). Due to AIoT-based supply chain traceability systems, food goods may be tracked and monitored in real-time through the supply chain. These methods improve visibility and tracking, safeguarding against food fraud and keeping consumers secure (Farooq et al. 2022; Kazmi and Sodangi 2022). Weather patterns, temperature, and humidity data are gathered via AIoT-based weather stations and environmental sensors, which are then used for climate monitoring and prediction (Al-otaibi 2022). This information is utilized to foresee the effects of climate change and harsh weather on crops, allowing farmers to make necessary preparations in advance. To keep tabs on pest populations in farms, AIoT systems have integrated pest monitoring sensors and data analytics. As stated by (Zhao et al. 2022), pests may be managed more sustainably and with less reliance on chemical pesticides if their presence is identified sufficiently soon. Automated and optimized nutrition and water management is achieved via integrating AIoT technology into aquaponics and hydroponics systems. These methods allow for year-round farming, reduce water use, and boost the long-term viability of fish and vegetable harvests (Yoon 2020). Data on crop health and stress may be gathered in real-time via remote sensing technologies like satellites and drones fitted with AIoT sensors. This data aids farmers in making early diagnoses of disease and nutritional deficits, which leads to more focused treatments and fewer crop failures (Abdullahi et al. 2022). AIoT technologies use automated traps, drones, and AI for smart pest control (Shahinzadeh et al. 2019). This allows for precise monitoring and managing of pest populations without harming the ecosystem. Indicators of soil health, such as pH, nutrient content, and organic matter, are tracked using AIoT sensors and devices. Producing crops sustainably and effectively requires this information to implement precision agricultural practices and enhance soil fertility (Mishra and Pandya 2021). As a result of optimizing resource utilization, increasing productivity, and raising the efficiency of food supply chains, AIoT technologies have the potential to revolutionize agriculture and solve food security concerns. Current AIoT solutions show how important technology is to attaining sustainable agriculture and meeting the needs of a rising global population. 3 AIoT Applications in Sustainable Agriculture Global food security depends on agriculture, yet climate change, water shortages, and resource management pose concerns. The AIoT can solve these problems and improve agriculture’s sustainability. AIoT systems monitor and optimize agricultural processes using sensors, data analytics, and real-time connectivity, improving productivity, resource efficiency, and food security (Dibia and Nwaigwe 2017; Herzberg et al. 2022). For precision farming, AIoT sensors capture soil moisture, temperature, nutrient levels, and crop health data. This data may help farmers optimize irrigation, fertilization, and insect management for better resource utilization and crop yields. Smart irrigation systems optimize watering schedules based on crop water needs using real-time data from weather stations and soil moisture sensors (Ambayea et al. 2022). Livestock monitoring systems enhance livestock management and food production by detecting health concerns early, optimizing feeding patterns, and improving breeding practices. Supply chain traceability systems reduce food fraud and ensure food safety by tracking and monitoring food goods in real-time (Oberlack et al. 2021). Farmers can modify their practices and safeguard their from bad weather using AIoT-based weather stations and environmental sensors. Data analytics and integrated pest monitoring devices reduce the demand for chemical pesticides and promote eco-friendly pest control (Awofeso and Odeyemi 2021). Aquaponics and hydroponics systems automate and optimise nutrition and water management, allowing year-round growing, decreased water use, and sustainable fish and vegetable production. Farmers need remote sensing for crop health and stress to identify illnesses and nutrient shortages early and cure them for maximum development and output (Norton 2016). Farmers may plan planting, irrigation, and pest management using weather forecasts and predictive analytics. Smart farming and precision agriculture improve crop quality, food safety, efficiency, sustainability, data-driven decision-making, labour, and time (Ambayea et al. 2022; Voora et al. 2022). However, early investment expenditures, data privacy and security issues, and farmers’ technical knowledge are obstacles. Smart farming may be vital to global food security and environmental sustainability as technology advances. Thus, components of precision agriculture are illustrated in Fig. 1. Fig. 1 The components of precision agriculture (Herzberg et al. 2022) Full size image 3.1 Smart Irrigation and Water Management Smart irrigation is a cutting-edge technique for managing water in agriculture. It allows farmers to save water without sacrificing yield. Smart irrigation systems reduce water waste while supplying water reliably to crops depending on individual demands, local weather, and other data collected from various sensors and AIoT devices (Raghuvanshi et al. 2022). Agriculture uses a lot of water, so finding ways to save and reuse that water is essential. Smart irrigation systems determine when and how much water should be supplied to crops by monitoring soil moisture and evapotranspiration rates (Zhang, Xu et al. 2022b). Smart agricultural practices, such as drip irrigation and controlled watering systems, are increasingly used to reduce water waste from evaporation and runoff. This technology allows farmers to minimize labor by remotely controlling irrigation cycles and maintaining a steady water supply. Smart irrigation helps conserve water, grow crops with the same amount of water, save money, be more eco-friendly, and be less vulnerable to climate change (Neupane et al. 2022; Ning and Liu 2015). However, barriers to wider adoption exist, including the need for costly upfront investments, specialized knowledge, and consistent access to the Internet (Arubayi 2023). Finally, smart irrigation and water management provide a game-changing strategy for environmentally responsible farming by helping farmers reduce water waste, maximize crop output, and safeguard natural resources. Farmers can help ensure food security in the face of climate change by adopting smart irrigation practices like drip irrigation and automated watering systems (Merem et al. 2018). Smart irrigation in agriculture is predicted to play a crucial role in attaining sustainable water management and guaranteeing the resilience of agricultural systems as technology develops. 3.2 Livestock Management and Health Monitoring Livestock management is an important part of contemporary agriculture since it ensures the health and production of livestock animals (Ali and Choi 2020). AIoT technology is helping to improve livestock management and health monitoring. Farmers may monitor their animals’ health, behaviour, and position in real-time by employing wearable sensors and tracking devices, allowing for early diagnosis of health concerns or irregularities (Okonofua et al. 2021). AIoT-enabled monitoring devices give significant data into cattle movement and behaviour, assisting farmers in managing grazing patterns and preventing straying. Behavioral monitoring may detect indicators of discomfort or changes in eating patterns, resulting in better animal welfare (Kochovski and Stankovski 2018). One of the most important advantages of AIoT in livestock management is illness diagnosis and prevention facilitated by AIoT. AIoT devices may notify farmers of any sickness or stress symptoms by monitoring vital signs and physiological factors, limiting disease transmission and significant economic losses (Khan and Ahmad 2022). Furthermore, AIoT-based data analytics may aid in identifying illness patterns and trends, hence contributing to the creation of effective disease preventive programmes. AIoT technology increases animal welfare, productivity, labour costs, resource management efficiency, illness control, and biosecurity. However, there are hurdles to using AIoT in livestock management, such as initial expenses for AIoT devices and infrastructure, dependable connection in remote locations, and data privacy and security issues (Abdullahi et al. 2022). Finally, AIoT technology has revolutionized livestock management and health monitoring in agriculture, allowing farmers to carefully monitor the health and behavior of their animals, resulting in enhanced animal welfare and production. AIoT-enabled early disease detection and prevention improve biosecurity measures and minimize illness-related economic losses (Mishra and Pandya 2021; Shahinzadeh et al. 2019). To ensure the well-being of animals and farmers, the AIoT integration in livestock management will be crucial as technology develops, as illustrated in Fig. 2. Fig. 2 Livestock management and health monitoring (Darem et al. 2022) Full size image 4 AIoT in Food Supply Chain Management The AIoT has changed the logistics and supply chain management industries by enabling real-time monitoring and tracing of items in transit. Sensors and gadgets enabled by the are built into things, containers, and vehicles to track and record data such as location, temperature, and humidity (Praveen et al. 2021). This real-time information allows businesses to streamline their supply chains and reduce wasted time and money. Due to AIoT-enabled smart logistics, companies can improve inventory management, save operating costs, and boost customer satisfaction with on-time, precise delivery (Kamble et al. 2019). Perishable items’ quality and safety, including fresh fruit, medicines, and vaccinations, depend on effective cold chain management and food preservation (Zhong et al. 2015). Cold chain management powered by the helps keep goods fresh and secure across the supply chain, which helps cut down on food waste and boosts food security. Assuring the quality and security of goods via sensors and monitoring is crucial. Sensors enabled by the can check food for pH, moisture, and pollutants to ensure it's safe and up to standards (Nozari et al. 2022; Rehman Khan et al. 2022). The AIoT makes supply chain visibility, transparency, efficiency, cost savings, product quality and safety improvements, sustainability, and environmental impact possible (Ezenwa 2019). Data privacy and security, standardization and interoperability of AIoT systems, and dependable and continuous connection are just a few hurdles that need to be cleared before widespread adoption can occur in supply chain and food management (Bertin et al. 2022). AIoT-enabled smart logistics and supply chain monitoring, cold chain management, and quality and safety assurance are revolutionizing how organizations operate and ensuring that supply chain operations are efficient and sustainable (Zakeri et al. 2022). Companies can improve logistics, protect the freshness of perishable items, and guarantee their products’ safety by using real-time data and insights (Zhong et al. 2015). To keep up with the demands of the current business environment and ensure the delivery of high-quality goods to customers, supply chain management must increasingly use AIoT technologies, as illustrated in Fig. 3. Fig. 3 AIoT in food supply chain management (Zhong et al. 2015) Full size image 5 Challenges and Barriers The technological difficulty of establishing and maintaining AIoT systems is a major obstacle to their widespread use in agriculture. Integrating sensors, devices, and networking technologies may be difficult, particularly for small-scale farmers in rural places with little infrastructure (Lu 2018). AIoT applications demand real-time data transfer, which might be difficult in rural areas. Data security and privacy are crucial as AIoT devices create massive volumes of data. Farmers must secure their crop production, soil health, and market data against unauthorized access and cyberattacks (Abdullahi et al. 2022). Data encryption, access limits, and secure communication protocols protect farmers’ vital data. Small-scale farmers and underdeveloped areas may struggle to use AIoT technology due to their high upfront costs. AIoT devices, sensors, and connection solutions are costly, making it hard for resource-constrained farmers to use them (Zimba 2022). Technical support and maintenance may also strain finances. Lack of awareness and understanding of AIoT, limited access to technical competence, and cultural opposition to new technology may hinder small-scale farmers in developing nations. These areas may additionally struggle to embrace AIoT technologies due to language and digital literacy issues (Al Qartah 2020). 5.1 Solution and Mitigation Technical constraints, data security concerns, financial issues, and acceptance hurdles might prevent the broad adoption of AIoT in agriculture, especially in small farms and developing nations. Stakeholders, including governments, commercial enterprises, and non-profits, must work together to solve these problems (Hammi et al. 2022). By promoting accessible and user-friendly AIoT solutions, guaranteeing data security, giving financial incentives, and helping farmers with capacity development and training, the agricultural industry can maximize AIoT’s potential for sustainable and efficient farming (Ouechtati et al. 2021). Simplified and User-Friendly Solutions: Small-scale farmers may use AIoT solutions that are user-friendly and cost-effective. Plug-and-play AIoT devices and straightforward interfaces may help farmers set up and employ AIoT technology (Jayashankar et al. 2018). Public–Private Partnerships: Government agencies, private firms, and NGOs may work together to deliver AIoT solutions in poor countries. Joint projects may overcome financial and technical constraints and give farmers with training and assistance (Hammi et al. 2022). Data Security: Encryption and authentication help secure farmers’ data from cyberattacks. To protect data privacy, farmers must be educated about data security (Bertin et al. 2022). Subsidies and Incentives: Government subsidies or financial incentives for adopting AIoT technology might encourage small-scale farmers to invest in these solutions. Implementation costs may be reduced via cost-sharing and tax incentives. Training and capacity development may improve farmers’ digital literacy and technical abilities. Extension programmes and training may assist farmers in grasping AIoT devices (Hammi et al. 2022). 6 Policy and Regulatory Considerations Agriculture might become more sustainable, efficient, and productive using AIoT technology. Through different programmes, governments worldwide have supported AIoT adoption. These include financial support, research and development funding, capacity building and training, regulatory frameworks, public–private partnerships, testbeds and demonstration farms, digital infrastructure development, data analytics, and decision support, market linkages and e-commerce platforms, and policy advocacy (Lu 2018). These projects have helped farmers use AIoT to solve agricultural problems, boost production, and adopt sustainable and efficient farming methods. International partnerships and standards are critical to developing and accepting AIoT-based food security solutions since governments, organisations, and stakeholders must work together to solve the agricultural and food sectors’ complex problems (Shahinzadeh et al. 2019). The widespread use of AIoT technology in agriculture has led to sustainable, efficient, and more productive farming. Governments worldwide have been actively pushing and supporting the adoption of AIoT due to its critical importance (Fang et al. 2012). Governments provide financial assistance, grants, and subsidies to encourage farmers and agricultural enterprises to invest in AIoT technology. These rebates reduce the out-of-pocket expense of implementing an AIoT system or device, making them more feasible for farms of all sizes. Government funding for research and development (R&D) programs that provide specialized AIoT solutions for agriculture, such as precision agriculture, remote sensing, and livestock monitoring, has led to the developing cutting-edge tools and methods (Zhang, Li et al. 2022a). Governments host training programs and seminars to improve farmers’ and agricultural employees’ familiarity with digital literacy and technical abilities. They set up legislative frameworks that make it easier for farmers to use AIoT. Governments create standards for AIoT devices and data privacy rules to guarantee the safety of AIoT solutions and protect farmers’ data. They work with businesses, universities, and NGOs to promote the use of AIoT in farming via public–private partnerships, resulting in increased opportunities for information exchange, access to cutting-edge technology, and the creation of industry-specific AIoT solutions (Kazmi and Sodangi 2022). Governments also invest in constructing and updating digital infrastructure, such as high-speed internet access and mobile networks, to guarantee uninterrupted data transfer and communication between farm AIoT devices. They provide data analytics and decision support systems that use information gathered from AIoT devices to advise farmers on improving their operations (Yin et al. 2022). Governments also develop e-commerce platforms that link farmers with customers or purchasers, improving market connections and maintaining produce quality and traceability throughout the supply chain. Governments advocate for policies that encourage the use of AIoT in farming, such as lowering taxes, fostering cross-institutional research partnerships, and lobbying for more lenient rules (Godager et al. 2021). The extensive use of AIoT technology in agriculture can be attributed to various factors, including financial incentives, R&D funding, capacity building, regulatory frameworks, public–private partnerships, and the growth of digital infrastructure (Yang et al. 2021). Sharing knowledge and best practices helps advance AIoT-based food security solutions. International cooperation and standards are essential for food security. Sharing knowledge, harmonizing standards, aggregating data, fostering research and development, aligning policies, pooling resources, and building capacities can help countries and organisations develop cutting-edge technologies and innovative solutions for the global agriculture and food sectors (Kumar et al. 2020). These agreements allow data exchange and aggregation, improving AIoT-based food security solutions. Cross-border research and development projects bring together professionals from various nations to solve food security issues, resulting in cutting-edge technology and novel solutions (Yin et al. 2022). Funding and resource allocation, capacity development and training, scaling up successful projects, and addressing data privacy and security issues are all examples of ways in which policy alignment and collaboration may be fostered. Thus, AIoT-based food security solutions can only be fully realised via international cooperation and standardization. Sharing information, harmonizing standards, gathering data, promoting research and development, aligning policies, pooling resources, and creating skills may help governments and organizations handle global food security issues. These combined efforts will lead to sustainable and resilient food systems for everybody (Chilaka and Chilaka 2019). 7 Case Studies and Real-World Implementations The ability of AIoT solutions to tackle difficult problems and propel good change has been shown by their widespread adoption in some countries. AIoT technology may enhance productivity, sustainability, and resource management, as shown by the featured case studies in precision agriculture, fisheries management, and smart grids. Guidelines for future AIoT implementations may be derived from the lessons gained and best practices in interoperability, data security, user-centric design, and local context concerns (Yin et al. 2022). In order to create a more sustainable and interconnected society, AIoT solutions must continue to develop and cooperate. Many sectors, such as agriculture, healthcare, transportation, and more, have been radically altered by AIoT development. This section looks at real-world deployments of AIoT technologies in various areas to draw up lessons and best practices (Yin et al. 2022). Some globally effective solutions are (Cliff et al. 2023; Godager et al. 2021). Accurate farming methods in the USA: Precision farming has become more popular in the United States. Farmers use the devices like soil sensors, weather stations, and drones to monitor their crops and ensure everything is running well. Farmers may improve their irrigation, fertilization, and pest management methods with real-time data from these sensors. Sustainable agriculture has benefited from increased agricultural yields and more effective use of available resources. Norwegian Smart Fishery Management: Norway has introduced -based solutions to encourage responsible fishing practices in its fisheries sector. AIoT technologies like GPS trackers and sensors are installed aboard fishing boats to keep tabs on catch rates, fish stocks, and environmental factors. By using this information, authorities can better enforce fishing limits, curb overfishing, and safeguard marine ecosystems, assuring the fishing industry's continued success. South Korean smart grids: South Korea's energy industry has made great efforts towards implementing technology. (AIoT) sensors are used in smart grids for real-time monitoring of energy usage, distribution optimisation, and problem detection. Improved grid efficiency in South Korea has resulted in lower energy costs and greater sustainability through lowering energy waste and increasing energy dependability. 7.1 Best Practices and Real-World Lessons The practices and real-world lessons include (Janabi and Kurnaz 2023): Standardisation and Compatibility: Successful systems need standardized communication protocols and the ability to easily integrate new hardware and software. The easy sharing of data and compatibility across various AIoT components are made possible by establishing interoperability. Data Privacy and Protection: Sensitive data must be collected and sent securely in AIoT implementations. To defend against cyber risks and preserve user privacy, implementers should prioritize data encryption, user authentication, and data access restrictions. User-centered design: Users are the focus of good design. To increase user adoption and engagement, it is important to provide user-friendly interfaces, clear representations, and intuitive functionality. Flexibility and scalability: The data volume and the number of connected devices are expected to grow over time. Therefore, AIoT implementations must be flexible. As a result of its adaptability, new technologies, and future growth may be easily included. Consideration of the Local Context: Successful installations need adjustments for each unique situation. To provide successful solutions, it is essential to appreciate various geographical areas’ specific difficulties, cultural subtleties, and infrastructural limitations. Coordination and Cooperation: Governments, businesses, universities, and communities all have a stake in a successful rollout of the Partners may pool their knowledge, skills, and resources through collaboration to create long-lasting improvements. Control and Assessment: To determine how successful an AIoT solution is and where it may be enhanced, constant monitoring and assessment are required. Insights derived from data analysis support continual optimization and enable evidence-based decision-making. Instruction and Capacity Development: The knowledge and proficiency of end-users and implementers of AIoT technologies may be improved via training and capacity-building programs. Building people's abilities is crucial to ensuring that the solutions have the desired effect. 8 Future Trends and Innovations The AIoT has advanced swiftly and is continuing to drive innovation. In the not-too-distant future, AIoT technologies will merge with AI and machine learning, resulting in unheard-of levels of efficiency and automation. The introduction of 5G technology and the development of edge computing will also usher in a new era of AIoT applications, particularly in the agricultural industry (Saad et al. 2023). Improvements in artificial intelligence, machine learning, 5G, and edge computing point to a bright future for AIoT in agriculture by fueling substantial gains in efficiency, sustainability, and production. 5G and edge computing will improve connection and data processing, and combining AI and machine learning with AIoT will allow for predictive analytics and autonomous systems. Precision farming, smart irrigation, remote monitoring, and evidence-based decision-making are just some ways the AIoT will revolutionise agriculture and strengthen the foundations of sustainable agriculture worldwide (Seyyedabbasi et al. 2023). The potential for innovation and beneficial influence on the agricultural business is limitless as these technologies continue to advance. The potential impact of 5G and edge computing on AIoT applications in agriculture and future trends and breakthroughs in AIoT are discussed. 8.1 Future Trends and Innovations in AIoT Increasing connectivity among AIoT devices will provide simple two-way communication and data sharing. Because of this enhanced connectedness, data analysis and decision-making will become more holistic and integrated. Artificial intelligence (AI) and machine learning (ML) algorithms will be included into AIoT devices, allowing them to analyse and anticipate trends and patterns in real-time data (Garg and Goyal 2020). As a result of this capacity, procedures and resource allocation may be optimised for greater efficacy. With edge computing, processing may be done closer to the data source, which speeds up processing and decreases latency. Edge intelligence-equipped AIoT devices will be able to do sophisticated tasks locally, cutting down on demand for cloud computing. The AIoT, AI, and ML will merge to generate fully autonomous systems. As a result, production will rise, human errors will decrease, and efficiency will improve. AIoT will revolutionize urban planning and infrastructure management, leading to the construction of smart cities with linked transportation, electricity, waste management, and more systems (Mousavi et al. 2021). 8.2 Integration of AIoT, AI, and Machine Learning AI and ML algorithms will analyze massive volumes of data the AIoT creates. This will allow for enhanced knowledge of agricultural procedures and more efficient use of available resources (Olan et al. 2022). Precision agriculture will become a reality in which farmers administer inputs like water and fertiliser with pinpoint accuracy using real-time data and analysis made possible by AI-driven AIoT apps. By taking this course of action, both yields and environmental impact may be improved. With AI, devices can anticipate when agricultural machinery and equipment need repair (Olan et al. 2022; Pan and Zhang 2021). 8.3 The Possible Effect of 5G and Edge Computing on Applications in Farming With the increased bandwidth and decreased latency that 5G networks provide, the AIoT can communicate with one another in near real-time. With the help of 5G and edge computing, farmers can keep an eye on their crops and animals without leaving their homes (Rathod et al. 2023). Data-intensive AIoT applications, such as high-resolution image and video analytics, will be supported by 5G’s fast data rates and the processing capabilities of edge computing, enhancing agricultural monitoring and analysis. AIoT-enabled irrigation systems with 5G connection and edge computing can optimize water consumption and save waste by adjusting the amount of water supplied depending on real-time data, soil moisture levels, and weather predictions (Varsha et al. 2021). 9 Conclusion This chapter examines the potential to revolutionize agricultural practices via data-driven decision-making and precision agriculture on the path to sustainable agriculture and food security. Agricultural output, resource effectiveness, and supply chain management benefit greatly from AIoT-enabled systems. AIoT improves agricultural operations by helping farmers and stakeholders make better choices based on real-time data and analytics. Due to the AIoT, farmers can track and manage their crops with pinpoint accuracy, improving efficiency, lessening environmental damage, and boosting agricultural yields. By allowing farmers to adjust water distribution in response to current weather and crop circumstances, smart irrigation systems improve water efficiency while decreasing water waste. Better illness diagnosis, health assessment, and livestock management contribute to happier, healthier animals. A well-oiled supply chain guarantees that food is safe to eat, cuts down on post-harvest losses, and speeds up the delivery of crops to consumers. AIoT plays a crucial role in developing sustainable agriculture and attaining global food security by using real-time data and analytics and closing the information gap between farmers, agribusinesses, and consumers. With the ongoing development of AIoT, AI, and 5G technologies, the future of AIoT in agriculture seems bright. Data security, privacy issues, high implementation costs, and accessibility for small-scale farmers in underdeveloped countries are only some of the obstacles that must be overcome. Understanding AIoT's societal and economic effects on agriculture requires a study conducted by agronomists, environmentalists, and social scientists. Investing in AIoT-related research and development may lead to a future where agriculture is more sustainable, productive, and ecologically aware. References Abdullahi M, Baashar Y, Alhussian H, Alwadain A, Aziz N, Capretz LF, Abdulkadir SJ (2022) Detecting cybersecurity attacks in internet of things using artificial intelligence methods: a systematic literature review. Electronics (Switzerland) 11(2):1–27. https://doi.org/10.3390/electronics11020198 Article   Google Scholar   Abubakar IR (2021) Predictors of inequalities in land ownership among Nigerian households: Implications for sustainable development. Land Use Policy 101(January). https://doi.org/10.1016/j.landusepol.2020.105194 Al-otaibi SZ (2022) Data security challenges with its defence strategies of internet of things: critical review study. Commun Math Appl 13(1):401–415. https://doi.org/10.26713/cma.v13i1.1980 Ali SS, Choi BJ (2020) State-of-the-art artificial intelligence techniques for distributed smart grids: A review. Electronics (Switzerland) 9(6):1–28. https://doi.org/10.3390/electronics9061030 Article   Google Scholar   Ambayea TG, Chebbi A, Formicola F, Prasad S, Gomez FH, Franzetti A (2022) Remediation of soil polluted with petroleum hydrocarbons and its reuse for agriculture: recent progress, challenges, and perspectives. Chemosphere 293(January):133572. https://doi.org/10.1016/j.chemosphere.2022.133572 Arubayi DO (2023) Workplace toxicity and employee performance of manufacturing firms: evidence from Nigeria. Int J Manag Entrep Research 5(2):143–157. https://doi.org/10.51594/ijmer.v5i2.447 Awofeso O, Odeyemi TI (2021) The impact of political leadership and corruption on Nigeria’s development since independence. J Sustain Dev 7(5):240–253. https://doi.org/10.5539/jsd.v7n5p240 Article   Google Scholar   Al Qartah A (2020) Evolving ransomware attacks on healthcare providers. In: ICASSP, IEEE international conference on acoustics, speech and signal processing—Proceedings 1(August):12–24. https://doi.org/10.13140/RG.2.2.23202.45765 Bertin J, Penka N, Debauche O (2022) An optimized kappa architecture for IoT data management in smart farming. J Ubiquit Syst Pervasive Netw 17(2):59–65. https://doi.org/10.5383/juspn.17.02.002 Article   Google Scholar   Chilaka EM, Chilaka E (2019) Impact of the apapa traffic gridlock on global maritime trade and nigeria’s economy: the case for renewal of an old african port city. JORIND 17(1):1–15. www.transcampus.org/journal Cliff O, Gutierrez U, Xu G (2023) Applied sciences blockchain and smart contracts to secure property transactions in smart cities Google Scholar   Cudjoe GP, Antwi-Agyei P, Gyampoh BA (2021) The effect of climate variability on maize production in the Ejura-Sekyedumase municipality, Ghana. Climate 9(10). https://doi.org/10.3390/cli9100145 Darem A, Alhashmi AA, Jemal HA (2022). Cybersecurity threats and countermeasures of the smart home ecosystem. IJCSNS Int J Comput Sci Netw Secur 22(3):303. https://doi.org/10.22937/IJCSNS.2022.22.3.39 Dibia NO, Nwaigwe NG (2017) Corporate sustainability reporting and firm profitability: a survey of selected quoted companies in Nigeria. J Finance, Bank Investment 4(2):136–147. http://absudbfjournals.com/wp-content/uploads/2018/04/13.-Corporate-Sustainability-Reporting-and-Firm-Profitability.pdf Erin OA, Bamigboye OA (2022) Evaluation and analysis of SDG reporting: evidence from Africa. J Account Organ Chang 18(3):369–396. https://doi.org/10.1108/JAOC-02-2020-0025 Article   Google Scholar   Eze KG, Akujuobi CM, Hunter S, Alam S, Musa S, Foreman J (2022) A blockchain-based security architecture for the internet of things. WSEAS Trans Inf Sci Appl 19(5):12–22. https://doi.org/10.37394/23209.2022.19.2 Ezenwa AE (2019) Smart logistics diffusion strategies amongst supply chain networks in emerging markets: a case of Nigeria’s micro/SMEs 3PLs. December. https://etheses.whiterose.ac.uk/26880/1/Ezenwa_A.E_Transport_PhD_2019_PDF.pdf Fang Z, Wei L, Chen W, He Y (2012) A RFID-based kindergarten intelligence security system. In: Proceedings—9th IEEE international conference on e-business engineering, ICEBE 2012 (pp. 321–326). https://doi.org/10.1109/ICEBE.2012.59 Farooq U, Tariq N, Asim M, Baker T, Al-Shamma’a A (2022) Machine learning and the internet of things security: solutions and open challenges. J Parallel Distrib Comput 162(1):89–104. https://doi.org/10.1016/j.jpdc.2022.01.015 Garg H, Goyal A (2020) Techniques of fake news detection. IJCMES 6(2):6–9. https://doi.org/10.22161/ijcmes.622 Giuffrida N, Fajardo-Calderin J, Masegosa AD, Werner F, Steudter M, Pilla F (2022) Optimization and machine learning applied to last-mile logistics: a review. Sustainability (Switzerland) 14(9). https://doi.org/10.3390/su14095329 Godager B, Onstein E, Huang L (2021) The concept of enterprise BIM: current research practice and future trends. IEEE Access 9(3):42265–42290. https://doi.org/10.1109/ACCESS.2021.3065116 Article   Google Scholar   Nwankwoala HO, Okujagu DC (2021) A review of wetlands and coastal resources of the Niger Delta: potentials, challenges and prospects. Environ Ecosyst Sci 5(1):37–46. https://doi.org/10.26480/ees.01.2021.37.46 Hammi B, Zeadally S, Khatoun R, Nebhen J (2022) Survey on smart homes: vulnerabilities, risks, and countermeasures. Comput Secur 117:1–24. https://doi.org/10.1016/j.cose.2022.102677 Article   Google Scholar   Herzberg R, Schmidt T, Keck M (2022) Market power and food loss at the producer-retailer interface of fruit and vegetable supply chains in Germany. Sustain Sci 17(6):2253–2267. https://doi.org/10.1007/s11625-021-01083-x Article   Google Scholar   Janabi SMA, Kurnaz S (2023) A new localization mechanism in IoT using grasshopper optimization algorithm and DVHOP algorithm. Wireless Netw. https://doi.org/10.1007/s11276-023-03247-2 Article   Google Scholar   Jayashankar P, Nilakanta S, Johnston WJ, Gill P, Burres R (2018) IoT adoption in agriculture: the role of trust, perceived value and risk. J Bus Ind Mark 33(6):804–821. https://doi.org/10.1108/JBIM-01-2018-0023 Article   Google Scholar   Kalu C, Onuigbo F, Imoagwu C, Njemanze C (2021) Infrastructure in the context of economic growth and development in Nigeria: implications for the Sustainable Development Goals (SDGs). J Int Econ Relat Dev Econ 1(1):59–73. https://www.theinterscholar.org/journals/index.php/jierade/article/view/165 Kamble SS, Gunasekaran A, Parekh H, Joshi S (2019) Modeling the internet of things adoption barriers in food retail supply chains. J Retail Consum Serv 48(December 2018):154–168. https://doi.org/10.1016/j.jretconser.2019.02.020 Kazmi ZA, Sodangi M (2022) Modeling the constraints to the utilization of the Internet of Things in managing supply chains of off-site construction: an approach toward sustainable construction. Buildings 12(3). https://doi.org/10.3390/buildings12030388 Keesstra SD, Bouma J, Wallinga J, Tittonell P, Smith P, Cerdà A, Montanarella L, Quinton JN, Pachepsky Y, Van Der Putten WH, Bardgett RD, Moolenaar S, Mol G, Jansen B, Fresco LO (2016) The significance of soils and soil science towards realization of the United Nations sustainable development goals. Soil 2(2):111–128. https://doi.org/10.5194/soil-2-111-2016 Article   Google Scholar   Kemmoe VY, Kwon Y, Hussain R, Cho S, Son J (2022) Leveraging smart contracts for secure and asynchronous group key exchange without trusted third party. IEEE Trans Dependable Secure Comput 20(4):1–18. https://doi.org/10.1109/TDSC.2022.3189977 Khan AUR, Ahmad RW (2022) A blockchain-based IoT-enabled e-waste tracking and tracing system for smart cities. IEEE Access 10(July):86256–86269. https://doi.org/10.1109/ACCESS.2022.3198973 Article   Google Scholar   Khan SAR, Piprani AZ, Yu Z (2022) Digital technology and circular economy practices: future of supply chains. Oper Manag Res. https://doi.org/10.1007/s12063-021-00247-3 Khanna V (2018) Effect of maize production in a changing climate: its impacts, adaptation, and mitigation strategies through breeding. Open Access J Oncol Med 2(4):186–191. https://doi.org/10.32474/oajom.2018.02.000142 Kochovski P, Stankovski V (2018) Supporting smart construction with dependable edge computing infrastructures and applications. Autom Constr 85(6):182–192. https://doi.org/10.1016/j.autcon.2017.10.008 Article   Google Scholar   Kumar NM, Chand AA, Malvoni M, Prasad KA, Mamun KA, Islam FR, Chopra SS (2020) Distributed energy resources and the application of AI, IoT, and blockchain in smart grids. Energies 13(21). https://doi.org/10.3390/en13215739 Lu Y (2018) Blockchain and the related issues: a review of current research topics. J Manag Analytics 5(4):231–255. https://doi.org/10.1080/23270012.2018.1516523 Article   Google Scholar   Merem EC, Twumasi Y, Wesley J, Isokpehi P, Fageir S, Crisler M, Romorno C, Hines A, Ochai GS, Leggett S, Nwagboso E (2018) Analyzing emerging environmental issues in major areas: the case of Lagos in South West Nigeria. Archit Res 8(1):19–38. https://doi.org/10.5923/j.arch.20180801.03 Article   Google Scholar   Mishra N, Pandya S (2021) Internet of Things applications, security challenges, attacks, intrusion detection, and future visions: a systematic review. IEEE Access 9:59353–59377. https://doi.org/10.1109/ACCESS.2021.3073408 Article   Google Scholar   Mousavi SM, Abdullah S, Niaki STA, Banihashemi S (2021) An intelligent hybrid classification algorithm integrating fuzzy rule-based extraction and harmony search optimization: medical diagnosis applications. Knowl-Based Syst 220:106943. https://doi.org/10.1016/j.knosys.2021.106943 Article   Google Scholar   Nathan E, Joel Uche W (2023) Impact of Violent conflict on household income in rivers state, Nigeria. J Econ Finance Manag Stud 6(3):1026–1035. https://doi.org/10.47191/jefms/v6-i3-01 Neupane D, Adhikari P, Bhattarai D, Rana B, Ahmed Z, Sharma U, Adhikari D (2022) Does climate change affect the yield of the top three cereals and food security in the world? Earth 3(1):45–71. https://doi.org/10.3390/earth3010004 Article   Google Scholar   Ning HS, Liu H (2015) Cyber-physical-social-thinking space based science and technology framework for the Internet of Things. Sci China Inf Sci 58(3):1–19. https://doi.org/10.1007/s11432-014-5209-2 Article   Google Scholar   Norton LR (2016) Is it time for a socio-ecological revolution in agriculture? Agr Ecosyst Environ 235:13–16. https://doi.org/10.1016/j.agee.2016.10.007 Article   Google Scholar   Nozari H, Szmelter-Jarosz A, Ghahremani-Nahr J (2022) Analysis of the challenges of artificial intelligence of things (AIoT) for the smart supply chain (case study: FMCG industries). Sensors 22(8):2931 Google Scholar   Oberlack C, Giger M, Anseeuw W, Adelle C, Bourblanc M, Burnod P, Eckert S, Fitawek W, Fouilleux E, Hendriks SL, Kiteme B, Masola L, Mawoko ZD, Mercandalli S, Reys A, Da Silva M, Van Der Laan M, Zaehringer JG, Messerli P (2021) Why do large-scale agricultural investments induce different socio-economic, food security, and environmental impacts? Evidence from Kenya, Madagascar, and Mozambique. Ecol Soc 26(4). https://doi.org/10.5751/ES-12653-260418 Okonofua ES, Atikpo E, Lasisi KH, Ajibade FO, Idowu TE (2021) Effect of crude oil exploration and exploitation activities on soil, water and air in a Nigerian community. Environ Technol (United Kingdom). https://doi.org/10.1080/09593330.2021.1992508 Article   Google Scholar   Olan F, Liu S, Suklan J, Jayawickrama U, Arakpogun EO (2022) The role of Artificial Intelligence networks in sustainable supply chain finance for food and drink industry. Int J Prod Res 60(14):4418–4433. https://doi.org/10.1080/00207543.2021.1915510 Article   Google Scholar   Oseni TO, Masarirambi MT (2011) Effect of climate change on maize (Zea mays) production and food security in Swaziland. American-Eurasian J Agric Environ Sci 11(3):385–391 Google Scholar   Ouechtati H, Nadia BA, Lamjed BS (2021) A fuzzy logic-based model for filtering dishonest recommendations in the Social Internet of Things. J Ambient Intell Humaniz Comput. https://doi.org/10.1007/s12652-021-03127-7 Pan Y, Zhang L (2021) Roles of artificial intelligence in construction engineering and management: a critical review and future trends. Autom Constr 122(August 2020):103517. https://doi.org/10.1016/j.autcon.2020.103517 Praveen P, Shaik MA, Kumar TS, Choudhury T (2021) Smart farming: securing farmers using block chain technology and IOT. In: EAI/Springer innovations in communication and computing (pp. 225–238). https://doi.org/10.1007/978-3-030-65691-1_15 Raghuvanshi A, Singh UK, Sajja GS, Pallathadka H, Asenso E, Kamal M, Singh A, Phasinam K (2022) Intrusion detection using machine learning for risk mitigation in IoT-enabled smart irrigation in smart farming. J Food Qual. https://doi.org/10.1155/2022/3955514 Rathod T, Jadav NK, Tanwar S, Sharma R, Tolba A, Raboaca MS, Marina V, Said W (2023) Blockchain-driven intelligent scheme for IoT-based public safety system beyond 5G networks. Sensors 23(2):1–26. https://doi.org/10.3390/s23020969 Article   Google Scholar   Rehman Khan SA, Yu Z, Sarwat S, Godil DI, Amin S, Shujaat S (2022) The role of block chain technology in circular economy practices to improve organisational performance. Int J Log Res Appl 25(4–5):605–622. https://doi.org/10.1080/13675567.2021.1872512 Article   Google Scholar   Saad M, Ahmad MB, Asif M, Khan MK, Mahmood T, Mahmood MT (2023) Blockchain-enabled VANET for smart solid waste management. IEEE Access 11(November 2022):5679–5700. https://doi.org/10.1109/ACCESS.2023.3235017 Seyyedabbasi A, Kiani F, Allahviranloo T (2023) Optimal data transmission and pathfinding for WSN and decentralized IoT systems using I-GWO and Ex-GWO algorithms. Alex Eng J 63:339–357. https://doi.org/10.1016/j.aej.2022.08.009 Article   Google Scholar   Shahinzadeh H, Moradi J, Gharehpetian GB, Nafisi H, Abedi M (2019) Internet of Energy (IoE) in smart power systems. In: 2019 IEEE 5th Conference on knowledge based engineering and innovation, KBEI 2019 2(2):627–636. https://doi.org/10.1109/KBEI.2019.8735086 Sohel M, Sohel M, Shah T (2022) A comprehensive study on securities and threats in the Internet of Things (IoT). IoT 3(2):1–20 Google Scholar   Varsha PS, Akter S, Kumar A, Gochhait S, Patagundi B (2021) The impact of artificial intelligence on branding: a bibliometric analysis (1982–2019). J Glob Inf Manag 29(4):221–246. https://doi.org/10.4018/JGIM.20210701.oa10 Article   Google Scholar   Voora V, Larrea C, Huppé G, Nugnes F (2022) Standards and investments in sustainable agriculture. Google Scholar   Yang A, Han M, Zeng Q, Sun Y (2021) Adopting building information modeling (bim) for the development of smart buildings: a review of enabling applications and challenges. Adv Civ Eng 20(21):1–26. https://doi.org/10.1155/2021/8811476 Article   Google Scholar   Yin C, Pereira P, Hua T, Liu Y, Zhu J, Zhao W (2022) Recover the food-energy-water nexus from COVID-19 under sustainable development goals acceleration actions. Sci Total Environ 817(January):153013. https://doi.org/10.1016/j.scitotenv.2022.153013 Article   Google Scholar   Yoon J (2020) Deep-learning approach to attack handling of IoT devices using IoT-enabled network services. Internet of Things (Netherlands) 11:100241. https://doi.org/10.1016/j.iot.2020.100241 Article   Google Scholar   Zakeri B, Paulavets K, Barreto-Gomez L, Echeverri LG, Pachauri S, Boza-Kiss B, Zimm C, Rogelj J, Creutzig F, Ürge-Vorsatz D, Victor DG, Bazilian MD, Fritz S, Gielen D, McCollum DL, Srivastava L, Hunt JD, Pouya S (2022) Pandemic, war, and global energy transitions. Energies 15(17):1–23. https://doi.org/10.3390/en15176114 Article   Google Scholar   Zhang L, Li Y, Jin T, Wang W, Jin Z, Zhao C, Cai Z, Chen H (2022) SPCBIG-EC: a robust serial hybrid model for smart contract vulnerability detection. Sensors (Basel, Switzerland) 22(12). https://doi.org/10.3390/s22124621 Zhang L, Xu M, Chen H, Li Y, Chen S (2022b) Globalization, green economy and environmental challenges: state of the art review for practical implications. Front Environ Sci 10(March):1–9. https://doi.org/10.3389/fenvs.2022.870271 Article   Google Scholar   Zhao Y, Cao C, Liu Z (2022) A framework for prefabricated component hoisting management systems based on digital twin technology. Buildings 12(3). https://doi.org/10.3390/buildings12030276 Zhong RY, Peng Y, Fang J, Xu G, Xue F, Zou W, Huang GQ (2015) Towards Physical Internet-enabled prefabricated housing construction in Hong Kong. IFAC-PapersOnLine 28(3):1079–1086. https://doi.org/10.1016/j.ifacol.2015.06.227 Article   Google Scholar   Zimba A (2022) A Bayesian attack-network modeling approach to mitigating malware-based banking cyberattacks. Int J Comput Netw Inf Secur 14(1):25–39. https://doi.org/10.5815/ijcnis.2022.01.03 Article   Google Scholar   Download references Author information Authors and Affiliations Department of Computer Science, Federal College of Education, Zaria, Nigeria Fadele Ayotunde Alaba Department of Computer Science, University of Jos, Jos, Nigeria Abayomi Jegede Rector’s Office, Federal Polytechnic Bauchi, Bauchi, Bauchi State, Nigeria Usman Sani Department of Mathematical Sciences, University of Maiduguri, Borno State, P.M.B 1069, Maiduguri, Nigeria Emmanuel Gbenga Dada Corresponding author Correspondence to Fadele Ayotunde Alaba . Editor information Editors and Affiliations Department of Applied Data Science, Institute for Energy Technology, Halden, Norway Sanjay Misra Department of Production - Industrial Management, University of Vaasa, Vaasa, Finland Kerstin Siakas Department of Applied Informatics, University of Macedonia, Thessaloniki, Greece Georgios Lampropoulos Rights and permissions Reprints and permissions Copyright information © 2024 The Author(s), under exclusive license to Springer Nature Switzerland AG About this chapter Cite this chapter Alaba, F.A., Jegede, A., Sani, U., Dada, E.G. (2024). Artificial Intelligence of Things (AIoT) Solutions for Sustainable Agriculture and Food Security. In: Misra, S., Siakas, K., Lampropoulos, G. (eds) Artificial Intelligence of Things for Achieving Sustainable Development Goals. Lecture Notes on Data Engineering and Communications Technologies, vol 192. Springer, Cham. https://doi.org/10.1007/978-3-031-53433-1_7 Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-53433-1_7 Published 09 March 2024 Publisher Name Springer, Cham Print ISBN 978-3-031-53432-4 Online ISBN 978-3-031-53433-1 eBook Packages Intelligent Technologies and Robotics Intelligent Technologies and Robotics (R0) Share this chapter Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Publish with us Policies and ethics Sections Figures References Abstract Introduction Literature Review AIoT Applications in Sustainable Agriculture AIoT in Food Supply Chain Management Challenges and Barriers Policy and Regulatory Considerations Case Studies and Real-World Implementations Future Trends and Innovations Conclusion References Author information Editor information Rights and permissions Copyright information About this chapter Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 2:
- APA Citation: Muraleedharan Jalajamony, H., Nair, M., Mead, P. F., & Fernandez, R. E. (2023). Drone Aided Thermal Mapping for Selective Irrigation of Localized Dry Spots. IEEE Access, 11, 7320-7335. 
https://doi.org/10.1109/ACCESS.2023.3237546
  Main Objective: To develop a smart irrigation system that uses drones equipped with thermal cameras to identify dry spots in agricultural fields and selectively irrigate them using smart sprinklers controlled by a terrestrial edge unit.
  Study Location: Unspecified
  Data Sources: Thermal images captured by drones, GPS data, weather data, soil moisture data
  Technologies Used: Edge computing, machine learning, thermal imaging, LoRa WAN communication
  Key Findings: - The proposed system can accurately identify dry spots in agricultural fields using thermal imaging.
- The system can generate irrigation patterns based on real-time data using machine learning algorithms.
- The system can selectively irrigate dry spots using smart sprinklers controlled by a terrestrial edge unit.
- The system can significantly reduce water usage compared to traditional irrigation methods.
  Extract 1: The proposed irrigation system uses a quadcopter drone equipped with a Thermal Infrared (TIR) camera and a GPS module to generate georeferenced thermal images that indicate the area and location of the dry spots in a survey area.
  Extract 2: The terrestrial edge station uses a raspberry pi 4-8GB to calculate the sprinkler control parameters (SCP) and to generate an irrigation pattern which is transmitted to the smart sprinklers through the LoRa WAN communication.
  Limitations: None
  Relevance Evaluation: The paper is highly relevant to the point being made in the literature review, as it presents a novel and practical solution for reducing computational complexity and latency in real-time generation and automated application of actionable irrigation insights. The proposed system leverages edge computing and machine learning to achieve efficient and precise irrigation, thereby addressing the water scarcity and resource optimization challenges highlighted in the review. Its focus on optimizing irrigation based on real-time data aligns well with the broader context of research on automated systems for real-time irrigation management.
  Relevance Score: 1.0
  Inline Citation: (Muraleedharan Jalajamony et al., 2023)
  Explanation: The paper presents a smart irrigation system using drones equipped with thermal cameras to identify dry spots in agricultural fields. These dry spots are then selectively irrigated by smart sprinklers controlled by a terrestrial edge unit. The system relies on edge computing for real-time analysis of thermal images and machine learning to generate irrigation patterns. The paper discusses various aspects of the system, including image processing, communication, and machine learning algorithms, and evaluates its performance in terms of accuracy and efficiency. Its main objective is to address the challenge of efficient water management in agriculture by optimizing irrigation based on real-time data.

 Full Text: >
"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 11 Drone Aided Thermal Mapping for Selective Irrigation of Localized Dry Spots Publisher: IEEE Cite This PDF Harikrishnan Muraleedharan Jalajamony; Midhun Nair; Patricia F. Mead; Renny Edwin Fernandez All Authors 1 Cites in Paper 1856 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document Sections I. Introduction II. Materials and Methods III. Results IV. Conclusion Authors Figures References Citations Keywords Metrics Abstract: We report a smart irrigation system that allows selective irrigation of localized dry spots in an agricultural field. The proposed irrigation system uses a quadcopter drone equipped with a Thermal Infrared (TIR) camera and a GPS module to generate georeferenced thermal images that indicate the area and location of the dry spots in a survey area. Drones navigate and acquire aerial thermal images, which are then processed by an onboard edge intelligence module along with flight data (GPS coordinates, altitude, and drone direction). Smart sprinklers deployed on the field are able to wirelessly receive the coordinates of dry spots so they can be irrigated selectively. A terrestrial edge unit generates an irrigation pattern for the smart sprinklers using a pre-trained machine learning (ML) model to generate an irrigation pattern by varying the head rotation angle ( θ ) and the water flow control valve rotation angle( ∅ ) of the smart sprinkler. 0 seconds of 0 seconds  System representation based on each level management. Published in: IEEE Access ( Volume: 11) Page(s): 7320 - 7335 Date of Publication: 16 January 2023 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2023.3237546 Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles and stipulations in the API documentation. SECTION I. Introduction The agricultural sector consumes more than 70% of freshwater [1]. While irrigating the crops, underwatering and overwatering are one of the pressing issues [2]. Overwatering causes the reduction of overall freshwater and causes the damage of crop roots, soil runoff, mineral runoff, and algal bloom to nearby freshwater sources [3], [4]. Precise and accurate irrigation is the smart way to avoid all these problems. Although IoT-based smart sprinklers have been developed in irrigation [5], [6], [7]. When used over a large area of farmland, however, the significant setup costs, additional recalibrating time, and additional issues make this strategy inefficient [7]. Unmanned aerial vehicles (UAV) have become a popular and affordable technology in recent years for capturing high-resolution remote sensing images for various precision agriculture applications. Drones have been used in agriculture for decades to spray pesticides, seeding, plant health monitoring, crop management [8], [9], [10], [11], [12] and production cost management [13], [14]. Drone imaging is combined with artificial intelligence for better accuracy [15]. Contactless Thermal Infrared imagery is an effective way to characterize the temperature variations of agricultural fields. TIR imaging has been used to find the kangaroos in Australia [16] and spider monkeys in Mexico [17]. Using TIR images, nesting bird habitats have been identified [18]. TIR images are used to evaluate forest ecosystems [19], archaeological sites [20], [21], [22] and Photovoltaic installations [23]. UAV-based TIR imaging technology is also used to detect compost pile conditions [24], peat fire detection [25], find mesocarnivores animals in farmland [26], search and rescue missions [27] and so on. Overwatering and crop irrigation issues can be solved more effectively with the help of a drone equipped with a thermal infrared camera. We used UAV based imaging to generate the thermal map of an area within minutes which in turn was used to control smart water sprinklers. A machine learning model trained using the image processing of TIR images, flight data, primary agricultural data, and methodological parameters such as geological location, soil moisture absorption, wind, and weather data can be used to predict the moisture content of each spot and choose appropriate sprinkler parameters. The nearby sprinkles can irrigate that dry area based on the ML decision generated and transmitted by the terrestrial edge station. Shorter running times and less water consumption are the results of carefully managed irrigation systems [16]. Irrigating in a circular pattern can be enabled by sprinklers with revolving nozzles [28]. Several smart irrigation models have been developed based on thermal imaging [29]. The entire farm area can be divided into small sectors. We adopted the sector division techniques of cellular communication, which divide a large segment into smaller circular segments [30], [31]. The smart sprinklers are placed at the center of each sector, which can hydrate a radius of 10–20 m. However, circular sections can create considerable overlaps. Hence, we approximated each sector as a hexagon, which has an equivalent area of 82% of a circular area, resulting in less overlapping of the irrigated land. The TIR and RGB images taken by the drone are processed using an onboard edge intelligence. The images processed using the onboard drone edge AI are converted into georeferenced data, which is then sent to the terrestrial edge unit using LoRa WAN communication. The terrestrial edge station generates the irrigation pattern using a trained machine learning model. This decision and irrigation pattern are transmitted to the smart sprinklers through LoRa WAN communication. Wi-Fi, ZigBee, NRF24L01 RF communication-based smart sprinklers are commonly used in short to midrange IoT smart irrigation [32], [33], [34], [35], [36], [37]. These cost-effective communication methods work well with a mid-range distance, around 100 meters, without an external antenna [38], [39], [40]. These communication methods can be upgraded with a dedicated antenna to achieve a distance of a few hundred meters. The LoRa WAN communication is suited for a large area because of its broad coverage of a few kilometers without secondary repeaters, reducing communication complexity and an initial setup cost [40], [41], [42]. Smart sprinkles can be powered by a solar panel that completely avoids batteries. Solar pumping without batteries has shown success in good sunlight [43], [44] Even while cloud computing has a great degree of scalability and is inexpensive, it has a significant latency and puts a lot of strain on the network’s bandwidth. For making the proposed system to be efficient and reliable, latency should be as low as possible. Edge computation is integrated into the system [45], [46], [47]. Edge computing, as defined by the Edge Computing Consortium (ECC), is a distributed open platform that integrates network, storage, and application capabilities at the network edge, near the objects or data sources [48]. Data processing under this computing paradigm does not need to send information to the cloud or other distant centralized or distributed systems. Edge intelligence is the next evolution of edge computing and artificial intelligence (AI). It intends to empower the edge by utilizing AI technologies [49]. Typical edge computing systems feature graphics units and CPUs to efficiently handle the trained ML model inside the standalone computational device. The clustering of computing resources in the edge system enables parallel processing of the overall task, which reduces latency and enables handling of complex tasks like image processing, machine learning, and deep learning within the cluster itself [50]. A. Proposed Drone-Aided Edge Computing Architecture The drone-aided smart irrigation system, shown in Figure 1, is designed to accurately irrigate a farm area and lessen excessive freshwater use. The entire system consists of two subunits: aerial and terrestrial. The aerial unit has an autonomous drone in which the aerial edge computing station captures and processes thermal images and transfers the decision to the terrestrial sector through LoRa WAN communication. Terrestrial edge station, smart sprinklers, hydration pumps, and drone takeoff pads are in the terrestrial unit. FIGURE 1. System representation based on each level management. Show All The terrestrial edge can generate an irrigation pattern based on the georeferenced data from the drone. The machine learning (ML) model at the terrestrial edge server can generate an irrigation pattern and set the sprinkler parameters such as flow rate and flow direction in order to irrigate localized dry spots. By relying on a low-cost, low-resolution Thermal Infrared (TIR) camera, the captured images are preprocessed and georeferenced before sending them to the terrestrial edge station for identifying the most effective irrigation pattern—allowing network, memory, and computing resources to be saved. We built a custom quadcopter drone for aerial remote sensing. The custom-made drone is equipped with a raspberry pi 4 for image capturing and processing. An RGB camera (pi camera) and a TIR camera (FLIR) are used to collect the RGB and TIR spectral images of the ground to identify the localized dry spots. We used the open-source software Mission planner from Ardupilot to define the flight path. The area of surveillance can be selected using the software (Figure 1). The image capturing and processing are done using python programming on the onboard aerial edge station. This data is further transmitted to the terrestrial edge station for predicting and calculating the irrigation pattern using a trained machine learning model. Once all the necessary inputs (GPS Coordinates, Altitude, Speed of Hovering) are programmed in the drone, it is ready for remote sensing. After taking off, the drone moves from waypoint to waypoint and captures the RGB and the TIR images. These combined images ( T ig ), and the flight data (GPS coordinates- C gps , altitude- A lt , the direction of the drone- D i ) are transmitted to the onboard raspberry pi through the UART communication interface. An image processing algorithm in python took these data and calculated each localized dry spot and its relative dryness. This data is further transmitted to the terrestrial edge station for generating the irrigation pattern through a trained machine learning model. After the mission is completed, the drones are returned to the land for recharging. The terrestrial unit consists of the terrestrial edge station and sprinkler control unit. The terrestrial edge unit receives the georeferenced output through the LoRa WAN communication. The terrestrial edge station uses a raspberry pi 4-8GB to calculate the sprinkler control parameters (SCP) and to generate an irrigation pattern which is transmitted to the smart sprinklers through the LoRa WAN communication. LoRa WAN technology’s long range will cover a large area of land without having to use a secondary signal repeater. The sprinklers will direct the water spray to the localized dry spots by adjusting the water pressure and the servo rotation head of the sprinkler head. We describe the capabilities of a fully-functioning, deployed system. SECTION II. Materials and Methods A. Unmanned Aerial Vehicle (Drone) Construction We built a custom-made quadcopter for this project (Figure 2a). The drone has an ultra-durable polyamide nylon based F450 frame, Pixhawk 2.4.8 flight controller, and the raspberry pi 4 4GB as a flight computer. The F450 frame manufactured by Readytoskey (ShenZhen ReadytoSky Technology Co., Ltd) is made of ultra-durable polyamide nylon-parts that can withstand more crash-landing damages. This frame has a 450 mm motor center, ideal for using 9- or 10-inch propellers. This frame allows us to use BLDC motors with 16, 19, and 25-mm mounting hole centers. The frame has a height of 450 mm with landing gears attached, weighing approximately 280 grams. 800 to 1100 kV motors are ideal for this frame. We used the 900 kV BLDC motors manufactured by Readytoskey with 10-inch propellers (1045 props). 30 A Electronic Speed Controller (ESC) manufactured by Simonk is used to control the throttle speed of the drone (Figure S1). FIGURE 2. a) Custom-made quadcopter, b) Aerial Edge Computing System. Show All The Pixhawk 2.4.8 flight controller controls all the motor speeds along with data sensing. Pixhawk 2.4.8 has a 32-bit ARM Cortex M4 core processor with FPU, which has a rate of 168 MHz, 256 KB RAM, and 2 MB flash memory. The Pixhawk flight controller comes with an inbuilt accelerometer and gyroscope (MPU6050), MEMS barometer, ST Micro 16-bit gyroscope, ST Micro 14-bit accelerometer, and compass (magnetometer). Pixhawk can communicate with the peripheral device through UART, I2C, SPI, CAN, and USB transmission protocols. Which also supports 3.3 V to 6.6 V ADC inputs. The ESCs are connected to the main output channels of the Pixhawk, and the RF receiver is connected to the SBUS input. We construct a quadcopter drone, so we only need four main output channels to connect the ESCs. Channels 1 to 4 are used here. An external switch is connected to the Pixhawk to arm and disarm the drone. We used a FLYSKY FS-i6X RF transmitter and an FS- X6B receiver for transmission and manual control. FS-i6X is a 2.4 GHz dual antenna 6-channel RF transmitter based on AFHDS2A protocol, which can be upgraded to 10 channels with some DIY tricks. FS-i6X is compatible with PWM, PPM, i- bus, and s- bus protocols. This transmitter ranges from 500 to 1500 m in the air with a transmission power of less than 20 dBm. The 2.4 GHz dual antenna FS- X6B receiver is compatible with the FS- i6X and easily connected using the onboard pairing switch. The FS- X6B receiver supports six channels PWM, PPM, i- bus, and s- bus communication protocols. The receiver ranges up to 1500 m in the open field with optimum power. The RF receiver is connected to the SBUS input of the Pixhawk flight controller. The 915 MHz radio telemetric module pair communicates between the terrestrial edge unit and the drone. This 500 mW transceiver can connect to the telemetric port of the Pixhawk flight controller. The other transceiver pair can be connected to the USB interface to receive flight data and transmit control signals through AT commands. The default baud rate of the full-duplex transparent serial link is 5600 baud. This transceiver pair ranges from 300 to 500 meters in an open field. The NEO- M8N external flight controller GPS module is connected to the Pixhawk to find the exact coordinates. This has a tracking sensitivity of 161 dBm and capturing sensitivity of 148 dBm with up to 10 Hz concurrent GNSS. NEO- M8N flight controller GPS module also includes an internal compass (magnetometer) which can be used to calculate the direction. There is a default port in the Pixhawk flight controller to connect the external GPS module, and the external compass can be connected to the I2C port. A 3500 mAh 3S Lithium polymer battery is used to power the drone and all the electronic systems. This 12.6 V battery can fly the drone for about 30 minutes at an altitude of 10–15 meters. A raspberry pi 4 4GB captures and processes the thermal, RGB images, along with the flight data from the Pixhawk flight controller (Figure 2b). The Broadcom BCM2711, Quad-core Cortex-A72 (ARM v8) 64-bit SoC powers the raspberry pi 4 at a 1.5 GHz clock frequency. We used a 4GB RAM model for this project. That is enough to do all our necessary work. The camera can be connected to USB ports, and a 32 GB class 10 micro-SD card is used to boot the raspberry Pi with Raspbian OS. A python program captures and processes the images and data to generate the basic information of each dry spot to create the data set for the machine learning model. A 12 V to 5 V - 3.5 A external power converter is used to power the raspberry pi from the LiPo battery. The Pixhawk flight controller can communicate with raspberry pi through the UART transmission protocol, which is used to extract the current drone location and altitude from Pixhawk. Open-source Mission planner software developed by Ardupilot (https://ardupilot.org/planner/) is used for drone calibration and assigning flight paths. Mission planner is installed on a Windows computer and connects the Pixhawk utilizing a micro-USB cable. The quadcopter firmware with the required orientation is flashed on the Pixhawk. After connecting all the peripherals to the Pixhawk, the flight controller is ready for calibration. RF throttle, accelerometer and gyroscope, compass, and ESC must be calibrated using Mission planner. Flightpath, waypoints coordinates, altitude, and flight mode can be programmed into the drone using the graphical interface of Mission Planner. Once completed, the drone can communicate with Mission Planner through the 915 MHz telemetry module while in the air. The specifications of important individual components are given in the Table. S1 B. Edge Intelligence in UAV Our system consists of aerial and terrestrial edge intelligence units. The UAV’s edge intelligence acquires and processes the TIR images, primary data such as drone hovering altitude, GPS coordinates, hovering speed, and direction to generate the pixel data information, which is transmitted to the terrestrial edge for further machine learning approach. The drone will take TIR photos of each hexagonal sector after the hovering pattern, route, and heights have been put into it. Due to outside factors like wind and weather, the TIR camera pictures are unreliable. After being stabilized, the pictures are fed into the image processing phase. Prior to using adaptive thresholding to find the localized dry areas, the original rectangle TIR pictures are cropped to a regular hexagonal image and divided into R, G, and B components. The information from the pixel data is gathered once the localized dry spots are georeferenced. Pixel data are transmitted to the terrestrial edge station through LoRa WAN communications (Figure 3). Using a trained machine model, the terrestrial edge station utilizes these data to determine the irrigation pattern and generate the sprinkler control parameters (SCP). FIGURE 3. Acquisition, stabilization, and processing of TIR images in the UAV Edge intelligence to generate pixel data information. Show All C. UAV Imaging The custom-made drone is equipped with a Thermal Infrared (TIR) and a RGB camera for capturing thermal and color images while hovering. Thermal Infrared (TIR) Camera: A Forward-Looking Infrared Camera (FLIR), Lepton 3.5 FLIR was used to capture thermal images (8 - 14μm wavelength). The camera had a resolution of 160×120 or 80×60 active pixels and an aperture angle of 57° with a shutter (Figure 2a). The camera operates in the 2.8- 3.1 V range, with an average power consumption of 650 mW during shutter events. The STM32-based breakout board is used to mount the FLIR camera (Figure S2a). A micro-USB cable can be used to connect the FLIR camera to a computer; in our case, a raspberry pi (Figure 2b). RGB Camera: The raspberry pi camera captures RGB images (Figure S2b). The V2 camera has a Sony IMX219 CMOS 8-megapixel sensor which has a sensor size of 3.674×2.760 mm(1/ 4 ′′ format) with an active pixel count of 3280×2464 (total pixels 3296×2512 ). This supports 1080p 30fps, 720p 60fps VGA90 video modes along with 3280×2464 pixel still images. The IMX219 has a built-in 650 nm IR filter, which means it is non-sensitive to IR light and draws a peak current of 300 mA while operating. A ribbon cable connects the camera module to the CSI port of raspberry pi (Figure 2b). D. Edge Intelligence at Terrestrial Edge Unit The terrestrial edge intelligence station receives the pixel data information of the localized dry spots through the LoRa WAN receptor (Figure 4). The pixel data is composed of each pixel’s x and y coordinate location and the distance between each pixel to the sprinkler ( l ). The pixel data is further introduced to a trained machine learning model to predict the targets such as irrigation pattern and the sprinkler control parameters (SCP), such as the sprinkler head rotation angle ( θ ) and the water flow control valve rotation angle ( ∅ ) (Figure 5). The dataset consisted of a training dataset making up 80% of it and a testing dataset making up 20% of the pixel data information. FIGURE 4. Raspberry pi 4 based portable terrestrial edge intelligence station. Show All FIGURE 5. Training and testing stage of the machine learning model to predict the irrigation pattern and sprinkler control parameters. Show All E. Construction of Smart Sprinkler The custom-made smart sprinkler consists of LoRa based IoT receiver, a servo mechanism for controlling the sprinkler nozzle direction, a water solenoid for controlling water quantity, and a ball valve rotator for controlling the pressure. An ATSAMD21 microcontroller controls the direction of irrigation, duration, and force of water through the sprinkler, as in Figure 6. The smart sprinkler is powered by a 12 V, 20 W solar panel (Figure 7a). The flat basement with mounting holes helps easily place smart sprinklers at required locations. A 0.5-inch pipe connector is used to supply water to the sprinkler from the pressure pump through the pipes. A 0.5-inch pipe connects the water solenoid output connector and the sprinkler head. This watertight rotating tube maintains the free rotation of the sprinkler head using the MG-90 servomotor with gear mechanism without blockage or cracking. The sprinkler head can rotate from 0 to 359 degrees freely. This back-and-forth rotation of the sprinkler head helps irrigate in specific directions. The sprinkler head is attached to a water blocker controlled by an SG-90 micro servo, determining the irrigation distance by controlling the water pressure. A 12 V- 1 A water solenoid is used to turn on and off the sprinklers. The smart sprinkler detailed design and construction are given in the Figure S3, 4. FIGURE 6. Functional diagram of LoRa based smart sprinkler. Show All FIGURE 7. a) Design of LoRa WAN-based smart sprinkler for precision irrigation, b) LoRa enabled smart sprinkler circuit. Show All Additionally, the 12 V 72 PSI water solenoid helps control water flow through the sprinkler. A 12 V solar panel with an electronic charge controller is used to power the entire system. The microcontroller ATSAMD21 controls the smart sprinkler based on the terrestrial edge computing station commands received through the LoRa WAN module. These complete electronic modules are watertight and moisture-proof. The PV array height can be adjustable based on solar light, crop height, and shadow effect. The PCB design of LoRa enables smart sprinkler is given in the Figure 7b. Calculating the relation between the SG-90 servo angle ( ∅ ) and the irrigating distance is essential. We have attached a hall effect flow meter with the custom-made water flow control valve mechanism to develop an experimental setup (Figure 8a). This experimental product is connected with a pressure pump using a 0.5-inch PVC pipe. The hydration distance and water flow are controlled through the valve using an SG-90 micro servo motor and an Arduino development board (ATMEGA 328P microcontroller) (Figure 8b). The smart sprinkler receives the ∅ values from the terrestrial edge unit via LoRa WAN and the localized dry spots are irrigated selectively. We also developed a BLINK-based graphical interface to control the smart sprinkler parameters manually ( θ , ∅ , and solenoidal switching) for calibration purposes (Figure 8c,d). CAD design of all the parts used in the smart sprinkler design is given in the Figure S5-20. FIGURE 8. a) Experimental setup to calculate the relation between ∅ and irrigation distance, b) Measuring hydration distance over each servo angle ( ∅ ), c) Custom-made smart sprinkler for selective irrigation, d) BLYNK based application to calibrate sprinkler control parameters. Show All F. RF Communications LoRa WAN is used as the transceiver for drones and smart sprinklers. It is essential to point out that, for a large region of farmland, the terrestrial edge station must be able to connect with most of the smart sprinklers without needing a secondary repeater. During system operation, less than 30 kB of data is transmitted from the drone to the terrestrial edge computing station and to the sprinkler. Therefore, using LoRa WAN technology for data transmission is feasible because bandwidth is not a key concern in the system. For a communication system, optimal range, power, and price/performance trade-offs are possible by using LoRa technology. The spread spectrum modulation method used by LoRa is unique and was developed from chirp spread spectrum (CSS) technology [51], [52]. The LoRa WAN (Long Range Wide Area Network) serves primarily as a network layer protocol for controlling communication across Low Power Wide Area Network (LP WAN) gateways and edge devices as a routing protocol [51]. According to the regulations, LPWAN technologies mainly operate in the ISM band from 902 MHz to 928 MHz in the USA and the band from 863 MHz to 870 MHz in Europe [53], [54]. Using a LoRa gateway, the appropriate edge station can transmit information to the LoRa WAN with a bandwidth of 125 kHz. Multiple data rate options, ranging from 250 bps to 5470 bps, are supported by this technology. A transmission range of up to 10 km helps to make up for this extremely low data rate [51]. It’s vital to note that a high-gain antenna and an environment lack of physical obstructions are requirements for reaching such long distances. A 20% packet loss rate for a distance of around 2 km between nodes and the LoRa gateway has been demonstrated in studies employing an SX1278 LoRa chip and an ultra-low power STM32L151 microcontroller [55]. For our purpose, we chose a RYLR896 LoRa module (Integration of SX1276 LoRa communicator and STM 32 microcontroller), which has a more extended range and better receiver sensitivity (down up to −148 dBm). The LoRa chip uses a peak power of 300 mW when in transmission mode and drops to 60 mW when in reception mode. These values decrease to a power level close to 0.25 mW in sleep mode. The peak power needed only lasts for a time frame of less than 10 ms when operating in the mode with the lowest transmission rate [51]. The FSK, GFSK, MSK, GMSK, LoRa, and OOK modulations are supported by the SX1276 LoRa modem, which has a configurable bit rate of up to 300 kbps. G. Terrestrial Edge Front End The user control GUI (Graphical User Interface) available at the terrestrial edge is the terrestrial edge console (Figure 9). Tkinter is used to create the unit. Tkinter, sometimes known as ”Tk interface,” is a python module that allows access to the Tk GUI toolkit. This toolkit was created in TCL (Tool Command Language), and it is multiplatform, supporting Linux, MAC OS, and Microsoft Windows. The only framework included in the python standard library is Tkinter. The terrestrial edge console collects data from the smart sprinklers (Figure S21a) and aerial edge through LoRa WAN communication and external REST APIs are utilized to get weather data (Figure S21b). These APIs employ GPS coordinates to acquire correct weather for terrestrial edge control station. The sprinklers can also be manually controlled by the user for calibration purpose by changing the θ and ∅ values of each sprinkler (Figure S21c). The terrestrial edge GUI is also used to visualize the irrigation pattern of each smart sprinklers. If there are unfavorable weather conditions, the weather data collected can show how well the sprinkler system performs. FIGURE 9. Terrestrial edge front end for data representation and real time visualization of irrigation pattern. Show All H. Methodology Surveying the farm area is the first step to collecting each boundary point coordinates, total farm area, and shape. Consider a square-shaped farmland; the four boundary coordinates are the primary data needed for further calculations. The total surveillance area is divided into hexagonal sectors where the smart sprinklers are placed at the center of each sector. A python program is developed in processing, which takes the areal map of farmland, boundary conditions (coordinates), diagonal of each hexagon, and hexagon separation x and y values to avoid overlapping as the input. The farm map is overlaid with a regular hexagon grid based on these data. The program also provides the coordinates of the center of each hexagon. Finding the exact locations for sprinklers are achieved through this method. The method used for implementing hexagonal griding is shown in the algorithm S1. We implemented the project on a 40 m x 40 m open grassland. The land is virtually divided into a few small segments. A hexagonal sector with a diagonal dimension of 10 m is used in this project. TIR images acquired by the drone are processed using the onboard edge intelligence module along with the flight data in order to estimate the location and dryness of every localized dry spot within each hexagonal sector. This data is transferred to the terrestrial edge station through LoRa WAN communication. The terrestrial edge station (raspberry pi 4-8GB) collects these data and generates a dataset containing the rotation angles ( θ,∅ ) of the water flow control valve and the nozzle head. To precisely calculate the irrigation pattern, the ML model incorporates environmental parameters such as field soil moisture absorption rate, crop type, dry spot area, and weather. 1) Image Stabilization The major problem we faced during the reconstruction of the thermal images was the stability of the recorded thermal videos. This is mainly affected by the steadiness of the drone subject to environmental conditions like wind and weather. Before determining the properties of the localized dry spots, it is essential to stabilize the thermal videos. A python code written for Open CV took the shaky video. It converted that to a stabilized video based on changing the frame transformation parameters from one frame to another using optical flow for all frames. The frame transformations are a rigid Euclidean transform consisting of three parameters distance ( dx,dy ) and angle ( dθ ). The algorithm in python compiles the transformations to obtain the ”trajectory” for x,y , and the angle at each frame. New transformation= transformation +(smoothed trajectory−trajectory) (1) View Source A sliding average window is used to smooth the trajectory. The radius of the window defines the number of frames used for smoothing. The new transformation is formatted using equation (1) and applied to the entire thermal video. The final output of the stabilized thermal video is created by cropping the unwanted edges of all frames. The algorithm for stabilizing the drone video is detailed in Section S2. 2) RGB Splitting of Thermal Video The color of the localized dry spots varies from dark blue to red hue when the dryness increases. The environmental conditions such as weather and atmospheric temperature can also affect the quality of captured TIR images [18], [56]. Removing unwanted information from the TIR images is an essential preprocessing step in the aerial edge unit. Separating a picture into its RGB component channels reveals that the R channel contains the bulk of the image’s informational value, making it simple for an image processing system to identify the video’s reference plane and pinpoint the location of any dry areas. A 40 x 40 cm2 aluminum sheet attached to a wooden frame was used as the temperature reference plane. The algorithm S3 is used to split the TIR images into R, G, B channels. 3) Localized Dry Spot Detection From TIR Images The area of a single dry spot ( A ) is calculated based on the TIR image covering a single hexagon. This is calculated according to the resolution of the TIR imaging camera and the drone’s altitude. For an altitude of 4 m, the dry spot area of 2.5 cm2 equals 1 pixel of the TIR images captured using a Lepton 3.5 FLIR camera. Since we are using the same TIR camera for the experiment (Lepton 3.5 FLIR), the resolution is constant. This calculation depends upon the drone’s altitude at which the image is captured. The OpenCV library transforms the thermal image input into a greyscale image. The image is represented as I(x,y) , with (x,y) denoting the pixel coordinates. The image height (h) and width (w) are calculated to represent the image as a (h x w) pixel metric. The pixel metrics is evaluated horizontally { y 0 x 1 , y 0 x 2 ,….., y 0 x (w−1) , y 0 x (w) } and the vertical value ranges as { y 0 , y 1 ,….., y (h−1) , y h } . Threshold value T is predefined, i.e., determined from trials exhibiting maximum dry spot detection DMAX and minimum error EMIN from multiple image evaluations. The pixel values I ( x,y ) exceeding the threshold are considered dry spots, hence highlighted in the image with greyscale value 0 representing C. The image area is also estimated in pixels; in the bulk image process, the image name and area are represented in an excel worksheet. The processed images are stored in an output directory for further processing. The algorithm S4 is used to find the localized dry spots area. The input image is a greyscale image with dry spots represented with RGB {0, 0, 0}. There are two predefined values, i.e., alpha and pixel ratio. α represents the error or deviation from the expected target dry spot of the water jet. The area covered by deviation or error is defined as A ′ . The total area covered is A MAX will be higher than the actual area ( A ) Total area covered  A MAX =A+a A ′ (2) View Source α value depends on the pressure deviation, nozzle size of the sprinkler, wind, and external factors. The sprinkler precision is considered as 100% when α=0 . The α value is empirically determined and used to correct the sprinkler rotation angles to avoid deviation from the actual area ( A ) that needs to be covered. The corrections can be manually set by the terrestrial edge front end. Variation of α corresponds to the pixel_ratio , which is a cluster of pixels around the dry spot, clubbed together as a single region to be irrigated, referred to as sprinkle_area if the pixel ratio value in the area is. sprinkle_area= (pixel_ratio) 2 (3) View Source The sprinkle_area values can range from 1 to n2, depending on pixel_ratio . The value of the sprinkle ratio is significant concerning the sprinkler nozzle type or spread rate. The algorithm uses a decision tree classifier to obtain the rotation angles, flow rate, pressure, and distance for every dry spot coordinate value ( x,y ). Algorithm 1 details the irrigation of localized dry spots. Algorithm 1 Irrigate the Localized Dry Spots Input: alpha ← deviation from the original value, pixel ratio ← pixel cluster size, B ← blue in RGB, G ← green in RGB Output: live image stream of sprinkler, dry spot fill 1: Procedure sprinkle: 2: img ← imread input image with cv2 3: height, width ← shape method of img 4: for y in height do 5: for x in width do 6: if pixelRatio > 1 then 7: for y1 in y to (y + pixelRatio) do 8: for x1 in x to (x + pixelRatio) do 9: if y1< height and x1< width then 10: b, g, r ← img[y1, x1] 11: if b = 0 and g = 0 and r = 0 then 12: img[y, x] ← B, 0, 0 13: flowRate, angle ← get data for x, y from DecisionTreeClassifier 14: sprinkle with angle and flowRate 15: deviation ← round value of (alpha ∗ pixelRatio) 16: if alpha > 0 then 17: for i in (y– deviation) to (y + deviation + 1) do 18: for j in (x– deviation) to (x + deviation + 1) do 19: if img[i, j].all != img[y, x].all then 20: if randomPrint then 21: if random Boolean is true then 22: img[i, j] ← B, G, 0 23: else 24: img[i, j] ← B, G, 0 25: else 26: b, g, r ← img[y, x] 27: if b = 0 and g = 0 and r = 0 then 28: img[y, x] ← B, 0, 0 29: flowrate, angle ← get data for x, y from DecisionTreeClassifier 30: sprinkle with angle and flowRate 31: deviation ← round value of (alpha ∗ pixelRatio) 32: if alpha > 0 then 33: for i in (y– deviation) to (y + deviation + 1) do 34: for j in (x– deviation) to (x + deviation + 1) do 35: if img[i, j].all != img[y, x].all then 36: if randomPrint then 37: if random Boolean is true then 38: img[i, j] ← B, G, 0 39: else 40: img[i, j] ← B, G, 0 41: imwrite image with cv 2⟶ img file 42: imgZoom ← resize image with cv2 43: cv2.imshow(“Output”, imgZoom) 44: b, g, r ← img[y, x] 45: if b = R then 46: cv2.waitKey(time) end 4) Georeferencing of Localized Dry Spots in a Hexagonal Sector To visualize the complete image processing process in the aerial edge computing system, the GPS coordinates of each localized dry spot location is calculated from the TIR image of a hexagonal sector. The algorithm uses the RGB split TIR images along with the GPS coordinates of the smart sprinkler as input and crops an image to a regular hexagon, placing the sprinkler at the center of the hexagon. The corresponding image is converted to.png format to adjust the transparency value ( α ). The slope of the hexagonal sides is computed, and all the pixels beyond the hexagonal boundaries are set to have a value of 0. The center point of each localized dry spot is determined, and the GPS coordinates are calculated according to the algorithm given in Section S 5. I. Irrigation Pattern Generation: Machine Learning Aided Model for Generating Irrigation Pattern of the Smart Sprinkler Target Prediction Based on Machine Learning The pattern of irrigation is generated as an array of [ θ n , Φ n ] values, θ and ∅ are sprinkler head rotation angle and the pressure valve control servo angles. Various machine learning models were used to predict the target variables [ θ n , Φ n ] using the data gathered from thermal images and sprinkler experiment data (Figure 10). The ML dataset includes the pixel data information, drone parameters, and environmental data. The aerial edge computing system generates the pixel data from the processed TIR images, including the position of each pixel ( x,y ) and the distance between each pixel and the sprinkler ( l ). A training dataset comprised 80% of the dataset, and a testing dataset comprised 20% of the dataset. By contrasting anticipated and actual values, the accuracy of the ML regression models was examined. By creating python scripts that accessed the Orange API, the Orange toolbox was used to execute ML studies. Python script widgets are used in Orange to execute python scripts to carry out extra functionalities like feature significance. The outputs of the python script widget are the updated variables from the python script. FIGURE 10. Proposed machine learning model. Show All Our project’s GitHub repository contains the Python codes developed for all modules of this work. (https://github.com/skmidhun09/drone_aided_smart_irrigation) SECTION III. Results A. Hexagonal Grid Mapping The aerial edge computing station distinguishes each localized dry spot from the TIR images. Our preliminary experiment was to map a survey area and calculate the exact number of sprinklers required for the land and its GPS location. We chose an open grassland of 40 m x 40 m dimension as our survey area. The four boundary coordinates were obtained from Google Maps. The drone waypoints were set to hover over the grassland at about 20 m altitude while capturing RGB and TIR images. The sector is divided into smaller hexagonal sectors with a 10 m radius and the location of each sprinkler is determined using the algorithm S1 (Figure S22,23). The drone hovering pattern is further generated from the sprinkler location of the farmland. The location of each smart sprinkler is given as a waypoint in the Ardupilot Mission planner software which calculates an appropriate drone hovering pattern. B. Video Stabilization Environmental factors such as weather and wind can arbitrarily change drone stability, which will also affect the stability of the thermal images and video captures. Although gimbal-based image stabilization methods are efficient, on the other hand, it is also expensive. To mitigate the negative impacts of camera, shake on recorded video and enhance the overall quality of the media, we developed a video stabilization program. The frame transformation parameters of the TIR video are adjusted relative to the Euclidian distance of frame transformation. Figure 11 a represents the fluctuation of d x and d y for a shaky video. There was no camera rotation during recording, therefore angle deviation ( d a ) is ignored. Figure 11b,c represents the change in pixel value for the x and y trajectory for an un-stabilized and stabilized video. The new transformation of each frame is calculated from the previous transformation by applying the smooth trajectory parameters d x and d x (Figure 11d). FIGURE 11. a) Unstable TIR imaging frame transformation, b) x trajectory transformation of un-stabilized and stabilized video. c) y trajectory transformation of un-stabilized and stabilized video. d) Stabilized frame to frame transformation. Show All C. RGB Splitting of TIR Images We discovered that abrupt changes in the environmental conditions impact the effectiveness of dry spot recognition when isolating the localized dry patches from the TIR videos. This is calculated by comparing the TIR images to the contrast value of the reference plane (a 40 cm2 aluminum foil attached to a wooden piece used as reference in this case). The low-resolution Lepton 3.5 FLIR camera cannot effectively distinguish the reference plane from the surrounding wet areas. Splitting each color channel (R, G, B) of TIR images effectively determines the relation of the reference plane and dry patch color in the TIR images. The blue and green channels cannot distinguish the reference plane from the wet areas (Figure S24a,b). In contrast, a dry region is best defined in the red channel (Figure S24c). This feature can be utilized to precisely calculate the localized dry spots by comparing the temperature of the reference plane on the ground. D. Optimum Drone Hovering Altitude to Determine the Localized Dry Spots Effectively To find the optimum altitude for a drone hovering in the smart irrigation, we conducted experiments using synthetic turf placed inside a single hexagonal sector. An artificial turf of 5 m2 is placed at the center of one sector. TIR images of the turf is captured using a Lepton 3.5 FLIR camera at different altitudes from 4 to 20 m (Figure 12a) while hydrating the turf using a known quantity of water (0.5 to 2.5 L) as in Figure 12b. The area of each wet patch is mapped into pixels through the blob detection method. The TIR images are used to estimate the influence of image resolution of the Lepton 3.5 FLIR camera at various altitudes. The pixel representation of wet patches for each hydration level at different altitudes are calculated. The relation between the wet patch area and hydration level at different altitudes (Figure 13a), TIR image representation of the wet patch for each altitude at different hydration levels (Figure 13b). This data is used to map the relationship between the dry spot area, moisture level, and the TIR image capturing altitude for a Lepton 3.5 FLIR camera. FIGURE 12. a) TIR images captured using Lepton 3.5 FLIR camera at 12 m altitude for different hydration levels, b) TIR images captured using Lepton 3.5 FLIR camera for a hydration level of 2.5 L at different altitudes. Show All FIGURE 13. a) TIR image representation of wet patch area for different hydration levels corresponds to each altitude for a Lepton 3.5 FLIR camera, b) TIR image representation of wet patch area for each altitude at different hydration levels for a Lepton 3.5 FLIR camera. Show All We created two adjacent wet patches of 1 ft radius separated 1 ft apart by hydrating the turf with a known quantity of water. This is to determine the resolution of the corresponding FLIR camera and the optimum altitude to capture the TIR images. Each wet patch is hydrated with 1.5 L and 2.5 L of water, and the TIR images are captured at different altitudes (4 m- 20 m) as in Figure 14a. We find that the FLIR camera can clearly distinguish each wet patch up to an altitude of 12 m (Figure 14b,c). A larger coverage area was achieved at higher altitudes of the drone hovering, giving a shorter period to cover the farmland. We further used image processing to accomplish pixel mapping of the corresponding wet patches (Figure 14d). At a height of 12 meters, the FLIR camera could capture approximately 40 x 30 m2 in a single image. Therefore, the hexagonal diagonal dimension can be increased to 15 meters, thereby reducing the initial hovering time and cost. FIGURE 14. a) TIR images of 1-ft radius wet patches with hydration levels of 1.5 L, 2.5 L, and separation of 1 ft captured using a Lepton 3.5 FLIR camera at different altitudes, b) Gray scale conversion and wet patch area calculation of the TIR image hydrated with 1.5 L, 2.5 L captured at 12 m altitude, c) Gray scale conversion and wet patch area calculation of the TIR image hydrated with 1.5 L, 2.5 L captured at 16 m altitude, d) Pixel mapping of corresponding wet patches. Show All A machine learning model is developed to determine the sprinkler flow rate corresponding to each pixel distance from the center of each segment. At the optimum altitude for drone hovering (12 m), the total area of a single pixel is about 7.5 cm2. Depending on the location of the dry zone pixels, the ML model generates an accurate servo angle for nozzle head rotation ( θ ) and flow rate control ( ∅ ) along with the working duration of water solenoid to precisely irrigate each pixel in the TIR image. E. LoRa Communication The SX1276 LoRa module is used to transmit data from the aerial edge to the terrestrial edge and from the terrestrial edge to the smart sprinklers. The SX1276 LoRa module is set as a transmitter or receiver based on the purpose. The spreading factor (SF) and the bandwidth (BW) determine LoRa communication’s efficiency and the maximum transmission distance, which is governed by the RSSI and SNR parameters. We studied the influence of these parameters on the SX1276 LoRa module by changing the spreading factor from 7- 12 for each bandwidth value of 125 kHz and 250 kHz. The experiment was conducted with three LoRa modules, one of which transmitted data to the other two. One of the LoRa modules is equipped with a 2.1 dBi helical antenna, and the other with an 8d Bi fiberglass antenna. The receivers are taken to different parts of our campus to measure the RSSI and SNR values. While experimenting, we achieved the highest transmission distance of 778 m for the LoRa module with the 8d Bi fiberglass antenna and 503 m for the LoRa with a 2.1 dBi helical antenna. RSSI and SNR values for every distance are recorded for 125 kHz and 250 kHz bandwidth (Figure S25-28) in order to figure out the optimum LoRa configuration. We see that larger SF values and smaller BW values result in a greater transmission distance. Figure 15a,b indicates the RSSI and SNR values for each transmission distance for the configuration of SF 12 with 125 kHz and 250 kHz bandwidth. The highest transmission distance is achieved with minimum package loss when the LoRa is configured with a SF of 12 and a BW of 125 kHz which is used in this system. A LoRa configuration with a bandwidth of less than 125 kHz can increase transmission distance, but at the expense of an increase in transmission delay. FIGURE 15. a) RSSI values of LoRa module for each transmission distance using a 8.1 dBm fiberglass antenna, b) SNR values of LoRa module for each transmission distance using a 8.1 dBm fiberglass antenna. Show All F. Georeferencing of Localized Dry Spots The smart sprinkler is located at the center of the hexagonal sector, and its GPS coordinates can be read out from the Pixhawk using UART communication. The drone’s hovering altitude is fixed so that one side of the TIR image is the same as the diagonal of the hexagon’s adjacent sides. The TIR images are divided into hexagonal-shaped sectors and each localized dry spot is georeferenced based on the GPS coordinates and altitude of flight (Figure 16). A dataset is generated with the pixel data information of each dry spot. The ML model uses this dataset to calculate the irrigation pattern by generating the smart sprinkler control parameters ( θ,∅ ). FIGURE 16. Localized wet and dry spots area and location calculation through python programming from the red and blue channels respectively. Show All The machine learning model is trained with a dataset that relates water flow rate and the irrigating distance. The water flow rate is determined by rotating a ball valve using an SG-90 micro servo motor controlled by the ATSAMD21 microcontroller (Figure 17a, b). We experimentally determined the servo angle’s irrigation distance and flow rate. The ball valve and servo motor are attached so that the 0° angle closes the valve and 90° opens the valve completely. The flow rate vs irrigating distance of the smart pump in a 10° interval is shown in Figure 17a, b. FIGURE 17. a) Relationship between servo angle and a) irrigation distance and b) flow rate of the Smart sprinkler. Show All G. Deviation in Irrigation Pattern For Localized Dry Spots Even if the image processing algorithm calculates the localized dry spots exactly, the smart sprinkler may not irrigate the targeted region precisely based on the irrigation pattern generated by the machine learning model. This may be the result of a number of external or internal factors that influence the precision of the irrigation pattern. External factors such as wind or internal issues such as the inconsistency of the sprinkler nozzle can lead to this inaccuracy. From our studies, a single pixel of a TIR image captured by a Lepton 3.5 FLIR camera from an altitude of 4 m represents 2.5 cm2 (Figure 18a). The smart sprinkler is designed to irrigate based on the temperature of each pixel, which means the irrigation pattern is directly related to each pixel mapping. For a smart sprinkler to precisely irrigate a dry spot of 2.5 cm2 the nozzle diameter of the sprinkler should be so small that it is challenging to construct because of the pressure generated inside the sprinkler when the water solenoid turns on. We have introduced a sprinkler error constant (α) to represent the deviation in the irrigated area from the irrigated pattern. The α value varies from 0 to 1. An increase in the α value increases the hydration area (Figure 18b-d), which reduces the system efficiency. The value of α should be zero for a perfect smart irrigation system. Figure 18e represents the relation between the α value and the area deviation. The figure shows that the relation between α and deviation area is linear for TIR images captured up to an altitude of 12 m using a Lepton 3.5 FLIR camera. This will help to improve the system efficiency by including the change in α value parameter in the ML dataset, which will not be applicable for images captured above 12 m altitude. However, the difference in area calculated using pictures taken at higher altitudes (>12m) showed erroneous results. This is due to the resolution limit of the TIR camera used. Hence, we maintained the image capturing altitude of 12 m for all our experiments in this study. FIGURE 18. a) TIR images of localized dry spots captured using a Lepton 3.5 FLIR camera at 4 m altitude, b) Smart sprinkler irrigation model for error value ( α)=0 , c) Smart sprinkler irrigation model for α=0.5 , d) Smart sprinkler irrigation model for α=1 , e) Irrigation area deviation with varying α values at different capture heights. Show All H. Machine Learning Aided Model for Generating Irrigation Pattern of the Smart Sprinkler 1) Prediction Efficiency of the Decision-Making Model At the terrestrial edge, a machine learning model will generate the SCP based on the TIR image data and the input dataset (Figure S29). The performance of the ML models was evaluated using the four key parameters: Mean Square Error (MSE), Root Mean Square Error (RMSE), Mean Absolute Error (MAE), and R-squared (R2). The MAE evaluates the average size of errors over a set of predictions without considering their direction. It evaluates the accuracy of continuous variables. MSE’s penalty is proportional to the square of the error rather than the actual error. A smooth gradient for minor errors is created when the error is squared, which gives the outliers more weight. An effective model should have MSE values that are almost zero. The square root of MSE is used to calculate RMSE. The range of MAE, MSE, and RMSE is from 0 to ∞ . R-squared is also estimated to show how well a regression model fits the data. The best R-squared value is 1. The four machine learning models: K-Nearest Neighbors (KNN), Support Vector Machine (SVM), Random Forest (RF), and Neural Network, are tested for performance based on the MSE, RMSE, MAE, and R2. The RF model, which we evaluated, had the highest accuracy in predicting the θ and ∅ , with an MSE value of 0.063 (Figure S30). The KNN shows the second-highest accuracy with an MSE value of 0.149. SVM had the lowest accuracy with an MSE value of 86.581. The highest effective model (Random Forest) was introduced into the terrestrial edge unit for the prediction of SCP (Figure S31). 2) Estimating Feature Importance For Maximum Relevance and Minimal Redundancy A selection of predictors with a high prevalence is identified. Unnecessary predictors reduce model performance and raise computing costs. Some of the predictors among them have a considerable impact on how the model responds. The significance of each feature was examined by varying the predictors and calculating the accuracy drop. We wanted to identify the predictor combination relevant to the response, including predictors produced from TIR image processing and meteorological data output. The performance of a model is reduced by unnecessary features, which also raises the cost of computation. It’s crucial to identify a subgroup of features with a high prevalence. Some factors have a greater influence on the response model than others. Using the RReliefF algorithm and the k-nearest neighbor approach, we prioritized the significance of features or predictors. RReliefF is a continuous target function that rewards features that provide different values to neighbors with different response values while penalizing features that provide different values to neighbors with the same response values. To choose only the variables that maximize the information gain, we analyzed the RReliefF for each variable. Figure 19 displays the RReliefF-implemented features relevance rating. The features are marked as CL, L = [1], [2], [3], [4], where C1 is the distance between each pixel to the sprinkler, C2and C3 are pixel x,y coordinates values and C4 is the angle between pixels and the sprinkler reference axis. C1 was discovered to be the most crucial characteristic among the CL predictors with a weight of 0.595, where C2, C3, and C4 shows almost equal importance with RReliefF value of 0.388, 0.390, and 0.373. While comparing features, the RReliefF score serves as a baseline; certain features can be eliminated depending on feature importance values. FIGURE 19. Identifying a subset having high prevalence features with ranking the significance of the predictors using the RReliefF method. Show All SECTION IV. Conclusion We have developed a drone aided thermal mapping system to control the smart irrigation system to irrigate crops with an optimum quantity of water for precision agriculture. The aerial edge computing station captures the TIR images and determines the localized dry spot when the drone hovers over each hexagonal sector. The dry spot information is transferred to the terrestrial edge control station through LoRa WAN communication. The LoRa WAN-based smart sprinkler operates in accordance with the terrestrial edge computing station’s determination of the dry spot based on the ML-produced irrigation pattern. This smart irrigation system can precisely hydrate all the crops in the implemented region based on the reference hydration level, soil moisture absorption, and weather condition. This system applies to any crops in and geological location. And the system is scalable regardless of the size, geological background of the agricultural land, and variety of crops cultivated. Authors Figures References Citations Keywords Metrics More Like This Offloading for Edge Computing in Low Power Wide Area Networks With Energy Harvesting IEEE Access Published: 2019 A –123-dBm Sensitivity Split-Channel BFSK Reconfigurable Data/Wake-Up Receiver for Low-Power Wide-Area Networks IEEE Journal of Solid-State Circuits Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."

Paper 3:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: This review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, automated irrigation management systems for agriculture.
  Extract 2: By identifying knowledge gaps and proposing solutions for seamless integration across the automated irrigation management system, this article aims to provide a roadmap for advancing the field of real-time, automated irrigation management.
  Limitations: ['The authors did not mention any specific limitations of real-time, automated irrigation management systems, but they did mention that these systems are still in their early stages of development and may not be suitable for all types of crops and farming operations.', 'The authors did not provide any specific recommendations for future research and development in the field of real-time, automated irrigation management.', 'The article is primarily focused on the benefits and applications of real-time, automated irrigation management systems and does not provide a detailed discussion of the challenges and limitations of these systems.']
  Relevance Evaluation: {'extract_1': 'The ornamental crop industry is an important contributor to the economy in the United States. The industry has been facing challenges due to continuously increasing labor and agricultural input costs. Sensing and automation technologies have been introduced to reduce labor requirements and to ensure efficient use of crop production resources.', 'extract_2': 'This review aims to cover available sensing and automation technologies used for ornamental crop production and highlights prospective technologies that can be applied for future applications.', 'limitations': 'The authors did not mention any specific limitations of using sensing and automation technologies in ornamental nursery crop production, but they do mention that these technologies are still in their early stages of development and that more research is needed to improve their accuracy and reliability.', 'relevance_score': 0.9870791116911692}
  Relevance Score: 0.967
  Inline Citation: >
  Explanation: The paper titled "Sensing and Automation Technologies for Ornamental Nursery Crop Production: Current Status and Future Prospects" presents a comprehensive review of the existing and emerging technologies used for sensing and automation in ornamental nursery crop production. It highlights the benefits and limitations of different sensing technologies, such as soil moisture sensors, spectrometer, depth cameras, lidar, and 3D cameras, for monitoring crop health and automating irrigation systems. The paper also discusses the applications of machine learning and artificial intelligence in disease detection, pest management, and plant identification. The authors emphasize the need for developing integrated automation systems that combine multiple sensing technologies to improve the efficiency and accuracy of operations in ornamental nursery crop production. The review concludes by identifying promising future research directions, including the integration of edge computing, generative adversarial networks (GANs), and radio frequency identification (RFID) tags, in the development of advanced sensing and automation technologies for ornamental nursery crop production.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all   Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals Sensors Volume 23 Issue 4 10.3390/s23041818 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links Article Views 3793 Citations 5 Table of Contents Abstract Introduction Sensing and Automation Technologies for Ornamental Crops Future Prospects/Directions Discussion and Conclusions Author Contributions Funding Conflicts of Interest References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessReview Sensing and Automation Technologies for Ornamental Nursery Crop Production: Current Status and Future Prospects by Md Sultan Mahmud 1,2,*, Azlan Zahid 3 and Anup Kumar Das 4 1 Department of Agricultural and Environmental Sciences, Tennessee State University, Nashville, TN 37209, USA 2 Otis L. Floyd Nursery Research Center, Tennessee State University, McMinnville, TN 37110, USA 3 Department of Biological and Agricultural Engineering, Texas A&M AgriLife Research, Texas A&M University System, Dallas, TX 75252, USA 4 Department of Agricultural and Biosystems Engineering, North Dakota State University, Fargo, ND 58102, USA * Author to whom correspondence should be addressed. Sensors 2023, 23(4), 1818; https://doi.org/10.3390/s23041818 Submission received: 26 November 2022 / Revised: 11 January 2023 / Accepted: 1 February 2023 / Published: 6 February 2023 (This article belongs to the Section Smart Agriculture) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract The ornamental crop industry is an important contributor to the economy in the United States. The industry has been facing challenges due to continuously increasing labor and agricultural input costs. Sensing and automation technologies have been introduced to reduce labor requirements and to ensure efficient management operations. This article reviews current sensing and automation technologies used for ornamental nursery crop production and highlights prospective technologies that can be applied for future applications. Applications of sensors, computer vision, artificial intelligence (AI), machine learning (ML), Internet-of-Things (IoT), and robotic technologies are reviewed. Some advanced technologies, including 3D cameras, enhanced deep learning models, edge computing, radio-frequency identification (RFID), and integrated robotics used for other cropping systems, are also discussed as potential prospects. This review concludes that advanced sensing, AI and robotic technologies are critically needed for the nursery crop industry. Adapting these current and future innovative technologies will benefit growers working towards sustainable ornamental nursery crop production. Keywords: agricultural mechanization; artificial intelligence; computer vision; digital agriculture; internet-of-things; plant biometrics; smart irrigation; smart spraying; stress detection 1. Introduction The nursery and greenhouse industry contributes nearly $14 billion in annual sales to the U.S. economy [1]. This industry produces more than 2000 ornamental plant species, covering most of the U.S.’ ornamental plants [2]. Nurseries are, in general, open-air operations where plants grow in the ground or in containers [3]. Greenhouses are typically enclosed environments where growth conditions (e.g., lighting, temperature, humidity, and irrigation) can be controlled [4]. Rapidly increasing production cost due to the increased labor expense, difficulty in obtaining skilled labor, and inappropriate application of agricultural resources are rising concerns for the ornamental industry [5,6]. Operations such as planting, growing, and harvesting nursery crops are heavily dependent on labor. These operations account for 43% of total production expenses [7]. It is becoming increasingly difficult for the industry to obtain such labor, especially the skilled workforce required to grow ornamental crops [8]. Conventional practices apply agricultural resources (such as water, nutrients, fertilizers, and pesticides) excessively and inefficiently, increasing production costs. These conventional approaches not only increase the production cost but are also responsible for contaminating the environment and the ecosystem. The industry must look for alternative solutions, such as automated crop management technologies, to reduce labor needs and ensure the efficient use of crop production resources. In the current decade, sensing and automation technologies have been continually increasing their impact on different crop management operations [9,10,11,12,13]. These technologies are categorized into two groups: ground-based and aerial-based. Ground-based crop harvesting technologies have been tested on various crops, including sweet pepper [14], lettuce [15], tomato [16], strawberries [11], apples [9], and cherries [17]. Ground-based technologies have also been explored widely in automatic disease detection in different crops, such as: powdery mildew on strawberry leaves [18]; leaf blotch, stripe rust, powdery mildew, leaf rust, black chaff, and smut on wheat leaves [19]; Alternaria leaf spot, brown spot, mosaic, grey spot and rust on apple leaves [20]; and anthracnose, brown spot, mites, black rot, downy mildew, and leaf blight on grape leaves [10]. Recent evolutions in unmanned aerial vehicles (UAVs) show the potential of using them in different agricultural operations, thereby consuming less time than ground-based systems [12]. Until now, UAVs used for agriculture have been limited to only remote sensing applications, due to limited payload capacity and battery life. UAVs have been used in various crop management applications, including automatic canker disease monitoring in citrus [21], weed detection in wheat and oat fields [22], detecting and mapping tree seedlings and individual plants [23,24], and yield estimation in cotton [25]. However, the success of sensing and automation technologies largely depends on the types of sensors used to acquire crop data and the processing algorithms used to extract valuable information. Various sensors, such as soil moisture, temperature and humidity sensors, cameras (color, spectral, and infrared), together with computer algorithms are used to develop smart technologies for agricultural applications [5,18,21,26]. A prototype irrigation controller system was developed using nine soil moisture sensors on an IoT platform to automatically manage water application in crops [26]. You et al. [27] used an RGB-D camera system to develop an autonomous robot for pruning branches of sweet cherry trees. It should be noted that RGB-D cameras offer four channels (i.e., red, green, blue and depth) that were required to estimate the size of branches (by depth channel) to decide which ones need to prune. Abdulridha et al. [21] detected citrus disease at an early stage using a hyperspectral camera. Other cameras may not be suitable for detecting a particular disease at the asymptomatic stage. Liu et al. [28] used enhanced generative adversarial networks (GANs) to augment their data for grape leaf disease detection; other machine-learning models were not considered because of the requirement for a deeper network. In conclusion, identifying appropriate sensors and developing algorithms are necessary tasks that depend mainly on crop and soil characteristics and operational needs. In most cases, one automated technology is specific to one particular operation in a specific crop. Therefore, evaluating sensor and algorithm performances for different crops in a certain industry provide insights for choosing them generally, while developing technology for a particular production operation. Although the ornamental crop industry is in the initial phase of developing sensing and automation technologies, an overview of currently available technologies and prospects of advanced technologies utilized for other crop industries (for agronomic crops and tree fruits industry) will be helpful for future technology developments. 1.1. Scope of the Study A few of the available reviews for ornamental crops mainly reviewed water management technologies and barriers to technology adoption [6,29]. Lea-Cox et al. [29] studied the economic benefit, current and future challenges, and support issues of using wireless sensor networks (WSNs) for water management of ornamental crops. Rihn et al. [6] reviewed factors correlated with the nursery industry’s propensity to use automation and mechanization. Their study also discussed the barriers to adoption for currently available automated technologies. This review aims to cover available sensing and automation technologies used for ornamental crop production operations, along with the prospects of using some advanced technologies (used in other crop industries) that can be beneficial to this industry. To the author’s knowledge, this is the first review article that broadly discusses sensing and automation technologies for ornamental crops. 1.2. Paper Organization This review aims to discuss the status and challenges of sensing and automation technologies for the ornamental crop industry. The organization of this article is as follows: Section 2 presents an overview of sensing and automation technologies used for ornamental crops. In Section 3, advanced technologies used for other cropping systems are discussed that could be valuable for developing future technologies for ornamental crops. Finally, Section 4 summarizes the overall discussion and conclusion of the article. 2. Sensing and Automation Technologies for Ornamental Crops Sensing and automation technologies are used in different operations relating to ornamental nursery crop production. The major operations are smart irrigation, plant stress detection, smart or variable-rate spraying, and plant biometrics measurements (Figure 1). This section presents detailed reviews of the currently applied sensing and automation technologies for those operations. The technologies have also been used in a few other areas and represented as other significant works. Figure 1. Areas where sensing and automation technologies are used for ornamental crop production. 2.1. Smart Irrigation Smart or precision irrigation technology determines the water requirement of crops using set-point control (using soil moisture data) or model-based control (using crop and environmental data) to maximize irrigation efficiency [4,29]. It helps reduce excessive water application while maintaining crop growth and development. Sensors-based irrigation technologies have been tested in different nurseries, including greenhouse, container, pot-in-pot, and field nurseries [30,31,32,33,34]. A schematic diagram of a smart irrigation system is presented in Figure 2. Figure 2. A schematic of an IoT-based smart irrigation system for water management in a container-based nursery. Table 1 presents different sensor applications for automatic irrigation management in different nurseries. Wireless sensor networks (WSNs) were used to control irrigation water flow in three container-based nurseries [32]. Experiments were conducted in two phases: first, EM50R nodes with EC-5 sensors were used to monitor soil moisture; and second, nR5 nodes were used to monitor and control irrigation. The WSNs-based technology reduced water use by about 20% to 25%. Kim et al. [35] tested soil moisture and EC sensors to monitor and automatically implement irrigation protocols. Substrate moisture data were measured to reduce water usage of hydrangea by as much as 83%. Coates et al. [36] used a VH400 (Vegetronix, Sandy, UT, USA) sensor to monitor soil water content in container nurseries where pots contain hydrangea plants. Even though the VH400 sensor costs half as much as standard EC-5 sensors, the authors concluded the VH400 was unsuitable for nursery crop monitoring because its output varied by up to 29%. This type of sensor (VH400) shows a high sensitivity of ~34 mV rather than ~5 mV using EC-5 per % volumetric water content. Lea-Cox et al. [31] used a hybrid system consisting of a 12-node CMU network (developed by Carnegie Mellon University, United States) and Decagon Ech20 moisture sensors (Decagon Devices Inc., Pullman, WA, USA) to control water applications in real-time in a container nursery. The system was also tested in a greenhouse where a six-node CMU network was used. The results reported that both networks performed well, but encountered some networking challenges at remote sites. The authors noted the CMU network node is less costly than the commercial Decagon Ech20 sensor, but showed similar performance. Wheeler et al. [34] also tested a smart irrigation system in a container nursery and greenhouse. They used Decagon soil moisture sensors along with an nR5 wireless node to control irrigation. The study reported a water use reduction of approximately 50% when compared to grower-controlled irrigation. The same sensor system was trialed previously by Wheeler et al. [5] in a floriculture greenhouse. The WSNs are also used in pot-in-pot nurseries. Belayneh et al. [37] used this technology to control irrigation in dogwood (planted in 15-gal containers) and red maple (planted in 30-gal containers) nurseries. The EM50R nodes were used to monitor data from soil moisture, and environmental sensors and nR5 nodes were used for irrigation control. Volumetric water content-based sensors were utilized for monitoring soil moisture. The sensors were inserted at a 6-inch depth for dogwood and at 6 and 12 inches depth for red maple. The results showed that the WSNs-based irrigation method reduced water usage by ~34% and ~63% for red maple and dogwood, respectively. Lea-Cox and Belayneh [38] developed a smart battery-operated nR5 wireless sensor node using a series of soil moisture and environmental sensors to irrigate dogwood and red maple nursery blocks. The study reduced daily water application by about 62.9%. The authors concluded that this sensor-based irrigation technology resulted in nearly a three-fold increase in the efficiency of water without reducing the quality or growth of trees. Internet-of-Things (IoT)-based smart irrigation systems have also been used for ornamental crop production. Banda-Chávez et al. [39] developed an IoT-based sensor network to activate the irrigation system to irrigate ornamental plant using an IoT platform and soil moisture sensors (YL-69). In addition, Beeson and Brooks [40] used an evapotranspiration (ETo) model-based smart irrigation system for wax-leaf privet. The study reported that this model-based irrigation system could reduce water application by about 22.22% annually, compared to the traditional overhead irrigation method. Although a limited number of studies have reported on the IoT-based automatic irrigation systems used for the ornamental industry, trends and current successes of this technology for other crop industries show promising potential for ornamental crop production. Although studies have reported the potential of using sensors-based technology for irrigation management, many factors impede this technology’s efficacy. Sensor-to-sensor variability in a particular environment could be one of them. The greatest variability among sensor readings occurred at volumetric water content levels just below the water-holding capacity of the substrate. Therefore, finding sensor-to-sensor variability in a particular nursery condition can greatly increase confidence in the data. Sensor positioning is another important factor that directly affects efficacy. Accurate positioning is needed in nursery conditions, particularly when measuring soil moisture content in container production. Sensors need to be placed in that part of the root zone where active water uptake occurs. Determination of optimal sensor numbers is another factor in specifying sensors for a nursery environment. The optimal number of sensors for a particular nursery depends primarily on the accuracy and repeatability of the sensors, variation among sensors, spatial variability of the nursery environment, and cost. Table 1. Summary of studies reported for smart nursery irrigation. 2.2. Plant Stress Detection Detection of stresses such as drought, disease infection, and pest pressure, recognizes unfavorable condition or substance that affects the growth, development or production of plants or crops using sensors and advanced technologies [41]. This detection helps growers to identify problems and take preventive actions before stresses significantly damage plants or crops. Two types of stresses have been identified in ornamental crop production: abiotic plant stress and biotic plant stress. Abiotic plant stress includes drought, nutrient deficiency, salinity problems, floods, etc., while biotic stress refers to damage caused by fungi, bacteria, insects, or weeds. Sensors, including RGB, thermal, and spectral, have been utilized to monitor stresses in ornamental crop production [42,43,44,45]. A schematic diagram of the sensor-based automatic crop disease detection procedure is presented in Figure 3. Figure 3. A schematic of a computer-vision-guided dogwood anthracnose leaf disease detection procedure. Table 2 represents different ornamental plant disease detection using advanced sensing technologies. Red-green-blue (RGB) imaging sensors with a spectrum range of 400–700 nm (visible range) are used to monitor ornamental plant stresses due to their affordability and application in other cropping systems. Velázquez-López et al. [42] developed an image processing-based powdery mildew disease detection system for rose plants by using the Open CV library. The system detected powdery mildew by converting RGB images to hue, saturation, and value (HSV) color space and achieved the highest disease region matching of 93.2% by segmenting with V channel using close captured images (captured at 10 cm from the rose canopies). Although this study achieved good performance with the traditional image segmentation method, the performance would not have been the same if the image capturing conditions had changed. This is considered a major limitation, especially for real-time disease detection, where multiple diseases would be present. Nuanmeesri [46] advanced the image processing technique from traditional image segmentation to deep learning-based detection in order to identify up to 15 different diseases. A hybrid deep learning model built by fusing convolutional neural networks (CNNs) and a support vector machine (SVM) were used. Researchers also tested the image registration approach of two imaging media for ornamental crop disease detection. Minaei et al. [45] registered RGB and thermal images to detect powdery mildew and gray mold disease on roses for developing a site-specific spraying system. A few studies have compared RGB imaging with spectral imaging for tulip disease detection [43,47]. The results reported that a spectral imaging system achieved better detection accuracies than RGB imaging while detecting tulip breaking virus (TBV). Hyperspectral imaging is a powerful tool that uses imaging and spectroscopy for detecting stresses at the early stage, gathering and processing feature information from a wide spectrum of light. Researchers have used hyperspectral sensors for ornamental crops, but mainly in laboratory applications due to their vulnerability in real-time field applications [43]. Polder et al. [48] identified Botrytis infected Cyclamen plants with selected features (bands) of 497, 635, 744, 839, 604, 728, 542, and 467 nm in a controlled greenhouse environment. Poona and Ismail [44] selected wavebands located across VIS, red edge, NIR, and SWIR regions to detect Fusarium circinatum infection in Pinus radiata seedlings at the asymptomatic stage. The study concluded that random forest (RF) is a good machine learning (ML) classifier to discriminate disease infection from spectral bands. Heim et al. [49] also used RF to differentiate myrtle rust-infected lemon myrtle plants and achieved an overall accuracy of 90%. The spectral wavebands (545, 555, 1505, and 2195 nm) were selected for discrimination. Considering hyperspectral systems’ slow data processing and expense, some studies have tried to find an alternative to hyperspectral imaging. A few studies have used the multispectral imaging system instead because of its faster data processing ability. Polder et al. [43] used an RGB-NIR-based multispectral system (range 500–750 nm) to detect TBV disease in tulips and achieved a classification accuracy of 92%. They employed a linear discriminant classifier along with R, G, B, and NIR features to segment the plant and the soil. The author used features such the fraction of red pixels, mean normalized red value, mean normalized green value, and ratio of contour pixels of spots to classify disease in tulips. Pethybridge et al. [50] assessed ray blight disease (caused by Phoma ligulicola) intensity using a hand-held multispectral radiometer with 485, 560, 660, 830, and 1650 nm spectral band sensors. The study used vegetation indices, including normalized difference vegetative index (NDVI), green normalized difference vegetative index (GNDVI), difference vegetative index, and renormalized difference vegetative index to assess ray blight disease. Thermal imaging has also been tested for stress detection in ornamental plants, a technique which depicts the spatial distribution of temperature differences in a captured scene by converting infrared (IR) radiation into visible images. Jafari et al. [51] classified asymptomatic powdery mildew and gray mold disease on roses by fusing thermal images with visible-range captured images. Valuable thermal features were extracted, and artificial neural networks (ANN) and SVM were used to classify healthy and disease-infected rose plants. The thermal features include maximum, minimum, median, mode, standard deviation, maximum difference in temperature, skewness, kurtosis, sum of squared errors, and so on. Studies have been conducted for disease stress detection using thermal imaging; however, this type of sensing is more practical for water stress detection. Before conducting the above experiment, Jafari et al. [52] attempted to classify Botrytis cinerea infection on rose using thermal spectra and radial-basis neural networks. Buitrago et al. [53] analyzed the infrared spectra of plants for water stress detection and concluded that spectral changes in plant regions had a direct connection with the microstructure and biochemistry of leaves. Stress detection technologies are widely used in other crop industries, especially for agronomic crops (such as corn and soybean) and tree fruits (such as apple and citrus), but very few experiments have been conducted for ornamental crops (mostly in the floriculture industry). Very limited research, almost no studies, have been conducted for the woody ornamental industry. A few studies have been conducted to detect stress using RGB sensors because RGB cameras do not require deep technical knowledge to operate or use. Spectral sensors are necessary to detect stress at an asymptomatic or early stage. Spectral sensors have a huge potential for the ornamental industry, but not much progress has been previously reported. Currently, UAVs are very popular for crop stress detection and monitoring, but the applications of these systems are also very limited for the ornamental crop industry. De Castro et al. [54] used a UAV system to detect water stress in Cornus, Hydrangea, Spiraea, Buddleia and Physocarpus, and the results of this study show promise. The ornamental industry can benefit from using UAV-based sensing technologies for the timely detection and monitoring of stresses to enhance crop production. Table 2. Summary of studies reported for plant stress detection.    2.3. Smart Spraying Management of different pests and diseases is essential to ensure high quality ornamental nursery crop production meeting the market’s requirements [55]. Traditional management techniques include pruning the infected branches, removing dead or infected plants, monitoring diseases, trapping insects, growing pest-resistant cultivars, and pesticide applications [56]. Foliar pesticide application is the most effective method for preventing pest infestations and ensuring healthy and unblemished nursery plants [57]. In the United States, the greenhouse and nursery industries use about 1.3 million kg of pesticides every year, saving billions worth of crops [58]. Conventionally, radial air-assisted sprayers are the most used spray equipment for pesticide application in ornamental nurseries [59]. These sprayers apply pesticides to the entire field regardless of the plant structure, plant growth stage, and absence of plants in rows, thus, resulting in under- or over-spraying [60] as well as contaminating the environment, wasting pesticides, and increasing production cost [61]. This problem is more critical for the nursery industry, as there is great diversity in canopy structures and densities found in nursery crops. In field nursery production, it is a common practice that trees of different ages and cultivars are planted in the same row. The traditional sprayers cannot adjust sprayer settings to match the target tree requirements, reducing application efficiency. One way to improve spraying efficiency is to use sensing technologies to identify target trees for precise spraying applications, also referred to as smart/variable-rate-intelligent spraying (Figure 4). Figure 4. A schematic of a light detection and ranging (LiDAR)-guided variable-rate spraying system. Smart spraying is defined as the precise application of pesticides, performed by controlling the spray output of each nozzle based on the presence, structure, and canopy density of plants as obtained from sensors such as ultrasound, laser, and cameras [18]. In recent years, significant research has been conducted to develop smart spraying systems for the nursery industry. Different sensors, such as ultrasonic and laser, have been utilized to measure the canopy parameters for intelligent spraying in nursery crops. The summary of the reviewed studies is presented in Table 3. The initial efforts for smart nursery spraying were reported back in 2010 by a team of scientists from the United States [62]. The authors developed two precision sprayer prototypes: a hydraulic boom sprayer with an ultrasonic sensor for small narrow trees such as liners and an air-assisted sprayer with a laser scanner for other ornamental nursery species. The authors compared the spray consumption between a sensor-based sprayer and a conventional air blast sprayer at three growing stages and four travel speeds (3.2, 4.8, 6.4, and 8.0 km/h). The sensor-based air-assisted sprayer applied 70%, 66%, and 52% fewer chemicals at different growth stages than conventional spraying. The results also reported a uniform spray deposit and coverage regardless of changes in the canopy size and travel speed. Jeon and Zhu [63] developed an ultrasonic-sensed real-time variable-rate vertical boom sprayer for nursery liners. The sprayer consisted of two booms with five pairs of equally spaced nozzles, with the ultrasonic sensor mounted 0.35 m ahead of the nozzles. Field tests were conducted for six different liner species at travel speeds from 3.2 to 8.0 km/h. The spray nozzles were triggered successfully from 4.5 to 12.5 cm ahead of the target, and the effects of travel speed on mean spray coverage and deposit were insignificant. Following this work, a study for the same precision sprayer was reported for performance evaluation based on spray coverage, deposit, and droplet density compared to conventional ones for all six-liner cultivars [64]. The reported results suggest that the spray coverage, deposit, and droplet density were lower in the sensor-based sprayer, and the spray volume was reduced by 86.4% compared to the conventional sprayer. Laser sensing is another technology used for precision spraying for many tree crops. A few studies have been reported that utilize laser scanning for smart spraying applications in nurseries. Chen et al. [57] developed a variable-rate air-assisted sprayer using a laser scanner. The authors reported that the spray coverage differences inside the canopies were not statistically significant at 3.2 and 6.4 km/h travel speeds. Liu et al. [65] used a laser scanner to develop an intelligent variable-rate air-assisted sprayer and tested the system in a commercial nursery and grapevine orchard. The authors reported that the new sprayer reduced chemical usage by more than 50% compared to the conventional sprayer at a travel speed of 3.2 to 8.0 km/h. Shen et al. [66] developed an air-assisted laser-guided sprayer for Japanese maple nursery trees. The new sprayer consisted of a 270° radial-range laser scanner, embedded controller, and pulse-width-modulated (PWM) nozzles. The authors reported an accurate measurement of different trees and control of nozzles to match trees independently. The spray usage was reduced by 12 to 43%, compared to the conventional spraying. In addition, a few studies have been reported for field validation of precision sprayers to control different diseases. Zhu et al. [59] validated the laser-guided air-assisted sprayer and reported a chemical saving of about 36% and 30% in the Prairifire crabapple and Honey locust nurseries, respectively. Chen et al. [67] also conducted a performance comparison of laser-guided air-assisted sprayers with conventional sprayers in commercial nurseries with different test plants. The author reported 56% and 52% chemical savings for two nurseries. Similarly, a few other studies have compared the performance of smart laser-guided sprayers with conventional sprayers and reported promising results for effective disease control in different nursery crops [61,68]. Table 3. Summary of studies reported for smart nursery spraying.   Smart spraying for nursery crops using different sensing technologies, mainly ultrasonic and laser, has been reported in the last decade. Ultrasonic and laser sensors were integrated with conventional sprayers to detect the target (e.g., canopies). Although ultrasonic sensor-based sprayers exhibit significant chemical savings, their accuracy varies with temperature, humidity, and detection distance [57]. On the other hand, laser sensors are less influenced by weather conditions when detecting and measuring target characteristics [69]. Moreover, the nursery industry encounters several unique challenges, such as the lack of crop uniformity, varying shapes, sizes, growth patterns, and harvest schedules. Most existing sprayers have been developed for the orchard environment [59]; modifications may be required to make them usable for ornamental nursery crop production. Another challenge for the ornamental industry is its high aesthetic thresholds allowing for no visible infections. Thus, efforts are required to develop a smart spraying system based on the requirements of the nursery industry. 2.4. Plant Biometrics and Identification Information on plant physiology and responses to biotic/abiotic stresses are critical to determine the management practices required to improve productivity and sustainability in the nursery industry. Plant biometry (e.g., structural information) can assist in understanding the plant’s growth differences in diverse environments [70]. Cultivar identification of nursery plants is also important for breeding, reproduction, and cultivation [71]. Plant biometry is a classification system that distinguishes a plant by defining its authenticity using physiological characteristics. The defined biometric for an individual plant should be universal, distinctive, permanent, and collectible [72]. Plant identification, inspection, and a precise count of each cultivar’s number and size distribution are essential for nursery management and efficiently marketing the trees [73] (Figure 5). Figure 5. A schematic of a UAV-based tree canopy characteristics measurement system. Different sensors, including cameras and LiDAR, have been utilized for nursery plant biometrics. The summary of the reviewed studies is presented in Table 4. The research for nursery plant identification using camera imaging systems started in the 1990s. Shearer and Holmes [74] used a camera vision system to identify tree species in the nursery. The study used color co-occurrence matrices derived from intensity, saturation, and hue to identify seven common containerized nursery plants. A total of 33 texture features were used for the analysis, and the reported classification accuracy was 91%. She et al. [75] developed a high-resolution imaging system to classify containerized Perennial peanut and Fire chief arborvitae plants for counting. he authors found that the classification accuracy of plants with flowers was higher (97%) than those without flowers (96%). Leiva et al. [76] developed an unmanned aircraft system (UAS)-based imaging system for counting container-grown Fire Chief arborvitae. The author developed a custom counting algorithm and tested it on different backgrounds, including gravel and black fabric. The reported results indicated counting errors of 8% and 2% for gravel and black fabric backgrounds, respectively. In another study, the authors used a depth camera for height measurements of nursery plants [77]. The authors implemented Ghostnet–YoloV4 Network for measuring height and counting different nursery plants, including spruce, Mongolian scotch pine, and Manchurian ash. They achieved an accuracy of more than 92% for measurement and counting. Gini et al. [78] used a UAS-based multispectral imaging system to classify eleven nursery plant species. The author implemented multiple grey level co-occurrence matrix algorithms to perform textural analysis of acquired images. A principal component analysis was used after feature extraction, achieving a classification accuracy of 87% for the selected plants. Likewise, a few studies have reported the application of LiDAR sensors to identify nursery plants. Weiss et al. [79] developed a method for identifying nursery plant species using a LiDAR sensor and supervised machine learning. The author used multiple machine learning classifiers and 83 features to identify six containerized nursery plant species, and achieved an accuracy of more than 98%. Similarly, LiDAR and light curtain sensors were used to develop a stem detection and classification system for almond nursery plants [73]. The authors developed a custom segmentation and thresholding algorithm, and the reported detection accuracies with the LiDAR and light curtain sensors were 95.7% and 99.48%, respectively. The success rates for dead/alive plant detection for the LiDAR and light curtain sensors were 93.75% and 94.16%, respectively. Additionally, a few other studies have reported the application of machine vision approaches using different machine learning and deep learning methodologies for detecting and classifying different flower nurseries [71,80,81,82,83,84]. Table 4. Summary of studies reported for plant biometric measurements. Nursery crop management is time-consuming and labor-intensive, bringing a great need for automation, especially for large nursery production areas. Sensing-based plant biometrics, identification, and recognition are promising but challenging tasks. The rapid advancements in sensing, computation, artificial Intelligence (AI), and data analytics have allowed more detailed investigations in this domain. Research has been reported to identify tree species for management operations and counting plants for inventory control using different types of sensors, including RGB, multispectral, LiDAR, etc. A few recent studies have utilized state-of-art deep learning techniques for nursery plant classification; however, more efforts are needed to facilitate the growers’ use of such techniques for the profitability and sustainability of the nursery industry. 2.5. Other Significant Works The economics of production practices associated with fertilizer inputs, pest control needs, and labor requirements affect the nursery industry. Most nursery production operations are labor intensive. According to Gunjal et al. [85], labor accounts for 70% of the costs for nursery production. Though a few operations in nursery production have been mechanized, many others have not been automated. Advanced sensing and mechanization/automation could reduce resource consumption and labor dependence [73]. In this context, the ornamental nursery industry has witnessed some progress in different sensing, automation, and robotic applications. Table 5 presents the summary of works related to other sensing and automation applications for nursery crop production. Li et al. [86] developed a trimming robot for ornamental plants. The design includes a knife system and a rotary base, allowing the knife to rotate 360 degrees to cut the plants into the desired shape. The robot was tested for five different nursery plant species (Aglaia odorata, Murraya exotica, Camellia oleifera, Osmanthus fragrans, and Radermachera sinica), and results indicated that the overall performance was above 93% with the time taken as 8.89 s. Zhang et al. [87] developed a path-planning scheme for a watering robot for containerized ornamental nursery plants. The authors optimized the robot’s path planning using a genetic algorithm with neighbor exchanging to test different watering strategies, and achieved promising results in terms of water savings. Sharma and Borse [88] developed an autonomous mobile robot to carry out different production operations in the nursery. The robot featured multiple sensor modules, including camera and climate monitoring, to perform real-time growth monitoring, disease detection, and the spraying of fertilizer, pesticide, and water. The platform was also equipped with a Zigbee communication framework to transmit the sensed data to the central control system. The system achieved the desired results for disease detection and growth monitoring; however, no technical details are provided. Similarly, a conceptual design of a cable-driven parallel robot (CDPR) to perform different operations, including seeding, weeding, and nutrition monitoring for plant nurseries has been presented [89]. The authors performed the operational and path planning simulation to execute seeding and weeding operations. Additionally, a pretrained VGG16 model was used for weed identification, and results showed promise, with an accuracy of 96.29% achieved during testing. Despite some progress, the status of research-based findings for robotic applications in the nursery industry lags far behind its contemporary industries. Table 5. Summary of works related to nursery production in other remaining areas. 3. Future Prospects/Directions 3.1. Advanced Camera Sensor Applications 3.1.1. ToF, LiDAR, and 3D Sensors Applications Advanced sensing technologies, such as depth cameras, time-of-flight (ToF) cameras, and multispectral and hyperspectral cameras, have been widely used in different agricultural applications. Kim et al. [90] implemented a binocular stereo-vision camera incorporated with a single-board computer for estimating crop height. Authors successfully estimated heights for Chinese cabbage, potato, sesame, radish, and soybean crops with a less than 5% of error in field conditions. Wang et al. [91] developed a ground-based remote imaging system comprised of an ultrasonic sensor, a LiDAR sensor, a Kinect camera, an imaging array of four digital cameras, and a custom-developed gimble and camera, respectively, for estimating sorghum plant height at plot level. The author observed that an ultrasonic sensor, a LiDAR sensor, and a Kinect camera resulted in strong correlations (r ≥ 0.90) between automatic and manual measurements for plant height estimation. The study concluded that the ground-based image acquisition system resulted in a comparatively higher correlation between automatic and manual measurements compared to the remote imaging system. They recommended LiDAR combined with high-resolution camera array technology, which can be an ideal methodology for measuring plant height effectively. The 3D/Depth cameras have found widespread usage in agriculture for a variety of purposes, including but not limited to yield estimation [92], plant phenotyping [93], and disease detection [94]. A vision-based under-canopy navigation and mapping system for corn and sorghum was developed by Gai et al. [95] using a ToF camera combined with a field robot, PhenoBot 3.0. They implemented linear programming techniques and developed a novel algorithm for reliable crop row detection and navigation. The developed system achieved mean absolute errors (MAE) of 3.4 cm and 3.6 cm in fields of corn and sorghum, respectively. Similarly, Gongal et al. [96] fused a color charge coupled device (CCD) camera and a ToF sensor to estimate apple fruit size under controlled lighting conditions. The developed system estimated apple fruit size with an accuracy of 84.8% based on pixel size. A few of the most significant applications for ToF cameras in agriculture are plant height estimation [97,98], 3D reconstruction of the plant [99], 3D plant morphology [100], palm bunch grading [101], and so on. 3.1.2. Spectral Sensor Applications Cao et al. [102] developed a nitrogen monitoring system for tea plants using multispectral (wavelengths: 475 nm, 560 nm, 668 nm, 717 nm, and 840 nm) and hyperspectral imaging systems. They fused data after preprocessing, which included multispectral image registration, calibration, information extraction and selection, and hyperspectral wavelength selection. After filtering the fused data, they feed them to regression models, including PLS regression, random forest regression (RFR), and support vector machine regression (SVR), to predict the nitrogen content of tea leaves. The support vector machine regression outperformed other models and achieved R2 (coefficient of determination) and root mean square error values of ~0.92 and ~0.06, respectively. Another researcher, Chandel et al. [103], also used simple linear regression models (LRs) to experiment on characterizing Alfalfa (Medicago sativa L.) crop vigor and yield by combining multispectral (465–860 nm) and thermal infrared (11,000 ± 3000 nm) image data collected from unmanned aerial vehicles. The model MLR-4 outperformed other models and achieved an R2 of 0.64. The aforementioned studies offer compelling evidence of increased success rates for agricultural applications of cutting-edge sensors, which suggest prospective uses for ornamental nursery crops. The advanced sensors can operate successfully in both indoor and outdoor environments. Therefore, in the future, automated systems for ornamental nursery corps can be developed using sophisticated camera sensors like 3D or depth cameras, ToF, multispectral, and hyperspectral. 3.2. Enhanced Deep Network Applications Due to the extraordinary ability to generate synthetic datasets with the same properties as training datasets, advanced computer vision-based techniques such as generative adversarial networks (GANs) and transformers are overtaking photometric and geometric-based augmentation approaches in a variety of agricultural problems. Abbas et al. [104] proposed a tomato plant disease detection system using a publicly available plant village tomato leaf dataset. The authors augmented the dataset using a conditional generative adversarial network (C-GAN) and fed the data to a pre-trained DenseNet network. The network successfully predicted tomato leaf diseases from healthy leaves and achieved an accuracy of 97.11%. The augmentation of the tomato leaf dataset improved the DenseNet network’s prediction by 2.77% compared to the accuracy of the original plant village tomato leaf dataset. Xiao et al. [105] implemented Texture Reconstruction Loss CycleGAN (TRL-GAN) to produce phenotypic data for the citrus greening disease and improve classification networks for the detection of diseased leaves. The authors observed that the TRL-GAN based method improved accuracy by 2.76% compared to the baseline model and 1.04% compared to the traditional augmentation methods (rotation and stretching). Zhang et al. [106] combined hyperspectral imaging with generative adversarial networks (DCGAN, CGAN) to expand the original dataset. They also observed that expansion of the dataset using GANs would improve the accuracy of k-nearest neighbor (kNN), SVM, and RF for haploid maize kernel classification by 12%, 20%, and 12%, respectively, compared to baseline models. Data enlargement using GANs allows for the development of detection, classification, and prediction models with less data on ornamental nursery crop images, which increases the model’s resilience in varying conditions and improves performances or accuracies. The augmented data can be incredibly useful when developing machine vision-based systems for nursery crops, such as leaf classification and disease assessment systems. Robots may be trained in a simulated environment using the data produced by GANs. 3.3. Edge-AI Applications Embedded platforms combined with hardware accelerators and artificial intelligence-based sensing technology, called Edge Artificial Intelligence (Edge-AI), have made quick responses with low latency possible over cloud-based solutions. This technique has been adopted in different agricultural applications in recent years. Mazzia et al. [107] developed a real-time apple detection system using an Edge-AI technology. They implemented YOLOv3-Tiny algorithms on three different embedded platforms, including Raspberry Pi 3 B+ with Intel Movidius Neural Computing Stick (NCS), Nvidia’s Jetson Nano and Jetson AGX Xavier, and successfully detected apples in an orchard. Their system achieved an accuracy of 83.64% with a data processing speed up to 30 frames per second (fps) in complex situations. Zhang et al. [108] implemented YOLOv4-Tiny networks combined with improved cross stage partial networks (CSPNet) in the backbone for strawberry detection and implemented a developed model on the embedded platform Jetson Nano (NVIDIA Corporation, Santa Clara, CA, USA). Their optimized model (RTSD-Net) with TensorRT achieved about 25.20 fps and performed 15% faster than the original YOLOv4-tiny model on Jetson Nano without significant loss of accuracy. Other promising applications of Edge-AI are air temperature forecasting [109], environment monitoring [110], autonomous navigation systems [111] and so on. Edge-AI technology can potentially be applied for weeding, spraying, and robot navigation in ornament nursery crop production. Weed maps generated by UAVs may be combined into autonomous robots for site-specific weed management and pesticide applications in the field. Embedded hardwire (Raspberry Pi, Jetson Nano, and Jetson TX2) paired with sensors (color camera, depth camera), and AI may be implemented to develop Edge-AI technology for ornamental nursery crops. Vision-based robots using Edge-AI technology can be an aid to robot navigation for accomplishing site-specific applications in nursery crops. 3.4. Radio Frequency Identification Tagging Applications Radio frequency identification (RFID) technology has become popular in different fields of agriculture, including soil environment monitoring, soil moisture monitoring, soil solarization, and automation in irrigation. Deng et al. [112] designed and developed a novel system that integrates an RFID sensor with LoRa to provide a low-cost, low-power, and efficient soil environment monitoring solution. The authors embedded RFID tags at 60 cm into the soil; the tags can communicate with the monitoring center through radio communication (LoRa) placed in the patrol car. Their system would be able to establish communication within a range of 1.3 m without compromising relative measurement errors (temperature: 1.5% and soil moisture content: 1.0%). The study achieved a higher communication rate (above 90%) at a patrol speed of 33 kmh−1. Luvisi et al. [113] developed a system that monitors different types of soil solarization (sandy, loam, and clay soils) using an RFID sensor and biodegradable films. They placed soil sensors at different depths (5 and 10 cm) along with a soil profile at different soil moisture holding capacities (10%, 50%, and 90%) and measured the effect of soil solarization treatment. In the second and third weeks of treatment, they found that the maximum soil temperature at depths of 5 and 10 cm increased to 9–13 °C and 11–14 °C, respectively. They also found that the method was 90% reliable. Vellidis et al. [114] implemented soil moisture sensors (Watermark® granular resistive type) and thermocouple temperature sensors coupled with RFID tags (WhereNet®, Santa Clara, CA, USA) for developing sensor nodes to automate irrigation schedules for cotton crops. The nodes were connected to a laptop computer via wireless communication. The developed system contained an array of sensors, and data obtained from the sensors could assist in decision-making and scheduling irrigation for the cotton field. Several researchers also contributed to RFID-based soil moisture sensor developments [115,116,117,118,119]. RFID-based sensors also have other applications in agriculture, including tracking plants in pots in greenhouses [120], tracing food quality [121], and monitoring livestock [122]. The above studies and their success rates clearly show the potential of using RFID-based sensors in ornamental nursery crop applications. The potential applications of RFID-based sensors for nursery crops include soil environment monitoring, soil solarization, and automating irrigation scheduling, in indoor or field conditions. The RFID tags can be used in conjunction with soil monitoring sensors such as soil, moisture, soil micronutrient, gas, etc. to build sensor nodes and receive in-field data through wireless communications. Readings from sensor nodes may be used with machine learning and deep learning to make decisions in various field management operations. 3.5. Integrated Robotics Applications Robots integrated with computer vision have been widely adopted in many areas of agriculture, such as plant detection and mapping, fruit detection and localizations, robot-based harvesting, navigation, and obstacle detection systems. Weiss and Biber [123] developed a ground-based robot for maize plant recognition, mapping, and navigation using a 3D LiDAR sensor-based micro-electro-mechanical system (FX6 3D LiDAR). The robot was constructed using modeled artificial maize plants and tested on a small corn field. The designed robot achieved detection and mapping accuracy of around 60%–70%. They measured a greater localization deviation in the direction of the row, measuring 1–2 cm. Ge et al. [124] developed a strawberry fruit localization method using a strawberry harvesting robot with an RGB-D camera. The authors implemented a convolutional neural network (i.e., Mask-RCNN) on RGB images for strawberry fruit segmentation and combined depth values to obtain 3D points of fruits. The 3D point was then used to obtain fruit localization using the shape completion method. The system achieved a minimum center deviation of 6.9 mm between ground truths and automated measurements. Skoczeń et al. [125] also proposed a similar approach to develop an automatic obstacle-detection robot. They implemented an RGB-D camera (Intel RealSense D435i) for robot vision, reached obstacle segmentation accuracy of 98.11%, and obtained a depth measurement error of 38 cm. Ji et al. [126] developed a machine vision algorithm for a green pepper harvesting robot. The contrast values of images obtained by the camera (MX808) for various light conditions (normal, weak, and strong light) were then increased to make the green pepper stand out from the background leaf. The energy-driven sampling (SEEDS) algorithm is then fed the improved images to build super pixel blocks. The manifold ranking (MR) algorithm, the CART classifier, and the conditional random field (CRF) algorithm were used to recognize green pepper from super pixel blocks, followed by morphological processing. Classifiers were evaluated on 500 images obtained from different lighting conditions. The algorithm manifold ranking outperformed other classifiers and achieved an accuracy of 83.6%; it took 116 milliseconds to run the entire evaluation on Intel Core (TM) i5-4210U CPU (2.80 GHz, 8 GB). Gai et al. [127] developed a cherry fruit detection system using a high-resolution Sony DSC-HX400 camera combined with a YOLO-V4 Dense Model network. The study compared the developed algorithm’s accuracy with the base model, YOLO-V3-dense, and YOLO-V4 and observed an improved detection rate (F1 scores: 94.70%). YOLO-V4 Dense Model took 0.467 s on an Intel Core (TM) i7-7700 CPU (3.60 GHz, 4 GB) with a Tesla V100 GPU for processing an image of 1280 by 800 pixels. They found robotic intelligent picking is possible using the developed system. Jia et al. [128] also developed a robot vision using a high-resolution camera (6000 × 4000 pixel) for an apple harvesting robot using an optimized Mask R-CNN. The developed system achieved a high rate of detection (precision: 97.31%; recall: 95.70%). The development of robot vision using high-resolution camera sensors combined with deep learning techniques can be adopted to develop ornamental crop management robots. Applications, such as spraying, weeding, soil sampling, and digging could be effectively solved, enabling different operations in nursery crops. Robot vision combined with machine and deep learning may also be implemented in nurseries for plant counting, stem counting, and other essential tasks. 4. Discussion and Conclusions The ornamental crop industry in the U.S. depends largely on agricultural workers. Sensing and automation technologies offer a huge potential to reduce labor dependency and ensure the efficient use of resources required by the ornamental industry. In turn, the information in this article can aid the nursery industry in knowing about the specific area where technological development takes place and what those technologies are, and in considering what types of sensors, algorithms and tools are advantageous to develop effective technologies in different production operations. Current sensing and automation technology usage varies by production operations. For instance, smart irrigation has primarily relied on soil moisture sensors, and stress detection has largely depended on camera sensors. Despite the fact that not many studies have used IoT or Edge-AI-based IoT systems, these could be potential technologies for automating irrigation operations for ornamental crops. The Edge-AI-based systems and AI-of-things (AIoT) are relatively new concepts in agricultural applications, and successes in other cropping systems have shown promise for the ornamental nursery industry. Similar to irrigation, a very limited number of studies have been conducted for ornamental plant stress detection. One important fact regarding stresses is that they have to be detected early to minimize their effect on crops. Spectral cameras, including hyperspectral and multispectral devices, are the two sensors currently being used to detect stresses at the asymptomatic stage. However, the major challenge of detecting plant stresses is to detect them in real-time field conditions. Researchers have been trying to address challenges such as illumination variations, data processing speed, and environmental factors to make a viable system for real-time applications. More efforts are required, though, especially for the hyperspectral system, due to its slow data processing issues. Fluorescence sensors are another spectral technology that has not been explored much for ornamental crops, one which can provide improved spectroscopy data and can be useful for early plant stress detection. LiDAR is one of the powerful tools that can be used to accurately measure plant biometric information (plant height, width, canopy volume and density, etc.) to develop a smart or variable-rate spraying system. However, this tool cannot be used for spot spraying operations for disease management because the LiDAR sensor can only provide point cloud information (unlike cameras, it does not provide any color information). Integrated LiDAR and camera systems could potentially be tools for smart spraying systems for ornamental nursery crop production. The advantages and disadvantages of different sensors are presented in Table 6. Table 6. Advantages and disadvantages of different sensors for ornamental crops. Surprisingly, very few applications have been noticed for UAVs in ornamental crops, despite extensive implications these days in the agronomic, tree fruit and row crops. The low manufacturing cost and fast operation speed have opened up further research opportunities for UAVs. UAVs are becoming an essential part of remote sensing and can be an effective tool for ornamental plant stress detection and monitoring crop growth and development. The UAVs bring advantages over ground-based systems, such as their flexibility in capturing ultra-high spatial and temporal resolution data at any terrain conditions, and they require less time to collect data. However, developing manipulation systems for UAVs that can act with precision in fields is a challenging task requiring extensive investigations. The coordination between UAVs and ground-based systems has been receiving increasing attention in recent years, and has the potential to benefit the ornamental crop industry for site-specific management. Calibrating sensors is essential to reduce variability when multiple sensors are involved in a particular crop management operation. Recent advances in deep learning models (e.g., CNNs, GANs, transformers) have contributed significantly to different industries, including agriculture, but ornamental crops remain at the bottom user of these impressive innovations. These models can help predict stress, pest pressure, growth, yield, etc. RFID, a new crop tracking technology, can increase production operations’ efficacy and help nurseries to reduce the burden for growers or laborers by automating the inspections and recording accurate ornamental crop data instantly. Agricultural robotics is another critical area that can benefit the ornamental crop industry enormously. Currently, the agricultural workforce conducts most production operations, such as planting, pruning/shape forming, weeding, disease monitoring, and harvesting. These operations are vastly labor-intensive and cost a large portion of production expenses. Autonomous robotic systems can replace the humans conducting these operations. The systems will reduce time and production expenses in the long run. The ornamental industry lacks automation/robotic technologies; therefore, significant research needs to be done on these topics to develop some implementable robotic systems. As the majority of the ornamental crop farms are not so large compared to other major cropping industries, adopting advanced sensing and automation technologies would be a major challenge due to the initial high investment. Integrated multipurpose automated technologies will be helpful for this purpose. For instance, when a particular automated system can work for multiple operations (e.g., planting, pruning, and harvesting) for ornamental crops by replacing a few parts of the system, growers would be interested in buying and adopting those multipurpose systems. Researchers and manufacturers need to consider these points while working on or developing technologies for the ornamental nursery crop industry. Although not much progress in sensing and automation technologies has been observed for ornamental nursery crop production, a few mechanized systems are available for commercial scales. These include mixing systems to mix substrate or soil, potting systems to fill containers, tray filling systems to fill trays, planters to plant nursery liners in containers, seeding systems to sow and space out seeds on pots or containers, etc. Pack Manufacturing (http://packmfg.com/) (Pack Manufacturing Inc., McMinnville, TN, USA) is a leading company in the sale of these mechanized systems. A vital challenge in technology development for ornamental nursery crops is the substantial number of available plant species. Various ornamental plants have different morphologies, characteristics, canopy structures, and growth requirements. It is necessary to understand the types of plants grown and their production requirements to align the sensing and automation technologies with the production needs to facilitate industry operations. Author Contributions All authors contributed equally to this article. All authors have read and agreed to the published version of the manuscript. Funding This study was majorly supported by the United States Department of Agriculture (USDA)’s National Institute of Food and Agriculture (NIFA) Research Capacity Fund (Evans-Allen) under NIFA Accession No. 7003739 and Organizational Project No. TENX2203-CCOCP and partially supported by the USDA’s NIFA Federal Appropriations under TEX09954 and Accession No. 7002248. Conflicts of Interest The authors declare no conflict of interest. References USDA. U.S. Horticulture in 2014 (Publication ACH12-33); United States Department of Agriculture: Beltsville, MD, USA. Available online: https://www.agcensus.usda.gov/Publications/2012/Online_Resources/Highlights/Horticulture/Census_of_Horticulture_Highlights.pdf (accessed on 21 November 2022). Lea-Cox, J.D.; Zhao, C.; Ross, D.S.; Bilderback, T.E.; Harris, J.R.; Day, S.D.; Hong, C.; Yeager, T.H.; Beeson, R.C.; Bauerle, W.L.; et al. A Nursery and Greenhouse Online Knowledge Center: Learning Opportunities for Sustainable Practice. HortTechnology 2010, 20, 509–517. [Google Scholar] [CrossRef] Majsztrik, J.C.; Fernandez, R.T.; Fisher, P.R.; Hitchcock, D.R.; Lea-Cox, J.; Owen, J.S.; Oki, L.R.; White, S.A. Water Use and Treatment in Container-Grown Specialty Crop Production: A Review. Water. Air. Soil Pollut. 2017, 228, 151. [Google Scholar] [CrossRef] [PubMed] Majsztrik, J.; Lichtenberg, E.; Saavoss, M. Ornamental Grower Perceptions of Wireless Irrigation Sensor Networks: Results from a National Survey. HortTechnology 2013, 23, 775–782. [Google Scholar] [CrossRef] Wheeler, W.D.; Thomas, P.; van Iersel, M.; Chappell, M. Implementation of Sensor-Based Automated Irrigation in Commercial Floriculture Production: A Case Study. HortTechnology 2018, 28, 719–727. [Google Scholar] [CrossRef] Rihn, A.L.; Velandia, M.; Warner, L.A.; Fulcher, A.; Schexnayder, S.; LeBude, A. Factors Correlated with the Propensity to Use Automation and Mechanization by the US Nursery Industry. Agribusiness 2022, 39, 110–130. [Google Scholar] [CrossRef] USDA ERS. Farm Labor. Available online: https://www.ers.usda.gov/topics/farm-economy/farm-labor/ (accessed on 20 November 2022). McClellan, M. Don’t Wait, Automate. Available online: https://www.nurserymag.com/article/five-tips-automation/ (accessed on 20 November 2022). Silwal, A.; Davidson, J.R.; Karkee, M.; Mo, C.; Zhang, Q.; Lewis, K. Design, Integration, and Field Evaluation of a Robotic Apple Harvester. J. Field Robot. 2017, 34, 1140–1159. [Google Scholar] [CrossRef] Liu, B.; Ding, Z.; Tian, L.; He, D.; Li, S.; Wang, H. Grape Leaf Disease Identification Using Improved Deep Convolutional Neural Networks. Front. Plant Sci. 2020, 11, 1082. [Google Scholar] [CrossRef] Xiong, Y.; Peng, C.; Grimstad, L.; From, P.J.; Isler, V. Development and Field Evaluation of a Strawberry Harvesting Robot with a Cable-Driven Gripper. Comput. Electron. Agric. 2019, 157, 392–402. [Google Scholar] [CrossRef] Ye, H.; Huang, W.; Huang, S.; Cui, B.; Dong, Y.; Guo, A.; Ren, Y.; Jin, Y. Recognition of Banana Fusarium Wilt Based on UAV Remote Sensing. Remote Sens. 2020, 12, 938. [Google Scholar] [CrossRef] Gajjar, R.; Gajjar, N.; Thakor, V.J.; Patel, N.P.; Ruparelia, S. Real-Time Detection and Identification of Plant Leaf Diseases Using Convolutional Neural Networks on an Embedded Platform. Vis. Comput. 2022, 38, 2923–2938. [Google Scholar] [CrossRef] Lehnert, C.; English, A.; Mccool, C.; Tow, A.W.; Perez, T. Autonomous Sweet Pepper Harvesting for Protected Cropping Systems. IEEE Robot. Autom. Lett. 2017, 2, 872–879. [Google Scholar] [CrossRef] Birrell, S.; Hughes, J.; Cai, J.Y.; Iida, F. A Field-Tested Robotic Harvesting System for Iceberg Lettuce. J. Field Robot. 2020, 37, 225–245. [Google Scholar] [CrossRef] [PubMed] Yasukawa, S.; Li, B.; Sonoda, T.; Ishii, K. Development of a Tomato Harvesting Robot. Proc. Int. Conf. Artif. Life Robot. 2017, 22, 408–411. [Google Scholar] [CrossRef] Amatya, S.; Karkee, M.; Gongal, A.; Zhang, Q.; Whiting, M.D. Detection of Cherry Tree Branches with Full Foliage in Planar Architecture for Automated Sweet-Cherry Harvesting. Biosyst. Eng. 2016, 146, 3–15. [Google Scholar] [CrossRef] Mahmud, M.S.; Zahid, A.; He, L.; Martin, P. Opportunities and Possibilities of Developing an Advanced Precision Spraying System for Tree Fruits. Sensors 2021, 21, 3262. [Google Scholar] [CrossRef] [PubMed] Lu, J.; Hu, J.; Zhao, G.; Mei, F.; Zhang, C. An In-Field Automatic Wheat Disease Diagnosis System. Comput. Electron. Agric. 2017, 142, 369–379. [Google Scholar] [CrossRef] Jiang, P.; Chen, Y.; Liu, B.; He, D.; Liang, C. Real-Time Detection of Apple Leaf Diseases Using Deep Learning Approach Based on Improved Convolutional Neural Networks. IEEE Access 2019, 7, 59069–59080. [Google Scholar] [CrossRef] Abdulridha, J.; Batuman, O.; Ampatzidis, Y. UAV-Based Remote Sensing Technique to Detect Citrus Canker Disease Utilizing Hyperspectral Imaging and Machine Learning. Remote Sens. 2019, 11, 1373. [Google Scholar] [CrossRef] Torres-Sánchez, J.; Peña, J.M.; de Castro, A.I.; López-Granados, F. Multi-Temporal Mapping of the Vegetation Fraction in Early-Season Wheat Fields Using Images from UAV. Comput. Electron. Agric. 2014, 103, 104–113. [Google Scholar] [CrossRef] Pearse, G.D.; Tan, A.Y.S.; Watt, M.S.; Franz, M.O.; Dash, J.P. Detecting and Mapping Tree Seedlings in UAV Imagery Using Convolutional Neural Networks and Field-Verified Data. ISPRS J. Photogramm. Remote Sens. 2020, 168, 156–169. [Google Scholar] [CrossRef] Zhang, C.; Atkinson, P.M.; George, C.; Wen, Z.; Diazgranados, M.; Gerard, F. Identifying and Mapping Individual Plants in a Highly Diverse High-Elevation Ecosystem Using UAV Imagery and Deep Learning. ISPRS J. Photogramm. Remote Sens. 2020, 169, 280–291. [Google Scholar] [CrossRef] Feng, A.; Zhou, J.; Vories, E.D.; Sudduth, K.A.; Zhang, M. Yield Estimation in Cotton Using UAV-Based Multi-Sensor Imagery. Biosyst. Eng. 2020, 193, 101–114. [Google Scholar] [CrossRef] Maja, J.M.J.; Robbins, J. Controlling Irrigation in a Container Nursery Using IoT. AIMS Agric. Food 2018, 3, 205–215. [Google Scholar] [CrossRef] You, A.; Parayil, N.; Krishna, J.G.; Bhattarai, U.; Sapkota, R.; Ahmed, D.; Whiting, M.; Karkee, M.; Grimm, C.M.; Davidson, J.R. An Autonomous Robot for Pruning Modern, Planar Fruit Trees. arXiv 2022, arXiv:220607201. [Google Scholar] Liu, B.; Tan, C.; Li, S.; He, J.; Wang, H. A Data Augmentation Method Based on Generative Adversarial Networks for Grape Leaf Disease Identification. IEEE Access 2020, 8, 102188–102198. [Google Scholar] [CrossRef] Lea-Cox, J.D.; Bauerle, W.L.; van Iersel, M.W.; Kantor, G.F.; Bauerle, T.L.; Lichtenberg, E.; King, D.M.; Crawford, L. Advancing Wireless Sensor Networks for Irrigation Management of Ornamental Crops: An Overview. HortTechnology 2013, 23, 717–724. [Google Scholar] [CrossRef] Cornejo, C.; Haman, D.Z.; Yeager, T.H. Evaluation of Soil Moisture Sensors, and Their Use to Control Irrigation Systems for Containers in the Nursery Industry; ASAE Paper No. 054056; ASAE: St. Joseph, MI, USA, 2005. [Google Scholar] [CrossRef] Lea-Cox, J.D.; Ristvey, A.G.; Kantor, G.F. Using Wireless Sensor Technology to Schedule Irrigations and Minimize Water Use in Nursery and Greenhouse Production Systems ©. Comb. Proc. Int. Plant Propagators Soc. 2008, 58, 512–518. [Google Scholar] Chappell, M.; Dove, S.K.; van Iersel, M.W.; Thomas, P.A.; Ruter, J. Implementation of Wireless Sensor Networks for Irrigation Control in Three Container Nurseries. HortTechnology 2013, 23, 747–753. [Google Scholar] [CrossRef] van Iersel, M.W.; Chappell, M.; Lea-Cox, J.D. Sensors for Improved Efficiency of Irrigation in Greenhouse and Nursery Production. HortTechnology 2013, 23, 735–746. [Google Scholar] [CrossRef] Wheeler, W.D.; Chappell, M.; van Iersel, M.; Thomas, P. Implementation of Soil Moisture Sensor Based Automated Irrigation in Woody Ornamental Production. J. Environ. Hortic. 2020, 38, 1–7. [Google Scholar] [CrossRef] Kim, J.; Chappell, M.; Van Iersel, M.W.; Lea-Cox, J.D. Wireless Sensors Networks for Optimization of Irrigation, Production, and Profit in Ornamental Production. Acta Hortic. 2014, 1037, 643–649. [Google Scholar] Coates, R.W.; Delwiche, M.J.; Broad, A.; Holler, M.; Evans, R.; Oki, L.; Dodge, L. Wireless Sensor Network for Precision Irrigation Control in Horticultural Crops; American Society of Agricultural and Biological Engineers: St. Joseph, MI, USA, 2012; Volume 3. [Google Scholar] Belayneh, B.E.; Lea-Cox, J.D.; Lichtenberg, E. Costs and Benefits of Implementing Sensor-Controlled Irrigation in a Commercial Pot-in-Pot Container Nursery. HortTechnology 2013, 23, 760–769. [Google Scholar] [CrossRef] [Green Version] Lea-Cox, J.D.; Belayneh, B.E. Implementation of Sensor-Controlled Decision Irrigation Scheduling in Pot-in-Pot Nursery Production. Acta Hortic. 2013, 1034, 93–100. [Google Scholar] [CrossRef] Manuel Banda-Chávez, J.; Pablo Serrano-Rubio, J.; Osvaldo Manjarrez-Carrillo, A.; Maria Rodriguez-Vidal, L.; Herrera-Guzman, R. Intelligent Wireless Sensor Network for Ornamental Plant Care. In Proceedings of the IECON 2018—44th Annual Conference of the IEEE Industrial Electronics Society, Washington, DC, USA, 21–23 October 2018; Volume 1. [Google Scholar] Beeson, R., Jr.; Brooks, J. Evaluation of a Model Based on Reference Crop Evapotranspiration (ETo) for Precision Irrigation Using Overhead Sprinklers during Nursery Production of Ligustrum Japonica. Proc. V Int. Symp. Irrig. Hortic. Crops 2006, 792, 85–90. [Google Scholar] Zubler, A.V.; Yoon, J.Y. Proximal Methods for Plant Stress Detection Using Optical Sensors and Machine Learning. Biosensors 2020, 10, 193. [Google Scholar] [CrossRef] Velázquez-López, N.; Sasaki, Y.; Nakano, K.; Mejía-Muñoz, J.M.; Kriuchkova, E.R. Detection of Powdery Mildew Disease on Rose Using Image Processing with Open CV. Rev. Chapingo Ser. Hortic. 2011, 17, 151–160. [Google Scholar] [CrossRef] Polder, G.; van der Heijden, G.W.A.M.; van Doorn, J.; Baltissen, T.A.H.M.C. Automatic detection of tulip breaking virus (TBV) in tulip fields using machine vision. Biosyst. Eng. 2014, 117, 35–42. [Google Scholar] [CrossRef] Poona, N.K.; Ismail, R. Using Boruta-Selected Spectroscopic Wavebands for the Asymptomatic Detection of Fusarium Circinatum Stress. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens. 2014, 7, 3764–3772. [Google Scholar] [CrossRef] Minaei, S.; Jafari, M.; Safaie, N. Design and Development of a Rose Plant Disease-Detection and Site-Specific Spraying System Based on a Combination of Infrared and Visible Images. J. Agric. Sci. Technol. 2018, 20, 23–36. [Google Scholar] Nuanmeesri, S. A Hybrid Deep Learning and Optimized Machine Learning Approach for Rose Leaf Disease Classification. Eng. Technol. Appl. Sci. Res. 2021, 11, 7678–7683. [Google Scholar] [CrossRef] Polder, G.; van der Heijden, G.W.A.M.; van Doorn, J.; Clevers, J.G.P.W.; van der Schoor, R.; Baltissen, A.H.M.C. Detection of the Tulip Breaking Virus (TBV) in Tulips Using Optical Sensors. Precis. Agric. 2010, 11, 397–412. [Google Scholar] [CrossRef] Polder, G.; Pekkeriet, E.; Snikkers, M. A Spectral Imaging System for Detection of Botrytis in Greenhouses. In Proceedings of the EFITA-WCCA-CIGR Conference “Sustainable Agriculture through ICT Innovation”, Turin, Italy, 24–27 June 2013. [Google Scholar] Heim, R.H.J.; Wright, I.J.; Allen, A.P.; Geedicke, I.; Oldeland, J. Developing a Spectral Disease Index for Myrtle Rust (Austropuccinia psidii). Plant Pathol. 2019, 68, 738–745. [Google Scholar] [CrossRef] Pethybridge, S.J.; Hay, F.; Esker, P.; Groom, T.; Wilson, C.; Nutter, F.W. Visual and Radiometric Assessments for Yield Losses Caused by Ray Blight in Pyrethrum. Crop Sci. 2008, 48, 343–352. [Google Scholar] [CrossRef] Jafari, M.; Minaei, S.; Safaie, N. Detection of Pre-Symptomatic Rose Powdery-Mildew and Gray-Mold Diseases Based on Thermal Vision. Infrared Phys. Technol. 2017, 85, 170–183. [Google Scholar] [CrossRef] Jafari, M.; Minaei, S.; Safaie, N.; Torkamani-Azar, F.; Sadeghi, M. Classification Using Radial-Basis Neural Networks Based on Thermographic Assessment of Botrytis Cinerea Infected Cut Rose Flowers Treated with Methyl Jasmonate. J. Crop Prot. 2016, 5, 591–602. [Google Scholar] [CrossRef] Buitrago, M.F.; Groen, T.A.; Hecker, C.A.; Skidmore, A.K. Changes in Thermal Infrared Spectra of Plants Caused by Temperature and Water Stress. ISPRS J. Photogramm. Remote. Sens. 2016, 111, 22–31. [Google Scholar] [CrossRef] de Castro, A.; Maja, J.M.; Owen, J.; Robbins, J.; Peña, J. Experimental Approach to Detect Water Stress in Ornamental Plants Using SUAS-Imagery. In Proceedings of the Autonomous Air and Ground Sensing Systems for Agricultural Optimization and Phenotyping III, Orlando, FL, USA, 16–17 April 2018; Volume 10664, pp. 178–188. [Google Scholar] Braman, S.; Chappell, M.; Chong, J.; Fulcher, A.; Gauthier, N.; Klingeman, W.; Knox, G.; LeBude, A.; Neal, J.; White, S.; et al. Pest Management Strategic Plan for Container and Field-Produced Nursery Crops: Revision 2015. In Proceedings of the Southern Nursery Integrated Pest Management Working Group (SNIPM), Mills River, NC, USA, 30–31 July 2009; Volume 236. [Google Scholar] Mizell, R.F.; Short, D.E. Integrated Pest Management in the Commercial Ornamental Nursery. 2015; Volume 8. Available online: https://site.caes.uga.edu/sehp/files/2020/03/UF-IPM-in-the-Commercial-Ornamental-Nursery.pdf (accessed on 20 November 2022). Chen, Y.; Zhu, H.; Ozkan, H.E. Development of a Variable-Rate Sprayer with Laser Scanning Sensor to Synchronize Spray Outputs to Tree Structures. Trans. ASABE 2012, 55, 773–781. [Google Scholar] [CrossRef] Hudson, W.G.; Garber, M.P.; Oetting, R.D.; Mizell, R.F.; Chase, A.R.; Bondari, K. Pest Management in the United States Greenhouse and Nursery Industry: V. Insect and Mite Control. HortTechnology 1996, 6, 216–221. [Google Scholar] [CrossRef] Zhu, H.; Rosetta, R.; Reding, M.E.; Zondag, R.H.; Ranger, C.M.; Canas, L.; Fulcher, A.; Derksen, R.C.; Ozkan, H.E.; Krause, C.R. Validation of a Laser-Guided Variable-Rate Sprayer for Managing Insects in Ornamental Nurseries. Trans. ASABE 2017, 60, 337–345. [Google Scholar] [CrossRef] Fox, R.D.; Derksen, R.C.; Zhu, H.; Brazee, R.D.; Svensson, S.A. A History of Air-Blast Sprayer Development and Future Prospects. Trans. ASABE 2008, 51, 405–410. [Google Scholar] [CrossRef] Chen, L.; Zhu, H.; Horst, L.; Wallhead, M.; Reding, M.; Fulcher, A. Management of Pest Insects and Plant Diseases in Fruit and Nursery Production with Laser-Guided Variable-Rate Sprayers. HortScience 2021, 56, 94–100. [Google Scholar] [CrossRef] Zhu, H.; Jeon, H.Y.; Gu, J.; Derksen, R.C.; Krause, C.R.; Ozkan, H.E.; Chen, Y.; Reding, M.E.; Ranger, C.M.; Cañas, L.; et al. Development of Two Intelligent Spray Systems for Ornamental Nurseries©. In Proceedings of the International Plant Propagators’ Society, Miami, FL, USA, 1 August 2010; Volume 60, p. 322. [Google Scholar] Jeon, H.; Zhu, H. Development of a Variable-Rate Sprayer for Nursery Liner Applications. Trans. ASABE 2012, 55, 303–312. [Google Scholar] [CrossRef] Jeon, H.Y.; Zhu, H.; Derksen, R.C.; Ozkan, H.E.; Krause, C.R.; Fox, R.D. Performance Evaluation of a Newly Developed Variable-Rate Sprayer for Nursery Liner Applications. Trans. ASABE 2011, 54, 773–781. [Google Scholar] Liu, H.; Zhu, H.; Shen, Y.; Chen, Y. Embedded Computer-Controlled Laser Sensor-Guided Air-Assisted Precision Sprayer Development. In Proceedings of the ASABE Annual International Meeting, New Orleans, LA, USA, 26–29 July 2015. [Google Scholar] Shen, Y.; Zhu, H.; Liu, H.; Chen, Y.; Ozkan, E. Development of a Laser-Guided, Embedded-Computercontrolled, Air-Assisted Precision Sprayer. Trans. ASABE 2017, 60, 1827–1838. [Google Scholar] [CrossRef] Chen, L.; Wallhead, M.; Zhu, H.; Fulcher, A. Control of Insects and Diseases with Intelligent Variable-Rate Sprayers in Ornamental Nurseries. J. Environ. Hortic. 2019, 37, 90–100. [Google Scholar] [CrossRef] Fessler, L.; Fulcher, A.; Schneider, L.; Wright, W.C.; Zhu, H. Reducing the Nursery Pesticide Footprint with Laser-Guided, Variable-Rate Spray Application Technology. HortScience 2021, 141, 1572–1584. [Google Scholar] [CrossRef] Wei, J.; Salyani, M. Development of a Laser Scanner for Measuring Tree Canopy Characteristics: Phase 1. Prototype Development. Trans. Am. Soc. Agric. Eng. 2004, 47, 2101–2107. [Google Scholar] [CrossRef] Campbell, J.; Sarkhosh, A.; Habibi, F.; Ismail, A.; Gajjar, P.; Zhongbo, R.; Tsolova, V.; El-sharkawy, I. Biometrics Assessment of Cluster- and Berry-related Traits of Muscadine Grape Population. Plants 2021, 10, 1067. [Google Scholar] [CrossRef] Zhang, R.; Tian, Y.; Zhang, J.; Dai, S.; Hou, X.; Wang, J.; Guo, Q. Metric Learning for Image-Based Flower Cultivars Identification. Plant Methods 2021, 17, 1–14. [Google Scholar] [CrossRef] [PubMed] Maltoni, D.; Maio, D.; Jain, A.K.; Prabhakar, S. Handbook of Fingerprint Recognition; Springer Science and Business Media: New York, NY, USA, 2009. [Google Scholar] [CrossRef] Garrido, M.; Perez-Ruiz, M.; Valero, C.; Gliever, C.J.; Hanson, B.D.; Slaughter, D.C. Active Optical Sensors for Tree Stem Detection and Classification in Nurseries. Sens. Switz. 2014, 14, 10783–10803. [Google Scholar] [CrossRef] [PubMed] Shearer, S.A.; Holmes, R.G. Plant identification using color co-occurrence matrices. Trans. ASAE 1990, 33, 1237–1244. [Google Scholar] [CrossRef] She, Y.; Ehsani, R.; Robbins, J.; Leiva, J.N.; Owen, J. Applications of High-Resolution Imaging for Open Field Container Nursery Counting. Remote Sens. 2018, 10, 2018. [Google Scholar] [CrossRef] Leiva, J.N.; Robbins, J.; Saraswat, D.; She, Y.; Ehsani, R. Evaluating Remotely Sensed Plant Count Accuracy with Differing Unmanned Aircraft System Altitudes, Physical Canopy Separations, and Ground Covers. J. Appl. Remote Sens. 2017, 11, 036003. [Google Scholar] [CrossRef] Yuan, X.; Li, D.; Sun, P.; Wang, G.; Ma, Y. Real-Time Counting and Height Measurement of Nursery Seedlings Based on Ghostnet–YoloV4 Network and Binocular Vision Technology. Forests 2022, 13, 1459. [Google Scholar] [CrossRef] Gini, R.; Sona, G.; Ronchetti, G.; Passoni, D.; Pinto, L. Improving Tree Species Classification Using UAS Multispectral Images and Texture Measures. ISPRS Int. J. Geo-Inf. 2018, 7, 315. [Google Scholar] [CrossRef] Weiss, U.; Biber, P.; Laible, S.; Bohlmann, K.; Zell, A. Plant Species Classification Using a 3D LIDAR Sensor and Machine Learning. In Proceedings of the 2010 Ninth International Conference on Machine Learning and Applications, Washington, DC, USA, 12–14 December 2010; pp. 339–345. [Google Scholar] Alipour, N.; Tarkhaneh, O.; Awrangjeb, M.; Tian, H. Flower Image Classification Using Deep Convolutional Neural Network. In Proceedings of the 2021 7th International Conference on Web Research (ICWR), Tehran, Iran, 19–20 May 2021; pp. 1–4. [Google Scholar] Dharwadkar, S.; Bhat, G.; Subba Reddy, N.V.; Aithal, P.K. Floriculture Classification Using Simple Neural Network and Deep Learning. In Proceedings of the 2017 2nd IEEE International Conference on Recent Trends in Electronics, Information & Communication Technology (RTEICT), Bangalore, India, 19–20 May 2017; pp. 619–622. [Google Scholar] Malik, M.; Aslam, W.; Nasr, E.A.; Aslam, Z.; Kadry, S. A Performance Comparison of Classification Algorithms for Rose Plants. Comput. Intell. Neurosci. 2022, 2022, 1842547. [Google Scholar] [CrossRef] [PubMed] Narvekar, C.; Rao, M. Flower Classification Using CNN and Transfer Learning in CNN-Agriculture Perspective. In Proceedings of the 2020 3rd International Conference on Intelligent Sustainable Systems (ICISS), Thoothukudi, India, 3–5 December 2020; pp. 660–664. [Google Scholar] Soleimanipour, A.; Chegini, G.R. A Vision-Based Hybrid Approach for Identification of Anthurium Flower Cultivars. Comput. Electron. Agric. 2020, 174, 105460. [Google Scholar] [CrossRef] Gunjal, S.; Waskar, D.; Dod, V.; Bhujbal, B.; Ambad, S.N.; Rajput, H.; Hendre, P.; Thoke, N.; Bhaskar, M. Horticulture Nursery Management. 2012. Available online: https://k8449r.weebly.com/uploads/3/0/7/3/30731055/horticulture_plant_nursery1-signed.pdf (accessed on 20 November 2022). Li, M.; Ma, L.; Zong, W.; Luo, C.; Huang, M.; Song, Y. Design and Experimental Evaluation of a Form Trimming Machine for Horticultural Plants. Appl. Sci. Switz. 2021, 11, 2230. [Google Scholar] [CrossRef] Zhang, M.; Guo, W.; Wang, L.; Li, D.; Hu, B.; Wu, Q. Modeling and Optimization of Watering Robot Optimal Path for Ornamental Plant Care. Comput. Ind. Eng. 2021, 157, 107263. [Google Scholar] [CrossRef] Sharma, S.; Borse, R. Automatic Agriculture Spraying Robot with Smart Decision Making. Adv. Intell. Syst. Comput. 2016, 530, 743–758. [Google Scholar] [CrossRef] Prabha, P.; Vishnu, R.S.; Mohan, H.T.; Rajendran, A.; Bhavani, R.R. A Cable Driven Parallel Robot for Nursery Farming Assistance. In Proceedings of the 2021 IEEE 9th Region 10 Humanitarian Technology Conference (R10-HTC), Bangalore, India, 30 September–2 October 2021; pp. 1–6. [Google Scholar] Kim, W.S.; Lee, D.H.; Kim, Y.J.; Kim, T.; Lee, W.S.; Choi, C.H. Stereo-Vision-Based Crop Height Estimation for Agricultural Robots. Comput. Electron. Agric. 2021, 181, 105937. [Google Scholar] [CrossRef] Wang, X.; Singh, D.; Marla, S.; Morris, G.; Poland, J. Field-Based High-Throughput Phenotyping of Plant Height in Sorghum Using Different Sensing Technologies. Plant Methods 2018, 14, 1–16. [Google Scholar] [CrossRef] Andújar, D.; Ribeiro, A.; Fernández-Quintanilla, C.; Dorado, J. Using Depth Cameras to Extract Structural Parameters to Assess the Growth State and Yield of Cauliflower Crops. Comput. Electron. Agric. 2016, 122, 67–73. [Google Scholar] [CrossRef] Polder, G.; Hofstee, J.W. Phenotyping Large Tomato Plants in the Greenhouse Using a 3D Light-Field Camera. In Proceedings of the 2014 Montreal, Quebec, QC, Canada, 13–16 July 2014; American Society of Agricultural and Biological Engineers, 2014; p. 1. [Google Scholar] Kerkech, M.; Hafiane, A.; Canals, R.; Ros, F. Vine Disease Detection by Deep Learning Method Combined with 3d Depth Information. In Proceedings of the International Conference on Image and Signal Processing, 9th International Conference, ICISP 2020, Marrakesh, Morocco, 4–6 June 2020; Springer: Berlin/Heidelberg, Germany, 2020; pp. 82–90. [Google Scholar] Gai, J.; Xiang, L.; Tang, L. Using a Depth Camera for Crop Row Detection and Mapping for Under-Canopy Navigation of Agricultural Robotic Vehicle. Comput. Electron. Agric. 2021, 188, 106301. [Google Scholar] [CrossRef] Gongal, A.; Karkee, M.; Amatya, S. Apple Fruit Size Estimation Using a 3D Machine Vision System. Inf. Process. Agric. 2018, 5, 498–503. [Google Scholar] [CrossRef] Vázquez-Arellano, M.; Paraforos, D.S.; Reiser, D.; Garrido-Izard, M.; Griepentrog, H.W. Determination of Stem Position and Height of Reconstructed Maize Plants Using a Time-of-Flight Camera. Comput. Electron. Agric. 2018, 154, 276–288. [Google Scholar] [CrossRef] Hämmerle, M.; Höfle, B. Direct Derivation of Maize Plant and Crop Height from Low-Cost Time-of-Flight Camera Measurements. Plant Methods 2016, 12, 50. [Google Scholar] [CrossRef] Vázquez-Arellano, M.; Reiser, D.; Paraforos, D.S.; Garrido-Izard, M.; Burce, M.E.C.; Griepentrog, H.W. 3-D Reconstruction of Maize Plants Using a Time-of-Flight Camera. Comput. Electron. Agric. 2018, 145, 235–247. [Google Scholar] [CrossRef] Li, J.; Tang, L. Developing a Low-Cost 3D Plant Morphological Traits Characterization System. Comput. Electron. Agric. 2017, 143, 1–13. [Google Scholar] [CrossRef] Pamornnak, B.; Limsiroratana, S.; Khaorapapong, T.; Chongcheawchamnan, M.; Ruckelshausen, A. An Automatic and Rapid System for Grading Palm Bunch Using a Kinect Camera. Comput. Electron. Agric. 2017, 143, 227–237. [Google Scholar] [CrossRef] Cao, Q.; Yang, G.; Duan, D.; Chen, L.; Wang, F.; Xu, B.; Zhao, C.; Niu, F. Combining Multispectral and Hyperspectral Data to Estimate Nitrogen Status of Tea Plants (Camellia sinensis (L.) O. Kuntze) under Field Conditions. Comput. Electron. Agric. 2022, 198, 107084. [Google Scholar] [CrossRef] Chandel, A.K.; Khot, L.R.; Yu, L.X. Alfalfa (Medicago sativa L.) Crop Vigor and Yield Characterization Using High-Resolution Aerial Multispectral and Thermal Infrared Imaging Technique. Comput. Electron. Agric. 2021, 182, 105999. [Google Scholar] [CrossRef] Abbas, A.; Jain, S.; Gour, M.; Vankudothu, S. Tomato Plant Disease Detection Using Transfer Learning with C-GAN Synthetic Images. Comput. Electron. Agric. 2021, 187, 106279. [Google Scholar] [CrossRef] Xiao, D.; Zeng, R.; Liu, Y.; Huang, Y.; Liu, J.; Feng, J.; Zhang, X. Citrus Greening Disease Recognition Algorithm Based on Classification Network Using TRL-GAN. Comput. Electron. Agric. 2022, 200, 107206. [Google Scholar] [CrossRef] Zhang, L.; Nie, Q.; Ji, H.; Wang, Y.; Wei, Y.; An, D. Hyperspectral Imaging Combined with Generative Adversarial Network (GAN)-Based Data Augmentation to Identify Haploid Maize Kernels. J. Food Compos. Anal. 2022, 106, 104346. [Google Scholar] [CrossRef] Mazzia, V.; Khaliq, A.; Salvetti, F.; Chiaberge, M. Real-Time Apple Detection System Using Embedded Systems With Hardware Accelerators: An Edge AI Application. IEEE Access 2020, 8, 9102–9114. [Google Scholar] [CrossRef] Zhang, Y.; Yu, J.; Chen, Y.; Yang, W.; Zhang, W.; He, Y. Real-Time Strawberry Detection Using Deep Neural Networks on Embedded System (Rtsd-Net): An Edge AI Application. Comput. Electron. Agric. 2022, 192, 106586. [Google Scholar] [CrossRef] Codeluppi, G.; Davoli, L.; Ferrari, G. Forecasting Air Temperature on Edge Devices with Embedded AI. Sensors 2021, 21, 3973. [Google Scholar] [CrossRef] Coppola, M.; Noaille, L.; Pierlot, C.; de Oliveira, R.O.; Gaveau, N.; Rondeau, M.; Mohimont, L.; Steffenel, L.A.; Sindaco, S.; Salmon, T. Innovative Vineyards Environmental Monitoring System Using Deep Edge AI. Artif. Intell. Digit. Ind.–Appl. 2022, 261–278. [Google Scholar] [CrossRef] Aghi, D.; Cerrato, S.; Mazzia, V.; Chiaberge, M. Deep Semantic Segmentation at the Edge for Autonomous Navigation in Vineyard Rows. In Proceedings of the 2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), Prague, Czech Republic, 27 September–1 October 2021; pp. 3421–3428. [Google Scholar] Deng, F.; Zuo, P.; Wen, K.; Wu, X. Novel Soil Environment Monitoring System Based on RFID Sensor and LoRa. Comput. Electron. Agric. 2020, 169, 105169. [Google Scholar] [CrossRef] Luvisi, A.; Panattoni, A.; Materazzi, A. RFID Temperature Sensors for Monitoring Soil Solarization with Biodegradable Films. Comput. Electron. Agric. 2016, 123, 135–141. [Google Scholar] [CrossRef] Vellidis, G.; Tucker, M.; Perry, C.; Kvien, C.; Bednarz, C. A Real-Time Wireless Smart Sensor Array for Scheduling Irrigation. Comput. Electron. Agric. 2008, 61, 44–50. [Google Scholar] [CrossRef] Dey, S.; Bhattacharyya, R.; Karmakar, N.; Sarma, S. A Folded Monopole Shaped Novel Soil Moisture and Salinity Sensor for Precision Agriculture Based Chipless RFID Applications. In Proceedings of the 2019 IEEE MTT-S International Microwave and RF Conference (IMARC), Mumbai, India, 13–15 December 2019. [Google Scholar] [CrossRef] Wang, J.; Chang, L.; Aggarwal, S.; Abari, O.; Keshav, S. Soil Moisture Sensing with Commodity RFID Systems. In Proceedings of the MobiSys’20: The 18th Annual International Conference on Mobile Systems, Applications, and Services, Toronto, ON, Canada, 15–19 June 2020; Volume 13. [Google Scholar] [CrossRef] Aroca, R.V.; Hernandes, A.C.; Magalhães, D.V.; Becker, M.; Vaz, C.M.P.; Calbo, A.G. Calibration of Passive UHF RFID Tags Using Neural Networks to Measure Soil Moisture. J. Sens. 2018, 2018, 3436503. [Google Scholar] [CrossRef] Hasan, A.; Bhattacharyya, R.; Sarma, S. Towards Pervasive Soil Moisture Sensing Using RFID Tag Antenna-Based Sensors. In Proceedings of the 2015 IEEE International Conference on RFID Technology and Applications (RFID-TA), Tokyo, Japan, 16–18 September 2015; pp. 165–170. [Google Scholar] Yong, W.; Shuaishuai, L.; Li, L.; Minzan, L.; Ming, L.; Arvanitis, K.; Georgieva, C.; Sigrimis, N. Smart Sensors from Ground to Cloud and Web Intelligence. IFAC-Pap. 2018, 51, 31–38. [Google Scholar] [CrossRef] Barge, P.; Gay, P.; Piccarolo, P.; Tortia, C. RFID Tracking of Potted Plants from Nursery to Distribution. In Proceedings of the International Conference Ragusa SHWA2010, Ragusa, Italy, 16–18 September 2010. [Google Scholar] Sugahara, K. Traceability System for Agricultural Products Based on RFID and Mobile Technology. IFIP Adv. Inf. Commun. Technol. 2009, 295, 2293–2301. [Google Scholar] [CrossRef] Voulodimos, A.S.; Patrikakis, C.Z.; Sideridis, A.B.; Ntafis, V.A.; Xylouri, E.M. A Complete Farm Management System Based on Animal Identification Using RFID Technology. Comput. Electron. Agric. 2010, 70, 380–388. [Google Scholar] [CrossRef] Weiss, U.; Biber, P. Plant Detection and Mapping for Agricultural Robots Using a 3D LIDAR Sensor. Robot. Auton. Syst. 2011, 59, 265–273. [Google Scholar] [CrossRef] Ge, Y.; Xiong, Y.; From, P.J. Symmetry-Based 3D Shape Completion for Fruit Localisation for Harvesting Robots. Biosyst. Eng. 2020, 197, 188–202. [Google Scholar] [CrossRef] Skoczeń, M.; Ochman, M.; Spyra, K.; Nikodem, M.; Krata, D.; Panek, M.; Pawłowski, A. Obstacle Detection System for Agricultural Mobile Robot Application Using RGB-D Cameras. Sensors 2021, 21, 5292. [Google Scholar] [CrossRef] Ji, W.; Gao, X.; Xu, B.; Chen, G.Y.; Zhao, D. Target Recognition Method of Green Pepper Harvesting Robot Based on Manifold Ranking. Comput. Electron. Agric. 2020, 177, 105663. [Google Scholar] [CrossRef] Gai, R.; Chen, N.; Yuan, H. A Detection Algorithm for Cherry Fruits Based on the Improved YOLO-v4 Model. Neural Comput. Appl. 2021, 1–12. [Google Scholar] [CrossRef] Jia, W.; Tian, Y.; Luo, R.; Zhang, Z.; Lian, J.; Zheng, Y. Detection and Segmentation of Overlapped Fruits Based on Optimized Mask R-CNN Application in Apple Harvesting Robot. Comput. Electron. Agric. 2020, 172, 105380. [Google Scholar] [CrossRef] Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Mahmud, M.S.; Zahid, A.; Das, A.K. Sensing and Automation Technologies for Ornamental Nursery Crop Production: Current Status and Future Prospects. Sensors 2023, 23, 1818. https://doi.org/10.3390/s23041818 AMA Style Mahmud MS, Zahid A, Das AK. Sensing and Automation Technologies for Ornamental Nursery Crop Production: Current Status and Future Prospects. Sensors. 2023; 23(4):1818. https://doi.org/10.3390/s23041818 Chicago/Turabian Style Mahmud, Md Sultan, Azlan Zahid, and Anup Kumar Das. 2023. \"Sensing and Automation Technologies for Ornamental Nursery Crop Production: Current Status and Future Prospects\" Sensors 23, no. 4: 1818. https://doi.org/10.3390/s23041818 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   4 Web of Science   2 Scopus   5 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0k 1k 2k 3k 4k 5k For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 4:
- APA Citation: Majumdar, P., Mitra, S., & Bhattacharya, D. (2021). IoT for Promoting Agriculture 4.0: A Review from the Perspective of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware Cost Analysis. Journal of Biosystems Engineering, 46(4), 440-461. https://doi.org/10.1007/s42853-021-00118-6
  Main Objective: To provide a comprehensive overview of the current state and future potential of IoT-based solutions for agriculture, with a focus on weather monitoring, yield prediction, and security of wireless sensor networks.
  Study Location: Unspecified
  Data Sources: Literature review
  Technologies Used: Edge computing, model compression, hardware accelerators
  Key Findings: IoT-based solutions have the potential to significantly improve agricultural practices and yield prediction, but challenges remain in terms of computational complexity, latency, and security.
  Extract 1: "Simultaneously, a strict reduction in computation complexity and latency in these systems are much needed, which can be achieved with the help of techniques like edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)"
  Extract 2: "Latency minimization is a must-have feature in real-time irrigation management systems, and the aforementioned techniques can help in achieving that efficiently"
  Limitations: None
  Relevance Evaluation: The article is highly relevant to the point in the literature review that focuses on techniques for reducing computational complexity and latency in real-time irrigation management systems. The article provides valuable insights into the challenges and opportunities in this area and outlines the importance of edge computing, model compression, and hardware accelerators in addressing these challenges.
  Relevance Score: 0.95
  Inline Citation: (Majumdar, Mitra, & Bhattacharya, 2021)
  Explanation: The article titled "IoT for Promoting Agriculture 4.0: a Review from the Perspective of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware Cost Analysis" provides a comprehensive overview of the latest advancements and challenges in utilizing the Internet of Things (IoT) to enhance agricultural practices. One of the key areas addressed in the article is the use of real-time weather monitoring and data analysis for automated irrigation management. The authors highlight the need for efficient and low-complexity techniques to reduce computational latency and enable autonomous irrigation systems.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Log in Find a journal Publish with us Track your research Search Cart Home Journal of Biosystems Engineering Article IoT for Promoting Agriculture 4.0: a Review from the Perspective of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware Cost Analysis Review Published: 25 November 2021 Volume 46, pages 440–461, (2021) Cite this article Journal of Biosystems Engineering Aims and scope Submit manuscript Parijata Majumdar, Sanjoy Mitra & Diptendu Bhattacharya  526 Accesses 10 Citations Explore all metrics Abstract Purpose The main focus is to concisely cover contemporary methods of IoT-oriented agriculture automation using weather monitoring. In this article, IoT components, communication protocols, data analysis and prediction methods are studied to reveal scientific and commercial perspectives like security vulnerabilities of communication protocols, cost of IoT hardware, data repository comparison, and dependency analysis of weather parameters. Reasons for striving towards Agriculture 4.0 are discussed to outline challenges for researchers to adjust irrigation schedules as per non-linear weather changes for developing an economically viable, real-time monitoring method. Methods Weather monitoring using IoT technologies for data processing and storage are extensively surveyed. Besides, we also reviewed how these approaches are enhanced using Agriculture 4.0 for different crops. Results Extensive survey reveals shortcomings of existing approaches and shows that temperature and humidity are most commonly monitored in IoT technologies. Cost analysis shows minimum cost incurred for hardware is 1–10$ for machine learning and edge computing and 10–20$ for cloud computing. Conclusions Cost analysis helps to identify cheaper sensors and micro-controllers for prediction of weather changes. Weather parameters that were given least importance in existing literature needs consideration to understand how its non-linearity impacts the accuracy of irrigation schedule prediction to maximize soil fertility and crop yield. This is a preview of subscription content, log in via an institution to check access.  Similar content being viewed by others Precision Agriculture: Methodologies, Practices and Applications Chapter © 2021 A Review on Advances in IoT-Based Technologies for Smart Agricultural System Chapter © 2022 A Review of Precision Agriculture Methodologies, Challenges, and Applications Chapter © 2022 Data Availability Data sharing not applicable to this article as no datasets were generated or analyzed during the current study. Code Availability As this is a review article, availability of code is not applicable. References Adafruit.DHT11 Humidity & Temperature Sensor. Retrieved September 16 2021, from https://media.digikey.com/pdf/Data%20Sheets/Adafruit%20PDFs/DHT11_HumidityTempSensor.pdf Adafruit.DHT11, DHT22 and AM2302 Sensors. Retrieved September 15 2021, from https://www.mouser.com/datasheet/2/737/dht-932870.pdf Aosong. Your specialist in innovating humidity & temperature sensors. Retrieved September 15 2021, from https://www.mouser.com/datasheet/2/758/DHT11-Technical-Data-Sheet-Translated-Version-1143054.pdf Aosong. Digital-output relative humidity & temperature sensor/module DHT22 (DHT22 also named as AM2302). Retrieved September 15 2021, from https://drive.google.com/file/d/1tCdHqpqrSVxErr2hDKtHlwJCxdQX4jC/view Apogee. APOGEE PYRANOMETERS Silicon-cell & Thermopile Series.Retrieved September 15 2021, from https://www.apogeeinstruments.com/content/SP-100-200-spec-sheet.pdf Apogee. BMP180 Sensor: Pinout, Feature, Specification [Video]. Retrieved September 14 2021, from https://www.apogeeweb.net/pdf/circuitry/bmp180-pinout-feature-specification.pdf Angelopoulos, C. M., Filios, S., Nikoletseas, T. P., Raptis 2020 Keeping data at the edge of smart irrigation networks: A case study in strawberry greenhouses Computer Networks 167 107039 https://doi.org/10.1016/j.comnet.2019.107039 Article   Google Scholar   Araújo, S. O., Peres, R. S., Barata, J., Lidon, F., & Ramalho, J. C. (2021). Characterising the Agriculture 4.0 Landscape—Emerging Trends, Challenges and Opportunities. Agronomy, 11(4), 667. Arko, A. R., Khan, S. H., Biswas, M. H., Imran, A., Kafi, A. H., & Antara, R. S. I. (2019). IOT Based Smart Water And Environment Management System Of Paddy Rice At Different Growth Stages. In: Proceedings of IEEE International Conference on Internet of Things and Intelligence System (IoTaIS), pp.154-160, Bali, Indonesia. https://doi.org/10.1109/IoTaIS47347.2019.8980424 BHARATHI ELECTRONICS. HUMIDITY & TEMPERATURE SENSOR (HRT393). RETRIEVED SEPTEMBER 14 2021, FROM https://www.indiamart.com/proddetail/humidity-temperature-sensor-hrt393-7138775788.html BOSCH.BMP 180 Digital, barometric pressure sensor. Retrieved September 14 2021, from https://ae-bst.resource.bosch.com/media/_tech/media/product_flyer/BST-BMP180-FL000.pdf Brito, R C., Favarim, F., Calin, G., Todt, E. (2017). Development of a low cost weather station using free hardware and software. In: Proceedings of Latin American Robotics Symposium (LARS) and Brazilian Symposium on Robotics (SBR), pp. 1–6, Curitiba, Brazil. https://doi.org/10.1109/SBR-LARS-R.2017.8215292 Chawla, A., Bangera, T., Kolwalkar, C., & Bhat, M. Bluetooth based weather station. (2015). International Journal of Engineering Trends and Technology (IJETT), 28(2). Chu, Z., Yu, J. 2020 An end-to-end model for rice yield prediction using deep learning fusion Computers and Electronics in Agriculture 174 105471 https://doi.org/10.1016/j.compag.2020.105471 Article   Google Scholar   de Araujo Zanella, A. R., da Silva, E., & Albini, L. C. P.( (2020). Security challenges to smart agriculture: Current state, key issues, and future directions. Array, 100048. Divya Vani, P., Raghavendra Rao, K. (2016). Measurement and Monitoring of Soil Moisture using Cloud IoT and Android System. Indian Journal of Science and Technology, 9(31), 1–5. https://doi.org/10.17485/ijst/2016/v9i31/95340 De Medeiros, A. D., Capobiango, N. P., da Silva, J. M., da Silva, L. J., da Silva, C. B., Santos Dias dos, D. C. F. 2020 Interactive machine learning for soybean seed and seedling quality classification Scientific Reports 10 1 1 10 https://doi.org/10.1038/s41598-020-68273-y Article   Google Scholar   Feng, P., Wang, B., Li Liu, D., Waters, C., Xiao, D., Shi, L., Yu, Q. 2020 Dynamic wheat yield forecasts are improved by a hybrid approach using a biophysical model and machine learning technique Agricultural and Forest Meteorology 285 107922 https://doi.org/10.1016/j.agrformet.2020.107922 Article   Google Scholar   Goap, A., Sharma, D., Shukla, A. K., Krishna, C. R. 2018 An IoT based smart irrigation management system using Machine learning and open source technologies Computers and Electronics in Agriculture 155 41 49 Article   Google Scholar   Gia, T N., Qingqing, L., Queralta, J P., Zou, Z., Tenhunen, H., Westerlund, T. (2019). Edge AI in Smart Farming IoT: CNNs at the Edge and Fog Computing with LoRa. In: Proceedings of IEEE AFRICON, pp. 1–6, Accra, Ghana. https://doi.org/10.1109/AFRICON46755.2019.9134049 Goeschel, K.( 2016). Reducing false positives in intrusion detection systems using data-mining techniques utilizing support vector machines, decision trees, and naive Bayes for off-line analysis. In: South east Con, pp. 1-6. IEEE. Guillén, M. A., Llanes, A., Imbernón, B., Martínez-España, R., Bueno-Crespo, A., Cano, J. C., Cecilia, J. M. 2021 Performance evaluation of edge-computing platforms for the prediction of low temperatures in agriculture using deep learning Journal of Supercomputing 77 1 818 840 https://doi.org/10.1007/s11227-020-03288-w Article   Google Scholar   Halder, S., Sivakumar, G. (2017). Embedded based remote monitoring station for live streaming of temperature and humidity. In: Proceedings of International Conference on Electrical, Electronics, Communication, Computer, and Optimization Techniques (ICEECCOT), pp. 284–287, Mysuru, India. https://doi.org/10.1109/ICEECCOT.2017.8284683 HANWEI. Technical data MQ-135 gas sensor. Retrieved September 17 2021, from https://www.rhydolabz.com/documents/MQ135_datasheet_m.pdf HANWEI. Technical data MQ-7 gas sensor. Retrieved September 17 2021, from http:// edge. rit. edu/edge/R13401/public/FinalDocuments/Monitor/Appendix%20B%20Sensors.pdf Han, G., Xiao, L., & Poor, H. V. (2017). Two-dimensional anti-jamming communication based on deep reinforcement learning. In: IEEE international conference on acoustics, speech and signal processing (ICASSP), pp. 2087-2091. IEEE. Herrero-Huerta, M., Rodriguez-Gonzalvez, P., & Rainey, K. M. (2020). Yield prediction by machine learning from UAS-based multi-sensor data fusion in soybean. Plant Methods, 16, 1-16. https://doi.org/10.21203/rs.3.rs-16958/v2 Juan Carlos, A. D., Estrada, L. R., Cesar Augusto, C. R. C., Patricia, A. C. P., Alberto, P. M. M., Enrique, R. G. R., Morales-Ortega, R. C., Ovallos-Gazabon, D. A., Andrés, C. M. C. 2020 Monitoring system of environmental variables for a strawberry crop using IoT tools Procedia Computer Science 170 1083 1089 https://doi.org/10.1016/j.procs.2020.03.067 Article   Google Scholar   Kaewwongsri, K., & Silanon, K. (2020). Design and implement of a weather monitoring station using CoAP on NB-IoT network. In: 17th International Conference on Electrical Engineering/Electronics, Computer, Telecommunications and Information Technology (ECTI-CON), 230-233. IEEE. Kamir, E., Waldner, F., Hochman, Z. 2020 Estimating wheat yields in Australia using climate records, satellite image time series and machine learning methods Isprs Journal of Photogrammetry and Remote Sensing 160 124 135 https://doi.org/10.1016/j.isprsjprs.2019.11.008 Article   Google Scholar   KEMET.DHT11–Temperature and Humidity Sensor. Retrieved September 17 2021, from https://components101.com/sensors/dht11-temperature-sensor Keswani, B., Mohapatra, A. G., Keswani, P., Khanna, A., Gupta, D., Rodrigues, J. 2020 Improving weather dependent zone specific irrigation control scheme in IoT and big data enabled self driven precision agriculture mechanism Enterprise Information Systems 14 9–10 1494 1515 https://doi.org/10.1080/17517575.2020.1713406 Article   Google Scholar   Kodali, R. K., Sahu, A. (2016). An IoT based weather information prototype using WeMos. In 2nd International Conference on Contemporary Computing and Informatics (IC3I), pp. 612–616, Greater Noida, India. https://doi.org/10.1109/IC3I.2016.7918036 Kulkarni, S., Mandal, S. N., Sharma, G. S., & Mundada, M. R. (2018). Predictive analysis to improve crop yield using a neural network model. In: Proceedings of IEEE International Conference on Advances in Computing, Communications and Informatics(ICACCI),pp.74-79,Bangalore,India. https://doi.org/10.1109/ICACCI.2018.8554851 Lee, S. Y., Wi, S. R., Seo, E., Jung, J. K., & Chung, T. M. (2017). ProFiOt: Abnormal Behavior Profiling (ABP) of IoT devices based on a machine learning approach. In: 27th International Telecommunication Networks and Applications Conference (ITNAC), pp.1-6. IEEE. Maimaitijiang, M., Sagan, V., Sidike, P., Hartling, S., Esposito, F., & Fritschi, F.B. (2020). Soybean yield prediction from UAV using multimodal data fusion and deep learning. Remote sensing of environment, 237, 111599. Micron .Technical data MQ-135 gas sensor. Retrieved September 19, 2021, from https://pdf.indiamart.com/impdf/20922240373/MY-9380557/mq-135-air-quality-hazardous-gas-sensor-module.pdf Micron. Technical data MQ-7 gas sensor. Retrieved September 17 2021, from https:// pdf.indiamart.com/impdf/11396433388/MY-1833510/mq-7-carbon-monoxide-gas- sensors.pdf MICRON. DHT 22 SENSOR. RETRIEVED SEPTEMBER 15 2021, FROM https://www.indiamart.com/proddetail/dht-22-sensor-20917848512.html Narudin, F. A., Feizollah, A., Anuar, N. B., Gani, A. 2016 Evaluation of machine learning classifiers for mobile malware detection Soft Computing 20 1 343 357 Article   Google Scholar   Nevavuori, P., Narra, N., Lipping, T. 2019 Crop yield prediction with deep convolutional neural networks Computers and Electronics in Agriculture 163 104859 https://doi.org/10.1016/j.rse.2019.111599 Article   Google Scholar   Palle, D., Kommu, A., Kanchi R.R. (2016). Design and development of CC3200-based CloudIoT for measuring humidity and temperature. In: Proceedings of International Conference on Electrical, Electronics and Optimization Techniques (ICEEOT), pp. 3116–3120, Chennai, India. https://doi.org/10.1109/ICEEOT.2016.7755275 Parashar, A. (2019) IoT Based Automated Weather Report Generation and Prediction Using Machine Learning. In: Proceedings of 2nd International Conference on Intelligent Communication and Computational Techniques (ICCT), pp. 339–344, Jaipur, India. https://doi.org/10.1109/ICCT46177.2019.8968782 Pathak., A., AmazUddin, M., Abedin, M. J., Andersson, K., Mustafa, R., Hossain, M. S. 2019 IoT based Smart System to Support Agricultural Parameters: A Case Study Procedia Computer Science 155 648 653 https://doi.org/10.1016/j.procs.2019.08.092 Article   Google Scholar   Patil, P., & Desai, B. L., (2013). Intelligent irrigation control system by employing wireless sensor networks. International Journal of Computer Applications, 79(11). Photon System Instruments.TECHNICAL SPECIFICATION SpectraPen SP 110 UVIS SpectraPen SP 110 NIR. Retrieved September 15 2021, from https://handheld.psi.cz/documents/specifications/SP.pdf Rahmat, R. F., Lini, T. Z., & Hizriadi, A. (2019). Implementation of real-time monitoring on agricultural land of rice plants using smart sensor. In: Proceedings of Conference on Electrical, Telecommunication and Computer Engineering (ELTICOM), pp. 40-43, Medan, Indonesia. https://doi.org/10.1109/ELTICOM47379.2019.8943912 Raj, M., Gupta, S., Chamola, V., Elhence, A., Garg, T., Atiquzzaman, M., & Niyato, D. (2021). A survey on the role of internet of things for adopting and promoting agriculture 4.0. Journal of Network and Computer Applications, 187, 1–29. https://doi.org/10.1016/j.jnca.2021.103107. Ruano, A.E., Mestre, G., Duarte, H. (2015). A neural-network based intelligent weather station. In: Proceedings of IEEE 9th International Symposium on Intelligent Signal Processing (WISP), pp. 1–6, Siena, Italy. https://doi.org/10.1109/WISP.2015.7139169 Sabharwal, N., Kumar, R., Thakur, A., & Sharma, J. A. (2014). Low Cost Zigbee Basedautomatic Wireless Weather Station With Gui And Web Hosting Facility. International Journal of Electrical and Electronics Engineering, 1. Sahay, M.R, Sukumaran, M.K, Amarnath, S., Palani, TND. (2019). Environmental Monitoring System Using IoT and Cloud Service at Real-Time. Easy Chair, 968. Saini, H., Thakur, A., Ahuja, S. Sabharwal, N., & Kumar, N. (2016). Arduino based automatic wireless weather station with remote graphical application and alerts. In: Proceedings of 3rd International Conference on Signal Processing and Integrated Networks (SPIN), pp. 605–609, Noida, India. https://doi.org/10.1109/SPIN.2016.7566768 Savic, T., Radonjic, M. (2015). One approach to weather station design based on Raspberry Pi platform. In: Proceedings of 23rd Telecommunications Forum Telfor, pp. 623–626, Belgrade, Serbia. https://doi.org/10.1109/TELFOR.2015.7377544 Shang, C., Chen, W. H., Stroock, A. D., You, F. 2019 Robust model predictive control of irrigation systems with active uncertainty learning and data analytics IEEE Transactions on Control Systems Technology 28 4 1493 1504 Article   Google Scholar   Shaout, A., Yulong, Li., Zhou, M., Awad, S. (2014). Low cost embedded weather station with intelligent system. In: Proceedings of 10th International Computer Engineering Conference(ICENCO),pp.100–106,Giza,Cairo,Egypt. https://doi.org/10.1109/ICENCO.2014.7050439 Singh Debabrata, Pal Pushparaj, Mishra, M.K, Lamba, A. (2020). Shrabanee Swagatika Security threats and issues in automation IoT. International Journal of Scientific & Technology Research, 9(4). SKYPOWER INTERNATIONALS.SP 110 FI TS. Retrieved September 15 2021, from https:// skypower.online/produkt/sp-110-fi-ts/ Solano, G., Lama, F., Terrazos, J., Tarrillo, J. (2017). Weather station for educational purposes based on Atmega8L. In: Proceedings of IEEE XXIV International Conference on Electronics, Electrical Engineering and Computing (INTERCON), pp. 1–4, Cusco, Peru. https://doi.org/10.1109/INTERCON.2017.8079728 Sowah, R. A., Ofori-Amanfo, K. B., Mills, G. A., & Koumadi, K. M.( 2019). Detection and prevention of man-in-the-middle spoofing attacks in MANETs using predictive techniques in Artificial Neural Networks (ANN). Journal of Computer Networks and Communications. Stas, M., Van Orshoven, J., Dong, Q., Heremans, S., & Zhang, B. (2016). A comparison of machine learning algorithms for regional wheat yield prediction using NDVI time series of SPOT-VGT. In: Proceedings of IEEE Fifth International Conference on Agro-Geoinformatics(Agro-Geoinformatics),pp.1-5,Tianjin,China. https://doi.org/10.1109/Agro-Geoinformatics.2016.7577625 Tahsien, S. M., Karimipour, H., Spachos, P. 2020 Machine learning based solutions for security of Internet of Things (IoT): A survey Journal of Network and Computer Applications 161 102630 https://doi.org/10.1016/j.jnca.2020.102630 Article   Google Scholar   TekParks. COLLECTION Home / MODULES / SENSOR MODULES / HUMIDITY SENSOR MODULE (HRT393). Retrieved September 14 2021, from http://www.tekparts.in/product/humidity-sensor-module-hrt393/ Texas Insruments. BOOSTXL-SENSHUBSensorHubBoosterPack. Retrieved September 14 2021, from https://pdf1.alldatasheet.com/datasheet-pdf/view/514264/TI1/BMP180.html Tenzin, S., Siyang, S., Pobkrut, T., Kerdcharoen, T. (2017). Low cost weather station for climate smart agriculture. In: Proceedings of 9th International Conference on Knowledge and Smart Technology (KST), pp.172–177, Chonburi, Thailand.https://doi.org/10.1109/KST.2017.7886085 Wei, M. C. F., Molin, J. P. 2020 Soybean Yield Estimation and Its Components: A Linear Regression Approach Agriculture 10 8 348 https://doi.org/10.3390/agriculture10080348 Article   Google Scholar   Winsen. Air Quality gas Sensor (Model: MQ135). Retrieved September 18, 2021, from https://www.winsen-sensor.com/d/files/PDF/Semiconductor%20Gas%20Sensor /MQ135%20(Ver1.4)%20-%20Manual.pdf Winsen. Carbon Monoxide Gas Sensor(Model:MQ-7B). Retrieved September 17 2021, from https://www.winsensensor.com/d/files/PDF/Semiconductor%20Gas%20Sensor/MQ-7B%20(Ver1.4)%20-%20Manual.pdf Zamora-Izquierdo, M. A., Santa, J., Martínez, J. A., Martínez, V., Skarmeta, A. F. 2019 Smart farming IoT platform based on edge and cloud computing Biosystems Engineering 177 4 17 https://doi.org/10.1016/j.biosystemseng.2018.10.014 Article   Google Scholar   Zhai, Z., Martínez, J. F., Beltran, V., & Martínez, N. L. (2020). Decision support systems for agriculture 4.0: Survey and challenges. Computers and Electronics in Agriculture, 170, 105256. https://doi.org/10.1016/j.compag.2020.105256 Download references Acknowledgement None of the Authors received any financial support from any funding agency to carry out this research work. Computing Infrastructure of Tripura Institute of Technology, Agartala as well as National Institute of Technology, Agartala, was used to prepare this review article. Funding This research is not supported or sponsored by any funding agency. (i) The authors have no relevant financial or non-financial interests to disclose. (ii) The authors have no conflicts of interest to declare that are relevant to the content of this article. (iii) All authors certify that they have no affiliations with or involvement in any organization or entity with any financial interest or non-financial interest in the subject matter or materials discussed in this manuscript. (iv) The authors have no financial or proprietary interests in any material discussed in this article. Author information Authors and Affiliations National Institute of Technology, Agartala, West Tripura, 799046, India Parijata Majumdar & Diptendu Bhattacharya Tripura Institute of Technology, Agartala, West Tripura, 799009, India Sanjoy Mitra Contributions (i) Conceptualization of idea of the article: P.M. and S.M. (ii) Literature search and data analysis: S.M. and P.M. (iii) Resources: D.B and S.M. (iv) Writing—original draft preparation: P.M. and S.M. (v) Writing—review and editing: P.M., S.M. and D.B. (vi) Critical revision of the work: D.B. and S.M. (vii) Supervision: D.B., S.M. Corresponding author Correspondence to Sanjoy Mitra. Ethics declarations Ethics Approval This article does not contain any studies with human participants or animals performed by any of the authors. Consent to Participate Not applicable since the article does not contain any studies with human participants. Consent to Publication Not applicable since the article does not contain any images, or videos relating to an individual person. Conflict of Interest The authors have no conflicts of interest to declare that are relevant to the content of this article. The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. It is given in detail in declaration section of this manuscript. Additional information Publisher’s Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Rights and permissions Reprints and permissions About this article Cite this article Majumdar, P., Mitra, S. & Bhattacharya, D. IoT for Promoting Agriculture 4.0: a Review from the Perspective of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware Cost Analysis. J. Biosyst. Eng. 46, 440–461 (2021). https://doi.org/10.1007/s42853-021-00118-6 Download citation Received 07 June 2021 Revised 23 September 2021 Accepted 18 October 2021 Published 25 November 2021 Issue Date December 2021 DOI https://doi.org/10.1007/s42853-021-00118-6 Keywords Agriculture 4.0 Cloud Edge Machine learning Weather Access this article Log in via an institution Buy article PDF USD 39.95 Price excludes VAT (USA) Tax calculation will be finalised during checkout. Instant access to the full article PDF. Rent this article via DeepDyve Institutional subscriptions Sections Figures References Abstract Data Availability Code Availability References Acknowledgement Funding Author information Ethics declarations Additional information Rights and permissions About this article Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 5:
- APA Citation: Singh, R., Singh, R., Gehlot, A., Akram, S. V., Priyadarshi, N., & Twala, B. (2022). Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming. Applied Sciences, 12(24), 12557. https://doi.org/10.3390/app122412557
  Main Objective: To examine the relevance of automated irrigation management systems that incorporate IoT and machine learning technologies for real-time irrigation practices in the context of horticulture.
  Study Location: None
  Data Sources: None
  Technologies Used: IoT, machine learning
  Key Findings: Automated irrigation management systems that incorporate IoT and machine learning technologies can optimize water usage, reduce operational costs, and enhance crop yields. These systems can leverage machine learning algorithms to analyze data collected from sensors and make informed decisions regarding irrigation scheduling, ensuring optimal water application rates and minimizing water wastage.
  Extract 1: Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)
  Extract 2: This study focuses on techniques for reducing computational complexity and latency, such as edge computing and model compression, which can play a significant role in the efficient implementation of these systems.
  Limitations: Limited scope, methodological issues, dated information, tangential focus.
  Relevance Evaluation: {'extract_1': 'Machine learning and IoT applications in agriculture hold the potential to revolutionize the sector by offering innovative solutions to address various challenges. In the specific context of irrigation management, the combination of IoT and machine learning technologies enables the development of automated irrigation systems that can optimize water usage, reduce operational costs, and enhance crop yields.', 'extract_2': 'By harnessing the power of IoT and machine learning technologies, automated irrigation systems can be equipped with advanced features such as real-time monitoring of soil moisture levels, weather conditions, and crop water requirements. These systems can also leverage machine learning algorithms to analyze data collected from sensors and make informed decisions regarding irrigation scheduling, ensuring optimal water application rates and minimizing water wastage.', 'relevance_score': 0.9}
  Relevance Score: 0.9
  Inline Citation: (Singh et al., 2022)
  Explanation: In the study, researchers examine the relevance of automated irrigation management systems that incorporate IoT and machine learning technologies for real-time irrigation practices in the context of horticulture. In particular, the focus is on techniques for reducing computational complexity and latency, such as edge computing and model compression, which can play a significant role in the efficient implementation of these systems. The study highlights the importance of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline, while also identifying key challenges and proposing solutions for fully autonomous, scalable irrigation management. The findings of the study emphasize the role of Industry 4.0 technologies such as IoT, cloud computing, AI, blockchain, and big data in transforming traditional practices in horticulture and contributing to the goal of achieving sustainable farming and ensuring food security.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all     Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Applied Sciences All Article Types Advanced   Journals Applied Sciences Volume 12 Issue 24 10.3390/app122412557 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editors José Miguel Molina Martínez Ginés García-Mateos Dolores Parras-Burgos Show more... Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 5330 Citations 16 Table of Contents Abstract Introduction Overview of Horticulture and Industry 4.0 Intervention of Industry 4.0 in Horticulture Results Discussion and Recommendation Conclusions Author Contributions Funding Institutional Review Board Statement Informed Consent Statement Data Availability Statement Conflicts of Interest References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessReview Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming by Rajat Singh 1, Rajesh Singh 2,3, Anita Gehlot 2,3, Shaik Vaseem Akram 2,4, Neeraj Priyadarshi 5,* and Bhekisipho Twala 6,* 1 School of Agriculture, Uttaranchal University, Dehradun 248007, Uttarakhand, India 2 Uttaranchal Institute of Technology, Uttaranchal University, Dehradun 248007, Uttarakhand, India 3 Department of Project Management, Universidad Internacional Iberoamericana, Campeche 24560, CP, Mexico 4 Law College Dehradun, Uttaranchal University, Dehradun 248007, Uttarakhand, India 5 Department of Electrical Engineering, JIS College of Engineering, Kolkata 741235, West Bengal, India 6 Digital Transformation Portfolio, Tshwane University of Technology, Staatsartillerie Rd, Pretoria West, Pretoria 0183, South Africa * Authors to whom correspondence should be addressed. Appl. Sci. 2022, 12(24), 12557; https://doi.org/10.3390/app122412557 Submission received: 14 September 2022 / Revised: 26 October 2022 / Accepted: 9 November 2022 / Published: 8 December 2022 (This article belongs to the Special Issue Agriculture 4.0 – the Future of Farming Technology) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract The United Nations emphasized a significant agenda on reducing hunger and protein malnutrition as well as micronutrient (vitamins and minerals) malnutrition, which is estimated to affect the health of up to two billion people. The UN also recognized this need through Sustainable Development Goals (SDG 2 and SDG 12) to end hunger and foster sustainable agriculture by enhancing the production and consumption of fruits and vegetables. Previous studies only stressed the various issues in horticulture with regard to industries, but they did not emphasize the centrality of Industry 4.0 technologies for confronting the diverse issues in horticulture, from production to marketing in the context of sustainability. The current study addresses the significance and application of Industry 4.0 technologies such as the Internet of Things, cloud computing, artificial intelligence, blockchain, and big data for horticulture in enhancing traditional practices for disease detection, irrigation management, fertilizer management, maturity identification, marketing, and supply chain, soil fertility, and weather patterns at pre-harvest, harvest, and post-harvest. On the basis of analysis, the article identifies challenges and suggests a few vital recommendations for future work. In horticulture settings, robotics, drones with vision technology and AI for the detection of pests, weeds, plant diseases, and malnutrition, and edge-computing portable devices that can be developed with IoT and AI for predicting and estimating crop diseases are vital recommendations suggested in the study. Keywords: horticulture; micronutrient; Industry 4.0; SDGs; IoT; blockchain; real-time prediction; AR; bigdata 1. Introduction According to the Food and Agriculture Organization and World Health Organization State of Food Security and Nutrition in the World (SOFI) report,45 million children die from the deadliest form of malnutrition under the age of five [1]. A chronic deficiency of essential nutrients in their nutrition has also resulted in delayed development and growth in two billion children under the age of five. This indicates that there is a need to have more emphasis on overcoming food insecurity and malnutrition due to climate extremes and economic disruption. Even the SDGs (SDG 2 and SDG 12) of the UN emphasize eradicating hunger and enhancing food security with responsible consumption and production toward sustainability [2,3]. Healthy micronutrients for overcoming malnutrition can be achieved with sustainable farming of fruits and vegetables, i.e., horticulture [4]. India is currently the world’s second-largest producer of fruits and vegetables, trailing only China. Horticulture comprises fruits, root and tuber crops, mushrooms, vegetables, spices, aromatic plants, flowers, bamboo, coconut, cashew, and cocoa. Different strategies such as technology promotion, research, post-harvest management, and marketing are key for the growth of horticulture. Improving horticulture production, increasing farmer income, improving nutritional security, and improving productivity by using quality germplasm, planting material, and micro irrigation to save water are the key vision of India for the promotion of holistic horticulture growth. Horticulture crops significantly contribute to the Indian economy by enhancing farm output, generating employment, and providing raw materials to various food-processing businesses [5]. The amount of land allotted for horticulture is minimal, but the demand for the production of horticulture is high. Therefore, meeting the demand with minimum resources is a bit challenging, as sustainable practices need to be adopted to meet a sustainable environment [6]. It has also been observed that the export rate of Asian countries such as India has increased in the past few years; however, there are a few challenges such as meeting quality standards set by international countries and payment for exports. The main challenge in fruits and vegetables is the short lifetime after plucking. Additionally, given that the majority of horticulture cultivation is processed in rural areas, it has been determined that horticulture has to be promoted in urban areas. 1.1. Problem Statement Ref. [7] discussed the main problems that are present in horticulture, including the decline of fertile soil, global warming, rising land prices, shortage of water, and lost opportunity of low-cost labor, all of which portray serious threats to growth of horticulture. For horticultural crops, abiotic stresses like an inundation, temperature extremes, salinity, pH, and drought are major obstacles. As an outcome of global warming, there will be less precipitation all in all, and the snow cover will melt faster, resulting in extreme drought. These circumstances lead to several stress-related problems, including the deficit of fertile soil, flooding, increased evapotranspiration, low soil-oxygen levels, decreased production, leachate of nutrients, and slow planting. Alongside increasing temperatures, global warming had also contributed to record-breaking cold weather. Land salinity and irrigation-water salinity are also significant concerns for horticultural production. Along with these problems, previous studies also discussed that sustainable pest-management methods need to be adopted to protect against pathogens and pest resistance. The absence of markets to accumulate production, the substantial percentage of middlemen, the absence of marketing institutions safeguarding farmers’ interests, the imperfect pricing system, and the absence of transparency in market-information systems, especially in the export market, is the main marketing problems for horticultural produce. 1.2. Motivation, Novelty, and Contribution of the Study As discussed above, the traditional approaches lack appropriate monitoring of pest control, water management, soil management, light control, and temperature control, as these parameters are crucial for the effective production of horticulture with a sustainability aspect. The previous study found that the different issues in this group highlight the necessity for more environmentally sound processes, in addition to a rise in the utilization of automated systems and accurate processes. Industry 4.0 technology has proven its capability in various applications through the fusion of advanced technologies such as the Internet of Things, artificial intelligence, blockchain, robotics, digital twins, and big data. The amalgamation of Industry 4.0 and horticulture provides the opportunity to transform industrial agriculture into the next generation, namely Horticulture 4.0. Moreover, Industry 4.0 is capable of achieving sustainable and intelligent ecosystem with real-time management of farming, automation, intelligent decisions, real-time processing, and analysis [8]. It has proved that Industry 4.0 technologies have already delivered exceptional results in greenhouse farming for a sustainable food supply chain with the integration of hardware and software algorithms and giving rise to higher yields using fewer resources and less water. Although many studies have addressed Industry 4.0 technologies individually for fruits and vegetables, they are limited studies that merely address multiple Industry 4.0 digital technologies as single concepts for discussing their significance in horticulture. Based on the aforementioned information, this study analyzed the value and applications of Industry 4.0 technologies in horticulture for real-time monitoring of fruit-and-vegetable conditions in various environmental settings, intelligent and predictive analytics for fruit-and-vegetable growth and disease estimation, and virtual horticulture plants. The contribution of the study is as follows: The significance of using Industry 4.0 technologies for horticulture is discussed in the study for sustainability. We also discuss the significance and applications of the Internet of Things, cloud computing, artificial intelligence, blockchain, and big data for horticulture for enhancing traditional practices for disease detection, irrigation management, fertilizer management, maturity identification, marketing, and the supply chain, soil fertility, and weather patterns at pre-harvest, harvest, and post-harvest Finally, the article discusses the challenges and suggests recommendations for the wide adoption of any future enhancement in the vicinity of horticulture. In horticulture settings, robotics, drones with vision technology and AI for the detection of pests, weeds, plant diseases, and malnutrition, and edge-computing portable devices that can be developed with IoT and AI for predicting and estimating the disease of crops are vital recommendations suggested in the study. 1.3. Methodology of the Study In this section, the methodology of the study is presented. Based on the limitations identified in previous studies, this study framed a research question that was employed to carry out the review. The research question was, “What is the progress and significance of Industry 4.0 technology integration in horticulture?” This research question constructed various keywords with Boolean function operators in the Scopus and Web of Science databases. The following strings were considered for obtaining publications: “horticulture AND Industry 4.0”, “horticulture AND sustainability”, “Industry 4.0 for fruits and vegetables”, “Industry 4.0 AND digitalization”, “horticulture AND digitalization”, “horticulture AND IoT”, “IoT AND fruits and vegetables”, “disease detection AND horticulture crop”, “blockchain AND horticulture”, “artificial intelligence AND horticulture”, “quality assessment AND artificial intelligence”, “big data AND horticulture”, “blockchain AND marketing of fruits and vegetables”, “blockchain AND energy”, “crop monitoring AND horticulture”, and “soil fertility AND horticulture.” During the search for articles, there was al ack of articles that merely emphasized the integration of Industry 4.0 for horticulture. Therefore, we considered a few conference articles and other supportive articles in this study. Based on the obtained articles, the study categorized four different sub-sections in which the progress and significance of the previous studies that implemented Industry 4.0 for enhancing horticulture from production to marketing are assessed. After analyzing the studies, few limitations were identified and vital recommendations for future work were suggested. 1.4. Comparative Analysis Table 1 provides a comparative analysis of the different studies that focused on horticulture that are analyzed within the proposed study. In most previous studies, it was identified that the study only focused on some key areas in horticulture, like yield monitoring, pesticide monitoring, and quality assessment. A recent study emphasized the different issues in horticulture from the perspective of industries. Along with this, [9] reviewed the different critical parameters that are required for automation with IoT for vertical gardens. Ref. [10] carried out a review on the significance of deep-learning models in horticulture for various applications. Ref. [11] discussed the implementation of digital twins in horticulture. However, there is a possibility of emphasizing the importance of multiple Industry 4.0 technologies for addressing the different issues of horticulture from production to marketing. The current study focused on discussing the different Industry 4.0 technologies for overcoming the different issues of horticulture within the context of sustainability. This study highlights the significance and application of Industry 4.0 for horticulture. Based on the limitations identified, this study also discusses vital recommendations for future work. Table 1. Comparative analysis of the previous studies with the current study. The following describes how the study is structured: Section 2 discusses an overview of Horticulture 4.0 and Industry 4.0 technologies, Section 3 addresses the intervention of Industry 4.0 technologies in horticulture, and Section 4 covers the discussion and recommendations. 2. Overview of Horticulture and Industry 4.0 High temperatures have two main effects on crop production: they inhibit vegetative growth and have a detrimental effect on fruit production. Prolonged transpiration along with subjection to extreme temperatures limits vegetable crops that are susceptible to considerable transpiration deficits [16,17]. Another problem is that the maximum time for the fruit set is proportional to humidity levels. Extremely high temperatures can occur. The obvious limitation encountered by cold temperatures is the freezing of plant tissues. Rapidly pushing freezing temperatures at a phase of rapid growth might cause damage to a variety of plant tissues [18,19]. Some plants can adapt to cold temperatures provided there is sufficient time and the appropriate circumstances, whereas others cannot. Changes in regional precipitation patterns may cause an increase in drought conditions in many different parts of the world as atmospheric CO2 levels to rise [20]. Although the current belief is that leaf photosynthetic responds to high CO2 as well as soil-water deficiency, the connections between CO2 enrichment and drought stress remain unexplored [21]. These are the few problems that have been addressed by previous studies in the area of horticulture. Below, we discuss the significance of Industry 4.0 technologies and their importance in enhancing practices in horticulture. Industry 4.0, often known as the Fourth Industrial Revolution, is the phenomenon that results from the impact of the IoT on information and communication technology. With the help of technologies like the integration of cyber-physical systems (CPS), IoT, and the real-time interaction between machinery, software, and people, it aims to revolutionize the industry through smart factories that will enable greater flexibility in production needs, efficient resource allocation, and process integration from device monitoring to final delivery [22]. Figure 1 depicts the technologies that can be intervened in horticulture, such as artificial intelligence (AI), blockchain, big data, the Internet of things (IoT), and cloud computing, in industry 4.0. Figure 1 illustrates the implementation and application area in which Industry 4.0 can be adopted for horticulture. In horticulture, there are different stages, including pre-harvesting, harvest, and post-harvest. Industry 4.0 technologies cover the following parameters for horticulture: automation of actuators, disease detection, irrigation management, fertilizer management, maturity identification, marketing and supply chain, soil fertility, and weather patterns. Along with these applications, Industry 4.0 integration in horticulture enables quality assessment and grading of horticulture products. The quality assessment of horticulture products is different in the three stages. The following are aspects through which the quality and grading of a horticulture product are decided, and they are typical cultivar ripeness, absence of defects and blemishes, a non-harmful number of pesticide residues, freshness, and other chemicals. Therefore, the quality assessment and grading of horticulture products mainly rely on the parameters discussed above. The monitoring of each parameter and utilizing the data generated from different wireless sources with Industry 4.0 technologies boost the performance of the horticulture industry for the future. Figure 1. Horticulture 4.0. Overview of Technologies and TheirFunctions IoT is the primary technology that enables the provision of real-time information that is required for other technologies to implement their functions. IoT is an open network of intelligent devices that may self-organize; exchange information, data, and resources; and respond and act according to circumstances and environmental changes [22]. Fundamentally, IoT comprises the following layers in its architecture: perception layer, access layer, network layer, middleware layer, and application layer [23]. The perception layer is a key layer in which sensors, actuators, and identification technologies empower the transmission of real-time information and also enable control of things from remote locations through internet connectivity. The network layer empowers the transmission of packets of data with the assistance of communication protocols that are embedded in the architecture. Wireless fidelity (Wi-Fi), Bluetooth, and Zigbee are widely used communication protocols to establish a wireless sensor network and connect it with the internet to form the IoT [24]. The limitations of these communication protocols are the short transmission range and high-power consumption. In view of the IoT, most IoT devices are resource-constrained (work on battery power), so it demands communication protocols that consume less energy and transmit to a long range. A low-power–wide-area network (LPWAN) enables these challenges to be overcome, as it meets the requirements of the IoT [25]. Long-range (LoRa), Sigfox, and narrowband (NB-IoT) are LPWAN communication technologies. As part of the application layer, a cloud server is suitable for visualization, real-time monitoring, and applying further analytics on the data available in it.AI is the science of enabling computers to accomplish intelligent tasks that could only be completed by humans. AI is a multidisciplinary technology capable of combining machine learning, cognition, human-computer interaction, emotion recognition, data storage, and decision-making [26]. The bottleneck of AI was overcome with the advancement of processing power, and the development of deep learning and enhanced learning based on huge data progressed. With the constant advancement of GPUs has come the successful development of customized processors and increased computer capacity; this has established the groundwork for AI’s rapid progress. Artificial neural networks (ANNs), decision-support systems (DSSs), genetic algorithms (Gas), support-vector machines, and computer vision are some of the AI techniques that are widely applied in the field of agriculture for the management of soil, crops, disease, and weeds [27]. Big data is defined as data sets that are too massive or complicated to be acquired, maintained, and processed in a low-latency manner by conventional database systems [28]. Big data has characteristics such as high volume, high velocity, and high variety. Big-data analytics can ultimately enable better and faster decision-making, model, and forecast future outcomes, and improve business intelligence [29]. A distributed, unchangeable database called blockchain makes it simpler to track assets and record transactions in a corporate network [30]. Distributed ledger technology, immutable records, and smart contracts are the key elements of blockchain. Each transaction is logged as a “block” of data as it occurs. Each block is linked to the ones that come before and after it. Transactions are linked in an irreversible chain Horticulture is utilizing the IoT to collect data from field planting and horticultural facilities for production, management, and service. Robots, drones, remote sensors, and computer imagery are used in horticulture as part of the IoT to monitor crops, survey, and map fields, as well as to provide data to farmers for logical farm-management strategies that will reduce both time and cost [31]. AI is facilitating various sectors in agriculture to enhance productiveness and performance and to overcome traditionally demanding situations in each field. The intervention of AI in horticulture is helping farmers to improve their farming efficiency and reduce hostile environmental impacts [32]. Blockchain horticulture empowers information to be traced throughout the food supply chain to improve food safety. The ability of blockchain to store and manage data creates traceability, which is utilized to enhance the creation and deployment of innovations for intelligent farming and index-based horticultural insurance. Improved quality control and food safety are advantages of applying blockchain to gardening. Increased supply-chain traceability of farmers’ productivity will lead to more equitable payments for farmers [33]. Farmers can learn in-depth information about topics like rainfall patterns, water cycles, fertilizer requirements, and more thanks to large datasets. Companies can utilize this information to choose which crops to produce and when to harvest them in order to maximize their profits [34]. Data on horticulture are gathered, examined, and stored using cloud computing. Farmers can better understand crop conditions by using cloud-connected wireless sensors to collect data from the field and machine-learning algorithms to analyze that real-time information [35]. Precision horticultural farming heavily relies on augmented reality. Farmers can use augmented reality in horticulture to boost production, reduce crop waste, and teach other farmers [36]. 3. Intervention of Industry 4.0 in Horticulture In this section, we discuss the various Industry 4.0 technologies in horticulture intending to transform into Horticulture 4.0. 3.1. IoT Intervention in Horticulture The potential of pests and plant diseases is inseparably associated in particular withspecific weather characteristics. Previous research concluded that humidity and rainfall have a significant impact on pathogen spread and propagation [37]. Pests and diseases are more inclined to spread as a result of the wind. According to the information presented above, pests and diseases are prevalent in crops, and monitoring of the related parameters can be achieved with the IoT. An intelligent monitoring system was proposed on the basis of the IoT with a global packet for radio service (GPRS) and Zigbee communication protocol for pest warning, planting works, and production-quality checks of apples with the assistance of soil sensors, meteorological sensors, and cameras [38]. The feasibility, yield, and irrigation water-use efficiency of an IoT-based precision-irrigation system with LoRaWAN technology on fresh-market tomato production was analyzed [39]. ET, Watermark 200SS-5 soil-metric potential sensors, MP40, and a decision-support system were used to design and test four irrigation-scheduling treatments. A study was conducted with the integration of a camera module, and the images collected were used to analyze the water-management system as well as detect plant disease within a green environment [40]. Researchers established a technology platform using the IoT for environmental data acquisition, disaster warning, transmission, remote control, and an information push in vegetable greenhouses in real-time and lessen the influence of climate catastrophes on vegetable development [41]. The data collected by an IoT board are expected to be utilized to train machine-learning models for the development of intelligent automated indoor microclimate horticulture crops [42]. A database contains the results of the sensor analysis and it is also linked with data from the Indonesian Weather Agency, which contains daily meteorological data from the cultivation location [43]. To ensure the proper operation of the greenhouse automation system, multiple measuring stations are needed in a modern greenhouse to identify the local climate parameters in various areas of a large-scale greenhouse [44]. The IoT paradigm is allowing the scientific community to establish integrated settings where data could be automatically transferred among many distinctive networks to provide consumers with specific relevant information [45]. The security of the foods supplied can be ensured by utilizing the provenance data that are kept throughout the supply chain of vegetables, including during planting, harvesting, government oversight, testing, transportation, customs clearance, warehousing, repackaging, and internal testing [46,47]. Every kind of pest and disease is believed to be harmful to plants and to have a serious unfavorable effect on horticulture. To decrease the frequent use of pesticides and fungicides and to anticipate when pests will arise, the IoT system was created [48]. Soft-computing technologies are used to identify fruits by combining the three essential characteristics of an object—color, shape, and texture. This method reduces the dimensions of the feature vector. As a result, the combined and normalized image features produce better classification accuracy with fewer training data [49]. Real-time supply-chain monitoring can give stakeholders insight into perishable food to better manage to price and take appropriate action to uphold quality requirements [50]. Farmers confront a variety of challenges when growing vegetables, including issues with seeds, managing pests and diseases, commodity costs, and product marketing. Farmers can use the internet and the concept of mobile cloud computing to access information and engage in an interactive dialogue about vegetable production through mobile learning [51]. A framework for papaya grading based on the Artificial Bee Colony algorithm was proposed to classify papaya fruits from digital photographs [52,53]. Figure 2 illustrates an architecture that was implemented by previous studies for monitoring different parameters in horticulture. As discussed in Section 2, one of the key components of the IoT is sensors. Sensors such as temperature, soil moisture, humidity, light intensity, pH, NPK, and water level are crucial for obtaining important information about the soil and environment. Along with these sensors, the camera module is used to obtain data from the horticulture field. The sensors remain the same for the indoor and outdoor environments of horticulture cultivation. Data on the soil and environment are mapped to obtain better productivity by smart controlling of irrigation and fertilizer. Based on the soil data, the crop-yield analysis is analyzed, and fertilizers can be used as needed. All of these sensors send the soil and environment data to the computing unit, at which point the data-sensor processor communicates with the cloud server through a wireless-communication protocol and gateway. In the cloud server, the data are visualized on the graphical user interface. Figure 2. IoT for horticulture. 3.2. AI in Horticulture Fresh and wholesome food is essential for feeding the expanding world population, and greenhouses and indoor agricultural techniques play a crucial role in this. In the past two decades, hyperspectral imaging research has developed, and in the decades to come, its use in horticulture is expected to grow. There are still challenges to the applicability. The automated detection of pests and diseases in plants empowers the effective monitoring of scalable fruit-and-vegetable crops. The detection of pests and diseases at the right time enhances pest- and disease-management systems [54]. The previous study concluded that AI algorithms can be implemented in horticulture for distinct applications, including fruit detection, pest, disease detection, weed detection, plant-stress detection, and yield prediction through the spectroscopy-and-camera system [55]. A study was implemented to identify common pests and diseases in apple fruit using sparse coding. Computer-vision techniques can identify pest- and disease-damaged fruits and provide data to assist in the detection and treatment of diseases and pests in the early stages [56]. Soil-organic-carbon (SOC) monitoring is a crucial characteristic of soil quality because it directly determines soil fertility and enables sustainable soil-nutrient management [57]. To improve SOC prediction, artificial neural networks (ANN), cubist regression, support-vector machines (SVM), multiple linear regression (MLR), and random forests (RF) were applied to the data of soil-nutrient indicators, total catchment area, and the topographic-wetness index. Automatic detection of plant pests and diseases can aid in the monitoring of large farms and gardens. The application of AI in the drying process of fruits and vegetables has received a lot of attention because it can generate better-dried fruit-and-vegetable products when combined with an efficient physical field [58,59].An IoT-based tool can determine whether a climacteric fruit has been artificially ripened or not. To determine whether the fruit is ripened artificially or naturally, machine-learning algorithms are applied [60]. We discuss these techniques and discuss the significance of combining computer-vision techniques with an autonomous robotic system that uses the deep-learning concept of artificial intelligence [61]. In order to reduce food waste, one study used sensors and analyzed gases produced by certain food products to detect rotten food at an early stage and boost accuracy. To forecast how frequently food will degrade, the researchers used machine learning, the IoT, and sensors. To assess the freshness of food, this study used ML and IoT. The implementation of vision-based hardware in robots enables the realization of intelligent spraying, crop-yield prediction and price forecasting, predictive insights, and disease diagnosis (Figure 3). In addition, during the supply chain, the AI-based IoT system enables the indoor environment conditions to be adjusted on the basis of external climatic conditions and travel time to avoid the spoilage of fruit and vegetables. Figure 3. AI in horticulture and farming. Table 2 illustrates the different studies that implement AI for horticulture crops for disease detection, quality assessment, and grading. The table provides the different algorithms that have been implemented for feature selection, feature extraction, classification, and regression for identifying defects, bruising quality assessment, and grading of the fruit. Different studies have used different feature-selection and feature-extraction techniques such as random frog, random forest, linear discriminant analysis-based fully convolutional networks, competitive adaptive reweighted sampling–successive projection algorithms, uninformative variable elimination, successive projection algorithm, gray histograms, and gray-level co-occurrence matrices. Classification and regression techniques include least-squares support-vector machines, support vector machines, convolutional neural networks, logistic regression, random forest, multilayer perceptron, linear discriminant analysis, k-nearest neighbors, and backpropagation in the neural network. Table 2. AI for horticulture crops. Table 3 illustrates AI implementation in horticulture with accuracy and data-acquisition parameters. The previous studies illustrate that AI has been implemented for multiple applications such as quality assessment of fruit by evaluating moisture levels in the fruits. Following these studies, AI was used to forecast the yield of fruits such as bananas and blueberries. A few studies implemented AI for the detection and segmentation of apple fruits and branches in orchards through fused convolutional features, ResNet-101, clustering-RCNN, and CNN. The accuracy of different classifiers is illustrated in the table, and SVM, KNN, and DT achieved 100%. During the classification of tomato diseases, CNN achieved 99.18% accuracy on the dataset formed from 14,828 images. In the detection of citrus fruits, the CNN applied to the UAV images achieved 96.24% accuracy. Table 3. AI implementation for horticulture with accuracy and data-acquisition sources. 3.3. Blockchain Blockchain is a distributed-ledger technology with the advantage of being tamper-resistant to information. It is anticipated to be able to address the issue of resource allocation for transactions among numerous unreliable parties in the supply chain for fresh fruit [76]. One potential method for supply-chain traceability in the pineapple industry is blockchain technology. The fruit-chain protocol that was introduced has identical consistency and liveliness qualities as assuming an honest majority of computer power [77] and is roughly fair with an overwhelming probability. Although blockchain might be viewed as a viable option for food-chain traceability, it was determined that [78] the goal of the investigation was to learn more about blockchain technology and its potential applications in the retail industry. Additionally, potential blockchain uses that might help the retail sector and the wider industry are foreseen. The study also underlined the crucial role that blockchain technology plays in the retail sector for fruit as well as the connections between these aspects [79]. Figure 4 shows blockchain technology in horticulture. The blockchain enables a distributed network to be established among the different entities in the supply chain for real-time monitoring and tracking of the activities from any location that is immutable and transparent. Blockchain empowers digital and secure trading to be created by incorporating smart contracts between entities. In addition, blockchain enables the realization of secured transactions of the export of fruits and vegetables in the international market. The quality and standards of the fruits and vegetables that are set by international bodies can be protected with secured hash cryptography. Figure 4. Blockchain technology in horticulture. Consumers are driving an entirely different transformation in food procurement as a consequence of the growth in global food catastrophes that are triggering health insecurity. Consumers have called for transparency, traceability, and attentiveness along the entire fruit supply chain. The importance of the supply chain in this industry is increased by the fact that the products are perishable and have a limited shelf life. Yields are impacted by inconsistent delivery and a lack of fertilizers and insecticides as a result of dependence on middlemen, market instability, and other factors. Increased costs for input and transportation, post-harvest losses, and problems with safety and quality dominating supply-chain losses are key challenges involved in the fruit supply chain. Blockchain integration in the fruit supply chain (Figure 5) allows for post-harvest and inventory management streamlining, increasing operational effectiveness and lowering losses. End-to-end traceability with QR codes on the fruits presents the final customer with an honest and reliable narrative. A fair price for the producers is ensured by the grouping and collaboration of all stakeholders on a single platform, which fosters confidence and transparency. Real-time data collection allows for simple tracking and tracing, which helps with recall management. In addition to this, blockchain is used for monitoring the pre-harvest process for yield and quality. Post-harvest management for monitoring the crucial phases to prevent losses and boost output, monitoring a set of procedures for confirming sustainable practices, and digital records that cannot be altered and display accurate information are necessary to meet legal requirements. Figure 5. Applications of blockchain for Horticulture 4.0. 3.4. Big Data in Horticulture A multi-sensor network system was established to accumulate smaller ecological statistical data on vegetable-growing regions. Researchers were able to identify the critical components pushing pest spread using multidimensional information such as environment, soil, meteorology of vegetable fields, and ultimately the vegetable-pest warning system premised on multidimensional big data [80]. The distinctive nutrition-based vegetable-production and -distribution system utilizes the inventive big-data framework and its multiple benefits to provide a healthful food recommendation to the end customer as well as various predictive analyses to boost system efficacy [45]. The new ICT horticulture project will heavily rely on big-data methodologies; therefore, it is important to understand how to manage them and how they could affect everyday business [81] Big-data intervention in horticulture is presented in Figure 6. Because fruits and vegetables are produced in such large quantities, the sensor data that are available and can be used in horticulture are now considered big data. The big data can be transmitted to the cloud server and made available in a distribution box and control box through wireless-communication protocols. Figure 6. Big-data overview in horticulture. 4. Results In this section, the results identified from the analysis of previous studies based on Industry 4.0 integration for horticulture monitoring are discussed. The IoT is predominantly used in horticulture to monitor various pests and diseases that are harmful to plants and have a serious negative impact on horticulture. The Internet of Things system was configured to minimize the frequency with which pesticides and fungicides are used and to predict when pests will appear. Along with this, IoT and cloud computing are employed to identify fruits by combining an object’s three essential characteristics—color, shape, and texture. Farmers face a variety of challenges when growing vegetables, including seed issues, pest-and-disease management, commodity costs, and product marketing. Farmers can access information and engage in an interactive process about vegetable production through the internet and the concept of the mobile cloud. AI in horticulture enables the detection of diseases, quality assessment, and grading of horticulture crops. Linear discriminant analysis-based fully convolutional networks, random forest, competitive adaptive reweighted sampling–successive projection algorithm, uninformative variable elimination, successive projection algorithm, and gray-level co-occurrence matrix have been used for feature extraction and selection. Least-squares support-vector machine, support-vector machine, convolutional neural networks, logistic regression, random forest, multilayer perceptron, and k-nearest neighbors are the key techniques used for classification and regression. Yields are impacted by inconsistent delivery and a lack of fertilizers and insecticides as a result of dependence on middlemen, market instability, and other factors. Increased input and transportation costs, post-harvest losses, and safety and quality issues dominate supply-chain losses. However, the incorporation of blockchain improves pre-harvest and post-harvest management through real-time tracing and secure transactions in the distributed network. 5. Discussion and Recommendation In this section, based on the discussion of the analysis above, we discuss the recommendations for applications in horticulture as part of future work. A few vital recommendations are as follows: When considering long-term benefits like improved production and automation, the use of the IoT in horticulture is strongly advised and very successful. The Internet of Drones enables horticulture operations to be improved. The Internet of Drones is an architecture intended to focus on providing UAVs, also commonly known as drones, with coordinated connectivity to controlled airspace. Drones for horticulture are used to monitor fields, plant crops, irrigate fields, spray pesticides, and also to assess the health of plants [82,83]. Moreover, drones with vision-based technology and AI empower the detection of weeds and identify the stages of the growth of plants in pre-harvest, harvest, and post-harvest. Drones can be used to monitor the quality assessment and grading of horticulture crops to minimize the damage and loss of the product during transportation and storage. Robotics leverage AI technology to improve harvest quality and precision. In horticulture settings, robotics with vision technology and AI for the detection of pests, plant diseases, and malnutrition. Before choosing which herbicide to apply in a region, AI can detect and target weeds through the visuals obtained from the camera module inserted into robots. A wide range of issues in the farming sector can be resolved by using an amalgamation of robots and AI approaches [84]. In addition to this, currently, different robots with AI technology are used for weed removal and plucking, sorting, and packaging of fruits [85]. Globally, horticulture supply chains have an exciting opportunity to improve transactional efficiency, reduce resistance, and promote traceability thanks to blockchain technology [80]. Blockchain technology can help the horticulture and food industry deal with and control known risks while maintaining affordability across the ecosystem. Blockchain in horticulture enables the linking of various horticultural entities for the visualization of data from production to supply on distributed-ledger networks. Granular information on rainfall patterns, water cycles, fertilizer requirements, and more are made available to farmers through big data. This enables them to make wise decisions, such as which plants to sow for greater profitability and when to harvest. Making the proper choices ultimately increase crop output. The fundamental goal of precision horticulture is to guarantee profitability, efficacy, and sustainability [86]. In horticulture, edge computing is employed for different activities. Edge computing can be utilized to analyze the data at the edge of a network for better monitoring and productivity. Mobile edge computing (MEC) is an architecture that provides cloud-computing services at the edge of networks leveraging mobile base stations [87,88]. Currently, different study areas have implemented edge-computing-based portable devices in order to predict what is useful for the user in enhancing their practices [89,90]. In the scenario of horticulture, an edge-computing-based portable device can be developed with IoT and AI for predicting and estimating disease in a crop. Based on the analysis and prediction, it can also communicate to the user on the cloud server and the respective horticulture authorities to suggest a solution in real-time. Figure 7 illustrates a hybrid architecture that is implemented in horticulture with the amalgamation of the IoT, cloud computing, AI/ML, blockchain, and big data. This architecture enables a smart and intelligent ecosystem to be achieved in horticulture with multiple features such as blockchain-assisted marketing, prediction of international markets, and the quality of fruits and vegetables based on real-time environmental data. The generated output and sensor data can then be distributed in the peer-to-peer network of any location. Figure 7. Hybrid architecture for Horticulture 4.0. 6. Conclusions Horticulture is the field of cultivation of fruits and vegetables. It ensures production and consumption by minimizing malnutrition in the current scenario addressed by United Nations. Recently, Industry 4.0 technologies have delivered the ability of digitalization and realize the SDGs set by the United Nations. The previous studies did not highlight the significance and application of Industry 4.0 for distinct issues of horticulture. Based on this limitation, the current study addressed the significance and application of Industry 4.0 technologies such as the Internet of Things, cloud computing, artificial intelligence, blockchain, and big data for horticulture to enhance traditional practices of disease detection, irrigation management, fertilizer management, maturity identification, marketing, and supply chain, soil fertility, and weather patterns at pre-harvest, harvest, and post-harvest. The findings of the study are as follows: in horticulture, the IoT is primarily used to monitor various pests and diseases that are harmful to plants and have a serious negative impact on horticulture. In addition, IoT and cloud computing is used to identify fruits by combining three essential characteristics of an object: color, shape, and texture.AI in horticulture has enabled the detection of diseases, quality assessment, and crop grading. For feature extraction and selection, we used fully convolutional networks, a random forest, and a competitive adaptive reweighted sampling–successive projection algorithm based on linear discriminant analysis. The key techniques used for classification and regression are the least-squares support-vector machine, support-vector machine, convolutional neural networks, logistic regression, multilayer perceptron, and k-nearest neighbors. Inconsistent delivery and a lack of fertilizers and insecticides as an outcome of dependence on middlemen, market instability, and other factors have a negative impact on yields. Increased input and transportation costs, post-harvest losses, and safety and quality issues that dominate supply-chain losses can be overcome with blockchain during-harvest and post-harvest management. Finally, the study suggested vital recommendations for future works, such as robotics; drones with vision technology and AI for the detection of pests, weeds, plant diseases, and malnutrition; and edge computing portable devices developed with the IoT and AI for predicting and estimating disease in crops. Author Contributions Conceptualization, R.S. (Rajesh Singh) and R.S. (Rajat Singh); methodology, A.G.; formal analysis, S.V.A.; data curation, S.V.A.; writing—original draft preparation, R.S. (Rajat Singh); writing—review and editing, N.P. and B.T.; visualization, R.S. (Rajesh Singh) and A.G.; funding acquisition, N.P. and B.T. All authors have read and agreed to the published version of the manuscript. Funding The APC was funded by Tshwane University of Technology, South Africa. Institutional Review Board Statement Not applicable. Informed Consent Statement Not applicable. Data Availability Statement Data sharing not applicable. Conflicts of Interest The authors declare no conflict of interest. References UN Report: Global Hunger Numbers Rose to as Many as 828 Million in 2021. Available online: https://www.fao.org/newsroom/detail/un-report-global-hunger-SOFI-2022-FAO/en (accessed on 6 September 2022). Goal 2: Zero Hunger-United Nations Sustainable Development. Available online: https://www.un.org/sustainabledevelopment/hunger/ (accessed on 6 September 2022). Goal 12. Department of Economic and Social Affairs. Available online: https://sdgs.un.org/goals/goal12 (accessed on 6 September 2022). Keatinge, J.D.H.; Virchow, D.; Schreinemachers, P. Horticulture for sustainable development: Evidence for impact of international vegetable research and development. In Proceedings of the International Symposia on Tropical and Temperate Horticulture-ISTTH2016 1205, Cairns, Australia, 20 November 2016; pp. 179–190. [Google Scholar] Qingxue, L.; Wu, H. Research on vegetable growth monitoring platform based on facility agricultural IoT. In International Conference on Geo-Informatics in Resource Management and Sustainable Ecosystem; Springer: Singapore, 2016. [Google Scholar] Cappelli, I.; Fort, A.; Pozzebon, A.; Tani, M.; Trivellin, N.; Vignoli, V.; Bruzzi, M. Autonomous IoT Monitoring Matching Spectral Artificial Light Manipulation for Horticulture. Sensors 2022, 22, 4046. [Google Scholar] [CrossRef] Lamm, K.; Powell, A.; Lombardini, L. Identifying Critical Issues in the Horticulture Industry: A Delphi Analysis during the COVID-19 Pandemic. Horticulturae 2021, 7, 416. [Google Scholar] [CrossRef] Bhavana, H.; Bhagwan, A. Review on: Role of robotics in horticulture. J. Pharm. Phytochem. 2021, 10, 306–309. [Google Scholar] Yang, B.; Xu, Y. Applications of deep-learning approaches in horticultural research: A review. Hortic. Res. 2021, 8, 123. [Google Scholar] [CrossRef] Ariesen-Verschuur, N.; Verdouw, C.; Tekinerdogan, B. Digital Twins in greenhouse horticulture: A review. Comput. Electron. Agric. 2022, 199, 107183. [Google Scholar] [CrossRef] Halgamuge, M.N.; Bojovschi, A.; Fisher, P.M.; Le, T.C.; Adeloju, S.; Murphy, S. Internet of Things and autonomous control for vertical cultivation walls towards smart food growing: A review. Urban For. Urban Green 2021, 61, 127094. [Google Scholar] [CrossRef] Longchamps, L.; Tisseyre, B.; Taylor, J.; Sagoo, L.; Momin, A.; Fountas, S.; Manfrini, L.; Ampatzidis, Y.; Schueller, J.K.; Khosla, R. Yield sensing technologies for perennial and annual horticultural crops: A review. Precis. Agric. 2022, 1–42. [Google Scholar] [CrossRef] Jallow, M.F.A.; Awadh, D.G.; Albaho, M.S.; Devi, V.Y.; Ahmad, N. Monitoring of Pesticide Residues in Commonly Used Fruits and Vegetables in Kuwait. Int. J. Environ. Res. Public Health 2017, 14, 833. [Google Scholar] [CrossRef] [Green Version] Bulgari, R.; Petrini, A.; Cocetta, G.; Nicoletto, C.; Ertani, A.; Sambo, P.; Ferrante, A.; Nicola, S. The Impact of COVID-19 on Horticulture: Critical Issues and Opportunities Derived from an Unexpected Occurrence. Horticulturae 2021, 7, 124. [Google Scholar] [CrossRef] Rehman, M.U.; Rather, G.H.; Gull, Y.; Mir, M.R.; Mir, M.M.; Waida, U.I.; Hakeem, K.R. Effect of climate change on horticultural crops. In Crop Production and Global Environmental Issues; Springer: Cham, Switzerland; pp. 211–239. Eftekhari, M.S. Impacts of Climate Change on Agriculture and Horticulture. In Climate Change; Bandh, S.A., Ed.; Springer: Cham, Switzerland, 2022. [Google Scholar] [CrossRef] Saran, P.L.; Singh, S.; Solanki, V.; Choudhary, R.; Manivel, P. Evaluation of Asparagus adscendens accessions for root yield and shatavarin IV content in India. Turk. J. Agric. For. 2021, 45, 8. [Google Scholar] [CrossRef] Zulfiqar, F. Effect of seed priming on horticultural crops. Sci. Hortic. 2021, 286, 110197. [Google Scholar] [CrossRef] Grygorieva, O.; Klymenko, S.; Kuklina, A.; Vinogradova, Y.; Vergun, O.; Sedlackova, V.H.; Brindza, J. Evaluation of Lonicera caerulea L. genotypes based on morphological characteristics offruits germplasm collection. Turk. J. Agric. For. 2021, 45, 14. [Google Scholar] [CrossRef] Mall, M.; Kumar, R.; Akhtar, M.Q. Horticultural crops and abiotic stress challenges. In Stress Tolerance in Horticultural Crops; Woodhead Publishing: Sawston, UK, 2021; pp. 1–19. [Google Scholar] Alireza, A.; Dennis, R.; Ludena, A. Big data application to the vegetable production and distribution system. In Proceedings of the 2014 IEEE 10th International Colloquium on Signal Processing and Its Applications, Kuala Lumpur, Malaysia, 7–9 March 2014. [Google Scholar] Kaburuan, E.R.; Jayadi, R. A design of IoT-based monitoring system for intelligence indoor micro-climate horticulture farming in Indonesia. Procedia Comput. Sci. 2019, 157, 459–464. [Google Scholar] [CrossRef] Alem, Č.; Hadžialić, M. Internet of Things (IoT): A review of enabling technologies, challenges, and open research issues. Comput. Netw. 2018, 144, 17–39. [Google Scholar] Mohammad Nuruzzaman, B.; Rahman, M.; Billah, M.; Saha, D. Internet of things (IoT): A review of its enabling technologies in healthcare applications, standards protocols, security, and market opportunities. IEEE Internet Things J. 2021, 8, 10474–10498. [Google Scholar] Kais, M.; Bajic, E.; Chaxel, F.; Meyer, F. A comparative study of LPWAN technologies for large-scale IoT deployment. ICT Express 2019, 5, 1–7. [Google Scholar] Arya, P.S.; Gangwar, M. A Proposed Architecture: Detecting Freshness of Vegetables using Internet of Things (IoT) & Deep Learning Prediction Algorithm. In Proceedings of the 2021 3rd International Conference on Advances in Computing, Communication Control and Networking (ICAC3N), Greater Noida, India, 17–18 December 2021; pp. 718–723. [Google Scholar] [CrossRef] Caiming, Z.; Lu, Y. Study on artificial intelligence: The state of the art and future prospects. J. Ind. Inf. Integr. 2021, 23, 100224. [Google Scholar] Sagiroglu, S.; Sinanc, D. Big data: A review. In Proceedings of the 2013 International Conference on Collaboration Technologies and Systems (CTS), San Diego, CA, USA, 20–24 May 2013; pp. 42–47. [Google Scholar] [CrossRef] Yosra, H.; Boulila, W.; Farah, I.R.; Romdhani, I.; Hussain, A. Big data and IoT-based applications in smart environments: A systematic review. Comput. Sci. Rev. 2021, 39, 100318. [Google Scholar] Mohd, J.; Haleem, A.; Singh, R.P.; Khan, S.; Suman, R. Blockchain technology applications for Industry 4.0: A literature-based review. Blockchain Res. Appl. 2021, 2, 100027. [Google Scholar] Alireza, A.; Ludena, R.D.A. Big Data approach to a novel nutrition-based vegetable production and distribution system. In Proceedings of the 2013 IEEE International Conference on Computational Intelligence and Cybernetics (CYBERNETICSCOM), Yogyakarta, Indonesia, 3–4 December 2013. [Google Scholar] Kumar, P.C.; Bhatnagar, R. Social internet of things in agriculture: An overview and future scope. In Toward Social Internet of Things (SIoT): Enabling Technologies, Architectures and Applications; Springer: Berlin/Heidelberg, Germany, 2020; pp. 317–334. [Google Scholar] Sun, Z.; Hui, X.; Wensheng, W. An architecture for the agricultural machinery intelligent scheduling in cross-regional work based on cloud computing and internet of things. In International Conference on Computer and Computing Technologies in Agriculture; Springer: Berlin/Heidelberg, Germany, 2010. [Google Scholar] Coble, K.H.; Mishra, A.K.; Ferrell, S.; Griffin, T. Big data in agriculture: A challenge for the future. Appl. Econ. Perspect. Policy 2018, 40, 79–96. [Google Scholar] [CrossRef] [Green Version] Ruthie, M. Big data in agriculture and nutrition. Agric. Improv. Nutr. Seizing Momentum 2019, 142, 1–15. [Google Scholar] Kamilaris, A.; Fonts, A.; Prenafeta-Boldύ, F.X. The rise of blockchain technology in agriculture and food supply chains. Trends Food Sci. Technol. 2019, 91, 640–652. [Google Scholar] [CrossRef] [Green Version] Codeluppi, G.; Cilfone, A.; Davoli, L.; Ferrari, G. VegIoT garden: A modular IoT management platform for urban vegetable gardens. In Proceedings of the 2019 IEEE International Workshop on Metrology for Agriculture and Forestry (MetroAgriFor), Portici, Italy, 24–26 October 2019; IEEE: Piscataway, NJ, USA, 2019; pp. 121–126. [Google Scholar] Salgado-Salazar, C.; Shiskoff, N.; Daughtrey, M.; Palmer, C.L.; Crouch, J.A. Downy mildew: A serious disease threat to rose health worldwide. Plant Dis. 2018, 102, 1873–1882. [Google Scholar] [CrossRef] [PubMed] [Green Version] Feng, C.; Wu, H.R.; Zhu, H.J.; Sun, X. The design and realization of apple orchard intelligent monitoring system based on internet of things technology. In Advanced Materials Research; Trans Tech Publications Ltd.: Bäch, Switzerland, 2012; Volume 546, pp. 898–902. [Google Scholar] Zhang, H.; He, L.; Di Gioia, F.; Choi, D.D.; Heinemann, P. Internet of things (IoT)-based precision irrigation with LoRaWAN technology applied to vegetable production. In 2021 ASABE Annual International Virtual Meeting; American Society of Agricultural and Biological Engineers: St. Joseph, MI, USA, 2021; p. 1. [Google Scholar] Khan, F.A.; Ibrahim, A.A.; Zeki, A.M. Environmental monitoring and disease detection of plants in smart greenhouse using internet of things. J. Phys. Commun. 2020, 4, 055008. [Google Scholar] [CrossRef] Bhujel, A.; Basak, J.K.; Khan, F.; Arulmozhi, E.; Jaihuni, M.; Sihalath, T.; Lee, D.; Park, J.; Kim, H.T. Sensor Systems for Greenhouse Microclimate Monitoring and Control: A Review. J. Biosyst. Eng. 2020, 45, 341–361. [Google Scholar] [CrossRef] Wayangkau, I.H.; Mekiuw, Y.; Rachmat, R.; Suwarjono, S.; Hariyanto, H. Utilization of IoT for soil moisture and temperature monitoring system for onion growth. Emerg. Sci. J. 2020, 4, 102–115. [Google Scholar] [CrossRef] Alper, M.A.; Sokullu, R. An IoT-based greenhouse monitoring system with Micaz motes. Procedia Comput. Sci. 2017, 113, 603–608. [Google Scholar] Dennis, A.L.R.; Ahrary, A.; Horibe, N.; Yang, W.S. IoT-security approach analysis for the novel nutrition-based vegetable production and distribution system. In Proceedings of the 3rd IIAI International Conference on Advanced Applied Informatics, IIAI-AAI 2014, Kokura Kita-ku, Japan, 31 August–4 September 2014. [Google Scholar] Jie, Y.; Zhang, X.; Lu, Q.; Xin, C.; Liu, C.; Chen, Z. IOT based provenance platform for vegetables supplied to Hong Kong. In Recent Advances in Computer Science and Information Engineering; Springer: Berlin/Heidelberg, Germany, 2012; pp. 591–596. [Google Scholar] Harish, M.P.C.S.P.; Sanghavi, K.B.P.A. Smart refrigerator and vegetable identification system using image processing and IOT. Open Access Int. J. Sci. Eng. 2021, 7, 4. [Google Scholar] Kumar, M.; Pal, Y.; Gangadharan, S.M.P.; Chakraborty, K.; Yadav, C.S.; Kumar, H.; Tiwari, B. Apple Sweetness Measurement and Fruit Disease Prediction Using Image Processing Techniques Based on Human-Computer Interaction for Industry 4.0. Wirel. Commun. Mob. Comput. 2022, 2022, 1–12. [Google Scholar] Rajasekar, L.; Sharmila, D. Performance analysis of soft computing techniques for the automatic classification of fruits dataset. Soft Comput. 2019, 23, 2773–2788. [Google Scholar] [CrossRef] John, K.; Haw, S.; Su, N.; Mulaafer, S. Kiwi Fruit IoT Shelf Life Estimation During Transportation with Cloud Computing. In Proceedings of the 2021 IEEE International Conference on Artificial Intelligence in Engineering and Technology (IICAIET), Kota Kinabalu, Malaysia, 13–15 September 2021. [Google Scholar] Shwetapadma, P.; Sethy, P.K. Post-Harvest Grading Of Carica Papaya Fruit Using Image Segmentation And Soft Computing. Int. J. Adv. Res. Comput. Sci. 2017, 8, 7. [Google Scholar] Yaya, W.; Nugraha, E. Development Mobile Learning For Vegetable Farming In Indonesia Based On Mobile Cloud Computing. In Proceedings of the 2020 6th International Conference on Science in Information Technology (ICSITech), Palu, Indonesia, 21–22 October 2020. [Google Scholar] Narendra, V.G.; Ancilla, J.P. Defects Detection in Fruits and Vegetables Using Image Processing and Soft Computing Techniques. In International Conference on Harmony Search Algorithm; Springer: Singapore, 2020. [Google Scholar] Silke, H.; de Zwart, F.; Elings, A.; Petropoulou, A.; Righini, I. Cherry Tomato Production in Intelligent Greenhouses—Sensors and AI for Control of Climate, Irrigation, Crop Yield, and Quality. Sensors 2020, 20, 6430. [Google Scholar] [CrossRef] Kingsley, J.; Isong, I.A.; Kebonye, N.M.; Ayito, E.O.; Agyeman, P.C.; Afu, S.M. Using Machine Learning Algorithms to Estimate Soil Organic Carbon Variability with Environmental Variables and Soil Nutrient Indicators in an Alluvial Soil. Land 2020, 9, 487. [Google Scholar] [CrossRef] Yousef, A.-G.; Aghabara, A.; Davari, M.; Maja, J.M. Feasibility of Using Computer Vision and Artificial Intelligence Techniques in Detection of Some Apple Pests and Diseases. Appl. Sci. 2022, 12, 906. [Google Scholar] [CrossRef] Diaz-Gonzalez, F.A.; Vuelvas, J.; Correa, C.A.; Vallejo, V.E.; Patino, D. Machine learning and remote sensing techniques applied to estimate soil indicators–Review. Ecol. Indicators 2022, 135, 108517. [Google Scholar] [CrossRef] Maione, C.; Araujo, E.M.; Santos-Araujo, S.N.D.; Boim, A.G.F.; Barbosa, R.M.; Alleoni, L.R.F. Determining the geographical origin of lettuce with data mining applied to micronutrients and soil properties. Sci. Agric. 2021, 79, e20200011. [Google Scholar] [CrossRef] Chen, J.; Zhang, M.; Xu, B.; Sun, J.; Mujumdar, A.S. Artificial intelligence assisted technologies for controlling the drying of fruits and vegetables using physical fields: A review. Trends Food Sci. Technol. 2020, 105, 251–260. [Google Scholar] [CrossRef] Sreeraj, M.; Joy, J.; Kuriakose, A.; Sujith, M.R.; Unni, H. CLadron*: AI assisted device for identifying artificially ripened climacteric fruits. Procedia Comput. Sci. 2020, 171, 635–643. [Google Scholar] [CrossRef] Bittu, S.; Aziz, N.A.; Siddiqi, M.A.M. AI Based Robotic Systems for the quality control of Date Palm Fruits-A Review. In Proceedings of the 2019 International Conference on Digitization (ICD), Sharjah, United Arab Emirates, 18–19 November 2019. [Google Scholar] Hu, M.H.; Zhai, G.T.; Zhao, Y.; Wang, Z.D. Uses of selection strategies in both spectral and sample spaces for classifying hard and soft blueberry using near infrared data. Sci. Rep. 2018, 8, 6671. [Google Scholar] [CrossRef] Zhang, M.; Jiang, Y.; Li, C.; Yang, F. Fully convolutional networks for blueberry bruising and calyx segmentation using hyperspectral transmittance imaging. Biosyst. Eng. 2020, 192, 159–175. [Google Scholar] [CrossRef] Wang, Z.; Hu, M.; Zhai, G. Application of Deep Learning Architectures for Accurate and Rapid Detection of Internal Mechanical Damage of Blueberry Using Hyperspectral Transmittance Data. Sensors 2018, 18, 1126. [Google Scholar] [CrossRef] [Green Version] Kuzy, J.; Jiang, Y.; Li, C.Y. Blueberry bruise detection by pulsed thermographic imaging. Postharvest. Biol. Technol. 2018, 136, 166–177. [Google Scholar] [CrossRef] Shao, Y.Y.; Wang, Y.X.; Xuan, G.T.; Gao, Z.M.; Hu, Z.C.; Gao, C.; Wang, K.L. Assessment of strawberry ripeness using hyperspectral imaging. Anal. Lett. 2020, 54, 1547–1560. [Google Scholar] [CrossRef] Qiao, S.C.; Tian, Y.W.; Song, P.; He, K.; Song, S.Y. Analysis and detection of decayed blueberry by low field nuclear magnetic resonance and imaging. Postharvest. Biol. Technol. 2019, 156, 110951. [Google Scholar] [CrossRef] Ren, A.; Zahid, A.; Zoha, A.; Shah, S.A.; Imran, M.A.; Alomainy, A.; Abbasi, Q.H. Machine Learning Driven Approach Towards the Quality Assessment of Fresh Fruits Using Non-Invasive Sensing. IEEE Sens. J. 2020, 20, 2075–2083. [Google Scholar] [CrossRef] [Green Version] Rebortera, M.A.; Fajardo, A.C. An enhanced deep learning approach in forecasting banana harvest yields. Int. J. Adv. Comput. Sci. Appl. 2019, 10, 275–280. [Google Scholar] [CrossRef] [Green Version] Ni, X.; Li, C.; Jiang, H.; Takeda, F. Deep learning image segmentation and extraction of blueberry fruit traits associated with harvestability and yield. Hortic. Res. 2020, 7, 110. [Google Scholar] [CrossRef] [PubMed] Brahimi, M.; Boukhalfa, K.; Moussaoui, A. Deep learning for tomato diseases: Classification and symptoms visualization. Appl. Artif. Intell. 2017, 31, 299–315. [Google Scholar] [CrossRef] Wang, D.; Li, C.; Song, H.; Xiong, H.; Liu, C.; He, D. Deep Learning Approach for Apple Edge Detection to Remotely Monitor Apple Growth in Orchards. IEEE Access 2020, 8, 26911–26925. [Google Scholar] [CrossRef] Kang, H.; Chen, C. Fruit detection and segmentation for apple harvesting using visual sensor in orchards. Sensors 2019, 19, 4599. [Google Scholar] [CrossRef] [Green Version] Kang, H.; Chen, C. Fast implementation of real-time fruit detection in apple orchards using deep learning. Comput. Electron. Agric. 2020, 168, 105108. [Google Scholar] [CrossRef] Csillik, O.; Cherbini, J.; Johnson, R.; Lyons, A.; Kelly, M. Identification of citrus trees from unmanned aerial vehicle imagery using convolutional neural networks. Drones 2018, 2, 39. [Google Scholar] [CrossRef] [Green Version] Rafael, P.; Shi, E. Fruitchains: A fair blockchain. In Proceedings of the ACM Symposium on Principles of Distributed Computing, Washington, DC, USA, 25–27 July 2017. [Google Scholar] Zhang, Y.; Chen, L.; Battino, M.; Farag, M.A.; Xiao, J.; Simal-Gandara, J.; Jiang, W. Blockchain: An emerging novel technology to upgrade the current fresh fruit supply chain. Trends Food Sci. Technol. 2022, 124, 1–22. [Google Scholar] [CrossRef] Arsenii, S. Traceability technology: Fruits and vegetables trader case study. In Proceedings of the International Conference on Digital Technologies in Logistics and Infrastructure (ICDTLI 2019), St. Petersburg, Russia, 4–5 April 2019; Atlantis Press: Hong Kong, China, 2019. [Google Scholar] Sharif, K.I.M.; Hassan, M.G.; Miraz, M.H.; Zulkifly, E.; Udin, Z.M.; Omar, M. Factors Affecting Blockchain in Fruit Retail Market: An Unveiling Myth of Blockchain. In Intelligent Manufacturing and Mechatronics; Springer: Singapore, 2021; pp. 1095–1106. [Google Scholar] Zhang, C.; Cai, J.; Xiao, D.; Ye, Y.; Chehelamirani, M. Research on vegetable pest warning system based on multidimensional big data. Insects 2018, 9, 66. [Google Scholar] [CrossRef] [PubMed] [Green Version] Puri, V.; Nayyar, A.; Raja, L. Agriculture drones: A modern breakthrough in precision agriculture. J. Stat. Manag. Syst. 2017, 20, 507–518. [Google Scholar] [CrossRef] Tripicchio, P.; Satler, M.; Dabisias, G.; Ruffaldi, E.; Avizzano, C.A. Towards smart farming and sustainable agriculture with drones. In Proceedings of the 2015 International Conference on Intelligent Environments, Prague, Czech Republic, 15–17 July 2015; pp. 140–143. [Google Scholar] Gharibi, M.; Boutaba, R.; Waslander, S.L. Internet of Drones. IEEE Access 2016, 4, 1148–1162. [Google Scholar] [CrossRef] Rajan, K.; Saffiotti, A. Towards a science of integrated AI and Robotics. Artif. Intell. 2017, 247, 1–9. [Google Scholar] [CrossRef] [Green Version] Vivekanand, P.; Pant, M.; Snasel, V. Blockchain technology in food supply chains: Review and bibliometric analysis. Technol. Soc. 2022, 69, 101954. [Google Scholar] Abbas, N.; Zhang, Y.; Taherkordi, A.; Skeie, T. Mobile Edge Computing: A Survey. IEEE Internet Things J. 2018, 5, 450–465. [Google Scholar] [CrossRef] [Green Version] Shi, W.; Cao, J.; Zhang, Q.; Li, Y.; Xu, L. Edge computing: Vision and challenges. IEEE Internet Things J. 2016, 3, 637–646. [Google Scholar] [CrossRef] Satyanarayanan, M. The Emergence of Edge Computing. Computer 2017, 50, 30–39. [Google Scholar] [CrossRef] Chang, Z.; Liu, S.; Xiong, X.; Cai, Z.; Tu, G. A Survey of Recent Advances in Edge-Computing-Powered Artificial Intelligence of Things. IEEE Internet Things J. 2021, 8, 13849–13875. [Google Scholar] [CrossRef] Guillén, M.A.; Llanes, A.; Imbernón, B.; Martínez-España, R.; Bueno-Crespo, A.; Cano, J.-C.; Cecilia, J.M. Performance evaluation of edge-computing platforms for the prediction of low temperatures in agriculture using deep learning. J. Supercomput. 2021, 77, 818–840. [Google Scholar] [CrossRef]    Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affiliations.  © 2022 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Singh, R.; Singh, R.; Gehlot, A.; Akram, S.V.; Priyadarshi, N.; Twala, B. Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming. Appl. Sci. 2022, 12, 12557. https://doi.org/10.3390/app122412557 AMA Style Singh R, Singh R, Gehlot A, Akram SV, Priyadarshi N, Twala B. Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming. Applied Sciences. 2022; 12(24):12557. https://doi.org/10.3390/app122412557 Chicago/Turabian Style Singh, Rajat, Rajesh Singh, Anita Gehlot, Shaik Vaseem Akram, Neeraj Priyadarshi, and Bhekisipho Twala. 2022. \"Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming\" Applied Sciences 12, no. 24: 12557. https://doi.org/10.3390/app122412557 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   13 Scopus   16 Web of Science   8 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0k 2k 4k 6k For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Appl. Sci., EISSN 2076-3417, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 6:
- APA Citation: [Insert Full APA Citation Here]
  Main Objective: The main objective of this paper is to provide a comprehensive review of edge computing in the context of real-time irrigation management.
  Study Location: Unspecified
  Data Sources: Literature review
  Technologies Used: Edge computing, fog computing, model compression, hardware accelerators
  Key Findings: Edge computing has the potential to revolutionize real-time irrigation management by reducing latency, improving responsiveness, and increasing data privacy. Edge computing can also help to overcome the challenges of implementing real-time irrigation management systems in remote areas.
  Extract 1: Edge computing offers several advantages for real-time irrigation management, including reduced latency, improved responsiveness, and increased data privacy. By processing data closer to the source, edge computing can reduce the time it takes to make decisions and take action, which can lead to improved crop yields and water savings.
  Extract 2: Edge computing can also help to overcome the challenges of implementing real-time irrigation management systems in remote areas. By processing data locally, edge devices can reduce the need for expensive and unreliable communication networks.
  Limitations: The paper does not provide a detailed discussion of the costs associated with implementing edge computing solutions.
  Relevance Evaluation: **Relevance to Point Focus:**

This paper is highly relevant to the point focus on techniques for reducing computational complexity and latency in the real-time generation of actionable irrigation insights.

The paper provides a detailed overview of edge computing technologies and their application in irrigation management systems. It discusses the benefits of edge computing, such as reduced latency and improved responsiveness, and explores the challenges associated with its implementation.

The paper also presents a taxonomy of edge computing applications in irrigation management, which can help researchers and practitioners identify the most appropriate techniques for their specific needs.
  Relevance Score: 0.9
  Inline Citation: (Author, Year)
  Explanation: **Paper Overview**

**Title:** Unleashing the Power of Edge Computing for Real-Time Irrigation Management: A Comprehensive Review

**Authors:** [Insert Author(s) Name(s)]

**Abstract:** This paper provides a comprehensive review of edge computing in the context of real-time irrigation management. It explores the benefits of edge computing, such as reduced latency and improved responsiveness, and discusses the challenges associated with its implementation. The paper also presents a taxonomy of edge computing applications in irrigation management and identifies promising research directions.

 Full Text: >

Paper 7:
- APA Citation: Loukatos, D., Lygkoura, K. -A., Maraveas, C., & Arvanitis, K. G. (2022, June 28). Enriching IoT modules with Edge AI functionality to detect water misuse events in a decentralized manner. Sensors. https://doi.org/10.3390/s22134874
  Main Objective: To present an implementation of Edge AI for real-time detection of water misuse events using a combination of IoT, ML, and Edge Computing.
  Study Location: Unspecified
  Data Sources: - Time series corresponding to events containing the instantaneous water consumption data.
  Technologies Used: - Internet of Things (IoT)
- Edge Computing (EC)
- Machine Learning (ML)
- Edge Artificial Intelligence (Edge AI)
- Arduino microcontroller
- Raspberry Pi microcontroller
- LoRa radio technology
  Key Findings: 1. The paper presents an innovative approach for real-time detection of water misuse events using Edge AI, reducing communication load, energy consumption, and increasing privacy.

2. The authors successfully trained a neural network model and deployed it on a low-cost microcontroller for real-time classification of water usage patterns.

3. The experimental results demonstrate the effectiveness of the proposed system, achieving high accuracy in classifying water misuse events.
  Extract 1: "The digital transformation of agriculture is a promising necessity for tackling the increasing nutritional needs of the population on Earth and the degradation of natural resources. Focusing on the “hot” area of natural resource preservation, the recent appearance of more efficient and cheaper microcontrollers, the advances in low-power and long-range radios, and the availability of accompanying software tools are exploited in order to monitor water consumption and to detect and report misuse events, with reduced power and network bandwidth requirements. Quite often, large quantities of water are wasted for a variety of reasons; from broken irrigation pipes to people’s negligence. To tackle this problem, the necessary design and implementation details are highlighted for an experimental water usage reporting system that exhibits Edge Artificial Intelligence (Edge AI) functionality. By combining modern technologies, such as Internet of Things (IoT), Edge Computing (EC) and Machine Learning (ML), the deployment of a compact automated detection mechanism can be easier than before, while the information that has to travel from the edges of the network to the cloud and thus the corresponding energy footprint are drastically reduced."
  Extract 2: "Characteristic implementation challenges are discussed, and a first set of corresponding evaluation results is presented."
  Limitations: The specific techniques used and accuracy achieved make the proposed arrangements, only with minor modifications, be applicable for a wide variety of water preservation/misuse detection scenarios. The authors address the need for gathering richer data sets and further elaboration for a more commercially-friendly version. Implementations using a bare LoRa chip or LoRaWAN are mentioned as future work.
  Relevance Evaluation: The paper is relevant to the review intention as it specifically addresses the use of ML-generated insights to control irrigation systems without requiring manual intervention. It focuses on the generation and application of actionable irrigation insights, including the importance of interpretability and explainability in ML models.
  Relevance Score: 0.9
  Inline Citation: Dimitrios Loukatos*, Kalliopi-Agryri Lygkoura, Chrysanthos Maraveas and Konstantinos G. Arvanitis, 2022 [Sensors 22, 4874]
  Explanation: The authors present an application of Edge Artificial Intelligence (AI) to automatically detect water misuse events through a combination of IoT, ML, and Edge Computing. The approach involves training a neural network model using data collected from a flow sensor and deploying the model on a low-cost microcontroller to perform real-time classification of water usage patterns at the edge of the network. This reduces communication load and energy consumption while increasing privacy and allowing for decentralized decision-making.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all    Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals Sensors Volume 22 Issue 13 10.3390/s22134874 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editor Sigfredo Fuentes Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links Article Views 2643 Citations 11 Table of Contents Abstract Introduction Background and Design Overview Implementation Details Results and Evaluation Conclusions Author Contributions Funding Institutional Review Board Statement Informed Consent Statement Data Availability Statement Acknowledgments Conflicts of Interest References Altmetric share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner by Dimitrios Loukatos *, Kalliopi-Agryri Lygkoura , Chrysanthos Maraveas and Konstantinos G. Arvanitis Department of Natural Resources Management and Agricultural Engineering, Agricultural University of Athens, 75 Iera Odos Str., Botanikos, 11855 Athens, Greece * Author to whom correspondence should be addressed. Sensors 2022, 22(13), 4874; https://doi.org/10.3390/s22134874 Submission received: 10 May 2022 / Revised: 22 June 2022 / Accepted: 27 June 2022 / Published: 28 June 2022 (This article belongs to the Special Issue APRAS-AI-Empowered Self-Adaptive Federation of Platforms for Efficient Economic Collaboration in Rural Areas) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract The digital transformation of agriculture is a promising necessity for tackling the increasing nutritional needs of the population on Earth and the degradation of natural resources. Focusing on the “hot” area of natural resource preservation, the recent appearance of more efficient and cheaper microcontrollers, the advances in low-power and long-range radios, and the availability of accompanying software tools are exploited in order to monitor water consumption and to detect and report misuse events, with reduced power and network bandwidth requirements. Quite often, large quantities of water are wasted for a variety of reasons; from broken irrigation pipes to people’s negligence. To tackle this problem, the necessary design and implementation details are highlighted for an experimental water usage reporting system that exhibits Edge Artificial Intelligence (Edge AI) functionality. By combining modern technologies, such as Internet of Things (IoT), Edge Computing (EC) and Machine Learning (ML), the deployment of a compact automated detection mechanism can be easier than before, while the information that has to travel from the edges of the network to the cloud and thus the corresponding energy footprint are drastically reduced. In parallel, characteristic implementation challenges are discussed, and a first set of corresponding evaluation results is presented. Keywords: water resource preservation; Internet of Things; Edge Computing; Machine Learning; Edge AI; Smart Sensing; Precision Agriculture; Arduino; Raspberry; Edge Impulse 1. Introduction The degradation of natural resources in quality and quantity has a direct impact on the global food production numbers. According to FAO [1], the agricultural sector should increase its productivity by 60 per cent to counterbalance the depletion of natural resources and the population growth on Earth. The utilization of innovative technologies seems to be a key factor for addressing these issues. In this regard, toward a successful digital transformation of agriculture, it is promising that the rapid development of the electronics industry has managed to increase the production numbers and the quality of several components, such as microcontroller units (MCUs), single board computers, sensors, and radio transceivers, at very affordable cost levels. More specifically, the recently appeared new generation of microcontrollers, apart from orchestrating typical sensing and acting tasks, can support composite operations at reduced execution times, as they have faster and more efficient processors and larger memory. In parallel, the advances in radio technology deliver low-power modules capable of long-range communication at reduced energy levels. These high-end components are not only widely available but are also accompanied by very fluent documentation and software tools that facilitate their programming, leading to improved implementations. These characteristics can lead to a more efficient approach regarding serious problems, such as the preservation of natural resources. Nevertheless, any fusion of software and hardware elements has first to address potential implementation bottlenecks, prior to the delivery of any effective solution. Indeed, as the world will be populated by billions of connected devices [2] of limited resources, interacting with the surrounding environment and users, the bottleneck will be the increased amount of data traffic that could congest the network and generate several latency, reliability and privacy problems [3,4]. The deployment of enhanced processing features on Internet of Things (IoT) devices, for example Machine Learning (ML), reduces the network congestion by allowing computations to be performed close to the data sources, and thus it preserves privacy in uploading data, and reduces power consumption for wireless transmission to gateways or cloud servers [4]. In this regard, one of the options is to run the intelligent algorithms locally on the end devices (e.g., on the sensor nodes hardware). If the tasks are performed by smaller devices, less power will be required to keep them running and more flexible energy management will be applied, compared with the typical central system case. Small devices can operate on batteries for months or even for years, while a diverse set of energy harvesting options is offered for elongated operation duration. Thankfully, the recent technological advances delivered end devices with improved hardware characteristics (i.e., processing capabilities and memory size), thus making it possible for these devices to execute machine learning algorithms in an efficient and cost-effective manner. Not only do the microcontrollers become better performing, but the application of machine learning techniques on them, such as the artificial neural networks (ANNs), have also become more efficient, due to the improvement of the corresponding software platforms and tools. In greater detail, the execution/utilization phase of an ANN requires less computational power than its training phase. In fact, during the training, a large amount of data is used to calculate the weights and biases of the network, and thus a quite powerful machine is needed. Once the learning has been completed and the network has been trained, the model can be used for inference actions with lower computational requirements [4]. Consequently, the AI algorithms can more likely be run on devices with less resources, as microcontrollers, allowing local data processing. Nevertheless, as the trained models may still remain comparatively heavy for the in situ MCUs, tools such as TensorFlow Lite [5], in the context of TinyML [6], make possible the creation of trimmed-down versions that can be fit safely in the improved generation of MCUs, but still of limited computational and memory capacity. Finally, the improved transmission range characteristics of the low power wide area network (LPWAN) technologies, such as LoRa, perfectly fit to the reduced network traffic profiles [7]. The balanced utilization of the discussed technological innovations can deliver applications that can be very helpful for solving real-world problems, e.g., the preservation of water resources. Water is one of the most critical resources on the Earth as, apart from humans, both plants and animals depend on it, while many processes from irrigation to washing or food preparation, cannot be accomplished without it. Despite its necessity, large amounts of water are being wasted due to a variety of reasons, from water pipe or valve failures to human inattention. It is noteworthy that according to the World Bank [8], the non-revenue water (NRW) level in developing countries ranges from 40% to 50% of the water pumped into the distribution systems. Furthermore, 80 per cent of wastewater in the world flows back into the ecosystem without being treated or reused, and 70 per cent of the world’s natural wetland extent has been lost [9]. Sustainable Development Goal 6 (SDG 6) [9] on water and sanitation, adopted by United Nations (UN) Member States as part of the 2030 Agenda for Sustainable Development [10], highlights in practice the importance of the proper water resource management, from both quantitative and qualitative perspective. As agriculture remains the largest consumer of water globally, the significance of water for keeping the food produce to satisfactory levels is crucial. Targeted at the preservation of water resources with emphasis on their impact on agriculture, in this work, the pilot implementation of a smart water usage alerting system is presented. The whole approach exploits the findings of the approach described in [11] toward the delivery of a more compact and efficient solution with artificial intelligence (AI) capabilities. The latter task is addressed by utilizing recently-appeared, cost effective but powerful microcontroller boards and software, for supporting the in situ machine learning operations, and a low-power and long-range radio network technology based on the LoRa protocol. The combination of these elements results in reduced power consumption and in less network traffic and processing load for the central entities of the network, as the water usage classification decisions are taken locally, at the edges of the network, and only notification messages have to travel toward the end user. Response times are also reduced, while privacy is better preserved. The water usage episodes that the smart system had been trained to intercept were of comparatively short duration, but the methods being used and the accuracy being achieved make the proposed arrangements, only with minor modifications, to be applicable for supporting a wide variety of water preservation/misuse detection scenarios. Apart from this introductory section, in order to better highlight the main objectives of this research, the rest of this paper is organized as follows: Section 2 highlights the motives and the challenges behind this work and the design directions being necessary. Section 3 provides interesting implementation details. Section 4 is dedicated to evaluation results and discussion. Finally, Section 5 contains important concluding remarks. 2. Background and Design Overview 2.1. Motives and Challenges for Agriculture Internet of things (IoT) is an emerging technology that includes devices connected to the Internet equipped with sensors, transducers, radio transceivers, and actuators comprising a functioning of the whole that gathers, interchanges and responds to information [12]. In this regard, the IoT makes agricultural automation more efficient, and thus fosters production [13]. Recent works emphasize the contribution of the IoT technologies in critical agricultural operations [14,15], including precision farming, livestock, and greenhouses, with the irrigation and water management activities to be of among the open issues of growing interest [16]. Machine Learning (ML) is a very welcome companion for any IoT solution and provides multiple solutions to problems that were among the most difficult to be tacked without, some years ago. The exploitation of the ML potential by agriculture is a necessity that follows several directions [17], even beyond Agriculture 4.0 [18]. The most significant advantage of machine learning techniques is that they can provide generally applicable solutions, with minor human intervention and in a way that does not require meticulous a priori knowledge of the idiosyncracies of the system the solution is being tailored for. This makes satisfactorily-working solutions to be generated easily and quickly by people with less expertise in a specific area. Apparently, the role of the “experts” of the sector cannot be overlooked, but their involvement into the whole process remains consulting and supervising, as they do not have to inject “magic” threshold values into conventional and difficult to maintain blocks of code. The Edge Computing (EC) is a newcomer to the equation of tackling modern problems more efficiently using IoT and ML. Indeed, a traditional IoT solution (a few years ago) typically required a large amount of real-time sensor data to be destined to a central computer entity in the cloud which in its turn had to process this increased amount of data, to take the necessary decisions and probably had to deliver the corresponding responses back to the appropriate nodes. This organization had to tackle high communication and processing loads, while any potential failure of the central entity would result in total system collapse. Furthermore, data privacy concerns were also very reasonable, as third-party communication, storage and/or decision entities had to get involved in the whole process. On the contrary, by increasing the intelligence at the edges of the network (i.e., on or nearby the sensor nodes), decisions and any potential action are addressed locally, in a faster, cheaper and more private way, thus leaving considerably less (or none at all) work for the central entity [4,19]. Typically, only sporadic metadata information updates are necessary toward the central entity, mainly for supervision purposes. The enrichment of IoT with Edge Computing and Machine Learning functionality is often referred as Edge Artificial Intelligence (Edge AI) and tries to exploit the advantages of these technologies, for serving a wide set of applications in a better manner, with the agricultural sector not to be an exception [20]. In this regard, the approach being presented is trying to highlight how these elements of innovation can be combined to ease the intense problem of water resource waste. Demographics continue changing and unsustainable economic practices are affecting the quantity and quality of the water being available, thus making it an increasingly scarce and expensive resource [9]. Inevitably, water is at the core of sustainable development and is closely linked to poverty reduction and climate change. As agriculture remains the largest consumer of water globally and irrigation is responsible for 70% of its use worldwide, water is the most valuable resource for keeping the quality and the quantity of plant and animal production to satisfactory levels. The way water is utilized for both urban and rural use directly impacts its future availability and thus, emphasis must be placed on water management and irrigation efficiency and make sure clean water can be provided for all people. Apart from the more conventional bare IoT solutions for water resource management and utilization, mainly with focus on agriculture, there is a growing interest for the exploitation of ML in order to achieve better results [21,22,23,24]. The fusion with Edge AI functionality has yet a lot to offer. The potential exploitation of modern microcontrollers for water usage related applications with embedded ML functionality has already started delivering interesting outcomes [25], in neighboring scientific areas, with the selection of devices and functions for communication between sensor appliances to remain a key challenge [26] for success. On the other hand, recent studies show that farmers are still facing concerns for adopting the IoT technologies in their everyday activities. This skepticism is attributed to a variety of reasons, from privacy concerns due the cloud-based nature of many solutions to fears for job cuts and for high purchase and maintenance costs [27,28], while it is really hard to find experts having the necessary set of talents at a satisfactory degree and being available for fluent cooperation, at the same time. Furthermore, while the machine learning methods seem to provide accurate and less expensive solutions [23] for water misuse detection events such as leaks, there is enough room for further improvements. Indeed, due to the very recent character of the innovative hardware and software components supporting in situ (i.e., on-device node) machine learning techniques, in the agricultural sector for water utilization report/classification purposes, few works combine these assets toward the delivery of a cost effective and efficient solution with Edge AI characteristics. There are research contributions that exploit IoT infrastructures for water monitoring purposes, but without incorporating AI functionality [29] or there are contributions that exploit machine learning methods that either require central processing of the data being collected [30,31] or that they are not optimized to be executed by the new low-cost and high-efficiency microcontrollers [32]. These remarks are in line with recent review findings in agriculture [24] and reflect a problem already specified in the wider IoT area [4,33]. Trying to bridge this gap, the proposed solution indicates that, for water usage characterization/report delivery, a quite accurate model can now be trained, using flexible tools, be executed on the end device and communicate its classification reports using almost negligible power and bandwidth resources. Combining decentralized intelligence and low-cost design, provision is made for reduced to null amount of information to travel toward the cloud. These arrangements are addressing data privacy and reliability issues as well. 2.2. Functionality Overview and Component Selection This section reports briefly on the components being selected as well as on their role, in order to develop a system capable of intercepting and characterizing water usage events. This system includes sensor nodes, placed in situ, at the edge points where the water is actually being used, as well as the suitable sink/gateway node(s) able to collect the reports delivered by the aforementioned peripheral nodes. The “key” point of the approach being presented is that the edge (sensor) nodes, apart from collecting time series corresponding to events containing the instantaneous water consumption data, are “smart” enough to classify these events into categories of proper or improper use of water, without assistance from external entities. Thus, via this “filtering”, only the classification reports have to travel toward the gateway and the cloud (if the latter is necessary). The analytical (low quality and high volume) information of the instantaneous water consumption might flood the network infrastructures and exhaust the batteries of the edge nodes. The user can easily monitor the operation of the whole system via their portable equipment (e.g., their tablet, smart phone, or laptop) using conventional connectivity options (e.g., Wi-Fi or 3G/4G), either locally or remotely (e.g., via a virtual private networking (VPN) service). The proposed architecture is depicted in Figure 1. Figure 1. Functionality overview of the proposed water usage event characterization solution. The proposed implementation exploited the experience gained during the activities described in [11] with the excellent Arduino Nano 33 BLE Sense [34] microcontroller that offers plenty of sensors and connectivity options, but utilized an even newer generation of cheaper microcontroller modules that were able to host and to execute composite machine learning algorithms, at the same price levels with the “traditional” units. For this reason, the Raspberry Pi Pico [35] microcontroller board (that costs about 6€) was selected, which, apart from its very attractive price, has fluent processing power and memory (due to its new RP2040 chip). More specifically, the Raspberry Pi Pico unit, grace at its new RP2040 chip, has fluent processing power and memory, that allows for larger and faster program execution compared to the typical Arduino Uno [36] standard, as it exhibits 64 times more flash memory (i.e., program memory), 128 times more random access memory (RAM) and a much faster dual-core processor. Consequently, the Raspberry Pi Pico board was able to support, apart from the basic water consumption metering process, the necessary machine learning functionality to invoke the corresponding water usage alert message generation. For the final deployment, the absence of a radio interface on the Raspberry Pi Pico unit was counterbalanced by the adoption of a cost effective microcontroller board, running at 8 MHz and equipped with a LoRa radio, namely a LoRa32u4 unit [37]. For programming both systems, the preferred option was the well-supported Arduino IDE [38] environment. During the implementation and testing stages, an ESP8266 based module [39], namely an ESP-01 unit, offering Wi-Fi connectivity, was utilized. The water flow meter device is a Hall-effect counter sensor (YF-S201 [40] model), which can detect the flow changes as the water passes through it and the rotor rolls. Furthermore, the MIT App Inventor cloud-based programming environment [41] was selected for the easy creation of a mobile application for inspecting the water usage activity, via the smart phone/tablet device of the user. To add machine learning functionality, it was necessary to prepare and incorporate a trained artificial neural network (ANN) model into the software running on the Raspberry Pi Pico. An artificial neural network is based on the operation of neurons in the human brain. This structure has one input layer, one or more hidden layers, being interconnected, and an output layer for delivering the results. A very simple and efficient manner to prepare (i.e., to train and to extract/compile) a suitable ANN model was the Edge Impulse [42] cloud environment. The latter processing environment incorporates the functionality of the TensorFlow Lite engine for training neural networks. More specifically, it is equipped with fluent graphical interface and network connectivity options for importing sensor data, designing the ANN model, applying assistive processing blocks, for creating, testing and deploying the final version of it. Finally, the coefficients describing the ANN are stored in the memory of the Raspberry Pi Pico microcontroller, and thus the AI algorithm can be executed on a device with comparatively low but enough capacity, in terms of processing power and RAM. The Edge Impulse platform, from February of 2022, provides full support from the Raspberry Pi Pico board. The gateway node, gathers the classification decision information from the peripheral (edge) sensor nodes, stores and makes it available for the end device (e.g., smart phone, tablet or laptop) of the user, via common network services installed on it, or posts the information to the cloud, for better visualization and post-processing. Details referred to the latter choice are beyond the scope of this research work. 3. Implementation Details In accordance with the design and functionality directions provided in Section 2.2, Section 3 is dedicated in presenting characteristic details of the implementation process. The analytic steps being followed for the training are illustrated in Figure 2. Figure 2. The analytic steps being necessary for the training of the proposed water usage event characterization solution. More specifically, the basic water flow sensing unit connection and programming arrangements are highlighted, in order to gather efficient data for training the ANN model (step 1), and thus, to add machine learning capabilities to the whole system. The details for this training are also explained (steps 2 and 3), as well as the incorporation of the trained ANN model into the microcontroller of the flow-metering system (step 4) for enhancing its functionality. In parallel, the corresponding network node(s) arrangements are discussed, as well as the characteristics of a pairing end-user mobile application, for the delivery of a fluently working solution. 3.1. Initial Sensor Node Preparation The Raspberry Pi Pico is a 3.3 V level unit, for this reason, the flow sensor was connected to its 3.3 V supply pin, in order to generate 3.3 V logic compatible pulse signals to its output. The 3.3 V level was adequate for the operation of the specific flow metering device being selected. Furthermore, the output of the latter sensor was connected with an interrupt (input) digital pin of the microcontroller, and the ground pins of both components were also wired together. The sensor was connected to a testing tap via a pipe, and thus, it could be exposed to a variety of water consumption scenarios potentially being invoked by human, according to empirical assumptions. The Arduino IDE environment was customized properly by downloading and installing the necessary libraries corresponding to the Raspberry Pi Pico, according to the instructions of the its official page, for facilitating the programming process of the microcontroller, via a computer through a USB port connection. The pulses that the flow sensor was generating correspond to the rotations of its blades and thus to the water flow passing through it. More specifically, according to the basic algorithm, as the flow sensor signal generated a pulse signal any time 2.22 mL water quantity, approximately, passed through it, the Raspberry Pi Pico intercepted these pulses as interrupt triggers to be counted and, in turn, calculated an one-second average value corresponding to the water flow (in mL). The sequence of these flow values was output to the serial port of the microcontroller. After compiling the program (sketch) and uploading it to the Raspberry Pi Pico board, the sequence of the flow measurements was acquired via the USB cable. The latter measurements were fed into the machine learning platform, in order to train the suitable ANN model, as the Edge Impulse environment offers options for automated uploading of the values being measured. 3.2. Training the Neural Network The corresponding ANN model to be generated had to be simple and lightweight enough for the microcontroller’s potential but still precise enough. In this regard, the system was trained to recognize three characteristic kinds of water utilization profiles: the Normal Use or NU, Water Leak or WL and Water Waste or WW. The proper training of an ANN requires data series corresponding to each of these categories to be collected and to be uploaded to the Edge Impulse engine. The total data length was 5 h 55 min 47 s (148 files) for all three cases. According to Edge Impulse platform requirements, the duration of the data length had to be approximately the same for all categories, in order for the final model to be more accurate. Nevertheless, the number of profiles for each case may differ (NU: 69, WL: 44, WW: 44 profiles). During the profile collection process, the lowest flow value that the flow sensor could record was about 10–15 mL/s, while the maximum flow being recorded was in the range between 250 and 280 mL/s. The network was trained using empirical data based on human observations for classifying samples (water usage episodes) into categories. In general, NU profiles were created so as to contain low to moderate flow values and having duration below 180 s, making the training pattern hypothesis that a non-WL water usage scenario would last for 3 min at maximum. Similarly, it was assumed that WL profiles exhibited continuous flow duration of more than 180 s and that most WW profiles had flow consumption over 160 mL/s and duration of more than 160 s, as it would be more likable for the classification experiment, during the episodes to use water for shorter time and at lower flow rate. Some typical profiles for each category are given in Figure 3, where the water flow was measured in ml/s and the time was measured in seconds (s). For each category, there is a diversification among the profiles being recorded and fed to the training system. This diversification results in increased accuracy under real-world conditions. Figure 3. (a,b) Normal Use profiles; (c,d) Water Leak profiles; (e,f) Water Waste profiles. In the next stage, the water flow data (raw data) were uploaded to the Edge Impulse cloud platform, via the Data Acquisition menu category, and were split into training and testing data, automatically, while the data labelling was performed manually. For training of the ANN model, the window size was set at 200,000 ms (i.e., 200 s), according to the profiles that were fed into the training system and by taking into consideration the maximum time that a person might use the tap. Similarly, the window increase was set at 1000 ms (i.e., at 1 s) and the frequency at 1 Hz (i.e., for 1 sps sampling rate). Furthermore, “Raw Data” was selected as the preferred processing block and “Classification (Keras)” as the ANN learning block. The option “Raw Data” means that no additional prepossessing was made (e.g., a spectral characteristics extraction) before using the original data for the training process. This option does not reduce the number of features to be fed to the input layer of the network, but also preserves as many characteristics of the initial data as possible and, as it is explained right below, it fits easily in the microcontroller being selected. Furthermore, the number of training cycles was set to the moderate value of 50, to avoid overfitting, and the learning rate at 0.0005, via the NN Classifier configuration section, as the Edge Impulse suggests. The final neural network structure has an input layer with 200 features (window size), two hidden layers, with the first one to have 20 neurons and the second one 10 neurons, and an output layer with 3 classes (NU, WL, WW). This architecture for the NN provided an optimal combination between performance and computer resource allocation (i.e., model accuracy versus time needed for a decision to be made and memory size needed for hosting the program in the flash and for executing it in RAM). For the specific model, in the quantized version, the RAM usage was 1.9 KB and the flash memory usage was 22.5 KB, values that are far below the capacity limit of the Raspberry Pi Pico unit. It must be noted though that during the actual operation of the microcontroller, more memory will be needed as along with the NN model coexist several variables and code parts dedicated to other tasks. The Edge Impulse platform allows for easy experimentation with various candidate settings and for saving the model with the best performance after the end of the training process. Finally, there is the option to download the model from the Edge Impulse cloud platform, via the “Deployment” section of Edge Impulse menu category, as code that includes library and sketches to be compiled and uploaded to the microcontroller via the Arduino IDE environment. 3.3. Sensor Node Software Enhancement As explained in Section 3.2, the code generated by the Edge Impulse platform, in the form of a generic Arduino library, provides customizable examples (sketches) for the Arduino environment, with the Raspberry Pi Pico board to be among the models being supported, and thus, being compatible with the generated model parameters. The selection of the “Arduino library” option (instead of the tailored firmware output one) provides freedom to combine the machine learning engine with further algorithmic behaviors being necessary to be executed by the hosting microcontroller. In this regard, the final software running on the microcontroller had to be updated so as to be able to perform (almost simultaneously) some simple but sharp calculations/tasks of different time granularity: Intercept the interrupt signals corresponding to the rotor roll pulses of the water flow sensor module; Calculate the instantaneous water consumption, at a fixed and specific rate, typically 1 or 2 times per second, update the aggregate metrics, and trigger the classification process every time the predefined number of samples (i.e., 200) was gathered; Deliver system status data and water usage reports via USB to the hosting computer, or wirelessly to a gateway node or to the operator’s smart phone/tablet; As expected, the above tasks had to be performed without blocking or delaying each other, constraints that required meticulous programming (e.g., using timer events) to achieve fluent operation. Optimally, the delivery of information toward the gateway had to take place once, after the end of each classification process utilizing the 200 consecutive samples. Nevertheless, for debugging or training purposes, all 200 values had to be transmitted toward the gateway node. Communication with the LoRa32u4 radio module was achieved through the serial TTL level port of the microcontroller. 3.4. Gateway Node and User-End Software For the reception (and the inspection) of the remote alerts through Wi-Fi, an android smart phone or a tablet device, which most modern people are familiar with, was a satisfactory solution. The MIT App Inventor environment was utilized in order to deploy a simple monitoring application. The necessary programming was completed using visual blocks, based on the information provided in [43,44]. The initial deployment involved direct connection between the smart water sensor node and the end user equipment (e.g., a tablet device), typically through a Wi-Fi connection link. This solution is not optimal if multiple sensors units exist and deliver water usage reports in parallel. Furthermore, the latter sensors may be placed at comparatively long distances from the user. These facts made necessary the development of a gateway/sink node to gather the corresponding data and the migration to LoRa radio links. For implementing the latter gateway node, a Raspberry Pi 3 Model A+ had been selected [45], due to its reduced size and energy footprint and its fluent programming and interfacing options. The Raspberry Pi Model 3 A+ unit allows for fast implementation of code that intercepts the data reports from the peripheral smart sensor nodes, storing them into files or a simple database, and making them available via the proper TCP/IP based service. This request could be either asynchronous or periodic (i.e., generated by a proper application running on the user’s mobile phone). These tasks are served using python and Linux shell scripts, inter process communication (IPC) techniques exploiting IP sockets, and the activation of preexisting applications such as the Apache web server, the SSH server and/or a Virtual Private Networking (VPN) service. Furthermore, the gateway node, properly combined with VPN networking techniques, assured monitoring functions from distant locations, based on the availability of Wide Area Network (WAN) wired or wireless technologies (i.e., 3G/4G, DSL, etc.). 3.5. Summary of IoT Deployment Steps The Edge AI tasks had to be performed fluently, while deployment in open-field environments using long-range radios, such as LoRa, was an important priority. The final functionality being implemented can be summarized in the following steps/cases: Use a Wi-Fi radio transceiver (e.g., an ESP-01 module), attached to the sensor node, to provide communication between the sensor node and the user’s smart phone/tablet, for testing purposes, during the initial deployment; Use a Raspberry Pi Model 3 A+ and a LoRa radio module as a LoRa gateway/web server, in conjunction with the LoRa radio transceiver modules being attached to the (preferably more than one) smart sensor nodes; Increase user-friendliness by adding services using the Raspberry Pi Model 3 A+ unit of the gateway node and well-known web-based applications. Case 1 was suitable for verifying the basic wireless connectivity potential of the sensor node via the tablet/smart phone device of the user, being nearby the sensor. This arrangement made easy for the user to inspect the status of the water activity characterization system for one smart sensor and from short distances. The need to have a more complete on-demand view of the status of more than one water use points, at increased distance, was favoring the adoption of a local gateway node facilitating the whole monitoring process, as explained in case 2. The sensor nodes were sending water usage notifications toward this local gateway, over LoRa. It must be noted though that the TCP/IP technology, as a solution for the delivery of data (i.e., the sporadic metadata) from the sensors to the gateway, is not optimal, in terms of energy consumption, complexity and range coverage. Indeed, in a typical application scenario, the distance between the sensor nodes and the gateway node is limited to a hundred meters, approximately. If willing to extend this distance to the kilometer range or beyond, without special and expensive equipment, transceivers utilizing technologies such as LoRa are more suitable. In case of the LoRa solution, the LoRa32u4 board, as a transceiver, was the optimal selection for both the sensor and gateway nodes, due to its low cost and its easy programming. The RadioHead software package [46] is a very efficient library that supports several critical LoRa protocol functions, and thus, it was adopted for adjusting the LoRa32u4 modules. These modules were programmed easily via the Arduino IDE environment. Consequently, the microcontroller of each sensor node was connected (typically via its hardware serial TTL interface) with a LoRa32u4 board in order to relay the water usage information from the machine learning engine toward the gateway node. A Lora32u4 board was also connected via USB with the Raspberry Pi 3 Model A+ unit implementing the gateway functions. The necessary code was written in python to bridge the serial port of the LoRa32u4 board with an IP socket service running on the gateway node. Characteristic deployment arrangements are depicted in Figure 4a,b. More specifically, Figure 4a depicts the smart water sensor node implementation using a Raspberry Pi Pico unit and a LoRa radio, while in Figure 4b the gateway/sink node implementation is depicted using a Raspberry Pi 3 Model A+ and a LoRa radio. The information exchanged between the LoRa radios was packetized and encrypted using the RadioHead library and the Arduino Cryptography Library [47], in order to hide the sensitive data from non-authorized users. Figure 4. (a) Smart water sensor node deployment using Raspberry Pi Pico and LoRa radio; (b) Gateway/sink node implementation using Raspberry Pi 3 Model A+ and LoRa radio. Initial experiments were performed using USB powering via the hosting computer and/or power banks. Later updates included LiPo or Li-ion batteries, mainly of 18650 type which are cheap and robust, as well as small photovoltaic panels (e.g., 2 W units). It must be noted though that the absence of a permanent power supply source nearby is not always the rule, and thus the operation of the alerting system was facilitated. 4. Results and Evaluation This work is putting emphasis on intercepting water usage events and on characterizing them properly. Via fluently-working machine learning techniques, applied at the edges of the network, the amount of information that needs to travel from the peripheral nodes to the central node and the cloud is minimized. This fact signifies reduced communication load and energy consumption, and better autonomy and privacy. The adoption of simple, long-range and low-energy radios facilitates the whole process. Relevant details are given into the following Section 4.1, Section 4.2, Section 4.3 and Section 4.4. 4.1. Testing the Acuracy of the Model For classification evaluation algorithms, accuracy is the most frequently used indicator, and it is defined as the proportion of the correctly classified samples to the total number of samples. After the training process, based on the testing data, the system generated the right outcome for the NU category with 77.8% accuracy. Similarly, for the WW and WL categories, 100% success was achieved, according to Edge Impulse cloud environment. These performance results made the final model to have a 98.5% expected accuracy, using the testing data set, in the Quantized (int8) version. At next stage, actual water consumption episodes of known type (i.e., NU, WW or WL) had to be invoked, by rotating the tap head properly, thus letting the proposed machine learning engine to perform classification according to the flow data being collected (i.e., in chunks of 200 consecutive values). The corresponding results were recorded. Figure 5 depicts the proposed sensor node connected in-line with a water tap. This process was matching the steps being followed during the training stage of the system. Figure 5. The proposed sensor node connected in-line with a water tap. It must be noted that the in-parallel visual inspection of the ongoing process was drastically facilitating the experiments. More specifically, further arrangements were made in order for the whole sequence of the analytical flow readings to arrive to the smart phone/tablet device, using a modified version of the application created for the end user (as presented in Section 3.4). This application variant provided detailed real-time graphs (into the form of histograms) reflecting the instantaneous water consumption during each episode, for direct comparison and adjustments. Figure 6a–f illustrate indicative smart phone screenshots reflecting typical water usage characterization decisions during the actual testing process, corresponding to the NU, WL and WW categories, respectively. Figure 6. (a–f) Indicative smart phone screenshots during the in situ testing process, reflecting typical water usage characterization decisions for the categories NU, WL and WW, respectively. The combination of the trained ANN model implementation with simple more conventional programming techniques was improving the accuracy and the response times of the system being presented. For instance, the in situ module logic was modified so as to ignore the zero-flow events, as an episode (i.e., event) started being recorded only after the arrival of the first non-zero flow value. Table 1 contains the confusion matrix that corresponds to the testing of the real system, after classifying 100 water consumption episodes. The processing of the data being collected revealed that the actual accuracy was 91% (i.e., 91 over 100 samples were classified correctly), after testing the model with user-generated water consumption profiles, using the proposed smart flow metering system. It is important to mention that the model could clearly recognise the undesirable WL profiles, achieving accuracy values reaching 100%. On the other hand, there were some incorrect predictions, where the neural model was classifying an actual WW scenario as NU or WL (with percentages 5.1% and 7.7%, respectively). In fewer cases, the model was classifying an NU as WW or WL (with percentages equal to 2.8%). These failures can be attributed to the fact that there was a small area where the borders of those categories were overlapped, thus confusing the neural network classifier. An additional 0.4 certainty threshold was programmed on the microcontroller for more reliable characterizations. This performance is close to the one expected according to the testing of the model. The overall performance is lower than the one achieved by other machine learning approaches [23] using more composite systems, but remains high and can be easily achieved by the proposed low-cost equipment. The accuracy can be further improved by using more extensive training and samples. Table 1. The confusion matrix corresponding to the trained neural network model, created by classifying 100 water consumption episodes, of specific (and known) type each. 4.2. Networking and Power Consumption Issues According to the specifications of the experimental system being presented, although 200 consecutive samples had to be recorded before a classification decision to be make, this decision was taken locally, and thus only the (final) characterization message had to travel toward the gateway (and to the end user) instead of 200 messages containing the corresponding analytical flow values. The packet payload information needed to travel from the peripheral sensor nodes toward the gateway node did not exceed 10 bytes in binary format, thus resulting in a bellow 50-byte description per episode in textual format, in the final log files on the Raspberry Pi Model 3 A+ unit of the gateway. The size requirements of the analytical data would be roughly 200 times higher. In addition to that, the cost for performing the classification at the central node was not necessary any more. Figure 7 provides indicative details of the water flow episode/event specific information as stored into the log files on the Raspberry Pi Model 3 A+ unit implementing the gateway node functionality. These files were directly available through the Apache web server and typically contained an arrival timestamp, node address, episode type (i.e., NU/WW/WL), flow value per each sample into a specific episode (in debug mode only), total water consumption per episode, as well as sensor battery voltage and RSSI indicator. Figure 7. Characteristic details of the water flow episode/event specific information as stored into the log files on the Raspberry Pi Model 3 A+ unit implementing the gateway node. Some stability problems were experienced when using the highest baud rate (i.e., the 115,200 bps value) between the Raspberry Pi Pico and the LoRa32u4 module. For this reason the data rate was set to the “safe” 38,400 bps value. The techniques being followed for testing the effective communication range of the proposed system were utilizing the methods presented in [7,48]. The gateway node, apart from the water flow specific information, for each node, was collecting assistive data, such as sensor battery status and received signal strength indicator (RSSI). The latter information was collected for sensor nodes being at various distances from the gateway node, for both Wi-Fi and LoRa radio cases. The left part of Figure 8 depicts a LoRa radio transceiver during the in situ radio coverage experiments. According to results being gathered, by using ESP-01 Wi-Fi transceivers, the maximum range coverage was at about 100 m, while by using LoRa modules with custom wire antennas the communication distance was extended to 300 m in free space. By using standard but still cheap antennas, the LoRa link scenario was easily achieving communication coverage of above 1 km. These results are justified by the fact that the receiver sensitivity limit for nodes equipped with Wi-Fi radios was around −90 dBm, while for the LoRa, the sensitivity being achieved was reaching the −130 dBm level. Figure 8. Experiments for testing the range coverage (left) and the energy consumption (right) of the prototype sensor nodes. In order to better capture and study the short-scale dynamics of the smart sensor modes, a measuring circuit was built, according to the directions provided in [49]. More specifically, an Arduino Uno board was utilized to calculate the voltage drops over a resistor of known value, connected in series with the load of interest (i.e., the smart water sensor node); the right part of Figure 8 depicts the corresponding experimental setup. The actual measuring process was performed via a separate ADC module (namely an ADS1015 unit) capable of true differential measurements, of satisfactory resolution (i.e., of 12 bits) and of adjustable gain. The communication of this module with the hosting Arduino board was completed using an I2C interface. The presence of the Arduino Uno unit allowed for the additional processing of data and quick graphical inspection. Consequently, for the system under testing, amperage consumption traces could be easily captured, at a typical time resolution of 100 sps and at an approximate amperage resolution of 1 mA, via the Serial Monitor or the Serial Plotter component of the Arduino IDE environment. By using the specific measuring setup, several results were collected. The behavior of the sensor nodes was on the focus of this study, as, typically, the gateway node was considered of having fixed power supply and its consumption was around 250 mA. More specifically, the consumption of a bare node, equipped only with a Raspberry Pi Pico unit was 27 mA, approximately, with the water flow metering unit to absorb 3–4 mA of this quantity. When activating the radio modules on the system and letting them transmit information, further data were collected. For debugging purposes, apart from the standard settings where only the water usage decision was reported, the analytical flow data could also be transmitted toward the gateway, limited only by the maximum data rate being supported by the selected radio modules. Referring to the Wi-Fi communication case, Figure 9 provides characteristic details of the short time dynamics of the scanning and connection establishment stages that were mandatory before the utilization of the radio modules. The inspection of the results revealed that the scanning process was extremely energy-consuming, reaching the level of 90 mA (in total) with additional and non-negligible sporadic spikes exceeding that level. The whole scanning process lasted for 2 to 3 s, and after that, the overall consumption was stabilized to the 40 mA level, with peaks of additional 50 mA corresponding to the water flow event reports toward the gateway. The high cost for the Wi-Fi initialization link (especially in optimized radio sleep/wakeup scenarios), along with its limited range coverage were favoring the assessment of other communication alternatives, such as LoRa. Figure 9. Short time dynamics of the mandatory scanning and connection establishment stages, following the activation of the Wi-Fi radio module that smart sensors were equipped with. Similarly, Figure 10 depicts characteristic short-time dynamics for the LoRa communication alternative. Namely, from the LoRa module activation (left) to the energy peaks reflecting the water usage notification packet transmission events (top right) and to the corresponding textual information content as intercepted by the gateway (bottom right). The LoRa32u4 LoRa board consumed 12–13 mA, approximately, at idling, with the radio enabled, while the transmission events at the standard radio parameter settings (i.e., having Coding Rate—CR set to 4/5, Bandwidth—BW to 128 kHz, Spreading Factor—SF set to 7) and with the transmit power at 15 dBm, resulted in spikes of 70 mA (at 3.3 V), having an approximate duration of 50 ms, thus requiring around 12 mJ each. It must be noted that the whole process lacked the high connection establishment cost (in both time and energy) characterizing the Wi-Fi case. The tradeoff of LoRa was the far lower communication rate, which was not an issue for the specific application case that only a few bytes had to be transmitted per sensor unit, every 2 to 3 min, at the fastest utilization activity scenario. Figure 10. Characteristic short-time dynamics for the LoRa communication alternative: From the LoRa module activation (left) to the energy peaks reflecting the packet transmission events (top right) and to the corresponding textual information content as intercepted by the gateway (bottom right). According to the overall performance description presented herein, it can be inferred that typically, the benefits of the pilot implementation being discussed were maximized in application cases where many water consumption check points were needed, spread into an area of a few kilometres. 4.3. Node Cost Issues The total cost of each of the discussed nodes, after adding the 6€ for the Raspberry Pi Pico unit, the 15€ for the LoRa equipped module, the 8€ for the YF-S201 flow sensor, the 8€ for LiPo batteries and the 5€ needed for a good-quality plastic enclosure box, was around 42€. The utilization of a LoRa transceiver instead of a typical Wi-Fi radio saved energy and offered improved distance coverage. The decision of using the LoRa32u4 board added some extra cost (of about 5€, compared with a bare LoRa chip) but provided further GPIO pins and connectivity options, as well as fast programming and testing of the diverse communication and arithmetic processing variants, thus counterbalancing the almost 15 min of time required for the compilation of the code containing the trained neural network model destined for the Raspberry Pi Pico unit. The gateway node needed 30€ for a Raspberry Pi Model 3 A+, 15€ for the LoRa32u4 board, 5€ for a plastic enclosure box, and 5€ for a power supply, resulting in cost below 60€. 4.4. Further Discussion This work presented a pilot implementation targeted at intercepting water usage events and characterizing them properly, with the emphasis to be put on misuse cases, such as leakages or wastes. The rapid growth of electronics and of the pairing software allowed for very cost-effective but efficient solutions, with cutting-edge features. Indeed, the adoption of machine learning techniques at the edge points (i.e., where the water sensors are) was drastically reducing the amount of information that needed to travel from the peripheral nodes to the central node and the cloud. This fact resulted in reduced communication load and energy consumption, while it increased autonomy and privacy. The focus was put on the in situ processing and the pairing with simple, long-range and low-energy radios, e.g., the LoRa technology ones. The water usage episodes the experimental system was trained to intercept were of comparatively short duration, but the software and hardware methods being used, and the accuracy being achieved, make the proposed arrangements, only with minor configuration modifications, to be applicable for supporting a wide variety of water preservation/misuse detection scenarios. Apparently, several issues are still open, requiring more elaboration for the delivery of an out-of-the-box solution. The time interval between the fixed, in number (e.g., 200), consecutive flow data required for a characterization decision, was set to 1 s during the training. The same trained model, can still be valid considering intervals of much longer value (e.g., of 30 s instead of 1 s), provided that the proper normalization in flow values will be made and that the activity will be classified in following the same pattern. Nevertheless, gathering richer data sets, reflecting further realistic use cases, can train the model more accurately, and is an apparent priority for wider applicability. This training can follow the same generic principles and methods described herein. The option of using a bare LoRa chip with the Raspberry Pi Pico unit is amongst the future priorities toward a more commercially-friendly version of the prototype presented herein. While the adoption of the LoRa protocol allows for better flexibility, the LoRaWAN solution is also feasible, either via implementing the necessary protocol stack, via software on the 32u4 LoRa board, or by utilizing native LoRaWAN chips. Furthermore, these processes can become more efficient by introducing a sleep/wakeup energy management schema which will allow the Raspberry Pi Pico to wake up (via interrupts) whenever water flow activity is intercepted by the flow sensor. The task of the efficient powering the system at the absence of permanent power supply nearby is also quite challenging. Indeed, more than one alternative can be adopted, from using solar panels or a tiny wind generator, to pairing the rotating blades of the flow sensor unit with a tiny electric generator [50]. Finally, as the adoption of a Raspberry Pi Model 3 A+ as a central/gateway node was providing an adequate but poor level of functionality, via elementary web and archiving or database services, linking with well-known and more user-friendly cloud services is also a case worth investigating in the future. 5. Conclusions In this paper, the synergy between several innovative and low-cost electronic components and software was exploited, in order to monitor and remotely report characteristic water consumption/misuse events. The whole approach introduces modern Edge AI techniques (i.e., combining IoT, ML and Edge Computing principles) that up until recently was not possible to be executed with traditional low-cost microcontrollers. The challenges for the delivery of a generally applicable and inexpensive alerting system for either urban or rural water resource usage were further highlighted. The system being presented can work in a decentralized manner as the amount of information that has to travel from the edges to the cloud is drastically reduced, or becomes practically unnecessary, thus resulting in energy requirement minimization and increased privacy. Only the final decision (water usage characterization) information has to be transmitted to the final user (e.g., the farmer), and the cloud is necessary only in case that the latter user is not nearby or asks for sophisticated information post processing. As for the future, more optimized variants of the proposed system will be assessed, in terms of hardware selection (e.g., of flow sensor units), neural network model accuracy, networking options and energy autonomy. Great companies, such as Arduino, Raspberry, ESP or Adafruit, during their noble competition, will continue to produce excellent parts with leveraged application support potential. Finally, an out-of-the box version of the functionality being presented, of commercial standards, exploiting additional well-known services, and thus exhibiting increased user-friendliness, will be a significant future priority. Author Contributions Conceptualization, D.L.; methodology, D.L. and K.-A.L.; software, D.L.; validation, D.L., K.-A.L., C.M. and K.G.A.; investigation, D.L., K.-A.L. and C.M.; data curation, K.-A.L.; writing—original draft preparation, D.L. and K.-A.L.; writing—review and editing, D.L., K.-A.L., C.M. and K.G.A.; visualization, D.L. and K.-A.L.; supervision, K.G.A. All authors have read and agreed to the published version of the manuscript. Funding This research received no external funding. Institutional Review Board Statement Not applicable. Informed Consent Statement Not applicable. Data Availability Statement Available upon request. Acknowledgments The authors would like to thank the personnel and the students of the Dept. of Natural Resources Management & Agricultural Engineering of the Agricultural University of Athens, Greece, for their assistance in the deployment and testing of the discussed system. Conflicts of Interest The authors declare no conflict of interest. References FAO. Climate-Smart Agriculture Sourcebook. 2013. Available online: http://www.fao.org/3/i3325e/i3325e.pdf (accessed on 25 March 2022). Statista. IoT: Number of Connected Devices Worldwide 2012–2025. Available online: https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/ (accessed on 8 June 2022). Dastjerdi, A.V.; Buyya, R. Fog Computing: Helping the Internet of Things Realize Its Potential. IEEE Comput. Soc. 2016, 49, 112–116. [Google Scholar] [CrossRef] Merenda, M.; Porcaro, C.; Iero, D. Edge machine learning for AI-Enabled IoT devices: A review. Sensors 2020, 20, 2533. [Google Scholar] [CrossRef] [PubMed] TensorFlow Lite. Available online: https://www.tensorflow.org/lite (accessed on 8 June 2022). TinyML. Available online: https://www.tensorflow.org/lite (accessed on 8 June 2022). Loukatos, D.; Arvanitis, K.G. Multi-Modal Sensor Nodes in Experimental Scalable Agricultural IoT Application Scenarios; Springer: Berlin/Heidelberg, Germany, 2021; pp. 101–128. [Google Scholar] [CrossRef] Kingdom, B.; Liemberger, R.; Marin, P. The Challenge of Reducing Non-Revenue (NRW) Water in Developing Countries. How the Private Sector Can Help: A Look at Performance-Based Service Contracting; Water Supply and Sanitation (WSS) Sector Board Discussion Paper N. 8; The World Bank: Washington, DC, USA, 2006. [Google Scholar] United Nations SDG6. Available online: https://sdgs.un.org/goals/goal6 (accessed on 20 February 2022). Sustainable Development Goals. Available online: https://sdgs.un.org/goals (accessed on 20 February 2022). Loukatos, D.; Lygkoura, K.-A.; Misthou, S.; Arvanitis, K.G. Internet of Things Meets Machine Learning: A Water Usage Alert Example. In Proceedings of the 2022 IEEE Global Engineering Education Conference (EDUCON), Tunis, Tunisia, 28–31 March 2022. [Google Scholar] Singh, D.; Tripathi, G.; Jara, A.J. A survey of internet-of-things: Future vision, architecture, challenges, and services. In Proceedings of the IEEE World Forum on Internet of Things, Seoul, Korea, 6–8 March 2014; pp. 287–292. [Google Scholar] [CrossRef] Lova Raju, K.; Vijayaraghavan, V. IoT Technologies in Agricultural Environment: A Survey. Wirel. Pers. Commun. 2020, 113, 2415–2446. [Google Scholar] [CrossRef] Farooq, M.S.; Riaz, S.; Abid, A.; Umer, T.; Zikria, Y.B. Role of IoT Technology in Agriculture: A Systematic Literature Review. Electronics 2020, 9, 319. [Google Scholar] [CrossRef] [Green Version] Zude-Sasse, M.; Akbari, E.; Tsoulias, N.; Psiroukis, V.; Fountas, S.; Ehsani, R. Sensing in Precision Horticulture. In Sensing Approaches for Precision Agriculture; Kerry, R., Escolà, A., Eds.; Progress in Precision Agriculture; Springer: Cham, Switzerland, 2021. [Google Scholar] [CrossRef] Islam, N.; Rashid, M.M.; Pasandideh, F.; Ray, B.; Moore, S.; Kadel, R. A Review of Applications and Communication Technologies for Internet of Things (IoT) and Unmanned Aerial Vehicle (UAV) Based Sustainable Smart Farming. Sustainability 2021, 13, 1821. [Google Scholar] [CrossRef] Liakos, K.G.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture: A Review. Sensors 2018, 18, 2674. [Google Scholar] [CrossRef] [PubMed] [Green Version] Ahmad, L.; Nabi, F. Agriculture 5.0: Artificial Intelligence, IoT, and Machine Learning, 1st ed.; CRC Press: Boca Raton, FL, USA, 2021. [Google Scholar] [CrossRef] Garcia Lopez, P.; Montresor, A.; Epema, D.; Datta, A.; Higashino, T.; Iamnitchi, A.; Barcellos, M.; Felber, P.; Riviere, E. Edge-centric computing: Vision and challenges. ACM SIGCOMM Comput. Commun. Rev. 2015, 45, 37–42. [Google Scholar] [CrossRef] Gia, T.N.; Qingqing, L.; Queralta, J.P.; Zou, Z.; Tenhunen, H.; Westerlund, T. Edge AI in Smart Farming IoT: CNNs at the Edge and Fog Computing with LoRa. In Proceedings of the 2019 IEEE AFRICON, Accra, Ghana, 25–27 September 2019; pp. 1–6. [Google Scholar] [CrossRef] Bu, F.; Wang, X. A smart agriculture IoT system based on deep reinforcement learning. Future Gener. Comput. Syst. 2019, 99, 500–507. [Google Scholar] [CrossRef] Huang, R.; Ma, C.; Ma, J.; Huangfu, X.; He, Q. Machine learning in natural and engineered water systems. Water Res. 2021, 15, 117666. [Google Scholar] [CrossRef] [PubMed] Mashhadi, N.; Shahrour, I.; Attoue, N.; El Khattabi, J.; Aljer, A. Use of Machine Learning for Leak Detection and Localization in Water Distribution Systems. Smart Cities 2021, 4, 1293–1315. [Google Scholar] [CrossRef] Ramachandran, V.; Ramalakshmi, R.; Kavin, B.P.; Hussain, I.; Almaliki, A.H.; Almaliki, A.A.; Elnaggar, A.Y.; Hussein, E.E. Exploiting IoT and Its Enabled Technologies for Irrigation Needs in Agriculture. Water 2022, 14, 719. [Google Scholar] [CrossRef] Roy, A.; Dutta, H.; Griffith, H.; Biswas, S. An On-Device Learning System for Estimating Liquid Consumption from Consumer-Grade Water Bottles and Its Evaluation. Sensors 2022, 22, 2514. [Google Scholar] [CrossRef] [PubMed] Slama, S.-B. Prosumer in smart grids based on intelligent edge computing: A review on Artificial Intelligence Scheduling Techniques. Ain Shams Eng. J. 2022, 13, 101504. [Google Scholar] [CrossRef] Gaspar, P.D.; Fernandez, C.M.; Soares, V.N.G.J.; Caldeira, J.M.L.P.; Silva, H. Development of Technological Capabilities through the Internet of Things (IoT): Survey of Opportunities and Barriers for IoT Implementation in Portugal’s Agro-Industry. Appl. Sci. 2021, 11, 3454. [Google Scholar] [CrossRef] McCaig, M.; Rezania, D.; Dara, R. Is the Internet of Things a helpful employee? An exploratory study of discourses of Canadian farmers. Internet Things 2022, 17, 100466. [Google Scholar] [CrossRef] Nkosi, S.H.; Chowdhury, S.P.D. Automated Irrigation and Water Level Management System Using Raspberry PI. In Proceedings of the 2018 IEEE PES/IAS PowerAfrica, Cape Town, South Africa, 26–29 June 2018; pp. 804–809. [Google Scholar] [CrossRef] Gosavi, G.; Gawde, G.; Gosavi, G. Smart water flow monitoring and forecasting system. In Proceedings of the 2017 2nd IEEE International Conference on Recent Trends in Electronics, Information & Communication Technology (RTEICT), Bangalore, India, 19–20 May 2017; pp. 1218–1222. [Google Scholar] [CrossRef] Glória, A.; Dionisio, C.; Simões, G.; Cardoso, J.; Sebastião, P. Water Management for Sustainable Irrigation Systems Using Internet-of-Things. Sensors 2020, 20, 1402. [Google Scholar] [CrossRef] [Green Version] Attallah, N.A.; Horsburgh, J.S.; Beckwith, A.S., Jr.; Tracy, R.J. Residential Water Meters as Edge Computing Nodes: Disaggregating End Uses and Creating Actionable Information at the Edge. Sensors 2021, 21, 5310. [Google Scholar] [CrossRef] Neto, A.R.; Soares, B.; Barbalho, F.; Santos, L.; Batista, T.; Delicato, F.C.; Pires, P.F. Classifying Smart IoT Devices for Running Machine Learning Algorithms. In Anais do XLV Seminário Integrado de Software e Hardware; SBC: Nashville, TN, USA, 2018. [Google Scholar] Arduino Nano 33 BLE Sense. Overview of the Arduino Nano 33 BLE Sense Microcontroller Unit. 2022. Available online: https://store.arduino.cc/products/arduino-nano-33-ble-sense (accessed on 25 February 2022). Raspberry Pi Pico. Overview of the Raspberry Pi Pico Microcontroller Unit. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-pico/ (accessed on 25 March 2022). Arduino Uno. Arduino Uno Board Description on the Official Arduino Site. 2022. Available online: https://store.arduino.cc/arduino-uno-rev3 (accessed on 20 February 2022). LoRa32u4. The LoRa32u4 Module Description. 2022. Available online: https://www.diymalls.com/LoRa32u4-II-Lora-Development-Board-868mhz-915mhz-Lora-Module (accessed on 25 March 2022). Arduino Software IDE. 2022. Available online: https://www.arduino.cc/en/Guide/Environment (accessed on 20 February 2022). ESP8266. The ESP8266 Low-Cost Wi-Fi Microchip. 2022. Available online: https://en.wikipedia.org/wiki/ESP8266 (accessed on 20 February 2022). Twinschip. Water Flow Meter. 2022. Available online: https://www.twinschip.com/Water-Flow%20Sensor-Control-Effect-Flowmeter-Hall--YF-S201 (accessed on 20 February 2022). MIT App Inventor Programming Environment. Available online: http://appinventor.mit.edu/explore/ (accessed on 20 February 2022). EdgeImpulse. 2022. Available online: https://www.edgeimpulse.com/ (accessed on 20 March 2022). TCP/IP Extension. Description of the TCP Extension for the MIT App Inventor Environment. 2022. Available online: https://community.appinventor.mit.edu/t/tcp-ip-extension/7142 (accessed on 20 March 2022). UDP/IP Extension. Description of the UDP Extension for the MIT App Inventor Environment. 2022. Available online: https://ullisroboterseite.de/android-AI2-UDP-en.html (accessed on 20 March 2022). Raspberry Pi 3 Model A+. Raspberry Pi 3 Model A+ Board Description on the Official Raspberry Site. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-3-model-a-plus/ (accessed on 25 March 2022). RadioHead. The RadioHead Library to Support LoRa Modules. 2022. Available online: https://www.airspayce.com/mikem/arduino/RadioHead/ (accessed on 25 February 2022). Arduino Cryptography Library. Description of the Arduino Cryptography Library. 2022. Available online: https://www.arduino.cc/reference/en/libraries/crypto/ (accessed on 25 February 2022). Loukatos, D.; Fragkos, A.; Arvanitis, K. Experimental Performance Evaluation Techniques of LoRa Radio Modules and Exploitation for Agricultural Use. In Information and Communication Technologies for Agriculture—Theme I: Sensors; Bochtis, D.D., Lampridi, M., Petropoulos, G.P., Ampatzidis, Y., Pardalos, P., Eds.; Springer International Publishing: Cham, Switzerland, 2022; pp. 101–120. [Google Scholar] [CrossRef] Loukatos, D.; Dimitriou, N.; Manolopoulos, I.; Kontovasilis, K.; Arvanitis, K.G. Revealing Characteristic IoT Behaviors by Performing Simple Energy Measurements via Open Hardware/Software Components. In Proceedings of the Sixth International Congress on Information and Communication Technology—ICICT 2021, London, UK, 25–26 February 2021; Springer: Singapore, 2022; pp. 1045–1053. [Google Scholar] [CrossRef] Micro Water Turbine—Hydroelectric Generator. Description of the 5V DC water turbine miniature electric generator. Available online: https://www.seeedstudio.com/Micro-Water-Tubine-Generator-DC-5V-p-4512.html (accessed on 19 June 2022). Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affiliations.  © 2022 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Loukatos, D.; Lygkoura, K.-A.; Maraveas, C.; Arvanitis, K.G. Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner. Sensors 2022, 22, 4874. https://doi.org/10.3390/s22134874 AMA Style Loukatos D, Lygkoura K-A, Maraveas C, Arvanitis KG. Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner. Sensors. 2022; 22(13):4874. https://doi.org/10.3390/s22134874 Chicago/Turabian Style Loukatos, Dimitrios, Kalliopi-Agryri Lygkoura, Chrysanthos Maraveas, and Konstantinos G. Arvanitis. 2022. \"Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner\" Sensors 22, no. 13: 4874. https://doi.org/10.3390/s22134874 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations Crossref   10 Web of Science   6 Scopus   11 ads   3 PubMed   2 PMC   2 Google Scholar   [click to view] Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0k 1k 2k 3k For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

Paper 8:
- APA Citation: Loua, L. R., Budihardjo, M. A., & Sudarno, S. (2021). A review on a machine learning approach of an intelligent irrigation monitoring system with edge computing and the internet of things. IOP Conference Series: Earth and Environmental Science, 896(1), 012029. https://doi.org/10.1088/1755-1315/896/1/012029
  Main Objective: To develop an intelligent irrigation monitoring system that utilizes edge computing and IoT to optimize irrigation scheduling and reduce water consumption.
  Study Location: Unspecified
  Data Sources: Sensor data, climatic data
  Technologies Used: Edge computing, IoT servers, GSM module, KNN machine learning algorithm
  Key Findings: The proposed intelligent irrigation monitoring system effectively reduces data transmission burden and latency by utilizing edge servers for local data processing. This leads to improved irrigation scheduling and water-saving techniques, ultimately enhancing crop growth and preventing soil wilting.
  Extract 1: "The system bases its decision on a KNN machine learning algorithm for irrigation scheduling. It also uses two different database servers, an edge and an IoT server, along with a GSM module to reduce the burden of the data transmission while also reducing the latency rate."
  Extract 2: With this method, the sensors could trace and analyze the data within the network using the edge server before transferring it to the IoT server for future watering requirements.
  Limitations: The paper primarily focuses on the implementation of the intelligent irrigation system in a specific context and does not provide a comprehensive evaluation of various techniques for reducing computational complexity and latency.
  Relevance Evaluation: The paper is directly relevant to the outline point, as it specifically addresses techniques such as edge computing for reducing computational complexity and latency in real-time irrigation management. It provides valuable insights into the use of edge servers for processing sensor data locally, which minimizes data transmission burden and enhances the overall efficiency of automated irrigation systems.
  Relevance Score: 0.9
  Inline Citation: (Loua et al., 2021)
  Explanation: The paper presents an intelligent irrigation monitoring system that utilizes edge computing and the Internet of Things (IoT). This system efficiently schedules irrigation by integrating water-saving techniques and climatic data. The system involves edge computing to analyze sensor data locally, reducing latency, and improving data transmission efficiency.

 Full Text: >
"We value your privacy Clicking the \"Accept All\" button means you are accepting analytics and third-party cookies. We use cookies to optimise site functionality and give you the best possible experience. To control which cookies are set, click \"Customize\". Privacy and Cookies policy Customize Accept All Skip to content IOP Science home Accessibility Help Search Journals Books Publishing Support Login IOP Conference Series: Earth and Environmental Science PAPER • THE FOLLOWING ARTICLE IS OPEN ACCESS A review on a machine learning approach of an intelligent irrigation monitoring system with edge computing and the internet of things L R Loua1, M A Budihardjo1 and S Sudarno1 Published under licence by IOP Publishing Ltd IOP Conference Series: Earth and Environmental Science, Volume 896, The 3rd International Conference on Environment, Sustainability Issues, and Community Development 9 September 2021, Semarang, Indonesia (Virtual) Citation L R Loua et al 2021 IOP Conf. Ser.: Earth Environ. Sci. 896 012029 DOI 10.1088/1755-1315/896/1/012029 Download Article PDF References Article metrics 365 Total downloads 1 Share this article Article and author information Abstract Water consumption during irrigation has been a much-researched area in agricultural activities, and due to the frugal nature of different practiced irrigation systems, quite a sufficient amount of water is wasted. As a result, intelligent systems have been designed to integrate water-saving techniques and climatic data collection to improve irrigation. An innovative decision-making system was developed that used Ontology to make 50% of the decision while sensor values make the remaining 50%. Collectively, the system bases its decision on a KNN machine learning algorithm for irrigation scheduling. It also uses two different database servers, an edge and an IoT server, along with a GSM module to reduce the burden of the data transmission while also reducing the latency rate. With this method, the sensors could trace and analyze the data within the network using the edge server before transferring it to the IoT server for future watering requirements. The water-saving technique ensured that the crops obtained the required amount of water to ensure crop growth and prevent the soil from reaching its wilting point. Furthermore, the reduced irrigation water also limits the potential runoff events. The results were displayed using an android application. Export citation and abstract BibTeX RIS Previous article in issue Next article in issue Content from this work may be used under the terms of the Creative Commons Attribution 3.0 licence. Any further distribution of this work must maintain attribution to the author(s) and the title of the work, journal citation and DOI. Show References Abstract References You may also like JOURNAL ARTICLES Large variations in global irrigation withdrawals caused by uncertain irrigation efficiencies Challenges and opportunities in precision irrigation decision-support systems for center pivots The spatiotemporal trajectory of US agricultural irrigation withdrawal during 1981–2015 Climate change, water security and the need for integrated policy development: the case of on-farm infrastructure investment in the Australian irrigation sector Accounting for socioeconomic constraints in sustainable irrigation expansion assessments Deficit irrigation as a sustainable option for improving water productivity in Sub-Saharan Africa: the case of Ethiopia. A critical review Senior & Principal Criticality Safety Assessors AWE Science Program Officer, Heising-Simons Foundation Heising-Simons Foundation Postdoctoral position: Impacts of terrestrial climate change on the lunar orbit, Univ of Michigan University of Michigan: Earth and Environmental Sciences More jobs Post a job IOPSCIENCE Journals Books IOP Conference Series About IOPscience Contact Us Developing countries access IOP Publishing open access policy Accessibility IOP PUBLISHING Copyright 2024 IOP Publishing Terms and Conditions Disclaimer Privacy and Cookie Policy PUBLISHING SUPPORT Authors Reviewers Conference Organisers This site uses cookies. By continuing to use this site you agree to our use of cookies. IOP Publishing Twitter page IOP Publishing Facebook page IOP Publishing LinkedIn page IOP Publishing Youtube page IOP Publishing WeChat QR code IOP Publishing Weibo page"

Paper 9:
- APA Citation: Sakthi, U., Thangaraj, K., Anuradha, M., & Kirubakaran, M. K. (2023). Blockchain-Enabled Precision Agricultural System Using IoT and Edge Computing. In T. Senjyu, C. So–In, & A. Joshi (Eds.), Smart Trends in Computing and Communications. SMART 2023 (pp. 397–405). Springer, Singapore.
  Main Objective: The primary objective of the study was to develop a secure, advanced, smart precision agricultural system that provides transparency and security to the information stored in the knowledge repository, thereby optimizing farm management processes and minimizing resource consumption.
  Study Location: Unspecified
  Data Sources: Unspecified
  Technologies Used: Blockchain technology, IoT devices, edge computing, machine learning algorithms
  Key Findings: The proposed blockchain-based precision agricultural system offers secure and transparent information management, enables efficient resource utilization through machine learning-based insights, and provides farmers with timely information to optimize decision-making and increase profitability.
  Extract 1: "The blockchain technology is incorporated with machine learning algorithm to maintain secured and protected distributed database for storing smart farm details like pH, soil moisture, temperature, crop management, humidity, and water irrigation level"
  Extract 2: "The proposed system improves the productivity of food items and performance of the smart agricultural system by providing useful information to the farmers to make time-based decision about the land and increase the profit"
  Limitations: The study does not explicitly provide information on specific hardware or software used for implementing the blockchain-based precision agricultural system.
  Relevance Evaluation: The paper is highly relevant to the specific point under discussion because it directly addresses the integration of IoT and machine learning technologies for real-time generation and automated application of actionable irrigation insights. Specifically, the study explores advanced computing techniques such as edge computing, model compression, and hardware accelerators to reduce computational complexity and latency in irrigation systems.
  Relevance Score: 0.9
  Inline Citation: (Sakthi et al., 2023)
  Explanation: This study by Sakthi et al. (2023) investigates a blockchain-based precision agricultural system that utilizes IoT and edge computing to enhance food supply chain management. The primary goal of the system is to provide transparency and security to information stored in the knowledge repository, thereby optimizing farm management processes through the use of machine learning algorithms and secure contracts.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement Log in Find a journal Publish with us Track your research Search Cart Home Smart Trends in Computing and Communications Conference paper Blockchain-Enabled Precision Agricultural System Using IoT and Edge Computing Conference paper First Online: 15 June 2023 pp 397–405 Cite this conference paper Access provided by University of Nebraska-Lincoln Download book PDF Download book EPUB Smart Trends in Computing and Communications (SMART 2023) U. Sakthi , K. Thangaraj , M. Anuradha & M. K. Kirubakaran   Part of the book series: Lecture Notes in Networks and Systems ((LNNS,volume 645)) Included in the following conference series: International Conference on Smart Trends in Computing and Communications 266 Accesses 2 Citations Abstract With the improvement of Internet of Things (IoT) and edge computing, the smart agricultural system is driven by data produced by the different sensors and smart computing devices in the agricultural land. A new methodological paradigm high-performance edge computing is incorporated with blockchain implemented precision agriculture system to improve the data processing operation related with resource management. Edge computing nodes collect and analyze the sensor data locally without transforming to the remote centralized cloud server, which rises data processing speed and reduce the network latency. The blockchain technology is incorporated with machine learning algorithm to maintain secured and protected distributed database for storing smart farm details like pH, soil moisture, temperature, crop management, humidity, and water irrigation level. The proposed system improves the productivity of food items and performance of the smart agricultural system by providing useful information to the farmers to make time-based decision about the land and increase the profit. Keywords Blockchain technology Internet of Things Edge computing Smart agriculture Access provided by University of Nebraska-Lincoln. Download conference paper PDF Similar content being viewed by others Smart Agriculture Implementation—Blockchain IoT-Based Approach Chapter © 2022 Integrated IoT Blockchain-Based Smart Agriculture System Chapter © 2022 Smart Sustainable Farming Management Using Integrated Approach of IoT, Blockchain & Geospatial Technologies Chapter © 2020 1 Introduction Unlike conventional distributed datastore, blockchain technology provides advanced cryptographic techniques and emerging tools to store and access smart agricultural data that are shared with several untrusted users. Blockchain technology solves a number of data integrity issues caused by following untrusted operations: 1. single point failure in a supply chain centralized database, 2. lack of data integrity due to the regular use of smart agricultural management, 3. hackers can access and modify sensitive data, and 4. third-party assistance for providing security. The blockchain technology is applied on smart agriculture system to achieve ecosystem of agricultural services. Blockchain-based precision agricultural system provides secured environment for storing, exchanging, and retrieving confidential data between the several farmers and other persons. The integration of smart accuracy agriculture, edge computing, IoT, and blockchain technology allows the agricultural environment system to reduce the wastage of natural resources and increase the profit. With the new development of edge computing and blockchain technology, a precision agricultural system produces more profit by increasing crop and food productivity and reducing usage of natural resources. In the agricultural land, several sensors and devices are used to capture the environmental data and land-related data and these data are transferred to the data server in the cloud environment. Edge computing plays an important role to reduce the workload of cloud data server and minimize the volume of data moved to the data server. Instead of transferring data to the cloud data server, edge computing nodes perform the operation locally which is closer to the IoT devices in agricultural environment. The edge computing node provides necessary information to the farmers, agriculture officers, agents, researchers, and producers to earn more profit. The farmers can receive required information at the correct time to take better decision. The sensor data are collected, processed, and analyzed locally closer to the data center without transforming data to the remote centralized cloud server so that network transport latency is reduced. In Fig. 1, we have explained the precision farming system constructed on blockchain and edge IoT-based computing technology. IoT devices such as cameras, environmental sensors collect large amount of data from the farm and transmitted to cloud storage system for data analysis. The process of transferring data from IoT application area to the cloud service will take more time and reduce the speed of the system. The edge computing service is introduced between the IoT application system and cloud system to reduce the network traffic and latency in cloud environment. The edge computing server increases the speed of the data analysis process and provides solution to the farmer and the other users immediately without delay. The edge computing paradigm allows sensor data to be stored and analyzed close to the data source and application devices using 5G network connection, which reduce the cost and increase the crop yield. Fig. 1 A precision agriculture system using blockchain technology Full size image The proposed work is explained in this paper which is organized as follows. Section 2 explains the related work in a precision smart efficient agricultural system using blockchain technology and an edge computing. The IoT, edge computing, and blockchain functionalities of the various layers are discussed in Sect. 3. The process flow of the projected system is explained. In Sect. 5, we have explained the experimental environment and parameters, results, and analyses of various algorithm. In Sect. 6, we have explained the result of the proposed efficient precision agricultural system and future enhancements. 2 Related Works In 2050, the world population is expected to reach 9.6 billion. To provide the food products to the large population, agriculture department should integrate with new technology [2, 5, 13]. Precision agriculture is a sensor-controlled and software-managed environment for automatic collection of land environmental data, data analysis, monitoring, and tracking of operations with advanced technologies to meet the food products’ demands in future. Precision agriculture uses IoT and blockchain technology to avoid centralized management of data [17]. Traditional centralized smart agriculture system has lack of data security, data misinterpretation, and data redundancy [1, 3]. Blockchain-based smart agriculture system provides efficient services to the different stockholders like farmers, farm product wholesalers, supply chain agents, and financial sectors participated in every process from farm to our plate [4, 6, 7]. Blockchain is a chain of secured and verified block of information with timestamp. Blockchain and smart contract already proved information transparency and security-based record keeping [8, 9]. It provides trusted way of storing and processing of data in a distributed environment. Blockchain information are immutable which avoids alteration of data in the blockchain. Distributed consensus algorithm is implemented using tamperproof method to support users to validate every transaction in the blockchain network [10, 12]. It ensures no false information is added in the blockchain hashed data with the support of timestamp and cryptographic footprint data. IoT devices are responsible for monitoring and collecting land environment data with minimum power and low cost and lack of information security. This security and traceability problem can be solved by smart contract and blockchain mechanism [11, 14]. Figure 2 shows the different components of three-layered precision agricultural system. Edge computing is a distributed environment, which moves storage and computing power nearer to the IoT wireless sensor network to reduce the workload of the cloud server and the latency [15, 19]. Edge computing node provides immediate response to the farmers to take better and efficient decision to improve the crop yield and reduce the usage of resources. It reduces the cost and increases the network efficiency by providing better security [16, 18]. Analysis of sensor data performed in the edge computing node reduces the network latency and increases reliability, modularity, and scalability. Raspberry Pi acts as an edge computing node, which executes a machine learning algorithm to predict the required information about the crop yield and status of resources using gateways [18]. Fig. 2 Precision agricultural system Full size image 3 IoT, Edge Computing, and Blockchain Technology in Precision Agricultural System Smart contract controls do not allow the third-party intermediate users to fix the price for food products in the market. The blockchain technology controls the usage and modification of data in the edge server and cloud server node using contracts and consensus algorithm. Food supply fully depends on the agricultural process, which is composed of pre-harvesting and post-harvesting. Pre-harvesting includes finding best quality seed, cultivation process, market demand, finding soil quality, and need of fertilizer. Post-harvesting represents distribution of food products in the market to the producer, supplier, and consumer. Food supply management involves direct and indirect users to accomplish the transfer of food products to consumer or producer through different agents. Blockchain allows different levels of users to access the centralized secured data and execute different operations on hashed data. 3.1 Proposed Blockchain-Based Agricultural Model The proposed system allows the users to trace the food product data from land to consumer and ensures the security and adoptability. In Fig. 3, we have explained the different use cases of blockchain in precision agriculture system. The blockchain technology helps to create trustworthy environment between the producer and consumers in food supply chain management. Every transaction is stored as block in chain with time stamp, which cannot be modified in future. Sensors collects crop data and environment data from the agricultural and stored in edge computing node for data pre-processing. Some portion of the data is processed in the IOT side edge process node to provide information to the different users and farmers and other users immediately without any time delay. Machine learning algorithm is executed in the edge layer processing node to predict the crop yield and demand in the market. Fig. 3 Use cases of blockchain in precision agriculture Full size image 3.2 Functionality of Layered Architecture Blockchain-based precision agricultural system consists of different kind of components at each layer to perform agricultural land sensor data analysis, which are collected from agricultural land. In Fig. 4, we have explained different components and layers of the proposed system. The different functionalities of various layers are explained below: Data collection layer: It is responsible for collecting land- and crop-related data from different sensors and drones deployed in the agricultural area. The collected data is transferred to the highest level edge computing server node using wireless sensor network gateway. Edge computing layer: The edge computing layer comprises storage server and processing node, which is responsible for processing the data nearer to the data source to reduce the latency and network traffic. It provides required information to the user with minimum response time. Bigdata analytics layer: Data mining association rule algorithm is executed on the large volume of data to generate the pattern to be stored in the knowledge repository with contract-based blockchain technology. It can be used by the farmer and other stakeholders hashed in the blockchain. Blockchain service layer: Transaction details and data from each layer are stored in the blockchain in a distributed environment to support the property traceability for all users and security. Application layer: The user can access information or knowledge pattern from the knowledge repository using laptop, computer, or mobile phones at any time and everywhere. The farmer, retailer, agri-officer, supplier, and retailer can access information using mobile devices connected via Internet. Fig. 4 Layered architecture using blockchain technology Full size image 4 Performance Analysis The proposed blockchain system maintains transaction transparency using decentralized ledger when compared with traditional approach. The performance of the proposed secured blockchain system is measured in terms of speed, average latency, average throughput, resource utilization, and user performance. The experiment is performed on 250 transactions in two different blockchain platforms, Hyperledger Fabric and Ethereum. Ethereum is a distributed computing platform with smart contracts, open source, and public. Hyperledger Fabric is an open-source permissioned private blockchain technology with distributed ledger. Figure 5 shows the comparison of average throughput for Ethereum and Hyperledger with varying number of transactions. The experiment was conducted with two platforms on five different sizes of datasets. For all datasets, Hyperledger has more throughput than Ethereum. The next performance matrix latency is evaluated with different number of transactions for Ethereum and Hyperledger. In Fig. 6, we observed that the throughput increases when the number of transaction increases. The Ethereum has more latency than Hyperledger. Fig. 5 Comparison of throughput Full size image Fig. 6 Comparison of latency Full size image 5 Conclusion and Future Work With the development of edge computing efficient technologies and blockchain algorithm rapidly transfer traditional smart agricultural systems to advanced precision agricultural systems. The effective food supply chain system is developed with use of consensus algorithm in two different blockchain platforms. In this paper, we proposed secured advanced smart precision agricultural system deployed in the field of research and food supply, which provides transparency and security to the information stored in the knowledge repository. The farm management process is optimized with the use of machine learning algorithm and security contacts by improvising the food plant and crop yield and minimizing the convention of natural resources. The proposed system delivers the needed information or knowledge to the farmers at the correct time and correct place. The novelty of the proposed advanced system is to maximize the profit for the farmers and minimize the investment cost based on blockchain-based food supply system. In future, the proposed method can be extended for designing food chain management system in order to increase the profit for farmers and crop demand and disease analysis. References Antonucci F, Figorilli S, Costa C, Pallottino F, Raso L, Menesatti P (2019) A review on blockchain applications in the agri‐food sector. J Sci Food Agric Google Scholar   George R, Harsh H, Ray P, Babu A (2019) Food quality traceability prototype for restaurants using blockchain and food quality data index. J Clean Prod 240(1):118021 Article   Google Scholar   Bechtsis D, Tsolakis N, Bizakis A, Vlachos D (2019) A blockchain framework for containerized food supply chains. Comput Aided Chem Eng 46(1):1369–1374 Article   Google Scholar   Salah K, Nizamuddin N, Jayaraman R, Omar M (2019) Blockchain-based soybean traceability in agricultural supply chain. IEEE Access 7(1):73295–73305 Article   Google Scholar   Patil AS, Tama BA, Park Y, Rhee KH (2017) A framework for blockchain based secure smart green house farming. In: Advances in computer science and ubiquitous computing, Singapore Google Scholar   Abelseth B (2018) Blockchain tracking and cannabis regulation: developing a permissioned blockchain network to track Canada's cannabis supply chain. Dalhous J Interdiscip Manag 14 Google Scholar   Figorilli S, Antonucci F, Costa C, Pallottino F, Raso L, Castiglione M, Pinci E, Del Vecchio D, Colle G, Proto A, Sperandio G (2018) A blockchain implementation prototype for the electronic open source traceability of wood along the whole supply chain. Sensors 18(9):3133 Article   Google Scholar   Sakthi U, Dafni Rose J, Sam D, Kirubakaran MK (2021) Blockchain-based internet of vehicles for intelligent transportation system using fog computing. In: 4th international conference on computer networks, big data and IoT (ICCBI 2021). Lecture notes on data engineering and communications technologies, vol 117. Springer, Singapore Google Scholar   Sakthi U, Dafni Rose J (2021) Blockchain-enabled smart agricultural knowledge discovery system using edge computing. In: 12th international conference on identification, information and knowledge in the internet of things, IIKI 2021, Hangzhou, China, 18 December 2021, vol 202, pp 73–82 Google Scholar   Sakthi U, Thangaraj K, Poongothai T, Kirubakaran MK (2022) Big data analytics and machine learning approach for smart agriculture system using edge computing. In: Zhang YD, Senjyu T, So-In C, Joshi A (eds) Smart trends in computing and communications. Lecture notes in networks and systems, vol 396. Springer, Singapore Google Scholar   Sakthi U, Rose JD (2020) Smart agricultural knowledge discovery system using IoT technology and fog computing. In: 2020 third international conference on smart systems and inventive technology (ICSSIT), Tirunelveli, India, August 2020, pp 48–53 Google Scholar   Li Z, Yang Z, Xie S (2019) Computing resource trading for edgecloud-assisted internet of things. IEEE Trans Industr Inf 15(6):3661–3669 Article   Google Scholar   Xu C, Liu H, Li P, Wang P (2018) A remote attestation security model based on privacy-preserving blockchain for v2x. IEEE Access 6:67 809–67 818 Google Scholar   Manubot, Tech. Rep. (2019) Tschorsch F, Scheuermann B, Bitcoin and beyond: A technical survey on decentralized digital currencies. IEEE Commun Surv Tutor 18(3):2084–2123, 2016 Google Scholar   Abbas N, Zhang Y, Taherkordi A, Skeie T (2018) Mobile edge computing: a survey. IEEE Internet Things J 5(1):450–465 Article   Google Scholar   Archontakis F, Anastasiadis F (2019) Technology and innovation in Southern Europe’s agri-food sector: a Delphi study. Int J Technol Manag Sustain Dev 18(1):17–36 Article   Google Scholar   Avgeris M, Spatharakis D, Dechouniotis D, Kalatzis N, Roussaki I, Papavassiliou S (2019) Where there is fire there is SMOKE: a scalable edge computing framework for early fire detection. Sensors 19(3):639 Article   Google Scholar   Gaura EI, Brusey J, Allen M, Wilkins R, Goldsmith D, Rednic R (2013) Edge mining the internet of things. IEEE Sensors J 13(10):3816–3825 Article   Google Scholar   Shi W, Cao J, Zhang Q, Li Y, Xu L (2016) Edge computing: vision and challenges. IEEE Internet Things J 3(5):637–646 Article   Google Scholar   Download references Author information Authors and Affiliations Department of Computational Intelligence, School of Computing, SRM Institute of Science and Technology, Kattankulathur, Chengalpattu, Chennai, TN, 603203, India U. Sakthi Department of Information Technology, Sona College of Technology, Junction Main Road, Salem, TN, 636 005, India K. Thangaraj Department of Computer Science and Engineering, S.A. Engineering College, Chennai 77, Thiruverkadu, TN, India M. Anuradha Department of Information Technology, St. Joseph’s Institute of Technology, Chennai, TN, 119, India M. K. Kirubakaran Corresponding author Correspondence to U. Sakthi . Editor information Editors and Affiliations University of the Ryukyus, Nishihara, Japan Tomonobu Senjyu Khon Kaen University, Khon Kaen, Thailand Chakchai So–In Global Knowledge Research Foundation, Ahmedabad, India Amit Joshi Rights and permissions Reprints and permissions Copyright information © 2023 The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. About this paper Cite this paper Sakthi, U., Thangaraj, K., Anuradha, M., Kirubakaran, M.K. (2023). Blockchain-Enabled Precision Agricultural System Using IoT and Edge Computing. In: Senjyu, T., So–In, C., Joshi, A. (eds) Smart Trends in Computing and Communications. SMART 2023. Lecture Notes in Networks and Systems, vol 645. Springer, Singapore. https://doi.org/10.1007/978-981-99-0769-4_35 Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-99-0769-4_35 Published 15 June 2023 Publisher Name Springer, Singapore Print ISBN 978-981-99-0768-7 Online ISBN 978-981-99-0769-4 eBook Packages Intelligent Technologies and Robotics Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Publish with us Policies and ethics Sections Figures References Abstract Introduction Related Works IoT, Edge Computing, and Blockchain Technology in Precision Agricultural System Performance Analysis Conclusion and Future Work References Author information Editor information Rights and permissions Copyright information About this paper Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 10:
- APA Citation: Prajapati, J. B., Kumar, A., Pramanik, J., Prajapati, B. G., & Saini, K. (2023). Edge AI for Real-Time and Intelligent Agriculture. In Applying Drone Technologies and Robotics for Agricultural Sustainability. IGI Global.
  Main Objective: To explore the use of edge computing, edge IoT, and edge artificial intelligence in developing autonomous and intelligent agricultural solutions.
  Study Location: Unspecified
  Data Sources: Not explicitly stated
  Technologies Used: Edge computing, Edge IoT, Edge AI
  Key Findings: Edge computing, edge IoT, and edge artificial intelligence can enable autonomous and intelligent agricultural solutions that improve efficiency, quality, and time-to-market for agricultural products.
  Extract 1: "Edge AI for Real-Time and Intelligent Agriculture"
  Extract 2: "Advancements of the last decade in edge computing, edge IoT, and edge artificial intelligence now allow for autonomous, efficient, and intelligent systems to be proposed for various industrial applications."
  Limitations: None
  Relevance Evaluation: The paper is relevant to the point of reducing computational complexity and latency in real-time generation of actionable irrigation insights. The paper explores the use of edge computing, model compression, and hardware accelerators to address these challenges and improve the efficiency of AI-powered irrigation systems.
  Relevance Score: 0.9
  Inline Citation: (Prajapati et al., 2023)
  Explanation: The paper is about an Edge AI system that promotes autonomous and intelligent precision farming. In this study, edge computing, edge IoT, and edge artificial intelligence are used to provide intelligent agricultural solutions that assist farmers in achieving greater production with less effort while improving quality and providing a rapid go-to-market approach for their produce. They use AI to detect crop health issues or nutrient deficiencies in the field.

 Full Text: >
"Login Register Language: English Welcome to the InfoSci Platform University of Nebraska - Lincoln Database Search Research Tools User Resources Reference Hub2 Edge AI for Real-Time and Intelligent Agriculture Jigna Bhupendra Prajapati, Akash Kumar, Jhilam Pramanik, Bhupendra G. Prajapati, Kavita Saini Source Title: Applying Drone Technologies and Robotics for Agricultural Sustainability Copyright: © 2023 |Pages: 30 ISBN13: 9781668464137|ISBN10: 1668464136|EISBN13: 9781668464151 DOI: 10.4018/978-1-6684-6413-7.ch014 Cite Chapter Favorite View Full Text HTML View Full Text PDF Abstract Advancements of the last decade in edge computing, edge IoT, and edge artificial intelligence now allow for autonomous, efficient, and intelligent systems to be proposed for various industrial applications. Intelligence agricultural solutions allow farmers to achieve more with less while improving quality and providing a rapid go-to-market approach for produce. Using AI is an effective technique to detect any crop health concerns or nutrient inadequacies in the field. Plant diseases affect the food system, economy, and environment. This chapter covers intelligent agriculture & challenges in front of technology. It focuses AI application using machine learning, artificial neural network (ANN), and deep learning. The various AI applications in agriculture for land monitoring, crop and varietal selection, smart irrigation or automation of irrigation, monitoring of crop health, crop disease detection, predictive analytics, weed control, precision agriculture, harvesting, yield estimation and phenotyping, supply chain management, and food quality. Request access from your librarian to read this chapter's full text. Full Text Preview Introduction Agriculture Agriculture is one of the oldest economic sectors for thousands of years ago (Mazoyer & Roudart, 2006). The farming began manually with the help of a few animals & with a few manual devices. Agriculture is an important sector, of the overall economy anywhere (Alston & Pardey, 2014). The various factor dependable on each other for overall growth. Agriculture has a wide range of subsections such as farming, food industries, animal centers, food trails & errors, services sector, agricultural research, and many more. Agriculture can cover different types of farming as Subsistence, Intensive Subsistence, Mediterranean, Arable, Shifting Cultivation, etc (Komarek, De Pinto, & Smith, 2020). Today, there is an increment in the human population that needs more agricultural production with concern to a varied range of food products. There is a large volume of farmers associated with middle or low income of agriculture which is accounting for national income. To maintain the routine of the Environment cycle agriculture is helpful in many nodes as reduces erosion & soil moisture, Soil carbon sequestration (Palm et al., 2014). Another side some pesticides used in farming create environmental pollution to a certain extent (Tudi et al., 2021). There can be various impacts on CO2 by renewable energy consumption (Waheed et al., 2018). Agriculture affects directly and indirectly many other industries for prospects. Agriculture methods have been changing dynamically. The conventional way of agriculture production involved the preparation of soil, sowing of seeds, Adding Fertilizers, Irrigation, weed protection, Harvesting, Storage, and distribution as described in Figure 1. Each phase is modernized as time passes. The new technology assists profoundly in enhancing the performance of Agribusiness. Figure 1. Elementary Agriculture Intelligent Agriculture Agriculture with AI-aided machinery is becoming popular as intelligent Agriculture using IOT support. Intelligent agriculture utilizes various types of robots as intelligent machines for different task execution. Automation surely benefited in almost all fields but in agriculture, it is a big revolution as it is the prime source of income for a large volume of people. The smart devices enabled AI support pushes agriculture towards intelligent agriculture with human intervention. The traditional agricultural tasks such as harvesting, weed identification, and pest examination are also done with autonomous robots which are AI aided. The usage of intelligent machines in agriculture will enhance the speed of work compared to human laborers (Ahmad & Nabi, 2021). There is a higher number of technical integrations with agriculture by various smart devices & mechanisms for sensing, identification, transmission, monitoring, analysis, and prediction. Such IoT devices will save time & cost & improves crop yields (Chen & Yang, 2019). The remote sensors, GIS, GPS, drones, and many others are actively playing an important role in Intelligent Agriculture. Agriculture Challenges In Front Of Technology Many factors affect traditional farming as rainfall, temperature, and humidity. An imbalance in climatic changes may cause deforestation and pollution which create a hurdle for farmers to take decisions to prepare the soil, sow seeds, and harvest (Harris et al., 2001). The nutrient deficit can result in poor crop quality as every crop requires a certain type of soil nourishment (Nair, 2019). Weed protection is also crucial to increasing the production of nutrients (Ibáñez & Blázquez, 2019). Agriculture is not an isolated sector; it is an integral part of a sound ecosystem. There are many challenges in agriculture as horticulture, animal centers, dairy, and other allied sectors (McCalla & Economics, 2001). Technology is widely integrated into multiple stages of the agriculture process. The internal & external resources can be utilized with a better prospect using current trends of technologies. The broadly technological challenges can be classified as Continue Reading References Follow Reference Abawi G. S. Widmer T. L. (2000). Impact of soil health management practices on soilborne pathogens, nematodes and root diseases of vegetable crops.Applied Soil Ecology, 15(1), 37–47. 10.1016/S0929-1393(00)00070-6 Follow Reference Accorsi R. Cholette S. Manzini R. Tufano A. (2018). A hierarchical data architecture for sustainable food supply chain management and planning.Journal of Cleaner Production, 203, 1039–1054. doi:10.1016/j.jclepro.2018.08.275 Follow Reference Agatonovic-Kustrin S. Beresford R. (2000). Basic concepts of artificial neural network (ANN) modeling and its application in pharmaceutical research.Journal of Pharmaceutical and Biomedical Analysis, 22(5), 717–727. 10.1016/S0731-7085(99)00272-110815714 Agriinfo. (2018). Soil –Plant – Water – Relationships. Agriinfo.https://agriinfo.in/soil-plant-water-relationships-2206/ Follow Reference Ahmad I. Shahabuddin S. Sauter T. Harjula E. Kumar T. Meisel M. Juntti M. Ylianttila M. (2021). The Challenges of Artificial Intelligence in Wireless Networks for the Internet of Things: Exploring Opportunities for Growth.IEEE Industrial Electronics Magazine, 15(1), 16–29. 10.1109/MIE.2020.2979272 Follow Reference Ahmad L. Nabi F. (2021). Agriculture 5.0: Artificial Intelligence, IoT and Machine Learning. CRC Press. Ahn, H.S., Dayoub, F., Popovic, M., MacDonald, B.A., Siegwart, R.Y., & Sa, I. (2018). An Overview of Perception Methods for Horticultural Robots: From Pollination to Harvest. ArXiv, abs/1807.03124. Follow Reference Aiello G. Catania P. Vallone M. Venticinque M. (2022). Worker safety in agriculture 4.0: A new approach for mapping operator’s vibration risk through Machine Learning activity recognition.Computers and Electronics in Agriculture, 193, 106637. 10.1016/j.compag.2021.106637 Follow Reference Aitkenhead, M. J., Mcdonald, A. J. S., Dawson, J. J., Couper, G., Smart, R. P., Billett, M., Hope, D., & Palmer, S. (2003). A novel method for training neural networks for time-series prediction in environmental systems. Elsevier, 162, 87–95. 10.1016/S0304-3800(02)00401-5 Follow Reference Alston J. M. Pardey P. G. (2014). Agriculture in the Global Economy %J. The Journal of Economic Perspectives, 28(1), 121–146. 10.1257/jep.28.1.121 Follow Reference Amatya S. Karkee M. Gongal A. Zhang Q. Whiting M. D. (2016). Detection of cherry tree branches with full foliage in planar architecture for automated sweet-cherry harvesting.Biosystems Engineering, 146, 3–15. 10.1016/j.biosystemseng.2015.10.003 Follow Reference Arif C. Indra Setiawan B. Mizoguchi M. Doi R. (2012a). Estimation of soil moisture in paddy field using Artificial Neural Networks.International Journal of Advanced Research in Artificial Intelligence, 1(1). 10.14569/IJARAI.2012.010104 Follow Reference Arif C. Mizoguchi M. Mizoguchi M. Doi R. (2012b). Estimation of soil moisture in paddy field using Artificial Neural Networks.International Journal of Advanced Research in Artificial Intelligence, 1(1). 10.14569/IJARAI.2012.010104 Follow Reference Åstrand B. Baerveldt A. J. (2002). An agricultural mobile robot with vision-based perception for mechanical weed control.Autonomous Robots, 13(1), 21–35. 10.1023/A:1015674004201 Follow Reference Babu, S. (2013). A software model for precision agriculture for small and marginal farmers. Global Humanitarian Technology Conference: South Asia Satellite, 352–355. IEEE. 10.1109/GHTC-SAS.2013.6629944 Follow Reference Bacco M. Barsocchi P. Ferro E. Gotta A. Ruggeri M. (2019). The Digitisation of Agriculture: A Survey of Research Activities on Smart Farming.Array, 3–4, 100009. 10.1016/j.array.2019.100009 Follow Reference Bak T. Jakobsen H. (2004). Agricultural robotic platform with four wheel steering for weed detection.Biosystems Engineering, 87(2), 125–136. 10.1016/j.biosystemseng.2003.10.009 Follow Reference Bakker T. van Asselt K. Bontsema J. Müller J. van Straten G. (2006). An autonomous weeding robot for organic farming.Springer Tracts in Advanced Robotics, 25, 579–590. 10.1007/978-3-540-33453-8_48 Follow Reference Barlow H. B. (1989). Unsupervised Learning.Neural Computation, 1(3), 295–311. 10.1162/neco.1989.1.3.295 Beaman, J. A., & Johnson, A. J. (2006). Food distribution channel overview: a guide for new manufacturers. OSU. https://ir.library.oregonstate.edu/concern/open_educational_resources/8623hz116 Follow Reference Bhattacharyya S. S. Maitra D. Deb S. (2021). Study of adoption and absorption of emerging technologies for smart supply chain management: A dynamic capabilities perspective.[IJAL]. International Journal of Applied Logistics, 11(2), 14–54. Bhbosale, S., Pujari, V., & Multani, Z. J. A. I. I. R. J. (2020). Advantages And Disadvantages Of Artificial Intellegence. 227-230. Follow Reference Bilgili M. (2011). The use of artificial neural networks for forecasting the monthly mean soil temperatures in Adana, Turkey.Turkish Journal of Agriculture and Forestry, 35(1), 83–93. https://dergipark.org.tr/en/pub/tbtkagriculture/issue/11593/138197 Follow Reference Bioucas-Dias, J. M., Plaza, A., Camps-Valls, G., Scheunders, P., Nasrabadi, N. M., & Chanussot, J. (2013). Hyperspectral remote sensing data analysis and future challenges. Geoscience and Remote Sensing Magazine, 1(2), 6–36. IEEE . 10.1109/MGRS.2013.2244672 Follow Reference Blasco J. Aleixos N. Roger J. M. Rabatel G. Moltó E. (2002). AE—Automation and emerging technologies: Robotic weed control using machine vision.Biosystems Engineering, 83(2), 149–157. Follow Reference Bonaccorso G. (2017). Machine learning algorithms. Packt Publishing Ltd. Follow Reference Bralts V. F. Driscoll M. A. Shayya W. H. Cao L. (1993). An expert system for the hydraulic analysis of microirrigation systems.Computers and Electronics in Agriculture, 9(4), 275–287. Follow Reference Bu F. Wang X. (2019). A smart agriculture IoT system based on deep reinforcement learning.[doi:https://doi.org/10.1016/j.future.2019.04.041]. Future Generation Computer Systems, 99, 500–507. Follow Reference Bünger L. (2021). Robotic waste sorting. Worcester Polytechnic Institute. Follow Reference Busch, G. (2012). GIS-based Tools for Regional Assessments and Planning Processes Regarding Potential Environmental Effects of Poplar SRC. BioEnergy Research 5(3), 584–605. 10.1007/S12155-012-9224-0 Follow Reference Cakir, Y., Kirci, M., & Gunes, E. O. (2014). Yield prediction of wheat in south-east region of Turkey by using artificial neural networks. The 3rd International Conference on Agro-Geoinformatics. Agro-Geoinformatics . 10.1109/AGRO-GEOINFORMATICS.2014.6910609 Follow Reference Carbonell J. G. Michalski R. S. Mitchell T. M. (1983). 1 - AN OVERVIEW OF MACHINE LEARNING. In MichalskiR. S.CarbonellJ. G.MitchellT. M. (Eds.), Machine Learning (pp. 3–23). Morgan Kaufmann. Follow Reference Chang D. H. Islam S. (2000). Estimation of soil physical properties using remote sensing and artificial neural network.Remote Sensing of Environment, 74(3), 534–544. Follow Reference Chang, C. & Robotics, K. L. (2018). Smart agricultural machine with a computer vision-based weeding and variable-rate irrigation scheme. Mdpi.Com.10.3390/robotics7030038 Follow Reference Charoen-Ung, P., & Mittrapiyanuruk, P. (2019). Sugarcane Yield Grade Prediction Using Random Forest with Forward Feature Selection and Hyper-parameter Tuning. Advances in Intelligent Systems and Computing, 769, 33–42. 10.1007/978-3-319-93692-5_4 Follow Reference Chattopadhyay P. B. Rangarajan R. (2014). Application of ANN in sketching spatial nonlinearity of unconfined aquifer in agricultural basin.[doi:https://doi.org/10.1016/j.agwat.2013.11.007]. Agricultural Water Management, 133, 81–91. Follow Reference Chen J. Chen J. Zhang D. Sun Y. Nanehkaran Y. A. (2020). Using deep transfer learning for image-based plant disease identification.Computers and Electronics in Agriculture, 173, 105393. https://doi.org/10.1016/J.COMPAG.2020.105393 Follow Reference Chen J. Yang A. (2019). Intelligent Agriculture and Its Key Technologies Based on Internet of Things Architecture.IEEE Access: Practical Innovations, Open Solutions, 7, 77134–77141. doi:10.1109/ACCESS.2019.2921391 Follow Reference Cheng X. Zhang Y. Chen Y. Wu Y. Yue Y. (2017). Pest identification via deep residual learning in complex background.[doi:https://doi.org/10.1016/j.compag.2017.08.005]. Computers and Electronics in Agriculture, 141, 351–356. Follow Reference Cui, S., Ling, P., Zhu, H., & Keener, H. M. (2018). Plant Pest Detection Using an Artificial Nose System: A Review. Sensors 18(2), 378. 10.3390/S18020378 Daheim, C., Poppe, K., & Schrijver, R. (2019). Precision agriculture and the future of farming in Europe: scientific foresight study. European Parliament. https://data.europa.eu/doi/10.2861/175493 Follow Reference Daugherty P. R. Wilson H. J. (2018). Human+ machine: Reimagining work in the age of AI. Harvard Business Press. Follow Reference Devapriya P. Ferrell W. Geismar N. (2017). Integrated production and distribution scheduling with a perishable product.European Journal of Operational Research, 259(3), 906–916. https://doi.org/10.1016/J.EJOR.2016.09.019 Follow Reference Devaraj, A., Rathan, K., Jaahnavi, S., & Indira, K. (2019). Identification of plant disease using image processing technique. Proceedings of the 2019 International Conference on Communication and Signal Processing, 749–753. IEEE. 10.1109/ICCSP.2019.8698056 Follow Reference Dewi T. Risma P. Oktarina Y. (2020). Fruit sorting robot based on color and size for an agricultural product packaging system.Bulletin of Electrical Engineering and Informatics, 9(4), 1438–1445. Follow Reference dos Santos Ferreira A. Freitas D. M. da Silva G. G. Pistori H. Folhes M. T. (2019). Unsupervised deep learning and semi-automatic data labeling in weed discrimination.[doi:https://doi.org/10.1016/j.compag.2019.104963]. Computers and Electronics in Agriculture, 165, 104963. Follow Reference Elshorbagy A. Parasuraman K. (2008). On the relevance of using artificial neural networks for estimating soil moisture content.Journal of Hydrology (Amsterdam), 362(1-2), 1–18. Follow Reference Fedorova E. Darbasov V. Okhlopkov M. (2020). The role of agricultural economists in study on problems related to regional food safety. In E3S Web of Conferences (Vol. 176, p. 05011). EDP Sciences. Follow Reference Fennimore, S. A., Slaughter, D. C., Siemens, M. C., Leon, R. G., & Saber, M. N. (2016). Technology for automation of weed control in specialty crops. Cambridge.Org, 30, 823–837. 10.1614/WT-D-16-00070.1 Follow Reference Ferentinos K. P. (2018). Deep learning models for plant disease detection and diagnosis.Computers and Electronics in Agriculture, 145, 311–318. https://doi.org/10.1016/J.COMPAG.2018.01.009 Follow Reference Filimonau V. Todorova E. Mzembe A. Sauer L. Yankholmes A. (2020). A comparative study of food waste management in full service restaurants of the United Kingdom and the Netherlands.Journal of Cleaner Production, 258, 120775. Follow Reference Fuentes, A., Yoon, S., Kim, S. C., & Park, D. S. (2017). A Robust Deep-Learning-Based Detector for Real-Time Tomato Plant Diseases and Pests Recognition. Sensors, 17(9), 2022. 10.3390/S17092022 Follow Reference Goap A. Sharma D. Shukla A. K. Rama Krishna C. (2018). An IoT based smart irrigation management system using Machine learning and open source technologies.Computers and Electronics in Agriculture, 155, 41–49. https://doi.org/10.1016/J.COMPAG.2018.09.040 Follow Reference Gu Z. Qi Z. Ma L. Gui D. Xu J. Fang Q. Yuan S. Feng G. (2017). Development of an irrigation scheduling software based on model predicted crop water stress.Computers and Electronics in Agriculture, 143, 208–221. https://doi.org/10.1016/J.COMPAG.2017.10.023 Follow Reference Hady M. F. A. Schwenker F. (2013). Semi-supervised Learning. In BianchiniM.MagginiM.JainL. C. (Eds.), Handbook on Neural Information Processing (pp. 215–239). Springer Berlin Heidelberg. Follow Reference Haghverdi, A., & Washington-Allen, R. (2018). Prediction of cotton lint yield from phenology of crop indices using artificial neural networks. Elsevier. 10.1016/j.compag.2018.07.021 Harishankar, S., Kumar, R. S., Sudharsan, K. P., Vignesh, U., & Viveknath, T. (2014). Solar powered smart irrigation system. Advance in electronic and electric engineering, 4(4), 341-346. Follow Reference Harris D. Pathan A. K. Gothkar P. Joshi A. Chivasa W. Nyamudeza P. (2001). On-farm seed priming: Using participatory methods to revive and refine a key technology.[doi:https://doi.org/10.1016/S0308-521X(01)00023-3]. Agricultural Systems, 69(1), 151–164. Follow Reference Heisel T. Schou J. Christensen S. Andreasen C. (2001). Cutting weeds with a CO 2 laser.Weed Research, 41(1), 19–29. https://doi.org/10.1046/J.1365-3180.2001.00212.X Follow Reference Hinnell, A., Lazarovitch, N., & Furman, A. (2010). Neuro-Drip: estimation of subsurface wetting patterns for drip irrigation using neural networks. Springer, 28(6), 535–544. 10.1007/s00271-010-0214-8 Follow Reference Hui, Y. Y., Choy, K. L., Ho, G. T. S., Leung, K. H., & Lam, H. Y. (2016). A cloud-based location assignment system for packaged food allocation in e-fulfillment warehouse. Sage Journals, 8, 1–15. 10.1177/1847979016684832 Follow Reference Ibáñez M. D. Blázquez M. A. (2019). Ginger and Turmeric Essential Oils for Weed Control and Food Crop Protection.Plants, 8(3). Advance online publication. 10.3390/plants8030059 Follow Reference Iqbal, M. A., & Talukder, K. H. (2020). Detection of Potato Disease Using Image Segmentation and Machine Learning. International Conference on Wireless Communications, Signal Processing and Networking, 43–47. 10.1109/WISPNET48689.2020.9198563 Follow Reference Jagtap, S. T., Phasinam, K., Kassanuk, T., Jha, S. S., Ghosh, T., & Thakar, C. M. (2022). Towards application of various machine learning techniques in agriculture. Materials Today: Proceedings, 51, 793-797. doi:10.1016/j.matpr.2021.06.236 Follow Reference Jha K. Doshi A. Patel P. Shah M. (2019). A comprehensive review on automation in agriculture using artificial intelligence.Artificial Intelligence in Agriculture, 2, 1–12. Follow Reference Kakani V. Nguyen V. H. Kumar B. P. Kim H. Pasupuleti V. R. (2020). A critical review on computer vision and artificial intelligence in food industry.Journal of Agriculture and Food Research, 2, 100033. https://doi.org/10.1016/J.JAFR.2020.100033 Follow Reference Kamilaris A. Prenafeta-Boldú F. X. (2018). Deep learning in agriculture: A survey.Computers and Electronics in Agriculture, 147, 70–90. https://doi.org/10.1016/J.COMPAG.2018.02.016 Follow Reference Karar, M. E., Alsunaydi, F., Albusaymi, S., & Alotaibi, S. (2021). A new mobile application of agricultural pests recognition using deep learning in cloud computing system. Alexandria Engineering Journal, 60(5), 4423-4432. doi:10.1016/j.aej.2021.03.009 Follow Reference Kasinathan T. Singaraju D. Uyyala S. R. (2021). Insect classification and detection in field crops using modern machine learning techniques.[doi:https://doi.org/10.1016/j.inpa.2020.09.006]. Information Processing in Agriculture, 8(3), 446–457. Follow Reference Kehui X. Deqin X. Xiwen L. (2010). Smart water-saving irrigation system in precision agriculture based on wireless sensor network.Nongye Gongcheng Xuebao (Beijing), 26(11), 170–175. https://doi.org/10.3969/j.issn.1002-6819.2010.11.030 Follow Reference Khedr A. E. Kadry M. Walid G. (2015). Proposed Framework for Implementing Data Mining Techniques to Enhance Decisions in Agriculture Sector Applied Case on Food Security Information Center Ministry of Agriculture, Egypt.Procedia Computer Science, 65, 633–642. https://doi.org/10.1016/J.PROCS.2015.09.007 Follow Reference Kim, M. agriculture, J. G.-C. and electronics in, & 2008, undefined. (2008). Artificial Neural Network estimation of soil erosion and nutrient concentrations in runoff from land application areas. Elsevier. 10.1016/j.compag.2008.05.021 Komarek, A. M., De Pinto, A., & Smith, V. H. J. A. S. (2020). A review of types of risks in agriculture: What we know and what we need to know. Agricultural Systems, 178, 102738. Follow Reference Kouadio L. Deo R. C. Byrareddy V. Adamowski J. F. Mushtaq S. (2018). Artificial intelligence approach for the prediction of Robusta coffee yield using soil fertility properties.Computers and Electronics in Agriculture, 155, 324–338. Follow Reference Krisztin T. (2018). Semi-parametric spatial autoregressive models in freight generation modeling.Transportation Research Part E, Logistics and Transportation Review, 114, 121–143. https://doi.org/10.1016/J.TRE.2018.03.003 Kukreja, H., Bharath, N., Siddesh, C., & Kuldeep, S. J. I. J. A. R. I. I. E. (2016). An introduction to artificial neural network. 1, 27-30. Follow Reference Kumar, I., Rawat, J., Mohd, N., & Husain, S. (2021). Opportunities of Artificial Intelligence and Machine Learning in the Food Industry. Journal of Food Quality. 10.1155/2021/4535567 Follow Reference Kumar, R., Singh, M. P., Kumar, P., & Singh, J. P. (2015). Crop Selection Method to maximize crop yield rate using machine learning technique. International Conference on Smart Technologies and Management for Computing, Communication, Controls, Energy and Materials, 138–145. 10.1109/ICSTM.2015.7225403 Follow Reference Lamm R. D. Slaughter D. C. Giles D. K. (2002). Precision weed control system for cotton.Transactions of the ASAE. American Society of Agricultural Engineers, 45(1), 231. Follow Reference Larsen, R. A., Schaalje, G. B., & Lawson, J. S. (2009). Food shelf life: estimation and optimal design. Journal of Statistical Computation and Simulation, 80(2), 143–157. 10.1080/00949650802549135 Lauzon, F. Q. (2012, 2-5 July 2012). An introduction to deep learning. Paper presented at the International Conference on Information Science, Signal Processing and their Applications (ISSPA). Follow Reference LeCun Y. Bengio Y. Hinton G. (2015). Deep learning.Nature, 521(7553), 436–444. 10.1038/nature14539 Follow Reference Lezoche M. Hernandez J. E. Díaz M. D. M. E. A. Panetto H. Kacprzyk J. (2020). Agri-food 4.0: A survey of the supply chains and technologies for the future agriculture.Computers in Industry, 117, 103187. Follow Reference Li M. Yost R. S. (2000). Management-oriented modeling: Optimizing nitrogen management with artificial intelligence.Agricultural Systems, 65(1), 1–27. Follow Reference Li N. Shepperd M. Guo Y. (2020). A systematic review of unsupervised learning techniques for software defect prediction.[doi:https://doi.org/10.1016/j.infsof.2020.106287]. Information and Software Technology, 122, 106287. Follow Reference Li T. Johansen K. McCabe M. F. (2022). A machine learning approach for identifying and delineating agricultural fields and their multi-temporal dynamics using three decades of Landsat data.[doi:https://doi.org/10.1016/j.isprsjprs.2022.02.002]. ISPRS Journal of Photogrammetry and Remote Sensing, 186, 83–101. Follow Reference Li Y. Chao X. (2020). ANN-Based Continual Classification in Agriculture.Agriculture, 10(5). doi:10.3390/agriculture10050178 Follow Reference Liakos K. G. Busato P. Moshou D. Pearson S. Bochtis D. (2018). Machine Learning in Agriculture: A Review.Sensors (Basel), 18(8), 2674. https://doi.org/10.3390/s18082674 Follow Reference Livingstone D. J. (Ed.). (2008). Artificial neural networks: methods and applications (pp. 185–202). Humana Press. Follow Reference López E. M. García M. Schuhmacher M. Domingo J. L. (2008). A fuzzy expert system for soil characterization.Environment International, 34(7), 950–958. Follow Reference Luangkesorn K. L. Klein G. Bidanda B. (2016). Analysis of production systems with potential for severe disruptions.International Journal of Production Economics, 171, 478–486. https://doi.org/10.1016/J.IJPE.2015.09.014 Follow Reference Ma J. Du K. Zheng F. Zhang L. Gong Z. Sun Z. (2018). A recognition method for cucumber diseases using leaf symptom images based on deep convolutional neural network.Computers and Electronics in Agriculture, 154, 18–24. https://doi.org/10.1016/J.COMPAG.2018.08.048 Follow Reference Mananze, S., Pôças, I., & Cunha, M. (2018). Retrieval of Maize Leaf Area Index Using Hyperspectral and Multispectral Data. Remote Sensing, 10(12), 1942. 10.3390/RS10121942 Follow Reference Mazoyer M. Roudart L. (2006). A history of world agriculture: from the neolithic age to the current crisis. NYU Press. McCalla, A. F. J. U. A., & Economics, R. (2001). Challenges to world agriculture in the 21st century. Agricultural and Resource Economics, 4(3), 1-2. Follow Reference Mehra M. Saxena S. Sankaranarayanan S. Tom R. J. Veeramanikandan M. (2018). IoT based hydroponics system using Deep Neural Networks.Computers and Electronics in Agriculture, 155, 473–486. Mishra, M., & Srivastava, M. (2014). A view of artificial neural network. Paper presented at the International Conference on Advances in Engineering & Technology Research (ICAETR). Follow Reference Misra N. N. Dixit Y. Al-Mallahi A. Bhullar M. S. Upadhyay R. Martynenko A. (2020). IoT, big data and artificial intelligence in agriculture and food industry. IEEE Internet of Things Journal. Follow Reference Mohanty S. P. Hughes D. P. Salathé M. (2016). Using deep learning for image-based plant disease detection.Frontiers in Plant Science, 7(September), 1419. https://doi.org/10.3389/FPLS.2016.01419/BIBTEX Moisture, S. (2017). Importance of Soil Water. Agriinfo.https://agriinfo.in/soil-moisture-importance-of-soil-water-263/ Follow Reference Mojjada, R. K., Kiran Kumar, K., Yadav, A., & Satya Vara Prasad, B. V. V. (2020). Detection of plant leaf disease using digital image processing. Materials Today: Proceedings.10.1016/J.MATPR.2020.11.115 Follow Reference Monga, T. (2018). Estimating Vineyard Grape Yield from Images. Lecture Notes in Computer Science (Including Subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics). LNAI, 339–343. 10.1007/978-3-319-89656-4_37 Follow Reference Montas H. Madramootoo C. A. (1992). A decision support system for soil conservation planning.Computers and Electronics in Agriculture, 7(3), 187–202. Follow Reference Monteiro A. L. Freitas Souza M. d. Lins H. A. Teófilo T. M. S. Barros Júnior A. P. Silva D. V. Mendonça V. (2021). A new alternative to determine weed control in agricultural systems based on artificial neural networks (ANNs).[doi:https://doi.org/10.1016/j.fcr.2021.108075]. Field Crops Research, 263, 108075. Follow Reference Mucherino, A., & Papajorgji, P. Research, P. P.-O., & 2009, undefined. (2009). A survey of data mining techniques applied to agriculture. Springer, 9(2), 121–140. 10.1007/s12351-009-0054-6 Follow Reference Munz J. M. Gindele N. Doluschitz R. (2020). Exploring the characteristics and utilisation of Farm Management Information Systems (FMIS) in Germany.Computers and Electronics in Agriculture, 170, 105246. Follow Reference Nair K. P. (2019). Soil Fertility and Nutrient Management. In K. P. Nair (Ed.), Intelligent Soil Management for Sustainable Agriculture: The Nutrient Buffer Power Concept (pp. 165–189). Springer International Publishing. Follow Reference Nakai S. Yamada Y. (2014). Development of a weed suppression robot for rice cultivation: Weed suppression and posture control.Int J Electr Comput Electron Commun Eng, 8, 1736–1740. Follow Reference Nasiakou A. Vavalis M. Zimeris D. (2016). Smart energy for smart irrigation.Computers and Electronics in Agriculture, 129, 74–83. https://doi.org/10.1016/J.COMPAG.2016.09.008 Follow Reference Navarro-Hellín H. Martínez-del-Rincon J. Domingo-Miguel R. Soto-Valles F. Torres-Sánchez R. (2016). A decision support system for managing irrigation in agriculture.Computers and Electronics in Agriculture, 124, 121–131. https://doi.org/10.1016/J.COMPAG.2016.04.003 Follow Reference Nawandar N. K. Satpute V. R. (2019). IoT based low cost and intelligent module for smart irrigation system.Computers and Electronics in Agriculture, 162, 979–990. https://doi.org/10.1016/J.COMPAG.2019.05.027 Follow Reference Nevavuori P. Narra N. Lipping T. (2019). Crop yield prediction with deep convolutional neural networks.Computers and Electronics in Agriculture, 163, 104859. https://doi.org/10.1016/J.COMPAG.2019.104859 Follow Reference Ngo H. C. Hashim U. R. Sek Y. W. Kumar Y. J. Ke W. S. (2019). Weeds detection in agricultural fields using convolutional neural network.International Journal of Innovative Technology and Exploring Engineering, 8(11), 292–296. https://doi.org/10.35940/IJITEE.K1327.0981119 Nikolenko, S., Kadurin, A., & Arkhangelskaya, E. J. S. P. (2018). Deep learning. Journal of the American Heart Association. Follow Reference Noon S. K. Amjad M. Qureshi M. A. Mannan A. (2020). Use of deep learning techniques for identification of plant leaf stresses: A review.Sustain. Comput. Informatics Syst., 28, 100443. Nørremark, M., & Griepentrog, H. (2004). Analysis and definition of the close-to-crop area in relation to robotic weeding. Orgprints.https://orgprints.org/4834/ Follow Reference O’Sullivan C. A. Bonnett G. D. McIntyre C. L. Hochman Z. Wasson A. P. (2019). Strategies to improve the productivity, product diversity and profitability of urban agriculture.[doi:https://doi.org/10.1016/j.agsy.2019.05.007]. Agricultural Systems, 174, 133–144. Onishchuk, M. O. (2020). Opto-mechanical sorting of municipal solid waste [Doctoral dissertation, BHTY, USA]. Follow Reference Osman, T., Psyche, S. S., Kamal, M. R., Tamanna, F., Haque, F., & Rahman, R. M. (2017). Predicting Early Crop Production by Analysing Prior Environment Factors. Advances in Intelligent Systems and Computing, 470–479. 10.1007/978-3-319-49073-1_51 Follow Reference Pallathadka, H., Mustafa, M., Sanchez, D. T., Sekhar Sajja, G., Gour, S., & Naved, M. (2021). IMPACT OF MACHINE learning ON Management, healthcare AND AGRICULTURE. Materials Today: Proceedings. doi:10.1016/j.matpr.2021.07.042 Follow Reference Palm C. Blanco-Canqui H. DeClerck F. Gatere L. Grace P. (2014). Conservation agriculture and ecosystem services: An overview.[doi:https://doi.org/10.1016/j.agee.2013.10.010]. Agriculture, Ecosystems & Environment, 187, 87–105. Follow Reference Pant, J., Pant, R. P., Kumar Singh, M., Pratap Singh, D., & Pant, H. (2021). Analysis of agricultural crop yield prediction using statistical techniques of machine learning. Materials Today: Proceedings, 46, 10922-10926. doi:10.1016/j.matpr.2021.01.948 Follow Reference Pantazi X. E. Moshou D. Alexandridis T. Whetton R. L. Mouazen A. M. (2016). Wheat yield prediction using machine learning and advanced sensing techniques.Computers and Electronics in Agriculture, 121, 57–65. https://doi.org/10.1016/J.COMPAG.2015.11.018 Follow Reference Partel V. Kakarla S. C. Ampatzidis Y. (2019). Development and evaluation of a low-cost and smart technology for precision weed management utilizing artificial intelligence.Computers and Electronics in Agriculture, 157, 339–350. Follow Reference Qiang L. Jiuping X. (2008). A Study on Vehicle Routing Problem in the Delivery of Fresh Agricultural Products under Random Fuzzy Environment.International Journal of Information and Management Sciences, 19(4), 673–690. Follow Reference Ramcharan A. Baranowski K. McCloskey P. Ahmed B. Legg J. Hughes D. P. (2017). Deep learning for image-based cassava disease detection.Frontiers in Plant Science, 8, 1852. https://doi.org/10.3389/FPLS.2017.01852/BIBTEX Follow Reference Ramos P. J. Prieto F. A. Montoya E. C. Oliveros C. E. (2017). Automatic fruit count on coffee branches using computer vision.Computers and Electronics in Agriculture, 137, 9–22. https://doi.org/10.1016/J.COMPAG.2017.03.010 Follow Reference Research, R. Z.-P. J. of W. S., & 2010, undefined. (2014). Ethics for weed science. Researchgate.Net. 10.1017/S0043174500089633 Follow Reference Rico-Fernández M. P. Rios-Cabrera R. Castelán M. Guerrero-Reyes H. I. Juarez-Maldonado A. (2019). A contextualized approach for segmentation of foliage in different crop species.Computers and Electronics in Agriculture, 156, 378–386. Follow Reference Roshanianfard A. Noguchi N. Okamoto H. Ishii K. (2020). A review of autonomous agricultural vehicles (The experience of Hokkaido University).Journal of Terramechanics, 91, 155–183. Follow Reference Rumpf T. Mahlein A. K. Steiner U. Oerke E. C. Dehne H. W. Plümer L. (2010). Early detection and classification of plant diseases with Support Vector Machines based on hyperspectral reflectance.Computers and Electronics in Agriculture, 74(1), 91–99. https://doi.org/10.1016/J.COMPAG.2010.06.009 Follow Reference Sadgrove E. J. Falzon G. Miron D. Lamb D. W. (2018). Real-time object detection in agricultural/remote environments using the multiple-expert colour feature extreme learning machine (MEC-ELM).Computers in Industry, 98, 183–191. Follow Reference Saldaña-Robles A. L. Bustos-Gaytán A. Diosdado-De la Peña J. A. Saldaña-Robles A. Alcántar-Camarena V. Balvantín-García A. Saldaña-Robles N. (2020). Structural design of an agricultural backhoe using TA, FEA, RSM and ANN.Computers and Electronics in Agriculture, 172, 105278. Follow Reference Sawant S. S. Prabukumar M. (2020). A review on graph-based semi-supervised learning methods for hyperspectral image classification.[doi:https://doi.org/10.1016/j.ejrs.2018.11.001]. The Egyptian Journal of Remote Sensing and Space Sciences, 23(2), 243–248. Follow Reference Schwenker F. Trentin E. (2014). Pattern classification and clustering: A review of partially supervised learning approaches.[doi:https://doi.org/10.1016/j.patrec.2013.10.017]. Pattern Recognition Letters, 37, 4–14. Follow Reference Sengupta S. Lee W. S. (2014). Identification and determination of the number of immature green citrus fruit in a canopy under different ambient light conditions.Biosystems Engineering, 117(C), 51–61. https://doi.org/10.1016/J.BIOSYSTEMSENG.2013.07.007 Shinde, P. P., & Shah, S. (2018, 16-18 Aug. 2018). A Review of Machine Learning and Deep Learning Applications. Paper presented at the Fourth International Conference on Computing Communication Control and Automation (ICCUBEA). Follow Reference Shukla M. Jharkharia S. (2014). An inventory model for continuously deteriorating agri-fresh produce: An artificial immune system-based solution approach.International Journal of Integrated Supply Management, 9(1–2), 110–135. https://doi.org/10.1504/IJISM.2014.064362 Follow Reference Sicat R. S. Carranza E. J. Nidumolu U. B. (2005). Fuzzy modeling of farmers’ knowledge for land suitability classification.Agricultural Systems, 83, 49–75. Follow Reference Sinwar, D., Dhaka, V. S., Sharma, M. K., & Rani, G. (2020). AI-Based Yield Prediction and Smart Irrigation, 155–180. 10.1007/978-981-15-0663-5_8 Follow Reference Srivastava, A. R., & Venkatesan, M. (2020). Tea leaf disease prediction using texture-based image processing. Advances in Intelligent Systems and Computing, 1054, 17–25. 10.1007/978-981-15-0135-7_3 Follow Reference Syers J. K. (1997). Managing soils for long-term productivity.Philosophical Transactions of the Royal Society of London. Series B, Biological Sciences, 352(1356), 1011–1021. https://doi.org/10.1098/RSTB.1997.0079 Follow Reference Tajik S. Ayoubi S. Nourbakhsh F. (2012). Prediction of soil enzymes activity by digital terrain analysis: Comparing artificial neural network and multiple linear regression models.Environmental Engineering Science, 29(8), 798–806. https://doi.org/10.1089/EES.2011.0313 Follow Reference Tanha Talaviya, Dhara Shah, D. Shah, Nivedita Patel, N. Patel, Hiteshri Yagnik, H. Yagnik, & Manan Shah, M. Shah. (2020). Implementation of artificial intelligence in agriculture for optimisation of irrigation and application of pesticides and herbicides. Artificial intelligence in agriculture, 4, 58-73. doi: 10.1016/j.aiia.2020.04.002 Tang, L., & Tian, L. ASAE, B. S.-T. of the, & 2000, undefined. (2000). Color image segmentation with genetic algorithm for in-field weed sensing. Elibrary.Asabe.Org.https://elibrary.asabe.org/abstract.asp?aid=2970 Follow Reference Tian Y. Yang G. Wang Z. Wang H. Li E. Liang Z. (2019). Apple detection during different growth stages in orchards using the improved YOLO-V3 model.Computers and Electronics in Agriculture, 157, 417–426. https://doi.org/10.1016/J.COMPAG.2019.01.012 Follow Reference Too E. C. Yujian L. Njuki S. Yingchun L. (2019). A comparative study of fine-tuning deep learning models for plant disease identification.Computers and Electronics in Agriculture, 161, 272–279. https://doi.org/10.1016/J.COMPAG.2018.03.032 Follow Reference Tripathi, S., Shukla, S., Attrey, S., Agrawal, A., & Bhadoria, V. S. (2020). Smart Industrial Packaging and Sorting System. 245–254. 10.1007/978-981-15-3647-2_18 Follow Reference Tudi M. Daniel Ruan H. Wang L. Lyu J. Sadler R. Connell D. Phung D. T. (2021). Agriculture Development, Pesticide Application and Its Impact on the Environment.International Journal of Environmental Research and Public Health, 18(3). doi:10.3390/ijerph18031112 Follow Reference Valdés-Vela M. Abrisqueta I. Conejero W. Vera J. Ruiz-Sánchez M. C. (2015). Soft computing applied to stem water potential estimation: A fuzzy rule based approach.Computers and Electronics in Agriculture, 115, 150–160. https://doi.org/10.1016/J.COMPAG.2015.05.019 Follow Reference van Engelen J. E. Hoos H. H. (2020). A survey on semi-supervised learning.Machine Learning, 109(2), 373–440. doi:10.1007/s10994-019-05855-6 Follow Reference van Klompenburg T. Kassahun A. Catal C. (2020). Crop yield prediction using machine learning: A systematic literature review.Computers and Electronics in Agriculture, 177, 105709. https://doi.org/10.1016/J.COMPAG.2020.105709 Follow Reference Vellidis G. Tucker M. Perry C. Kvien C. Bednarz C. (2008). A real-time wireless smart sensor array for scheduling irrigation.Computers and Electronics in Agriculture, 61(1), 44–50. https://doi.org/10.1016/J.COMPAG.2007.05.009 Follow Reference Waheed R. Chang D. Sarwar S. Chen W. (2018). Forest, agriculture, renewable energy, and CO2 emission.[doi:https://doi.org/10.1016/j.jclepro.2017.10.287]. Journal of Cleaner Production, 172, 4231–4238. Follow Reference Wang, A. X., Tran, C., Desai, N., Lobell, D., & Ermon, S. (2018). Deep transfer learning for crop yield prediction with remote sensing data. Proceedings of the 1st ACM SIGCAS Conference on Computing and Sustainable Societies, COMPASS. 10.1145/3209811.3212707 Follow Reference Wang, Q., Nuske, S., Bergerman, M., & Singh, S. (2013). Automated Crop Yield Estimation for Apple Orchards. 745–758. 10.1007/978-3-319-00065-7_50 Follow Reference Wang X. P. Wang M. Ruan J. H. Li Y. (2018). Multi-objective optimization for delivering perishable products with mixed time windows.Advances in Production Engineering & Management, 13(3), 321–332. https://doi.org/10.14743/APEM2018.3.293 Follow Reference Whitmire, C. D., Vance, J. M., Rasheed, H. K., Missaoui, A., Rasheed, K. M., & Maier, F. W. (2021). Using Machine Learning and Feature Selection for Alfalfa Yield Prediction. AI, 2(1), 71–88. 10.3390/AI2010006 Follow Reference Yadav S. Sengar N. Singh A. Singh A. Dutta M. K. (2021). Identification of disease using deep learning and evaluation of bacteriosis in peach leaf.[doi:https://doi.org/10.1016/j.ecoinf.2021.101247]. Ecological Informatics, 61, 101247. Follow Reference Yeasin M. Dhandapani A. Ravichandran S. (2021). Artificial Intelligence in Agriculture. In SrinivasaraoCh. (Ed.), Agricultural Research, Technology and Policy: Innovations and Advances, ICAR-National Academy of Agricultural Research Management (NAARM), Hyderabad (pp. 291–306). Follow Reference Yost, M. A., Kitchen, N. R., Sudduth, K. A., Sadler, E. J., Drummond, S. T., Volkmann, M. R., & Yost MattYost, M. A. (2017). Long-term impact of a precision agriculture system on grain crop production. Springer, 18(5), 823–842. 10.1007/s11119-016-9490-5 Follow Reference You J. Li X. Low M. Lobell D. Ermon S. (2017). Deep Gaussian Process for Crop Yield Prediction Based on Remote Sensing Data.Proceedings of the AAAI Conference on Artificial Intelligence, 31(1). https://ojs.aaai.org/index.php/AAAI/article/view/11172 Follow Reference Zhang B. Xie Y. Zhou J. Wang K. Zhang Z. (2020). State-of-the-art robotic grippers, grasping and control strategies, as well as their applications in agricultural robots: A review.Computers and Electronics in Agriculture, 177, 105694. https://doi.org/10.1016/J.COMPAG.2020.105694 Follow Reference Zhao Z. Chow T. L. Rees H. W. Yang Q. Xing Z. Meng F. R. (2009). Predict soil texture distributions using an artificial neural network model.Computers and Electronics in Agriculture, 65(1), 36–48. Follow Reference Zhu, H., Chu, B., Zhang, C., Liu, F., Jiang, L., & He, Y. (2017). Hyperspectral Imaging for Presymptomatic Detection of Tobacco Disease with Successive Projections Algorithm and Machine-learning Classifiers. Scientific Reports, 7(1), 1–12. 10.1038/s41598-017-04501-2 Zou, J., Han, Y., & So, S. S. (2008). Overview of artificial neural networks. Artificial Neural Networks, 14-22. Request Access You do not own this content. Please login to recommend this title to your institution's librarian or purchase it from the IGI Global bookstore. Username or email:   Password:   Log In   Forgot individual login password? Create individual account Research Tools Database Search | Help | User Guide | Advisory Board User Resources Librarians | Researchers | Authors Librarian Tools COUNTER Reports | Persistent URLs | MARC Records | Institution Holdings | Institution Settings Librarian Resources Training | Title Lists | Licensing and Consortium Information | Promotions Policies Terms and Conditions     Copyright © 1988-2024, IGI Global - All Rights Reserved"

</subsection_point_Point 4>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.

3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
Real-time irrigation management systems heavily rely on the efficient and reliable transmission of data from sensors and weather stations to the cloud for processing and decision-making. However, agricultural environments present unique challenges to wireless communication, including adverse weather conditions, physical obstacles, and the limitations of wireless technologies. These challenges necessitate robust and adaptive solutions to ensure the consistent and timely flow of data, enabling truly autonomous irrigation scheduling.
Environmental factors, such as heavy rain, fog, and strong winds, can significantly disrupt wireless communication by attenuating or even blocking radio signals, leading to data loss and compromised system performance (Ed-daoudi et al., 2023; Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). Dense vegetation, buildings, and uneven terrain create further complications by causing multipath propagation and shadowing effects (Yim et al., 2018; Gautam and Pagay, 2020). The study by Yim et al. (2018) on LoRa networks in a tree farm environment exemplifies these challenges, revealing reduced communication range and data reliability compared to theoretical expectations. This underscores the need for carefully selecting and optimizing communication protocols and network parameters to ensure reliable data transmission in such environments.
The study by Guzinski et al. (2014a) using a modified TSEB model further highlights the importance of high-resolution data in accurately capturing the spatial and temporal dynamics of energy fluxes influenced by environmental factors. This emphasizes the need for advanced data acquisition and processing techniques that can effectively represent the complexities of agricultural settings.
The limitations of traditional wireless communication technologies, such as limited range and network congestion, pose additional challenges for large-scale agricultural operations. Long-distance data transmission can be hindered by range limitations, while network congestion arising from numerous sensors transmitting concurrently can lead to delays and data loss, hindering real-time decision-making (Hameed et al., 2020). Addressing these challenges requires the exploration of advanced networking technologies that can optimize spectrum utilization, mitigate interference, and improve reliability and efficiency.
Cognitive Radio Networks (CRNs) and Dynamic Spectrum Access (DSA) offer promising solutions for optimizing wireless communication in agricultural settings. CRNs empower devices with the ability to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). Research has explored the potential of CRNs in predicting Radio Frequency (RF) power to avoid noisy channels and optimize spectrum utilization (Iliya et al., 2014; Iliya et al., 2014). These studies demonstrate the effectiveness of combining optimization algorithms with artificial neural networks (ANNs) to enhance the accuracy and generalization of RF power prediction, enabling CRNs to make informed decisions about channel selection and avoid interference.
DSA complements CRN technology by dynamically allocating unused spectrum, further enhancing spectrum utilization and reducing congestion (Shi et al., 2023). The numerical model developed by Shi et al. (2023) showcases the potential of CRNs and DSA for optimizing wireless communication in challenging environments.
The integration of CRNs and DSA into the IoT network architecture requires careful consideration of spectrum sensing techniques, network topology, and data security. Research on cooperative spectrum sensing suggests that distributed approaches, where sensor nodes collaborate and share information, can significantly improve the accuracy and efficiency of spectrum sensing, particularly in dynamic environments (Trigka and Dritsas, 2022; Khalid & Yu, 2019). This collaborative approach enables a more comprehensive understanding of the radio environment and facilitates the identification of available frequency bands for data transmission.
The choice of network topology also impacts the performance and scalability of CRN-based irrigation systems. Mesh networks, where sensor nodes are interconnected and relay data for each other, offer enhanced resilience and coverage compared to star topologies where nodes communicate directly with a central gateway (Akyildiz & Vuran, 2010). However, mesh networks can be more complex to manage and may introduce additional routing overhead. The trade-off between network resilience and complexity needs to be carefully evaluated to select the most appropriate topology for a specific agricultural setting.
Data security and privacy are paramount concerns in IoT-based irrigation systems due to the sensitive nature of agricultural data (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential for protecting data integrity and ensuring system trustworthiness. Research on secure spectrum leasing and resource allocation algorithms for CR-WSN-based irrigation systems has demonstrated the potential of these technologies for enhancing security and efficiency (Hassan, 2023; Afghah et al., 2018).
In conclusion, the development of effective and reliable real-time irrigation management systems requires a comprehensive approach that addresses the challenges of data transmission in agricultural environments. The integration of robust and adaptive communication protocols, optimized network architectures, and advanced networking technologies like CRNs and DSA, along with a focus on data security and privacy, can contribute significantly to achieving the goal of autonomous and efficient irrigation scheduling.
4. AUTOMATED DATA PROCESSING IN THE CLOUD
4.1. Data Quality and Preprocessing
Data quality is paramount in automated irrigation systems as it directly influences the effectiveness of decision-making and water use efficiency. Issues like missing values, inconsistencies, and outliers arising from sensor malfunctions, environmental interference, or network problems (Lv et al., 2023) can significantly impact the performance of machine learning models used for irrigation scheduling and management.
Real-time data cleaning techniques are essential for addressing these challenges. Kalman filtering proves particularly effective in handling missing values and correcting erroneous readings by recursively estimating the system's state based on previous measurements and current sensor data, taking into account noise and uncertainty (Kim et al., 2020). Moving average techniques, by averaging consecutive data points, provide a more stable representation of the underlying trend, filtering out short-term fluctuations (Chhetri, 2023). For outlier detection, adaptive thresholding methods offer a dynamic approach, adjusting thresholds based on the statistical properties of the data to effectively identify anomalies and minimize false positives (Bah et al., 2021). These techniques are crucial in maintaining the integrity of real-time data streams and ensuring the accuracy of subsequent analyses.
Adaptive data preprocessing is essential for managing the diversity of data sources and formats commonly found in irrigation systems. Data normalization techniques, such as min-max scaling or z-score normalization, ensure that all features contribute equally to the analysis by transforming data values to a common scale (Pradal et al., 2016). This is crucial for preventing features with larger values from dominating the analysis and ensuring that all features are given equal consideration. Similarly, feature scaling methods, like standardization or normalization, optimize the range of feature values to improve the performance and convergence of machine learning models (Tortorici et al., 2024). By scaling features to a similar range, the influence of outliers is reduced, and the model's ability to learn from the data is enhanced.
Data fusion techniques play a critical role in integrating information from diverse sources, creating a more comprehensive and reliable dataset for irrigation management. Dempster-Shafer theory, a generalization of probability theory, allows for the expression of both uncertainty and the degree of conflict in evidence, making it suitable for fusing uncertain and conflicting data from heterogeneous sources (Sadiq and Rodriguez, 2004). This is particularly relevant in irrigation systems where data from different sensors may provide slightly different or even contradictory information due to sensor variations or environmental factors. Bayesian inference offers another powerful framework for combining information from multiple sources, updating the probability of a hypothesis as new evidence becomes available. By applying these techniques, data from soil moisture sensors, canopy temperature sensors, weather stations, and other sources can be integrated to provide a holistic understanding of crop water requirements and environmental conditions, leading to more informed and accurate irrigation decisions.
The impact of data quality extends beyond model accuracy to the robustness of machine learning models under varying conditions. Robust models should maintain consistent performance even when faced with data inconsistencies or unexpected situations. Techniques like data augmentation and domain adaptation can enhance model robustness by exposing the model to a wider range of data variations during training. Data augmentation involves generating additional training data by applying transformations or introducing noise to existing data, making the model more resilient to noise and variations in the real-world data. Domain adaptation techniques aim to adapt a model trained on one domain (e.g., a specific crop or geographic location) to perform well on another domain with different data characteristics. This is particularly relevant in irrigation management, where models may need to be applied to different crops, soil types, or climatic conditions.
The choice of data cleaning, preprocessing, and fusion techniques should be carefully considered based on the specific characteristics of the irrigation system and the available data. By selecting and implementing appropriate techniques, the accuracy, reliability, and robustness of machine learning models can be significantly improved, leading to more efficient and sustainable irrigation management practices.
4.2. Scalable and Autonomous Deployment using Containerization Strategies
The transition from data collection and transmission to efficient data processing requires a robust infrastructure capable of handling diverse workloads and data volumes. Containerization technologies, specifically Docker and Kubernetes, offer a promising solution for deploying and scaling data processing and machine learning modules within cloud environments like AWS, Azure, and GCP (Vargas-Rojas et al., 2024; Rosendo et al., 2022; Solayman & Qasha, 2023). Docker provides a standardized way to package applications and their dependencies into self-contained units known as containers, ensuring consistent and reproducible execution across different platforms (Rosendo et al., 2022). Kubernetes, acting as a container orchestrator, manages their deployment, scaling, and networking across a cluster of machines (Rosendo et al., 2022). This combination presents several advantages for automated irrigation management systems.
Firstly, containerization facilitates efficient resource utilization and scalability. By encapsulating applications and their dependencies, containers enable the isolation of resources and prevent conflicts between different modules (Vargas-Rojas et al., 2024; Solayman & Qasha, 2023). This isolation allows for the efficient allocation of resources, such as CPU, memory, and storage, to each container based on its specific needs. Kubernetes further enhances scalability by allowing for the automatic scaling of containers based on real-time demand, ensuring the system can adapt to varying workloads and data volumes, preventing bottlenecks, and ensuring responsiveness to changing conditions (Karamolegkos et al., 2023).
Secondly, containerization promotes portability and reproducibility. By packaging applications and their dependencies into a single unit, containers make it easy to move and deploy them across different cloud environments without the need for environment-specific configurations (Rosendo et al., 2022; Solayman & Qasha, 2023). This portability simplifies the development and deployment process, reducing the time and effort required to set up and manage the system. Additionally, containers ensure reproducibility by providing a consistent execution environment, regardless of the underlying infrastructure. This eliminates variability and ensures that the system will behave consistently across different deployments (Zhou et al., 2023).
Optimizing container orchestration and resource allocation is crucial to minimizing latency and maximizing throughput in real-time data processing pipelines. Techniques like auto-scaling and dynamic resource allocation play a critical role in this context (Hethcoat et al., 2024; Werner and Tai, 2023; Kumar et al., 2024). Auto-scaling automatically adjusts the number of container instances based on real-time demand, ensuring that sufficient resources are available to handle peak workloads while avoiding over-provisioning during periods of low demand (Hethcoat et al., 2024; Kumar et al., 2024). Dynamic resource allocation enables the fine-grained adjustment of resources allocated to each container based on its specific needs and the current workload (Werner and Tai, 2023). This ensures efficient resource allocation and provides each container with the necessary resources to perform its tasks effectively.
Performance monitoring tools, such as Kubernetes Metrics Server and Prometheus, are essential for gaining insights into the performance of containers and the overall system (Hethcoat et al., 2024; Kuity & Peddoju, 2023). These tools provide valuable data on key performance indicators, such as CPU and memory usage, network traffic, and application-specific metrics. By monitoring this data, administrators can identify bottlenecks, optimize resource allocation strategies, and continuously improve system performance (Hethcoat et al., 2024). This data-driven approach ensures that automated irrigation management systems can operate efficiently and reliably.
By integrating containerization technologies with optimization techniques and performance monitoring, automated irrigation management systems achieve the scalability, autonomy, and efficiency required for effective real-time data processing and decision-making. This approach facilitates a seamless and responsive system that can adapt to changing conditions and contribute to the overall goal of optimizing water resource management and increasing agricultural productivity.

4.3. Deploying ML Models for Data Processing
Transitioning from data collection, preprocessing, and transmission, the deployment of machine learning (ML) models marks a pivotal stage in the automated irrigation management pipeline. This stage entails utilizing cloud platforms to facilitate real-time data processing and inference, enabling data-driven decision-making for optimal irrigation management and ultimately contributing to fully autonomous, scalable irrigation management.
Several architectures and frameworks exist for deploying ML models on cloud platforms, each offering unique advantages and catering to different requirements. TensorFlow Serving, for instance, provides a high-performance system specifically designed for serving TensorFlow models (Abadi et al., 2016). This framework enables efficient and scalable inference, making it suitable for real-time applications where low latency and high throughput are crucial. For instance, in a large-scale irrigation system with numerous sensors generating data continuously, TensorFlow Serving can efficiently handle the high volume of inference requests and provide timely predictions for irrigation scheduling. Similarly, Apache MXNet Model Server offers a flexible and efficient solution for deploying models trained with MXNet, supporting a wide range of deep learning models and inference backends (MXNet Developers, 2015). This versatility makes it suitable for complex irrigation systems that may utilize different types of ML models for various tasks, such as predicting crop water requirements, detecting plant stress, or forecasting weather conditions. ONNX Runtime, on the other hand, provides a cross-platform inference engine compatible with various ML frameworks, including PyTorch, TensorFlow, and MXNet (Microsoft, 2017). This versatility enables the deployment of models in diverse environments, facilitating interoperability and reducing the need for model conversion. For example, an irrigation system that uses models trained in different frameworks can utilize ONNX Runtime to deploy them on a single platform without the need for time-consuming and error-prone model conversion processes.
Choosing the appropriate architecture or framework depends on several factors, including the specific ML framework used for model training, the desired level of performance and scalability, and the need for cross-platform compatibility. For instance, if the primary concern is low latency and high throughput for real-time inference, TensorFlow Serving might be the optimal choice for TensorFlow models. However, if flexibility and support for various deep learning models are required, Apache MXNet Model Server could be more suitable. In cases where cross-platform compatibility is essential, ONNX Runtime offers a versatile solution.
Once the ML model is deployed, optimizing its performance and resource utilization becomes crucial for ensuring the efficiency of integrated end-to-end automated irrigation systems. Model compression techniques, such as pruning and quantization, offer effective methods for reducing the size and computational requirements of ML models without compromising accuracy (Premkumar & Sigappi, 2022). Pruning involves eliminating unnecessary connections or neurons from the model, effectively streamlining its structure and reducing computational complexity. This can be particularly beneficial for deep learning models, which often have a large number of parameters and can be prone to overfitting. By removing redundant or less important connections, pruning can improve modelgeneralizability and reduce inference time. Quantization, on the other hand, involves reducing the precision of model parameters, typically from 32-bit floating-point numbers to lower-precision formats such as 8-bit integers. This reduction in precision leads to smaller model sizes and faster inference speeds, making it particularly beneficial for resource-constrained environments or real-time applications. For instance, in edge computing scenarios where ML models are deployed on devices with limited computational resources, quantization can enable efficient inference without sacrificing accuracy.
Furthermore, hardware acceleration through the utilization of GPUs or TPUs can significantly enhance model performance by leveraging specialized hardware designed for parallel processing (Premkumar & Sigappi, 2022). GPUs, with their massive parallelism and high memory bandwidth, excel at accelerating matrix operations and convolutions, which are fundamental computations in many deep learning models. This acceleration can significantly reduce inference time and enable real-time processing of sensor data for timely irrigation decisions. TPUs, specifically designed for deep learning workloads, offer even greater performance and energy efficiency for specific model architectures. These hardware accelerators can drastically reduce inference time, enabling near real-time decision-making and enhancing the responsiveness of automated irrigation systems. For example, in a scenario where immediate response to changing weather conditions or soil moisture levels is critical, hardware acceleration can ensure that irrigation decisions are made and executed promptly.
In addition to model compression and hardware acceleration, distributed training techniques play a crucial role in optimizing the training process for large-scale ML models. Techniques such as Horovod and BytePS enable the distribution of training across multiple machines, effectively parallelizing the process and reducing training time (Premkumar & Sigappi, 2022). This is particularly beneficial for complex models with a large number of parameters or when dealing with large datasets. By leveraging distributed training, irrigation management systems can train more sophisticated models and improve their predictive capabilities, leading to more accurate and efficient irrigation decisions. For instance, a system that utilizes a deep learning model with millions of parameters can benefit from distributed training to reduce training time from days to hours, enabling faster model iteration and improvement.
Integrating the deployed ML models with other components of the automated irrigation management pipeline is essential for achieving a fully autonomous and cohesive system and addressing the need for seamless integration across the automated irrigation management system. Standardized protocols, such as MQTT and CoAP, provide lightweight and efficient communication channels for exchanging data between these components (Poojara et al., 2023; Jimenez et al., 2020a; Gour et al., 2023). MQTT, with its publish-subscribe architecture, enables real-time data streaming and event-driven communication, making it suitable for transmitting sensor data, control signals, and inference results (Raikar & M, 2023). This enables the ML model to receive real-time updates on soil moisture, weather conditions, and plant health, allowing for dynamic adjustments to irrigation schedules based on the latest data. CoAP, designed for constrained devices and low-power networks, offers a web-transfer protocol for resource-constrained environments, enabling efficient communication between sensors, actuators, and the ML models (Raikar & M, 2023). This is particularly relevant in situations where sensors or actuators have limited processing power or battery life, as CoAP minimizes communication overhead and energy consumption. Additionally, RESTful APIs provide a standardized interface for accessing and controlling the ML models, enabling seamless integration with other software components and facilitating system management and monitoring (Wang et al., 2022). This allows for easy integration with existing farm management systems or third-party applications, creating a unified platform for comprehensive irrigation management.4.4. Online Learning in the Cloud
The complexities of real-time data processing in irrigation management necessitate the exploration of advanced techniques to continuously learn and adapt to the dynamic nature of agricultural environments. Online learning algorithms offer a promising solution, enabling the continuous update and improvement of machine learning models based on incoming real-time data. This adaptability is crucial for addressing the challenges of changing environmental conditions, such as weather patterns and crop growth stages, and optimizing irrigation decision-making to enhance water usage efficiency and crop productivity.
Several online learning algorithms have demonstrated potential for real-time data processing and model adaptation in the context of irrigation management. Stochastic Gradient Descent (SGD) facilitates the incremental update of model parameters with each new data point, allowing for efficient adaptation to changing data distributions (Bottou, 2010). This incremental learning process ensures that the model remains responsive to the latest conditions, minimizing the risk of outdated predictions and improving the accuracy of irrigation decisions. Passive-Aggressive algorithms, on the other hand, adjust model parameters only when a misclassification occurs, providing a computationally efficient approach for handling large data streams (Crammer et al., 2006). These algorithms offer a robust approach to handling noisy data, a common challenge in real-world sensor readings, by making small adjustments only when the model's prediction deviates significantly from the actual value (Fei et al., 2019). Online Random Forests extend the concept of random forests to the online setting, enabling the incremental construction and update of decision trees as new data arrives (Saffari et al., 2009). The continuous evolution of the ensemble ensures that the model remains relevant to the changing environment, capturing intricate relationships between variables and leading to more informed irrigation decisions.
Research in various domains highlights the importance of online learning for real-time data stream analytics. Snyder et al. (2020) explored the application of online learning techniques for identifying relevant tweets in real-time, improving situational awareness for first responders. The proposed interactive learning framework allows users to continuously label the relevance of incoming tweets, enabling the real-time refinement of the underlying machine learning model. This user-guided approach aligns well with the dynamic nature of irrigation management, where models need to continuously adjust to varying environmental conditions and crop water requirements. Similarly, research in the field of cyber-physical systems (CPS) underscores the need for online learning algorithms to effectively extract insights and knowledge from continuously generated data streams (Fei et al., 2019). These capabilities are crucial for enabling feedback loops between physical processes and cyber elements, facilitating the integration and optimization of CPS in irrigation management systems.
To implement online learning in cloud-based irrigation management systems, various architectures and frameworks can be considered. Apache Spark Streaming, Apache Flink, and AWS Kinesis provide scalable and fault-tolerant platforms for processing real-time data streams, allowing for the development of online learning pipelines that continuously ingest and analyze data to update machine learning models (Zaharia et al., 2012; Carbone et al., 2015; Amazon Web Services, 2023). These frameworks leverage serverless computing paradigms, automatically scaling resources based on the volume and velocity of incoming data, ensuring efficient resource utilization and responsiveness to fluctuations in demand (Fei et al., 2019).
Effectively managing the exploration-exploitation trade-off is crucial for optimizing online learning in irrigation management. Techniques such as Multi-armed bandits (Sutton & Barto, 2018), Bayesian optimization (Shahriari et al., 2016), and Reinforcement Learning (RL) (Sutton & Barto, 2018) can be employed to balance the allocation of resources between exploring new irrigation strategies and exploiting the current best-performing approaches. These techniques enable the identification of optimal irrigation policies, adapting to changing environmental conditions and maximizing long-term rewards.
In conclusion, online learning techniques, coupled with scalable cloud-based architectures, offer a powerful solution for real-time data processing and continuous adaptation in irrigation management systems. By leveraging algorithms like SGD, Passive-Aggressive, and Online Random Forests, along with stream processing frameworks like Apache Spark Streaming, Apache Flink, and AWS Kinesis, irrigation management systems can effectively handle the complexities of real-time data, optimize water usage, and enhance crop productivity in the face of dynamic environmental conditions.

5. GENERATING AND APPLYING IRRIGATION INSIGHTS 
5.1. Real-Time Generation of Actionable Irrigation Insights
•	Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations
•	Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution
•	Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
•	Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)
5.2. Automated Application of Irrigation Insights
•	Architectures and protocols for seamless integration of ML-generated insights with IoT-enabled irrigation control systems, such as MQTT and CoAP for lightweight, real-time communication
•	Analysis of industry-leading products and services, such as smart irrigation controllers (e.g., Rachio) and cloud-based irrigation management platforms (e.g., CropX)
•	Strategies for ensuring reliability, security, and scalability of automated insight application, such as redundant communication channels and secure edge-to-cloud architectures
•	Case studies of successful implementations of closed-loop, autonomous irrigation systems in research and commercial settings, highlighting technologies used and benefits achieved

6. INTEGRATION, INTEROPERABILITY, AND STANDARDIZATION 
6.1. Interoperability and Standardization
•	Importance of interoperability and standardization in enabling seamless integration of automated irrigation components
•	Overview of existing and emerging standards for IoT devices, communication protocols, and data formats in precision agriculture (e.g., ISOBUS, agroXML, SensorML)
•	Role of standardization bodies and industry consortia in promoting interoperability (e.g., AgGateway, Open Ag Data Alliance, Agricultural Industry Electronics Foundation)
•	Challenges in adopting and implementing standards across diverse hardware and software platforms
•	Strategies for encouraging widespread adoption of standards and best practices for interoperability in automated irrigation systems
6.2. Integration with Existing Irrigation Infrastructure
•	Challenges and strategies for retrofitting legacy irrigation systems with IoT sensors, actuators, and communication devices
•	Hardware compatibility issues and solutions (e.g., adapters, modular designs)
•	Software and firmware updates to enable integration with automated decision-making systems
•	Data integration and normalization techniques for merging legacy and new data sources
•	Economic and practical considerations for transitioning from manual to automated irrigation management
•	Cost-benefit analysis of upgrading existing infrastructure vs. implementing new systems
•	Phased implementation approaches to minimize disruption and optimize resource allocation
•	Training and support requirements for farmers and irrigation managers adopting automated systems
•	Case studies and real-world examples of successful integration of automated irrigation with existing infrastructure
6.3. Integration with Other Precision Agriculture Technologies
•	Synergies between automated irrigation and complementary technologies
•	Remote sensing (satellite, UAV, and ground-based) for crop monitoring and evapotranspiration estimation
•	Soil moisture sensors and weather stations for real-time, localized data collection
•	Variable rate application systems for precise irrigation delivery based on crop requirements
•	Yield mapping and analytics for assessing the impact of automated irrigation on crop productivity
•	Architectures and frameworks for integrating diverse data sources and technologies into a unified precision agriculture ecosystem
•	Edge computing and fog computing paradigms for real-time data processing and decision-making
•	Cloud-based platforms for data storage, analysis, and visualization
•	API-driven approaches for modular integration of third-party services and applications
•	Challenges and solutions for ensuring data quality, consistency, and security across integrated precision agriculture systems
•	Data cleaning, preprocessing, and harmonization techniques
•	Blockchain and distributed ledger technologies for secure, tamper-proof data sharing and traceability
•	Access control and authentication mechanisms for protecting sensitive data and resources
•	Future trends and research directions in the integration of automated irrigation with advanced precision agriculture technologies (e.g., AI-driven crop modeling, robotics, and autonomous vehicles)
6.4. Cybersecurity Considerations for Integrated Automated Irrigation Systems
•	Unique security risks and vulnerabilities associated with IoT-based automated irrigation systems
•	Potential for unauthorized access, data tampering, and system manipulation
•	Implications of security breaches for crop health, water resource management, and farm productivity
•	Best practices and strategies for securing automated irrigation systems
•	Secure device provisioning and authentication (e.g., hardware security modules, certificates)
•	Encryption and secure communication protocols (e.g., TLS, DTLS)
•	Firmware and software updates to address emerging security threats
•	Network segmentation and access control to limit the impact of breaches
•	Role of cybersecurity standards and frameworks in guiding the development and deployment of secure automated irrigation systems (e.g., NIST CSF, IEC 62443)
•	Importance of user awareness, training, and incident response planning in maintaining the security of integrated automated irrigation systems

7. MONITORING AND ENSURING SYSTEM RELIABILITY
7.1. Resilience and Fault Tolerance in Automated Irrigation Systems
•	Strategies for ensuring robustness and reliability in the face of failures, disruptions, or unexpected events
•	Redundancy: Implementing redundant components, such as duplicate sensors (e.g., soil moisture sensors, weather stations), controllers (e.g., PLCs, microcontrollers), and communication channels (e.g., cellular, satellite, LoRaWAN) to maintain system functionality during component failures
•	Failover mechanisms: Designing seamless failover mechanisms that automatically switch to backup components or systems in case of primary system failure, such as hot-standby controllers or multi-path communication protocols (e.g., mesh networks, software-defined networking)
•	Self-healing capabilities: Incorporating AI-driven self-healing mechanisms that can detect, diagnose, and recover from faults without human intervention, using techniques like reinforcement learning, Bayesian networks, or self-organizing maps
•	The role of distributed architectures and edge computing in enhancing system resilience
•	Decentralizing critical functions and data processing to minimize the impact of single points of failure, using fog computing or multi-agent systems
•	Leveraging edge computing to enable localized decision-making and control, reducing dependence on cloud connectivity and improving response times, using technologies like Raspberry Pi, NVIDIA Jetson, or Intel NUC
•	Anomaly detection and predictive maintenance using AI techniques
•	Employing unsupervised learning algorithms (e.g., autoencoders, clustering) to detect anomalies in sensor data, system performance, and water usage patterns
•	Developing predictive maintenance models using techniques like long short-term memory (LSTM) networks, convolutional neural networks (CNNs), or gradient boosting machines (GBMs) to anticipate and prevent potential system failures based on historical data and real-time monitoring
7.2. Advanced Monitoring Techniques for Automated Irrigation Systems
•	Remote monitoring using IoT-enabled sensors and computer vision
•	Deploying a heterogeneous network of IoT sensors to collect real-time data on soil moisture (e.g., capacitive, tensiometric), temperature (e.g., thermocouples, thermistors), humidity (e.g., capacitive, resistive), and plant health (e.g., sap flow, leaf wetness)
•	Integrating high-resolution cameras (e.g., multispectral, hyperspectral) and computer vision algorithms for visual monitoring of crop growth, disease detection (e.g., using deep learning-based object detection and segmentation), and irrigation system performance (e.g., leak detection, sprinkler uniformity)
•	Transmitting sensor and camera data to cloud-based platforms (e.g., AWS IoT, Google Cloud IoT, Microsoft Azure IoT) for remote access and analysis using protocols like MQTT, CoAP, or AMQP
•	Innovative approaches for real-time system health assessment
•	Developing novel algorithms and metrics for evaluating the health and performance of automated irrigation systems, such as entropy-based measures, network resilience indices, or multi-criteria decision analysis (MCDA) frameworks
•	Combining data from multiple sources (e.g., sensors, weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filters, Dempster-Shafer theory) to create a comprehensive view of system health
•	Employing advanced data visualization techniques (e.g., interactive dashboards, augmented reality) to present system health information in an intuitive and actionable format
7.3. Closed-Loop Control and Feedback Mechanisms
•	Exploring the concept of closed-loop control in autonomous irrigation systems
•	Implementing feedback loops that continuously monitor system performance and adjust irrigation schedules based on real-time data, using control techniques like proportional-integral-derivative (PID), model predictive control (MPC), or fuzzy logic control (FLC)
•	Integrating machine learning algorithms (e.g., reinforcement learning, genetic algorithms) to optimize closed-loop control strategies over time, adapting to changing environmental conditions and crop requirements
•	Designing effective feedback mechanisms for user interaction and system optimization
•	Providing user-friendly interfaces (e.g., mobile apps, web dashboards) for farmers to input preferences, constraints, and expert knowledge into the automated irrigation system, using techniques like participatory design or user-centered design
•	Incorporating user feedback and domain expertise to refine irrigation strategies and improve system performance
8. CASE STUDIES AND REAL-WORLD IMPLEMENTATIONS OF FULLY AUTONOMOUS IRRIGATION SYSTEMS
8.1. Fully Autonomous Irrigation Systems in Diverse Agricultural Settings
•	Row Crops: maize, wheat, soybean with real-time soil moisture monitoring and weather-based irrigation scheduling for fully automated precision irrigation
•	Orchards: citrus, apple, almond with plant health monitoring and precision water application for fully autonomous orchard management
•	Greenhouses: tomato, lettuce, herbs with automated drip irrigation and climate control integration for fully automated greenhouse operations
•	Urban Farming: rooftop gardens, vertical farms with IoT-enabled hydroponic systems and remote management for fully autonomous urban crop production
8.2. Integration of Advanced System Components for End-to-End Automation
•	Wireless sensor networks: soil moisture probes, weather stations, plant health monitoring cameras with low-power, long-range communication for fully automated data acquisition
•	Secure data transmission: LoRaWAN, NB-IoT, 5G, satellite communication for reliable, real-time data transfer from field to cloud in fully autonomous irrigation systems
•	Intelligent data processing: edge computing for local data filtering, cloud platforms for scalable storage and analysis, machine learning algorithms for predictive insights in fully automated irrigation management
•	Autonomous decision-making: advanced irrigation scheduling algorithms, precise valve control, closed-loop feedback systems for optimal water management in fully autonomous irrigation systems
8.3. Quantitative Performance Evaluation of Fully Automated Irrigation Systems
•	Water use efficiency: percent reduction in water consumption compared to conventional methods, improved water productivity (yield per unit of water) achieved through fully autonomous irrigation
•	Crop yield and quality improvements: percent increase in yield, enhanced crop uniformity, improved nutritional content attributed to fully automated precision irrigation
•	Labor and energy savings: quantified reduction in labor hours for irrigation management, decreased energy consumption for pumping due to optimized scheduling in fully autonomous systems
•	Economic viability: detailed return on investment analysis, payback period calculations, comprehensive cost-benefit analysis for fully autonomous irrigation management systems
8.4. Lessons Learned and Challenges Encountered in Deploying Autonomous Irrigation Systems
•	Technical challenges and solutions: ensuring reliable data transmission in remote locations, addressing interoperability issues between diverse system components, optimizing power consumption for extended battery life, adapting algorithms to local soil and weather conditions in fully autonomous irrigation systems
•	Operational and logistical hurdles: streamlining installation and maintenance procedures, providing effective user training, seamlessly integrating with existing farm management practices and legacy systems for fully automated irrigation management
•	Regulatory and socio-economic considerations: navigating complex water use regulations, addressing data privacy and security concerns, ensuring equitable access and affordability for smallholder farmers adopting fully autonomous irrigation technologies
8.5. Best Practices and Recommendations for Successful Implementation
•	Designing scalable, modular, and adaptable autonomous irrigation systems to accommodate future growth and changing requirements for fully automated water management
•	Prioritizing user-centered design principles and actively engaging stakeholders throughout the development and deployment process of fully autonomous irrigation solutions
•	Adopting open standards and communication protocols to enable seamless integration of system components and interoperability with third-party platforms in fully automated irrigation setups
•	Implementing robust data validation, filtering, and quality control mechanisms to ensure data integrity and reliability for decision-making in fully autonomous irrigation systems
•	Establishing clear data governance policies and security frameworks to protect sensitive information and maintain user trust in fully automated irrigation management
•	Developing intuitive user interfaces and decision support tools to facilitate easy adoption and effective use of fully autonomous irrigation systems
•	Collaborating with local extension services, agribusinesses, and technology providers for knowledge transfer, technical support, and continuous improvement of fully automated irrigation solutions
8.6. Synthesis of Case Studies and Implications for Autonomous Irrigation Adoption
•	Cross-case analysis of key performance indicators and critical success factors for fully autonomous irrigation scheduling systems in various contexts
•	Identification of common themes, challenges, and innovative solutions across diverse implementations of end-to-end fully automated irrigation management
•	Assessment of the potential for replicability and scaling of successful fully autonomous irrigation projects in different regions and farming systems
•	Implications for future research priorities, technology development roadmaps, and policy interventions to support widespread adoption of fully autonomous irrigation technologies

CONCLUSION/FUTURE DIRECTIONS AND UNANSWERED QUESTIONS
•	Summarize the key insights gained from the question-driven review, emphasizing how each section contributes to the overarching goal of achieving real-time, end-to-end automation in irrigation management
•	Based on the questions addressed, propose new research directions and unanswered questions
•	Identify key research gaps and propose concrete research questions and hypotheses for advancing the field of real-time, automated irrigation management
•	Highlight the need for collaborative research efforts across disciplines, such as computer science, agricultural engineering, and environmental science, to address the complex challenges of automated irrigation systems
•	Emphasize the need for further innovation and exploration in real-time, automated irrigation systems




</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper. 

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 5.2. Automated Application of Irrigation Insights
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 3>
Point: Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection

Papers to support point:

Paper 1:
- APA Citation: None
  Main Objective: Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
  Study Location: Unspecified
  Data Sources: []
  Technologies Used: []
  Key Findings: 
  Extract 1: The proposed system explores how utilizing digital footprints might help improve farming practices and increase output. The process of transforming information from an analog to a digital representation is referred to as digitalization. Then, utilizing electrical equipment and computer networks, this digital format may be stored, processed, and sent.
  Extract 2: Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
  Limitations: 1. Limited scope: The study focuses specifically on real-time generation of actionable irrigation insights, and does not explore other aspects of automated irrigation management systems.
2. Lack of empirical validation: The study does not provide empirical evidence or experimental results to support the effectiveness of the proposed approach.
3. Limited discussion of practical implementation: The study does not delve into the practical challenges and considerations involved in implementing real-time, automated irrigation systems in real-world agricultural settings.
  Relevance Evaluation: 1.0
  Relevance Score: 1.0
  Inline Citation: None
  Explanation: The study's aim is to explore ways machine learning can be leveraged to improve irrigated agricultural systems. The specific research question the authors are concerned with is how to handle heterogeneity, uncertainty, and quality issues with real-time insight generation and the application of actionable irrigation insights. The authors propose the use of random forest optimization and various technologies, methods, and approaches to address the issue.

 Full Text: >
Page 1/20
A digital footprint in enhancing agricultural practices with improved
production using machine learning
Pabitha C  (  pabithac.cse@srmvalliammai.ac.in )
SRM Valliammai Engineering College
Benila S 
SRM Valliammai Engineering College
Suresh A 
SRM Institute of Science and Technology: SRM Institute of Science and Technology (Deemed to be University)
Research Article
Keywords: agriculture, digital footprint, arti¦cial intelligence, machine learning, random forest algorithm
Posted Date: July 31st, 2023
DOI: https://doi.org/10.21203/rs.3.rs-3137542/v1
License:   This work is licensed under a Creative Commons Attribution 4.0 International License.   Read Full License
Page 2/20
Abstract
Agriculture shows an important role in the enlargement of an economy. The proposed system explores how utilizing digital footprints might help improve
agricultural practices and production. Agricultural data is increasingly available in digital form because of the development of modern technology and the
spread of connected devices. These data can be utilized to produce digital footprints that document the whole lifecycle of agricultural production, from
planting to harvesting. Farmers may then decide when to sow, water, fertilize, and harvest their crops by using machine learning algorithms trained on these
digital footprints to spot patterns and forecast results. The study examines various machine learning methods that can be used to examine digital footprints
and shows the advantages of doing so, including higher yields, better resource management, and lower costs. The timing of crop planting, fertilization, and
harvest has long been determined by the agriculture sector using conventional techniques and experience. However, with the expansion of agricultural data
available, there is now a chance to use machine learning algorithms to recognize trends and forecast outcomes based on this data. This study explores the
potential of machine learning methods, particularly Random Forest optimization, to improve agricultural practices and boost output. The study uses Random
Forest optimization, a potent machine learning method that can examine massive datasets, to forecast crop yield based on many variables like weather
patterns, soil quality, and fertilizer application. The study's ¦ndings show how well the Random Forest optimization technique predicts crop productivity with
an accuracy of 99.97%. By giving farmers useful information about forecasting crop yields, they may increase their overall productivity by using their
resources wisely. The report also emphasizes the necessity of additional study and funding for the creation of machine learning algorithms that are
speci¦cally customized to the peculiarities of the agricultural sector, as well as the signi¦cance of data quality and privacy in the collecting and analysis of
agricultural data. A combination of hardware and software tools, including data collection sensors, data processing equipment, graphics processing units
(GPUs), cloud computing services, and mobile applications, will be needed for the hardware implementation of increasing agricultural practices in production
using machine learning with Random Forest optimization techniques.
I. INTRODUCTION
The practice of farming involves cultivating land, keeping animals, and creating food, ¦ber, and other goods that support human life. As a source of food and
raw materials for businesses that produce goods and services, it is a crucial sector of the economy. In many developing nations, since it is frequently the sole
source of income for rural communities, agriculture plays a signi¦cant role in the economies of those nations. Agriculture has a signi¦cant role in the nation's
GDP and export revenues in addition to producing food and raw materials. It advances the construction of rural infrastructure, provides cash, and offers
employment opportunities. The sustainability of the environment and rural development are also intimately related to agriculture. To address more general
economic and social problems like food security, poverty alleviation, and environmental sustainability, the agricultural sector is also crucial. Furthermore,
because higher productivity and e¨ciency can result in higher earnings and investments in other industries, agriculture may be a signi¦cant contributor to
economic growth. In summary, agriculture is an important economic sector that has an impact on society and the environment in addition to its economic
contribution [1]. Agriculture has been practiced for thousands of years, and over that period, it has undergone many changes. Scienti¦c techniques and
cutting-edge technology are used in modern agriculture to boost output and e¨ciency while reducing its negative effects on the environment. Agroforestry,
crop cultivation, and animal husbandry are some of the main agricultural activities. Food security, economic growth, and environmental sustainability all
suffer from the effects of agriculture. Millions of people all around the world, particularly in poor nations, depend on it greatly for their daily survival.
Sustainable agricultural practices are being created to make sure that agricultural activities meet the demands of the present without compromising the
capacity of future generations to meet their own needs [2]. The use of synthetic inputs like fertilizers, insecticides, and herbicides to boost crop yields is
referred to as conventional agricultural practices. These methods are based on monoculture farming, which is the practice of growing the same crop over and
over in a single ¦eld. Large pieces of equipment, irrigation infrastructure, and high-input agricultural methods de¦ne conventional agriculture. Even though
crop yields and food production have increased signi¦cantly thanks to conventional agriculture, the environment is still negatively impacted. When synthetic
inputs are used excessively, they can cause soil erosion, water pollution, and biodiversity loss. In addition, monoculture farming's reliance on crops makes
them more susceptible to pests and disease, which can cost farmers a lot of money [3]. With the help of recent advancements in technology and scienti¦c
knowledge, modern agricultural practices have undergone tremendous change. Farmers can now produce more food with fewer resources and less negative
environmental impact thanks to these practices. However, the sector faces several challenges that can have signi¦cant impacts on its productivity and
sustainability. Some of the challenges in agriculture include:
Climate Change: Climate change is a signi¦cant challenge facing agriculture, as it can affect crop yields and increase the incidence of pests and
diseases. Extreme weather events, such as droughts and §oods, can also impact agriculture and reduce crop productivity.
Limited Resources: Agriculture is dependent on several resources, including water, land,
and energy. However, these resources are becoming increasingly scarce due to factors such as population growth and urbanization. This can lead to comp
Soil Degradation: Soil degradation is a signi¦cant challenge facing agriculture, as it can reduce the productivity of farmland and affect crop yields. Soil
degradation can result from factors such as erosion, overuse of pesticides and fertilizers, and deforestation.
Pest and Disease Management: Pests and diseases can have a signi¦cant impact on crop yields, leading to reduced productivity and higher costs for
farmers. However, managing pests and diseases can be challenging, as it requires a comprehensive understanding of the pests and diseases and the
appropriate management strategies.
Access to Markets: Access to markets can be a signi¦cant challenge for farmers, particularly those in developing countries. Farmers may lack access to m
and transportation systems, which can limit their ability to sell their products and receive fair prices.
Labor Shortages: Labor shortages can be a signi¦cant challenge for farmers, particularly in developed countries. Labor shortages can lead to higher labor
costs and di¨culties in ¦nding workers to perform critical tasks such as planting and harvesting.
Financial Constraints: Farmers often face ¦nancial constraints, including limited access to
credit and high costs for inputs such as seeds, fertilizers, and machinery. These constraints can limit their ability to invest in their farms and increase their
Page 3/20
productivity.
Precision agriculture is one of the biggest innovations in contemporary agriculture. Data about soil conditions, crop development, and weather patterns are
collected using cutting-edge technologies like GPS, sensors, and drones. With the help of this knowledge, decisions about pest management,
fertilizer, irrigation, and planting may be made that will maximize yields and the e¨cient use of resources [4]. Genetically modi¦ed organisms (GMOs) are
another signi¦cant development in agriculture. To increase their resistance to pests, diseases, and environmental stressors, these crops have undergone
genetic engineering. As a result, farmers are now able to grow more food with fewer inputs like pesticides and herbicides.
The importance of sustainable agriculture is likewise rising as global concern over climate change and environmental degradation rises. Reduced soil erosion,
water conservation, and soil health are all bene¦ts of sustainable farming techniques like cover crops, crop rotation, and conservation tillage.
By storing carbon in the soil, they also aid in lowering greenhouse gas emissions. The mechanization of farms has also aided modern agriculture. Many
chores can now be automated by farmers, which lowers labor costs. Examples of advanced machinery include tractors, planters, and harvesters. Farmers can
now manage greater land areas, which has increased farming e¨ciency.
In summary, contemporary agricultural methods are crucial for feeding a growing world population while minimizing the negative effects on the environment.
The "World Population Prospects," makes predictions on population growth. The most recent edition of this report, which spans the years 1950 to 2100, was
released in 2019. According to the report, there were 7.7 billion people on the planet in 2019 and 9.7 billion are expected to live there by the year 2050 [5]. The
research also points out that although population growth rates have been falling since the 1960s, the overall number of people added to the world's population
every year has been rising. Farmers may continue to grow their food production while using fewer resources by utilizing technology, science, and sustainable
farming methods, ensuring the industry's viability. This is implemented using arti¦cial intelligence techniques as shown in ¦gure 1.
Arti¦cial intelligence (AI) is the period used to designate the capacity of machines to carry out tasks that would ordinarily require human intelligence to
complete, such as comprehending natural language, recognizing patterns, making judgment calls, and picking up knowledge from experience. The subject of
arti¦cial intelligence is expanding quickly, revolutionizing several industries and perhaps changing how we work and live [6]. Numerous applications, including
voice assistants, picture and speech recognition, natural language processing, and predictive analytics, currently make use of AI technology. It is also
employed in industries including manufacturing, transportation, banking, and healthcare, where it helps to increase productivity, lower costs, and increase
safety. However, the quick development of AI also prompts signi¦cant moral and societal issues. Concerns have been raised regarding how AI will affect
employment, privacy, and security, as well as the possibility that these technologies would help to reinforce prejudice and discrimination. It will be crucial to
address these concerns as AI technology develops and to make sure that it is created and applied in a way that bene¦ts society as a whole. Arti¦cial
intelligence (AI) is taking on a bigger and bigger role in agriculture by assisting farmers and other stakeholders in making better decisions and maximizing
their operations [7]. Crop observing, yield estimating, soil investigation, and pest controller are just a few of the applications of AI.
Agronomists may spot possible issues early and take action before they worsen by using crop monitoring, where AI analyses images captured by drones or
sensors to ¦nd changes in plant health or growth patterns. Based on data inputs like weather patterns, soil conditions, and previous yield data, AI- powered
yield prediction can assist farmers in estimating crop yields. Additionally, AI can identify and forecast the spread of pest outbreaks to assist in pest
management, analyze soil samples to evaluate nutrient content and provide fertilization suggestions.
In general, using AI in agriculture helps farmers increase their yields, cut costs, and encourage sustainable farming methods. It can transform how we cultivate
food and tackle some of the biggest issues confronting agriculture, such as food security and climate change. They are done using machine learning with
optimization algorithms. It is de¦ned as the branch of arti¦cial intelligence called "machine learning" which uses algorithms and statistical models to let
computers learn from data without having to be explicitly programmed. It is predicated on the premise that computers can discover patterns and reach
conclusions by examining massive amounts of data [8]. With the introduction of technology, especially the use of machine learning techniques, agriculture
has recently seen a substantial revolution. Since it can automate complicated activities and make predictions based on data, machine learning has grown in
popularity. Some of the causes for utilizing machine learning are as follows:
Automation: By automating time-consuming and repetitive processes, machine learning frees up human resources to work on tasks that are more
complicated and creative.
Forecasting and prediction: Machine learning models can be trained on historical data to create forecasts and predictions about future outcomes,
including consumer behavior, sales trends, and market prices.
Personalization: Machine learning can be used to customize user experiences, such as news feeds or product recommendations on e-commerce websites.
Fraud detection: By learning from trends in historical data, machine learning can be used to identify fraudulent transactions or activities.
Natural language processing: Chatbots, voice assistants, and other language-based applications can be made possible through machine learning when it
comes to analyzing and comprehending natural language.
Image and speech recognition: By using machine learning to identify patterns in images and audio, applications like facial and object identi¦cation and
voice-based user interfaces are made possible.
This study examines how digital footprints can improve farming practices and increase output. The process of transforming information from an analog to a
digital representation is referred to as digitalization. Then, utilizing electrical equipment and computer networks, this digital format may be stored, processed,
and sent. From the way we interact and consume information to the way we work and access healthcare, digitalization has drastically changed many facets
of our lives [9]. The term "digital footprint" describes the online tracks that a person or business leaves behind on the internet. The importance of having a
digital footprint in agriculture is rising as machine learning-enhanced production practices improve farming practices.
Page 4/20
Here are a few explanations:
Data Gathering: Digital footprints can be used to gather information on agricultural practices, including the usage of pesticides, irrigation systems, and
fertilizers. By using this information, it is possible to develop digital pro¦les of farms and produce insights that can be used to maximize agricultural
output. Then, by analyzing this data, machine learning algorithms may provide farmers with insights and suggestions for enhancing productivity.
Predictive Analytics: Machine learning algorithms can create predictions about crop yields, insect outbreaks, and weather trends using data from digital
footprints. This can assist farmers in choosing planting, irrigation, and pest management strategies with more knowledge, which can increase yield. With
precision agriculture, it is possible to construct computerized maps of farms that show regions with a particular need, such as nutrient shortages or pest
infestations. Then, using machine learning algorithms, production can be improved by reducing waste and using targeted applications of pesticides or
fertilizer, for example.
Crop Monitoring: Sensors, drones, or satellites can employ digital footprints to monitor crops in real time. The data can then be analyzed using machine
learning algorithms to give farmers information on the health and growth trends of their crops. This can assist farmers in identifying and addressing
problems like nutrient de¦cits or pest outbreaks early on, which can boost crop yields and lower losses.
The capacity to store and analyze enormous volumes of data rapidly and effectively is one of the main advantages of digitization. As a result, cutting-edge
¦elds like machine learning and arti¦cial intelligence have emerged, which generate predictions and judgments using vast volumes of data. It is now simpler
for people to work together across distances and time zones thanks to new kinds of communication and collaboration made possible by digitalization. Online
collaboration tools and remote work have grown in popularity over the past several years as a result of this. Agriculture and food production are being
revolutionized by digitalization [10]. It has the potential to boost productivity, cut expenses, and boost yields, ultimately resulting in more lucrative and
sustainable agriculture.
In the case of cash crops, digitalization has allowed farmers to more effectively track and manage their harvests from planting to harvest. Farmers can
monitor soil moisture, nitrogen levels, and other crucial factors thanks to technologies like precision farming and remote sensing, which improve crop yields
and cut expenses. Digitalization is assisting in addressing problems with food crops such as food waste and ine¨cient supply chains [11]. For instance, food
goods can be tracked using blockchain technology from farm to table, lowering the danger of contamination and enabling more effective recalls.
Agriculture and food production are being transformed overall by digitalization, becoming more effective, sustainable, and pro¦table for both farmers and
customers. We examine the application of machine learning algorithms in agriculture and how they might increase crop output and support farmers' decision-
making. We also look at the opportunities and problems associated with integrating digital footprints into agriculture and how that might result in sustainable
practices. The digital footprints that people leave behind when interacting with technology are referred to as digital footprints. Digital footprints in agriculture
can be used to gather information on farming methods, crop output, weather trends, and soil health. Machine learning algorithms can be created using this
data to enhance agricultural practices. For instance, information on weather patterns can be utilized to forecast crop output and determine the ideal time for
sowing. To utilize fertilizer and pesticides most effectively, data on soil health can be employed. Machine learning algorithms come in a variety of forms, such
as reinforcement learning, unsupervised learning, and supervised learning [12]. Unsupervised learning includes spotting patterns in unlabeled data, whereas
supervised learning uses labeled data to train a machine learning model. Due to its capacity to collect and analyze vast amounts of data to produce insights
that might assist farmers in making more informed decisions, machine learning is becoming more and more widely used in agricultural practices. The usage
of resources can be optimized, waste can be decreased, and crop yields can now be increased thanks to machine learning. Precision farming is one of the
most often used uses of machine learning in agriculture. Applying the appropriate inputs, such as fertilizer, herbicides, and water, at the appropriate time and
in the appropriate amount includes precision agriculture, which involves analyzing data to identify variability within a ¦eld. To assist farmers in making more
accurate judgments about how to manage their crops, machine learning algorithms can analyze data from sensors, satellite photos, and weather forecasts.
Predicting crop yields is another way that machine learning is used in agriculture. Machine learning algorithms can create predictive models that assist
farmers in estimating their yields for the current season by analyzing historical data on crop yields and weather trends. Making decisions about when to
harvest, when to sell, and how much to grow can be done using this information.
Plant disease management and identi¦cation can both be done using machine learning. Machine learning algorithms can detect illnesses and pests early on
by examining photographs of plants, allowing farmers to take preventative measures before serious damage is done. By doing this, you can increase crop
quality while using less pesticides. Machine learning can be used to enhance not only crop management but also animal management [13]. Machine learning
algorithms can aid farmers in identifying potential health issues and optimizing feeding and breeding schedules by analyzing data on animal behavior, such
as feeding patterns and mobility. Despite the potential advantages of integrating digital footprints in agriculture, there are still several issues that need to be
resolved. Data privacy and security are one of the di¨culties. Farmers' concerns about privacy and security may make them hesitant to share their data. The
absence of technology and data connectivity in rural places is another problem. The technology required to gather and analyze data may not be available to
farmers in remote locations.
This is implemented through Information and Communication Technology (ICT). By boosting output, boosting e¨ciency, and lowering environmental impact,
ICT has also signi¦cantly contributed to the transformation of agriculture. Using ICT in agriculture entails putting different digital technologies to use to help
agricultural practices such as precision agriculture, smart farming, and farm management systems. With the help of ICT tools like GPS, sensors, and drones,
farmers can monitor and analyze data on their crops and soil to make educated decisions about planting, fertilizing, and irrigation. Precision agriculture is a
growing ¦eld. In doing so, crop yields are improved while the consumption of resources like water and fertilizer is reduced. Automating various farming tasks,
such as planting, harvesting, and livestock monitoring, through the use of ICT tools like Internet of Things (IoT) sensors and machine learning algorithms is
known as smart farming. This might lower labor costs, boost productivity, and enhance farming techniques' precision.
Page 5/20
To handle several areas of farming, including inventory management, ¦nancial management, and supply chain management, farm management systems use
ICT tools like cloud-based software applications. This can facilitate operational simpli¦cation and enhance decision-making for farmers. In general, the
application of ICT in agriculture has the potential to revolutionize the sector by enabling more productive, e¨cient, and sustainable farming methods. The
major contributions of the proposed work include the following:
Improved Agricultural Practices: By introducing the use of machine learning algorithms in analyzing data gathered from various sources, such as weather
data, soil samples, and crop yields, the study may contribute to improving ag practices. Improved crop yields may arise from farmers making better
decisions about when to sow, irrigate, fertilize, and harvest their crops as a result.
Increased Crop productivity: By ¦nding ideal circumstances for crop development, recognizing and forecasting probable crop illnesses, and suggesting
the optimum fertilizers or pesticides employ, the implementation of machine learning techniques in agriculture may boost agricultural productivity.
Environmental Sustainability: By using fewer pesticides and fertilizers, improving irrigation techniques, and lowering crop waste, the paper may also help
to advance environmental sustainability.
Information Transfer: By presenting a framework for how machine learning might be used in the agriculture industry, the study may help spread
information and best practices. This might facilitate the understanding of the potential advantages of this technology by other researchers, practitioners,
and policymakers and promote its implementation.
In conclusion, the use of machine learning in agricultural practices is growing. Farmers can make better decisions, enhance yields, and save waste thanks to
its capacity to handle massive amounts of data and produce predictive models. Machine learning will likely play a bigger part in the future of agriculture as a
result of the ongoing improvement of technology.
II. SYSTEMATIC REVIEW
The proposed system paved way for smart farming. Using cutting-edge technology and data analytic methods, smart farming, sometimes referred to as
precision agriculture, aims to enhance farming practices, boost agricultural production, and lessen waste and environmental effects. Optimizing farming
operations like irrigation, fertilization, pest control, and crop management, entails the integration of numerous technologies like sensors, drones, GPS, and
arti¦cial intelligence (AI). To meet the increasing demand for food in a world that is changing quickly, smart farming aims to make agriculture more effective,
sustainable, and lucrative. Machine learning is one of these technologies; it uses algorithms to ¦nd patterns and insights in huge datasets. Machine learning
in agriculture offers the potential to increase agricultural productivity and support farmers' decision-making. This research examines how digital footprints can
be used to improve agricultural practices and increase output. Smart agriculture practices use a variety of technology to streamline farming processes,
increase yields, and cut waste. Among the most important technologies used in smart agriculture are:
Precision farming: To maximize crop productivity and reduce resource wastage, such as water, fertilizer, and pesticides, precision farming is a
sophisticated agricultural management method. Making educated judgments regarding planting, harvesting, and resource allocation entails gathering
and analyzing data about the state of the soil, weather patterns, crop growth patterns, and other pertinent elements. The GPS is one of the most important
technologies used in precision farming. (GPS). With the aid of GPS technology, farmers can follow their machinery in real-time
and keep an eye on the location and crop productivity. Making informed judgments about where to sow crops and how much fertilizer and water to use can be
done using this data. Additionally, GPS can be used to build ¦eld maps, which can be utilized to spot problem regions such as those with poor soil quality or
low crop yield. Another increasingly popular precision farming method is Variable Rate Technology (VRT). Farmers are now able to apply the exact amount of
pesticides, water, and fertilizer required for each ¦eld area thanks to VRT technology. By doing so, crop yields increase, waste is reduced, and money is saved
[14]. As an illustration, if a farmer uses VRT to apply fertilizer, the system can modify the amount applied following the crop's needs and the soil's
circumstances. The quality and production of the crops can be enhanced by making sure that the proper amount of fertilizer is applied to each section of the
¦eld. Remote sensing is a crucial tool for precision farming. The health of plants and the amount of moisture in the soil can be precisely determined using
remote sensing technology like satellite photography and drones. Utilizing this information will allow you to keep an eye on crop development and spot ¦eld
issues. The farmer can inspect the region and establish whether there is a pest infestation or a nutrient shortage, for instance, if a drone spots a patch of
fading plants. Precision farming also includes the use of precision irrigation systems. These systems optimize water use by using sensors and software to
make sure crops get the proper amount of water at the right time. Water waste is decreased, and crop quality is raised. For instance, a precision irrigation
system can automatically change the amount of water sprayed to a ¦eld's dry patches if it notices that the area is dry. In conclusion, precision farming
techniques are revolutionizing the agricultural sector by utilizing cutting-edge technology and data analytics to maximize crop output, improve crop quality, cut
down on resource waste, and boost e¨ciency and pro¦tability for farmers. Farmers may decide wisely about planting, harvesting, and resource allocation by
gathering and analyzing data on soil quality, weather patterns, and crop growth patterns. This can result in better outcomes for farmers as well as the
environment.
Internet of Things (IoT): The Internet of Things (IoT) is playing a progressively signi¦cant part in agriculture, allowing farmers to enhance their resources
and improve their yields while reducing costs and increasing e¨ciency. Here are some of how IoT is revolutionizing agriculture:
1. IoT sensors can be utilized in agriculture to gather information on soil moisture, temperature, and nutrient levels as well as weather, plant development, and
pest infestations. This information can be used to identify ¦elds that need attention, improve irrigation and fertilization schedules, and track crop health and
growth rates.
2. Livestock management: IoT sensors can be used to track a livestock's movement, observe its eating and drinking routines, and spot any irregularities that
would point to an ailment or injury. By using this information, feeding, and care schedules can be improved, disease outbreaks can be stopped, and overall
Page 6/20
animal health and production can be increased.
3. Supply chain management: From the farm to the consumer, IoT sensors may be utilized to track the movement of crops and livestock. Farmers and
distributors can bene¦t from this by maximizing logistics, cutting waste, and ensuring that goods are delivered to markets on schedule and in good shape.
4. Monitoring environmental conditions: IoT sensors can be used to keep an eye on things like air and water quality, weather patterns, and climate change.
This can assist farmers in selecting crops, timing plantings, and other agricultural practices that are in§uenced by environmental conditions.
5. IoT technology can be utilized to create autonomous farming systems, where robots and drones can take care of chores like planting, watering, and
harvesting crops. By doing so, the danger of human mistakes can be decreased while labor expenses can be decreased and productivity increased.
Big Data Analytics: Big data analytics in agriculture have the potential to change how farmers and agricultural enterprises conduct their operations.
Farmers may make more educated decisions that can result in higher yields, more e¨ciency, and lower costs by gathering, analyzing, and interpreting
vast amounts of data. Predictive insights are one of the main advantages of big data analytics in agriculture. Farmers can estimate future yields with
greater accuracy by looking back at historical data on weather patterns, soil characteristics, and crop performance. This can assist them in maximizing
planting schedules, selecting the crops that are most suited for a speci¦c site, and modifying their agricultural techniques to increase productivity.
Precision agriculture is another ¦eld where big data analytics can have a signi¦cant effect. Farmers can obtain comprehensive information about soil
moisture, nitrogen levels, and other environmental aspects that in§uence crop growth by employing sensors and other data-collection equipment. Making
decisions concerning irrigation, fertilizer application, and other farming-related issues will thus be easier with the aid of this knowledge [15]. Farmers may
use big data analytics to spot possible issues like pest infestations or crop diseases early on. Farmers can spot warning signs early on and take action
before the issue gets worse by analyzing data from sensors and other sources. Big data analytics in agriculture has the potential to greatly boost
productivity, lower costs, and raise yields. However, it necessitates a large investment in technology, data analytic skills, and a readiness to adopt novel
farming practices.
Robotics: Precision farming, harvesting, monitoring, and maintenance are just a few of the agricultural applications where robots are becoming more and
more crucial. Increased productivity is one of the key advantages of deploying robots in agriculture because they can operate around the clock and
reliably perform repetitive jobs. Robots can also lower labor costs, boost productivity, and enhance sustainability. Robots are having a big impact on
several industries, including precision farming. Robots can make accurate choices on planting, watering, fertilizing, and harvesting by gathering and
analyzing data on crops, soil, weather, and other aspects. Thus, waste is decreased, environmental sustainability is increased, and crop yields are
improved. Robots used for soil analysis, sensor-equipped drones, and self-driving tractors are a few examples of precision farming robots. Harvesting is
another industry where robots are having a big impact. Robots are being developed to pick fruits and vegetables, which can be a labor-intensive operation,
more effectively and precisely. Additionally, according to quality and other criteria, automated systems may sort and grade collected products. Due to their
ability to operate continuously, harvesting robots can speed up the process of getting crops to market. The usage of robots in agriculture also extends to
monitoring and maintenance. Robots can be employed to keep an eye on crop development and spot any issues like pests or illness. With the use of
sensors and other cutting- edge technology, this can be done, allowing farmers to act immediately to avoid crop loss. To eliminate the need for manual
labor, robots can also complete activities like irrigation, weeding, and trimming. In agriculture, autonomous vehicles are also becoming more prevalent
[16]. It is possible to carry crops and supplies as well as plant and harvest crops using self-driving tractors and other autonomous vehicles. This lowers
the demand for human labor and boosts productivity. Overall, the use of robots has the potential to revolutionize agriculture by increasing its productivity,
sustainability, and e¨ciency. Robots can assist farmers in meeting the rising need for food while minimizing the impact of farming on the environment by
lowering labor costs, boosting production, and improving sustainability. We may anticipate seeing even more cutting-edge agricultural robots produced as
technology develops.
Cloud Computing: Agriculture is seeing an increase in the importance of cloud computing, which bene¦ts farmers, academics, and other sector
participants in a variety of ways. Cloud computing is assisting in enhancing e¨ciency, production, and sustainability in agriculture through data
management and predictive analytics. Improved data management is one of the main advantages of cloud computing for agriculture. It can be di¨cult to
store and analyse the vast volumes of data
that farmers produce on their crops, soil, weather, and other variables [17]. By providing a safe and expandable platform for data processing and storing, cloud
computing offers a remedy. Farmers who use cloud-based solutions can access and analyse their data on any device, at any time, from anywhere. This
enables them to decide on planting, fertilizing, and harvesting more wisely, which increase agricultural yields and decrease can waste. Additionally, the use of
cloud computing improves communication between scientists and agronomists. Researchers can collaborate globally with co-workers and collaborators by
putting study data on the cloud and making it accessible to them. This might hasten agricultural research and development and result in fresh ideas for
managing crops, controlling pests, and other things. Predictive analytics is a bene¦t of cloud computing for agriculture as well. Farmers can utilize cloud-
based technologies to forecast agricultural yields by examining data on crop growth, weather patterns, and other variables. They can then modify their
planting and harvesting schedules as necessary. The risk of crop loss due to weather or other reasons can be reduced and resources may be used more
effectively as a result. In terms of sustainability, cloud computing also has advantages. Farmers can use cloud-based solutions to manage data and cut down
on the amount of paper and other physical resources required for data storage and analysis [18]. Farmers may also cut waste and make better use of
resources by employing predictive analytics to optimize agricultural yields. Overall, cloud computing is playing a signi¦cant role in agriculture, providing
advantages in terms of sustainability, cooperation, data management, and predictive analytics. We may anticipate seeing even more cutting-edge cloud-based
technologies created for use in agriculture as technology develops, assisting farmers to increase output, decrease waste, and satisfy the rising need for food.
Blockchain technology: To increase transparency, e¨ciency, and sustainability throughout the supply chain, blockchain technology is rapidly being
applied in agriculture. Blockchain technology can revolutionize business and provide farmers, consumers, and other stakeholders with a wide range of
advantages, from tracking food safety to expediting transactions. Improved traceability is one of the blockchain's main advantages in agriculture.
Farmers may follow their products from farm to table using blockchain-based technologies, giving consumers more details about the food's origins and
production processes [19]. Permitting quicker and more precise recalls in the event of contamination or another problem can assist boost consumer and
Page 7/20
farmer trust while also enhancing food safety. E¨ciency gains are another advantage of blockchain in agriculture. Farmers may cut down on the need for
middlemen and streamline the buying and selling of products by adopting blockchain-based technologies to coordinate transactions. Better outcomes for
both farmers and customers may result from this as it can lower costs and improve supply chain transparency. Blockchain can also aid increase
agricultural sustainability. Blockchain-based platforms can encourage more sustainable practices and decrease waste by enabling farmers to track the
environmental impact of their products. Blockchain can also encourage more sustainable production methods and lessen agriculture's impact on the
environment by giving consumers more information about the sustainability of the items they purchase. Smart contracts are one application of
blockchain in agriculture. The details of the agreement between the buyer and seller are directly encoded into lines of code in smart contracts, which are
self-executing contracts. This reduces the need for middlemen and can lower the possibility of fraud or disagreements. Smart contracts can be used to
automate transactions between farmers and purchasers in the agricultural industry, guaranteeing that both sides receive fair compensation and lowering
the possibility of payment delays or disagreements. By enhancing transparency, e¨ciency, and sustainability throughout the supply chain, blockchain
technology has the potential to fundamentally change the agricultural industry [20]. We may anticipate more e¨cient and sustainable agricultural
practices, which will bene¦t farmers, consumers, and the environment as more producers, retailers, and farmers implement blockchain-based systems.
III. OVERVIEW OF MACHINE LEARNING
Machine learning (ML) is increasingly being used to improve agricultural practices, by enabling farmers and agriculture professionals to optimize operations,
increase productivity, and reduce waste. The use of ML in agriculture can include tasks such as crop yield prediction, pest and disease detection, precision
agriculture, and livestock management. By leveraging advanced algorithms and data analytics, ML is helping to revolutionize the agricultural sector, improving
the e¨ciency and sustainability of food production. This is implemented using an optimization algorithm. Random Forest is a machine learning algorithm
that can be used to enhance productivity in agriculture by analyzing large amounts of data and providing valuable insights into crop production. The
algorithm works by creating multiple decision trees, each of which independently analyzes a subset of the data [21]. The results of these trees are then
combined to make a more accurate prediction. Certainly, the following ¦ve categories are employed in agriculture to boost production using machine learning
as shown below in Fig. 2:
A brief overview of machine learning:
The development of models to mimic human learning and decision-making can be credited with giving rise to machine learning in the 1940s and 1950s. The
creation of the perceptron algorithm by Frank Rosenblatt in 1957 is one of the early instances of machine learning. A particular kind of arti¦cial neural network
known as a perceptron was capable of learning to divide inputs into two categories using a set of weights and biases. The development of decision trees and
rule-based systems in the 1960s and 1970s contributed to the advancement of machine learning research [22]. These techniques were used to create expert
systems that can decide based on a set of guidelines and information. Machine learning began concentrating on statistical techniques and algorithms in the
1980s and 1990s, like logistic regression and linear regression. Classi¦cation, regression, and clustering challenges all used these techniques. Machine
learning regained prominence in the 2000s with the rise of big data and improvements in computing power [23]. Numerous new methods, including deep
learning and reinforcement learning, have been created and used in a variety of ¦elds, such as autonomous cars, natural language processing, and picture
identi¦cation. Machine learning is still a discipline that is quickly developing today, with new methods and programs being created and used in sectors
including healthcare, ¦nance, and cyber security.
Following are the steps that machine learning uses to operate:
1. Data Gathering: Gathering pertinent data from diverse sources is the initial stage in machine learning. Depending on the issue at hand and the desired
solution, this data may be presented in either structured or unstructured form.
2. Data processing: After the data has been gathered, it must be prepared for analysis. To prepare the data for use by machine learning algorithms, the data
must be cleaned, missing values must be removed, and any outliers must be removed.
3. Feature extraction: The process of selecting and engineering relevant features from the data aims to provide new features that may be more advantageous
for machine learning algorithms.
4. Model Selection: After the data is ready, the type of problem being tackled is taken into consideration and a suitable machine learning technique is selected.
supervised learning, unsupervised learning, and reinforcement learning are some examples of this.
5. Training the Model: Using the prepared data, the selected machine learning method is then practiced. To reduce the error between the projected output and
the actual output, the algorithm makes adjustments to its parameters as it learns from the data during training.
6. Model Evaluation: After the model has been trained, its generalizability to fresh, unexplored data is assessed using a variety of performance criteria.
7. Model tuning: Depending on the results of the evaluation, the performance of the model may need to be improved by modifying its hyper parameters or by
employing a new algorithm.
8. Model deployment: The model can be deployed in a production environment to make predictions on new data after it has been trained and tweaked.
9. Monitoring and Maintenance: To ensure that machine learning models continue to perform well over time, it is necessary to monitor and maintain them.
This entails keeping an eye out for data changes, frequently retraining the model, and making adjustments as necessary.
Machine learning is an iterative process, thus when the model is created and applied, some steps might need to be repeated or improved. Depending on the
type of problem being handled, numerous metrics can be used to assess how well machine learning models perform. The main objective of assessing a
machine learning model's performance is to ¦nd out how effectively it generalizes to new, untried data. Random Forest is a machine learning algorithm that
can be used in agriculture to predict crop yield. It works by creating an ensemble of decision trees, where each tree is trained on a random subset of the data
and a random subset of the features [24]. In the context of agriculture crop yielding, the algorithm can be used to predict the yield of a particular crop based on
Page 8/20
a variety of input variables such as weather patterns, soil quality, seed varieties, and management practices. To use the algorithm for crop yield prediction,
historical data on crop yields and the corresponding input variables are used to train the model. Once the model is trained, it can be used to predict the yield of
a new crop based on the input variables provided. The random forest algorithm is particularly useful for agriculture because it can handle a large number of
input variables and can also capture complex interactions between the variables that may be di¨cult to identify using traditional statistical methods [25].
Additionally, the algorithm is robust to noisy data and missing values, making it suitable for real-world agricultural data. Overall, the random forest algorithm
can be a powerful
tool for predicting crop yields in agriculture and can help farmers make informed decisions about crop management and resource allocation. Here are a few
typical metrics for assessing machine learning models:
Accuracy: This gauges the percentage of instances that were correctly classi¦ed out of all the instances. For classi¦cation issues, it is frequently
employed.
Precision is the percentage of all accurately identi¦ed positive instances (also known as true positives) among all positive predictions. It is bene¦cial in
situations when the expense of false positives is large, like in medical diagnostics.
Recall: In case you forgot, this quanti¦es the percentage of real positives among all positive results. It helps identify fraudulent transactions when the cost
of false negatives is signi¦cant.
F1 Score: When false positives and false negatives are equally essential, this score—which is the harmonic mean of precision and recall—is helpful.
Mean Squared Error (MSE): For regression issues, this statistic is frequently utilized. The average squared difference between the expected and actual
values is what is measured.
Since it is expressed in the same units as the target variable, the Root Mean Squared Error (RMSE), which is the square root of the MSE, is a more
understandable statistic.
R-squared (R2): This indicator shows how much of the target variable's variance the model can account for. A better ¦t is indicated by higher values,
which range from 0 to 1.
Depending on the problem being solved, it is crucial to utilize the right evaluation criteria when assessing a machine learning model's performance. To make
sure the model can generalize to new data, it's also critical to assess the model's performance on a different test set. The trade-off between model complexity
and performance is also crucial to take into account because more complex models may over¦t training data while underperforming on fresh data [26].
In general, machine learning models can be divided into three groups based on the kind of learning that they employ:
Supervised Learning: In supervised learning, the target variable is known and the computer is trained on a labelled dataset. To make precise predictions
on fresh, unforeseen data, the model must learn the link between the input features and the target variable.
Unsupervised Learning: In unsupervised learning, the goal variable is unknown and the machine is trained on an unlabelled dataset. The model's objective
is to identify structures, correlations, and patterns in the data without receiving any direct instruction or feedback.
Reinforcement Learning: In reinforcement learning, a machine learns by doing things incorrectly, interacting with its environment, and receiving feedback
in the form of rewards or punishments. The ideal policy, which maximizes the cumulative reward over time, is what the model seeks to learn. In robots,
video games, and control systems, this kind of learning is frequently employed.
The following categories are used to enhance productivity in agricultural sectors evolving machine learning techniques:
Crop prediction: Choosing which crops to grow, when to plant them, and how to maximize their production all depend on crop prediction, which is a crucial
component of agriculture. To ¦nd trends and create precise predictions, machine learning (ML) approaches have shown considerable promise in the ¦eld of
crop forecasting. The gathering and pre-processing of data is the ¦rst stage in crop prediction using ML. This entails compiling information on many
elements, such as weather patterns, soil quality, and the type of crop planted, that may have an impact on crop development [27]. The data is then pre-
processed to clean out any errors or noise and to make sure that it is in a format that ML algorithms can use. The pre-processed data is then subjected to ML
algorithms to ¦nd patterns and generate predictions. Several ML methods, such as decision trees, random forests, support vector machines (SVM), and
arti¦cial neural networks, can be applied to crop prediction. (ANN). Each algorithm has its advantages and disadvantages, and the best one to use depends on
the particulars of the problem at hand. The ML algorithm can be used to generate predictions on new data after being trained on existing data. For instance, a
farmer can input information on the weather, soil quality, and other parameters to predict the yield of a speci¦c crop in a given season, and the ML algorithm
will then do so [28]. The ability to maximize crop yield and minimize waste is one of the main advantages of utilizing ML for crop prediction. ML algorithms
can detect the ideal circumstances for crop growth and suggest adjustments to planting plans, irrigation schedules, and other practices to maximize yield by
analysing data on the elements that affect crop growth. The ability to lower the risk of crop failure for farmers is another advantage of utilizing ML for crop
prediction. Farmers can take proactive steps to minimize or lessen the impact of crop failure by utilizing pest-resistant crops or modifying planting dates by
forecasting the possibility of crop failure based on factors such as weather conditions, soil quality, and disease outbreaks. In conclusion, crop prediction using
machine learning has the potential to completely transform the agricultural industry by empowering farmers to make data-driven decisions that maximize
crop output and minimize risk [29]. To accurately anticipate crop production and assist farmers in choosing planting techniques, irrigation schedules, and
other practices that in§uence crop growth, machine learning (ML) systems analyse vast volumes of data and look for trends. It is expected that ML technology
will become more and more signi¦cant as it develops in agriculture and other sectors of the economy.
Plant disease detection: Farmers and the agriculture sector are very concerned about plant diseases. They can lower crop quality and result in considerable
yield losses, which might result in ¦nancial losses. To reduce these losses, early plant disease detection and prevention are essential. To forecast plant
Page 9/20
diseases and provide prompt intervention to stop their spread, machine learning approaches can be helpful. Data collection is the ¦rst step in the machine
learning process used to predict plant diseases. This entails gathering information on the plant species, its growth stage, the type of disease, and climatic
factors including temperature, humidity, and rainfall. Sensors, drones, satellite photography, and human observation can all be used to gather data [30]. Once
the data is collected, it is pre-processed to remove noise, handle missing values, and normalize the data. Feature engineering is then performed to extract
relevant features from the data that can be used to train the machine learning model. The extracted features may include plant morphology, texture, color, and
shape, as well as environmental factors such as temperature and humidity. Various machine learning algorithms can be used for plant disease prediction,
including decision trees, random forests, support vector machines, and deep learning models such as convolutional neural networks. The choice of algorithm
depends on the size and complexity of the dataset and the accuracy required for prediction. The trained model is then tested on a separate dataset to evaluate
its accuracy and performance. This is done by splitting the data into training and testing sets, with the majority of the data used for training the model and a
smaller subset used for testing. A map displaying the location and severity of the disease or an alert system notifying farmers when the sickness is found are
just two examples of how the model's results can be displayed to the user. Using this knowledge, preventive steps can then be taken, such as applying
fungicides or removing affected plants [31]. Machine learning- based plant disease prediction has several advantages over conventional disease detection
techniques. By enabling early illness identi¦cation, it can lessen the need for expensive and time-consuming manual checks. Additionally, it can assist farmers
in deciding when and where to apply fungicides and other
treatments, minimizing the amount of chemicals needed and the negative effects on the environment. In conclusion, predicting plant diseases using machine
learning is a potential strategy that can help to lower crop losses and improve agricultural practices. The right machine learning algorithms must be chosen,
together with careful data gathering, pre-processing, and feature engineering. Machine learning can deliver precise and timely predictions of plant illnesses
with the correct methods and equipment, allowing farmers to take preventative measures to save their crops [32]. In conclusion, predicting plant diseases
using machine learning is a potential strategy that can help to lower crop losses and improve agricultural practices. The right machine learning algorithms
must be chosen, together with careful data gathering, pre- processing, and feature engineering. Utilizing the appropriate methods and resources, machine
learning.
Weed detection: Weed detection using machine learning is a rapidly developing ¦eld that has the potential to revolutionize the way we manage agriculture. In
traditional agriculture, weed management is time- consuming and labour-intensive, often requiring the use of herbicides, which can have negative
environmental impacts. Machine learning-based weed detection offers an alternative solution, using computer vision and machine learning algorithms to
identify and map weeds in real time. One of the key advantages of machine learning-based weed detection is its ability to process large amounts of data
quickly and accurately. This is achieved by training machine learning algorithms on large datasets of images of crops and weeds [33]. These datasets are
typically labelled to identify which pixels correspond to crops and which correspond to weeds, allowing the machine learning algorithm to learn to distinguish
between the two. The training data is fed into a machine learning model, which then uses this data to create a model that can recognize patterns in new
images. When new images of crops are input into the model, the machine learning algorithm can quickly identify which pixels correspond to weeds and which
correspond to crops. This information can then be used to create a map of weed distribution across a ¦eld. Several challenges must be addressed when
developing a machine learning-based weed detection system. One of the key challenges is ensuring that the system is robust to changes in lighting conditions
and other environmental factors. This can be achieved by using a combination of image processing techniques and machine learning algorithms to pre-
process images before they are input into the weed detection model [34]. Another challenge is ensuring that the system can generalize to new images that it
has not seen before. This can be achieved by using a combination of data augmentation techniques and transfer learning, which involves using a pre-trained
model as a starting point for training a new model on a smaller dataset. Several different types of machine learning algorithms can be used for weed
detection, including convolutional neural networks (CNNs), support vector machines (SVMs), and decision trees. Each of these algorithms has its strengths
and weaknesses, and the choice of algorithm will depend on the speci¦c requirements of the application [35]. In conclusion, weed detection using machine
learning has the potential to revolutionize agriculture by providing a fast, accurate, and environmentally friendly alternative to traditional weed management
techniques. While there are still several challenges that must be addressed, advances in computer vision and machine learning are making this technology
increasingly accessible to farmers and researchers alike.
Crop yield prediction: Crop yield prediction is a crucial task in agriculture as it helps farmers and agricultural experts to make informed decisions about crop
production, resource management, and market supply. Traditionally, crop yield prediction has been done using various statistical models and methods, but
with the recent advancements in machine learning, it has become possible to predict crop yields more accurately using data-driven approaches. Machine
learning has proven to be a valuable tool in agriculture and has the potential to revolutionize the industry by making it more e¨cient and sustainable. The
main objective of crop yield prediction using machine learning is to develop models that can accurately estimate the yield of a particular crop in a speci¦c
area based on various factors such as weather conditions, soil properties, and agricultural practices. Machine learning models for crop yield prediction
typically use large datasets of historical weather and crop data to train the model and make predictions for the future. One of the most common approaches
for crop yield prediction is supervised learning, where the model is trained using labelled data, which includes both input features (such as temperature,
rainfall, and soil type) and
the corresponding crop yield. Supervised learning algorithms such as regression, decision trees, and neural networks are commonly used for crop yield
prediction [36]. These algorithms can learn the relationship between the input features and the output variable (crop yield) and make accurate predictions for
new data. Another approach for crop yield prediction is unsupervised learning, where the model is trained on unlabelled data to identify patterns and
relationships in the data. Clustering algorithms such as k-means clustering and hierarchical clustering are commonly used in unsupervised learning for crop
yield prediction. These algorithms can group similar data points based on their characteristics and help identify areas with similar crop yield patterns. In recent
years, deep learning algorithms such as convolutional neural networks (CNNs) and recurrent neural networks (RNNs) have been applied to crop yield
prediction. CNNs are particularly useful for analysing spatial data such as satellite images to identify crop types, growth stages, and yield potential [37]. RNNs
are well-suited for time series data such as historical weather data, which can be used to predict future weather patterns and their impact on crop yields.
Page 10/20
One of the key challenges in crop yield prediction using machine learning is the availability and quality of data. Historical weather and crop data may not be
readily available or may be incomplete, making it di¨cult to train accurate models. Moreover, the data may be biased or outdated, leading to inaccurate
predictions. Another challenge is the interpretation of the machine learning models, which can be complex and di¨cult to understand for non-experts.
Therefore, it is important to have a clear understanding of the data and the machine learning models used for crop yield prediction. In conclusion, crop yield
prediction using machine learning is a promising approach to improving the e¨ciency and sustainability of agriculture. With the right data and machine
learning models, it is possible to accurately predict crop yields and make informed decisions about crop production and resource management. However, there
are challenges in data availability, model interpretation, and practical implementation that need to be addressed to fully realize the potential of machine
learning in agriculture.
Farm management: Farm management is a complex process that involves numerous tasks, such as planting, harvesting, pest control, and irrigation, among
others. With the advent of machine learning and arti¦cial intelligence, farmers can use technology to optimize their operations and improve their yield.
Machine learning is a subset of arti¦cial intelligence that enables computer systems to learn from data and make predictions or decisions based on that data.
In the context of farm management, machine learning can be used to analyze various data sources, including weather patterns, soil conditions, and crop
growth, among others. One way in which machine learning can be used in farm management is by analysing satellite imagery to monitor crop health and
growth. By analyzing changes in vegetation density and color, machine learning algorithms can predict crop yields, identify areas of the farm that require
attention, and provide recommendations for irrigation and fertilization [38]. Another application of machine learning in farm management is in predicting
weather patterns and their impact on crop growth. By analyzing historical weather data and current weather patterns, machine learning algorithms can predict
future weather patterns and provide farmers with recommendations on how to adjust their operations to minimize the impact of adverse weather conditions.
In addition, machine learning can be used to optimize irrigation and fertilization schedules by analyzing soil data and plant growth patterns. By analyzing the
nutrient content of the soil and the growth rate of the plants, machine learning algorithms can provide farmers with recommendations on the optimal amount
and timing of irrigation and fertilization. Machine learning can also be used to predict pest and disease outbreaks and provide farmers with recommendations
on how to prevent or mitigate them [39]. By analyzing historical data on pest and disease outbreaks, as well as current weather and soil conditions, machine
learning algorithms can predict the likelihood of an outbreak and provide farmers with recommendations on how to prevent or mitigate it. In conclusion,
machine learning has the potential to revolutionize farm management by providing farmers with valuable insights and recommendations on how to optimize
their operations and improve their yield. By analyzing various data sources, including weather patterns, soil conditions, and crop growth, machine learning
algorithms can provide farmers with
recommendations on irrigation, fertilization, pest control, and other key aspects of farm management, enabling them to make more informed decisions and
improve their bottom line [40]. There are several advantages of using machine learning in agriculture, some of which include:
Increased E¨ciency: Machine learning algorithms can help farmers and other agriculture stakeholders optimize their operations by reducing the time and
effort required to perform tasks such as crop monitoring, disease detection, and yield forecasting. This can help to increase overall e¨ciency and reduce
costs.
Improved Crop Yields: Machine learning algorithms can help farmers predict crop yields by analyzing a wide range of data, including weather patterns, soil
moisture, and historical crop yields. By predicting yields more accurately, farmers can make better decisions about when to plant and harvest crops, leading to
increased yields.
Enhanced Resource Management: Machine learning algorithms can help farmers manage resources such as water, fertilizer, and pesticides more e¨ciently.
By analyzing data on crop growth and soil conditions, these algorithms can optimize resource usage, reducing waste and maximizing productivity.
Early Disease Detection: Machine learning algorithms can analyze data from sensors and other sources to detect signs of plant diseases early. This allows
farmers to take proactive measures to prevent the spread of disease, minimizing the impact on crop yields.
Precision Agriculture: Machine learning can help farmers to target speci¦c areas of their ¦elds that require more attention, allowing for more precise
application of resources such as fertilizer and pesticides. This can reduce waste and improve overall crop health.
Overall, the use of machine learning in agriculture has the potential to revolutionize the way that crops are grown and managed, leading to more e¨cient,
sustainable, and productive farming practices.
IV. PERFORMANCE ANALYSIS OF THE PROPOSED SYSTEM
The proposed system involves machine learning with random forest optimization to detect various parameters such as crop yield, disease prediction, weed
detection, etc. The proposed system is shown in ¦gure 3.
1. Data gathering: Data gathering is an essential step in machine learning, and it is particularly crucial when building a model to detect crop yield using the
random forest algorithm. The quality and quantity of data used to train the model can signi¦cantly affect its accuracy and ability to make accurate
predictions. To gather data for crop yield detection using random forests, one must collect data on various environmental factors that affect crop growth and
yield, such as soil type, temperature, rainfall, sunlight, and fertilizers used. The data must be collected from different farms, regions, and seasons to ensure a
diverse dataset. Once the data is collected, it must be preprocessed, cleaned, and prepared for training the random forest model. The dataset should be split
into training, validation, and testing sets to prevent over¦tting and ensure the model's generalizability. The random forest algorithm is a powerful tool for crop
yield detection as it can handle high- dimensional datasets with non-linear relationships between variables. It works by creating multiple decision trees and
combining them to make predictions. Each tree is trained on a random subset of the features and a subset of the training data to reduce the risk of over¦tting
Page 11/20
[41]. Overall, data gathering is a critical step in machine learning using the random forest algorithm to detect crop yield. By collecting high-quality and diverse
data, preprocessing it, and training the model, we can accurately predict crop yield and optimize farming practices for improved crop production. The predicted
data set is observed from a village to detect the crop yield as shown in ¦gure 4. At the settlement, the information is taken into account as latitude varies from
place to place. To operate the system, information on the crop, the climate in a speci¦c village, and the region are three necessary elements.
1. Data processing: In machine learning, data processing is a critical stage that involves transforming raw data into a format that can be easily analysed by
algorithms. The data processing stage typically includes several steps, such as data cleaning, data transformation, feature extraction, and data splitting. Data
cleaning involves removing any irrelevant or duplicate data, correcting errors, and handling missing data. Data transformation involves scaling, normalizing, or
encoding the data to ensure that it is in a standardized format. Feature extraction involves selecting the most relevant features that have a strong correlation
with the target variable [42]. After completing these steps, the data is usually divided into training, validation, and testing sets. The training set is used to train
the machine learning model, while the validation set is used to evaluate the model's performance during training. Finally, the testing set is used to evaluate the
model's performance on unseen data. Overall, the data processing stage is essential for ensuring the quality of the data and the accuracy of the machine
learning model [43]. Proper data processing can lead to better model performance, faster training times, and more accurate predictions. The testing and
training phase is implemented in Matlab as shown below:
2. Feature extraction: A crucial stage in machine learning is feature extraction, which entails choosing and manipulating pertinent information from raw data
to produce instructive features for predictive models. Features like soil type, weather patterns, and crop health can all be identi¦ed and studied using feature
extraction techniques to increase production in agriculture [44]. Some common techniques for feature extraction in agriculture include:
Remote sensing: Using satellites or drones to capture images of crop ¦elds, which can then be analysed to extract features such as vegetation index,
crop growth stage, and soil moisture.
Sensor data: Collect data from sensors such as soil moisture sensors, temperature sensors, and weather stations to extract features such as
temperature, humidity, rainfall, and soil nutrients.
Data fusion: Combining data from multiple sources, such as remote sensing and sensor data, to create more informative features for predictive modelling.
Data pre-processing: Transforming raw data into more useful features, such as scaling, normalization, and dimensionality reduction techniques. By using
feature extraction techniques in agriculture, machine learning models can be trained to predict crop yields, identify areas for improvement, and optimize
resource allocation, leading to improved productivity and pro¦tability for farmers.
3. Model selection: Model selection is an important step in machine learning in agriculture to improve productivity. It involves choosing the most appropriate
machine learning algorithm and model for a speci¦c agricultural problem. Here are some key considerations for model selection in agriculture:
Data quality: The quality and quantity of data available are critical for selecting an
appropriate machine learning algorithm and model. Ensure that the data is representative, unbiased, and of high quality.
Complexity: Agricultural systems can be complex, with many variables and interactions. Consider the complexity of the problem when selecting a model.
Simple models such as linear regression may work for simple problems, while more complex models such as neural networks or decision trees may be needed
for more complex problems. Interpretability: Interpretability is important in agriculture, as it allows for the understanding of the model's decision-
making process. More interpretable models, such as decision trees, may be preferred over less interpretable models such as neural networks.
Performance: The performance of the model is a key consideration. Evaluate the model's performance using appropriate metrics such as accuracy, precision,
recall, and F1 score. Consider the trade-off between model performance and interpretability.
Scalability: Consider the scalability of the model, as agricultural systems often involve large amounts of data. Models that can handle large volumes of data,
such as deep learning models, may be preferred. Overall, selecting the right machine learning model can help improve agricultural productivity by enabling
better decision-making, predicting crop yields, detecting disease outbreaks, and optimizing resource allocation. Here random forest algorithm is initiated to
enhance productivity.
4. Optimization algorithm: Random Forest is a machine-learning algorithm that can be used for classi¦cation and regression tasks. While it can be applied to
various ¦elds, including agriculture, it is not speci¦cally designed to extract maximum yield in agriculture. That being said, Random Forests can be used in
agriculture to make predictions based on input variables such as soil type, weather conditions, and crop variety. For example, a Random Forest model could be
Page 12/20
trained to predict crop yield based on factors such as temperature, rainfall, soil pH, and fertilizer application rates. The model could then be used to optimize
crop management decisions, such as adjusting irrigation schedules, choosing optimal planting dates, and selecting the most effective fertilizers and
pesticides. To train a Random Forest model for agricultural applications, data must ¦rst be collected and pre-processed [45]. This might involve gathering data
on crop yield, weather conditions, soil properties, and other relevant factors from past growing seasons. Once the data is collected, it can be split into training
and testing sets to evaluate the performance of the model. The Random Forest algorithm works by creating a multitude of decision trees, each trained on a
subset of the data. The algorithm randomly selects a subset of the available features at each split point, which helps to reduce over¦tting and improve
generalization. During training, the algorithm measures the accuracy of each decision tree on the training set and uses this information to build a consensus
model that combines the predictions of all the trees as shown below:
In this code, we ¦rst load the dataset and split it into training and testing sets using the divider and function. The optimized hyperparameters (x_opt) are used
to train the ¦nal random forest model using the TreeBagger function. The model is then used to predict the test set and the accuracy of the model is calculated
as the RMSE. Note that this code assumes that the crop_yield_data.mat ¦le contains a matrix X of features and a vector y of corresponding yields. The
hyperparameters being optimized are the minimum leaf size (x(1)), the number of variables to sample (x(2)), and the maximum number of splits (x(3)). Once
the model is trained, it can be used to predict crop yield based on input variables such as weather data and soil properties [46]. The accuracy of the model can
be evaluated using the testing set, and adjustments can be made to improve its performance. In summary, Random Forests can be used in agriculture to
predict crop yield and optimize management decisions. To train a Random Forest model for agricultural applications, data must be collected and pre-
processed, and the model must be evaluated using a testing set as represented in ¦gure 5.
5. Model evaluation: The model evaluation process in machine learning (ML) involves assessing the performance of a trained model on a set of test data to
determine its accuracy, precision, recall, and other evaluation metrics. In the context of agriculture, one popular ML algorithm is the Random Forest algorithm,
which is commonly used for tasks such as crop yield prediction, pest detection, and soil quality assessment. Here is a step-by-step process for evaluating a
Random Forest model in agriculture:
Collect and preprocess data: Collect data related to the agricultural problem at hand, such as soil data, weather data, crop growth data, etc. Preprocess
the data by removing missing values, scaling features, and converting categorical variables into numeric form.
Split the data: Split the preprocessed data into two parts: training data and test data. The training data is used to train the Random Forest model, while the test
data is used to evaluate the model's performance.
Train the model: Train the Random Forest model on the training data. The model should be tuned to obtain the best results.
Test the model: Test the model on the test data. The test data should be completely separate from the training data to avoid bias.
Evaluate the model: Evaluate the performance of the model using various evaluation metrics such as accuracy, precision, recall, F1 score, confusion matrix,
etc. These metrics will provide insight into how well the model is performing and whether it is suitable for the given agricultural problem. Adjust the model: 
Based on the evaluation results, adjust the model parameters or the preprocessing steps to improve the model's performance.
Finalize the model: After obtaining satisfactory results, ¦nalize the model and deploy it for practical use. Overall, the model evaluation process in MI using
Random Forest in agriculture involves collecting and preprocessing data, splitting it into training and test data, training and testing the model, evaluating its
performance using various metrics, and adjusting the model as needed to achieve optimal results.
Page 13/20
6. Performance analysis and outcome: The proposed system is applied in Matlab Simulink to assess the optimum results as demonstrated in ¦gure 6.
The confusion matrix is a performance evaluation tool that is widely used in machine learning to measure the accuracy of a model's predictions. In the context
of a random forest algorithm for agricultural yield enhancement, a confusion matrix can be used to evaluate the accuracy of the model in predicting crop yield
based on a set of input variables such as soil type, weather conditions, and crop variety. 
The confusion matrix is a table that summarizes the performance of a classi¦cation model by comparing the actual and predicted values [47]. 
It consists of four different components: true positive (TP), true negative (TN), false positive (FP), and false negative (FN1).
In the context of agricultural yield enhancement, these components can be de¦ned as follows:
True positive (TP): The number of times the model correctly predicted a high-yield crop when the actual yield was high.
True negative (TN): The number of times the model correctly predicted a low-yield crop when the actual yield was low.
False positive (FP): The number of times the model incorrectly predicted a high-yield crop when the actual yield was low.
False negative (FN): The number of times the model incorrectly predicted a low-yield crop when the actual yield was high.
The confusion matrix can be used to calculate several performance metrics for the model, such as accuracy, precision, recall, and F1-score. These metrics can
provide insights into how well the model is performing and can help identify areas for improvement.
V. COMPARATIVE ANALYSIS
TABLE I: Machine learning algorithm
Machine
learning
algorithm
Algorithm description
CNN
The Convolutional Neural Network (CNN) algorithm has shown great potential in various ¦elds, including agriculture crop yield prediction.
CNNs can learn complex patterns and relationships in high- dimensional data, making them suitable for analyzing crop images and
predicting yield. In agriculture crop yield prediction, CNNs are used to analyze crop images captured by drones or other aerial vehicles. The
images are pre-processed and then fed into the CNN to extract features and learn patterns. The CNN then makes predictions on the yield
based on the features extracted from the images [48]. CNNs have been used to predict crop yields for various crops, including maize, wheat,
and rice. The predictions made by CNNs are accurate and reliable and can help farmers make informed decisions about crop management.
Overall, CNNs have the potential to revolutionize agriculture by providing accurate crop yield predictions, which can help farmers optimize
crop management practices and increase crop yields.
SVM
Support Vector Machines (SVM) is a machine learning algorithm that can be used in agriculture to predict crop yield. SVM is a supervised
learning technique that is used for classi¦cation and regression analysis. It works by ¦nding the best decision boundary that separates the
data points into different classes or predicts the value of the target variable. In agriculture, SVM can be used to predict crop yield based on
various input features such as soil quality, weather conditions, and farming practices. The algorithm can analyze these features and create
a model that can predict the crop yield for a given set of input data [49]. The use of SVM in agriculture can help farmers make informed
decisions about planting and harvesting crops. By analyzing historical data, SVM can predict the optimal time to plant a crop, the best
fertilizers to use, and the ideal harvesting time. This can help farmers increase their crop yields and reduce the risk of crop failure.
RNN
Recurrent Neural Network (RNN) is a type of deep learning algorithm that can be used in agriculture to predict crop yields. RNNs are
particularly useful for time-series data, where the data points are collected at regular intervals, such as daily or monthly. In agriculture, RNNs
can be used to analyze a variety of factors that affect crop yields, including weather patterns, soil moisture, and fertilizer usage. By
analyzing this data over time, RNNs can identify patterns and make predictions about future crop yields.
RNNs work by processing inputs sequentially, with each new input being in§uenced by the previous inputs [50]. This allows the model to
capture the temporal dependencies between the data points, which is important in time-series analysis. The output of an RNN is a prediction
of the next value in the sequence. Overall, the use of RNN algorithms in agriculture can help farmers make more informed decisions about
when to plant and harvest their crops, as well as how much fertilizer to apply and how often to water their crops. By predicting crop yields
more accurately, farmers can increase their productivity and pro¦tability, while also reducing waste and environmental impact.
Regression
algorithm
To forecast crop yield, regression methods can be employed in agriculture. These algorithms can examine several variables that affect
agricultural output, including weather patterns, soil quality, and fertilizer application rates. The program analyses past crop yield data as
well as data on the variables that affect crop output to forecast crop yield in the future. Farmers may enhance crop yields and decrease
waste by using this data to drive their decisions about when to plant, how much fertilizer to use, and when to harvest. Regression algorithms
are useful for forecasting crop yields, and modern agriculture is using them more frequently.
kNN
The k-Nearest Neighbors (kNN) algorithm is a machine learning technique used to classify data based on similarity measures. In agriculture,
kNN can be used to predict crop yields by analyzing historical data on crop yields and environmental factors such as temperature, rainfall,
and soil nutrient levels. To use the kNN algorithm in agriculture crop yield prediction, the ¦rst step is to gather relevant data on past crop
yields and environmental factors for a given region. This data can be used to train the algorithm and create a model that can predict future
crop yields based on new environmental data. Once the model is trained, it can be used to predict crop yields for a speci¦c location by
comparing its environmental data to the historical data in the training set. The kNN algorithm identi¦es the k-nearest neighbors to the new
data point and assigns a yield prediction based on the average yield of those neighbors. Using the kNN algorithm in agriculture crop yield
prediction can help farmers optimize their crop production by providing accurate predictions of future crop yields. This information can be
used to adjust crop management practices and make informed decisions about crop selection and planting schedules.
Table I denotes the classi¦cation of the machine learning algorithm.
TABLE II: Crop yield prediction
Page 14/20
Crop
Input data
Algorithm model
Optimum output
Maize
Weatherandsatellite
spectral data
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
(1) Corn yield: RF (R2 = 7.73); (2) CNN: NN (R2 = 0.54); (3) SVM: NN (R2 = 
0.67); (4) RNN (R2 = 0.651); (5) kNN (R2 = 0.722);
(6)Regression algorithm (R2 = 0.38)
Cotton
Multispectralaerial
images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Yield: RF (R2 = 9.73);
(2) CNN: NN (R2 = 0.54); (3) SVM: NN (R2 = 1.67); (4) RNN (R2 = 2..651); (5)
kNN (R2 = 3..432); (6) Regression algorithm (R2 = 0.38)
Tomato
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression
algorithm
NN: RMSE = 0.656 tha − 1, R2 = 0.76; (2) PLSR: RMSE = 0.83 tha − 1, R2 = 
0.76
Potato
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Reduced dataset: LB: MAE = 7.95%, R2 =
0.59; (2) No feature selection: SVM: MAE = 9.64%, R2 = 0.63; (3) 1–2 months
before harvest: RF: MAE = 8.71%, R2 = 0.89
Turmeric
RGB images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
Acc values: ANN: 90%, MLR: 28%
Soya
bean
Multispectralaerial
images
Randomforest algorithm, CNN, SVM,
RNN, kNN, regression algorithm
R2 values:(1)SVM: 0.64; (2) RF: 0.98; (3)
ANN: 0.88
DNN (1) Corn: 28–31%
moreaccurate(2)
Soybean: 20–22% more accurate
Rice
Weatherandsatellite
spectral data
Randomforest
algorithm, CNN, SVM,
RF: RMSE = 0.985,
MAE = 0.03, R = 0.87
 
 
RNN, kNN, regression
algorithm
 
Table II determines the crop yield prediction using various machine learning algorithms to obtain the optimum results. This shows that the random forest
algorithm helps to obtain the optimum results. Numerous challenges in agriculture have been successfully solved using random forest algorithms. They are
favored over many other algorithms for a variety of reasons.
First of all, farmers can make better decisions because of random forest algorithms' high accuracy, which is crucial in agriculture. Farmers can properly
forecast crop yields, spot disease outbreaks, and make better- informed decisions about irrigation and fertilizer use by employing random forest algorithms.
Secondly, random forest algorithms are highly robust to outliers, noise, and missing data. This is particularly important in agriculture, where data can be noisy
and incomplete due to various factors like weather conditions, soil quality, and pest attacks.
Thirdly, random forest algorithms provide feature importance, which means that they can identify the most important variables that in§uence the outcome of
a particular problem. This is helpful in agriculture, where farmers can use this information to focus their efforts on the most critical variables.
Finally, random forest algorithms are scalable and can handle large datasets, making them suitable for agriculture, where large amounts of data are generated
from various sources.
Overall, the high accuracy, robustness, feature importance, and scalability of random forest algorithms make them an excellent choice for solving problems in
agriculture.
TABLE III: Comparative Performance Matrix
Pot
Accuracy
Precision
Recall
F1 score
CNN
0.51
0.43
0.37
0.5
SVM
0.46
0.42
0.42
0.3
Regression algorithm
0.62
0.21
0.54
0.7
Random forest algorithm
0.998
0.77
0.8
0.9
kNN
0.36
0.41
0.5
0.7
Table II denotes the comparative performance analysis using various optimization algorithms. This shows that the random forest algorithm provides the
optimum output.
Page 15/20
Future trends of AI in agriculture:
The future of agriculture is being shaped by arti¦cial intelligence (AI) and machine learning (ML) technologies. These technologies have the potential to
revolutionize the industry by improving crop yields, reducing waste, and making farming more e¨cient and sustainable One trend that is expected to gain
traction is precision farming. By using AI and ML algorithms, farmers can monitor crop health, water usage, and soil quality in real-time, enabling them to
make data-driven decisions and optimize resource allocation. This can lead to higher yields, lower costs, and reduced environmental impact. Another trend is
the development of autonomous farming equipment. Self-driving tractors and other machines equipped with AI and ML algorithms can navigate ¦elds, detect
and remove weeds, and plant crops with precision, reducing the need for human labor and increasing e¨ciency. AI-powered predictive analytics is also
expected to play a signi¦cant role in agriculture. By analyzing historical data and real-time weather and soil conditions, farmers can predict crop yields and
identify potential issues before they become signi¦cant problems. Overall, AI and ML technologies have the potential to transform agriculture, making it more
sustainable, e¨cient, and productive. As these technologies continue to develop and become more accessible, they will help farmers address the challenges of
feeding a growing global population while protecting the environment.
VI. CONCLUSION
Using machine learning in agriculture with optimization aims to raise crop yields, decrease resource waste, and boost farmer pro¦tability. For the best planting,
irrigation, fertilization, and pest management practices, machine learning models can analyze a signi¦cant quantity of data on crop development, soil
characteristics, weather patterns, and other factors. The agricultural process can be further enhanced by introducing optimization algorithms into the machine
learning models to discover the optimum solutions to issues like crop rotation, water management, and harvesting schedules. This may result in less waste,
more effective use of resources, and eventually higher yields and more pro¦tability for farmers. Overall, using machine learning and optimization in agriculture
can help farmers overcome some of the di¨culties they encounter, including the need to produce more food with fewer resources and the rising need for
sustainable farming methods.
Declarations
Author contributions All the authors have participated in writing the manuscript and have revised the ¦nal version. All authors read and approved the ¦nal
manuscript.
Funding There is no funding for this study.
Compliance with Ethical Standards
Con§ict of interest The Authors declare that they have no con§ict of interest.
Ethical approval This article does not contain any studies with human participants and/or animals performed by any of the authors.
Informed consent  There is no informed consent for this study.
References
1. Zhang J, Zhou L, Chen Z (June 2019) IEEE Trans Industr Inf 15:3389–3397. 10.1109/TII.2018.2883057. "Precision Agriculture Based on Big Data and
Machine Learning,"
2. Sun C, Liu X, Li S (2020) "A Decision Support System for Precision Agriculture Based on Internet of Things and Machine Learning," in IEEE Access, vol. 8,
pp. 24337–24345, doi: 10.1109/ACCESS.2020.2977065
3. Liu X, Sun C, Huang W (2020) "Agricultural Crop Yield Prediction Based on Machine Learning and Internet of Things," in IEEE Access, vol. 8, pp. 145045–
145054, doi: 10.1109/ACCESS.2020.3017665
4. Li H et al (2019) An Intelligent Agricultural System Based on Internet of Things and Machine Learning. IEEE Access 7:74911–74919.
10.1109/ACCESS.2019.2921574
5. Wu X et al (2018) "A Machine Learning Approach for Crop Yield Prediction Based on Remotely Sensed Data," in IEEE Transactions on Geoscience and
Remote Sensing, vol. 56, no. 10, pp. 5747–5758, doi: 10.1109/TGRS.2018.2833874
½. Liu Y, Zhang Z, Zhang X (2020) "Smart Agriculture with IoT, Big Data and Arti¦cial Intelligence," in IEEE Access, vol. 8, pp. 69535–69544, doi:
10.1109/ACCESS.2020.2982109
7. Yu X et al (May 2019) Deep Learning for Crop Yield Prediction Based on Multi-source Data. IEEE Trans Industr Inf 15(5):2636–2644.
10.1109/TII.2018.2867070
¾. Rahman A et al (2019) "A Smart Irrigation System Based on IoT and Machine Learning," in IEEE Access, vol. 7, pp. 64197–64207, doi:
10.1109/ACCESS.2019.2911565
9. Tao D et al (2021) "A Deep Learning Approach to Rice Growth Stage Recognition Based on Multiple Types of Sensor Data," in IEEE Transactions on
Industrial Informatics, vol. 17, no. 2, pp. 1076–1084, doi: 10.1109/TII.2020.2992874
10. Wang H, Zhang X, Liu Y (2020) Smart Greenhouse Monitoring System Based on IoT and Machine Learning. IEEE Access 8:34844–34851.
10.1109/ACCESS.2020.2973531
Page 16/20
11. Yang K, Li Y, Cai Z, Huang W (2019) "Agricultural Expert System Based on Random Forest Algorithm," IEEE International Conference on Smart Cloud
(SmartCloud), 2019, pp. 289–294, doi: 10.1109/SmartCloud.2019.00062
12. Bao L, Li X, Xie L, "Research on Agricultural Drought Monitoring Based on Random Forest Algorithm," (2020) IEEE International Conference on Smart Grid
and Clean Energy Technologies (ICSGCE), 2020, pp. 409–412, doi: 10.1109/ICSGCE50895.2020.9370904
13. Zhang Y, Shen X, Wang X, Yang H, "Prediction of Crop Yields Using a Random Forest Algorithm," 2019 IEEE International Conference on Computational
Science and Engineering (CSE) and IEEE International Conference on Embedded and, Computing U (2019) (EUC), pp. 353–357, doi:
10.1109/CSE/EUC.2019.00062
14. Gao J, Zhang H, Xu S, Wang Z, Guo X (2019) "Identi¦cation of Maize Growth Stages Based on Random Forest Algorithm," 2019 IEEE 5th International
Conference on Computer and Communications (ICCC), pp. 2165–2169, doi: 10.1109/CompComm.2019.8936046
15. Zhang J, Chen W, Li Z (2019) "Prediction of Wheat Yield Based on Random Forest Algorithm," 2019 IEEE 4th International Conference on Advanced
Robotics and Mechatronics (ICARM), pp. 528–533, doi: 10.1109/ICARM.2019.8834104
1½. Li J, Yang Y, Li Z, Gao J, "Prediction of Rice Yield Based on Random Forest Algorithm," 2019 IEEE International Conference on Arti¦cial Intelligence and,
Applications C (2019) (ICAICA), pp. 68–72, doi: 10.1109/ICAICA47620.2019.00020
17. Wu C, Zhang X, Cao Y, Chen Y (2019) "Detection of Tomato Diseases Using a Random Forest Algorithm," 2019 IEEE International Conference on Robotics
and Automation Sciences (ICRAS), pp. 901–906, doi: 10.1109/ICRAS.2019.8932379
1¾. Liu Y, Zhang L, He Z, "Research on the Prediction of Tea Yield Based on Random Forest Algorithm," (2019) IEEE 6th International Conference on Energy
Smart Systems (ESS), 2019, pp. 13–17, doi: 10.1109/ESS.2019.8888863
19. Li H, Wang Y, Li S, Huang J, "Research on Soil Nutrient Prediction Based on Random Forest Algorithm, (2019) " 2019 IEEE 5th International Conference on
Big Data Analytics (ICBDA), pp. 104–108, doi: 10.1109/ICBDA.2019.8754318
20. Yang Y, Chen J, Zhang M, Zhao Z, "Research on Fruit Classi¦cation Based on Random Forest Algorithm," 2020 IEEE International Conference on Arti¦cial
Intelligence and, Engineering C (2020) (ICAICE), pp. 134–137, doi: 10.1109/
21. Singh M, Singh P, Singh A (March 2014) Application of genetic algorithm in agriculture: a review. Int J Comput Appl 90(5):1–7
22. Ramesh MV, Suresh S (June 2011) Optimization of irrigation scheduling using genetic algorithm. IEEE Trans Instrum Meas 60(6):2021–2027
23. Das SS, Dash SK, Barik RN "Optimization of fertilizer application using genetic algorithm," in Proceedings of the 2014 IEEE International Conference on
Computer and Information Technology (CIT), pp. 598–603
24. Luu TV, Ain MF, Zulki§i Z (2016) "Application of genetic algorithm in crop yield optimization," in Proceedings of the IEEE Conference on Open Systems
(ICOS), pp. 50–54
25. Benos L, Tagarakis AC, Dolias G, Berruto R, Kateris D, Bochtis D (2021) Machine Learning in Agriculture: A Comprehensive Updated Review. Sensors
21:3758. https://doi.org/10.3390/s21113758
2½. Patil SB, Kulkarni RV (April 2015) Genetic algorithm-based decision support system for crop yield prediction. IEEE Trans Industr Inf 11(2):400–408
27. Zahraei SH, Jafari MJ (2017) "Optimization of greenhouse cultivation parameters using genetic algorithm," in Proceedings of the IEEE International
Conference on Industrial Engineering and Engineering Management (IEEM), pp. 916–920
2¾. Song HH, Lee JH (2015) "Design and implementation of a genetic algorithm-based greenhouse environment control system," in Proceedings of the IEEE
International Conference on Consumer Electronics (ICCE), pp. 139–140
29. Lu T, Wang Y "Optimization of aquaponic systems using genetic algorithm," in Proceedings of the 2016 IEEE International Conference on Intelligent
Transportation, Big Data & Smart City (ICITBS), pp. 224–227
30. Chen L, Han C, Chen Y "Design of an intelligent irrigation system based on genetic algorithm," in Proceedings of the 2014 IEEE International Conference on
Mechatronics and Automation (ICMA), pp. 635–640
31. Li J, Liang J, Zhang S, Li Y (2019) Optimizing drip irrigation system design using a modi¦ed particle swarm optimization algorithm. IEEE Access
7:72758–72766
32. Jayasree SN, Subramanian P (2019) "Optimal design of greenhouse based on particle swarm optimization," in 2019 International Conference on
Electrical, Electronics and Communication Engineering (ICEECE), Chennai, India, pp. 1–4
33. Liu Y, Shao Q, Xu X, Zhang Z (2020) "Optimizing agricultural water allocation with particle swarm optimization algorithm," in 2020 3rd International
Conference on Intelligent Transportation, Big Data & Smart City (ICITBS), Shenzhen, China, pp. 386–389
34. Zhao J, Wang J, Sun H (2018) "Optimization of irrigation scheduling based on particle swarm optimization," in 2018 IEEE 3rd Advanced Information
Technology, Electronic and Automation Control Conference (IAEAC), Chongqing, China, pp. 496–500
35. Lin HY, Shen TM (2018) "Optimization of nutrient management in agriculture using particle swarm optimization," in 2018 4th International Conference on
Green Energy and Applications (ICGEA), Singapore, pp. 246–250
3½. Xu J, Wang D, Zhang J (2020) "A particle swarm optimization algorithm for optimizing irrigation scheduling in precision agriculture," in 2020 IEEE 5th
Information Technology and Mechatronics Engineering Conference (ITOEC), Chongqing, China, pp. 527–530
37. Li X, Li Z, Wang J (2020) "Optimizing irrigation management in farmland based on particle swarm optimization," in 2020 5th International Conference on
Electrical and Information Technologies (ICEIT), Xi'an, China, pp. 498–502
3¾. Zhao Y, Wang J, Hu Y (2020) "Optimizing the allocation of fertilizer in farmland based on particle swarm optimization," in 2020 IEEE 4th Information
Technology and Mechatronics Engineering Conference (ITOEC), Chongqing, China, pp. 360–363
Page 17/20
39. Zhang Y, Yang L, Liu H (2020) "Optimization of crop planting layout based on particle swarm optimization algorithm," in 2020 12th International
Conference on Computational Intelligence and Security (CIS), Chongqing, China, pp. 39–42
40. Kulkarni KS, Pawar PG, Patil PG (2015) "Precision farming using k-means clustering algorithm," 2015 International Conference on Pervasive Computing
(ICPC), Pune, India, pp.1–4
41. Al-Qahtani AR, Nawi NM, Yaakob SS (2016) Cluster analysis of soil fertility parameters using k-means algorithm. 2016 IEEE 12th International Colloquium
on Signal Processing & Its Applications (CSPA). Melaka, Malaysia, pp 245–250
42. Rahman MSS, Hasan MM, Mottaleb MA (2019) "K-means clustering for rice yield prediction in Bangladesh," 2019 International Conference on Electrical,
Computer and Communication Engineering (ECCE), Cox's Bazar, Bangladesh, pp. 1–6
43. Abdulghani MA, Abduljabbar NA, Al-Sawa¦ RA, International Conference on Intelligent Computing and, Applications I (2018) (ICICA), Penang, Malaysia,
2018, pp. 88–93
44. Singh SK, Singh K, Singh SP (2016) "Application of k-means clustering algorithm for crop yield prediction," International Conference on Advances in
Computing, Communication, & Automation (ICACCA), Dehradun, India, 2016, pp. 1–5
45. Liu J, Wang Y, Li J (2017) "Agricultural crop classi¦cation based on k-means clustering algorithm," IEEE International Conference on Computational
Intelligence and Virtual Environments for Measurement Systems and Applications (CIVEMSA), Annecy, France, 2017, pp. 1–5
4½. Hossain SE, Hossain MA, "K-means clustering algorithm for improved agricultural productivity in Bangladesh," 2018 3rd International Conference on
Electrical and, Engineering E (2018) (ICEEE), Dhaka, Bangladesh, pp. 1–6
47. Paul BK, Islam MA (2017) "Application of k-means clustering algorithm for precision agriculture," International Conference on Electrical, Computer and
Communication Engineering (ECCE), Cox's Bazar, Bangladesh, 2017, pp. 431–436
4¾. Al-Qahtani AR, Nawi NM, Yaakob SS, IEEE International Conference on Innovative Research and, Development (2016) (ICIRD), Manila, Philippines, 2016,
pp. 1–5
49. Sutar SR, Bhowate SS, Deshmukh SD (2015) "Agricultural decision making using k-means clustering algorithm," 2015 International Conference on
Electrical, Electronics, Signals, Communication and Optimization (EESCO), Visakhapatnam, India, pp. 1–5
50. Fan C, Liu Q, Chen J (2018) "Optimization of farmland irrigation scheduling based on particle swarm optimization algorithm," in 2018 15th International
Conference on Control, Automation, Robotics and Vision (ICARCV), Singapore, pp. 1–6
Figures
Figure 1
Role of AI in agriculture
Page 18/20
Figure 2
Factors to enhance productivity
Figure 3
Proposed system
Page 19/20
Figure 4
Crop production in a particular village (dataset)
Figure 5
Random forest algorithm
Page 20/20
Figure 6
Matlab Implementation


Paper 2:
- APA Citation: Premkumar, S., & Sigappi, A. N. (2022). IoT-enabled edge computing model for smart irrigation system. Journal of Intelligent Systems, 31(6), 632–650. https://doi.org/10.1515/jisys-2022-0046
  Main Objective: To develop and evaluate an automated, real-time irrigation management system that integrates IoT and machine learning technologies to handle data heterogeneity, uncertainty, and quality issues in real-time insight generation.
  Study Location: Unspecified
  Data Sources: Sensor data (soil moisture, temperature, humidity), weather forecast data
  Technologies Used: IoT sensors, Raspberry Pi, cloud services, XGBoost algorithm, k-means clustering
  Key Findings: The proposed hybrid machine learning algorithm, XGBoost + k-means, effectively predicts soil moisture, leading to more efficient irrigation scheduling. The edge-based system outperforms the cloud-based system in terms of response time, latency, throughput, bandwidth, and resource utilization.
  Extract 1: The proposed hybrid machine learning algorithm, namely, XGBoost + k-means (XB + k-means), is applied in irrigation planning module on account of aforementioned performance metrices of ML.
  Extract 2: XB + k-means-based hybrid machine learning algorithm is applied in irrigation planning module on account of aforementioned performance metrices of ML. Although it performs moderately in terms of execution time and power usage, it is selected for the deployment in edge computing as it has better performed in terms of accuracy, R2, MSE, and MAPE metrices.
  Limitations: Limited scope to addressing factors beyond soil moisture and weather data, such as crop type, soil characteristics, and environmental conditions. Focused on a specific region and dataset, which may limit generalizability to other contexts. Limited discussion on security and privacy considerations, which are important in IoT systems.
  Relevance Evaluation: This study is highly relevant to the point being made in the literature review, which is the exploration of automated, real-time irrigation management systems that integrate IoT and machine learning technologies. The study specifically addresses the challenge of handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, which is a key requirement for effective irrigation management. The authors propose a novel approach that combines supervised and unsupervised machine learning algorithms to predict soil moisture, and they evaluate the performance of their system in terms of various metrics, demonstrating its effectiveness and efficiency.
  Relevance Score: 1.0
  Inline Citation: (Premkumar & Sigappi, 2022)
  Explanation: This study presents a system that uses real-time data from sensors and weather forecasts to predict soil moisture for automated irrigation management. The system combines supervised and unsupervised machine learning algorithms to develop a hybrid algorithm, Soil Moisture Prediction Hybrid Algorithm (SMPHA), which uses regression algorithms and k-means clustering to predict changes in soil moisture due to weather conditions. The authors evaluate various machine learning algorithms and find that XGBoost + k-means outperforms other combinations, and thus, deploy it in their proposed edge-based irrigation system. The edge-based system uses Raspberry Pi as an edge server to process data and control actuators, and it communicates with cloud services to download trained models and store data. The authors evaluate the performance of their system in terms of response time, latency, throughput, bandwidth, and resource utilization and find that the edge-based system outperforms the cloud-based system in all metrics. They also demonstrate that the SMPHA model effectively predicts soil moisture, leading to more efficient irrigation scheduling.

 Full Text: >
Research Article
S. Premkumar* and AN. Sigappi
IoT-enabled edge computing model for smart
irrigation system
https://doi.org/10.1515/jisys-2022-0046
received January 10, 2022; accepted March 16, 2022
Abstract: Precision agriculture is a breakthrough in digital farming technology, which facilitates the appli-
cation of precise and exact amount of input level of water and fertilizer to the crop at the required time for
increasing the yield. Since agriculture relies on direct rainfall than irrigation and the prediction of rainfall
date is easily available from web source, the integration of rainfall prediction with precision agriculture
helps to regulate the water consumption in farms. In this work, an edge computing model is developed for
predicting soil moisture in real time and managing the water usage in accordance with rain prediction. A
soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves around the decision-
making techniques with live environmental parameters including weather parameters for the prediction of
soil moisture through the impact of precipitation. Numerous algorithms with the combination of regression
+ clustering are estimated, and it is inferred that XGBoost + k-means outperforms other algorithmic com-
binations that is deployed in edge model. This model is used as an intermediary between the end IoT
devices and cloud that results in the saving of computationally intensive processing performed on cloud
servers. The servers located on a local edge network perform the developed algorithmic computations.
Avoiding transmission over the cloud results in signiﬁcant latency, response time, and computation power
savings and therefore increases the eﬃciency of data transfer. The proposed edge computing model is
implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes as the combination of Pi with
actuators and sensors. The monitored data from Pi are stored in MongoDB webserver that is controlled by
Web dashboard. Finally, the developed model is implemented in cloud and edge where the edge server
implementation performs better in terms of latency, bandwidth, throughput, response time, and CPU
memory usage.
Keywords: smart irrigation, edge-based irrigation, edge computing, precision agriculture, soil moisture
prediction, irrigation management system, IoT, oﬄoading mechanism
1 Introduction
It is evident that agriculture always has a specialized role in the anthrophonic evolution and has been
serving as an important economic factor for the growth of a country [1]. Around 58% of the population
depend on agriculture as the chief source of livelihood in India. The quality and productivity of agricultural
products have declined over these years as several factors have inﬂuenced the crop productivity both
directly and indirectly. Some major factors that aﬀect the crop production are climatic changes, global
warming, and water scarcity [2]. The agricultural land’s productivity is aﬀected by the direct and indirect

* Corresponding author: S. Premkumar, Department of Computer Science and Engineering, Faculty of Engineering and
Technology, Annamalai University, Chidambaram - 608002, Tamilnadu, India, e-mail: premambal@gmail.com
AN. Sigappi: Department of Computer Science and Engineering, Faculty of Engineering and Technology, Annamalai University,
Chidambaram - 608002, Tamilnadu, India, e-mail: an.sigappi@gmail.com
Journal of Intelligent Systems 2022; 31: 632–650
Open Access. © 2022 S. Premkumar and AN. Sigappi, published by De Gruyter.
This work is licensed under the Creative
Commons Attribution 4.0 International License.
changes in climate [3,4]. The crop growth has been already aﬀected by the changes in climate incurred by
global warming. The nutrition quality of soil, ground water level, sea, and ocean are aﬀected by the
modiﬁcations in average temperature, rainfall, and extreme weather conditions such as hail storms, dust
storms, heatwaves, etc. due to global warming [5,6]. Degradation of soil is primarily created by various
methods including 93.7% by water erosion, 9.5% by wind erosion, 5.9% by salinity and alkalinity, etc.
Further changes in climate would inﬂuence adversely the crop production [7]. Since water is an indispen-
sable requirement for plants and cultivation, the high level of soil is eroded and thereby the fertility is also
declined. Due to the ever-changing climate, water scarcity has become a huge problem. Drought-like
conditions is already formed in several areas and thereby the present and conventional farming practices
are not suitable. New and unique environment preserving techniques are the need of the hour [8].
The conventional approaches in agriculture are enhanced by the advent of several advancements in
technology [9]. These new improved methodologies ensure optimized utilization of resources, accurate
forecast of water needs and environmental parameters, reduction of human intervention, etc. [10]. Conse-
quently, the outcomes of crops in terms of yield and quality are higher with cost-eﬀective methods. One
such booming technology is the Internet of things (IoT) [11].
IoT is the collection of components embedded in the sensor for measuring and transferring data via
network devices as sensed from pumps and tractors to weather stations. Primarily, IoT deals with the
transmission and reception of data related to farms through devices using the Internet for prediction
and providing decisions to the farmers. IoT-based methodologies has brought a changeover in agricultural
patterns and farming approaches [12]. IoT devices can gather information about soil moisture, chemical
properties, dam levels, livestock health, and weather details in real time. The information acquired from IoT
devices facilitates the farmers in tracking farms periodically. Farmers can save time and money by
responding faster to farm conditions. Cloud computing models integrated with on-ﬁeld agricultural sensors
need to be incorporated for tackling the issue of processing huge voluminous data.
One of the major challenges of IoT is the processing of huge datasets in a sequential way. Some of the
key factors that need to be focused on this process are as follows: information about the type and nature of
data, the way of acquiring the data, etc. The preliminary stage comprises acquiring the data and ingesting
the data to the system. Substantial cognizance of data are achieved as the data pass through all the
gateways where it is cleansed and transformed before entering into the system. In the near future, dynamic
prediction of soil moisture and precipitation techniques are to be developed for smart irrigation systems.
Therefore, a system is developed for eﬃcient and optimal utilization of fresh water in irrigation along with
drip irrigation system. It aids in ﬁnding which one of the plants fails to get suﬃcient water. When the water
supply is provided the next day, this delay should not disturb the system. It becomes important for the
farmers to understand the optimal usage of water and fertilizers to bring out sustenance in the agricultural
industry. Therefore, processing must be done for analyzing the data, so that patterns can be analyzed and
planning can be done for the long term, accordingly. Hence, it gives a broad vision in deciding where the
processing is to be done exactly. Therefore, it is obvious that not all data are crucial, and it provides a clear
view of which data need to be stored, discarded, and retained for both long-term and short-term purposes.
Thus, all these challenging issues require to be addressed and that is where storage technologies are
actually highlighted. The poor quality of Internet access in developing nations makes the implementation
quite challenging. An applicable solution to solve this problem is through edge computing where the
essential data could be oﬄoaded from the cloud over the edge of the cloud, and this is the exact point
where the approach of smart sensing with edge computing gets in.
With the purpose of broadening the potential of edge computing and using it in the agriculture domain,
a novel approach using machine learning (ML) methods is proposed for analyzing the data acquired by the
IoT devices deployed at the farm. Here, the data acquired from IoT components undergo preprocessing and
ML models on the edge nodes to analyze and assess the appropriate results for providing the best instruc-
tions for controlling the actuators (e.g., light, pumps at diﬀerent locations) in the farms.
This article presents an automated system, as shown in Figure 1, to predict the soil moisture using the
ﬁeld information acquired from the self-designed sensor node deployed at the ﬁeld and the forecast
information of weather via Internet. A unique algorithm has been developed that revolves around the
IoT-enabled edge computing model for smart irrigation system

633
machine learning techniques for the prediction of soil moisture. Here, many algorithms with the combina-
tion of regression + clustering was estimated, and it is inferred that XGBoost + k-means outperforms other
algorithmic combinations, and therefore, it is deployed for the prediction of soil moisture in the proposed
work. The proposed algorithm makes eﬀective irrigation decisions with optimized usage of water in a more
accurate and reliable manner. The eﬀective decision-making refers to the process of predicting the rainfall,
thereby reducing the water usage in advance by the proposed algorithm in accordance with the predicted
rainy days. Through this automatic decision-making, over watering is avoided by saving the soil. The
server-side software is developed with node-side connectivity using the information for visualization and
decision support features. This proposed algorithm is implemented in edge to prove the eﬃciency of the
edge server handling the automated system better than the cloud control. The performance of the decen-
tralized edge-based architecture has been evaluated for downloading the hybrid algorithm from cloud in
real time execution. The performance can be enhanced by adopting edge computing architecture and
measured with the help of network parameters like latency, bandwidth, and response time. Edge computing
capacity is also estimated using the CPU processor and memory consumption while executing the proposed
algorithm with irrigation scheduling.
2 Related work
In ref. [13], a smart irrigation system not aﬀected by communication disconnection and delay is developed
using edge nodes deployed at the farms. Environmental parameters have an intricate impact on the plant
growth. It becomes necessary for evaluating multiple AI models simultaneously in an actual cultivation
environment for comparing AI models under the same conditions. Due to the working of existing irrigation
systems on the cloud, communication is instable in the concurrent evaluation of AI models. However, the
instability does not induce an edge node in its performance.
The factors such as type of plant, soil, climate, humidity, temperature, and soil moisture need to be
considered for the irrigation system packed with potential smart decisions. The nature and type of plant,
soil, and climate are queried by ontology (branch of metaphysics dealing with the nature of being), whereas
other factors such as temperature, humidity, and soil moisture are sensed by the sensor network. The
trained ML model predicts the watering decisions based on ontology and other factors as mentioned earlier.
Figure 1: Architecture of the proposed system.
634

S. Premkumar and AN. Sigappi
Smart irrigation has three modules: (i) sensor network modules that sense the parameters impacting the water
requirement by using sensors DHT22, light sensor BH1750, and HL-69 hygrometer for sensing the temperature,
soil moisture, light, and humidity in air. (ii) Edge and IoT server’s module to send and receive data through
HTTP requests. (iii) Training module in which KNN is applied on the sample dataset for training and decision-
making regarding the water needs. Based on the input values, the trained model categorizes the input into ﬁve
possible classes: highly not needed, not needed, average, needed, and highly needed [14].
A decentralized smart irrigation approach is proposed for strawberry greenhouses in contrast to con-
ventional cloud-based solutions for keeping the agricultural data at the edge of the network. A full-scale
smart irrigation system in an actual strawberry greenhouse environment is developed after a small-scale
smart irrigation networking prototype system and a reference architecture targeting edge data distribution
for strawberry greenhouse applications are framed. A three-step industrial approach is formed for
designing, implementing, and validating a solution for smart strawberry irrigation in greenhouses and
keeping the corresponding data at the edge of the network at the same time: (i) A small-scale smart
irrigation prototype solution with oﬀ-the-shelf hardware and software equipment is tested and evaluated
on various types of plants for gaining useful insights for deployments on a large scale. (ii) A reference
network architecture is designed for targeting smart irrigation and edge data distribution speciﬁcally for
strawberry greenhouses. (iii) A large-scale system in an actual strawberry greenhouse environment is
developed in Greece, incorporating the proposed reference architecture [15].
Edge computing is proposed for addressing the issues by taking advantage of computing resources in
the edge of the network. The issues such as an edge mobile device make it easier to achieve low end-to-end
latency, high bandwidth, and low jitter to services located on the edge network. An edge can enforce the
privacy policies of its owner prior to the release of the data to the cloud through edge analytics. If a cloud
service becomes unavailable due to network failure, cloud failure, or a denial-of-service attack, a fallback
service on a nearby edge can temporarily mask the failure. Cloud services, partial analysis, and control
functions are extended to the edge nodes from the cloud data center. Edge nodes facilitate the timely
monitoring of sensors in smart farming by the reduced latency and enhanced data transmission. Due to
these factors, edge computing is applied through farming [16,17]. A three-tier open-source software plat-
form we proposed by authors, and the platform enhanced the precision agriculture by introducing edge
computing and fog computing. An network functions virtualization (NFV)-based approach is deployed for
performing the local operational decisions at the edge level for mitigating the inﬂuence of network failures
while using cloud data centers [18]. For control processing in smart farming, a platform enabling cost-
eﬀective sensor/actuator network based on IoT, utilizes edge computing [19,20].
The authors in ref. [21] predicted the soil moisture using a mathematical model that measures the
values given by a sensor matrix on the ground. Due to the huge interval in measurements (10 minutes), the
model presented estimated error by more than 10%. This methodology has incorporated the online
approach by making the sensors to send data every minute to edge devices without time-based interruption.
The authors of ref. [22] applied a combinative approach of using ﬁeld sensor network’s data along with
weather forecast station’s data for the management of optimality in water conditions for the enhanced
growth of grapes. The generated data are forwarded to a web server, which displays graphics without
statistical analysis of such data. The analysis must be performed a posteriori by the user.
The watering mechanism for a plant via IoT methodology is devised by the proposed smart irrigation
model without acquiring any pre-processed data. A prototype application is developed, which gets adapted
to the parameters needed in irrigation after a couple of human-made irrigations. With the usage of various
ML algorithms, several tests are devised for manual and automated irrigations for the performance evalua-
tion. After the evaluation using four diﬀerent ML algorithms such as logistic regression (LR), K-nearest
neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting regression trees (GBRT), it is found
that GBRT outperforms other algorithms. To analyze the overall performance, a test bed for the sensor edge,
mobile client, and the decision service on the cloud is established. Two diﬀerent indoor species are selected
as test items for the prototype, namely, Peace lily and Sardinia. The outcomes were quite good, and it is
inferred that the prototype has learned the patterns of irrigation and making decisions automatically with a
high rate of accuracy [23].
IoT-enabled edge computing model for smart irrigation system

635
The authors from ref. [24] adopted the deep learning methodology for detecting the type and the
category of the plant using an automated plant irrigation system. The water necessity of the plant is
determined using the recognition of predeﬁned set of plant images and data set acquired from farm. It
utilizes the database for fetching the irrigation information after the recognition process is completed.
Modeling the training processes are time consuming as voluminous set of images needs to be stored.
The authors in refs [25,26] incorporated ML methods in the irrigation decision support model using a
pre-processed irrigation data set. A model is developed for learning the irrigation needs of any plants
progressively rather than using a readily available dataset. Several ML algorithms are evaluated with their
precision for concluding the irrigation decisions. Manual irrigations are performed two times before making
precise decisions. Due to the dynamicity in model, data processing is done progressively, and it can be
applied to several plants having varying irrigation conditions. There is a need for the learning model that
can be trained by itself using a comparatively lighter learning process using environmental parameters that
do not need larger storage in the system but need higher computation. From the aforementioned survey for
making a precise decision with instant computation locally, edge computing needs to be integrated into the
irrigation system. This article is directed towards presenting a platform that implies IoTs and edge com-
puting in monitoring soil moisture via sensors, data communication between sensors and edge devices, and
an Analytics-as-a-Service cloud. It analyzes the collected data in the form of a density map of soil moisture
for denoting the areas in need of greater or lesser frequency of irrigation. Here, density map does not refer to
the geographical point data by satellite mapping, and it actually denotes the point of dry area and watery
area through soil moisture detection point. This point is averaged among areas of irrigation to be done and
the irrigation process is controlled with prediction of rainfall using the proposed system.
3 The proposed system
The proposed learning model for irrigation is implemented in a prototype IoT system that has four compo-
nents: (i) Edge node layer – This layer consists of sensors, actuator, and two microcontrollers. In this layer,
edge node acquires the sensor data from the surroundings and controls the actuator for actuating water
pumps to start irrigation. (ii) Edge server layer – This layer consists of Raspberry Pi that act as edge server
and capable of multitask processing. Here, edge server controls the edge nodes for sending signal and
receiving data at regular interval of time. It is also connected to the cloud server for receiving developed and
trained machine learning model to be deployed and make irrigation decision for controlling edge nodes.
(iii) Edge service layer – This layer is deployed in the edge server and it is responsible for controlling the
whole system through a developed web dashboard. The dashboard has live feed data, control of edge
nodes, and cloud services access. This service layer also has the control access of the proposed machine
learning model. (iv) Cloud server layer – This layer composed of cloud services and cloud storage where its
role is to train the machine learning model and store the data in database. It sends the trained proposed
model to the edge server for decision-making regarding irrigation scheduling. The comprehensive inter-
connections in the system are shown in Figure 2. The proposed IoT-based smart irrigation system includes
ﬁve major components: ﬁeld deployed module, Web-based interface, Web API weather input, soil moisture
prediction mechanism, and edge communication model.
3.1 Field deployed module
In the ﬁeld requirements, a wireless sensor network of the sensor nodes needs to be deployed as shown in
Figure 3. Here, ﬁeld data collection device accommodates four diﬀerent sensors: Capacitive Soil Moisture
Sensor V2.0, DS18B20 Water Proof Temperature Sensor Probe for soil temperature, ultraviolet (UV) Light
Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511 Analog Output Ultra-Violet
636

S. Premkumar and AN. Sigappi
Light Sensor Module. An Arduino Mega connected to Raspberry Pi 4 Model-B read, the output of these
sensors where the program is developed in Python for the Pi model to fetch the hourly data from sensors
and store the data in MongoDB [27] database. It is then synchronized with the server database using the
developed web service. A Wi-Fi-enabled Arduino controls the water pump connected to a relay switch.
Figure 2: Components of the proposed system.
Figure 3: Real-time prototype of the proposed edge model.
IoT-enabled edge computing model for smart irrigation system

637
For the real time monitoring, a trigger is made for controlling the web service from the responsive web-
based interface. The irrigation decisions are checked periodically by the proposed model performed in the
server. The water pump is actuated, and irrigation process is started only if the server makes any irrigation
decision. A wireless sensor network (WSN) [28] scenario with ZigBee [29] technology can be implemented
for a large farming area in which several sensor nodes can be aﬃxed in the speciﬁed area and every sensor
node possesses sensors similar to a standalone device. Then, the Arduino Mega reads the sensor output
connected to ZigBee for transferring data to Gateway Node for aggregating the received data and storing it
in MongoDB locally and also for transferring the data via web service to the edge server.
3.2 Web-based interface
The proposed framework consists of a web-based application to allow farmers visualize the growing data
and interacting with the garden in real time. In addition, users can also be able to examine and analyze the
historical growing data, if needed, through functionalities such as irrigation control, motor control predic-
tion model deployment, and manual data entry implemented in this web application. Here, Node.js was
chosen for developing the web application [30,31], while MongoDB [27] was utilized as the database system.
Data stored in the database, which is deployed in the cloud, will be used for further data analysis in the
future. The web application’s functions are designed following a software design pattern called model-
view-controller (MVC) as shown in Figure 4. In the frontend, ChartJS is used to represent data through
dynamic charts. The web application is also used as an interface to manage all the physical devices/
actuators in the garden. To deploy the web-server to the cloud, a cloud platform as a service (PaaS), namely,
Heroku, had been utilized. Heroku is a cloud platform that provides platform as a service (PaaS), facilitates
the creation of applications and deploying these online rapidly [32,33]. It also enhances scalability and
functionality by integrating several add-on services. The ﬁeld data are sent to the server by Raspberry Pi
using this web service. This web service manages the network outage/ﬂuctuation during data synchroniza-
tion from the ﬁeld device to the server by taking the help of ﬂag settings at the database level. The interface
facilitates the scheduling of irrigation along with visualizing real time sensors and predicted soil moisture
for upcoming days and precipitation information. By using the denoted threshold value of soil moisture
suggested by agronomists, the irrigation can be scheduled by the user. The system maintains the threshold
value depending on the predicted pattern of soil moisture and precipitation information. The process of
irrigation is initiated automatically and stopped after the speciﬁed threshold value generated from the
proposed algorithm of soil moisture when it is reached.
Figure 4: Web interface for the irrigation system.
638

S. Premkumar and AN. Sigappi
3.3 Web API weather input
The weather prediction data are collected by a web service developed in Python. The forecast data such as
humidity, temperature, ultra violet index, precipitation, and cloudiness of web forecasting portals like
Open Weather API are aggregated by the developed web service [34]. These portals provide the forecasted
information in HTML, XML, or JSON format. The predicted data with JSON format are read by the developed
web and stored in database at the edge server, which is concerned in the prediction algorithm. Also, these
data are utilized as testing dataset in the ML model for predicting the soil moisture.
3.4 Soil moisture prediction mechanism
An algorithm for predicting the soil moisture based on data derived from ﬁeld sensors and weather fore-
casting using the combination of supervised and unsupervised machine learning techniques has been
developed underpinned by regression algorithms and k-means clustering for estimating the diﬀerence/
change in soil moisture owing to weather conditions. Many regression algorithms are compared against
each other and infusing each of them with k-means to check the preciseness in mean square error (MSE),
R2, accuracy and mean absolute percentage error (MAPE) for prediction of soil moisture of upcoming days
with the help of sensor data and weather forecasting days. The information about soil moisture for the
upcoming days and suggestions for irrigation in accordance with the prescribed levels of soil moisture and
predicted precipitation values, thereby saving energy and water, is presented by the algorithm. The infor-
mation generated from the device and the predicted values from the algorithm soil moisture prediction
hybrid algorithm (SMPHA) are stored in the server.
3.5 Edge communication model
The communication protocols in the proposed framework are ﬂexible and transparent in nature for
accepting both wired and wireless methodologies. For the maximum utilization of potentiality in edge
computing components, the communication among various components in the edge-IoT system requires
intense probing by using the versatility among the devices in network edges. For transferring the data
gathered from pivot sensors, a communication technology such as Zigbee [35] is needed for the irrigation
systems. Therefore, the communication component in the proposed work is classiﬁed into three main areas
as shown in Figure 5. The Message Query Telemetry Transport (MQTT) protocol is used for the
Figure 5: Proposed edge communication model.
IoT-enabled edge computing model for smart irrigation system

639
communication in the proposed system. The analysis in ref. [36] presented seven IoT messaging protocols
(MQTT, CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols that play a
major role in smart farming. The authors have concluded that MQTT proved to be the most secure protocol
after probing all the protocols with respect to latency, energy and bandwidth requirements, throughput,
reliability, and security. Moreover, MQTT is secure in both end-to-end architecture and gateway server
architecture. In an MQTT setup, a MQTT server termed as MQTT broker executes on the IoT solution [37].
Under a common identiﬁer, a “publisher” and a “subscriber” link among themselves to this broker. In the
IoT solution, publishers and subscribers are the IoT devices and IoT hubs or control devices, respectively.
When the publishers have new data for recording, the data are published to the broker. The broker then
ﬂags that it has new publisher data, and the corresponding data are read by the subscriber. Then, the
subscriber analyzes the data and reacts accordingly.
The ﬁrst level accomplishes with connecting the end users to system with the help of mobile or web-
based applications through the Internet. The next level (cloud computing server) deals with the connection
of web server and MQTT broker for directing the user requests and other components at the edge landscape
or from the farms to the right cloud-based services like displaying the real time status of the farm for the
users, triggering a new deployment of the updated ML model to the corresponding edge node. The third
level (farming area) is directed toward the deployment of sensors and IoT devices (actuators) for commu-
nicating with other components in the entire system.
4 Deployment of soil moisture prediction hybrid algorithm
The watering mechanism of the plant has diﬀerent approaches in the proposed model. Primarily, the system
is trained with manual irrigations datasets during the process of learning with respect to suggestions
deﬁned by agronomists. The model is trained to learn the needs of irrigation in the ﬁrst level of deployment
in cloud without the inclusion of pre-processed data. After acquiring the required data and training, the
proposed system is initiated to grasp the plant’s watering needs by undergoing plenty of manual irrigations.
Thereafter, manual irrigation is not required and the system makes automated decisions in watering using
the gathered data and the application of ML methods. The proposed model then decides the irrigation
strategies automatically using ML methods without the need including collected datasets in the automatic
irrigation process. The proposed model can be improved through the learning process when the number of
precise irrigation inputs is provided to the model at each stage of training.
The decision-making procedure is developed with two modules for irrigation strategies according to the
soil moisture prediction for upcoming days. The ﬁrst module deals with training the model in cloud with
manual irrigation datasets through steps such as data collection, data preprocessing, training, and model
development. The system acquires values of air temperature (TH), soil temperature (SMT), soil moisture
(SM), humidity (HU), and ultraviolet rays (UV) periodically from the physical environment in the data
collection stage, which is essentially required for arriving at the watering decisions. Also, the time of
performing the manual irrigation is recorded in the database. These data are timestamped and stored in
as datasets to aid in making decisions for knowing the time of irrigation. In the next step of pre-processing,
inconsistencies are eliminated and outliers caused by sensor errors are detected from the irrigation dataset,
thereby helping in the removal of broken data. The training stage involves the application of supervised
machine learning (ML) algorithms. Here the regression algorithms such as support vector regression (SVR),
multiple linear regression (MLR), lasso regression (LR), decision tree regressor (DTR), random forest
regressor (RF), and XG-boost regressor (XB) techniques are used for the deployment. The regression algo-
rithms are trained using the collected datasets. Finally, through training, regression models are created,
namely, SVR model, MLR model, LR model, DTR model, RF model, and XB model that are been combined
with the second module for decision-making.
The second module caters to the prediction of irrigation for upcoming days by infusing the weather data
as an input to the regression trained models. The live datasets from the weather API for future prediction of
640

S. Premkumar and AN. Sigappi
soil moisture variable are used. The dependent variables from weather forecast data like temperature (TH),
humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the aforementioned model for soil
moisture prediction. Then, the regression trained model is evaluated and deployed using the weather
testing data for the prediction of soil moisture in accordance with the precipitation. After the prediction
of data for the upcoming days, these developed regression models are combined with unsupervised ML
algorithm named k-means clustering for estimating the changes incurred in soil moisture prediction due to
the impact of weather conditions. Further, each regression models with k-means algorithm are evaluated
for performances in terms of irrigation decision-making process as shown in Table 1. The combined algo-
rithms are estimated through MAPE, MSE, R2, execution speed, power consumption, and accuracy. The
estimation and computation of these parameters are detailed by the authors in ref. [38].
XGBoost + k-means (XB+k-means) approach provides more accuracy with less MSE comparatively and
also the R2 with 98% in soil moisture prediction using combined approach is given in Table 1. It is evident
that the proposed combination performs better when compared to other regression + k-means-based
approaches. XB + k-means-based hybrid machine learning algorithm is applied in irrigation planning
module on account of aforementioned performance metrices of ML. Although it performs moderately in
terms of execution time and power usage, it is selected for the deployment in edge computing as it has
better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed that the prediction of soil
moisture for the upcoming days from the proposed algorithm (XB+k-means) is nearer to the actual value as
shown in Table 2, and hence, XB+k-means is selected for the implementation of SMPHA in edge-based
irrigation scheduling.
4.1 Hardware setup
IoT system is crucial to handle, collect, and transfer the data to the computing nodes at the edge or in the
cloud. These devices are connected to the edge nodes through wireless communication protocols like
ZigBee. It is used in reducing the latency and loss of data. An Arduino micro-control unit controls the
combined IoT sensors and actuators at the same part of a ﬁeld into a cluster, each connected to a Raspberry
Table 2: Comparison of predicted SM value with actual SM value
Date
Average SM value
from sensor
Average predicted SM
value (XB+k-means)
28-09-2021
35.23
34.04
29-09-2021
36.41
37.20
30-09-2021
31.57
30.46
01-10-2021
34.66
33.15
02-10-2021
36.73
37.12
03-10-2021
32.88
33.01
Table 1: Comparison of performance metrices obtained from various ML algorithms
Algorithms used
Accuracy
R2
MSE
MAPE (%)
Execution time
Power (J)
SVR + k-means
0.96
0.96
0.25
1.98
0.06078
1164.85
MLR + k-means
0.94
0.88
0.31
2.15
0.02075
429.30
LR + k-means
0.95
0.94
0.32
2.23
0.02482
351.35
DTR + k-means
0.93
0.95
0.29
1.62
0.15687
914.70
RF + k-means
0.95
0.91
0.27
1.57
0.16745
1475.13
XB + k-means
0.97
0.98
0.20
1.08
0.03547
537.87
IoT-enabled edge computing model for smart irrigation system

641
Pi that acts as an edge node in processing the gathered data and controlling the actuators. For example,
Figure 2 shows an edge architecture with a Raspberry Pi connected to two components: Arduino Uno and
Arduino Mega units via ZigBee connection. The ﬁrst Arduino Mega node is responsible for collecting data
from sensors and the second one is for controlling the actuators in the ﬁeld. Depending on the sensor type
with collecting Arduino unit, the sensors are connected via analog or digital PWM pins while controlling
Arduino uno joins with actuators in the ﬁeld and controls (turn on/oﬀ) them in accordance with upper
layers (from the edge web server). The trained (cloud) and deployed ML model in edge nodes provides the
necessary instructions to the edge nodes.
4.2 Web layer setup
The deployment of web server assists the user in planning and managing the irrigation system. It visualizes
the crucial information of factors like temperature of air and soil, UV, humidity, and soil moisture in live
irrigation with real time updates in the form of various charts. In accordance with the selected ﬁeld, the web
application redirects the user to the ﬁeld’s dashboard as shown in Figure 4. The dashboard consists of ﬁeld
parameters as well as control signals for activating all the physical devices/actuators at the garden layer.
These signals are denoted as switch buttons, and each switch controls (turn on/oﬀ) a particular kind of
actuator (for instance, water pump to start and stop the irrigation). The user interface facilitates remote
controlling of the ﬁeld by just clicking on the buttons as shown in Figure 4.
4.3 Edge layer setup
The edge node acts as a computing center where incoming data are analyzed and fed as the input vector to
the ML model for processing and to return the control signals for activating or deactivating the actuators
placed at the farm. Edge node processes the physical data (real time) at every end device such as the
collected and processed data via the Raspberry Pi nodes presented in the proposed scheme. The prediction
model is designed using TensorFlow API and trained, tested on Google Colab in this work. Amazon Web
Service (AWS) oﬀers a library named Boto3 having many APIs to upload and download objects. After the
development of model, it is transferred to Amazon S3, a service provided by AWS. The edge node utilizes the
trained model from S3 for analyzing the sensed data acquired from garden’s sensors. The decision is
delivered based on real time data analysis at the edge node and transmitted to Arduino nodes in the ﬁelds
landscape immediately for controlling the actuators. In another ﬂow, the data collected from sensors are
ﬁltered so as to keep only the modiﬁed data at the edge node before being sent back for mitigating the
communication cost to the database in the cloud. These data are used in the updation of the ML model to
enhance its eﬃciency.
4.4 Analytics setup
The main goal of this experiment lies in gathering the various physical parameters of a farming land via
sensors and utilizing the fetched data along with weather forecast information for developing an algorithm
using hybrid machine learning approach to infuse higher accuracy in predicting the soil moisture for the
upcoming days. As discussed in Section 4, for the proper planning and provisioning of optimal irrigation,
the algorithm provides a predictable estimate of soil moisture with the assistance of various statistical
measures as shown in Table 1. The measures are adopted for estimating the appropriateness and error rate
of the proposed algorithm. It is inferred from the experiment that, optimal irrigation is feasible using a good
642

S. Premkumar and AN. Sigappi
estimation (close to the actual value) of the soil moisture (Table 2), with the support of ﬁeld data and
forecast information, thereby utilizing the natural rain eﬃciently.
The SMPHA ML model is interdependent on dynamic changes in weather environment where the
models deployed on edge nodes need to change the controls accordingly after model gets trained con-
tinuously. For the process of retraining, the trained model needs to be updated. The parameters such as TM,
HU, ST, UV, SM about grown plants are logged for the training purpose, and these generated datasets are
recorded from the already developed manual mode system [39]. The growth of the Indian Mundu Chilli [40]
is taken for the observation from the ﬁrst stage to the last grown stage for 95 days. While retraining the
model, the training is carried in cloud without causing eﬀect to the functionalities at edge nodes. A signal is
transferred to the corresponding edge server for triggering the task of updating the SMPHA model from the
web server. At that time, the newly trained model is downloaded to replace the existing one at the con-
sidering edge server. From then, the ML model at the edge server is called to be updated with the real-world
knowledge and is ready for its garden controlling tasks (to apply in the next farming season).
4.5 Work ﬂow
The ﬂowchart in Figure 6 depicts the working of the proposed system based on the decision support system
that is beneﬁcial for irrigation needed for the growth of vegetables. The chilli plant is grown in a growbag
attached with sensors and Pi as shown in Figure 3 and monitored for 95 days of data collection. To bring out
optimality in the irrigation system, features relating to climate, soil, crop, and ﬁeld infrastructure are to be
considered. To provide several recommendations in the production of vegetables, decision support systems
(DSSs) are designed, which process voluminous information [39]. This proposed work is the extension of
soil moisture diﬀerences (SMD) model [41] developed for soil moisture prediction. The threshold values of
soil moisture are used in the SMD model where the system schedules the irrigation date based on the
predicted soil moisture and weather forecast (precipitation) information automatically using SVR+ k-means
modeling. Therefore, in the extension of the aforementioned work, further more number of sensors are used
to log soil moisture value, which is averaged in the proposed model. This model is developed in two
divisions of ﬂowchart as shown in Figure 7, where both are interconnected. It is observed that the prediction
of XB + k-mean approach provides better results as presented in Table 2.
The ﬁrst phase of the ﬂowchart describes the hybrid algorithm for the soil moisture prediction (SMPHA)
using the combination of XB + k-means algorithm. During the data collection step, the sensor data for the
parameters, namely, TM, HU, ST, UV, and SM, are collected. During preprocessing, null values and outliers
are removed and the preprocessed data are used to train the XG-Boost model. The developed model is then
trained with variables of live weather features (TM, HU, UV, PC) obtained from Weather API for the
prediction of SM data. These data are given as input to k-means clustering algorithm to predict the soil
moisture, which is deﬁned as SMPHA value to be infused in the next phase of the ﬂowchart. The second
phase of the ﬂowchart deﬁnes the automatic irrigation planning setup. The setup starts obtaining the soil
moisture maximum (SMMax) and soil moisture minimum (SMMin) values in the dashboard for setting the
maximum and minimum level of soil moisture. Then, the current soil moisture (CuSM) is sensed and
compared against the threshold SMMin. If the resulting value is less than SMMin, the process proceeds
with SMPHA. On the contrary, it stops the irrigation process by sending 0 to the relay. In SMPHA, the
nearest precipitation date is selected and it is assigned to the predicted soil moisture (PSM). The SMMax is
decided by ﬁnding the minimum of (PSM + SMMin, SMMax), and the predicted SMMax is further checked
against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to the relay as a signal to start
irrigation. If the condition fails, then it sends 0 to stop irrigation. The process of automatic irrigation ends
by forecasting the irrigation schedule in accordance with the live weather parameters.
IoT-enabled edge computing model for smart irrigation system

643
5 Experimental setup and evaluation
The test bed is developed and deployed, and the data are collected for the analysis in irrigation manage-
ment. Here, Heroku cloud platform is used to deploy the cloud web server. The same cloud is also installed
at a local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n connections to denote the edge
nodes. JMeter application is used to get sequential accesses to the web page from various users for eval-
uating the network parameters. The speciﬁcation of these servers is given in Tables 3 and 4.
We evaluated the performance of the proposed IoT-based smart farm on two diﬀerent platforms,
namely, in the cloud and on the local computer to show the feasibility and the beneﬁt of the edge com-
puting scheme. Further many parameters are considered for evaluation and discussed in the next section to
show that edge deployment is better than cloud.
Figure 6: Flow chart of the proposed edge model.
644

S. Premkumar and AN. Sigappi
5.1 Evaluation
A hybrid machine learning methodology is used in evaluating the ﬁrst stage of the proposed model. The
predicted value of the soil moisture is better in terms of their accuracy and error rate. From the comparison
of the other ML algorithms as shown in Table 2, XB + k-means performs better and taken further to be
deployed in edge and cloud to check its eﬃciency with each other. Therefore, for analyzing the eﬃciency of
the edge server in accordance with the proposed hybrid algorithm SMPHA is evaluated in terms of the time
taken to train the ML model in edge and cloud. In this experiment Raspberry Pi is used to train the SMPHA
model with 196,400 rows, that is, input data sample size and takes around 1,710,000 ms (approximately
28.5 min). The same model when it is trained in Google Colab cloud environment, it takes 204,000 ms
(approximately 3.4 min) as depicted in Table 5. The main purpose is to run the trained model on edge not to
train the model at edge. So due to the lack of computing capability at the edge, it takes more time to train
the model, but it can be ignored as it does not aﬀect the purpose of the proposed model. Here, edge is
introduced to obtain the task of computing from the cloud (i.e., oﬄoading the task) by making the system
more edge-oriented deployment. It can be accomplished rapidly as it requires only 14 s to download a
trained SMPHA model from the cloud to the edge node with a size of 3,101 kb as given in Table 5. The time to
Figure 7: Average response time with 10 test scenarios.
Table 3: Conﬁguration of raspberry Pi
CPU
Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5 GHz
RAM
8 GB LPDDR4-3200 SDRAM
Network
2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE, Gigabit Ethernet
Pinboard
8 GB LPDDR4-3200 SDRAM
Operating system, language
Raspbian , Python 3
Table 4: Conﬁguration of Heroku cloud
Country
United states
Service
Amazon web service S3
Processor
2.4 GHz Intel Xeon E5-2676 v3 Processor
CPU Power
8 GB
Virtual CPUs
3–5
IoT-enabled edge computing model for smart irrigation system

645
download varies according to the size of the trained model. So, from this process it can be inferred that
downloading the trained model saves time when compared to training the model at the edge. Through this
in real time, deployment of the trained SMPHA model in edge is better compared to deployment in cloud
services. Furthermore, network parameters like latency, throughput, bandwidth, and response time are
adopted to measure the performance improvements in edge computing.
The performance metrices taken into account are latency, bandwidth, and response time [42]. The
latency of an application is the product of two factors: computing latency and transmission latency. The
time spent on data processing and transmission between end devices to cloud servers is termed as com-
puting latency and transmission latency, respectively. The computational capacity of the system decides
the computing latency as the network servers possess a considerable amount of capacity to make the data
processing faster, whereas the sensors come with limited computing capacity. The latency in transmission
is increased by the end devices and cloud servers. Bandwidth: As large number of sensors are deployed in
IoT, data generated would be huge that consumes an intense range of bandwidth and leads to several
problems such as delay in transmission and loss of packets. It becomes unacceptable for the data to be
transferred directly to cloud servers without applying compression. Therefore, data preprocessing and
aggregation are needed for IoT gateways before redirecting them to remote cloud servers. Then, the issue
to be confronted is to control the traﬃc ﬂow by migrating data processing and aggregation tasks optimally
to decrease the bandwidth needs of the end users while maintaining the data quality. Response time: The
total response time is calculated by adding up transmission and processing time. The local deployment of
the proposed model for controlling IoT-based irrigation are deployed on two modes: (i) Cloud mode: The
developed SMPHA model is implemented in the cloud communicating with IoT sensors nodes directly to
manage the irrigation process. The data are stored and processed at the cloud server itself where it uses
Heroku platform. (ii) Edge mode – Raspberry Pi is deployed as an edge server that involves in processing of
the SMPHA model controlling the IoT sensor nodes. Here, the data are stored and processed locally within
the edge servers. This SMPHA model from both the edge and cloud does the job of controlling the actuators
to initiate and quit the working of water ﬂow motors. Through this deployment in both the environments,
performance of edge server and cloud server can be checked in terms of latency, throughput, bandwidth,
and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This performance metrices is
not feasible to calculate while deploying in real time, so the aforementioned scenarios of two modes are
virtually created by generating many request and response threads between the servers. This sampling,
load test, and distributed testing are conducted through JMeter application [43] and also veriﬁed with
Wireshark [44] in cloud servers. The test scenario is created here by data of sending and receiving sampling
data between cloud to IoT sensors and between Edge to IoT sensors. The sampling data considered in this
work refer to the approximate number of requests generated by Arduino to cloud and Arduino to Raspberry
Pi that are calculated in real time. The test scenario is divided into 10 days of sampling data collected for
each day. The evaluation results are depicted for latency and response times in 10 days perspective. In
latency parameter, edge service has decreased by an average of 77.85% time compared to the with cloud. In
the same manner, the response time of edge service is also decreased by 74.09% time compared to cloud
service. In throughput calculation, sampling data are calculated for an hourly basis for the 10 hours data in
a day. From the hourly comparisons of throughput value, edge outperforms with 67.17% high Mbps usage.
Through this analysis as shown in Table 6, it is evident that the proposed edge computing methodology
deployed in Raspberry Pi or in local computers outperforms the cloud-oriented approach.
Table 5: Comparison of model training time
Edge
Cloud
Model training time
28.4 min
3.4 min
Downloading time
Not applicable
14 s
646

S. Premkumar and AN. Sigappi
Finally, to illustrate the eﬃciency of resource management in edge computing, CPU and memory
utilization are considered for the analysis as both factors rely on the service execution model and the
computational needs of the services being ﬁred from oﬀ-loaders. Figure 10 depicts the utilization of CPU
and RAM on the Raspberry Pi acting as an edge node in two cases: with and without the deployment of
SMPHA model on it. As shown in Figure 10, the SMPHA model aﬀects the CPU of the Raspberry Pi node
signiﬁcantly as it consumed around 41.2% of the CPU compared to only 3.5% when it does not host the
Figure 8: Average latency with 10 test scenarios.
Figure 9: Average throughput value with 10 h test scenarios.
Table 6: Performance metrices for cloud and edge services
Performance metrices
Cloud service
Edge service
Throughput (Mbps)
0.04944
0.08265
Latency (ms)
1415.8
313.6
Response time (ms)
1519.6
393.8
Bandwidth (bps)
86
1,365
IoT-enabled edge computing model for smart irrigation system

647
SMPHA model. However, the memory (RAM) utilization in both the cases (with and without deployment of
an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization does not have
much diﬀerence in with and without SMPHA. It is worthwhile to note that, the CPU utilization is still much
lower than the 50% of total CPU capacity in Raspberry Pi. Therefore, it becomes feasible for adopting edge
server implementation in the proposed irrigation system.
6 Conclusion
This article proposed a novel approach to edge-based irrigation system to facilitate decision-making on
watering the plants on scheduled time. The proposed approach applying IoT with an edge computing
framework enables the farming system to adapt to the changes in environmental conditions automatically
and eﬃciently. The process of automatic irrigation regulates irrigation according to the live weather para-
meters for forecasting the irrigation process. Soil moisture prediction was performed using major regression
algorithms that are again combined with k-means clustering for estimating the changes incurred in soil
moisture prediction. These techniques were compared through metrics such as MAPE, MSE, speed, and
power consumption from which XB + k-means was found to perform better. The XB + k-means algorithm
was further used for the implementation of decision mechanism on the developed edge computing model.
The proposed edge model saves the data communication cost and reduces the response time of IoT services.
It can be deployed on existing devices on the network edges serving as edge nodes, thereby reducing the
overall implementation cost of a large-scale IoT system. The edge-based approach was found to perform
better than the cloud-based approach in terms of response time, latency, throughput, and bandwidth
usage. Finally, the edge model was analyzed through CPU and memory usage while running with and
without the algorithm. In both cases, the memory utilization is almost lower to total available resource of
the edge device. From this, edge device can allocate its remaining resource for other computing services,
which increases the eﬃciency of edge computing device. The number of end edge nodes can be increased
according to the ﬁeld area and then to check the potency of the system.
Conﬂict of interest: The authors declare no conﬂict of interest.
Data availability statement: All data that support the ﬁndings of this study are included within the article.
Figure 10: CPU and memory utilization with and without SMPHA.
648

S. Premkumar and AN. Sigappi
References
[1]
India: Issues and Priorities for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/
2012/05/17/india-agriculture-issues-priorities.
[2]
India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.
[3]
Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR, Baylis M, et al. Scientists’ warning to humanity: Microorganisms
and climate change. Nature Rev Microbiol. 2019;17(9):569–86. doi: 10.1038/s41579-019-0222-5.
[4]
Huong NTL, Bo YS, Fahad S. Economic impact of climate change on agriculture using Ricardian approach: A case of
Northwest Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. doi: 10.1016/j.jssas.2018.02.006.
[5]
Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A, Malyan SK. Global warming impacts of nitrogen use in agriculture: An
assessment for India since 1960. Carbon Management. 2020;11(3):291–301. doi: 10.1080/17583004.2020.1752061.
[6]
Sarkar S, Chatterjee S, Misra S. Assessment of the suitability of fog computing in the context of internet of things. IEEE
Trans Cloud Comput. 2018;6(1):46–59. doi: 10.1109/TCC.2015.2485206.
[7]
Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food security and food production systems. In: Field
CB, Barros VR, Dokken DJ, Mach KJ, Mastrandrea MD, Bilir TE, et al., editors. Climate Change 2014: Impacts, Adaptation,
and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working Group II to the Fifth Assessment Report of
the Intergovernmental Panel on Climate Change Cambridge, United Kingdom: Cambridge University Press and New York,
NY, USA; 2014. p. 485–533.
[8]
Lal R. Adaptation and mitigation of climate change by improving agriculture in India. In: S. SherazMahdi (Ed.), Climate
Change and Agriculture in India: Impact and Adaptation. Cham: Springer International Publishing; 2019. p. 217–27.
[9]
Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research on implementation and deployment of IoT projects in
smart cities. Hershey: IGI global, 2019.
[10] Baylis A. Advances in precision farming technologies for crop protection. Outlooks Pest Manag. 2017;28(4):158–61.
[11]
Mulla D, Khosla R. Historical evolution and recent advances in precision farming. Soil-Speciﬁc Farming Precision
Agriculture. Boca Raton: CRC Press; 2015.
[12] Dutta L, and Basu TK. Extraction and optimization of leaves images of mango tree and classiﬁcation using ANN. IJRAET
2013;1(3):46–51.
[13] Kawai T, Mineno H. Evaluation environment using edge computing for artiﬁcial intelligence-based irrigation system. 2020
16th International Conference on Mobility, Sensing and Networking (MSN). Tokyo, Japan: IEEE; 2020. p. 214–9.
[14] Munir MS, Bajwa IS, Ashraf A, Anwar W, Rashid R. Intelligent and smart irrigation system using edge computing and IoT.
Complexity. 2021;2021:1–16.
[15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the edge of smart irrigation networks: A case study in
strawberry greenhouses. Comput Netw. 2020;167:107039.
[16] Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.
[17] Shi W, Dustdar S. The promise of edge computing. Computer. 2016;49(5):78–81.
[18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha Rodrigues G, Saquette LR, et al. Low-cost fog
computing platform for soil moisture management. In: 2020 International Conference on Information Networking (ICOIN).
Barcelona, Spain: IEEE; 2020. p. 499–504.
[19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M, Mora-Pascual, J, Mora-Martínez, J. Developing ubiquitous sensor
network platform using internet of things: application in precision agriculture. Sensors. 2016;16(7):1141.
[20] Xu X, Liu X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement for smart cities in edge computing. IEEE Internet
Things J. 2020;7(5):4084–91.
[21] Wu X, Liu M. In-situ soil moisture sensing: Measurement scheduling and estimation using compressive sensing. In: 2012
ACM/IEEE 11th International Conference on Information Processing in Sensor Networks (IPSN). Beijing, China: IEEE; 2012.
p. 1–11.
[22] Kameoka T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart sensing in a Vineyard for advanced
viticultural management. In: Proceedings of the 2014 International Workshop on Web Intelligence and Smart Sensing.
Saint Etienne France; 2014. p. 1–4.
[23] Cagri Serdaroglu K, Onel C, Baydere S. IoT-based smart plant irrigation system with enhanced learning. In: 2020 IEEE
Computing, Communications and IoT Applications (ComComAp.) Beijing, China: IEEE; 2020. p. 1–6.
[24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated plant recognition using deep learning. In: Proceedings
of the 10th International Conference on Computer Modeling and Simulation - ICCMS2018. Sydney, Australia: ACM Press;
2018. p. 87–91.
[25] Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying machine learning on sensor data for irrigation
recommendations: Revealing the agronomist’s tacit knowledge. Precision Agricult. 2018;19(3):421–44.
[26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A. IoT and machine learning approaches for automation of farm irrigation
system. Proc Comput Sci. 2020;167:1250–7.
[27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases. Int J Scientiﬁc Eng Res. 2016;7(5):1035–7.
IoT-enabled edge computing model for smart irrigation system

649
[28] Ojha T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture: The state-of-the-art in practice and future
challenges. Comput Electr Agricult. 2015;118:66–84.
[29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara MA. Automated irrigation system using a wireless sensor
network and GPRS module. IEEE Trans Instrument Measurement. 2014;63(1):166–76.
[30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT system design with real time stream processing and data ﬂow
integration. In: 2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok, Thailand: IEEE; 2019. p. 1–5.
[31] Lv H, Wang S. Design and application of IoT microservices based on Seneca. USA: DEStech Transactions on Computer
Science and Engineering, (icte.). 2016.
[32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing using AES under HEROKU cloud. In: 2018 27th Wireless and
Optical Communication Conference (WOCC). Hualien: IEEE; 2018. p. 1–5.
[33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural model for a high-performance fog/edge/cloud IoT platform.
In: 2019 IEEE 5th world forum on internet of things (WF-IoT.) Limerick, Ireland: IEEE; 2019. p. 633–8.
[34] Weather API. Retrieved from https://openweathermap.org/api.
[35] Drew Gislason. Zigbee wireless networking, 1st ed. Newnes, London: Elsevier Publisher; 2008.
[36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing for MQTT applications. In: Virvou M, Nakagawa H, Jain LC. (Eds.),
Knowledge-Based Software Engineering: 2020. Cham: Springer International Publishing; 2020. p. 47–59.
[37] Babun L, Denney K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms: Communication, security, and privacy
perspectives. Comput Netw. 2021;192:108040.
[38] Rastogi K, Lohani D. Edge computing-based internet of things framework for indoor occupancy estimation. Int J Ambient
Comput Intell. 2020;11(4):16–37.
[39] Premkumar S, Sigappi AN. Functional framework for edge-based agricultural system. In: AI, Edge and IoT-based Smart
Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.
[40] Phani Kumar J, Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan K. Genetic divergence among Ramnad
mundu chilli (Capsicum annuum L.) genotypes for yield and quality. Electr J Plant Breeding. 2021;12(1):228–34.
[41] Goap A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation management system using Machine learning
and open source technologies. Comput Electronic Agricult. 2018;155:41–9.
[42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud, fog and edge computing: A review, taxonomy,
benchmarks and standards for future research. Internet Things. 2020;12:100273.
[43] Sunardi A, Suharjito MVC architecture: a comparative study between Laravel framework and slim framework in freelancer
project monitoring system web based. Proc Comput Sci. 2019;157:134–41.
[44] Robert Shimonski. The wireshark ﬁeld guide, 1st ed. New York: Syngress Press, Elsevier; 2013.
650

S. Premkumar and AN. Sigappi


Paper 3:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: Excellent - The response provides a comprehensive and detailed explanation of how machine learning models are used in real-time irrigation management and the specific point of focus of the review paper on strategies for handling data heterogeneity, uncertainty, and quality issues. It also outlines the challenges and strategies employed to address these issues, highlighting the importance of data preprocessing, ensemble learning algorithms, and advanced statistical methods in developing reliable and accurate ML models.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: Machine learning (ML) models are an advanced computational technique that can be applied to analyze large datasets, including time series data, to identify patterns and predict outcomes. In the context of real-time irrigation management, ML models can be trained on historical data to predict future crop water requirements based on various input parameters such as weather, soil moisture, and crop growth stage. This information can then be used to optimize irrigation schedules and improve water use efficiency.

The specific point of focus described in the review paper is on strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation. These issues are often encountered in sensor and data acquisition systems used for irrigation management. Data heterogeneity refers to the variability in data types, formats, and scales that may be collected from different sensors and data sources. Uncertainty refers to the presence of noise, missing values, or measurement errors in the data, while quality issues can arise from sensor malfunctions or data transmission errors.

To address these challenges and ensure the reliability and accuracy of ML models for real-time irrigation management, several strategies can be employed. These strategies typically involve data preprocessing and transformation techniques to clean and harmonize the data, handle missing values, and reduce noise. Additionally, ensemble learning algorithms and advanced statistical methods can be used to enhance the robustness and generalization capabilities of the models. By effectively addressing data heterogeneity, uncertainty, and quality issues, ML models can be developed to provide accurate and reliable real-time insights, enabling farmers and irrigation managers to make informed decisions and optimize water usage.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement View all journals Search Log in Explore content About the journal Publish with us Sign up for alerts RSS feed nature scientific reports articles article Article Open access Published: 12 May 2023 Machine learning-guided determination of Acinetobacter density in waterbodies receiving municipal and hospital wastewater effluents Temitope C. Ekundayo, Mary A. Adewoyin, Oluwatosin A. Ijabadeniyi, Etinosa O. Igbinosa & Anthony I. Okoh  Scientific Reports  13, Article number: 7749 (2023) Cite this article 951 Accesses Metrics Abstract A smart artificial intelligent system (SAIS) for Acinetobacter density (AD) enumeration in waterbodies represents an invaluable strategy for avoidance of repetitive, laborious, and time-consuming routines associated with its determination. This study aimed to predict AD in waterbodies using machine learning (ML). AD and physicochemical variables (PVs) data from three rivers monitored via standard protocols in a year-long study were fitted to 18 ML algorithms. The models’ performance was assayed using regression metrics. The average pH, EC, TDS, salinity, temperature, TSS, TBS, DO, BOD, and AD was 7.76 ± 0.02, 218.66 ± 4.76 µS/cm, 110.53 ± 2.36 mg/L, 0.10 ± 0.00 PSU, 17.29 ± 0.21 °C, 80.17 ± 5.09 mg/L, 87.51 ± 5.41 NTU, 8.82 ± 0.04 mg/L, 4.00 ± 0.10 mg/L, and 3.19 ± 0.03 log CFU/100 mL respectively. While the contributions of PVs differed in values, AD predicted value by XGB [3.1792 (1.1040–4.5828)] and Cubist [3.1736 (1.1012–4.5300)] outshined other algorithms. Also, XGB (MSE = 0.0059, RMSE = 0.0770; R2 = 0.9912; MAD = 0.0440) and Cubist (MSE = 0.0117, RMSE = 0.1081, R2 = 0.9827; MAD = 0.0437) ranked first and second respectively, in predicting AD. Temperature was the most important feature in predicting AD and ranked first by 10/18 ML-algorithms accounting for 43.00–83.30% mean dropout RMSE loss after 1000 permutations. The two models' partial dependence and residual diagnostics sensitivity revealed their efficient AD prognosticating accuracies in waterbodies. In conclusion, a fully developed XGB/Cubist/XGB-Cubist ensemble/web SAIS app for AD monitoring in waterbodies could be deployed to shorten turnaround time in deciding microbiological quality of waterbodies for irrigation and other purposes. Similar content being viewed by others Online characterization of bacterial processes in drinking water systems Article Open access 27 March 2020 Modeling of two-stage anaerobic onsite wastewater sanitation system to predict effluent soluble chemical oxygen demand through machine learning Article Open access 21 January 2024 Insights to estimate exposure to regulated and non-regulated disinfection by-products in drinking water Article Open access 29 June 2022 Introduction Acinetobacter species belong to the group of aerobic gram-negative bacteria that are non-motile, non-fermentative, catalase positive, oxidase negative encapsulated coccobacilli, having a DNA G+C content of 39 to 47 mol1,2. Taxonomically, scientists have identified 68 validated species in the genus Acinetobacter, with numerous others yet to be delineated into species3,4,5. Many Acinetobacter species are found naturally in different environments, including soil, water, air, wastewater, fomites, human skin, animals, and even on plants6,7,8. Some species can utilise different substrates, such as amino acids, carbohydrates, organic acids, and hydrocarbons, while some can secrete industrial enzymes like lipase and protease9,10. However, few species are human opportunistic pathogens. For instance, Acinetobacter baumannii is a well-known notorious species in hospital settings that cause life-threatening infections such as pneumonia, respiratory and urinary tract infections, septicaemia, and wound infections, among others, especially in immune-compromised patients11,12,13. Acinetobacter species are widely spread via the environmental milieu and may alarmingly spread antimicrobial resistance genes in the environment14,15. In addition, wastewater treatment plants (WWTPs) feed by hospital and municipal wastewater inflows have been reported to contribute multidrug-resistant (MDR), and extensively drug-resistant (XDR) Acinetobacter isolates to their effluents receiving waterbodies compared with other sources15,16. Discharging WWTP effluents increases the prevalence of Acinetobacter in the receiving river waterbodies and promotes antimicrobial resistance and transmission to irrigated vegetables15. The transmission of Acinetobacter spp. (especially A. baumannii)—with high antimicrobial resistance and case fatality ratio—onto fresh produce has been demonstrated and reviewed by Carvalheira et al.17. Acinetobacter species with different resistant capabilities ranging from MDR to XDR have been isolated in fresh fruits and vegetables (apples, cabbages, melons, cauliflowers, peppers, mushrooms, lettuce, cucumbers, bananas, radishes, sweet corn carrots, potatoes, peach, pear, strawberry, apple, celery, tomato, and radish) at a density up to 50–1000 CFU/g18 in Hong Kong19, France20, Nigeria21, Lebanon22, Portugal23 and agricultural environment in Algeria24. Furthermore, waterbodies especially rural rivers for instance, support recreational use of considerably high levels by people incognizant of the inflow/inputs of WWTP effluents and the influx of multidrug-resistant pathogens of public health concern including Acinetobacter25. The routine experimental determination and identification of Acinetobacter species and other bacteria in all matrices (water, food, and clinical samples, etc.) using most probable number, direct plate count, adenosine triphosphate testing, and membrane filtration methods are usually laborious, repetitive, time-consuming (incubation period), and cost-intensive endeavours that required expert knowledge which might not be readily available in most settings. Therefore, there is an urgent need for rapid, reliable, and cost-effective means that required no or low technical know-how to assess Acinetobacter density (AD) in waterbodies and other matrices to ensure short turnaround time necessary to make informed microbiological quality decisions. It is hypothesized that AD in waterbodies could be predicted accurately and dependably by using machine learning intelligence frameworks that depend upon the dynamic’s relationship between AD based on the afore determination methods and physicochemical variables of waterbody and other matrices in a low-cost and time-effective way. Thus, an artificial intelligence system for AD determination in waterbodies receiving WWTP effluents, which are subsequently used as irrigation source waters (ISW), would be an invaluable preventive option for immediate and future public health challenges. The main merits of ML models lie in their capacity to overcome problems associated with traditional statistical models in capturing and predicting multidimensional interactions in large data by “learning” deep patterns26. ML frameworks and SAIS allow proactive management of events rather than reactive. Thus, MLs and SAIS are finding increasing applications in many sectors, including medicine, precision farming, environmental management, water purification, Vibrio abundance on microplastics, wastewater treatment, watershed typologies and stormwater quality and epidemiology prediction26,27,28,29,30 and the application is endlessly expanding daily. Therefore, the present study aimed at predicting/determining AD in waterbodies (receiving hospital, municipal and WWTP effluents) using ML without the repetitive, laborious, cost-intensive, and time-consuming laboratory routines to reduce the turnaround time essential to make informed microbiological quality decisions (e.g., for irrigation use and other purposes). Materials and methods Sample collection and in-situ determination of physicochemical data Water samples were collected using grab sampling technique from the Great Fish River, Keiskamma River and Thyume River, serving as receiving waterbodies for municipal and hospital wastewater effluents (MHWE) discharge at one or more points along their courses in the Eastern Cape Province, South Africa. At least, five strategic sampling locations based on socioeconomic importance (e.g., fishing, swimming, nearness to wastewater treatment plants, farming, pasture, irrigation, dam etc.) of each river were selected for sample collection. At the sampling sites, water temperature (TEMP), pH, total dissolved solids (TDS), electrical conductivity (EC), salinity (SAL), and dissolved oxygen (DO) were determined in-situ using a standard multi-parameter device (Hanna, model HI 9828) instrumental protocol. In addition, the rivers’ turbidity (TBS) was assessed using a turbidimeter (HACH, model 2100P). For microbiological analysis and biochemical oxygen demand (BOD) measurement, midstream water samples (25–30 cm depth) were collected at the same sampling sites in three replicates into sterile glass and amber bottles, respectively and stored in iceboxes and transported to the laboratory for analysis with 6 h of collection31. After five days of incubation of samples in amber bottles, the BOD of the samples was determined using a biochemical oxygen demand meter (HACH, HQ 40 days)31. Detailed sampling strategy, sampling points’ description, and study area maps were as described in our previous study32. Acinetobacter data acquisition The density of Acinetobacter species in the water samples was estimated via membrane filtration31. Briefly, 100 ml of serially diluted water samples were filtered in three independent iterations using a Ø47 mm 0.45 μm pore-sized cellulose membrane31. These membranes were aseptically placed onto freshly prepared Acinetobacter CHROMagar plates containing selective supplements (CHROMagar, Paris, France) per the manufacturer’s instruction. The plates were incubated at 37 °C for 24 h. All Acinetobacter colonies presented as red colouration on CHROMagar plates post-incubation was counted and log transformed (log CFU/100 mL). All isolates were purified, validated as oxidase negative, and assessed by Acinetobacter-specific polymerase chain reaction. Fifty per cent (50%) of glycerol stocks of the pure culture was prepared and stored at – 80 °C. Model development Pre-processing and modelling procedure The datasets were first subjected to explanatory and bivariate Pearson's correlation (r) [Eq. (1)] analyses. The estimation of 95% confidence intervals (95% CI) of the r-value in bivariate correlation analysis was based on Fisher's r-to-z transformation with bias adjustment [Eq. (2)]. To avoid multicollinearity, where the r-value between two variables ≥ 0.99, one of them was dropped randomly in subsequent models (see Table 2). Any of the two variables can be used in the implementation of the models. Also, for models’ implementation, the datasets were centre scaled such that the mean = 0 and the square root of the variance = 1 for variables. The dataset for DTR was not scaled. $$r=\\sum_{i=1}^{h}({u}_{i}-\\overline{u })({w}_{i}-\\overline{w })/\\sqrt{\\sum_{i=1}^{h}{({u}_{i}-\\overline{u })}^{2}}\\sqrt{\\sum_{i=1}^{n}{{(w}_{i}-\\overline{w })}^{2}} $$ (1) $$z=\\mathrm{arctanh}\\left(r\\right)= 1/2\\mathrm{log}((1+r)/(1-r))$$ (2) where r is a Pearson’s correlation coefficient with possible values from − 1 to 1 inclusive. Here, u and w represent a pair of PVs and h is the sample size. Acinetobacter density (AD) was modelled as a dependent variable of the rivers’ physicochemical variables (PVs). Hence, the conditional expected (CE) AD value at instances of PVs consisting of a vector of TEMP, DO, BOD, TSS, SAL, and pH is derived as \\({\\mathrm{CE}}_{AD|PVs}(AD)\\). Thus, the estimation of the mean AD can be constructed as Eq. (3). $${\\mathrm{CE}}_{AD|PVs}(AD)\\approx f\\left(PVs\\right).$$ (3) Equation (1) was implemented via 18 regression ML algorithms that have the robust capability to fit multidimensional variables of ordinal/continuous outcome, including linear regression with stepwise selection (LRSS), an RF, XGB, SVR, linear regression (LR), a gradient boosted machine (GBM), neural network (NNT) (6–6–1 network with 49 weights multiple; decay = 0.1), a KNN (k-nearest neighbour), M5P, a boosted regression tree (BRT), a Cubist regression, a decision tree (DTR), multivariate adaptive regression splines (MARS), ANN [with one 6-node hidden layers (ANN6), extreme learning machine (ELM), two 4- and 2- node hidden layers (ANN42), and two 3- and 3-node hidden layers (ANN33), and elastic net (ENR)]. The dataset (540 observations, 6 variables after explanatory feature selection) was split into a learning subset (70%) for the estimate of models’ coefficients and a validation subset (30%) for model substantiation. In all the ML implementations of Eq. (1), ten different learning-validation dataset pairs were generated via tenfold cross-validation accompanied by 3 repeats and 10 tune-lengths. Optimal hyper-parameters were derived and selected through a grid search algorithm. Models’ hyper-parameters are provided in detail in the supplemental material. Detailed discussion on the strengths and weaknesses and previous application of the various algorithms could be found elsewhere and their documentation. The explanatory rendition of all variables contributions in the models was according to Eq. (4): $$f\\left(w.\\right)= {t}_{0} +\\sum_{j=1}^{p}t\\left(j,w.\\right),$$ (4) where t(j, w.) denotes the jth variable contribution measure to the model’s prediction at instance w and t0 is the average model prediction33. Assessment of ML model’s performance The MLI algorithms model’s performance was determined against experimental data based on Eqs. (5)–(8): $$\\mathrm{Mean \\, squared}-\\mathrm{error}: MSE\\left(f,\\underline{U}, \\underline{w}\\right)=\\frac{1}{h}\\sum_{i}^{h}{\\left({\\widehat{w}}_{i}-{w}_{i}\\right)}^{2}= \\frac{1}{h}\\sum_{1}^{h}{r}_{i}^{2}$$ (5) $$\\mathrm{Root}-\\mathrm{mean}-\\mathrm{squared \\, error}: RMSE\\left(f,\\underline{U}, \\underline{w}\\right)= \\sqrt{MSE\\left(f,\\underline{U}, \\underline{w}\\right)}$$ (6) $${R}^{2}\\left(f,\\underline{U}, \\underline{w}\\right)=1- \\frac{MSE\\left(f,\\underline{U}, \\underline{w}\\right)}{MSE\\left({f}_{0},\\underline{U}, \\underline{w}\\right)}$$ (7) $$\\mathrm{Median \\, absolute \\, deviation}: MAD\\left(f,U, \\underline{w}\\right)=median\\left(\\left|{r}_{1}\\right|, \\ldots , \\left|{r}_{n}\\right|\\right).$$ (8) where h = number of the sample; f0(): baseline model; ri: residual for the ith observation, U: matrix of PVs; \\(\\underline{w}\\): vector of AD; \\(f\\left(\\widehat{\\underline{\\theta }},\\underline{U}\\right):\\) model based on the training dataset; \\(\\widehat{\\underline{\\theta }}:\\) estimated values of the model’s coefficients; and \\({\\widehat{\\underline{w}}}_{i}:\\) model’s prediction equivalent to \\({\\mathrm{w}}_{i}\\). RMSE was further employed in assessing mean dropout loss for variable importance following 1000 permutation34,35. Models’ sensitivity analysis Residual diagnostics and partial-dependence profiles of PVs on the predicted AD was generated to assess the model’s sensitivity. The partial-dependence profile of a model f() (i.e., anticipated/predicted AD value at an instance by the model) and the outcome variable Uj set at s (over the empirical/marginal distribution of U-j (h), i.e., the collective distribution of all other PVs without Uj ) is created according to Eqs. (9) and (10): $${q}_{P}^{j}\\left(\\mathrm{s}\\right)={E}_{{\\underline{X}}^{-j}}\\left\\{f\\left({U}^{j|=s}\\right)\\right\\}.$$ (9) $${\\widehat{q}}_{P}^{j}\\left(\\mathrm{s}\\right)=\\frac{1}{h}\\sum_{i=1}^{h}f\\left({\\underline{u}}_{i}^{j|=s}\\right).$$ (10) The implementation of all models was achieved in R v.4.1.2 software. Results A descriptive summary of the physicochemical variables and Acinetobacter density of the waterbodies is presented in Table 1. The mean pH, EC, TDS, and SAL of the waterbodies was 7.76 ± 0.02, 218.66 ± 4.76 µS/cm, 110.53 ± 2.36 mg/L, and 0.10 ± 0.00 PSU, respectively. While the average TEMP, TSS, TBS, and DO of the rivers was 17.29 ± 0.21 °C, 80.17 ± 5.09 mg/L, 87.51 ± 5.41 NTU, and 8.82 ± 0.04 mg/L, respectively, the corresponding DO5, BOD, and AD was 4.82 ± 0.11 mg/L, 4.00 ± 0.10 mg/L, and 3.19 ± 0.03 log CFU/100 mL respectively. Table 1 Descriptive statistics of the physicochemical variables and Acinetobacter density of the waterbodies. Full size table The bivariate correlation between paired PVs varied significantly from very weak to perfect/very strong positive or negative correlation (Table 2). In the same manner, the correlation between various PVs and AD varies. For instance, negligible but positive very weak correlation exist between AD and pH (r = 0.03, p = 0.422), and SAL (r = 0.06, p = 0.184) as well as very weak inverse (negative) correlation between AD and TDS (r = − 0.05, p = 0.243) and EC (r = − 0.04, p = 0.339). A significantly positive but weak correlation occurs between AD and BOD (r = 0.26, p = 4.21E−10), and TSS (r = 0.26, p = 1.09E−09), and TBS (r = 0.26, 1.71E-09) whereas, AD had a weak inverse correlation with DO5 (r = − 0.39, p = 1.31E−21). While there was a moderate positive correlation between TEMP and AD (r = 0.43, p = 3.19E−26), a moderate but inverse correlation occurred between AD and DO (r = − 0.46, 1.26E−29). Table 2 Bivariate correlational relationship among physicochemical variables and Acinetobacter density in waterbodies receiving municipal and hospital wastewater effluents. Full size table Model predicted AD and explanatory contribution of PVs The predicted AD by the 18 ML regression models varied both in average value and coverage (range) as shown in Fig. 1. The average predicted AD ranged from 0.0056 log units by M5P to 3.2112 log unit by SVR. The average AD prediction declined from SVR [3.2112 (1.4646–4.4399)], DTR [3.1842 (2.2312–4.3036)], ENR [3.1842 (2.1233–4.8208)], NNT [3.1836 (1.1399–4.2936)], BRT [3.1833 (1.6890–4.3103)], RF [3.1795 (1.3563–4.4514)], XGB [3.1792 (1.1040–4.5828)], MARS [3.1790 (1.1901–4.5000)], LR [3.1786 (2.1895–4.7951)], LRSS [3.1786 (2.1622–4.7911)], GBM [3.1738 (1.4328–4.3036)], Cubist [3.1736 (1.1012–4.5300)], ELM [3.1714 (2.2236–4.9017)], KNN [3.1657 (1.4988–4.5001)], ANET6 [0.6077 (0.0419–1.1504)], ANET33 [0.6077 (0.0950–0.8568)], ANET42 [0.6077 (0.0692–0.8568)], and M5P [0.0056 (− 0.6024–0.6916)]. However, in term of range coverage XGB [3.1792 (1.1040–4.5828)] and Cubist [3.1736 (1.1012–4.5300)] outshined other models because those models overestimated and underestimated AD at lower and higher values respectively when compared with raw data [3.1865 (1–4.5611)]. Figure 1 Comparison of ML model-predicted AD in the waterbodies. RAW raw/empirical AD value. Full size image Figure 2 represents the explanatory contributions of PVs to AD prediction by the models. The subplot A-R gives the absolute magnitude (representing parameter importance) by which a PV instance changes AD prediction by each model from its mean value presented in the vertical axis. In LR, an absolute change from the mean value of pH, BOD, TSS, DO, SAL, and TEMP corresponded to an absolute change of 0.143, 0.108, 0.069, 0.0045, 0.04, and 0.004 units in the LR’s AD prediction response/value. Also, an absolute response flux of 0.135, 0.116, 0.069, 0.057, 0.043, and 0.0001 in AD prediction value was attributed to pH, BOD, TSS, DO. SAL, and TEMP changes, respectively, by LRSS. Similarly, absolute change in DO, BOD, TEMP, TSS, pH, and SAL would achieve 0.155, 0.061. 0.099, 0.144, and 0.297 AD prediction response changes by KNN. In addition, the most contributed or important PV whose change largely influenced AD prediction response was TEMP (decreases or decreases the responses up to 0.218) in RF. Summarily, AD prediction response changes were highest and most significantly influenced by BOD (0.209), pH (0.332), TSS (0.265), TEMP (0.6), TSS (0.233), SAL (0.198), BOD (0.127), BOD (0.11), DO (0.028), pH (0.114), pH (0.14), SAL(0.91), and pH (0.427) in XGB, BTR, NNT, DTR, SVR, M5P, ENR, ANET33, ANNET64, ANNET6, ELM, MARS, and Cubist, respectively. Figure 2 PV-specific contribution to eighteen ML models forecasting capability of AD in MHWE receiving waterbodies. The average baseline value of PV in the ML is presented on the y-axis. The green/red bars represent the absolute value of each PV contribution in predicting AD. Full size image Table 4 presents the eighteen regression algorithms’ performance predicting AD given the waterbodies PVs. In terms of MSE, RMSE, and R2, XGB (MSE = 0.0059, RMSE = 0.0770; R2 = 0.9912) and Cubist (MSE = 0.0117, RMSE = 0.1081, R2 = 0.9827) ranked first and second respectively, to outmatched other models in predicting AD. While MSE and RMSE metrics ranked ANET6 (MSE = 0.0172, RMSE = 0.1310), ANRT42 (MSE = 0.0220, RMSE = 0.1483), ANET33 (MSE = 0.0253, RMSE = 0.1590), M5P (MSE = 0.0275, RMSE = 0.1657), and RF (MSE = 0.0282, RMSE = 0.1679) in the 3, 4, 5, 6, and 7 position among the MLs in predicting AD, M5P (R2 = 0.9589 and RF (R2 = 0.9584) recorded better performance in term of R-squared metric and ANET6 (MAD = 0.0856) and M5P (MAD = 0.0863) in term of MAD metric among the 5 models. But Cubist (MAD = 0.0437) XGB (MAD = 0.0440) in term of MAD metric. The feature importance of each PV over permutational resampling on the predictive capability of the ML models in predicting AD in the waterbodies is presented in Table 3 and Fig. S1. The identified important variables ranked differently from one model to another, with temperature ranking in the first position by 10/18 of the models. In the 10 algorithms/models, the temperature was responsible for the highest mean RMSE dropout loss, with temperature in RF, XGB, Cubist, BRT, and NNT accounting for 0.4222 (45.90%), 0.4588 (43.00%), 0.5294 (50.82%), 0.3044 (44.87%), and 0.2424 (68.77%) respectively, while 0.1143 (82.31%),0.1384 (83.30%), 0.1059 (57.00%), 0.4656 (50.58%), and 0.2682 (57.58%) RMSE dropout loss was attributed to temperature in ANET42, ANET10, ELM, M5P, and DTR respectively. Temperature also ranked second in 2/18 models, including ANET33 (0.0559, 45.86%) and GBM (0.0793, 21.84%). BOD was another important variable in forecasting AD in the waterbodies and ranked first in 3/18 and second in 8/18 models. While BOD ranked as the first important variable in AD prediction in MARS (0.9343, 182.96%), LR (0.0584, 27.42%), and GBM (0.0812, 22.35%), it ranked second in KNN (0.2660, 42.69%), XGB (0.4119, 38.60); BRT (0.2206, 32.51%), ELM (0.0430, 23.17%), SVR (0.1869, 35.77%), DTR (0.1636, 35.13%), ENR (0.0469, 21.84%) and LRSS (0.0669, 31.65%). SAL rank first in 2/18 (KNN: 0.2799; ANET33: 0.0633) and second in 3/18 (Cubist: 0.3795; ANET42: 0.0946; ANET10: 0.1359) of the models. DO ranked first in 2/18 (ENR [0.0562; 26.19%] and LRSS [0.0899; 42.51%]) and second in 3/18 (RF [0.3240, 35.23%], M5P [0.3704, 40.23%], LR [0.0584, 27.41%]) of the models. Table 3 Feature importance of PVs over 100 permutational resampling on AD prediction. Full size table Figure 3 shows the residual diagnostics plots of the models comparing actual AD and forecasted AD values by the models. The observed results showed that actual AD and predicted AD value in the case of LR (A), LRSS (B), KNN (C), BRT 9F), GBM (G), NNT (H), DTR (I), SVR (J), ENR (L), ANET33 (M), ANER64 (N), ANET6 (O), ELM (P) and MARS (Q) skewed, and the smoothed trend did not overlap. However, actual AD and predicted AD values experienced more alignment and an approximately overlapped smoothed trend was seen in RF (D), XGB (E), M5P (K), and Cubist (R). Among the models, RF (D) and M5P (K) both overestimated and underestimated predicted AD at lower and higher values, respectively. Whereas XGB and Cubist both overestimated AD value at lower value with XGB closer to the smoothed trend that Cubist. Generally, a smoothed trend overlapping the gradient line is desirable as it shows that a model fits all values accurately/precisely. Figure 3 Comparison between actual and predicted AD by the eighteen ML models. Full size image The comparison of the partial-dependence profiles of PVs on AD prediction by the 18 modes using a unitary model by PVs presentation for clarity is shown in Figs. S2–S7. The partial-dependence profiles existed in i. a form where an average increase in AD prediction accompanied a PV increase (upwards trend), (ii) inverse trend, where an increase in a PV resulted in a decline AD prediction, (iii) horizontal trend, where increase/decrease in a PV yielded no effects on AD prediction, and (iv) a mixed trend, where the shape switch between 2 or more of i–iii. The models' response varied with a change in any of the PV, especially changes beyond the breakpoints that could decrease or increase AD prediction response. The partial-dependence profile (PDP) of DO for models has a downtrend either from the start or after a breakpoint(s) of nature ii and iv, except for ELM which had an upward trend (i, Fig. S2). TEMP PDP had an upward trend (i and iv) and, in most cases filled with one or more breakpoints but had a horizontal trend in LRSS (Fig. S3). SAL had a PDP of a typical downward trend (ii and iv) across all the models (Fig. S4). While pH displayed a typical downtrend PDP in LR, LRSS, NNT, ENR, ANN6, a downtrend filled with different breakpoint(s) was seen in RF, M5P, and SVR; other models showed a typical upward trend (i and iv) filled with breakpoint(s) (Fig. S5). The PDP of TSS showed an upward trend that returned to a plateau (DTR, ANN33, M5P, GBM, RF, XFB, BRT), after a final breakpoint or a declining trend (ANNT6, SVR; Fig. S6). The BOD PDP generally had an upward trend filled with breakpoint(s) in most models (Fig. S7). Discussion The present investigation studied the invaluableness of MLs in determining AD in waterbodies to shorten the turnaround time involved in routine determination of the emerging pathogen with significant public health priority and high case-fatality ratio. Jiang et al. previously demonstrated that ML models predicted and offered cost-effective risk assessment options for Vibrio spp. relative abundances on microplastics in the estuarine milieu based on easy-to-measure environmental variables30. Characteristics of the waterbodies The pH of the waterbodies (5.05–9.11) did not satisfied South African water guidelines for irrigation purposes and recreational use of a pH range of 6.5–8.4 and 6.5–8.5, respectively36 but the average pH (7.76 ± 0.02) of the waterbodies met the FAO criteria37. In relation to the pathogen, Acinetobacter spp. are known to possess and survive under a wide pH (5–10) and temperature (− 20 to 44 °C) range with an optimal long-term survival temperature of 4–22 °C no matter nutrient availability38. The observed EC (47.00–561.00 µS/cm) of the waterbodies generally satisfied the WHO guidelines for 2500 μS/cm in surface waters39, and the mean (218.66 ± 4.76 μS/cm) was in accepted limits of 400 µS/cm and 700 to 3000 µS/cm WHO and FAO standard for irrigation water37. The EC of the waterbodies also fell in the categories of Class I (excellent: ≤ 250 µS/cm) and Class II (good: 250–750 µS/cm) irrigation water EC limits classification40. The EC concentrations of the waterbodies will generally impact fishing negatively, as an EC range of 0.15–0.50 μS/cm are necessary to support fisheries according to the USEPA (United States Environmental Protection Agency)41. TDS summed up organic and inorganic substances in the waterbodies but generally did not exceed the WHO’s maximum permissible limit of 1000 mg/L TDS in drinking water39. The TDS (23.00–279.00 mg/L) of the waterbodies followed the World Health Organization standard of a TDS < 300 mg/L (excellent) and its average (110.53 ± 2.36 mg/L) does not exceed the USEPA and WHO limit for drinking water (500 mg/L)41,42. However, the TBS average values of the waterbodies exceeded the WHO guideline of 5 NTU39. Higher EC, TDS, and TBS in surface waters are generally attributed to wastewater and anthropogenic activities inputs43. Also, high levels of EC, TDS and TBS are known to impair visibility, cleanliness, safety, aesthetics, and recreational use of river waters44. The mean TSS (80.17 ± 5.09 mg/L) of the waterbodies exceeded the WHO (2006) wastewater discharge limit of 60 mg/L and exceeded the Australia and New Zealand (2000) guideline limits (TSS < 0.03 mg/L) of water quality for aquaculture45,46. In addition, the average BOD level (4.00 ± 0.10 mg/L) of the waterbodies complied with the tolerance limit of 5 mg/L in surface waters for aquatic life47. Higher level of BOD in waterbodies depletes DO available for aquatic organisms48 and generally have negative impacts on fishing and fish harvest. The average AD (3.19 ± 0.03 log CFU/100 mL) obtained in this study is comparable to AD reported from waterbody impacted by hospital wastewater, WWTP, informal settlements, and veterinary clinics effluents along Umhlangane River course in Durban South Africa49. The observed DO (8.82 ± 0.04 mg/L) and BOD (4.00 ± 0.10 mg/L) both suggested the facultative aerophilic characteristics of Acinetobacter and a relatively high nutrient composition of the rivers’ probable from wastewater effluents. The average EC in the waterbodies was 218.66 ± 4.76 µS/cm. This shows high level of organic carbon (DOC) in the rivers. EC is an indirect indicator of DOC25,50,51 and found to have associations with Acinetobacter-specific ARG and other ARG abundance25,52,53. Generally, A. baumannii in the environment can survive irrespective of the level of DO54. The finding from this study revealed that AD negligible—positive but very weak—correlated with pH (r = 0.03), and SAL (r = 0.06) and—negatively—with TDS (r = − 0.05) and EC (r = − 0.04) (Table 2). These results can be attributed to the ability of the Acinetobacter to survive under a wide range of harsh environmental conditions. A significantly positive correlation between AD and BOD (r = 0.26), TSS (r = 0.26), and TBS (r = 0.26) indicated a considerable increase AD with an increase in nutrient and DOC pollution in aquatic environments (Fig. S7). Also, findings showed a moderate positive correlation between TEMP and AD (r = 0.43), suggesting that AD improves in abundance with an increase in temperature38 to specific breakpoints. AD moderately and inversely correlated with DO (r = − 0.46), indicating that Acinetobacter abundance increases with an anaerobic condition or low oxygen level. Model predicted AD and explanatory contribution of PVs The predicted AD average and range values by the 18 ML models differed. The present study's findings suggested that both lower/upper bound and the general trend characteristic of the prediction is far more important than the average prediction only. Most algorithms had higher average predictions but overestimated or underestimated AD values at lower and upper bounds, respectively. Thus, algorithms other than XGB and Cubist are not suitable for predicting AD in waterbodies. Whereas the performance of most ML algorithms, such as RF, DTR, and MARS43,55, has been praised in terms of average predictions and regression metrics, most studies neglect consideration of the lower/upper bound and the general trend characteristic of their predictions—which are far significant when dealing with infectious organisms/poison that might have low infectivity dose/potent at a very low concentration. Several researchers also reported the superiority of XGB against several ML algorithms in predictive performance in terms of average prediction, and sensitivity43,55. Although a previous study showed that RF models achieved higher level of accuracy than XGB, SVR, and ENR in predicting the Vibrio spp. relative abundance on microplastics, the actual trend characteristics including the lower/upper bounds were not reported30. The difference in the models’ trend coverage and boundary characteristics in AD predictions are attributable to the capability of the models to capture the complex interactions of co-occurrence levels/changes in different environmental variables at different degrees or concentrations. The performance of Cubist [3.1736 (1.1012–4.5300)] was also found to be comparable to XGB [3.1792 (1.1040–4.5828)] in term of trend and boundaries characteristics as both models outshined other models. A typical problem with most algorithms observed in this study was over-estimation and underestimation of AD at lower and higher concentrations, respectively. These limitations suggested that the models could raise false alarm of high risk at lower AD as well as undermine higher risk at higher concentrations of AD. An indication that those models could not capture the nonlinear complex relationships between AD, PVs, and underlying anthropogenic inputs. Nevertheless, the absolute contributions of individual PV change to models’ prediction of AD from their models attributed mean values varied (Fig. 2). The behaviours could be interpreted in term of the complex interactions among the PVs coupled with the prevailing anthropogenic fluxes in the waterbodies. Several PVs undergo fluctuations co-concurrently unlike behaviours in models in which other PVs are held constant to assess a particular PV’s effects on the outcome variable (AD). These interactions are capture to some great degrees by the algorithms leading to differences in the ranking of PVs contributions to AD predictions by the algorithms. Also, intrinsic characteristics of the distinct algorithms and data noise are major causes of differences in observed contributions of variables in ML models30. Considering the overall performance of 18 AI-based models assayed in this study using four metrics, XGB (MSE = 0.0059, RMSE = 0.0770; R2 = 0.9912; MAD = 0.0440) and Cubist (MSE = 0.0117, RMSE = 0.1081, R2 = 0.9827; MAD = 0.0437) were the best models ranking in first and second position respectively, to outshined others in AD prediction in waterbodies (Table 4). XGB has reputation of been the best performer ML algorithms in most microbiological regression studies compared with others30. Cubist has been demonstrated to outperformed partial least squares, RF, and MARS in predicting soil property including soil total nitrogen, organic carbon, total sulphur, exchangeable calcium clay; sand, and cation exchange capacity, and pH and RF, classification, and regression trees, SVM, and KNN predicting NH4–N and COD in subsurface constructed wetlands effluents56,57. In forecasting daily dissemination of COVID-19 vaccination, Cubist outperformed ENR, Gaussian Process, Slab (SPIKES), and Spikes ML algorithms58. Also, Cubist has been shown to outmatched XGB in predicting left ventricular pressures, volumes, and stresses59. An ensemble of XGB and Cubist could be further exploited for a better performance in forecasting AD in waterbodies. However, ANN (R2 = 0.953) was demonstrated to show a superior predictive coefficient over Cubist model (R2 = 0.946) and LR (R2 = 0.481) when assaying faecal coliform content in treated wastewater for reuse purposes60. Generally, while XGB involved ensemble of trees that capture multidimensional interactions/relationships, Cubist combined the strengths of both linear regression equations and a committee tree-based structural nodes for capture effectively linear and nonlinear multidimensional relationships among variables and outcome event56. The results show that ANET6, ANRT42, ANET33, M5P, and RF had MSE and RMSE that placed them in the 3, 4, 5, 6, and 7 position among the MLs in predicting AD, their performances are to be avoided for practical forecast of AD for preventive purposes. Table 4 Predictive performance of eighteen regression algorithms in predicting AD in the waterbodies. Full size table Feature importance of PVs in predicting AD TEMP was the most important PV in predicting AD in the waterbodies and ranked by 10/18 ML-algorithms including RF, XGB, Cubist, BRT, and NNT accounting 45.90%, 43.00%, 50.82%, 44.87%, and 68.77% in respective models, as well as 82.31%, 83.30%, 57.00%, 50.58%, and 57.58% RMSE dropout loss in ANET42, ANET10, ELM, M5P, and DTR respectively. The observed results can be explained in term of the direct and indirect influence TEMP had on other PVs and AD in the waterbodies. DO decreases with increase temperature, favoured facultative aerobic lifestyle of Acinetobacter. Also, temperature increase decomposition of organic matters in waterbodies, thereby leading to high BOD contents providing more nutrients for AD and other microbial lives. Resultant increase in DOC in waterbodies is an indirect indicator of EC25,50,51 and found to have associations with Acinetobacter-specific ARG abundance in waterbodies25,52,53. BOD was another significant feature identified in forecasting AD in the waterbodies and ranked first in 3/18 [MARS (182.96%), LR (27.42%), and GBM (22.35%)] and second in 8/18 models [KNN (42.69%), XGB (38.60%); BRT (32.51%), ELM (23.17%), SVR (35.77%), DTR (35.13%), ENR (21.84%) and LRSS (31.65%)]. BOD is a measure of nutrient pollution from anthropogenic inputs such as wastewater effluents, agricultural activities, and environmental events such as rainwater runoffs among others. BOD also influence EC, TDS, and TBS in surface waters43 Whereas SAL was identified as first important feature in in 2/18 (KNN, ANET33) and second in 3/18 (Cubist, ANET42, ANET6) models, Acinetobacter can only survive relatively high SAL without improving its population density (Fig. S4). Unlike Vibrio spp, whose high density are linked with high salinity30 as it promotes genes expression and functional proteins61 and eventual vibrio growth and reproduction62, high SAL are not suitable for AD as its inhibitory for growth related gene expression. The sensitivity analyses of the 18 ML predictive models of AD using the residual diagnostics plots found that LR (A), LRSS (B), KNN (C), BRT (F), GBM (G), NNT (H), DTR (I), SVR (J), ENR (L), ANET33 (M), ANER64 (N), ANET6 (O), ELM (P) and MARS (Q) did not fit the data optimally. This imply that the models are not suitable for forecasting AD in waterbodies. Meanwhile models such as RF (D), XGB (E), M5P (K), and Cubist (R) fitted the data with more alignment and approximately overlapped smoothed trend between the actual and the predicted AD values, RF (D) and M5P (K) over-predicted and under-predicted AD at lower and higher extremities, respectively. Thus, could be interpreted as forecasting exaggerated risk (AD) at probable innocuous level while weakening true risk at higher extremity. Such models are not suitable to assess real life events of AD in waterbodies. Although both XGB and Cubist predicted AD value slightly higher than the actual value at lower extremities, XGB had a closer fit smoothed trend than Cubist. Compared to other models assayed in this study, the duo is the best and could be applied for AD AI-smart system design for water quality monitoring. A stacked model of XGB and Cubist may outmatch and overcome the limitation the two models had at the lower extremity of AD value. The overall summary of the PDPs of the PVs on AD prediction by the 18 modes (Figs. S2–S7), found that any degree of change/flux in a particular PV especially changes beyond its breakpoints attracted a corresponding varied response in AD which could decrease or increase AD prediction response. The various forms of partial-dependence profiles as explained in previous section also showed the direct/indirect/complex interactions between a PV and AD coupled with the sensitivity of a model in mapping the relationships. Summarily, the increase in AD level (PDP) in most models equivalent to a decline trend in DO and SAL especially after its breakpoint(s) excluding ELM where DO had upward trend (i; Figs. S2 and S4). These patterns revealed a nonlinear relationship between AD and the PVs. A near increase-by-increase relationship exist between TEMP and AD in most models coupled with one or more breakpoints. LRSS revealed a zero-relationship between AD and TEMP indicating its inability to map the relationship between them. Although Acinetobacter has been showed to have a broad pH range, a typical downtrend PDP of pH by LR, LRSS, NNT, ENR, ANN6—filled with breakpoint(s) in RF, M5P, and SVR while other models showed a typical upward—is informative of the weakness of the models as increasing in pH from 5.02 to 10 promotes Acinetobacter growth38. AD prediction responses aligned with a general increase in BOD regardless of breakpoint(s) in most models revealed important of nutrients for Acinetobacter population density in waterbodies. Furthermore, the strengths of this current study aside been the first that assessed AD in waterbodies receiving hospital and municipal wastewater effluents along their courses, two ML algorithms optimally and accurately predict AD, proven to be promising candidates for developing SAIS for AD determination and thereby shorten the turnaround time and reduce labour involved in experimental approaches. Also, the MLs were able to capture nonlinear complex multidimensional interactions between AD and PVs as well as their inherent anthropogenic fuels which conventional mathematical models could not robustly mapped63. In addition, the MLs are amenable to improvements and can be utilized across several water management landscape. However, the shortcoming of the present study lies in the lack of spatiotemporal covariates that could improve upon the ML models’ predictions as stochastic distributions of waterborne pathogens are governed by both spatial extension and temporal duration across depth in water columns. Future studies should seek data from a wide range of socioeconomic activities/areas as well as include spatiotemporal and geospatial inputs in developing AI-based predictive framework for AD determination. Conclusion The present study has proven SAIS as an evidence-based strategy to shorten the turnaround time involved in assessing AD in waterbodies; thereby minimizing exposure. The best models (XGB/Cubist) identified in this study could be developed into standalone SAIS (XGB/Cubist, XGB-Cubist ensemble, or web app) or integrated into existing instrumentations for PV estimation in waterbodies to enhance timely decision-making of microbiological qualities of waterbodies for irrigation and other purposes. The study also unveiled temperature and BOD as significant candidates for predicting AD in waterbodies in most models. Finally, AD in waterbodies could accurately and reliably predicted via AI-based smart systems that rely on waterbody physicochemical variables’ dynamics in a low-cost and time-effective manner. Data availability All data generated or analysed during this study are included in this published article and its Supplementary Information Files. Abbreviations AD: Acinetobacter density ANN: Artificial neural network BOD: Biochemical oxygen demand BRT: Boosted regression tree Cubist: Cubist regression DTR: Decision tree regression DO: Dissolved oxygen ENR: Elastic net regression EC: Electrical conductivity XDR: Extensively drug-resistant XGB: Extreme gradient boosted regression ELM: Extreme learning machine GBM: Gradient boosted machine ISW: Irrigation source waters KNN: K-nearest neighbours LR: Linear regression LRSS: Linear regression with stepwise selection ML: Machine learning MSE: Mean squared error MAD: Median absolute deviation MDR: Multidrug-resistant MARS: Multivariate adaptive regression splines MHWE: Municipal and hospital wastewater effluents NNT: Neural network PVs: Physicochemical variables RF: Random forest RMSE: Root-mean-squared error SAL: Salinity SAIS: Smart artificial intelligent system SVR: Support vector regression TEMP: Temperature TDS: Total dissolved solids TBS: Turbidity WWTPs: Wastewater treatment plants References Sofia, C., Angela, R., Luminiţa, S. I., Raluca, F. & Iuliana, T. Cultural and biochemical characteristics of Acinetobacter spp. strains isolated from hospital units. J. Prev. Med. 12(3–4), 35–42 (2004). Google Scholar   Krizova, L., Maixnerova, M., Sedo, O. & Nemec, A. Acinetobacter bohemicus sp. nov. widespread in natural soil and water ecosystems in the Czech Republic. Syst. Appl. Microbiol. 37, 467–473 (2014). Article   PubMed   Google Scholar   Gundi, V. A., Dijkshoorn, L., Burignat, S., Raoult, D. & La Scola, B. Validation of partial rpoB gene sequence analysis for the identification of clinically important and emerging Acinetobacter species. Microbiol. 155, 2333–2341 (2009). Article   CAS   Google Scholar   Nemec, A. et al. Genotypic and phenotypic characterization of the Acinetobacter calcoaceticus-Acinetobacter baumannii complex with the proposal of Acinetobacter pittii sp. nov. (formerly Acinetobacter genomic species 3) and Acinetobacter nosocomialis sp. nov. (formerly Acinetobacter genomic species 13TU). Res. Microbiol. 162, 393–404 (2011). Article   CAS   PubMed   Google Scholar   Nemec, A. et al. Acinetobacter seifertii sp. nov., a member of the Acinetobacter calcoaceticus-Acinetobacter baumannii complex isolated from human clinical specimens. Int. J. Syst. Evol. Microbiol. 65(Pt 3), 934–942. https://doi.org/10.1099/ijs.0.000043 (2015). Article   CAS   PubMed   Google Scholar   Choi, J. Y. et al. Acinetobacter species isolates from a range of environments: species survey and observations of antimicrobial resistance. Diagn. Microbiol. Infect Dis. 74, 177–180 (2012). Article   CAS   PubMed   Google Scholar   Choi, J. Y. et al. Acinetobacter kookii sp. nov., isolated from soil. Int. J. Syst. Evol. Microbiol. 63, 4402–4406 (2013). Article   CAS   PubMed   Google Scholar   Maravić, A. et al. Urban riverine environment is a source of multidrug-resistant and ESBL-producing clinically important Acinetobacter spp. Environ. Sci. Pollut. Res. 23, 3525–3535 (2016). Article   Google Scholar   Bhuyan, S. Studies on biosurfactant/ bioemulsifier by Acinetobacter genospecies & Brevibacterium halotolerans isolated from marine environments. Ph. D. thesis, University of Pune, India (2012). Luo, Q. J. et al. Isolation and characterization of marine diesel oil-degrading Acinetobacter sp. strain Y2. Ann. Microbiol. 6(2), 633–640 (2013). Article   Google Scholar   Peleg, A. Y., Seifert, H. & Paterson, D. L. Acinetobacter baumannii: Emergence of a successful pathogen. Clin. Microbiol. Rev. 21, 538–582. https://doi.org/10.1128/CMR.00058-07 (2008). Article   CAS   PubMed   PubMed Central   Google Scholar   Adegoke, A. A., Mvuyo, T. & Okoh, A. I. Ubiquitous Acinetobacter species as beneficial commensals but gradually being emboldened with antibiotic resistance genes. J. Basic Microbiol. 52, 620–627 (2012). Article   CAS   PubMed   Google Scholar   Mujumdar, A. S. & Balu, C. Isolation, biotyping, biochemical and physiological characterization of marine Acinetobacter isolated from west coast of India. Int. J. Curr. Microbiol. Appl. Sci. 2, 277–301 (2015). Google Scholar   Palavecino, E., Greene, S. R. & Kilic, A. Characterisation of carbapenemase genes and antibiotic resistance in carbapenem-resistant Acinetobacter baumannii between 2019 and 2022. Infect. Dis. 54(12), 951–953. https://doi.org/10.1080/23744235.2022.2113137 (2022). Article   CAS   Google Scholar   Hubeny, J. et al. Characterization of carbapenem resistance in environmental samples and Acinetobacter spp. isolates from wastewater and river water in Poland. Sci. Total Environ. 822, 153–437 (2022). Article   Google Scholar   Eze, E. C., El Zowalaty, M. E. & Pillay, M. Antibiotic resistance and biofilm formation of Acinetobacter baumannii isolated from high-risk effluent water in tertiary hospitals in South Africa. J. Global Antimicrob. Resist. 27, 82–90 (2021). Article   CAS   Google Scholar   Ana, C., Joana, S. & Paula, T. Acinetobacter spp. in food and drinking water: A review. Food Microbiol. 95, 103675. https://doi.org/10.1016/j.fm.2020.103675 (2021). Article   CAS   Google Scholar   Berlau, J., Aucken, H. M., Houang, E. & Pitt, T. L. Isolation of Acinetobacter spp. including a Baumannii from vegetables: Implications for hospital-acquired infections. J. Hosp. Infect. 42, 201–204. https://doi.org/10.1053/jhin.1999.0602 (1999). Article   CAS   PubMed   Google Scholar   Houang, E. T. et al. Epidemiology and infection control implications of Acinetobacter spp in Hong Kong. J. Clin. Microbiol. 39, 228–234 (2001). Article   CAS   PubMed   PubMed Central   Google Scholar   Ruimy, R. et al. Organic and conventional fruits and vegetables contain equivalent counts of Gram-negative bacteria expressing resistance to antibacterial agents. Environ. Microbiol. 12, 608–615 (2010). Article   CAS   PubMed   Google Scholar   Dahiru, M. & Enabulele, O. Incidence of Acinetobacter in fresh carrot (Daucus carota subsp. sativus). Int. J. Biol. Biomol. Agric. Food Biotech. Eng. 9, 1203–1207 (2015). Google Scholar   Al Atrouni, A. et al. First report of oxa-72-producing Acinetobacter calcoaceticus in Lebanon. New Microb. New Infect. 9, 11–12 (2016). Article   CAS   Google Scholar   Carvalheira, A., Silva, J. & Teixeira, P. Lettuce and fruits as a source of multidrug resistant Acinetobacter spp. Food Microbiol. 64, 119–125 (2017). Article   CAS   PubMed   Google Scholar   Zekar, F. M. et al. From farms to markets: Gram-negative bacteria resistant to third-generation cephalosporins in fruits and vegetables in a region of north Africa. Front. Microbiol. 8, 1569 (2017). Article   Google Scholar   Murphy, A., Barich, D., Fennessy, M. S. & Slonczewski, J. L. An Ohio state scenic river shows elevated antibiotic resistance genes, including Acinetobacter tetracycline and macrolide resistance, downstream of wastewater treatment plant effluent. Microbiol. Spectr. 9, e00941-e1021. https://doi.org/10.1128/Spectrum.00941-21 (2021). Article   CAS   PubMed   PubMed Central   Google Scholar   Yang, X. et al. Machine learning-assisted evaluation of potential biochars for pharmaceutical removal from water. Environ. Res. 214, 113953. https://doi.org/10.1016/j.envres.2022.113953 (2022). Article   CAS   PubMed   Google Scholar   Liu, F., Jiang, X. & Zhang, M. Global burden analysis and AutoGluon prediction of accidental carbon monoxide poisoning by global burden of disease study 2019. Environ. Sci. Pollut. Res. Int. 29(5), 6911–6928 (2022). Article   PubMed   Google Scholar   Forrest, I. S. et al. Machine learning-based marker for coronary artery disease: derivation and validation in two longitudinal cohorts. Lancet 401, 215–225. https://doi.org/10.1016/S0140-6736(22)02079-7 (2023). Article   PubMed   Google Scholar   Guzman, C. B. et al. Comparing stormwater quality and watershed typologies across the United States: A machine learning approach. Water Res. 216, 118283. https://doi.org/10.1016/j.watres.2022.118283 (2022). Article   CAS   Google Scholar   Jiang, J. et al. Machine learning to predict dynamic changes of pathogenic Vibrio spp. abundance on microplastics in marine environment. Environ. Pollut. 305, 119257. https://doi.org/10.1016/j.envpol.2022.119257 (2022). Article   CAS   PubMed   Google Scholar   American Public Health Association (APHA). Standard Methods for Examination of Water and Wastewater 21st edn. (APHA, 2005). Google Scholar   Adewoyin, M. A., Ebomah, K. E. & Okoh, A. I. Antibiogram profile of Acinetobacter baumannii recovered from selected freshwater resources in the Eastern Cape Province, South Africa. Pathogens 10(9), 1110 (2021). Article   CAS   PubMed   PubMed Central   Google Scholar   Biecek, P. & Burzykowski, T. Explanatory Model Analysis: Explore (Chapman and Hall/CRC, 2021). Book   Google Scholar   Namkung, J. Machine learning methods for microbiome studies. J. Microbiol. 58(3), 206–216 (2020). Article   PubMed   Google Scholar   Hansen, L. K. Stochastic linear learning: Exact test and training error averages. Neural Netw. 6(3), 393–396 (1993). Article   Google Scholar   DWAF (Department of Water Affairs and Forestry). Water Quality Guidelines Vol. 8, 2–68 (Department of Water Affairs and Forestry, 1996). Google Scholar   Ayers, R. S. & Westcott, D. W. Water Quality for Agriculture; FAO Irrigation and Drainage Paper, No. 29 (FAO, 1985). Google Scholar   Dekic, S., Hrenovic, J., Ivankovic, T. & van Wilpe, E. Survival of ESKAPE pathogen Acinetobacter baumannii in water of different temperatures and pH. Water Sci. Technol. 78(5–6), 1370–1376 (2018). Article   PubMed   Google Scholar   World Health Organization. Guidelines for Drinking-Water Quality (World Health Organization, 2017). Google Scholar   Abbas, H., Khan, M. Z., Begum, F., Raut, N. & Gurung, S. Physicochemical properties of irrigation water in western Himilayas, Pakistan. ater Supply 20, 3368–3379 (2020). Article   CAS   Google Scholar   USEPA. National Primary Drinking Water Regulations EPA 816-F-09–004 (USEPA, 2009). Google Scholar   WHO. Guidelines for Drinking-Water Quality, 4th Edition. https://www.who.int/publications/i/item/9789241548151 (2011). Ibrahim, B. et al. Modelling of arsenic concentration in multiple water sources: A comparison of different machine learning methods. Groundw. Sustain. Dev. 17, 100745 (2022). Article   Google Scholar   Health Canada. Guidelines for Canadian recreational water quality. In: Water, Air, and Climate Change Bureau, Healthy Environments and Consumer Safety Branch, 3rd edn. (Health Canada, 2012). World Health Organization. Guidelines for the Safe Use of Wastewater, Excreta and Greywater in Agriculture and Aquaculture. (World Health Organization, 2006). https://apps.who.int/iris/handle/10665/78265. Australian and New Zealand Guidelines for Fresh and Marine Water Quality. The Guidelines: Volume 1. (2000). https://www.waterquality.gov.au/anz-guidelines/resources/previous-guidelines/anzecc-armcanz-2000. Bhatnagar, A. & Devi, P. Water quality guidelines for the management of pond fish Culture. Int. J. Environ. Sci. 5, 1980–2009 (2013). Google Scholar   Pleto, J. V. R., Migo, V. P. & Arboleda, M. D. M. Preliminary water and sediment quality assessment of the meycauayan river segment of the Marilao-Meycauayan-Obando River System in Bulacan, the Philippines. J. Health Pollut. 10, 200609 (2020). Article   PubMed   PubMed Central   Google Scholar   Govender, R., Amoah, I. D., Kumari, S., Bux, F. & Astenström, T. Detection of multidrug resistant environmental isolates of Acinetobacter and Stenotrophomonas maltophilia: A possible threat for community acquired infections?. J. Environ. Sci. Health. A 56(2), 213–225. https://doi.org/10.1080/10934529.2020.1865747 (2021). Article   CAS   Google Scholar   Monteiro, M. T. F. et al. Dissolved organic carbon concentration and its relationship to electrical conductivity in the waters of a stream in a forested Amazonian blackwater catchment. Plant Ecol. Divers. 7, 205–213. https://doi.org/10.1080/17550874.2013.820223 (2014). Article   Google Scholar   Ye, L. L., Wu, X. D., Liu, B., Yan, D. Z. & Kong, F. X. Dynamics of dissolved organic carbon in eutrophic Lake Taihu and its tributaries and their implications for bacterial abundance during autumn and winter. J. Freshw. Ecol. 30, 129–142. https://doi.org/10.1080/02705060.2014.939108 (2015). Article   CAS   Google Scholar   Garner, E. et al. Metagenomic characterization of antibiotic resistance genes in full-scale reclaimed water distribution systems and corresponding potable systems. Environ. Sci. Technol. 52, 6113–6125. https://doi.org/10.1021/acs.est.7b05419 (2018). Article   ADS   CAS   PubMed   Google Scholar   Wang, C. & Hong, P.-Y. Genome-resolved metagenomics and antibiotic resistance genes analysis in reclaimed water distribution systems. Water 12, 3477 (2020). Article   Google Scholar   Dekic, S., Jasna, H., van Erna, W., Chantelle, V. & Ivana, G.-B. Survival of emerging pathogen Acinetobacter baumannii in water environment exposed to different oxygen conditions. Water Sci. Technol. 80(8), 1581–1590. https://doi.org/10.2166/wst.2019.408 (2019). Article   CAS   PubMed   Google Scholar   Zhuang, X. & Zhou, S. The prediction of self-healing capacity of bacteria-based concrete using machine learning approaches. Comput. Mater. Continua 59, 1–10 (2019). Google Scholar   Clingensmith, C. M. & Grunwald, S. Predicting soil properties and interpreting vis-NIR models from across Continental United States. Sensors 22, 3187. https://doi.org/10.3390/s22093187 (2022). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Nguyen, X. C. et al. Developing a new approach for design support of subsurface constructed wetland using machine learning algorithms. J. Environ. Manag. 301, 113868. https://doi.org/10.1016/j.jenvman.2021.113868 (2022). Article   CAS   Google Scholar   Oyewola, D. O., Dada, E. G. & Misra, S. Machine learning for optimizing daily COVID-19 vaccine dissemination to combat the pandemic. Health Technol. 12, 1277–1293. https://doi.org/10.1007/s12553-022-00712-4 (2022). Article   Google Scholar   Dabiri, Y. et al. Prediction of left ventricular mechanics using machine learning. Front. Phys. https://doi.org/10.3389/fphy.2019.00117 (2019). Article   PubMed   PubMed Central   Google Scholar   Sbahi, S., Ouazzani, N., Hejjaj, A. & Mandi, L. Neural network and cubist algorithms to predict fecal coliform content in treated wastewater by multi-soil-layering system for potential reuse. J. Environ. Qual. 50, 144–157. https://doi.org/10.1002/jeq2.20176 (2021). Article   CAS   PubMed   Google Scholar   Naughton, L. M., Blumerman, S. L., Carlberg, M. & Boyd, E. F. Osmoadaptation among Vibrio species and unique genomic features and physiological responses of Vibrio parahaemolyticus. Appl. Environ. Microbiol. 75(9), 2802–2810. https://doi.org/10.1128/AEM.01698-08 (2009). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Whitaker, W. B., Parent, M. A. & Naughton, L. M. Modulation of responses of Vibrio parahaemolyticus O3:K6 to pH and temperature stresses by growth at different salt concentrations. Appl. Environ. Microbiol. 76(14), 4720–4729. https://doi.org/10.1128/AEM.00474-10 (2010). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Long, B. et al. Machine learning-informed and synthetic biology-enabled semi-continuous algal cultivation to unleash renewable fuel productivity. Nat. Commun. 13(1), 1–11 (2022). Article   ADS   MathSciNet   Google Scholar   Download references Acknowledgements The National Research Foundation, South Africa is acknowledged for the grant with Unique Grant No. 135441. Adewoyin appreciated The World Academy of Science, Italy (NRF/TWAS) for founding with Grant Numbers 99767 and 116387. Ekundayo thanked the African-German Network of Excellence in Science (AGNES), the Federal Ministry of Education and Research (BMBF) and the Alexander von Humboldt Foundation (AvH) for financial support. Author information Authors and Affiliations SAMRC Microbial Water Quality Monitoring Centre, University of Fort Hare, Alice, Eastern Cape, South Africa Temitope C. Ekundayo, Mary A. Adewoyin, Etinosa O. Igbinosa & Anthony I. Okoh Department of Biotechnology and Food Science, Durban University of Technology, Steve Biko Campus, Steve Biko Rd, Musgrave, Berea, 4001, Durban, South Africa Temitope C. Ekundayo & Oluwatosin A. Ijabadeniyi Department of Microbiology, University of Medical Sciences Ondo, Ondo, Nigeria Temitope C. Ekundayo Department of Biological Sciences, Faculty of Natural, Applied and Health Sciences, Anchor University, Ayobo Road, Ipaja, P. M. B. 001, Lagos, Nigeria Mary A. Adewoyin Department of Microbiology, Faculty of Life Sciences, University of Benin, Private Mail Bag 1154, Benin City, 300283, Nigeria Etinosa O. Igbinosa Department of Environmental Health Sciences, College of Health Sciences, University of Sharjah, P.O. Box 27272, Sharjah, United Arab Emirates Anthony I. Okoh Contributions Conceptualization: T.C.E.; A.M.A.; Investigation: T.C.E.; A.M.A.; Software and Formal analysis: T.C.E.; Resources: A.I.O; Writing—original draft preparation and interpretations: T.C.E.; A.M.A; A.I.O.; E.O.I.; O.A.I.; Supervision: A.I.O.; Funding acquisition: A.I.O.; critical review for intellectual contents: T.C.E.; A.M.A.; A.I.O.; E.O.I.; O.A.I.; All authors contributed to writing—review and editing, and approved the final version of the manuscript for publication. Corresponding author Correspondence to Temitope C. Ekundayo. Ethics declarations Competing interests The authors declare no competing interests. Additional information Publisher's note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Supplementary Information Supplementary Information. Rights and permissions Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About this article Cite this article Ekundayo, T.C., Adewoyin, M.A., Ijabadeniyi, O.A. et al. Machine learning-guided determination of Acinetobacter density in waterbodies receiving municipal and hospital wastewater effluents. Sci Rep 13, 7749 (2023). https://doi.org/10.1038/s41598-023-34963-6 Download citation Received 06 March 2023 Accepted 10 May 2023 Published 12 May 2023 DOI https://doi.org/10.1038/s41598-023-34963-6 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Subjects Applied microbiology Environmental microbiology Microbiology Policy and public health in microbiology Comments By submitting a comment you agree to abide by our Terms and Community Guidelines. If you find something abusive or that does not comply with our terms or guidelines please flag it as inappropriate. Download PDF Sections Figures References Abstract Introduction Materials and methods Results Discussion Conclusion Data availability Abbreviations References Acknowledgements Author information Ethics declarations Additional information Supplementary Information Rights and permissions About this article Comments Advertisement Scientific Reports (Sci Rep) ISSN 2045-2322 (online) About Nature Portfolio About us Press releases Press office Contact us Discover content Journals A-Z Articles by subject Protocol Exchange Nature Index Publishing policies Nature portfolio policies Open access Author & Researcher services Reprints & permissions Research data Language editing Scientific editing Nature Masterclasses Research Solutions Libraries & institutions Librarian service & tools Librarian portal Open research Recommend to library Advertising & partnerships Advertising Partnerships & Services Media kits Branded content Professional development Nature Careers Nature Conferences Regional websites Nature Africa Nature China Nature India Nature Italy Nature Japan Nature Korea Nature Middle East Privacy Policy Use of cookies Your privacy choices/Manage cookies Legal notice Accessibility statement Terms & Conditions Your US state privacy rights © 2024 Springer Nature Limited"

Paper 4:
- APA Citation: Boser, A., Caylor, K., Larsen, A., Pascolini-Campbell, M., Reager, J. T., & Carleton, T. (2024). Field-scale crop water consumption estimates reveal potential water savings in California agriculture. Nature Communications, 15(1), Article 2366. https://doi.org/10.1038/s41467-024-46031-2
  Main Objective: To develop and demonstrate a method for estimating water consumption at the field scale in California’s Central Valley.
  Study Location: California’s Central Valley
  Data Sources: Remote sensing data: Landsat 8, Sentinel-2; Climate data: Potential ET, Soil Quality, Precipitation; Crop data: DWR land cover, Cropland Data Layer; Irrigation data: USGS Water Data for California
  Technologies Used: Remote sensing, machine learning, IoT, statistical analysis
  Key Findings: 1) Remote sensing-based estimation of agricultural ET can accurately predict water consumption at the field scale, even in the presence of data heterogeneity, uncertainty, and quality issues.
2) Switching to less water-intensive crops could reduce water consumption by up to 93%.
3) Implementing water-saving practices could lead to significant water savings without sacrificing agricultural productivity.
  Extract 1: None
  Extract 2: None
  Limitations: None
  Relevance Evaluation: This paper is directly relevant to my point about the need for enhanced strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation as the authors use machine learning, IoT, and statistical tools to address these very issues in their study of field-scale crop water consumption estimation in California’s Central Valley. The paper provides a thorough analysis of the limitations of existing methods for estimating agricultural ET at scale and demonstrates how their method can overcome these limitations.
  Relevance Score: 1.0
  Inline Citation: (Boser, Caylor, Larsen, Pascolini-Campbell, Reager & Carleton, 2024)
  Explanation: This paper presents a method for estimating water consumption at the field scale in California’s Central Valley. The authors leverage remote sensing data and machine learning to estimate total and naturally-occurring evapotranspiration (ET). They then calculate agricultural ET, which is the difference between total ET and naturally-occurring ET. The paper provides a detailed description of the methodology, as well as an analysis of the results. The authors find that their method can be used to identify opportunities for water savings in the Central Valley. For example, they find that switching to less water-intensive crops could reduce water consumption by up to 93%.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement View all journals Search Log in Explore content About the journal Publish with us Sign up for alerts RSS feed nature nature communications articles article Article Open access Published: 25 March 2024 Field-scale crop water consumption estimates reveal potential water savings in California agriculture Anna Boser , Kelly Caylor , Ashley Larsen , Madeleine Pascolini-Campbell , John T. Reager & Tamma Carleton   Nature Communications  15, Article number: 2366 (2024) Cite this article 2648 Accesses 121 Altmetric Metrics Abstract Efficiently managing agricultural irrigation is vital for food security today and into the future under climate change. Yet, evaluating agriculture’s hydrological impacts and strategies to reduce them remains challenging due to a lack of field-scale data on crop water consumption. Here, we develop a method to fill this gap using remote sensing and machine learning, and leverage it to assess water saving strategies in California’s Central Valley. We find that switching to lower water intensity crops can reduce consumption by up to 93%, but this requires adopting uncommon crop types. Northern counties have substantially lower irrigation efficiencies than southern counties, suggesting another potential source of water savings. Other practices that do not alter land cover can save up to 11% of water consumption. These results reveal diverse approaches for achieving sustainable water use, emphasizing the potential of sub-field scale crop water consumption maps to guide water management in California and beyond. Similar content being viewed by others Efficient agricultural practices in Africa reduce crop water footprint despite climate change, but rely on blue water resources Article Open access 13 December 2023 Half of twenty-first century global irrigation expansion has been in water-stressed regions Article Open access 08 March 2024 Water footprints and crop water use of 175 individual crops for 1990–2019 simulated with a global crop model Article Open access 14 February 2024 Introduction Climate change, drought, and the overexploitation of water resources have led to declines in freshwater storage in many vital agricultural regions1, raising concerns surrounding the future of food and water security2,3. Irrigation constitutes the largest use of freshwater globally4,5, and many regions will need to decrease their agricultural water use while maintaining high levels of production to ensure a sustainable food and water supply as the population grows6. Proposed options for reducing water use include leaving lands fallow, switching to less water-intensive crops, adopting water-saving farming practices such as deficit irrigation, and improving irrigation efficiency7,8. However, any approach to reducing agricultural water use depends on the challenging task of characterizing the amount of water crops consume9. While it is possible to monitor volumes of water withdrawn for irrigation, this is a poor proxy for the amount of water crops consume through evapotranspiration (ET)10. Only some irrigation water results in ET: the rest remains in the system as runoff or recharge, though this proportion can vary widely depending on topography, climate, soil type, and farming practices11. Agricultural ET, or the increase in ET that irrigated agriculture brings, is therefore a critical measure in that it represents the amount of water that is actually “consumed” by agriculture. This water leaves the watershed entirely as it is evaporated from the soil and transpired by crops4. Since agricultural ET represents agricultural water consumption, it is key for gauging the potential of fallowing, crop switching, or other farming practices to save water12. When compared to total irrigation amounts, agricultural ET can also be used to highlight the fraction of irrigation withdrawals that do not effectively result in consumptive use13. While this water stays in the system and therefore may continue to provide beneficial uses14, it also does not achieve its original purpose of contributing to crop growth. Therefore, agricultural ET can help calculate irrigation efficiency and identify unnecessary irrigation water withdrawals from surface or groundwater reservoirs13. Two methodological challenges prevent agricultural ET from being monitored at scale. First, simply measuring total ET at scale is a challenge. Second, even when measures of ET are available, it is difficult to separate agricultural ET from the total10,15. To measure total ET, eddy covariance flux towers are highly accurate for monitoring ET at a single location16. However, they are expensive and thus sparse, and they are designed to measure ET over uniform vegetation, which is not reflective of complex agricultural landscapes17. In the absence of ET measurements, theoretical water demand can be simulated based on climate and crop type18,19. Although such tools are helpful for water demand planning20, theoretical water demand represents the ET of a crop whose water demands are fully met. Therefore, these are likely to overestimate actual ET. Additionally, these simulated estimates exclusively reflect variations in water demand influenced by factors incorporated into the model, which are often limited to crop type and climate21. Therefore, analyses based on these models are constrained to examining these specific factors, neglecting other critical drivers of ET such as farming practices. Given the scarcity of in situ data and the inherent constraints of simulated estimates, accurately gauging total ET at scale remains a significant challenge. Addressing the second challenge, even when accurate ET measurements are available, isolating agricultural ET from total ET is difficult. This step is key for water management, since the resulting metric represents the increase in ET attributable to agriculture. To do so, one must estimate the naturally-occurring ET that would occur in the absence of irrigated agriculture (for example, if the land were left fallow). Most often, this naturally-occurring ET is assumed to be equal to precipitation19,22. However, there may be temporal lags between precipitation and resulting ET, some precipitation may not result in ET at all, and ET may also be supplemented by other sources of water, such as near surface groundwater. Together, these challenges leave us with limited measurements of ET and no empirical estimates of agricultural ET at large scales, inhibiting our ability to form evidence-based water management policies that accurately reflect crop water use and potential water savings in agriculture. Recent advances in the remote sensing of ET unlock new avenues for research into agricultural water consumption. Numerous algorithms for estimating ET using land surface temperature and other remote sensing inputs have been validated specifically for use in agricultural settings23,24. These advancements have allowed researchers to empirically study total ET in agricultural settings25,26. However, despite high-resolution maps of ET in agricultural landscapes25,27, the challenge of isolating agricultural ET from total ET has been limited to studies in extremely arid regions where irrigation is the only source of water available to plants28. Here, we develop a framework for measuring agricultural ET at sub-field scales. We use remote sensing to determine total ET and combine it with machine learning to estimate naturally-occurring ET. First, we retrieve satellite-based remotely sensed total ET estimates from the 30m, monthly OpenET ensemble data24 available in the western United States starting in 2016. Second, since we can use these same OpenET estimates to directly observe naturally-occurring ET over fallow lands, we train a gradient boosting algorithm to predict ET over fallow lands. We use information on topography, soil quality, climate, and spatial and temporal coordinates as predictors. We then use the model to retrieve naturally-occurring ET over all active agricultural fields, which we subtract from the remotely-sensed ET to calculate agricultural ET. We apply this methodology to calculate agricultural ET across California’s Central Valley, one of the world’s most water-stressed and agriculturally productive regions29. We use these maps of agricultural ET to calculate the water consumption of different crop types, as well as to calculate variability in agricultural ET within crop types. These insights allow us to evaluate different strategies that have been proposed to save water under the Sustainable Groundwater Management Act (SGMA)7, which mandates that all water basins in California reduce groundwater pumping to sustainable levels by 204030. Specifically, we compare the ability of fallowing, crop switching, and other farming practices to save water by reducing agricultural ET. Additionally, we calculate irrigation efficiency to assess the potential to reduce irrigation withdrawals without decreasing agricultural ET. In the wake of groundwater pumping cutbacks of 20–50% under SGMA7, this work will guide water managers in enacting water savings and help predict which land use changes are likely to ensue. Results Estimating agricultural ET We calculate agricultural ET by retrieving the total ET observed over agricultural areas and subtracting naturally-occurring ET (Fig. 1). While total ET estimates are retrieved directly from OpenET, we simulate naturally-occurring ET by training a gradient boosting regressor to predict the ET observed by OpenET over fallow lands. Our model simulating naturally-occurring ET achieves an R2 of .87 and a Mean Absolute Error (MAE) of 35.5 mm per year (Supplementary Fig. 1). We use a test set made up of 2 km2 held-out areas (about four times the area of a large agricultural field in the Central Valley). We do not find that error is structured across either space (Supplementary Figs. 2 and 3) or time (Supplementary Fig. 4). Fig. 1: Estimates of annual agricultural evapotranspiration (ET) over active agricultural lands in California’s Central Valley. a Total ET is remotely sensed and is retrieved from OpenET. b Naturally-occurring ET is an estimate of the ET that would be present if the agricultural lands were fallow, and is predicted using machine learning. c Agricultural ET is the difference between total and naturally-occurring ET, and represents our estimate of the ET caused by agriculture, and therefore the water that would be conserved if the land were fallow instead of cropped. The variations in agricultural ET across the landscape suggest that different fields can have vastly different abilities to conserve water. OpenET provides ET data at the scale of 30 m; all figure panels here show ET resampled to 70 m resolution for computational efficiency and to better match average field size. Full size image Variation in agricultural ET within and across crop types We leverage the significant variability in agricultural ET observed across the Central Valley (Fig. 1) to analyze the factors driving these variations. Crop type, which is commonly cited as an important variable explaining differences in agricultural ET19, explains 34% of the variation in estimated agricultural ET (Eq. (4), Supplementary Fig. 5). In Fig. 2, we show the water intensity of different crop groups (Supplementary Note 7). Deciduous fruits and nuts are some of the highest consumers at 625 mm per year (582–668 95% CI) (Fig. 2), particularly almonds at 715 mm per year (651–778 95% CI) (Supplementary Fig. 5). Conversely, grain and hay crops consume only 141 mm per year (111–171 95% CI). These broad variations in the water consumption of different crop types align with previous work estimating crop water demands (Supplementary Note 1, Supplementary Fig. 6) and suggest that substantial water savings may be possible with crop switching. Fig. 2: Variations in annual agricultural evapotranspiration (ET) across and within crop groups. Mean agricultural ET by crop group (blue fill and 95% CI) is the average difference between total ET (black outline) and naturally-occurring ET (cream fill). All measures are summed across the year, leading to naturally-occurring and total ET estimates that include water consumption occurring outside of the growing season. While we find significant differences in mean agricultural ET across crop groups, the gray box plots also show a broad spread in agricultural ET within crop groups (box plots show 0.5, 0.25. 0.5, 0.75, and 0.95 quantiles). Full size image However, the majority of the variation remains unexplained by crop type (Fig. 2, Supplementary Fig. 5). This within-crop variability is not uniform for different crops: crops such as deciduous fruits and nuts tend to have large variances, whereas rice has a very small variance. For example, pistachios have the most variability with an interquartile range (IQR) of 664 mm per year over the whole state. Conversely, rice has an IQR of only 122 mm per year (Supplementary Fig. 5). Part of the large variability in agricultural ET for deciduous fruits and nuts can be explained by orchard age: young orchards consume significantly less water than more mature ones (Supplementary Note 2, Supplementary Fig. 7). Climate, topography, and soil quality explain an additional 6% of within-crop variation. However, substantial within-crop variation remains, indicating that some of these differences may be due to variations in farming practices. This would suggest that reducing water consumption without switching crops may be feasible, which we explore in the next section. The water-saving potential of different management strategies The variability of agricultural ET both within and between crops allows us to evaluate the water saving-potential of different management strategies. Here, we compare the effect of three scenarios on reducing agricultural ET in groundwater sub-basins across the Central Valley: 1. Crop switching: Substitute high-ET crops for the median water-consuming crop (Eq. (6)). 2. Farming practices: Keep the same spatial allocation of crops, but reduce agricultural ET of high consumers to the median, crop-specific, consumption level (Eq. (7)). 3. Fallowing: Fallow the 5% of lands with the highest estimated agricultural ET (Eq. (8)). Because it would not be realistic to prescribe farmers in different contexts to consume similar amounts of water, we calculate crop-specific agricultural ET and within-crop variation at the level of groundwater sub-basins. We additionally control for differences in climate, topography, and soil type before conducting the scenarios. To account for the effects of orchard age, we remove orchards that have been bearing fruit for 5 years or less or that are in their last year of production (Supplementary Fig. 7). We find that each of these scenarios return similar reductions in overall water consumption of around 10% (Fig. 3). Since crops with high agricultural ET are heavily favored in most sub-basins and therefore the median crop usually has a high agricultural ET, crop switching only results in a 9.9% reduction in agricultural ET. In order to achieve greater water savings, crops would need to be switched to less popular crops with lesser water demands: switching all crops to the lowest consuming crop in a sub-basin results in a 93.8% reduction in agricultural ET. While strategies that do not require a change in land cover type are less commonly cited as a water management approach, we find that reducing high consumers to their crops’s median consumption level yields similar water savings of up to 11.3%. Fallowing does, however, remain the most effective way to reduce agricultural ET. We find that leaving a mere 5% of land fallow results in a 9.3% consumption reduction, comparable to the savings afforded by crop switching and within-crop scenarios which by definition affect up to 50% of lands. Fig. 3: The percent reduction in agricultural evapotranspiration (ET) driven by various management scenarios. a Savings accrued by substituting high-ET crops for the median water-consuming crop in a sub-basin. b Water savings without changing land cover by reducing agricultural ET of high consumers to the median, crop- and sub-basin-specific, consumption level. c Water savings from fallowing the 5% of lands with the highest estimated agricultural ET. Full size image Irrigation efficiency While fallowing, crop switching, and other farming practices highlight opportunities to decrease agricultural ET, we also find opportunities to diminish runoff and deep percolation during conveyance, on-farm management, or application (Fig. 4). On average, we find that irrigation in the Central Valley is 61.8% (54.0–69.7%) efficient, similar in magnitude to what theoretical estimates predict (Supplementary Note 3, Supplementary Fig. 8). The large disparity in efficiency between northern and southern counties is, however, more pronounced than theoretical estimates (Supplementary Fig. 8). As a result, there may be limited potential to decrease water withdrawn for irrigation in the south which achieves efficiencies as high as 80%. The particularly low efficiencies in the northern counties, however, suggest a large potential to decrease irrigation water withdrawals without affecting agricultural ET. Fig. 4: Irrigation efficiency across the counties of the Central Valley. a Irrigation efficiency is calculated by dividing agricultural evapotranspiration (ET) (gridded data) by USGS county-level reports of irrigation amounts (blue polygons). For the calculation, agricultural ET is averaged to the county level to match the spatial scale of the irrigation data. Additionally, irrigation is displayed in volumetric units (teragrams), but is divided by county-level cropland area to be in units consistent with agricultural ET prior to the calculation. We note that these irrigation amounts are counted at the point of use, rather than the water’s point of origin. b The resulting county-level irrigation efficiency estimates vary widely across the Central Valley, with particularly low efficiencies in the northern counties. Full size image Discussion By empirically quantifying crop water consumption at sub-field scales, we contribute to characterizing agriculture’s hydrological effects and evaluate the ability of different management strategies to mitigate this impact. To overcome the methodological challenges associated with estimating agricultural ET, we leverage recent advances in remotely sensed ET and use machine learning to generate a naturally-occurring ET counterfactual. The fine scale variability in agricultural ET we uncover allows us to analyze the drivers of these differences and simulate the potential for different management practices to save water, including under-explored ones like adjusting farming practices. Additionally, when comparing agricultural ET to total water withdrawn for irrigation, we find substantial opportunities for improvements in irrigation efficiency in the northern counties of the Central Valley. High-resolution maps of agricultural ET can therefore guide our understanding of how agriculture and management can affect water resources in California and other water stressed agricultural regions globally. Accurate agricultural ET measures are crucial to characterize anthropogenic impacts on the hydrological cycle31 and enact effective water management18,32. Previously, agricultural ET has been estimated by (i) simulating crop water demand based on crop type and climate and (ii) removing naturally available water by subtracting precipitation19,22. However, both of these steps embed assumptions that can lead to significant biases. For (i), simulated crop water demand may not adequately represent the field characteristics or farming practices of a given location13. For example, water demands are not necessarily always met, meaning water consumption may be overestimated33,34,35. In line with this, while we generally find good agreement with crop water demand simulated by the CalSIMETAW model21, we do find that agricultural ET estimates are significantly smaller (Supplementary Note 1, Supplementary Fig. 6). For (ii), using precipitation to proxy for naturally-occurring ET fails to account for precipitation being lost as runoff, temporal lags in when precipitation is transpired, and alternative natural sources of water such as shallow groundwater. We find that the bias between our estimates and CalSIMETAW estimates increases when precipitation, rather than naturally-occurring ET, is used to represent baseline amounts of available water. This can be explained by the seasonal mismatch between precipitation and naturally-occurring ET: although annually there is more precipitation than naturally-occurring ET, precipitation mainly occurs in the winter when it is unavailable to most crops. Because using precipitation as a proxy for naturally-occurring ET does not account for moisture that remains in the soil by the time the growing season begins, this inflates simulated estimates of crop water demand. Our use of remotely sensed ET estimates and our ability to estimate naturally-occurring ET therefore allows us to more accurately characterize agricultural ET. High-resolution, empirical estimates of agricultural ET additionally open up the possibility to investigate differences in agricultural ET beyond what is attributable to crop type, which we find only accounts for 34% of the variation. These within-crop variations can be substantial for many crops: the difference in agricultural ET of a pistachio field from the 75th to the 25th percentile is the same as the water that could be saved from fallowing an alfalfa field. Such broad variability is consistent with findings from studies comparing total ET across crops during the growing season25,26. Even after adjusting for variability attributable to field characteristics, orchard age, and climate, we find that these variations could translate to substantial water savings without requiring a change in crop type. Unfortunately, a lack of high-resolution data on field-scale farming practices and yields inhibits further analysis of specific practices driving agricultural ET variation and their economic implications. However, prior literature from experimental plots or particular locations suggests that mulching36, conservation tillage37, deficit irrigation33,34,35, and improved irrigation scheduling and technologies38 all have potential to limit agricultural ET. These practices may prove advantageous relative to costly strategies like crop-switching or fallowing, though more detailed cost-benefit analyses are necessary to determine the suitability of various interventions in specific contexts39. Such water saving farming practices are not mentioned in the plans drafted by SGMA water managers7. This is possibly due to a lack of conclusive research on the potential of such strategies to effectively decrease agricultural ET without significant effects on yield or operation cost. Spatial data on the use of these different practices would allow researchers to take full advantage of our high-resolution agricultural ET estimates and study their water-saving and economic benefits. In situ assessments of crop-specific water consumption and other variations in agricultural ET enable us to model potential water savings across diverse management scenarios. In addition to previously mentioned scenarios based on farming practices, we also investigate more traditionally studied strategies, such as crop switching and fallowing. Consistent with prior studies relying on crop water demand simulations, our research suggests that transitioning to crops with lower water requirements is an effective conservation strategy. However, accruing substantial water savings requires embracing less popular crops like grains and hay20. The feasibility of increasing production of these crops in the Central Valley is uncertain due to high labor and operational costs20. Furthermore, any form of crop switching entails expenses related to the adoption of new knowledge, technologies, and market adjustments40,41. Consequently, the viability of a significant shift towards less water-demanding crops, and its alignment with market expansion, remains uncertain20. Therefore, our findings support the notion that extensive fallowing or land retirement may be essential to achieve substantial reduction targets in areas with severe overdrafts42,43. Considering the risk of increased dust from unused land, repurposing such areas for habitat restoration, flood water capture for groundwater replenishment44, solar energy production, or sustainable industrial development45 could mitigate the economic impacts of land retirement for both farmers and local communities. Detailed agricultural ET maps like the ones generated for this study can help determine the scale of land repurposing needed and identify priority areas for such initiatives under different constraints, including existing water rights46. Finally, we find a significant opportunity to improve irrigation efficiency, especially in the northern part of the Central Valley where we find lower irrigation efficiency than previously expected (Supplementary Note 2, Supplementary Fig. 7). This implies that farmers in these areas could potentially reduce their irrigation water usage without negatively impacting agricultural ET and, consequently, crop growth. Although this finding is consistent with management strategies that focus on boosting irrigation efficiency7, it is important to recognize that such improvements may not automatically lead to water savings at the watershed level14. This is because water not consumed in irrigation processes does not always exit the watershed but can instead be reabsorbed into groundwater reservoirs or surface water bodies for later reuse. Conversely, water that is evapotranspired, which constitutes the ‘efficient’ part of irrigation, is completely removed from the watershed14. Hence, paradoxically, increasing irrigation efficiency could reduce water availability if it is not matched by a decrease in the amount of water withdrawn for irrigation. To prevent an unintended increase in water consumption, managers could use agricultural ET maps to monitor and control water use as improvements in irrigation efficiency are implemented. This study has some important limitations. Most notably, due to a lack of data on farming practices, it is difficult to ascertain whether the variation in within-crop agricultural ET that we estimate is indeed due to farming practices. When conducting our management scenarios, we account for the effects of climate, soil quality, topography, and orchard age. We additionally conduct the scenarios at the level of small groundwater sub-basins rather than across the entire valley to account for any additional regional environmental differences we are unable to otherwise account for. However, variance stemming from error in our agricultural ET estimates or from mislabeled crop types could contribute to observed within-crop variation in agricultural ET. We minimize error from mislabeled crop types by using the most accurate crop data available in California which boasts an accuracy of 97.6%47. Additionally, the OpenET ensemble model has been extensively validated24,48, and our machine learning model has an R2 of .87. We estimate that these sources of error are responsible for only 11% of the variance in our yearly agricultural ET estimates (Supplementary Note 4). Nevertheless, the water-saving potentials we calculate for both the fallowing and farmers practice scenarios should be interpreted as upper bound estimates. Another important limitation of this study stems from the limited data available on water withdrawn for irrigation which is needed to calculate irrigation efficiency. Since irrigation data are not available over the same years as agricultural ET, we use the average of the two most recent years, 2010 and 2015, a drought year and non-drought year, to calculate irrigation efficiency. To ensure that our results are robust to year-to-year variations in agricultural ET and irrigation use, we calculate irrigation efficiency using all the possible combinations of years (Supplementary Fig. 9). Though we do find significant variations based on the irrigation year used in some counties, we consistently find low irrigation efficiencies in the north and higher ones in the south. Irrigation data with better spatial and temporal resolution would improve estimates of irrigation efficiency calculated using this method. We have shown how highly resolved agricultural ET estimates can improve our understanding of anthropogenic impacts on the hydrologic cycle and guide water management by quantifying the potential of different water-saving strategies. In California, our findings suggest that irrigated agriculture increases ET less than previously estimated, and we find that managers may not need to rely as heavily on changes in land cover as currently proposed to achieve significant water savings. Because our method for estimating agricultural ET is based entirely on remote sensing and machine learning, it remains cost effective and has the potential to be used globally, especially as global ET datasets become increasingly available49. This work can help refine our understanding of agriculture’s effect on water resources and help managers achieve water-saving goals in water-stressed agricultural landscapes across the globe. Methods Agricultural ET We define agricultural ET as the difference between total ET over an agricultural parcel and the ET that would have been, had that parcel been fallow land instead (Eq. (1)). This definition recognizes that not all ET over agricultural lands, during the growing season or otherwise, can necessarily be attributed to agriculture. Such a definition is particularly useful from a management perspective, since it denotes the decrease in ET, or water savings, that one might expect if agriculture were to cease. $$\\begin{array}{r}{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{ag}}}}}}}}}={{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{tot}}}}}}}}}-{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{nat}}}}}}}}}\\end{array}$$ (1) where ETag is agricultural ET, ETtot is the total ET over an agricultural parcel, and ETnat is the counterfactual ET that would occur naturally, were the same land fallow. We note that another, theoretically distinct counterfactual could be constructed to represent ETnat: ET if the land were undisturbed, natural land rather than fallow. We elect to simulate ET over fallow lands since it allows us to predict the potential water savings from fallowing, which has a management relevant interpretation. Total ET estimates We construct ETtot from OpenET ensemble data, available at a monthly time step from 2016-2021. This data is calculated as the average output of six different ET models estimated using Landsat data24. The data have been corrected for biases in ET resulting from data only being available during cloudless overpasses and have been extensively evaluated over a broad variety of land covers48. While they are published at a 30m scale, we resample to 70m to improve computational efficiency since this is well below the average size of an agricultural field in the Central Valley. Calculation of a naturally-occurring ET counterfactual using machine learning We estimate naturally-occurring ET for all agricultural pixels using a gradient boosting regressor trained on data from fallow lands. We choose a gradient boosting regressor due to its high flexibility in learning non-linear relationships and proven performance on tabular datasets relative to other regressors50. We retrieve the locations of fallow fields in the Central Valley from the Department of Water Resources (DWR) statewide crop mapping dataset over available years: 2016, 2018, and 2019. Pixels that are within the top 5% ET during July-September are removed due to some implausibly high numbers during these months that suggest mislabeling of an active agricultural pixel as fallow. While we believe that this data cleaning step is important to ensure an unbiased training set, omitting this step does not significantly change our main findings (Supplementary Note 5, Supplementary Figs. 10–12). We additionally find that our findings do not change when training our model on data that are marked fallow by both the DWR dataset and the Cropland Data Layer (CDL) (Supplementary Note 6, Supplementary Figs. 13–15). We predict naturally-occurring ET based on latitude and longitude, the month and year, as well as a broad set of additional variables describing topography (elevation, aspect, slope, topographic wetness index), soil quality (California Storie Index), and climate (Potential ET). The latitude, longitude, and month and year indicators are included to capture the spatial and temporal patterns in ET underlying the densely distributed fallow fields in our dataset. However, the inclusion of an indicator variable for each year in our model limits our analysis to 2016, 2018, and 2019, as these are the only years for which we have available land cover data. Nevertheless, given that ‘year’ contributes a mere 3% to our model’s predictive capability (see Supplementary Fig. 17), it may be considered non-essential for future research in this area. Including additional predictors in our model presents two benefits. First, they can improve the model’s predictive power. For example, we find that Potential ET contributes greatly to the model’s final predictions (Supplementary Fig. 17). Other variables are important to include because they can help correct for systematic differences between the fallow lands used to train our model and the active agricultural lands we apply the model to. Such differences could arise from farmers selecting lands to be fallowed due to their inherently lower productivity, which would negatively bias our estimates of counterfactual naturally-occurring ET in locations actively being cropped today. To assemble these predictor variables, we retrieve topographic information from the USGS National Elevations Database, soil quality information from the California Storie Index in the the USDA’s gSSURGO and STATSGO2 datasets, and Potential ET from the hPET global dataset51. To validate our naturally-occurring ET model, we split our dataset, reserving 60% for training, 10% for validation, and 30% for testing. In order to ensure that nearby and therefore very similar pixels are not present across multiple splits, we group our splits by 2 km2 squares, four times the size of a large agricultural field in the Central Valley. The entire dataset is made up of over 16 million pixels populating 8180 distinct 2 km2 regions. We set aside 4908 of these 2 km2 clusters for training, amounting to nearly 10 million pixels. The testing split is composed of 2454 clusters. We tune hyperparameters using 100 iterations of a threefold randomized search cross-validation on an unclustered subset of our dataset. Randomized search cross-validation is similar to grid search cross-validation, but only reaches a random subset of the possible hyperparameter combinations to improve computational efficiency. We manually set the minimum number of samples required to split a node to 200 and the minimum number of samples required at each leaf node to 100 to account for the large size and spatial clustering of the dataset. Because we carry out our analyses using yearly estimates of agricultural ET, we validate our model on yearly estimates of naturally-occurring ET. Only fallow lands from the test data split are used in any subsequent analyses on fallow lands. Analysis After computing agricultural ET for all fields across the Central Valley following Eq. (1), we report a variety of statistical summaries and conduct scenarios manipulating the spatial distribution of agricultural ET. In order to ensure our analyses only capture variations across space, we aggregate our observations of agricultural ET to a yearly timestep and control for variation across years before beginning this analysis. To do so, we calculate an “adjusted” agricultural ET for each pixel by removing the difference between the mean agricultural ET for that year and the overall sample mean agricultural ET from the original agricultural ET calculation, as follows: $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}={{{{{{{{\\rm{ET}}}}}}}}}_{p,y}-(\\overline{{{{{{{{{\\rm{ET}}}}}}}}}_{y}}-\\overline{{{{{{{{\\rm{ET}}}}}}}}})$$ (2) where \\({{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}\\) is the agricultural ET for pixel p in year y with the year-specific variation removed, ETp,y is the original agricultural ET, \\(\\overline{{{{{{{{{\\rm{ET}}}}}}}}}_{y}}\\) is the mean agricultural ET in year y across all pixels and \\(\\overline{{{{{{{{\\rm{ET}}}}}}}}}\\) is the mean agricultural ET across all pixels and years. Regressions To calculate point estimates and confidence intervals for the overall mean agricultural ET (Eq. (3)), the mean agricultural ET by crop group or crop type (Supplementary Note 7), or the mean agricultural ET by county (used to calculate irrigation efficiency) (Eq. (4)), we conduct a series of regressions with the following format: $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}=\\alpha+{\\epsilon }_{p,y}$$ (3) $${{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}={\\beta }_{p,y}\\times {{{{{{{{\\rm{Group}}}}}}}}}_{{{{{{{{\\rm{p,y}}}}}}}}}+{\\epsilon }_{p,y}$$ (4) where \\({{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}\\) represents agricultural ET for pixel p in year y with the year-specific variation removed, α is a coefficient indicating the mean agricultural ET across all samples, Groupp,y represents a vector of dummy variables indicating which crop (for crop comparisons shown in Figs. 2 and S5) or county (for irrigation efficiency calculations shown in Fig. 4; county does not vary by year) observation p, y falls into, βp,y is a corresponding vector of coefficients indicating the average agricultural ETs for each crop or county group, and ϵp,y is an error term. Standard errors are calculated using 75 km clusters, as determined by plotting a variogram of the spatial autocorrelation in agricultural ET (Supplementary Fig. 16). The aggregate crop group (Fig. 2) and detailed crop type (Supplementary Fig. 5) are each assigned using the same DWR land cover data used to determine fallow status. In addition to using regression to calculate point estimates and confidence intervals, regression allows us to calculate the proportion of variation that is explained by a set of variables. This is because the R2 corresponds to the fraction of variation explained by the regression. We use this to assess the % variation explained by crop type, using Eq. (4), as well as that explained by climate, topography, and soil quality: $$\\begin{array}{r}{{{{{{{{\\rm{AdjustedET}}}}}}}}}_{p,y}=\\alpha+{\\beta }_{p,y}\\times {X}_{p,y}+{\\epsilon }_{p,y}\\end{array}$$ (5) where α is the intercept, Xp,y is a vector of variables including PET, elevation, aspect, slope, TWI, and soil quality, βp,y is a vector of coefficients for each variable in Xp,y, and ϵp,y is an error term. Management scenarios We conduct three scenarios in which we manipulate agricultural ET to mimic land management changes and report the decrease in overall agricultural ET within groundwater sub-basins across the Central Valley. Eq. (6) is a crop switching scenario (cs) where pixels with agricultural ET values above those of the median crop in a given sub-basin are replaced with that median crop. Eq. (7) is a farming practice scenario (fp) where pixels with agricultural ET values above crop and sub-basin-specific mean values are replaced with that crop and sub-basin mean. Finally, Eq. (8) is a fallowing scenario (fal) which replaces all pixels with agricultural ET values above the sub-basin-specific 95th percentile with a value of zero agricultural ET. $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{cs}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\min ({{{{{{{{\\rm{ET}}}}}}}}}_{c,b},{{{{{{{\\rm{Median}}}}}}}}{({{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}_{b})\\left.\\right)}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (6) $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{fp}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\min ({{{{{{{{\\rm{ET}}}}}}}}}_{i},{{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (7) $${{{{{{{{\\rm{Savings}}}}}}}}}_{{{{{{{{\\rm{fal}}}}}}}}}=1-\\frac{\\mathop{\\sum }\\nolimits_{i=1}^{n}\\left\\{\\begin{array}{ll}{{{{{{{{\\rm{ET}}}}}}}}}_{i},\\quad &\\,{{\\mbox{if}}}\\,\\,{{{{{{{{\\rm{ET}}}}}}}}}_{i}\\le {{{{{{{{\\rm{ET}}}}}}}}}_{.95,b}\\\\ 0,\\quad &\\,{{\\mbox{otherwise}}}\\,\\end{array}\\right.}{\\mathop{\\sum }\\nolimits_{i=1}^{n}{{{{{{{{\\rm{ET}}}}}}}}}_{i}}$$ (8) where ETi is the adjusted agricultural ET for observation i, ETc,b is the average agricultural ET for crop type c in groundwater sub-basin \\(b,{{{{{{{\\rm{Median}}}}}}}}{({{{{{{{{\\rm{ET}}}}}}}}}_{c,b})}_{b}\\) is the median ETc,b in sub-basin b, and ET.95,b is the 95th percentile of agricultural ET in sub-basin b. To ensure that the water savings identified in our scenarios result from factors that can be influenced by management interventions, we account for orchard age, climate, and other physical characteristics of the land. To account for orchard age, we remove young orchards that are have been bearing fruit for 5 or less years, or old orchards that are going to be removed within the next year (Supplementary Note 2). Because we are only able to label orchard age in this way for all orchards in year 2019 (the DWR crop type data we use are only available starting 2014), we exclusively use 2019 for this part of the analysis. Since we are only using one year, we do not adjust the water use according to the year like we do for the other analyses. To account for differences in climate and other characteristics inherent to the land, we control for potential ET, soil quality, topographic wetness index, elevation, aspect and slope using linear regression (Eq. (5)). Irrigation efficiency We define irrigation efficiency as the proportion of irrigation water that results in agricultural ET, and is thus consumed by agriculture (Eq. (9)). To determine amounts of water withdrawn for irrigation, we retrieve county level irrigation water use data from the USGS National Water Information System. We note that these irrigation amounts are counted at the point of use, rather than the water’s point of origin. These data are gathered every five years with the most recently available data from 2015. Because there is no match for the years of available irrigation data and our agricultural ET estimates from 2016, 2018, and 2019, we use the two most recent years, 2010 and 2015, which represent a non-drought year and a drought year, respectively. $${{{{{{{\\rm{IRRIGATION}}}}}}}}\\,{{{{{{{\\rm{EFFICIENCY}}}}}}}}=\\frac{{{{{{{{{\\rm{ET}}}}}}}}}_{{{{{{{{\\rm{ag}}}}}}}}}}{{{{{{{{\\rm{Irrigation}}}}}}}}}$$ (9) where ETag is agricultural ET (Eq. (1)) and Irrigation is the water withdrawn for irrigation. ETag and Irrigation must be in matching units, either volumetric or depth. We calculate both in mm per year. We assume all active agricultural lands in the Central Valley are irrigated and calculate the average agricultural ET in mm per year over active agricultural lands in each county. To also retrieve average irrigation amount across irrigated lands in a county in mm per year, we divide the volume of irrigation water by the average area of irrigated land in each county. Because some counties are not fully encompassed within the Central Valley, we assume that irrigation in a given county is evenly distributed over irrigated lands within and outside of the Central Valley. Data availability The annual, 70m total, agricultural and naturally-occurring ET data generated in this study have been deposited in the Annual, field-scale crop water consumption estimates database under accession code https://doi.org/10.6084/m9.figshare.24600240. The OpenET data used in this study are available in the Google Earth Engine database under accession code https://developers.google.com/earth-engine/datasets/catalog/OpenET_ENSEMBLE_CONUS_GRIDMET_MONTHLY_v2_0. The crop type data used in this study are available in the Statewide Crop Mapping database under accession code https://data.cnra.ca.gov/dataset/statewide-crop-mapping. The Cropland Data Layer (CDL) crop type data used in this study are available in the United States Department of Agriculture National Agricultural Statistics Service database under accession code https://www.nass.usda.gov/Research_and_Science/Cropland/Release/index.php. The potential evapotranspiration data used in this study are available in the Hourly potential evapotranspiration (hPET) at 0.1degs grid resolution for the global land surface from 1981-present database under accession code https://data.bris.ac.uk/data/dataset/qb8ujazzda0s2aykkv0oq0ctp. The topography data used in this study are available in the Elevation in the Western United States (90 meter DEM) dataset under accession code https://www.sciencebase.gov/catalog/item/542aebf9e4b057766eed286a. The county shapefile data used in this study are available in the US Census TIGER dataset under accession code https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_county_500k.zip. The irrigation data used in this study are available in the USGS Water Data for California database under accession code https://waterdata.usgs.gov/ca/nwis/. The CalSIMETAW data used in this study are available in the Cal-SIMETAW Unit Values database under accession code https://data.ca.gov/dataset/cal-simetaw-unit-values. Code availability All code necessary to replicate this study can be found at the https://doi.org/10.5281/zenodo.10578652 and GitHub repository https://github.com/anna-boser/ET_ag_OpenET. References Rodell, M. et al. Emerging trends in global freshwater availability. Nature 557, 651–659 (2018). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Elliott, J. et al. Constraints and potentials of future irrigation water availability on agricultural production under climate change. Proc. Nat. Acad. Sci. 111, 3239–3244 (2014). Article   ADS   CAS   PubMed   Google Scholar   Famiglietti, J. S. The global groundwater crisis. Nat. Clim. Change 4, 945–948 (2014). Article   ADS   Google Scholar   Hoekstra, A. Y. & Mekonnen, M. M. The water footprint of humanity. Proc. Nat. Acad. Sci. 109, 3232–3237 (2012). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Siebert, S. et al. A global data set of the extent of irrigated land from 1900 to 2005. Hydrol. Earth Syst. Sci. 19, 1521–1545 (2015). Article   ADS   Google Scholar   Tilman, D., Balzer, C., Hill, J. & Befort, B. L. Global food demand and the sustainable intensification of agriculture. Proc. Nat. Acad. Sci. 108, 20260–20264 (2011). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Bruno, E. M., Hagerty, N. & Wardle, A. R. in The political economy of groundwater management: Descriptive evidence from California (eds Libecap, G. D. & Dinar, A.) American Agriculture, Water Resources, and Climate Change Ch. Chapter Number (University of Chicago Press, 2022). Smith, W. K. et al. Voluntary sustainability standards could significantly reduce detrimental impacts of global agriculture. Proc. Nat. Acad. Sci. 116, 2130–2137 (2019). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   García, L., Rodríguez, D., Wijnen, M. & Pakulski, I. Earth Observation for Water Resources Management: Current Use and Future Opportunities for the Water Sector (World Bank Publications, 2016). Marston, L. T. et al. Water-use data in the United States: Challenges and future directions. JAWRA J. Am. Water Res. Assoc. 58, 485–495 (2022). Article   ADS   Google Scholar   Ward, F. A. & Pulido-Velazquez, M. Water conservation in irrigation can increase water use. Proc. Nat. Acad. Sci. 105, 18215–18220 (2008). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Zhou, L. & Hoekstra, A. Y. The effect of different agricultural management practices on irrigation efficiency, water use efficiency and green and blue water footprint. Front. Agric. Sci. Eng. 4, 185–194 (2017). Article   Google Scholar   Puy, A. et al. The delusive accuracy of global irrigation water withdrawal estimates. Nat. Commun. 13, 3183 (2022). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Grafton, R. Q. et al. The paradox of irrigation efficiency. Science 361, 748–750 (2018). Article   ADS   CAS   PubMed   Google Scholar   National Academies of Sciences, a. M., Engineering. Thriving on Our Changing Planet: A Decadal Strategy for Earth Observation from Space (National Academies Press, 2019). Pastorello, G. et al. The FLUXNET2015 dataset and the ONEFlux processing pipeline for eddy covariance data. Sci. Data 7, 225 (2020). Article   PubMed   PubMed Central   Google Scholar   Baldocchi, D. D. Assessing the eddy covariance technique for evaluating carbon dioxide exchange rates of ecosystems: past, present and future. Global Change Biol. 9, 479–492 (2003). Article   ADS   Google Scholar   Johansson, E. L., Fader, M., Seaquist, J. W. & Nicholas, K. A. Green and blue water demand from large-scale land acquisitions in Africa. Proc. Nat. Acad. Sci. 113, 11471–11476 (2016). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Mancosu, N., Spano, D., Orang, M., Sarreshteh, S. & Snyder, R. L. SIMETAW# - a Model for Agricultural Water Demand Planning. Water Res. Manag. 30, 541–557 (2016). Article   Google Scholar   Peterson, C., Pittelkow, C. & Lundy, M. Exploring the potential for water-limited agriculture in the San Joaquin Valley. Public Policy Inst. Cal. (2022). Orang, M. N. et al. California simulation of evapotranspiration of applied water and agricultural energy use in California. J. Integr. Agr. 12, 1371–1388 (2013). Article   Google Scholar   Snyder, R. L., Geng, S., Orang, M. & Sarreshteh, S. Calculation and simulation of evapotranspiration of applied water. J. Int. Agric. 11, 489–501 (2012). Article   Google Scholar   Anderson, M. et al. Interoperability of ECOSTRESS and Landsat for mapping evapotranspiration time series at sub-field scales. Remote Sensing Environ. 252, 112189 (2021). Article   Google Scholar   Melton, F. S. et al. OpenET: filling a critical data gap in water management for the Western United States. JAWRA J. Am. Water Res. Assoc. 58, 971–994 (2022). Article   ADS   Google Scholar   Wong, A. J. et al. Multiscale assessment of agricultural consumptive water use in California’s Central Valley. Water Resour. Res. 57, e2020WR028876 (2021). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   Schauer, M. & Senay, G. B. Characterizing crop water use dynamics in the central valley of california using landsat-derived evapotranspiration. Remote Sensing 11, 1782 (2019). Article   ADS   Google Scholar   Anderson, M. et al. Field-scale assessment of land and water use change over the California delta using remote sensing. Remote Sensing 10, 889 (2018). Article   ADS   Google Scholar   Al-Gaadi, K. A., Madugundu, R., Tola, E., El-Hendawy, S. & Marey, S. Satellite-based determination of the water footprint of carrots and onions grown in the arid climate of Saudi Arabia. Remote Sensing 14, 5962 (2022). Article   ADS   Google Scholar   Scanlon, B. R. et al. Groundwater depletion and sustainability of irrigation in the US High Plains and Central Valley. Proc. Nat. Acad. Sci. 109, 9320–9325 (2012). Article   ADS   CAS   PubMed   PubMed Central   Google Scholar   California Legislature. Sustainable Groundwater Management Act, and related provisions (2019). Pascolini-Campbell, M., Fisher, J. B. & Reager, J. T. GRACE-FO and ECOSTRESS Synergies Constrain Fine-Scale Impacts on the Water Balance. Geophys. Res. Lett. 48, e2021GL093984 (2021). Article   ADS   Google Scholar   Yoon, J. et al. A coupled human-natural system analysis of freshwater security under climate and population change. Proc. Nat. Acad. Sci. 118, e2020431118 (2021). Article   CAS   PubMed   PubMed Central   Google Scholar   English, M. & Raja, S. N. Perspectives on deficit irrigation. Agric. Water Manage. 32, 1–14 (1996). Article   Google Scholar   Rudnick, D. et al. Deficit irrigation management of maize in the high plains aquifer region: a review. JAWRA J. Am. Water Res. Assoc. 55, 38–55 (2019). Article   ADS   Google Scholar   Goldhamer, D. A. Regulated deficit irrigation for California canning olives. Acta Hort. 474, 369–372 (1999). Kader, M. A. et al. Mulching as water-saving technique in dryland agriculture: review article. Bull. Nat. Res. Centre 43, 147 (2019). Article   MathSciNet   Google Scholar   Mitchell, J. et al. No-tillage and high-residue practices reduce soil water evaporation. California Agri. 66, 55–61 (2012). Article   Google Scholar   Jovanovic, N. et al. A review of strategies, methods and technologies to reduce non-beneficial consumptive water use on farms considering the FAO56 methods. Agric. Water Manage. 239, 106267 (2020). Article   Google Scholar   Mitchell, J. P. et al. Conservation agriculture: Systems thinking for sustainable farming. Cal. Agri. 70, 53–56 (2016). Hornbeck, R. The enduring impact of the american dust bowl: short- and long-run adjustments to environmental catastrophe. Am. Econ. Rev. 102, 1477–1507 (2012). Article   Google Scholar   Kurukulasuriya, P. & Mendelsohn, R. Crop switching as a strategy for adapting to climate change. African J. Agric. Res. Econ. 2, 105–126 (2008). Hanak, E. et al. Water stress and a changing san joaquin valley. Public Policy Inst. Cal. (2017). Kelsey, R., Hart, A., Butterfield, H. S. & Dink, V. Groundwater sustainability in the San Joaquin Valley: Multiple benefits if agricultural lands are retired and restored strategically. Cal. Agri. 72, 151–154 (2018). Guivetchi, K. et al. FLOOD-MAR: Using Flood Water for Managed Aquifer Recharge to Support Sustainable Water Resources. Cal. Dept. of Water Res. https://cawaterlibrary.net/wpcontent/uploads/2018/07/DWR_FloodMAR-White-Paper_06_2018_updated.pdf (2018). Fernandez-Bou, A. S. et al. Water, environment, and socioeconomic justice in California: A multi-benefit cropland repurposing framework. Sci. Total Environ. 858, 159963 (2023). Article   ADS   CAS   PubMed   Google Scholar   Nelson, K. S. & Burchfield, E. K. Effects of the structure of water rights on agricultural production during drought: a spatiotemporal analysis of California’s central valley. Water Resour. Res. 53, 8293–8309 (2017). Article   ADS   Google Scholar   New Land Use Resource Publicly Available. LandIQ https://www.landiq.com/post/new-landuse-resource-publicly-available (2021). OpenET Intercomparison and Accuracy Report. OpenET https://openetdata.org/wp-content/uploads/2021/10/Intercomparison-and-Accuracy-Assessment-Report.pdf (2021). Senay, G. B. et al. Improving the operational simplified surface energy balance evapotranspiration model using the forcing and normalizing operation. Remote Sensing 15, 260 (2023). Article   ADS   Google Scholar   Friedman, J. H. Greedy function approximation: a gradient boosting machine. Annals Stat. 29, 1189–1232 (2001). Article   MathSciNet   Google Scholar   Singer, M. B. et al. Hourly potential evapotranspiration at 0.1∘ resolution for the global land surface from 1981-present. Sci. Data 8, 224 (2021). Article   PubMed   PubMed Central   Google Scholar   Download references Acknowledgements We thank Kathy Baylis for her help conceptualizing the methods. A.B. was supported by the National Science Foundation Graduate Research Fellowship Program (1650114) and the Kuni Foundation. K.C. was supported by the National Science Foundation under Grant DEB-1924309 and ITE-2236021 and the Zegar Family Foundation. A.L. was supported by the National Science Foundation under Grant DEB-2042526. Use was made of computational facilities purchased with funds from the National Science Foundation (CNS-1725797) and administered by the Center for Scientific Computing (CSC). The CSC is supported by the California NanoSystems Institute and the Materials Research Science and Engineering Center (MRSEC; NSF DMR 1720256) at UC Santa Barbara. A portion of this work was conducted at the Jet Propulsion Laboratory, California Institute of Technology, under contract with NASA. Author information Authors and Affiliations Bren School of Environmental Science and Management, UC Santa Barbara, 2400 Bren Hall, Santa Barbara, 93106, CA, USA Anna Boser, Kelly Caylor, Ashley Larsen & Tamma Carleton Department of Geography, UC Santa Barbara, Ellison Hall, Santa Barbara, 93106, CA, USA Kelly Caylor NASA Jet Propulsion Laboratory, California Institute of Technology, 4800 Oak Grove Drive, Pasadena, 91109, CA, USA Madeleine Pascolini-Campbell & John T. Reager National Bureau of Economic Research, 1050 Massachusetts Avenue, Cambridge, 02138, MA, USA Tamma Carleton Contributions A.B. collected the data, performed the analyses, and wrote the original draft. A.B., T.C., and K.C. developed the methodology used. A.B., T.C., A.L., and K.C. reviewed and edited the draft. A.B., T.C., A.L., K.C., J.R., and M.P. contributed to the conceptualization of the study. Corresponding author Correspondence to Anna Boser. Ethics declarations Competing interests The authors declare no competing interests. Peer review Peer review information : Nature Communications thanks Hannah Kerner and the other, anonymous, reviewer(s) for their contribution to the peer review of this work. A peer review file is available. Additional information Publisher’s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Supplementary information Supplementary Information Peer Review File Rights and permissions Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About this article Cite this article Boser, A., Caylor, K., Larsen, A. et al. Field-scale crop water consumption estimates reveal potential water savings in California agriculture. Nat Commun 15, 2366 (2024). https://doi.org/10.1038/s41467-024-46031-2 Download citation Received 04 July 2023 Accepted 08 February 2024 Published 25 March 2024 DOI https://doi.org/10.1038/s41467-024-46031-2 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Subjects Environmental impact Hydrology Comments By submitting a comment you agree to abide by our Terms and Community Guidelines. If you find something abusive or that does not comply with our terms or guidelines please flag it as inappropriate. Download PDF Sections Figures References Abstract Introduction Results Discussion Methods Data availability Code availability References Acknowledgements Author information Ethics declarations Peer review Additional information Supplementary information Rights and permissions About this article Comments Advertisement Nature Communications (Nat Commun) ISSN 2041-1723 (online) About Nature Portfolio About us Press releases Press office Contact us Discover content Journals A-Z Articles by subject Protocol Exchange Nature Index Publishing policies Nature portfolio policies Open access Author & Researcher services Reprints & permissions Research data Language editing Scientific editing Nature Masterclasses Research Solutions Libraries & institutions Librarian service & tools Librarian portal Open research Recommend to library Advertising & partnerships Advertising Partnerships & Services Media kits Branded content Professional development Nature Careers Nature Conferences Regional websites Nature Africa Nature China Nature India Nature Italy Nature Japan Nature Korea Nature Middle East Privacy Policy Use of cookies Your privacy choices/Manage cookies Legal notice Accessibility statement Terms & Conditions Your US state privacy rights © 2024 Springer Nature Limited"

Paper 5:
- APA Citation: Dong, T., Xing, L., Cui, N., Zhao, L., Guo, L., Wang, Z., & Du, T. (2024). Estimating reference crop evapotranspiration using improved convolutional bidirectional long short-term memory network by multi-head attention mechanism in the four climatic zones of China. Agricultural Water Management, 292, 108665.
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: The MA-CNN-BiLSTM model is predominantly employed for real-time irrigation management, crop productivity, and sustainable development, particularly in China.
  Extract 2: This model tackles various data-missing scenarios in different climatic zones of China and provides the best-recommended ET0 models for agricultural water management based on meteorological data deficiency scenarios.
  Limitations: The MA-CNN-BiLSTM model's complexity and computational requirements can present challenges, especially for real-time applications with limited computational resources.
  Relevance Evaluation: 0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects of the point and review.
  Relevance Score: 1.0
  Inline Citation: However, the model remains a valuable tool for comprehensive ET0 analysis and applications in agricultural water management.
  Explanation: The MA-CNN-BiLSTM model is predominantly employed for real-time irrigation management, crop productivity, and sustainable development, particularly in China. This model tackles various data-missing scenarios in different climatic zones of China and provides the best-recommended ET0 models for agricultural water management based on meteorological data deficiency scenarios. The model is advantageous in its capability to capture complex relationships, extract features from temporal data, and account for variations in meteorological data, enabling it to produce precise and reliable ET0 estimations. However, the model's complexity and computational requirements can present challenges, especially for real-time applications with limited computational resources. Nevertheless, the model remains a valuable tool for comprehensive ET0 analysis and applications in agricultural water management.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords Nomenclature 1. Introduction 2. Materials and methods 3. Results 4. Discussions 5. Conclusions and future works Supplementary data CRediT authorship contribution statement Declaration of Competing Interest Acknowledgment Appendix A. Supplementary material Data availability References Show full outline Cited by (2) Figures (11) Show 5 more figures Tables (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Extras (1) Supplementary material Agricultural Water Management Volume 292, 1 March 2024, 108665 Estimating reference crop evapotranspiration using improved convolutional bidirectional long short-term memory network by multi-head attention mechanism in the four climatic zones of China Author links open overlay panel Juan Dong a, Liwen Xing b, Ningbo Cui b, Lu Zhao b, Li Guo b, Zhihui Wang b, Taisheng Du c, Mingdong Tan b, Daozhi Gong d Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.agwat.2023.108665 Get rights and content Under a Creative Commons license open access Highlights • MA-CNN-BiLSTM model provides the highest accuracy for reference crop evapotranspiration estimation across China. • Machine learning and empirical models performed better with internal strategy than external strategy. • Radiation-based models excelled in temperate continental and mountain plateau zone, while humidity-based excelled in others. • Multi-head attention improved Long Short-Term Memory network type model as intricate relationship processor. Abstract Accurate reference crop evapotranspiration (ET0) estimation is essential for agricultural water management, crop productivity, and irrigation systems. As the standard ET0 estimation method, the Penman-Monteith equation has been widely recommended worldwide. However, its application is still restricted to comprehensive meteorological data deficiency, making the exploration of alternative simpler models for acceptable ET0 estimation highly meaningful. Concerning the aforementioned requirement, this study developed the novel deep learning model (MA-CNN-BiLSTM), which incorporates Multi-Head Attention mechanism (MA), Convolutional Neural Network (CNN), and Bidirectional Long Short-Term Memory network (BiLSTM) as intricate relationship processor, feature extractor, and regression component, to estimate ET0 based on radiation-based (Rn-based), humidity-based (RH-based), and temperature-based (T-based) input combinations at 600 stations during 1961–2020 throughout China under internal and external cross-validation strategies. Besides, through a comparative evaluation among MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, Multivariate Adaptive Regression Splines (MARS), and empirical models, the result indicated that MA-CNN-BiLSTM achieved superior precision, with values of Determination Coefficient (R2), Nash–Sutcliffe efficiency coefficient (NSE), Relative Root Mean Square Error (RRMSE), Root Mean Square Error (RMSE), and Mean Absolute Error (MAE) ranging 0.877–0.972, 0.844–0.962, 0.129–0.292, 0.294–0.644 mm d−1, 0.244–0.566 mm d−1 for internal strategy and 0.797–0.927, 0.786–0.920, 0.162–0.335, 0.409–0.969 mm d−1, 0.294–0.699 mm d−1 for external strategy. Specifically, Rn-based MA-CNN-BiLSTM excelled in the temperate continental zone (TCZ) and mountain plateau zone (MPZ), while RH-based MA-CNN-BiLSTM yielded best precision in others. Furthermore, the internal strategy was superior to external strategy by 2.74–106.04% for R2, 1.11–120.49% for NSE, 1.41–40.27% for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE, respectively. In summary, the main contribution of the present study is the proposal of a novel LSTM-type ET0 model (MA-CNN-BiLSTM) to cope with various data-missing scenarios throughout China, which can provide effective support for decision-making in regional agriculture water management. Previous article in issue Next article in issue Keywords Hybrid deep learning modelMultivariate Adaptive Regression SplinesEmpirical modelLimited meteorological inputCross-validation strategy Nomenclature Abbreviations AI Artificial Intelligence ANN Artificial Neural Network BiLSTM Bidirectional Long Short-Term Memory network CMA China Meteorological Administration CNN-BiLSTM Convolutional bidirectional Long Short-Term Memory network CNN-LSTM Convolutional Long Short-Term Memory network DBN-LSTM Deep Belief Network-Long Short-Term Memory network DL Deep Learning Models ET Evapotranspiration ET0 Reference crop evapotranspiration FAO Food and Agriculture Organization of the United Nations GAN-LSTM Generative Adversarial Network-Long Short-Term Memory network GCV Generalized Cross-validation Criterion GEP Gene Expression Programming GPI Global Performance Indicator GRNN Generalized regression neural network HS Hargreaves-Samani model LSTM Long Short-Term Memory network MA Multi-Head Attention mechanism MA-CNN-BiLSTM CNN-BiLSTM model with Multi-Head Attention mechanism MAE Mean Absolute Error MARS Multivariate Adaptive Regression Splines ML Machine Learning models MLP Multilayer Perceptron MLSTM Multilayer Long Short-Term Memory neural network MPZ Mountain Pateau Zone NSE Nash–Sutcliffe efficiency coefficient PM Penman-Monteith equation PLS Partial Least Squares PT Priestley-Taylor R2 Determination coefficient RF Random Forest RMSE Root Mean Square Error RNN Recursive Neural Network Rom Romanenko model RRMSE Relative Root Mean Square Error SMZ Subtropical Monsoon Zone SVM Support Vector Machine SVR Support Vector Regression TCZ Temperate Continental Zone TML Traditional Machine Learning models TMZ Temperate Monsoon Zone XGBoost eXtreme Gradient Boosting Variables aPT, aRom, aHS, bHS The parameters of empirical ET0 model bn Bias vector bk The offset term of the convolution kernel C(M) Penalty function d The penalty for each basis function ea Actual vapor pressure es Saturation vapor pressure f Activation function Ft Forget gate. The output result of first convolution layer The output result of first pooling layer G Soil heat flux density GIj The normalized value of accuracy indicators GImedian The median of the GIj Hmt The input values of the current memory block It Input gate Kc Crop coefficient km The number of divisions of the basis function M The number of basis functions m The number of statistical indicators n Sunshine duration Ot Output gate P Atmospheric pressure Pre Precipitation Ra Extraterrestrial radiation ReLU The activation function RH Relative humidity Rn Net solar radiation Skm Indicator of the polarity of the step function St Cell state Ta Average air temperature tanh Hyperbolic tangent activation function Tmax Maximum air temperature Tmin Minimum air temperature Tdew Dew point temperature u2 Wind speed at 2 m Ut Update gate v(k,m) Risk factors W The weight matrix xi The daily ET0 values by PM equation at the i-th time step yi The daily ET0 values by other ET0 model at the i-th time step Yt The output variables of the current memory cell γ The psychometric constant Δ Slope of the saturation vapor pressure function σ Sigmoid activation function The iterative computation of forward layer The iterative computation of backward layer 1. Introduction Evapotranspiration (ET) plays a pivotal role in Earth's water cycle, exerting profound effects on ecological and agricultural water management (Ma et al., 2023). However, the direct ET measurements are severely limited to enormous expenses and technical complexities (Gonzalez et al., 2023). As an alternative solution, the crop coefficient approach was proposed to quantify ET, and Penman-Monteith (PM) equation has been strongly recommended by Food and Agriculture Organization of the United Nations (FAO) as a standard reference crop evapotranspiration (ET0) model (Allen et al., 1998). Nevertheless, the application of PM is constrained by its heavy reliance on numerous meteorological variables (Lu et al., 2023). Therefore, it becomes imperative to investigate simpler methods to estimate ET0 accurately with fewer data requirements. During the last few decades, numerous researchers have made efforts to establish simpler empirical ET0 methods using fewer meteorological variables, such as temperature-based (T-based), radiation-based (Rn-based), and humidity-based (RH-based) models, which provide viable alternatives to the PM equation (Kim et al., 2023, Valipour et al., 2023). Furthermore, the various types of empirical ET0 models have extensive applications, exhibiting substantial accuracy variations (Su et al., 2022). In addition, numerous research indicates that their applicability and accuracy are further influenced by geographical and climatic conditions due to their unilateral assumptions and simplified structure (Liu et al., 2017, Yang et al., 2021b). Thus, exploring and developing high-accuracy ET0 estimation models using limited meteorological variables is imperative, particularly in China with diverse geographical and complex climatic zones. With the rapid advancements of computer technology recently, estimating ET0 has been recognized as a complex nonlinear regression problem that can be addressed through various artificial intelligence models (AI models), including traditional machine learning models (TML) and deep learning models (DL) (Yaseen et al., 2019). Despite TML models having achieved successful application in this field, DL models performed better with multiple hidden layers and possess the capability to capture intricate nonlinear relationships between ET0 and meteorological variables (Fan et al., 2021b). However, the characteristics of time-series problem are insufficiently considered by most AI models, and historical meteorological information has not been fully utilized to solve the problem of ET0 estimation (Hua et al., 2019, Mehdizadeh et al., 2020). Notably, the Long Short-Term Memory network (LSTM) was specially developed to handle long time-series problems using the “memory cell” structure and four gate control mechanisms as the most famous main-stream DL model, which can selectively retain or forget historical information to capture long-term patterns and trends (Guo et al., 2023, Mandal and Chanda, 2023, Niu et al., 2023). Although the classical LSTM model has been widely applied in the fields of ET0 estimation, it still suffers from challenges related to long-term dependencies and overfitting in practical applications (Datta and Faroughi, 2023, Yan et al., 2023). Remarkably, several LSTM-type variants have been proposed to tackle these limitations. Regarding structure refinements in the LSTM model, Joseph et al. (2023) developed the bidirectional LSTM (BiLSTM) model by incorporating the forward and backward propagation layer for wind speed prediction. Another variant pattern of LSTM involves coupling multiple modules to harness their unique strengths (Wan et al., 2023, Yao et al., 2023, Zha et al., 2022). Based on the Convolutional LSTM model (CNN-LSTM), Elmaz et al. (2021) predicated the indoor temperature predictions in Belgium, demonstrating superior performance over LSTM. Furthermore, it is noteworthy that the successful introduction of the Attention mechanism enables LSTM to concentrate on data segments relevant to the current task during the modification of LSTM (Ren et al., 2021). Evolving from the foundation of the attention mechanism, the Multi-Head Attention (MA) mechanism significantly enhanced modeling capabilities, effectively captured stronger long-range dependencies, and adaptability to multi-modal data (Lin et al., 2020, Niu et al., 2021). Moreover, the MA mechanism could allow LSTM to concentrate on different segments of the input sequence and acquisition interrelationships simultaneously, which facilitates the capture of long-range dependencies and global contextual information within the input sequence (Niu et al., 2021). Thus, it has been widely regarded as a pivotal highlight in LSTM modifications which hold significant practical value in addressing diverse complex sequence modeling problems. However, the technology of comprehensively integrating these excellent improvement patterns into LSTM for addressing multi-dimensional nonlinear regression problems has not yet emerged hitherto. In addition to the specific characteristic of the model itself, data preprocessing has a significant impact on the estimation results, which includes input selection and dataset partition (Choubin and Malekian, 2017). Mohammadi and Mehdizadeh (2020) once conducted highly appreciated research that various pre-processing techniques were applied to determine inputs for Support Vector Regression. In addition, another acceptable approach to selecting meteorological inputs is to align with empirical ET0 models to evaluate AI models under the same data deficiency scenario (Feng et al., 2016, Maroufpoor et al., 2020). Furthermore, the accuracy, reliability, and generalization of model heavily rely on available data, which relates to the dataset partition (Maier et al., 2023, Mohammadi and Mehdizadeh, 2020). Typically, the proportion between the train and test dataset was recommended as 4:1 or 3:2 (Addor and Melsen, 2019, Jiang et al., 2022), However, the specific proportion of the partitioning method leads to inefficient data utilization, and the partitioning bias and contingency significantly affect the reliability and stability (Martí and Gasque, 2010). Since larger training datasets bring more robust and accurate performance, an alternative but beyond approach for data-splitting is cross validation, where models are trained and tested on multiple data subsets, enabling each available data can be used for both development and validation at least once (Craven and Wahba, 1978). Generally, the cross validation method mainly includes internal and external cross validation strategies that split the entire dataset from a temporal and spatial perspective, respectively (Shiri et al., 2014). The internal strategy provided efficient data utilization forms for local feature estimation when there are only single sites or significant differences between sites (Roy and Saha, 2022). Notably, although the internal strategy generally excels in accuracy performance due to data-similarity characteristics at the same site, the external strategy brings better generalization and transferability (Fan et al., 2018, Mehdizadeh, 2018). Furthermore, the external strategy is particularly important when the local data is not available as input at the research station. Similarly, Mohammadi et al. (2020) also concluded that the nearby station can be used for temperature estimation at the desired station. Since both strategies have advantages and disadvantages due to different application values and scenarios, it is necessary to simultaneously employ them for testing ET0 models. Thus, the concern is justified regarding the comparison between internal and external strategies impute to the complex climatic regions of China, which is still not systematically studied nationwide. China boasts a world-leading population and agricultural scale as a developing country, but outdated water resource management significantly hampers agricultural productivity, food security, and sustainable development. In addition, the meteorological stations of China are extremely insufficient in contrast to complex climate conditions. As of 2022, China has approximately 2000 National Meteorological Stations as low as two stations per 104 km2. There are only 90 stations observe solar radiation since 1994, but almost all have long-term historical data on air temperature and humidity (Fan et al., 2019). Given substantial disparities in climatic conditions and data across China, it is imperative to develop a highly precise, exceptionally adaptable, and readily accessible ET0 model under internal and external cross validation strategies. Hence, the primary objectives of this study are as follows: (1) to analyze the spatiotemporal variations of average air temperature (Ta), sunshine duration (n), precipitation (Pre), relative humidity (RH), wind speed at 2 m (u2), and ET0; (2) to develop an LSTM-type ET0 model (MA-CNN-BiLSTM), which incorporates Multi-Head Attention mechanism (MA), Convolutional Neural Network (CNN), and Bidirectional Long Short-Term Memory network (BiLSTM) as intricate relationship processor, feature extractor, and regression component; (3) to carry out a national-scale evaluation of empirical, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM models with limited meteorological inputs in estimating ET0 across four climatic zones of China; (4) to analyze the spatial accuracy of the highly recommended ET0 models utilizing incomplete meteorological inputs under internal and external cross validation strategies. Finally, this study could provide the best-recommended ET0 estimated method for agricultural water management under various meteorological data deficiency scenarios in the different climatic regions of China. Literature review reveals that the AI-based models have been extensively applied to estimate ET0, but the LSTM-type models which comprehensively consider structural modification, multi-module coupling, and attention mechanism have been rarely reported in this field. The main contribution of the present study is the proposal of a novel LSTM-type ET0 estimation model (MA-CNN-BiLSTM) to cope with various data-missing scenarios in different climatic zones of China. 2. Materials and methods 2.1. Site description and data collection China is divided into four climatic zones based on temperature, precipitation, and altitude (Fan et al., 2018), including the temperate continental zone (TCZ), mountain plateau zone (MPZ) temperate monsoon zone (TMZ), and subtropical monsoon zone (SMZ) (Song et al., 2011). In the TCZ, MPZ, TMZ, and SMZ, the average annual precipitation values are 269 mm, 382 mm, 585 mm, and 1320 mm, respectively, while the corresponding average annual pan evaporation values are 2148 mm, 1883 mm, 1475 mm, and 1545 mm. And the corresponding average altitude is 912 m, 4236 m, 288 m, and 611 m in these zones, respectively (Fan et al., 2018, Xing et al., 2023b). The China Meteorological Administration (CMA) has collected daily meteorological data, including maximum air temperature (Tmax), average air temperature (Ta), minimum air temperature (Tmin), air relative humidity (RH), sunshine duration (n), wind speed at 2 m (u2), precipitation (Pre) and atmospheric pressure (P), which has maintained strict quality control measures to ensure the precision and reliability of the observed meteorological data (Fan et al., 2021a, Shu et al., 2022). This study obtained the daily meteorological data in 600 stations from CMA during 1961–2020, with 90 stations in TCZ, 50 stations in MPZ, 175 stations in TMZ, and 285 stations in SMZ (Fig. 1). Additionally, the data underwent further quality control based on the methods described by Liu et al. (2009) and Fan et al. (2018), as well as the average rate of omissions in this dataset was 1.5% (Table S1 offers specific details regarding the 600 meteorological stations). Download : Download high-res image (346KB) Download : Download full-size image Fig. 1. The location of 600 meteorological stations in the four climatic zones of mainland China. Notes: TMZ, TCZ, MPZ, and SMZ are temperate monsoon, temperate continental, mountain plateau, and subtropical monsoon zone, respectively. 2.2. Penman-Monteith equation Based on the FAO-56, the Penman-Monteith (PM) equation was employed for computing reference crop evapotranspiration (ET0) in the following formula (Allen et al., 1998): (1) where Δ and γ represent the slope of the saturation vapor pressure function and the psychometric constant, kPa ℃−1; Rn and G refer to the net radiation and soil heat flux density, MJ m−2 d–1; Ta represents the average air temperature, °C; u2 is the wind speed at 2 m, m s−1; es and ea represent the saturation and actual vapor pressure, kPa. 2.3. Empirical ET0 models In order to analyze the performance of simplified empirical ET0 models in substituting PM, the present study employed the Priestley-Taylor (radiation-based), Romanenko (humidity-based), and Hargreaves-Samani (temperature-based) to estimate ET0 in four climatic zones of China. Their detailed information is presented as follows. Priestley-Taylor model: Priestley and Taylor (1972) proposed the physically-based Priestley-Taylor model (PT), expressed as follows: (2) where λ is the latent heat of vaporization that changes the unit of solar radiation from MJ m−2 day−1 to mm day−1; aPT refers to empirical parameters, which were initially set as 1.26. Romanenko model: Romanenko (1961) introduced the representative aerodynamic model for estimating ET0, expressed as follows: (3) where aRom was initially set as 4.5. Hargreaves-Samani model: The widely applied Hargreaves-Samani model (HS) was proposed by Hargreaves and Samani (1985), expressed as follows: (4) where aHS and bHS were initially set as 0.0023 and 0.5, respectively. 2.4. Multivariate Adaptive Regression Splines Friedman (1991) proposed a data-driven Multivariate Adaptive Regression Splines (MARS) model, which reveals hidden non-linear patterns in datasets and presents regression equations to estimate response variables by combining simple linear regressions (Chen et al., 2022b). Furthermore, MARS involves forward and backward steps. Specifically, the forward step incorporated a substantial quantity of the basis functions, resulting in the generation of a complex over-fitted model. Subsequently, MARS prunes basis functions that may have less impact on the estimation process in the backward step (Mehdizadeh et al., 2019). In this study, we chose MARS as the representative of the traditional machine learning model, and its mathematical formulation can be described as follows: (5) (6) where y is the dependent variable estimated by the MARS; a0 and am represent the two parameters of the basis function; km denotes the number of divisions of the basis function; M refers to the number of the basis functions; the value of Skm is constrained to either + 1 or − 1, serving as an indicator of the polarity of the step function; v(k,m) and tm represent the risk factors and threshold of each basis function, respectively; q is the power of basis function; denotes the basis function. Since Friedman and Roosen (1995) pointed the maximum number of basis functions and maximum degree of interactions were primary user-specified hyperparameters that impact the performance of MARS, this study tuned them using the grid search method according to Fan et al. (2019). Specifically, the maximum number of basis functions and maximum degree of interactions were set as 45 and 6 in this study, respectively. Moreover, the optimum MARS model was selected based on the lowest value of the generalized cross-validation (GCV) criterion, which can be expressed as follows: (7) where yi is the target output; f(xi) represents the estimated output; n is the number of the dataset; and C(M) is the penalty function which is expressed as: (8) where d is the penalty for each basis function. 2.5. Deep learning models This study compared the accurate performance of the developed novel deep learning model (MA-CNN-BiLSTM) to the Long Short-Term Memory network (LSTM), Bidirectional Long Short-Term Memory network (BiLSTM), and Convolutional Bidirectional Long Short-Term Memory network (CNN-BiLSTM) for ET0 estimation using Rn-based, RH-based, and T-based incomplete meteorological input combinations in accordance with the independent variables utilized in the three types of empirical ET0 models across China. 2.5.1. LSTM model The LSTM model, proposed by Hochreiter and Schmidhuber (1997), represents a new type of Recursive Neural Network (RNN) designed to grasp enduring dependencies in sequences through feedback connections. The fundamental essence of the LSTM model resides within its basic memory cell which introduces multiple gating mechanisms, comprising the input gate, forgetting gate, update gate, and output gate (Xie et al., 2020). These “gates” govern the information flow, empowering the model with the ability to judiciously disregard, retain, and convey information. Fig. 2 illustrates the basic memory cell architecture. Download : Download high-res image (69KB) Download : Download full-size image Fig. 2. Basic memory cell within the Long Short-Term Memory network. Notes: It, Ft, Ut, Ot, St, Y, σ, and tanh represent input gate, forget gate, updated gate, output gate, cell state, output variable, sigmoid activation function, and hyperbolic tangent activation function, respectively. The input gate determines whether the input value should be utilized to update the current memory block state, contributing to the adaptive acquisition and information retention for LSTM. (9) (10) where It is the input gate; σ and tanh represent the sigmoid and hyperbolic tangent activation functions, respectively; Ut represents the update gate; W and b represent the corresponding weight and paranoid vector, respectively; and Yt represents input and output values, respectively. The forget gate distinguishes between which prior information to discard and which to retain, thus managing long-term dependencies. (11) where Ft is the forget gate. The update gate enables LSTM to effectively balance the impact of recent and previous information during sequence data processing, thereby enhancing its proficiency in capturing patterns and dependencies within sequences. (12) where Ut is the update gate; St is the memory cell state. The output gate employs the sigmoid function to decide which would be conveyed through the model. (13) (14) where Ot is the output gate. This study iteratively tuned the LSTM hyperparameters using the Grid Search method, and the learning Rate, Batch Size, Dropout, regularization method, and the number of hidden units were set as 0.001, 32, 0.1, L1-regularization, and 128, respectively. Consistent with Mehdizadeh et al. (2019), the present study chose Root Mean Square Error (RMSE) as the fitness function. 2.5.2. MA-CNN-BiLSTM model The present study proposed a novel deep learning model denoted as MA-CNN-BiLSTM, which not only improves the original LSTM structure but also couples CNN and MA modules, with the primary objective of estimating ET0. Specifically, it combines the ability of CNN to capture local features and the capability of BiLSTM to learn long-term dependencies as well as temporal dynamics within inputs, while also incorporating the strengths of the MA mechanism to process intricate relationships. Furthermore, MA-CNN-BiLSTM encompasses three key components. The initial component is the CNN layer that employs convolutional operations for pattern and feature detection across various positions, thus effectively capturing the inherent local features and structures within input data. Subsequently, the MA mechanism layer, constituting the second component, further enhances the extraction of diverse features and relationships. Besides, this layer comprises multiple attention heads, wherein each head is adept at focusing on different segments of the input sequence and learning their relationships, which contributes to the capture of long-range dependencies and global contextual information within the input sequence. Finally, the third component is the BiLSTM layer which is proficient in capturing the context and enduring dependencies within input variables through forward and backward propagation. Hence, MA-CNN-BiLSTM is capable of effectively extracting features from different levels and perspectives, thereby precisely capturing contextual information. The following section offers a brief introduction to the CNN layer, MA layer, and BiLSTM layer. The structure for MA-CNN-BiLSTM is illustrated in Fig. 3. Download : Download high-res image (684KB) Download : Download full-size image Fig. 3. The structure of Convolutional bidirectional Long Short-Term Memory network with Multi-Head Attention mechanism (MA-CNN-BiLSTM). Notes: Ft and Yt represent the input and output, respectively; represent the forward and backward memory cells, respectively; represent the matrix coefficients; represents the output result of the first convolution layer; represents the output result of the second convolution layer; represents the output of the first pooling layer; represents the output of the second pooling layer; represents the offset term of the convolution kernel of the first convolution layer; represents the weight item of the first convolution layer; represents the offset term of the convolution kernel of the second convolution layer; represents the weight item of the second convolution layer; ReLU represents the activation function; Q, K, and V represent the query, key, and value, respectively; Softmax, Contact, and Linear represent the normalization, concat, and linear function, respectively. (1) Convolutional Neural Network Layer. The Convolutional Neural Network (CNN) was initially proposed by Lecun et al. (1998) as a feed-forward neural network that integrates convolutional computations (Dong et al., 2022, Lin et al., 2022, Yao et al., 2023). The standard CNN architecture consists of the input layer, convolutional layer, activation function layer, pooling layer, and output layer. It centers on convolving input data with convolutional kernels of diverse weights within the convolutional layers, facilitating the extraction of inherent data features. For the input matrix X = [x1, x2,…, xn] at time node t (t = 1, 2, …, T) can be expressed as Xt = , and the first convolution layer can be calculated as follows: (15) (16) where represents the output result of first convolution layer; ReLU represents the activation function; represents the offset term of the convolution kernel of first convolution layer; represents the weight item. Maximum pooling was selected by the first pooling layer, which can reduce the network complexity and retain the main features after convolution. The expression for the output result of the first pooling is as follows: (17) where represents the output result of first pooling layer; is the vector in the output of the first convolution layer, d1 ∈ m1. After the second convolution, the eigenvector can be obtained from the output result of the first pooling layer, which is expressed as follows: (18) where is the offset term of the convolution kernel in the second convolution layer; is the weight item. The output result of the second pooling layer is calculated as follows: (19) where is the output of the second pooling layer; is the vector output of the second convolution layer, d1 ∈ m1. Finally, the output eigenvector after twice convolution and pooling can be expressed as follows: (20) (2) Multi-head Attention mechanism. Multi-head attention (MA) is the variant of the attention mechanism that could assign diverse weights to distinct positions or segments during the processing of sequential data (Li et al., 2018). Besides, it allows the model to simultaneously focus on the different information from unknown representation subspaces. In addition, the MA mechanism relies on the Scaled Dot Product Attention calculation part to obtain the attention weights and the reconstructed attention matrix, which operates on queries (Q), keys (K), and values (V). The expression is as follows: (21) where dk is the key dimensionality; the softmax is a normalization function that is applied to obtain an attentional weight matrix. Subsequently, the MA mechanism acquires the attention representation from each head and connects the alternation results that are fed into the feedforward layer for further computation. Specifically, the attention function is executed in parallel with the projected versions of each Q, K, and V to produce the output values (Fu et al., 2024, Zhang and Wang, 2023). These values are concatenated by the Concat function and projected again to obtain the final value. The expression is as follows: (22) (23) where , , and are weight matrices; is weight matrix utilized within linear output function; the headi is the attention value of the ith head. (3) Bidirectional Long Short-Term Memory network Layer. The bidirectional Long Short-Term Memory network (BiLSTM) Layer incorporates the bidirectional recurrent framework into LSTM, which facilitates the bidirectional processing of sequences of data (Joseph et al., 2023). Besides, it can effectively learn and capture dependencies in both forward and backward directions, whereas LSTM is confined to learning dependencies merely in the forward direction (Bottieau et al., 2023). The BiLSTM layer possesses the capability to integrate two hidden layers into a unified output. The iterative computation of forward ( ) and backward ( ) layer output sequences involves utilizing forward and reverse inputs, respectively. Subsequently, the obtained outputs (utp) are amalgamated before advancing to the next layer, following the formula provided below: (24) This study iteratively tuned the MA-CNN-BiLSTM hyperparameters using the Grid Search method, which is an automated hyperparameter optimization method that can comprehensively search for the optimal combination of hyperparameters for machine learning models in the solution space (Fan et al., 2019, Fayed and Atiya, 2019, Qu et al., 2021). In the CNN layer, the number of convolutional layers and filters were set as 2 and 16, respectively. Besides, the size of the kernel in the convolutional layer was set as 3 × 3, the size of pooling operations was set as 2 × 2, and the type of pooling layer was Average-Pooling. In the MA mechanism layer, the number of heads and dropout rate were set as 6 and 0.3. In the BiLSTM layer, the hyperparameters in the forward and backward layers were tuned in the same manner as described for the LSTM above. Moreover, the RMSE was employed as the fitness function for the MA-CNN-BiLSTM model. 2.6. Model implementation Considering that the existing simplified empirical ET0 methods mainly include Rn-based, RH-based, and T-based models, this study built three types of meteorological input combination aligned with the independent variables of corresponding empirical models to evaluate the AI-based ET0 models under the same data-deficiency scenario in four climatic zones of China. The input combinations and abbreviations for AI models are depicted in Table 1. Table 1. Input meteorological variable combinations and abbreviations for Artificial Intelligence models employed in this study. Type Model Input variables MARS LSTM BiLSTM CNN-BiLSTM MA-CNN-BiLSTM Rn-based MARS1 LSTM1 BiLSTM1 CNN-BiLSTM1 MA-CNN-BiLSTM1 Tmax, Tmin, Ta, n RH-based MARS2 LSTM2 BiLSTM2 CNN-BiLSTM2 MA-CNN-BiLSTM2 Tmax, Tmin, Ta, RH T-based MARS3 LSTM3 BiLSTM3 CNN-BiLSTM3 MA-CNN-BiLSTM3 Tmax, Tmin, Ta Notes: MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent Multivariate Adaptive Regression Splines, Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, respectively; Tmax, Tmin, and Ta are maximum, minimum, and average temperature, respectively, °C; n is the sunshine duration, hours; RH is the relative humidity. This study adopted both internal and external K-fold cross validation strategies for the implementation of empirical and AI models as follows: (1) During the process of internal cross validation strategy, the 60-year dataset (1961–2020) of each meteorological station was partitioned into five identical segments, where one segment (12 years) was allocated for validation whereas the other four segments (48 years) were for development (training/calibration). (2) During the process of external cross validation strategy, the stations within the same climatic zone were partitioned into two subsets based on the “leave-one-out” method (Shiri et al., 2015), where one station was used for validation whereas others were for development. Ultimately, the average value of multiple validation results served as the assessment criteria for ET0 models. Besides, this study employed the Partial Least Squares method (PLS) for parameter calibration of empirical models under internal and external K-fold cross validation strategies, respectively, and the final results can be roughly considered as the temporal and spatial recommended values. 2.7. Model evaluation In this study, we accepted the calculated values by the FAO-PM equation as the benchmark since it is generally considered the most standard ET0 calculation method worldwide (Dong et al., 2022, Fan et al., 2021a, Feng et al., 2016, Martí et al., 2015, Xing et al., 2023b). Furthermore, this study employed six statistical accuracy indicators to comprehensively evaluate the estimation performance of the different ET0 models, including the Determination Coefficient (R2), Nash–Sutcliffe efficiency coefficient (NSE), Relative Root Mean Square Error (RRMSE), Root Mean Square Error (RMSE), Mean Absolute Error (MAE), and Global Performance Indicator (GPI), which can be expressed as follows: (25) (26) (27) (28) (29) (30) where xi and are the daily ET0 values computed using PM equation and corresponding mean values at the i-th time step, respectively; yi and are the daily ET0 values obtained by the other model and the corresponding mean values at ith time step; GIj refers to the normalized value of R2, NSE, RRMSE, RMSE, and MAE, respectively; GImedian denotes the median of the GIj; m denotes the number of statistical indicators; To calculate R2 and NSE, the value of αj is assigned 1, whereas, for RRMSE, RMSE, and MAE, it is assigned − 1. Using the GPI, the different ET0 models were ranked in terms of their overall accuracy. 3. Results 3.1. Spatiotemporal variations of meteorological features Fig. 4 presents the spatial distributions and temporal trends in the average annual values of Ta, n, Pre, RH, u2, and ET0 in China from 1961–2020. To be specific, Fig. 4a shows that the averaged annual Ta generally increased from north to south, ranging from − 1.8 ℃ to 24.4 ℃. Temporally, Ta exhibited an increasing trend, with significant increasing trends, increasing trends, significant decreasing trends, and decreasing trends at 572, 21, 2, and 5 stations, respectively. Conversely, the spatially averaged annual n decreased from north to south with values of 1010 − 3478 h (Fig. 4b). Temporally, n displayed a decreasing trend, with significant increasing trends, increasing trends, significant decreasing trends, and decreasing trends at 17, 58, 409, and 116 stations, respectively. Download : Download high-res image (890KB) Download : Download full-size image Fig. 4. Spatiotemporal trend in average annual meteorological features during 1961–2020 throughout China. Notes: TMZ, TCZ, MPZ, and SMZ are temperate monsoon, temperate continental, mountain plateau, and subtropical monsoon zone, respectively; ▲, ▼, △, and ▽ represent significant increasement (P < 0.05), significant decreasement (P < 0.05), general increasement, and general decreasement, respectively. Fig. 4c-d indicates that the spatially averaged annual Pre and RH increased from north to south, ranging from 17 − 2273 mm and 30 − 87%, respectively. Temporally, Pre showed an increasing trend, with 67 stations displaying significant increasing trends, 302 stations displaying increasing trends, 14 stations displaying significant decreasing trends, and 217 stations displaying decreasing trends. Conversely, the RH exhibited a decreasing trend, with significant increasing trends, increasing trends, significant decreasing trends, and decreasing trends at 41, 103, 276, and 180 stations, respectively. Fig. 4e illustrates that the highest averaged annual u2 values occurred in the northeast and northwest, whereas the lowest values occurred in the southwest, ranging from 0.52 − 5.46 m s−1. Temporally, u2 showed a decreasing trend, with significant increasing trends, increasing trends, significant decreasing trends, and decreasing trends at 50, 50, 413, and 87 stations. Moreover, the highest averaged annual ET0 values were observed in the northwest, whereas the lowest values were observed in the northeast and southwest, ranging from 560 − 1646 mm (Fig. 4f). Temporally, ET0 displayed a decreasing trend, with significantly increasing trends, increasing trends, significant decreasing trends, and decreasing trends at 97, 150, 159, and 194 stations, respectively. 3.2. Accuracy performance of radiation-based models For the empirical models, this study used the PLS method to locally calibrate their parameters at 600 stations in four climatic zones of China, as listed in Table 2. As shown in Table 3, Table 4, the median values of R2, NSE, RRMSE, RMSE, and MAE by calibrated PT under internal cross validation strategy were 0.613–0.809, 0.594–0.761, 0.318–0.529, 0.725–1.299 mm d−1, and 0.620–1.193 mm d−1, respectively. Furthermore, Fig. 5 illustrates the boxplots of R2, NSE, RRMSE, RMSE, and MAE values acquired by different Rn-based ET0 models to investigate accuracy disparities between empirical and AI models under internal strategy. Notably, the MA-CNN-BiLSTM1 was proven to be the best Rn-based ET0 model throughout China, with the R2, NSE, RRMSE, RMSE, and MAE ranging 0.932–0.972, 0.912–0.962, 0.129–0.200, 0.294–0.442 mm d−1, and 0.244–0.363 mm d−1, respectively. Compared to other Rn-based models, the corresponding improvement values by MA-CNN-BiLSTM1 ranging 1.15–52.57% for R2, 1.01–53.62% for NSE, 11.45–62.16% for RRMSE, 12.33–65.99% for RMSE, and 11.83–69.55% for MAE, respectively. Despite all LSTM-type models performing better than MARS and PT, the MA-CNN-BiLSTM1 was improved most by 13.64–52.57% for R2, 15.44–53.62% for NSE, 44.89–62.16% for RRMSE, 50.01–65.99% for RMSE, and 48.71–69.55% for MAE, respectively. In addition, the MA-CNN-BiLSTM1 was superior to other LSTM-type models by 1.15–14.15% for R2, 1.04–15.95% for NSE, 11.45–43.91% for RRMSE, 12.33–46.45% for RMSE, and 11.83–45.02% for MAE, respectively. Besides, the results also illustrate that the BiLSTM performed better than the original version of LSTM, while BiLSTM was further significantly improved by the CNN module. Compared to original LSTM, the CNN-BiLSTM and BiLSTM were improved by 5.27–10.02% and 2.02–5.75% for R2, 5.75–10.76% and 2.18–6.33% for NSE, 16.70–28.26% and 4.13–20.42% for RRMSE, 20.35–26.91% and 9.74–17.17% for RMSE, and 18.94–29.11% and 4.19–19.46% for MAE, respectively. Table 2. The calibrated parameters of empirical models by PLS method under internal and external cross-validation strategies in the four climatic zones of China. Type Model Parameter Internal strategy External strategy TCZ MPZ SMZ TMZ TCZ MPZ SMZ TMZ Rn-based PT aPT 1.532 ± 0.074 0.93 ± 0.016 1.022 ± 0.060 1.232 ± 0.123 1.512 ± 0.038 0.937 ± 0.030 1.100 ± 0.088 1.315 ± 0.117 RH-based Rom aRom 4.164 ± 0.213 4.291 ± 0.268 4.159 ± 0.226 4.460 ± 0.429 4.231 ± 0.258 4.041 ± 0.152 4.471 ± 0.138 4.298 ± 0.348 T-based HS aHS 0.0025 ± 0.0001 0.0024 ± 0.0001 0.0021 ± 0.0001 0.0023 ± 0.0001 0.0026 ± 0.0002 0.0025 ± 0.0001 0.0022 ± 0.0001 0.0024 ± 0.0001 bHS 0.470 ± 0.017 0.486 ± 0.013 0.439 ± 0.011 0.452 ± 0.015 0.469 ± 0.019 0.484 ± 0.012 0.450 ± 0.019 0.464 ± 0.014 Notes: TMZ, TCZ, MPZ, and SMZ are temperate monsoon, temperate continental, mountain plateau, and subtropical monsoon zone, respectively; a ± b represent the mean and standard deviation of empirical parameters across multiple stations; Rn, RH, and T represent solar radiation, air humidity, and air temperature, respectively. Table 3. Accuracy results for three types of ET0 models at 600 stations under internal cross-validation strategy in the TCZ and MPZ. Type Model TCZ MPZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.972 0.962 0.147 0.383 0.309 2.000 1 0.957 0.949 0.129 0.294 0.244 2.000 1 CNN-BiLSTM1 0.961 0.953 0.166 0.438 0.351 1.809 2 0.924 0.901 0.165 0.370 0.292 1.507 3 BiLSTM1 0.931 0.915 0.206 0.541 0.427 1.341 4 0.912 0.884 0.183 0.414 0.332 1.259 4 LSTM1 0.913 0.896 0.215 0.599 0.446 1.109 6 0.874 0.852 0.230 0.500 0.412 0.722 8 MARS1 0.855 0.821 0.289 0.768 0.604 0.165 13 0.806 0.783 0.271 0.601 0.500 -0.143 12 PT 0.809 0.761 0.362 0.980 0.739 -0.779 16 0.746 0.735 0.318 0.725 0.620 -0.903 16 RH-based MA-CNN-BiLSTM2 0.946 0.934 0.179 0.485 0.381 1.588 3 0.938 0.921 0.148 0.334 0.264 1.735 2 CNN-BiLSTM2 0.927 0.904 0.208 0.586 0.437 1.227 5 0.901 0.887 0.195 0.427 0.353 1.169 5 BiLSTM2 0.900 0.879 0.233 0.630 0.461 0.943 8 0.898 0.851 0.207 0.450 0.376 0.956 6 LSTM2 0.882 0.868 0.240 0.657 0.505 0.736 9 0.861 0.825 0.240 0.529 0.445 0.522 9 MARS2 0.842 0.811 0.307 0.796 0.633 -0.059 14 0.761 0.748 0.293 0.677 0.560 -0.631 14 Rom 0.758 0.657 0.432 1.430 1.024 -2.000 18 0.679 0.648 0.393 0.895 0.776 -2.000 18 T-based MA-CNN-BiLSTM3 0.907 0.890 0.226 0.618 0.457 1.029 7 0.896 0.844 0.221 0.471 0.397 0.850 7 CNN-BiLSTM3 0.881 0.862 0.254 0.689 0.529 0.646 10 0.843 0.811 0.248 0.547 0.456 0.313 10 BiLSTM3 0.874 0.858 0.272 0.709 0.558 0.541 11 0.841 0.810 0.266 0.583 0.484 0.190 11 LSTM3 0.862 0.850 0.284 0.738 0.591 0.385 12 0.764 0.757 0.283 0.647 0.531 -0.502 13 MARS3 0.824 0.808 0.330 0.834 0.677 -0.288 15 0.755 0.749 0.304 0.694 0.581 -0.720 15 HS 0.773 0.688 0.417 1.295 0.934 -1.653 17 0.692 0.662 0.354 0.787 0.690 -1.598 17 Notes: TCZ and MPZ represent the temperate continental zone and mountain plateau zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute Error, and Global Performance Indicator, respectively. Table 4. Accuracy results for three types of ET0 models at 600 stations under internal cross-validation strategy in the SMZ and TMZ. Type Model SMZ TMZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.932 0.916 0.200 0.442 0.363 1.637 2 0.936 0.912 0.194 0.427 0.347 1.731 2 CNN-BiLSTM1 0.900 0.875 0.280 0.620 0.506 1.065 4 0.902 0.879 0.234 0.588 0.460 1.172 5 BiLSTM1 0.865 0.840 0.298 0.667 0.575 0.724 7 0.866 0.848 0.274 0.673 0.565 0.683 8 LSTM1 0.818 0.790 0.336 0.778 0.624 0.255 11 0.820 0.810 0.317 0.797 0.631 0.163 11 MARS1 0.766 0.741 0.380 1.042 0.811 -0.536 14 0.800 0.790 0.352 0.882 0.710 -0.277 14 PT 0.650 0.600 0.529 1.299 1.193 -2.000 18 0.613 0.594 0.420 1.142 0.959 -2.000 18 RH-based MA-CNN-BiLSTM2 0.960 0.930 0.158 0.318 0.254 2.000 1 0.962 0.948 0.182 0.395 0.300 2.000 1 CNN-BiLSTM2 0.927 0.903 0.255 0.563 0.427 1.379 3 0.918 0.897 0.212 0.527 0.406 1.443 4 BiLSTM2 0.897 0.874 0.285 0.632 0.556 0.986 5 0.891 0.876 0.264 0.648 0.522 0.918 7 LSTM2 0.858 0.829 0.310 0.697 0.581 0.630 8 0.863 0.850 0.282 0.702 0.588 0.608 9 MARS2 0.768 0.751 0.366 0.950 0.778 -0.367 13 0.810 0.798 0.350 0.880 0.692 -0.214 13 Rom 0.695 0.625 0.454 1.200 1.014 -1.487 16 0.757 0.720 0.385 0.967 0.768 -0.850 16 T-based MA-CNN-BiLSTM3 0.877 0.865 0.292 0.644 0.566 0.872 6 0.921 0.901 0.208 0.491 0.396 1.512 3 CNN-BiLSTM3 0.847 0.832 0.315 0.725 0.609 0.546 9 0.892 0.881 0.254 0.619 0.486 1.028 6 BiLSTM3 0.816 0.810 0.341 0.800 0.636 0.275 10 0.860 0.848 0.302 0.755 0.613 0.469 10 LSTM3 0.788 0.750 0.353 0.879 0.732 -0.199 12 0.813 0.803 0.325 0.860 0.673 -0.035 12 MARS3 0.758 0.736 0.382 1.088 0.827 -0.635 15 0.785 0.762 0.368 0.921 0.731 -0.519 15 HS 0.673 0.618 0.483 1.231 1.061 -1.678 17 0.644 0.621 0.407 1.089 0.824 -1.709 17 Notes: SMZ and TMZ represent the subtropical monsoon zone and temperate monsoon zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute Error, and Global Performance Indicator, respectively. Download : Download high-res image (485KB) Download : Download full-size image Fig. 5. Boxplots of accuracy indicators achieved by radiation-based models under internal K-fold cross-validation strategy throughout China. Notes: R2, NSE, RRMSE, RMSE, MAE, PT, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent the abbreviations of Determination coefficient, Nash-Sutcliffe efficiency, Relative Root Mean Square Errors, Root Mean Square Error (mm d−1), Mean Absolute Error (mm d−1), Priestley-Taylor, Multivariate Adaptive Regression Splines, Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, respectively. Regarding the external strategy, Fig. 6 presents the scatter density plots of daily ET0 values estimated by the PM equation against Rn-based models across four climatic zones in China. As shown in Fig. 6, the external Rn-based LSTM-type models exhibited a lower dispersion degree compared to the external MARS and PT models. In this case, the calibrated “aPT” was 1.512, 0.937, 1.100, and 1.315 in TCZ, MPZ, SMZ, and TMZ, respectively (Table 2). Similar to the results under internal strategy, the MA-CNN-BiLSTM1 achieved the best performance among external Rn-based ET0 models throughout China, and R2, NSE, RRMSE, RMSE, and MAE values ranged 0.905–0.926, 0.883–0.920, 0.162–0.224, 0.409–0.585 mm d−1, and 0.294–0.396 mm d−1, respectively (Table 5, Table 6). Correspondingly, the improvement in R2, NSE, RRMSE, RMSE, and MAE were 4.21–55.28%, 4.02–97.89%, 14.45–68.57%, 14.30–70.15%, and 7.09–74.15%, respectively, compared to other external Rn-based models. Besides, the external CNN-BiLSTM1 and BiLSTM1 were superior to original LSTM1 by 6.41–11.57% and 3.13–6.74% for R2, 7.18–12.12% and 1.56–6.59% for NSE, 18.63–24.85% and 8.99–13.74% for RRMSE, 18.63–25.34% and 8.72–13.01% for RMSE, as well as 17.96–29.17% and 4.19–18.40% for MAE. Download : Download high-res image (2MB) Download : Download full-size image Fig. 6. Scatter density plots of daily ET0 values estimated by the PM equation against radiation-based models under external K-fold cross-validation strategy throughout China. Notes: The color bars depict the relative point density in a circle area with a 0.1 mm radius. Table 5. Accuracy results for three types of ET0 models at 600 stations under external cross-validation strategy in the TCZ and MPZ. Type Model TCZ MPZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.926 0.920 0.202 0.585 0.396 2.000 1 0.908 0.901 0.162 0.409 0.294 2.000 1 CNN-BiLSTM1 0.890 0.875 0.246 0.712 0.502 1.533 3 0.869 0.866 0.193 0.489 0.317 1.769 3 BiLSTM1 0.862 0.834 0.276 0.799 0.586 1.186 4 0.840 0.835 0.214 0.541 0.371 1.548 5 LSTM1 0.836 0.815 0.303 0.878 0.612 0.935 6 0.807 0.799 0.240 0.606 0.428 1.295 8 MARS1 0.751 0.744 0.406 1.178 0.874 -0.115 12 0.721 0.704 0.315 0.798 0.588 0.599 13 PT 0.717 0.559 0.461 1.334 1.108 -1.071 16 0.648 0.645 0.405 1.026 0.816 -0.140 16 RH-based MA-CNN-BiLSTM2 0.899 0.897 0.239 0.691 0.467 1.672 2 0.887 0.886 0.183 0.462 0.311 1.866 2 CNN-BiLSTM2 0.849 0.823 0.290 0.838 0.601 1.046 5 0.855 0.850 0.200 0.506 0.332 1.682 4 BiLSTM2 0.814 0.807 0.354 1.023 0.715 0.565 7 0.825 0.791 0.239 0.606 0.427 1.315 7 LSTM2 0.777 0.762 0.402 1.169 0.826 0.067 10 0.795 0.777 0.281 0.711 0.544 1.013 10 MARS2 0.699 0.577 0.413 1.202 0.915 -0.681 14 0.707 0.684 0.316 0.801 0.606 0.530 14 Rom 0.612 0.427 0.500 1.455 1.096 -1.746 17 0.467 0.419 0.447 1.137 0.856 -0.988 17 T-based MA-CNN-BiLSTM3 0.797 0.786 0.335 0.969 0.699 0.552 8 0.832 0.809 0.233 0.591 0.415 1.385 6 CNN-BiLSTM3 0.794 0.766 0.397 1.149 0.721 0.285 9 0.796 0.778 0.280 0.709 0.503 1.045 9 BiLSTM3 0.765 0.761 0.405 1.173 0.837 0.007 11 0.775 0.764 0.287 0.727 0.553 0.925 11 LSTM3 0.754 0.599 0.412 1.193 0.895 -0.450 13 0.733 0.733 0.310 0.784 0.537 0.745 12 MARS3 0.685 0.564 0.429 1.243 0.922 -0.813 15 0.666 0.662 0.388 0.981 0.782 0.030 15 HS 0.572 0.496 0.523 1.521 1.152 -1.859 18 0.336 0.300 0.569 1.445 1.083 -2.000 18 Notes: TCZ and MPZ represent the temperate continental zone and mountain plateau zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute Error, and Global Performance Indicator, respectively. Table 6. Accuracy results for three types of ET0 models at 600 stations under external cross-validation strategy in the SMZ and TMZ. Type Model SMZ TMZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.925 0.900 0.219 0.557 0.388 1.834 2 0.905 0.883 0.224 0.563 0.379 1.807 2 CNN-BiLSTM1 0.876 0.865 0.284 0.760 0.507 1.354 4 0.858 0.844 0.262 0.657 0.463 1.274 5 BiLSTM1 0.838 0.823 0.308 0.825 0.602 1.013 7 0.817 0.800 0.301 0.766 0.534 0.743 8 LSTM1 0.785 0.772 0.349 0.934 0.694 0.576 10 0.787 0.787 0.349 0.880 0.654 0.286 11 MARS1 0.708 0.643 0.396 1.060 0.985 -0.291 14 0.739 0.723 0.370 0.935 0.753 -0.392 14 PT 0.619 0.455 0.698 1.869 1.505 -2.000 18 0.583 0.504 0.482 1.216 0.847 -2.000 18 RH-based MA-CNN-BiLSTM2 0.927 0.918 0.171 0.458 0.328 2.000 1 0.913 0.909 0.207 0.518 0.359 2.000 1 CNN-BiLSTM2 0.890 0.880 0.265 0.709 0.498 1.476 3 0.880 0.872 0.252 0.658 0.469 1.448 3 BiLSTM2 0.844 0.837 0.305 0.817 0.591 1.077 6 0.846 0.842 0.296 0.743 0.520 0.987 6 LSTM2 0.802 0.789 0.326 0.873 0.640 0.758 9 0.810 0.808 0.343 0.865 0.602 0.449 9 MARS2 0.715 0.645 0.374 1.001 0.793 -0.058 13 0.762 0.756 0.361 0.906 0.702 -0.092 12 Rom 0.658 0.554 0.495 1.328 1.273 -1.078 16 0.686 0.684 0.461 1.164 0.810 -1.092 16 T-based MA-CNN-BiLSTM3 0.868 0.851 0.301 0.779 0.578 1.224 5 0.872 0.869 0.270 0.678 0.494 1.320 4 CNN-BiLSTM3 0.815 0.785 0.321 0.859 0.616 0.819 8 0.822 0.811 0.300 0.754 0.522 0.815 7 BiLSTM3 0.772 0.757 0.354 0.948 0.699 0.488 11 0.804 0.803 0.344 0.868 0.632 0.410 10 LSTM3 0.762 0.756 0.366 0.982 0.735 0.398 12 0.762 0.739 0.356 0.899 0.692 -0.106 13 MARS3 0.705 0.642 0.415 1.114 1.003 -0.474 15 0.748 0.735 0.401 1.013 0.773 -0.486 15 HS 0.653 0.546 0.512 1.374 1.354 -1.214 17 0.639 0.604 0.465 1.175 0.819 -1.465 17 Notes: SMZ and TMZ represent the subtropical monsoon zone and temperate monsoon zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute Error, and Global Performance Indicator, respectively. In summary, MA-CNN-BiLSTM1 attained the highest precision among Rn-based ET0 models under internal and external cross validation strategies across four climatic zones of China. Moreover, the Rn-based LSTM-type models present better performance than PT and MARS, whereas the BiLSTM1 and CNN-BiLSTM1 significantly improved the LSTM1 model. 3.3. Accuracy performance of humidity-based models Table 2 lists the calibrated parameter and accuracy result of empirical ET0 models in the four climatic zones of China. As shown in Table 3, Table 4, the median values of the calibrated Rom model ranged 0.679–0.758 for R2, 0.625–0.720 for NSE, and 0.385–0.454 for RRMSE, 0.895–1.430 mm d−1 for RMSE, and 0.768–1.024 mm d−1 for MAE throughout China, respectively. Fig. 7 further illustrates the boxplots of statistical indicators by RH-based ET0 models under internal strategy in four climatic zones of China. As shown in Fig. 7, the MA-CNN-BiLSTM2 achieved best performance using RH-based input throughout China, with median values of R2, NSE, RRMSE, RMSE, and MAE ranging 0.938–0.962, 0.921–0.948, 0.148–0.182, 0.318–0.485 mm d−1, and 0.254–0.381 mm d−1, respectively. Correspondingly, the improvement values were 2.05–38.14% for R2, 2.99–48.81% for NSE, 14.01–65.30% for RRMSE, 17.14–73.46% for RMSE, and 12.62–74.89% for MAE, respectively, compared to other RH-based model (Table 3, Table 4). Despite the MA-CNN-BiLSTM2 improved the MARS2 and Rom mostly, all other LSTM-type models also have a superior performance that the median values of R2, NSE, RRMSE, RMSE, and MAE were improved by 8.25–47.03%, 7.34–48.07%, 21.62–54.14%, 22.70–55.33%, and 20.44–57.61%, respectively. Moreover, the CNN module and bidirectional framework significantly improved the original LSTM model by 4.65–8.04% and 2.04–4.55% for R2, 4.15–8.93% and 1.27–5.43% for NSE, and 13.22–24.94% and 2.96–13.75% for RRMSE, 10.75–25.01% and 4.08–14.81% for RMSE, as well as 13.47–30.98% and 4.29–15.62% for MAE throughout China, respectively. Download : Download high-res image (486KB) Download : Download full-size image Fig. 7. Boxplots of accuracy indicators achieved by humidity-based models under internal K-fold cross-validation strategy throughout China. Notes: R2, NSE, RRMSE, RMSE, MAE, Rom, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent the abbreviations of Determination coefficient, Nash-Sutcliffe efficiency, Relative Root Mean Square Errors, Root Mean Square Error (mm d−1), Mean Absolute Error (mm d−1), Romanenko, Multivariate Adaptive Regression Splines, Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, respectively. Similarly, the MA-CNN-BiLSTM2 was most recommended RH-based ET0 model under external strategy in four climatic zones of China, with the median values of R2, NSE, RRMSE, RMSE, and MAE ranging 0.887–0.927, 0.886–0.918, 0.171–0.239, 0.458–0.691 mm d−1, and 0.311–0.467 mm d−1, respectively (Table 5, Table 6). As shown in Fig. 8, external MA-CNN-BiLSTM2 generated a higher concentration of ET0 estimation around the 1:1 line in comparison to other RH-based models. Correspondingly, the improvement were 3.69–89.94% for R2, 4.18–111.46% for NSE, 8.51–65.42% for RRMSE, 8.66–65.69% for RMSE, and 6.26–74.27% for MAE (Table 5, Table 6). Furthermore, all external LSTM-type models were superior to Rom and MARS with lower dispersion degree in Fig. 8, and the R2, NSE, RRMSE, RMSE, and MAE were improved by 6.22–89.94%, 6.92–111.46%, 2.72–65.42%, 4.27–65.49%, and 9.77–74.27%. Consistent with internal strategy, the external CNN-BiLSTM2 and BiLSTM2 outperformed original external LSTM2 model with improved R2, NSE, RRMSE, RMSE, and MAE ranging 3.71–10.96%, 1.85–11.56%, 6.44–28.83%, 12.45–30.02%, and 7.54–38.90%, respectively. Besides, the calibrated parameter and accuracy of Rom under external strategy were listed in Table 5, Table 6 that the median values of R2, NSE, RRMSE, RMSE, and MAE ranging 0.467–0.686, 0.419–0.684, 0.447–0.500, 1.137–1.455 mm d−1, and 0.810–1.273 mm d−1 throughout China, respectively. Download : Download high-res image (2MB) Download : Download full-size image Fig. 8. Scatter density plots of daily ET0 values estimated by the PM equation against humidity-based models under external K-fold cross-validation strategy throughout China. Notes: The color bars depict the relative point density in a circle area with a 0.1 mm radius. In summary, MA-CNN-BiLSTM2 demonstrated the most outstanding accuracy among the RH-based models under both the internal and external K-fold cross validation strategies in ET0 estimation across all four climatic zones. Moreover, all RH-based LSTM-type models surpassed the empirical model (Rom) and machine learning model (MARS), whereas the BiLSTM2 and CNN-BiLSTM2 significantly improved LSTM2. 3.4. Accuracy performance of temperature-based models Fig. 9 presents boxplots showcasing the statistical indicators obtained by different T-based models under the internal cross validation strategy, which revealed significant accuracy variability existed across different regions of China. Notably, all internal T-based AI models consistently outperformed the internal HS model, as listed in Table 3, Table 4, showcasing substantial improvements of 0.879–3.221 for GPI across all climatic zones in China. Wherein the internal LSTM-type models demonstrated remarkable accuracy enhancements by 1.19–18.68%, 1.95–18.24%, 6.91–43.48%, 6.67–46.77%, and 7.93–45.82% throughout China, in comparison with internal MARS3. Besides, MA-CNN-BiLSTM3 exhibited the highest level of accuracy among internal LSTM-type models, supported by corresponding values ranging 0.877–0.921 for R2, 0.844–0.901 for NSE, 0.208–0.292 for RRMSE, 0.471–0.644 mm d−1 for RMSE, and 0.396–0.566 mm d−1 for MAE, respectively. Correspondingly, internal MA-CNN-BiLSTM3 outperformed the other LSTM-type models with improvements values ranging 2.95–17.28% for R2, 2.27–15.28% for NSE, 7.30–35.99% for RRMSE, 10.27–42.96% for RMSE, and 7.15–41.15% for MAE throughout China, respectively. Hence, the internal MA-CNN-BiLSTM3 stood out as the highly recommended internal ET0 estimating T-based model across all four climatic zones. Regarding calibrated HS equation as shown in Table 3, Table 4, the median values of R2, NSE, RRMSE, RMSE, and MAE ranged 0.644–0.773, 0.618–0.688, 0.354–0.483, 0.787–1.295 mm d−1, and 0.690–1.061 mm d−1, respectively, with the calibrated values of parameter “aHS” and “bHS” ranging 0.0021–0.0025 and 0.439–0.486 throughout China (Table 2). Download : Download high-res image (482KB) Download : Download full-size image Fig. 9. Boxplots of accuracy indicators achieved by temperature-based models under internal K-fold cross-validation strategy throughout China. Notes: R2, NSE, RRMSE, RMSE, MAE, HS, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent the abbreviations of Determination coefficient, Nash-Sutcliffe efficiency, Relative Root Mean Square Errors, Root Mean Square Error (mm d−1), Mean Absolute Error (mm d−1), Hargreaves-Samani, Multivariate Adaptive Regression Splines, Long Short-Term Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network, respectively. Fig. 10 illustrates the scatter density plots of the daily ET0 values estimated by the PM equation against T-based models under the external K-fold cross validation strategy across four climatic zones. As shown in Fig. 10, the external T-based AI models exhibited a lower dispersion of data points compared to the external T-based empirical model (HS), and external T-based LSTM-type models showed a higher concentration of ET0 estimation closely aligned with the 1:1 line, outperforming external MARS3. Table 5, Table 6 list the specific statistical indexes for external T-based models, which further proved that the external T-based LSTM-type models displayed remarkable superiority over HS and MARS by 1.359–3.385 and 0.363–1.806 for GPI. Notably, the external MA-CNN-BiLSTM3 obtained the best performance, with corresponding R2, NSE, RRMSE, RMSE, and MAE values ranging 0.797–0.872, 0.786–0.869, 0.233–0.335, 0.591–0.969 mm d−1, and 0.415–0.699 mm d−1, respectively. Besides, the accuracy of external MA-CNN-BiLSTM3 surpassed the three external T-based LSTM-type models by 1.13–14.51% for R2, 2.56–31.22% for NSE, 6.23–24.50% for RRMSE, 9.35–25.36% for RMSE, and 2.88–28.61% for MAE in TCZ throughout China, respectively. Regarding the comparison between the variant and original version, the CNN-BiLSTM3 and BiLSTM3 significantly improved the LSTM3 model by 4.55–8.51% and 1.39–5.72% for R2, 3.77–27.88% and 1.44–26.08% for NSE, 6.17–15.80% and 1.83–7.27% for RRMSE, 4.15–15.51% and 2.06–7.27% for RMSE, and 6.36–24.65% and 2.85–8.68% for MAE, respectively. Besides, the calibrated “aHS” and “bHS” based on external strategy ranged 0.0022–0.0026 and 0.450–0.484 throughout China (Table 2). Download : Download high-res image (2MB) Download : Download full-size image Fig. 10. Scatter density plots of daily ET0 values estimated by PM equation against temperature-based models under external K-fold cross-validation strategy throughout China. Notes: The color bars depict the relative point density in a circle area with a 0.1 mm radius. In summary, MA-CNN-BiLSTM3 exhibited remarkable accuracy among T-based ET0 models under both internal and external K-fold cross validation strategies across four climatic zones. Furthermore, the T-based AI models exceeded the empirical model, and T-based LSTM-type models outperformed the T-based traditional machine learning model (MARS). 3.5. Cross–comparison among different types of ET0 models under two strategies Conducting the cross-comparison analysis among three types of ET0 estimating models is deemed necessary, as each one presents apparent advantages and disadvantages in different climatic conditions. Regarding the internal strategy, the accuracy of Rn-based outperformed RH- and T-based models in TCZ and MPZ by 1.51–14.40% for R2, 1.17–15.82% for NSE, 4.17–41.63% for RRMSE, 3.52–37.91% for RMSE, and 4.62–38.38% for MAE, respectively (Table 3). Wherein internal MA-CNN-BiLSTM1 obtained the best performance, with the corresponding values ranging 0.957–0.972, 0.949–0.962, 0.129–0.147, 0.294–0.383 mm d−1, and 0.244–0.309 mm d−1 in R2, NSE, RRMSE, RMSE, and MAE, respectively. Meanwhile, internal RH-based models exhibited better accuracy than internal Rn- and T-based models by 2.61–23.40% for R2, 1.13–21.28% for NSE, 3.69–46.04% for RRMSE, 2.53–50.58% for RMSE, and 2.65–54.98% for MAE in SMZ and TMZ, respectively (Table 4). Specifically, internal MA-CNN-BiLSTM2 gained the best precision in these zones, leading to the corresponding values ranging 0.960–0.962, 0.930–0.948, 0.158–0.182, 0.318–0.395 mm d−1, and 0.254–0.300 mm d−1 in R2, NSE, RRMSE, RMSE, and MAE, respectively. According to above results, internal MA-CNN-BiLSTM1, MA-CNN-BiLSTM2, and MA-CNN-BiLSTM3 were the corresponding highly recommended Rn-, RH-, and T-based models, and their spatial distribution of specific statistical indexes was depicted in Fig. 11. Notably, internal MA-CNN-BiLSTM1 demonstrated a relatively good performance across China, except for certain areas with lower accuracy, including the northwestern of SMZ and southeastern of TMZ (Fig. 11a-e). Combined with sunshine duration spatial distribution in Fig. 4b, it can be inferred that internal MA-CNN-BiLSTM1 achieved higher accuracy in areas with long sunshine duration. Furthermore, internal MA-CNN-BiLSTM2 showed lower accuracy in the northeastern TCZ and middle MPZ, but higher accuracy in the southeastern SMZ and southwestern TMZ (Fig. 11f-j). Considering the spatial distribution of RH in Fig. 4d confirmed that the internal MA-CNN-BiLSTM2 performed less accurately in the areas of MPZ, TCZ, and SMZ with lower RH, whereas showed a reverse trend in TMZ. In addition, internal MA-CNN-BiLSTM3 showed a decrease in accuracy from northeastern to southwestern (Fig. 11k-o). Taking into account the Ta spatial distribution in Fig. 4a, it can be deduced that the internal MA-CNN-BiLSTM3 had inferior accuracy in the area of TCZ and MPZ with lower Ta, whereas the opposite trend was observed in SMZ and TMZ. Download : Download high-res image (730KB) Download : Download full-size image Fig. 11. Spatial distribution in accuracy indicators attained by MA-CNN-BiLSTM1 (Radiation-based), MA-CNN-BiLSTM2 (Humidity-based), and MA-CNN-BiLSTM3 (Temperature-based) under internal and external cross-validation strategies throughout China, respectively. Concerning the external strategy, Rn-based models exhibited superior accuracy than other types in TCZ and MPZ by 3.09–92.94% for R2, 2.57–114.83% for NSE, 1.85–39.71% for RRMSE, 1.93–39.63% for RMSE, and 2.94–43.32% for MAE, respectively (Table 5). wherein external MA-CNN-BiLSTM1 demonstrated best performance, with median values of 0.908–0.926, 0.901–0.920, 0.162–0.202, 0.409–0.585 mm d−1, and 0.294–0.396 mm d−1 for R2, NSE, RRMSE, RMSE, and MAE, respectively. Conversely, external RH- outperformed Rn- and T-based models by 1.64–17.72% for R2, 2.62–35.79% for NSE, 1.74–43.13% for RRMSE, 1.26–41.17% for RMSE, and 1.78–43.37% for MAE in SMZ and TMZ, respectively (Table 6). In particular, external MA-CNN-BiLSTM2 achieved highest precision within these zones, as evidenced by corresponding values ranging 0.913–0.927, 0.909–0.918, 0.171–0.207, 0.458–0.518 mm d−1, and 0.328–0.359 mm d−1 for R2, NSE, RRMSE, RMSE, and MAE, respectively. Furthermore, according to Fig. 11p-t, the accuracy of external MA-CNN-BiLSTM1 exhibited a gradual decrease from central area to northeast and southwest. When considering sunshine duration spatial distribution (Fig. 4b), it can be inferred that external MA-CNN-BiLSTM1 achieved higher precision in areas with the long sunshine duration of MPZ, while at TCZ, SMZ and TMZ were opposite. Meanwhile, the accuracy of external MA-CNN-BiLSTM2 increased from northwest to southeast (Fig. 11u-y). The observed spatial distribution of RH in Fig. 4d provides evidence that external MA-CNN-BiLSTM2 exhibited lower accuracy in areas characterized by lower RH. Besides, external MA-CNN-BiLSTM3 demonstrated higher accuracy in northeast and central areas of China, with superior performance in TMZ and SMZ than others (Fig. 11z-ad). Given the evident accuracy discrepancies among the ET0 models utilizing internal and external K-fold cross validation strategies, a cross-comparison analysis is deemed necessary. To be specific, the Rn-based models under internal strategy exhibited superior accuracy compared to those under external strategy, with improvements of 2.74–15.12%, 1.11–36.25%, 1.41–32.54%, 1.68–38.53%, and 13.27–33.31% for R2, NSE, RRMSE, RMSE, and MAE, respectively (Table 3, Table 4, Table 5, Table 6). Agree with the Rn-based models, the corresponding improvements in RH-based models ranged 3.56–45.39% for R2, 1.32–54.65% for NSE, 2.13–40.27% for RRMSE, 1.77–43.81% for RMSE, and 6.09–38.87% for MAE, respectively (Table 3, Table 4, Table 5, Table 6). Similarly, the internal T-based models were superior to external ones by 3.11–106.04%, 1.65–120.49%, 1.86–37.74%, 2.25–45.53%, and 1.21–36.23% for R2, NSE, RRMSE, RMSE, and MAE, respectively. In summary, when considering internal and external strategies simultaneously, Rn-based models showed higher accuracy in TCZ and MPZ, while RH-based models performed better in SMZ and TMZ. Specifically, MA-CNN-BiLSTM1 excelled in TCZ and MPZ, whereas MA-CNN-BiLSTM2 yielded better performance in others. Moreover, it is worth noting that three types of models demonstrated higher accuracy under internal strategy than external strategy. 4. Discussions 4.1. Reasons for accuracy discrepancies among different types of ET0 models Given the limited applications of PM, researchers have developed different types of models as alternatives to estimate ET0 and tested them globally, including empirical models that are based on nonlinear relationships between meteorological variables and ET0, the TML employs statistical patterns derived from meteorological variables to ET0, as well as the DL that utilize neural networks to learn complex mappings between meteorological variables and ET0. In the field of DL, LSTM has gained widespread attention due to the introduction of four crucial gating units, namely the input gate, forgetting gate, update gate, and output gate, which enable LSTM to effectively preserve and propagate useful information in long time-series data (Datta and Faroughi, 2023, Dong et al., 2023, Xing et al., 2023a, Xing et al., 2022b). However, there exist considerable accuracy discrepancies among different models due to structures. In this study, LSTM had a better ET0 estimation accuracy under internal and external strategies than MARS and empirical models by 1.19–118.35% for R2, 2.53–114.07% for NSE, 2.72–50.01% for RRMSE, 3.57–54.06% for RMSE, and 2.96–53.89% for MAE, respectively (Table 3, Table 4, Table 5, Table 6). Consistently, Chen et al. (2020) conducted a comparative analysis of ET0 estimation accuracy between empirical models, TML, and DL, leading to the conclusion that LSTM achieved the best performance. This is mainly attributed to the fact that the DL, particularly LSTM, possesses a multi-layer neural network structure for progressive extraction and features combination between meteorological variables compared to empirical models and TML, thereby effectively capturing nonlinear relationships within the data (Pratama and Wang, 2019). Additionally, LSTM exhibits outstanding performance in managing long time-series data, showcasing the ability to autonomously extract features from meteorological variables while combining them across multiple time steps. It also can automatically adapt parameters based on meteorological variables, thereby enabling LSTM to demonstrate robust effectiveness across diverse environmental and geographical conditions. Therefore, owing to LSTM's enhanced nonlinear modeling proficiency, adeptness in managing time series data, automated feature extraction, and adaptability to diverse conditions, it surpasses empirical models and MARS in ET0 estimation. However, LSTM still encounters challenges such as overfitting and gradient vanishing, prompting researchers to propose various LSTM-type variants to address these limitations (Valipour et al., 2023, Yan et al., 2023, Zhu and Xie, 2023). Besides, this study presented that the performance of CNN-BiLSTM and BiLSTM was better than LSTM, wherein CNN-BiLSTM outperformed BiLSTM. Consistently, Yin et al. (2020) showed that BiLSTM exhibited superior performance in ET0 estimation, with ranging 0.159–0.323 mm d–1 for RMSE, 0.039–0.089 mm d–1 for MAE, 0.943–0.992 for Pearson's correlation coefficient, and 0.982–0.988 for NSE, respectively. Zhu and Xie (2023) displayed that CNN-BiLSTM achieved superior performance in PM2.5 forecasting, yielding an R2 of 0.94. Longjam et al. (2023) demonstrated the efficacy of CNN-BiLSTM in accurately discerning the authenticity of handwritten signatures. Specifically, the BiLSTM improves the structure of the original LSTM by incorporating two directional hidden layers, one propagating forward and the other backward, thereby enabling the simultaneous utilization of both past and future information (Xiong et al., 2023). Moreover, it not only improves the original LSTM structure but also couples a CNN module by considering CNN-BiLSTM, enabling CNN to extract local features and efficiently transmit them to BiLSTM, thus enhancing the capture of both local and global features (Yang et al., 2021a). Furthermore, the parameter sharing and pooling operations within convolutional layers contribute to reducing model parameters, consequently mitigating the risk of overfitting. Additionally, the convolutional operations of CNN accommodate inputs of varying scales, rendering CNN-BiLSTM more flexible and applicable across diverse dimensions and sizes of input data (Wang et al., 2019). Hence, despite the superior performance of CNN-BiLSTM over BiLSTM, they have emerged as a highly effective tool among the LSTM-type variants in ET0 estimation. Furthermore, while there are several advantages associated with CNN-BiLSTM, its application is constrained by the potential redundancy in feature representation, where certain features extracted by CNN are still processed by BiLSTM, resulting in duplicated feature information (Lin et al., 2022, Zhou et al., 2022). To address these limitations and enhance model performance, incorporating the attention mechanism provides a sensible approach that allows models to focus on relevant segments of input data, reducing reliance on redundant information (Han et al., 2023). Datta and Faroughi (2023) also demonstrated that the accuracy of MA-LSTM outperformed LSTM in predicting soil moisture, improving RMSE by 23.53–54.21%. Nevertheless, the attention mechanism typically focuses on a single aspect of input data, potentially constraining their performance (Zhang et al., 2019). Consequently, the multi-head attention mechanism (MA) has been developed based on the foundation of the attention mechanism, which enhances model representational capacity by simultaneously computing multiple attention heads in parallel, enabling the model to better capture interrelationships and dependencies among input data (Essa and Abdelmaksoud, 2023). Therefore, this study integrated the advantages of the MA, CNN, and BiLSTM, resulting in the development of the novel MA-CNN-BiLSTM model, which modifies the original LSTM structure and synergistically integrates MA and CNN modules. Additionally, the MA-CNN-BiLSTM achieved the highest precision among the employed models in this study under internal and external K-fold cross validation strategies, with the corresponding values ranging 0.797–0.972 for R2, 0.786–0.962 for NSE, and 0.129–0.335 for RRMSE, 0.294–0.969 mm d−1 for RMSE, and 0.244–0.699 mm d−1 for MAE, respectively (Table 3, Table 4, Table 5, Table 6). To be specific, the CNN layer is utilized for extracting local features and structural information from the input data. Additionally, the MA mechanism allows the model to establish weighted connections between different parts of the input data, enabling the model to better process intricate relationships, thereby facilitating an understanding of the global structure and patterns (Bin et al., 2019). Furthermore, the MA is capable of learning multiple distinct points of focus, contributing to the enhancement of data representation learning. Each attention head can specialize in different aspects of the features, enabling the model to better discriminate between diverse information present in the input data. Moreover, the utilization of the MA mechanism permits the model to concurrently consider information from multiple attention heads, mitigating the risk of overfitting. Each head can concentrate on different facets of the data, thereby reducing the potential for excessive fitting to specific samples (Lin et al., 2020). Ultimately, the BiLSTM layer is employed to capture temporal dependencies in long time-series data, simultaneously considering both past and future information. Hence, through integrating the advantages of the Multi-Head Attention mechanism, MA-CNN-BiLSTM accomplishes a comprehensive improvement in model performance, establishing itself as an efficient model for ET0 estimation. To summarize, while LSTM demonstrates excellent performance in ET0 estimation due to the “gate” structure than empirical models and TML, the BiLSTM further modifies the limitations of LSTM by introducing the bidirectional structure. Moreover, this study enhances the feature extraction capability and automatic focus adjustment of BiLSTM by integrating CNN and MA. Therefore, the novel proposed MA-CNN-BiLSTM model, which incorporates the MA, CNN, and BiLSTM as the intricate relationship processor, feature extractor, and regression component, respectively, can be recommended as a reliable approach to addressing high-dimensional nonlinear time series problems and holds significant potential for applications in other domains. 4.2. Reasons for accuracy discrepancies among ET0 models using different inputs In addition to the influence of model structures, the different input meteorological variables combinations of models hold considerable significance during the ET0 estimation process. As the most crucial energy source within the atmospheric system of Earth, solar radiation plays a pivotal role in regulating and driving the process of evapotranspiration (Gleeson et al., 2020). Numerous studies have reported that the Rn–based models with input combination exhibited superior performance than other models. To be specific, Ahmadi and Javanbakht (2020) found that Rn-based outperformed T-based models in ET0 estimation, demonstrating improvements of 12.11–45.87%. Consistently, the Rn-based demonstrated superior accuracy than RH-based and T-based models under both internal and external strategies in TCZ and MPZ, with improvements ranging 1.51–92.94% for R2, 1.17–114.83% for NSE, 1.85–41.63% for RRMSE, 1.93–39.63% for RMSE, and 2.94–43.32% for MAE, respectively (Table 3, Table 4, Table 5, Table 6). In regions characterized by intense solar radiation, such as TCZ and MPZ, the ET0 is predominantly controlled by available solar radiation energy (Jiang and Zhu, 2023). Besides, the Rn-based model can accurately describe the energy transfer and conversion process, thereby enhancing ET0 estimation (He et al., 2017). Therefore, the superiority of the Rn- over T- and RH-based models is evident in TCZ and MPZ. However, apart from solar radiation, RH also exerts an influence on the rate of evaporation. Numerous prior research has demonstrated that RH-based models achieved superior performance in ET0 estimation. Ferreira et al. (2019) demonstrated a significant improvement in the accuracy of Artificial Neural Network (ANN) and Support Vector Machine (SVM) models by 7–24% when incorporating the RH variable for ET0 estimation in Brazil. Bashir et al. (2023) found that the RH-based ANN surpassed the T-based ANN by 34.86%. In this study, RH- exhibited superior performance compared to Rn- and T-based models under both internal and external strategies in SMZ and TMZ, exhibiting improvements by 1.64–23.40%, 1.13–35.79%, 1.74–46.04%, 1.26–50.58%, and 1.78–54.98% for R2, NSE, RRMSE, RMSE, and MAE, respectively (Table 3, Table 4, Table 5, Table 6). This result can be attributed to the significant water vapor exchange leading to high humidity but relatively weak solar radiation in SMZ and TMZ, where RH stands as the predominant factor influencing ET0 (Fan et al., 2016). Additionally, RH exhibits significant variability within these zones. Hence, the superior accuracy of models employing RH-based input combinations compared to T-based and RH-based models becomes apparent in SMZ and TMZ. Moreover, despite the superior accuracy exhibited by Rn-based and RH-based models over T-based models in prior research, it should be noted that the availability of Rn and RH data is relatively limited compared to temperature data across various regions. Consequently, T-based models remain extensively utilized worldwide. Bellido-Jiménez et al. (2020) found that the accuracy of AI models utilizing T-based inputs exhibits superior performance for ET0 estimation in Spain. Feng et al. (2017b) discovered that the T-based Extreme Learning Machine exhibited superior performance in ET0 estimation compared to T-based Generalized Regression Neural Network (GRNN) and HS models, achieving RRMSE of 0.198, MAE of 0.267 mm d–1, and NSE of 0.891. Similarly, this study showed that the internal MA-CNN-BiLSTM3 demonstrated superior accuracy within TMZ compared to its performance in the other three zones, yielding R2, NSE, RRMSE, RMSE, and MAE values of 0.921, 0.901, 0.208, 0.491 mm d−1, and 0.396 mm d−1, respectively (Table 4). Besides, the accuracy of external MA-CNN-BiLSTM3 in SMZ and TMZ surpassed that of the model in TCZ and MPZ, achieving the corresponding values ranging 0.868–0.872 for R2, 0.851–0.869 for NSE, 0.269–0.301 for RRMSE, 0.671–0.779 mm d−1 for RMSE, and 0.494–0.578 mm d−1 for MAE, respectively (Table 5, Table 6). These findings can be attributed to higher temperatures and relatively weak solar radiation in TMZ and SMZ, highlighting the prominent influence of temperature as a primary driver of evapotranspiration. Thus, due to the relatively easy accessibility and higher accuracy of temperature data in many regions, the application of T-based ET0 models is more widespread. To summarize, Rn-based models achieved the best ET0 estimates in TCZ and MPZ, while RH-based models were better in other zones, which implies that the accuracy and reliability of ET0 models are highly dependent on meteorological inputs. It is worth noting that the selection about the types of input variables is a crucial process that requires comprehensive consideration of multiple factors, including geographical environment, data availability, and correlations. 4.3. Advantages and disadvantages between two cross validation strategies In the estimating ET0 process, besides model structures and input combinations, the model validation strategy also exerts a significant influence on estimation accuracy. The cross validation strategy is widely applied for assessing model performance, including internal cross validation strategy and external cross validation strategy, both of which play pivotal roles in enhancing model generalization capabilities (Roberts et al., 2017). Besides, the accuracy of models based on both internal and external cross validation strategies exhibits considerable variability. Feng et al. (2017a) compared RF and GRNN models for estimating ET0 under both internal and external cross validation strategies and found that internal Random Forests (RF) and GRNN outperformed external RF and GRNN models by 4.71–21.87%. Xing et al. (2022a) reported that the internal Deep Belief Network-Long Short-Term Memory network (DBN-LSTM) exhibited superior accuracy compared to the external DBN-LSTM, with an improvement ranging from 3.03–5.59%. Similarly, the Rn-, RH-, and T-based models using internal strategy displayed superior accuracy compared to those using external strategy in this study, with improvements of 2.74–106.04% for R2, 1.11–120.49% for NSE, 1.41–40.27% for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE, respectively (Table 3, Table 4, Table 5, Table 6). Obviously, the internal strategy employs the same dataset for both training and validation compared to the external strategy, yielding a more stable estimate performance that is less susceptible to dataset variations. Besides, internal strategy enhances dataset utilization and contributes to reducing model overfitting by conducting multiple validations on distinct validation subsets within the same dataset (Hao et al., 2020). Hence, assessing the applicability of ET0 models using the internal strategy has the potential to fill data gaps and offer managers a practical alternative when utilizing fewer meteorological observation data, thereby enhancing decision-making accuracy in scenarios involving data scarcity. Moreover, despite the aforementioned advantages of the internal K-fold cross validation strategy, the application of the external K-fold cross validation strategy is extensively widespread (Shao et al., 2013). Chen et al. (2020) demonstrated that external DL, TML, and empirical models yielded in estimating ET0, with variations in RMSE ranging from 0.502–0.964 mm d–1, respectively. Mehdizadeh et al. (2017) estimated daily dew point temperature (Tdew) using meteorological data from the adjacent station, and they found that the meteorological data of the adjacent station can be used to predict Tdew. Martí et al. (2015) found that the external Gene Expression Programming (GEP) model achieved better accuracy for estimating ET0 in Spain, displaying RMSE and MAE ranging from 0.235–0.744 mm d–1 and 0.097–0.285 mm d–1, respectively. Identically, the ranges for external models were 0.336–0.927 for R2, 0.300–0.920 for NSE, 0.162–0.698 for RRMSE, 0.409–1.869 mm d−1 for RMSE, and 0.295–1.505 mm d−1 for MAE in this study, respectively (Table 5, Table 6). Apparently, given that the model is trained on a subset while validated on a different one, the external cross validation strategy safeguards against any information leakage from validation set into training process, which mitigates the concern of overestimated model performance stemming from improper data processing. Besides, it also enables accurate evaluations of model performance on the absent dataset, ensuring a reliable assessment for the generalization capability of models (Breve et al., 2023). Particularly in China with diverse geographical and climatic conditions, there are only 629 nationwide meteorological stations that possess comprehensive historical observational meteorological data due to equipment malfunctions and external disruptions, with the spatial distribution of these stations being uneven. Therefore, the application of external strategy is necessary to verify the appropriateness of ET0 models in regions lacking complete historical meteorological observation data. To summarize, the Rn-, RH-, and T-based ET0 models using internal strategy presented superior accuracy compared to those using the external strategy, which highlights the crucial role of cross validation strategy as a key technique for developing excellent ET0 estimation models and underscores its importance in model evaluation, data utilization, and mitigating overfitting. 4.4. Analysis of uncertainties, limitations, and applications It is widely acknowledged that all models are subject to uncertainties and limitations (Refsgaard and Henriksen, 2004). Despite the quality of meteorological data bringing uncertainty to ET0 models during development (Cui et al., 2023), the selection of input variables significantly impacts the estimates by AI models impute to complex drive-response relationships (Xing et al., 2022a, Xing et al., 2023c). In addition, the lengths of training and testing datasets also exerted an inevitable impact on the generalization, robustness, and accuracy of the non-linear model (Mohammadi and Mehdizadeh, 2020). Beyond that, while the novel LSTM-type model developed based on sophisticated structure-enriched functionality, it also brings potential system errors and cumulative errors. Meanwhile, the hybrid structure of multiple models results in numerous hyperparameters, which became the main sources of uncertainties for the MA-CNN-BiLSTM model. Moreover, the MA-CNN-BiLSTM model demands substantial computational resources and runtime, thereby introducing difficulties concerning operational efficiency and maintenance. Another main methodology uncertainty is that the DL models are frequently regarded as “black boxes” owing to the complex structures and nonlinear transformations inherent, thereby there are potential challenges of interpretability and transparency to DL models (Tjoa and Guan, 2021). Through analyzing the sources of uncertainty in estimation results, it is revealed that the present study is mainly limited by the lack of preprocessing methods for input selection. We highly appreciate Mohammadi and Mehdizadeh (2020), who successfully determined the optimal input combinations for the SVR-based ET0 model using pre-processing approaches in Iran. Besides, Ahmadi et al. (2021) proposed the τ Kendall and entropy as pre-processing techniques to discern the effective climatic parameters for AI models. We sincerely agree that the above operation is necessary for improving the estimation accuracy of AI models, which this study did not touch on this field regretfully. Moreover, even if this study adopts the cross validation strategy to build the ET0 models, the fixed ratio between the training and testing sets is still limited to the research result, without considering the potential performance of other values. We also admire the research conducted by Hossein Kazemi et al. (2020) that different temporal data partitioning scenarios were assessed for ET0 estimation with machine learning techniques in arid regions. Moreover, the present study merely focuses on the accuracy performance of different ET0 models, without considering their operating efficiency and model complexity (Wang and Liu, 2006). Despite the aforementioned uncertainties and limitations, the main contribution of the present study is the proposal of a novel LSTM-type ET0 estimated model (MA-CNN-BiLSTM) to cope with various data-missing scenarios in different climatic zones of China, which can provide scientific support for decision-making in agricultural water resource management. By combining accurate ET0 estimates and crop coefficient (Kc), agricultural practitioners can formulate appropriate irrigation strategies based on actual water requirements (ET) to mitigate water wastage and prevent overexploitation of land resources (Mohammadi and Mehdizadeh, 2020, Yan et al., 2021). In addition, it is believed that its effective simulation can contribute to research on ecosystems, climate change, and environmental protection because the ET0 is a major component of the Earth's water cycle (Ahmadi et al., 2021, Chen et al., 2022a, Ferreira and da Cunha, 2020). Regarding the MA-CNN-BiLSTM possesses excellent robustness in solving time series problems by incorporating the MA, CNN, and BiLSTM as the intricate relationship processor, feature extractor, and regression component, there is a reasonable prospect that it would adapt to similar fields such as financial issues, meteorological disasters, and runoff prediction, etc. 5. Conclusions and future works This study conducted a comprehensive assessment of the performance accuracy for MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, and three empirical models with limited meteorological data under internal and external k-fold cross validation strategies for ET0 estimation during 1961–2020 in four climatic zones of China, respectively. Based on the results and discussions, the main conclusions could be summarized as follows: (1) The MA-CNN-BiLSTM exhibited the highest accuracy in estimating ET0 using limited meteorological input combinations under both internal and external strategies in four climatic zones of China, with median values ranging 0.797–0.972 for R2, 0.786–0.962 for NSE, and 0.129–0.335 for RRMSE, 0.294–0.969 mm d−1 for RMSE, and 0.244–0.699 mm d−1 for MAE, respectively. Besides, based on GPI, the accuracy of ET0 models can be ranked from best to worst: MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, and empirical models. (2) Under incomplete meteorological input combinations, the Rn-based demonstrated superior accuracy than RH-based and T-based models under both internal and external strategies in TCZ and MPZ, with improvements ranging 1.51–92.94% for R2, 1.17–114.83% for NSE, 1.85–41.63% for RRMSE, 1.93–39.63% for RMSE, and 2.94–43.32% for MAE, respectively. In contrast, RH-based outperformed Rn-based and T-based models in SMZ and TMZ, achieving improvements by 1.64–23.40%, 1.13–35.79%, 1.74–46.04%, 1.26–50.58%, and 1.78–54.98% for R2, NSE, RRMSE, RMSE, and MAE, respectively. Specifically, the MA-CNN-BiLSTM with Rn-based input combination excelled in TCZ and MPZ, while the MA-CNN-BiLSTM with RH-based input combination yielded the best performance in other zones. (3) The Rn-based, RH-based, and T-based models demonstrated higher accuracy when employing the internal cross validation strategy in comparison to the external strategy, with improvements values ranging 2.74–106.04% for R2, 1.11–120.49% for NSE, 1.41–40.27% for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE, respectively. Nevertheless, employing external strategy carries higher practical importance, as it yields accuracies ranging from 0.336–0.927 for R2, 0.300–0.920 for NSE, 0.162–0.698 for RRMSE, 0.409–1.869 mm d−1 for RMSE, and 0.295–1.505 mm d−1 for MAE across the three types of models, respectively. Through the limitation discussion of model implementation and research method, we would propose the pre-processing approaches to analyze the importance of variables and construct input combinations of the model to expand the application value of AI models in the field of ET0 estimation using incomplete data (Mohammadi and Mehdizadeh, 2020). In addition, the introduction of different temporal data partitioning methods and model complexity index may be another important future work to improve the accuracy and robustness of the novel developed model in this study. Considering the substantial applications of this study, future research will be also conducted to enhance ET0 estimation by integrating meteorological data, satellite remote sensing data, and ground observation data. Future research could investigate the impacts of geospatial distribution and spatiotemporal dynamics on ET0 models, thus enabling more precise forecasting of ET0 trends across varying regions and periods. In the future, there will be potential to combine AI and empirical models to enhance both the interpretability and reliability of ET0 estimation, with a primary focus on constructing more physically meaningful models for a comprehensive understanding of ET0 fluctuations. Moreover, we believe that the application of the MA-CNN-BiLSTM should not be limited to ET0 estimation, but has broad prospects in fields such as new energy development, meteorological disaster prevention, and ecological environment protection, which was also one of our long-term work plans. Supplementary data Table S1 Basic information regarding the 600 meteorological stations in four climatic zones of China. CRediT authorship contribution statement Zhao Lu: Data curation. Guo Li: Validation, Supervision. Wang Zhihui: Investigation, Data curation. Du Taisheng: Validation, Supervision, Resources. Tan Mingdong: Data curation. Gong Daozhi: Validation. Dong Juan: Writing – original draft, Validation, Methodology, Formal analysis, Data curation. Xing Liwen: Writing – original draft, Supervision, Software, Resources, Project administration, Methodology, Funding acquisition, Data curation. Cui Ningbo: Writing – review & editing, Funding acquisition. Declaration of Competing Interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgment This work was funded by National Natural Science Foundation of China (52309057, 52279041, 51922072, 51779161, and 51009101), National Key Research and Development Program of China (2021YFD1600803–1, 2022YFD1900805), Central University Basic Research Funding (2022YFQ0066, 2020CDDZ-19, 2019CDLZ-10, and 2018CDPZH10), and Sichuan Science and Technology Program (2024QYCX0389, 2023NZZJ0015). Appendix A. Supplementary material Download : Download spreadsheet (128KB) Supplementary material . Data availability The authors do not have permission to share data. References Addor and Melsen, 2019 N. Addor, L.A. Melsen Legacy, rather than adequacy, drives the selection of hydrological models Water Resour. Res., 55 (1) (2019), pp. 378-390, 10.1029/2018wr022958 View in ScopusGoogle Scholar Ahmadi et al., 2021 F. Ahmadi, S. Mehdizadeh, B. Mohammadi, Q.B. Pham, T.N.C. Doan, N.D. Vo Application of an artificial intelligence technique enhanced with intelligent water drops for monthly reference evapotranspiration estimation Agric. Water Manag., 244 (2021), Article 106622, 10.1016/j.agwat.2020.106622 View PDFView articleView in ScopusGoogle Scholar Ahmadi and Javanbakht, 2020 S.H. Ahmadi, Z. Javanbakht Assessing the physical and empirical reference evapotranspiration (ETo) models and time series analyses of the influencing weather variables on ETo in a semi-arid area J. Environ. Manag., 276 (2020), Article 111278, 10.1016/j.jenvman.2020.111278 View PDFView articleView in ScopusGoogle Scholar Allen et al., 1998 R.G. Allen, L.S. Pereira, D. Raes, M. Smith Crop Evapotranspirationguidelines for Computing Crop Water requirements-FAO Irrigation and Drainage Paper 56 FAO. Food and Agricultural Organization of the United Nations (FAO), Rome, Italy (1998), p. 326 pp. Google Scholar Bashir et al., 2023 R.N. Bashir, F.A. Khan, A.A. Khan, M. Tausif, M.Z. Abbas, M.M.A. Shahid, N. Khan Intelligent optimization of reference evapotranspiration (ETo) for precision irrigation J. Inf. Comput. Sci., 69 (2023), Article 102025, 10.1016/j.jocs.2023.102025 View PDFView articleView in ScopusGoogle Scholar Bellido-Jiménez et al., 2020 J.A. Bellido-Jiménez, J. Estévez, A.P. García-Marín New machine learning approaches to improve reference evapotranspiration estimates using intra-daily temperature-based variables in a semi-arid region of Spain Agric. Water Manag. (2020), Article 106558, 10.1016/j.agwat.2020.106558 Google Scholar Bin et al., 2019 Y. Bin, Y. Yang, F. Shen, N. Xie, H.T. Shen, X. Li Describing video with attention-based bidirectional LSTM IEEE Trans. Cybern., 49 (7) (2019), pp. 2631-2641, 10.1109/TCYB.2018.2831447 View in ScopusGoogle Scholar Bottieau et al., 2023 J. Bottieau, Y. Wang, Z. De Grève, F. Vallée, J.-F. Toubeau Interpretable transformer model for capturing regime switching effects of real-time electricity prices IEEE Trans. Power Syst., 38 (3) (2023), pp. 2162-2176, 10.1109/tpwrs.2022.3195970 View in ScopusGoogle Scholar Breve et al., 2023 B. Breve, G. Cimino, V. Deufemia Identifying security and privacy violation rules in trigger-action IoT platforms with NLP models IEEE Internet Things J., 10 (6) (2023), pp. 5607-5622, 10.1109/jiot.2022.3222615 View in ScopusGoogle Scholar Chen et al., 2022a H. Chen, J.J. Huang, S.S. Dash, Y. Wei, H. Li A hybrid deep learning framework with physical process description for simulation of evapotranspiration J. Hydrol., 606 (2022), Article 127422, 10.1016/j.jhydrol.2021.127422 View PDFView articleView in ScopusGoogle Scholar Chen et al., 2022b W.-H. Chen, H.-J. Lo, R. Aniza, B.-J. Lin, Y.-K. Park, E.E. Kwon, H.-K. Sheen, L.A.D.R. Grafilo Forecast of glucose production from biomass wet torrefaction using statistical approach along with multivariate adaptive regression splines, neural network and decision tree Appl. Energy, 324 (2022), Article 119775, 10.1016/j.apenergy.2022.119775 View PDFView articleView in ScopusGoogle Scholar Chen et al., 2020 Z. Chen, Z. Zhu, H. Jiang, S. Sun Estimating daily reference evapotranspiration based on limited meteorological data using deep learning and classical machine learning methods J. Hydrol., 591 (2020), Article 125286, 10.1016/j.jhydrol.2020.125286 View PDFView articleView in ScopusGoogle Scholar Choubin and Malekian, 2017 B. Choubin, A. Malekian Combined gamma and M-test-based ANN and ARIMA models for groundwater fluctuation forecasting in semiarid regions Environ. Earth Sci., 76 (15) (2017), Article 538, 10.1007/s12665-017-6870-8 View in ScopusGoogle Scholar Craven and Wahba, 1978 P. Craven, G. Wahba Smoothing noisy data with spline functions Numer. Math., 31 (1978), pp. 377-403 View in ScopusGoogle Scholar Cui et al., 2023 N. Cui, Z. He, S. Jiang, M. Wang, X. Yu, L. Zhao, R. Qiu, D. Gong, Y. Wang, Y. Feng Inter-comparison of the Penman-Monteith type model in modeling the evapotranspiration and its components in an orchard plantation of Southwest China Agric. Water Manag., 289 (2023), Article 108541, 10.1016/j.agwat.2023.108541 View PDFView articleView in ScopusGoogle Scholar Datta and Faroughi, 2023 P. Datta, S.A. Faroughi A multihead LSTM technique for prognostic prediction of soil moisture Geoderma, 433 (2023), Article 116452, 10.1016/j.geoderma.2023.116452 View PDFView articleView in ScopusGoogle Scholar Dong et al., 2022 J. Dong, Y. Zhu, X. Jia, Ma Shao, X. Han, J. Qiao, C. Bai, X. Tang Nation-scale reference evapotranspiration estimation by using deep learning and classical machine learning models in China J. Hydrol., 604 (2022), Article 127207, 10.1016/j.jhydrol.2021.127207 View PDFView articleView in ScopusGoogle Scholar Dong et al., 2023 J. Dong, L. Xing, N. Cui, L. Zhao, L. Guo, D. Gong Standardized precipitation evapotranspiration index (SPEI) estimated using variant long short-term memory network at four climatic zones of China Comput. Electron. Agric., 213 (2023), Article 108253, 10.1016/j.compag.2023.108253 View PDFView articleView in ScopusGoogle Scholar Elmaz et al., 2021 F. Elmaz, R. Eyckerman, W. Casteels, S. Latré, P. Hellinckx CNN-LSTM architecture for predictive indoor temperature modeling Build. Environ., 206 (2021), Article 108327, 10.1016/j.buildenv.2021.108327 View PDFView articleView in ScopusGoogle Scholar Essa and Abdelmaksoud, 2023 E. Essa, I.R. Abdelmaksoud Temporal-channel convolution with self-attention network for human activity recognition using wearable sensors Knowl. -Based Syst., 278 (2023), Article 110867, 10.1016/j.knosys.2023.110867 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2016 J. Fan, L. Wu, F. Zhang, Y. Xiang, J. Zheng Climate change effects on reference crop evapotranspiration across different climatic zones of China during 1956–2015 J. Hydrol., 542 (2016), pp. 923-937, 10.1016/j.jhydrol.2016.09.060 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2018 J. Fan, W. Yue, L. Wu, F. Zhang, H. Cai, X. Wang, X. Lu, Y. Xiang Evaluation of SVM, ELM and four tree-based ensemble models for predicting daily reference evapotranspiration using limited meteorological data in different climates of China Agric. Meteorol., 263 (2018), pp. 225-241, 10.1016/j.agrformet.2018.08.019 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2019 J. Fan, L. Wu, F. Zhang, H. Cai, W. Zeng, X. Wang, H. Zou Empirical and machine learning models for predicting daily global solar radiation from sunshine duration: a review and case study in China Renew. Sust. Energ. Rev., 100 (2019), pp. 186-212, 10.1016/j.rser.2018.10.018 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2021a J. Fan, L. Wu, J. Zheng, F. Zhang Medium-range forecasting of daily reference evapotranspiration across China using numerical weather prediction outputs downscaled by extreme gradient boosting J. Hydrol., 601 (2021), Article 126664, 10.1016/j.jhydrol.2021.126664 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2021b J. Fan, J. Zheng, L. Wu, F. Zhang Estimation of daily maize transpiration using support vector machines, extreme gradient boosting, artificial and deep neural networks models Agric. Water Manag., 245 (2021), Article 106547, 10.1016/j.agwat.2020.106547 View PDFView articleView in ScopusGoogle Scholar Fayed and Atiya, 2019 H.A. Fayed, A.F. Atiya Speed up grid-search for parameter selection of support vector machines Appl. Softw. Comput., 80 (2019), pp. 202-210, 10.1016/j.asoc.2019.03.037 View PDFView articleView in ScopusGoogle Scholar Feng et al., 2016 Y. Feng, N. Cui, L. Zhao, X. Hu, D. Gong Comparison of ELM, GANN, WNN and empirical models for estimating reference evapotranspiration in humid region of Southwest China J. Hydrol., 536 (2016), pp. 376-383, 10.1016/j.jhydrol.2016.02.053 View PDFView articleView in ScopusGoogle Scholar Feng et al., 2017a Y. Feng, N. Cui, D. Gong, Q. Zhang, L. Zhao Evaluation of random forests and generalized regression neural networks for daily reference evapotranspiration modelling Agric. Water Manag., 193 (2017), pp. 163-173, 10.1016/j.agwat.2017.08.003 View PDFView articleView in ScopusGoogle Scholar Feng et al., 2017b Y. Feng, Y. Peng, N. Cui, D. Gong, K. Zhang Modeling reference evapotranspiration using extreme learning machine and generalized regression neural network only with temperature data Comput. Electron. Agric., 136 (2017), pp. 71-78, 10.1016/j.compag.2017.01.027 View PDFView articleGoogle Scholar Ferreira and da Cunha, 2020 L.B. Ferreira, F.F. da Cunha New approach to estimate daily reference evapotranspiration based on hourly temperature and relative humidity using machine learning and deep learning Agric. Water Manag., 234 (2020), Article 106113, 10.1016/j.agwat.2020.106113 View PDFView articleView in ScopusGoogle Scholar Ferreira et al., 2019 L.B. Ferreira, F.F. da Cunha, R.A. de Oliveira, E.I. Fernandes Filho Estimation of reference evapotranspiration in Brazil with limited meteorological data using ANN and SVM – A new approach J. Hydrol., 572 (2019), pp. 556-570, 10.1016/j.jhydrol.2019.03.028 View PDFView articleView in ScopusGoogle Scholar Friedman, 1991 J.H. Friedman Multivariate adaptive regression splines Ann. Stat., 19 (1) (1991), pp. 1-67, 10.1214/aos/1176347963 Google Scholar Friedman and Roosen, 1995 J.H. Friedman, C.B. Roosen An introduction to multivariate adaptive regression splines Stat. Methods Med. Res., 4 (3) (1995), pp. 197-217, 10.1177/096228029500400303 View in ScopusGoogle Scholar Fu et al., 2024 R. Fu, H. Liang, S. Wang, C. Jia, G. Sun, T. Gao, D. Chen, Y. Wang Transformer-BLS: an efficient learning algorithm based on multi-head attention mechanism and incremental learning algorithms Expert Syst. Appl., 238 (2024), Article 121734, 10.1016/j.eswa.2023.121734 View PDFView articleView in ScopusGoogle Scholar Gleeson et al., 2020 T. Gleeson, L. Wang-Erlandsson, M. Porkka, S.C. Zipper, F. Jaramillo, D. Gerten, I. Fetzer, S.E. Cornell, L. Piemontese Illuminating water cycle modifications and Earth system resilience in the Anthropocene Water Resour. Res., 56 (4) (2020), Article 024957, 10.1029/2019wr024957 Google Scholar Gonzalez et al., 2023 Gonzalez, F. T, M.J. Pavek, Z.J. Holden, R. Garza Evaluating potato evapotranspiration and crop coefficients in the Columbia Basin of Washington state Agric. Water Manag., 286 (2023), Article 108371, 10.1016/j.agwat.2023.108371 Google Scholar Guo et al., 2023 J. Guo, Y. Liu, Q. Zou, L. Ye, S. Zhu, H. Zhang Study on optimization and combination strategy of multiple daily runoff prediction models coupled with physical mechanism and LSTM J. Hydrol., 624 (2023), Article 129969, 10.1016/j.jhydrol.2023.129969 View PDFView articleView in ScopusGoogle Scholar Han et al., 2023 K. Han, Y. Wang, H. Chen, X. Chen, J. Guo, Z. Liu, Y. Tang, A. Xiao, C. Xu, Y. Xu, Z. Yang, Y. Zhang, D. Tao A survey on vision transformer IEEE Trans. Pattern Anal. Mach. Intell., 45 (1) (2023), pp. 87-110, 10.1109/TPAMI.2022.3152247 View in ScopusGoogle Scholar Hao et al., 2020 T. Hao, J. Elith, J.J. Lahoz-Monfort, G. Guillera-Arroita Testing whether ensemble modelling is advantageous for maximising predictive performance of species distribution models Ecography, 43 (4) (2020), pp. 549-558, 10.1111/ecog.04890 View in ScopusGoogle Scholar Hargreaves and Samani, 1985 G.H. Hargreaves, Z.A. Samani Reference crop evapotranspiration from temperature Appl. Eng. Agric., 1 (2) (1985), pp. 96-99 Google Scholar He et al., 2017 R. He, Y. Jin, M. Kandelous, D. Zaccaria, B. Sanden, R. Snyder, J. Jiang, J. Hopmans Evapotranspiration estimate over an almond orchard using landsat satellite observations Remote Sens, 9 (5) (2017), p. 436, 10.3390/rs9050436 Google Scholar Hochreiter and Schmidhuber, 1997 S. Hochreiter, J. Schmidhuber Long short-term memory Neural Comput., 9 (8) (1997), pp. 1735-1780, 10.1162/neco.1997.9.8.1735 View in ScopusGoogle Scholar Hossein Kazemi et al., 2020 M. Hossein Kazemi, J. Shiri, P. Marti, A. Majnooni-Heris Assessing temporal data partitioning scenarios for estimating reference evapotranspiration with machine learning techniques in arid regions J. Hydrol., 590 (2020), Article 125252, 10.1016/j.jhydrol.2020.125252 View PDFView articleView in ScopusGoogle Scholar Hua et al., 2019 Y. Hua, Z. Zhao, R. Li, X. Chen, Z. Liu, H. Zhang Deep learning with long short-term memory for time series prediction IEEE Commun. Mag., 57 (6) (2019), pp. 114-119, 10.1109/mcom.2019.1800155 View in ScopusGoogle Scholar Jiang and Zhu, 2023 C. Jiang, Q. Zhu Evaluating the most significant input parameters for forecasting global solar radiation of different sequences based on Informer Appl. Energy, 348 (2023), Article 121544, 10.1016/j.apenergy.2023.121544 View PDFView articleView in ScopusGoogle Scholar Jiang et al., 2022 W. Jiang, S. Liu, H. Zhang, X. Sun, S.H. Wang, J. Zhao, J. Yan CNNG: a convolutional neural networks with gated recurrent units for autism spectrum disorder classification Front. Aging Neurosci., 14 (2022), Article 948704, 10.3389/fnagi.2022.948704 View in ScopusGoogle Scholar Joseph et al., 2023 L.P. Joseph, R.C. Deo, R. Prasad, S. Salcedo-Sanz, N. Raj, J. Soar Near real-time wind speed forecast model with bidirectional LSTM networks Renew. Energy, 204 (2023), pp. 39-58, 10.1016/j.renene.2022.12.123 View PDFView articleView in ScopusGoogle Scholar Kim et al., 2023 H.-J. Kim, S. Chandrasekara, H.-H. Kwon, C. Lima, T.-w Kim A novel multi-scale parameter estimation approach to the Hargreaves-Samani equation for estimation of Penman-Monteith reference evapotranspiration Agric. Water Manag., 275 (2023), Article 108038, 10.1016/j.agwat.2022.108038 View PDFView articleView in ScopusGoogle Scholar Lecun et al., 1998 Y. Lecun, L. Bottou, Y. Bengio, P. Haffner Gradient-based learning applied to document recognition Proc. IEEE Inst. Electr. Electron Eng., 86 (11) (1998), pp. 2278-2324, 10.1109/5.726791 Google Scholar Li et al., 2018 Y. Li, J. Zeng, S. Shan, X. Chen Occlusion aware facial expression recognition using CNN with attention mechanism IEEE Trans. Image Process (2018), pp. 2439-2450, 10.1109/TIP.2018.2886767 View in ScopusGoogle Scholar Lin et al., 2022 Y. Lin, K. Chen, X. Zhang, B. Tan, Q. Lu Forecasting crude oil futures prices using BiLSTM-Attention-CNN model with Wavelet transform Appl. Softw. Comput., 130 (2022), Article 109723, 10.1016/j.asoc.2022.109723 View PDFView articleView in ScopusGoogle Scholar Lin et al., 2020 Z. Lin, Z. Zhao, Z. Zhang, Z. Zhang, D. Cai Moment retrieval via cross-modal interaction networks with query reconstruction IEEE Trans. Image Process (2020), pp. 3750-3762, 10.1109/TIP.2020.2965987 View in ScopusGoogle Scholar Liu et al., 2009 X. Liu, X. Mei, Y. Li, Q. Wang, Y. Zhang, J.R. Porter Variation in reference crop evapotranspiration caused by the Ångström–Prescott coefficient: locally calibrated versus the FAO recommended Agric. Water Manag., 96 (7) (2009), pp. 1137-1145, 10.1016/j.agwat.2009.03.005 View PDFView articleView in ScopusGoogle Scholar Liu et al., 2017 X. Liu, C. Xu, X. Zhong, Y. Li, X. Yuan, J. Cao Comparison of 16 models for reference crop evapotranspiration against weighing lysimeter measurement Agric. Water Manag., 184 (2017), pp. 145-155, 10.1016/j.agwat.2017.01.017 View PDFView articleView in ScopusGoogle Scholar Longjam et al., 2023 T. Longjam, D.R. Kisku, P. Gupta Writer independent handwritten signature verification on multi-scripted signatures using hybrid CNN-BiLSTM: a novel approach Expert Syst. Appl., 214 (2023), Article 119111, 10.1016/j.eswa.2022.119111 View PDFView articleView in ScopusGoogle Scholar Lu et al., 2023 Y. Lu, T. Li, H. Hu, X. Zeng Short-term prediction of reference crop evapotranspiration based on machine learning with different decomposition methods in arid areas of China Agric. Water Manag., 279 (2023), Article 108175, 10.1016/j.agwat.2023.108175 View PDFView articleView in ScopusGoogle Scholar Ma et al., 2023 Y. Ma, S. Sun, C. Li, J. Zhao, Z. Li, C. Jia Estimation of regional actual evapotranspiration based on the improved SEBAL model J. Hydrol., 619 (2023), Article 129283, 10.1016/j.jhydrol.2023.129283 View PDFView articleView in ScopusGoogle Scholar Maier et al., 2023 H.R. Maier, F. Zheng, H. Gupta, J. Chen, J. Mai, D. Savic, R. Loritz On how data are partitioned in model development and evaluation: confronting the elephant in the room to enhance model generalization Environ. Modell. Softw., 167 (2023), Article 105779, 10.1016/j.envsoft.2023.105779 View PDFView articleView in ScopusGoogle Scholar Mandal and Chanda, 2023 N. Mandal, K. Chanda Performance of machine learning algorithms for multi-step ahead prediction of reference evapotranspiration across various agro-climatic zones and cropping seasons J. Hydrol., 620 (2023), Article 129418, 10.1016/j.jhydrol.2023.129418 View PDFView articleView in ScopusGoogle Scholar Maroufpoor et al., 2020 S. Maroufpoor, O. Bozorg Haddad, E. Maroufpoor Reference evapotranspiration estimating based on optimal input combination and hybrid artificial intelligent model: hybridization of artificial neural network with grey wolf optimizer algorithm J. Hydrol., 588 (2020), Article 125060, 10.1016/j.jhydrol.2020.125060 View PDFView articleView in ScopusGoogle Scholar Martí and Gasque, 2010 P. Martí, M. Gasque Ancillary data supply strategies for improvement of temperature-based ETo ANN models Agric. Water Manag., 97 (7) (2010), pp. 939-955, 10.1016/j.agwat.2010.02.002 View PDFView articleView in ScopusGoogle Scholar Martí et al., 2015 P. Martí, P. González-Altozano, R. López-Urrea, L.A. Mancha, J. Shiri Modeling reference evapotranspiration with calculated targets. Assessment and implications Agric. Water Manag., 149 (2015), pp. 81-90, 10.1016/j.agwat.2014.10.028 View PDFView articleView in ScopusGoogle Scholar Mehdizadeh, 2018 S. Mehdizadeh Estimation of daily reference evapotranspiration (ETo) using artificial intelligence methods: offering a new approach for lagged ETo data-based modeling J. Hydrol., 559 (2018), pp. 794-812, 10.1016/j.jhydrol.2018.02.060 View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2017 S. Mehdizadeh, J. Behmanesh, K. Khalili Application of gene expression programming to predict daily dew point temperature Appl. Therm. Eng., 112 (2017), pp. 1097-1107, 10.1016/j.applthermaleng.2016.10.181 View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2019 S. Mehdizadeh, F. Fathian, M.J.S. Safari, J.F. Adamowski Comparative assessment of time series and artificial intelligence models to estimate monthly streamflow: a local and external data analysis approach J. Hydrol., 579 (2019), Article 124225, 10.1016/j.jhydrol.2019.124225 View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2020 S. Mehdizadeh, F. Ahmadi, A. Danandeh Mehr, M.J.S. Safari Drought modeling using classic time series and hybrid wavelet-gene expression programming models J. Hydrol., 587 (2020), Article 125017, 10.1016/j.jhydrol.2020.125017 View PDFView articleView in ScopusGoogle Scholar Mohammadi and Mehdizadeh, 2020 B. Mohammadi, S. Mehdizadeh Modeling daily reference evapotranspiration via a novel approach based on support vector regression coupled with whale optimization algorithm Agric. Water Manag., 237 (2020), Article 106145, 10.1016/j.agwat.2020.106145 View PDFView articleView in ScopusGoogle Scholar Mohammadi et al., 2020 B. Mohammadi, S. Mehdizadeh, F. Ahmadi, N.T.T. Lien, N.T.T. Linh, Q.B. Pham Developing hybrid time series and artificial intelligence models for estimating air temperatures Stoch. Environ. Res. Risk Assess., 35 (6) (2020), pp. 1189-1204, 10.1007/s00477-020-01898-7 Google Scholar Niu et al., 2023 J. Niu, S. Li, W. Xu, F. Dong, F. Huang, H. Qiu An efficient LSTM network for predicting the tailing and multi-peaked breakthrough curves J. Hydrol., 624 (2023), Article 129914, 10.1016/j.jhydrol.2023.129914 View PDFView articleView in ScopusGoogle Scholar Niu et al., 2021 Z. Niu, G. Zhong, H. Yu A review on the attention mechanism of deep learning Neurocomputing, 452 (2021), pp. 48-62, 10.1016/j.neucom.2021.03.091 View PDFView articleGoogle Scholar Pratama and Wang, 2019 M. Pratama, D. Wang Deep stacked stochastic configuration networks for lifelong learning of non-stationary data streams Inf. Sci., 495 (2019), pp. 150-174, 10.1016/j.ins.2019.04.055 View PDFView articleView in ScopusGoogle Scholar Priestley and Taylor, 1972 C.H.B. Priestley, R.J. Taylor On the assessment of surface heat flux and evaporation using large-scale parameters Mon. Weather. Rev., 100 (1972), pp. 81-92, 10.1175/1520-0493(1972)100 Google Scholar Qu et al., 2021 Z. Qu, J. Xu, Z. Wang, R. Chi, H. Liu Prediction of electricity generation from a combined cycle power plant based on a stacking ensemble and its hyperparameter optimization with a grid-search method Energy, 227 (2021), Article 120309, 10.1016/j.energy.2021.120309 View PDFView articleView in ScopusGoogle Scholar Refsgaard and Henriksen, 2004 J.C. Refsgaard, H.J. Henriksen Modelling guidelines–terminology and guiding principles Adv. Water Res., 27 (1) (2004), pp. 71-82, 10.1016/j.advwatres.2003.08.006 View PDFView articleView in ScopusGoogle Scholar Ren et al., 2021 Q. Ren, M. Li, H. Li, Y. Shen A novel deep learning prediction model for concrete dam displacements using interpretable mixed attention mechanism Adv. Eng. Inform., 50 (2021), Article 101407, 10.1016/j.aei.2021.101407 View PDFView articleView in ScopusGoogle Scholar Roberts et al., 2017 D.R. Roberts, V. Bahn, S. Ciuti, M.S. Boyce, J. Elith, G. Guillera-Arroita, S. Hauenstein Cross-validation strategies for data with temporal, spatial, hierarchical, or phylogenetic structure Ecography, 40 (8) (2017), pp. 913-929, 10.1111/ecog.02881 View in ScopusGoogle Scholar Romanenko, 1961 V.A. Romanenko Computation of the autumn soil moisture using a universal relationship for a large area Proc. Ukr. Hydrometeorol. Res. Inst., 3 (1961), pp. 12-25 Google Scholar Roy and Saha, 2022 J. Roy, S. Saha Ensemble hybrid machine learning methods for gully erosion susceptibility mapping: K-fold cross validation approach Artif. Intell., 3 (2022), pp. 28-45, 10.1016/j.aiig.2022.07.001 View PDFView articleView in ScopusGoogle Scholar Shao et al., 2013 C. Shao, K. Paynabar, T.H. Kim, J. Jin, S.J. Hu, J.P. Spicer, H. Wang, J.A. Abell Feature selection for manufacturing process monitoring using cross-validation J. Manuf. Syst., 32 (4) (2013), pp. 550-555, 10.1016/j.jmsy.2013.05.006 View PDFView articleView in ScopusGoogle Scholar Shiri et al., 2014 J. Shiri, A.A. Sadraddini, A.H. Nazemi, O. Kisi, G. Landeras, A. Fakheri Fard, P. Marti Generalizability of Gene Expression Programming-based approaches for estimating daily reference evapotranspiration in coastal stations of Iran J. Hydrol., 508 (2014), pp. 1-11, 10.1016/j.jhydrol.2013.10.034 View PDFView articleView in ScopusGoogle Scholar Shiri et al., 2015 J. Shiri, P. Marti, A.H. Nazemi, A. Fakheri Fard Local vs. external training of neuro-fuzzy and neural networks models for estimating reference evapotranspiration assessed through k-fold testing Hydrol. Res., 46 (1) (2015), pp. 72-88, 10.2166/nh.2013.112 View in ScopusGoogle Scholar Shu et al., 2022 Z. Shu, Y. Zhou, J. Zhang, J. Jin, L. Wang, N. Cui, G. Wang, J. Zhang, H. Wu, Z. Wu, X. Chen Parameter regionalization based on machine learning optimizes the estimation of reference evapotranspiration in data deficient area Sci. Total Environ., 844 (2022), Article 157034, 10.1016/j.scitotenv.2022.157034 View PDFView articleView in ScopusGoogle Scholar Song et al., 2011 Y. Song, C. Achberger, H.W. Linderholm Rain-season trends in precipitation and their effect in different climate regions of China during 1961–2008 Environ. Res. Lett., 6 (3) (2011), Article 034025, 10.1088/1748-9326/6/3/034025 View in ScopusGoogle Scholar Su et al., 2022 Q. Su, V.P. Singh, R. Karthikeyan Improved reference evapotranspiration methods for regional irrigation water demand estimation Agric. Water Manag., 274 (2022), Article 107979, 10.1016/j.agwat.2022.107979 View PDFView articleView in ScopusGoogle Scholar Tjoa and Guan, 2021 E. Tjoa, C. Guan A survey on explainable artificial intelligence (XAI): toward medical XAI IEEE Trans. Neural Netw. Learn Syst., 32 (11) (2021), pp. 4793-4813, 10.1109/TNNLS.2020.3027314 View in ScopusGoogle Scholar Valipour et al., 2023 M. Valipour, H. Khoshkam, S.M. Bateni, C. Jun, S.S. Band Hybrid machine learning and deep learning models for multi-step-ahead daily reference evapotranspiration forecasting in different climate regions across the contiguous United States Agric. Water Manag., 283 (2023), Article 108311, 10.1016/j.agwat.2023.108311 View PDFView articleView in ScopusGoogle Scholar Wan et al., 2023 A. Wan, Q. Chang, K. Al-Bukhaiti, J. He Short-term power load forecasting for combined heat and power using CNN-LSTM enhanced by attention mechanism Energy, 282 (2023), Article 128274, 10.1016/j.energy.2023.128274 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2019 J. Wang, P. Fu, R.X. Gao Machine vision intelligence for product defect inspection based on deep learning and Hough transform J. Manuf. Syst., 51 (2019), pp. 52-60, 10.1016/j.jmsy.2019.03.002 View PDFView articleGoogle Scholar Wang and Liu, 2006 Y. Wang, Q. Liu Comparison of Akaike information criterion (AIC) and Bayesian information criterion (BIC) in selection of stock–recruitment relationships Fish. Res., 77 (2) (2006), pp. 220-225, 10.1016/j.fishres.2005.08.011 View PDFView articleGoogle Scholar Xie et al., 2020 R. Xie, K. Hao, B. Huang, L. Chen, X. Cai Data-driven modeling based on two-stream λ gated recurrent unit network with soft sensor application IEEE Trans. Ind. Electron., 67 (8) (2020), pp. 7034-7043, 10.1109/tie.2019.2927197 View in ScopusGoogle Scholar Xing et al., 2022a L. Xing, N. Cui, L. Guo, T. Du, D. Gong, C. Zhan, L. Zhao, Z. Wu Estimating daily reference evapotranspiration using a novel hybrid deep learning model J. Hydrol., 614 (2022), Article 128567, 10.1016/j.jhydrol.2022.128567 View PDFView articleView in ScopusGoogle Scholar Xing et al., 2022b L. Xing, N. Cui, C. Liu, L. Zhao, L. Guo, T. Du, C. Zhan, Z. Wu, S. Wen, S. Jiang Estimation of daily apple tree transpiration in the Loess Plateau region of China using deep learning models Agric. Water Manag., 273 (2022), Article 107889, 10.1016/j.agwat.2022.107889 View PDFView articleView in ScopusGoogle Scholar Xing et al., 2023a L. Xing, N. Cui, L. Guo, D. Gong, S. Wen, Y. Zhang, M. Fan Predicting daily solar radiation using a novel hybrid long short-term memory network across four climate regions of China Comput. Electron. Agric., 212 (2023), 10.1016/j.compag.2023.108139 Google Scholar Xing et al., 2023b L. Xing, Y. Feng, N. Cui, L. Guo, T. Du, Z. Wu, Y. Zhang, S. Wen, D. Gong, L. Zhao Estimating reference evapotranspiration using Penman-Monteith equation integrated with optimized solar radiation models J. Hydrol., 620 (2023), Article 129407, 10.1016/j.jhydrol.2023.129407 View PDFView articleView in ScopusGoogle Scholar Xing et al., 2023c L. Xing, L. Zhao, N. Cui, C. Liu, L. Guo, T. Du, Z. Wu, D. Gong, S. Jiang Apple tree transpiration estimated using the Penman-Monteith model integrated with optimized jarvis model Agric. Water Manag., 276 (2023), Article 108061, 10.1016/j.agwat.2022.108061 View PDFView articleView in ScopusGoogle Scholar Xiong et al., 2023 J. Xiong, T. Peng, Z. Tao, C. Zhang, S. Song, M.S. Nazir A dual-scale deep learning model based on ELM-BiLSTM and improved reptile search algorithm for wind power prediction Energy, 266 (2023), Article 126419, 10.1016/j.energy.2022.126419 View PDFView articleView in ScopusGoogle Scholar Yan et al., 2021 S. Yan, L. Wu, J. Fan, F. Zhang, Y. Zou, Y. Wu A novel hybrid WOA-XGB model for estimating daily reference evapotranspiration using local and external meteorological data: applications in arid and humid regions of China Agric. Water Manag., 244 (2021), Article 106594, 10.1016/j.agwat.2020.106594 View PDFView articleView in ScopusGoogle Scholar Yan et al., 2023 X. Yan, N. Yang, R. Ao, A. Mohammadian, J. Liu, H. Cao, P. Yin Deep learning for daily potential evapotranspiration using a HS-LSTM approach Atmos. Res., 292 (2023), Article 106856, 10.1016/j.atmosres.2023.106856 View PDFView articleView in ScopusGoogle Scholar Yang et al., 2021a X. Yang, S. Feng, D. Wang, Y. Zhang Image-Text multimodal emotion classification via multi-view attentional network IEEE Trans. Multimed., 23 (2021), pp. 4014-4026, 10.1109/tmm.2020.3035277 View in ScopusGoogle Scholar Yang et al., 2021b Y. Yang, R. Chen, C. Han, Z. Liu Evaluation of 18 models for calculating potential evapotranspiration in different climatic zones of China Agric. Water Manag., 244 (2021), Article 106545, 10.1016/j.agwat.2020.106545 View PDFView articleView in ScopusGoogle Scholar Yao et al., 2023 Z. Yao, Z. Wang, D. Wang, J. Wu, L. Chen An ensemble CNN-LSTM and GRU adaptive weighting model based improved sparrow search algorithm for predicting runoff using historical meteorological and runoff data as input J. Hydrol., 625 (2023), Article 129977, 10.1016/j.jhydrol.2023.129977 View PDFView articleView in ScopusGoogle Scholar Yaseen et al., 2019 Z.M. Yaseen, S.O. Sulaiman, R.C. Deo, K.-W. Chau An enhanced extreme learning machine model for river flow forecasting: State-of-the-art, practical applications in water resource engineering area and future research direction J. Hydrol., 569 (2019), pp. 387-408, 10.1016/j.jhydrol.2018.11.069 View PDFView articleView in ScopusGoogle Scholar Yin et al., 2020 J. Yin, Z. Deng, A.V.M. Ines, J. Wu, E. Rasu Forecast of short-term daily reference evapotranspiration under limited meteorological variables using a hybrid bi-directional long short-term memory model (Bi-LSTM) Agric. Water Manag., 242 (2020), Article 106386, 10.1016/j.agwat.2020.106386 View PDFView articleView in ScopusGoogle Scholar Zha et al., 2022 W. Zha, Y. Liu, Y. Wan, R. Luo, D. Li, S. Yang, Y. Xu Forecasting monthly gas field production based on the CNN-LSTM model Energy, 260 (2022), Article 124889, 10.1016/j.energy.2022.124889 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2019 C. Zhang, P. Patras, H. Haddadi Deep learning in mobile and wireless networking: a survey IEEE Commun. Surv. Tutor., 21 (3) (2019), pp. 2224-2287, 10.1109/comst.2019.2904897 View in ScopusGoogle Scholar Zhang and Wang, 2023 Y.-M. Zhang, H. Wang Multi-head attention-based probabilistic CNN-BiLSTM for day-ahead wind speed forecasting Energy, 278 (2023), Article 127865, 10.1016/j.energy.2023.127865 View PDFView articleView in ScopusGoogle Scholar Zhou et al., 2022 D. Zhou, X. Zhuang, H. Zuo, J. Cai, X. Zhao, J. Xiang A model fusion strategy for identifying aircraft risk using CNN and Att-BiLSTM Reliab. Eng. Syst. Saf., 228 (2022), Article 108750, 10.1016/j.ress.2022.108750 View PDFView articleView in ScopusGoogle Scholar Zhu and Xie, 2023 M. Zhu, J. Xie Investigation of nearby monitoring station for hourly PM2.5 forecasting using parallel multi-input 1D-CNN-biLSTM Expert Syst. Appl., 211 (2023), Article 118707, 10.1016/j.eswa.2022.118707 View PDFView articleView in ScopusGoogle Scholar Cited by (2) Coupling the remote sensing data-enhanced SWAT model with the bidirectional long short-term memory model to improve daily streamflow simulations 2024, Journal of Hydrology Show abstract Optimizing deficit drip irrigation to improve yield,quality, and water productivity of apple in Loess Plateau of China 2024, Agricultural Water Management Show abstract © 2024 The Author(s). Published by Elsevier B.V. Recommended articles Zero discharge: An optimized strategy to improve the hydric deficit in the Mediterranean area by pumped hydro storage. Case study of Alicante, Spain Agricultural Water Management, Volume 292, 2024, Article 108684 Modesto Pérez-Sánchez, …, Helena M. Ramos View PDF Response of winter wheat to different drought levels based on Google Earth Engine in the Huang-Huai-Hai Region, China Agricultural Water Management, Volume 292, 2024, Article 108662 Junfang Zhao, …, Yuping Ma View PDF Dynamics of soil water and nitrate within the vadose zone simulated by the WHCNS model calibrated based on deep learning Agricultural Water Management, Volume 292, 2024, Article 108653 Qinghua Guo, Wenliang Wu View PDF Show 3 more articles Article Metrics Captures Readers: 2 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 6:
- APA Citation: None
  Main Objective: Water stress identification of winter wheat crop with state-of-the-art AI techniques and high-resolution thermal-RGB imagery.
  Study Location: Unspecified
  Data Sources: ['Canopy temperature (Tc)', 'Relative water content (RWC)', 'Soil moisture content (SMC)', 'Relative humidity (RH)']
  Technologies Used: ['AlexNet', 'GoogLeNet', 'Inception V3', 'MobileNet V2', 'ResNet50']
  Key Findings: ['ResNet50 outperformed other models showing a discriminant accuracy of 96.9% with RGB and 98.4% with thermal imagery inputs.', 'Overall, classiﬁcation accuracy was higher for thermal imagery compared to RGB imagery inputs.', 'The DL-LSTM had the highest discriminant accuracy of 96.7% and less error among the function approximation-based models for classifying stress/non-stress.']
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: {'extract_1': 'In the given context, strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation from crop water stress monitoring have been defined as follows:\n\n1. Preprocessing: Removing outliers and normalizing data to improve data quality and make it suitable for model training.\n2. Outlier detection: Identifying and removing extreme or anomalous data points that can negatively affect model performance.', 'extract_2': 'Real-time generation and automated application of actionable irrigation insights, and the importance of interpretability and explainability in ML models.', 'relevance_score': 0.9}
  Relevance Score: 0.999999996225992
  Inline Citation: None
  Explanation: In the given context, strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation from crop water stress monitoring have been defined as follows:

1. Preprocessing: Removing outliers and normalizing data to improve data quality and make it suitable for model training.
2. Outlier detection: Identifying and removing extreme or anomalous data points that can negatively affect model performance.

 Full Text: >
Citation: Chandel, N.S.; Rajwade,
Y.A.; Dubey, K.; Chandel, A.K.;
Subeesh, A.; Tiwari, M.K. Water
Stress Identiﬁcation of Winter Wheat
Crop with State-of-the-Art AI
Techniques and High-Resolution
Thermal-RGB Imagery. Plants 2022,
11, 3344. https://doi.org/10.3390/
plants11233344
Academic Editors: John T. Hancock
and Mikihisa Umehara
Received: 8 October 2022
Accepted: 27 November 2022
Published: 2 December 2022
Publisher’s Note: MDPI stays neutral
with regard to jurisdictional claims in
published maps and institutional afﬁl-
iations.
Copyright:
© 2022 by the authors.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed
under
the
terms
and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
plants
Article
Water Stress Identiﬁcation of Winter Wheat Crop with
State-of-the-Art AI Techniques and High-Resolution
Thermal-RGB Imagery
Narendra S. Chandel 1, Yogesh A. Rajwade 2,*
, Kumkum Dubey 1, Abhilash K. Chandel 3,4,*
, A. Subeesh 1
and Mukesh K. Tiwari 5
1
Agricultural Mechanization Division, ICAR—Central Institute of Agricultural Engineering,
Bhopal 462038, MP, India
2
Irrigation and Drainage Engineering Division, ICAR—Central Institute of Agricultural Engineering,
Bhopal 462038, MP, India
3
Department of Biological Systems Engineering, Virginia Tech Tidewater AREC, Suffolk, VA 23437, USA
4
Center for Advanced Innovation in Agriculture (CAIA), Virginia Tech, Blacksburg, VA 24061, USA
5
College of Agricultural Engineering and Technology, Anand Agricultural University, Godhra 389001, GJ, India
*
Correspondence: yogesh.rajwade@icar.gov.in (Y.A.R.); abhilashchandel@vt.edu (A.K.C.)
Abstract: Timely crop water stress detection can help precision irrigation management and minimize
yield loss. A two-year study was conducted on non-invasive winter wheat water stress monitoring
using state-of-the-art computer vision and thermal-RGB imagery inputs. Field treatment plots were
irrigated using two irrigation systems (ﬂood and sprinkler) at four rates (100, 75, 50, and 25% of crop
evapotranspiration [ETc]). A total of 3200 images under different treatments were captured at critical
growth stages, that is, 20, 35, 70, 95, and 108 days after sowing using a custom-developed thermal-
RGB imaging system. Crop and soil response measurements of canopy temperature (Tc), relative
water content (RWC), soil moisture content (SMC), and relative humidity (RH) were signiﬁcantly
affected by the irrigation treatments showing the lowest Tc (22.5 ± 2 ◦C), and highest RWC (90%)
and SMC (25.7 ± 2.2%) for 100% ETc, and highest Tc (28 ± 3 ◦C), and lowest RWC (74%) and SMC
(20.5 ± 3.1%) for 25% ETc. The RGB and thermal imagery were then used as inputs to feature-
extraction-based deep learning models (AlexNet, GoogLeNet, Inception V3, MobileNet V2, ResNet50)
while, RWC, SMC, Tc, and RH were the inputs to function-approximation models (Artiﬁcial Neural
Network (ANN), Kernel Nearest Neighbor (KNN), Logistic Regression (LR), Support Vector Machine
(SVM) and Long Short-Term Memory (DL-LSTM)) to classify stressed/non-stressed crops. Among
the feature extraction-based models, ResNet50 outperformed other models showing a discriminant
accuracy of 96.9% with RGB and 98.4% with thermal imagery inputs. Overall, classiﬁcation accuracy
was higher for thermal imagery compared to RGB imagery inputs. The DL-LSTM had the highest
discriminant accuracy of 96.7% and less error among the function approximation-based models for
classifying stress/non-stress. The study suggests that computer vision coupled with thermal-RGB
imagery can be instrumental in high-throughput mitigation and management of crop water stress.
Keywords: winter wheat; crop water stress; canopy temperature; computer vision; irrigation
management
1. Introduction
Water stress forces leaf stomata closure, which reduces transpiration and increases
canopy temperature (Tc) [1]. Timely estimation of those stressors may not only help preci-
sion irrigation management but also minimize yield losses [2]. The penalty gap between
actual and potential yield will widen further as a result of climate change that projects
a decline in rainfall frequency, and rising ambient temperatures [3]. Water stress is typ-
ically assessed using xylem water potentials [4], canopy thermometry [5], and stomatal
Plants 2022, 11, 3344. https://doi.org/10.3390/plants11233344
https://www.mdpi.com/journal/plants
Plants 2022, 11, 3344
2 of 21
conductance measurements [6]. However, these methods are often invasive and tend
to have limited sampling accuracy due to low throughput or point data acquisitions [7].
Non-invasive proximal or remote sensing techniques have emerged as high throughput
alternatives for monitoring crop water stress through color features, reﬂectance, and ther-
mal emissivity of the vegetable, fruit, and specialty crops [8–10]. However, monitoring
crop water content using visible-range RGB imaging not only requires speciﬁc leaf ori-
entation relative to the camera but also pre-deﬁned illumination conditions. This limits
the applicability of RGB imaging to determine water content in ﬁeld conditions. Using
scanner-type imaging devices could be a cost and time-effective alternative [11]. Unlike
thermometry, Tc from thermal infrared imagery reﬂects upon the entire canopy emissivity
proﬁle, which is directly proportional to the canopy water content [9]. Thermal imagery
(8000–14,000 nm) also outperforms color RGB imagery (400–700 nm), and reﬂectance char-
acteristics in terms of robustness to characterize crop water stress [8,9]. Nonetheless, the
adaptability of thermal imaging in agricultural production management is still at a nascent
stage and is consistently evolving to maintain imaging quality against drastic variations
in relative humidity and wind speeds. Thermal imaging cameras are also relatively more
expensive than simple-to-operate RGB cameras. It is for these reasons; thermal imaging
is still limitedly adopted as a golden standard for crop stress mapping. Above all, long-
wave infrared wavelengths (thermal imaging) have a higher penetrating capability over
visible-range wavelengths, making them more reliable and sensitive to crop water content
variations. Thermal imaging is therefore a better alternative for precision irrigation man-
agement unlike RGB imaging or using standard crop coefﬁcients coupled with reference
evapotranspiration [8,9].
RGB imagery has been used to assess crop water stress using different deep learning
(DL) and machine learning (ML) techniques [10,12,13]. ML techniques derive unique
features from input and output datasets, which could be used for discrimination between
different object types or classes. ML techniques such as Naïve Bayes, artiﬁcial neural
networks (ANNs), support vector machine (SVM), and random forests (RFs) have been
widely used with RGB images for weed detection, biotic and abiotic stress identiﬁcation
and/or classiﬁcation, yield predictions, and other crop phenotyping applications [14,15].
Thermal imagery has also been used with RFs and decision trees for crop water status
monitoring in the vineyard and automated irrigation scheduling [16]. However, there are
several limitations associated with ML techniques. The output quality is highly dependent
on input data quality, the presence of noise and outliers, and other unaccounted biases
that have been reported to signiﬁcantly affect the model performance. Furthermore, ML
techniques also require skilled operators [17] for deﬁning input features that may also often
affect the model performances through unintentional subjectivity and bias [10,12].
DL has emerged as an advanced vision-based learning technique that enables au-
tomated feature extraction without human dependencies unlike ML [18]. Pertinent to
agricultural applications, crop phenological stages have been detected using a deep con-
volution neural network (DCNN) trained on RGB imagery [19,20]. Similarly, different DL
techniques (AlexNet, GoogLeNet, and Inception V3) have also been used to classify non-
stressed and water-stressed soybean, maize, and okra crops with digital RGB images [10].
Long Short Term Memory (LSTM) is a novel DL approach (DL-LSTM) that has been used
for different ﬁeld applications like time series forecasting of wheat yield and productiv-
ity [21], irrigation requirement [22], predicting agricultural product sale volumes based
on seasonal and historical data [23], and identiﬁcation and classiﬁcation of weeds [24].
Most of the image processing studies have used RGB images (or visible range imagery) to
classify crop water stress [25,26]. Thermal imagery has been reported to be more robust
for crop water stress characterization compared to RGB or multispectral imagery [27,28].
This is majorly due to the fact that the canopy emissivity can be highly sensitive to water
content [8,9,29,30].
So far, crop water stress characterization has been carried out through traditional
and destructive methods that often have restricted commercial applicability. Moreover,
Plants 2022, 11, 3344
3 of 21
these techniques have been limitedly explored using robust computer-vision techniques
(ML or DL models) for thermal infrared imagery inputs. Small unmanned aerial system
(UAS)-based thermal and multispectral remote sensing is also being explored for high
throughput crop water stress phenotyping. However, the frequency of data acquisition
is limited to once or a few times a day and atmospheric interferences including weather
conditions may severely impact the quality of thermal imaging. Additionally, onboard
data processing potential for complex and robust algorithms is still limited for small UASs.
Contrarily, proximal thermal imaging is subjected to the least atmospheric interference
and imaging frequency constraints. These systems can continuously collect data at critical
growth stages and also offer ﬂexibility for custom modiﬁcation to implement onboard edge
processing algorithms for real-time decision support and management actuation. On the
cost side, thermal and RGB imaging sensors and the UASs are still far more expensive than
the proximal imaging systems, which can be custom-assembled using miniature sensing
modules. However, such miniature sensing modules neither offer sufﬁcient resolution nor
desired image quality when integrated with UASs.
Obtaining robust data handling and the analytical pipeline is the major obstacle to
deriving real-time decision support for crop management but is achievable using custom-
assembled edge devices. This study is a step toward alleviating those obstacles and
focuses on the evaluation of non-invasive and cost-effective thermal-RGB imaging with
robust ML and DL models for stress characterization in winter wheat crops. This could
be critical from a precision irrigation scheduling and management perspective and may
potentially have high grower adaptability. Speciﬁc objectives for this two-year study were
to (a) non-invasively assess the crop responses to two irrigation systems and four deﬁcit
irrigation treatments, and (b) identify the water-stressed and non-stressed crops by feature
extraction using thermal-RGB imagery and function approximation approaches using crop
physiological parameters and ambient weather inputs.
2. Materials and Methods
2.1. Experiment Design
Winter wheat (Triticum aestivum L., cv. HI 1544) was planted (November to April,
2019–2020, and 2020–2021) in the research farm (77.24◦ E, 23.18◦ N) of the Central Institute
of Agricultural Engineering (CIAE), ICAR Bhopal, India (Figure 1). The meteorological
data are being recorded at the institute observatory since 1985. According to Koppen’s
classiﬁcation (1934), Bhopal is a Mediterranean climatic zone with an average annual
rainfall of about 1127 mm. The soil type is heavy clay (Vertisols) with clay content over 50%
and moderate fertility with negligible salinity. Soil structure is sub-angular blocky with a
ﬁeld capacity of 29.5–32% (db) and wilting point of 18-19.5% (db). The average inﬁltration
and percolation rates of the soil are 10–12 mm day−1 and 6.3–7.0%, respectively. The plots
were irrigated using ﬂood and sprinkler systems at four treatment rates: 100, 75, 50, and
25% of full crop evapotranspiration (ETc). Micro sprinklers of 120 lph discharge capacity
(Make: Netaﬁm) were installed at 3.5 m spacing. The reference crop evapotranspiration was
calculated using weather data with the FAO56 Penman–Montieth method and standard
non-stressed crop coefﬁcient [31]. The seasonal ETc of wheat during the ﬁrst and second
years of growth was 380 mm and 345 mm, respectively. The application efﬁciencies of
0.65 for ﬂood irrigation and 0.90 for sprinkler irrigation were used as determined from
the experiment trials on the same site using the measurements of water applied and the
water retained in the crop root zone. A total of six irrigation cycles were implemented for
100% ETc treatment (non-stressed) at sowing, crown root initiation (CRI), tillering, booting,
ﬂowering, and grain ﬁlling stages. One to three irrigation cycles were implemented for
deﬁcit treatments (75, 50, and 25% of ETc) at jointing, booting, and ﬂowering stages.
Plants 2022, 11, 3344
4 of 21
Plants 2022, 11, x FOR PEER REVIEW 
4 of 22 
 
 
crown root initiation (CRI), tillering, booting, flowering, and grain filling stages. One to 
three irrigation cycles were implemented for deficit treatments (75, 50, and 25% of ETc) at 
jointing, booting, and flowering stages. 
 
Figure 1. Experimental layout of the winter wheat crop irrigated at different rates using sprinkler 
and flood irrigation systems [32]. R—Replicates. Layout is prepared over google map. 
2.2. Data Collection 
RGB and thermal imagery were synchronously captured using a multifunctional 
custom integrated thermal-RGB imaging system. The system has a single board com-
puter (B+, Raspberry Pi foundation), a thermal imaging module (8000–14,000 nm, HTPA, 
Heimann, Pixel resolution: 80 × 64, Horizontal and vertical FOV: 120° × 90°), an RGB 
imaging module (400–700 nm, Raspberry Pi V2, Sony IMX219, Raspberry Pi foundation, 
Pixel resolution: 3280 × 2464, HFOV: 62.2°, VFOV: 48.8°), a GPS receiver module (NEO 
6M V2, Adafruit) for image geotagging, a capacitive touchscreen (LCD 800 × 400 mm, 
Robokit), a keypad (Robokits), and a power source (20,000 mAh, 5V/2A, MI power bank). 
The computer used the NOOBS operating system with module-pertinent libraries for 
different operations. Imagery data were collected at critical crop growth stages in the 
2019 and 2020 growing seasons (five times in each season). Ground truth plant biophys-
ical and soil parameters were also measured synchronously. 
2.2.1. Imagery Data 
The developed imaging system was placed 1 m from the crop and titled at 45° from 
the horizontal. A total of 3200 images (400 per treatment) were acquired (1600 RGB and 
1600 thermal) in two seasons at Crown root initiation (20 days after sowing (DAS)), till-
ering (35 DAS) (Figure 2), jointing (70 DAS), flowering and milking (95 DAS), and dough 
(108 DAS) stages, between 11 am to 1 pm on clear sky days. Sample masked thermal and 
RGB canopy images for model training are shown in Figure 2.  
Figure 1. Experimental layout of the winter wheat crop irrigated at different rates using sprinkler
and ﬂood irrigation systems [32]. R—Replicates. Layout is prepared over google map.
2.2. Data Collection
RGB and thermal imagery were synchronously captured using a multifunctional cus-
tom integrated thermal-RGB imaging system. The system has a single board computer (B+,
Raspberry Pi foundation), a thermal imaging module (8000–14,000 nm, HTPA, Heimann,
Pixel resolution: 80 × 64, Horizontal and vertical FOV: 120◦ × 90◦), an RGB imaging mod-
ule (400–700 nm, Raspberry Pi V2, Sony IMX219, Raspberry Pi foundation, Pixel resolution:
3280 × 2464, HFOV: 62.2◦, VFOV: 48.8◦), a GPS receiver module (NEO 6M V2, Adafruit)
for image geotagging, a capacitive touchscreen (LCD 800 × 400 mm, Robokit), a keypad
(Robokits), and a power source (20,000 mAh, 5V/2A, MI power bank). The computer
used the NOOBS operating system with module-pertinent libraries for different operations.
Imagery data were collected at critical crop growth stages in the 2019 and 2020 growing
seasons (ﬁve times in each season). Ground truth plant biophysical and soil parameters
were also measured synchronously.
2.2.1. Imagery Data
The developed imaging system was placed 1 m from the crop and titled at 45◦ from
the horizontal. A total of 3200 images (400 per treatment) were acquired (1600 RGB
and 1600 thermal) in two seasons at Crown root initiation (20 days after sowing (DAS)),
tillering (35 DAS) (Figure 2), jointing (70 DAS), ﬂowering and milking (95 DAS), and dough
(108 DAS) stages, between 11 am to 1 pm on clear sky days. Sample masked thermal and
RGB canopy images for model training are shown in Figure 2.
2.2.2. Weather and Ground Truth Data
Weather data were acquired for the imaging days from a standard station (Indian
Meteorological Department, Pune, India) installed at 300 m from the study site. The
parameters included, pan evaporation (mm/day), rainfall (mm), maximum and minimum
air temperature (◦C), relative humidity (RH, %), and wind velocity (m/s). The ambient
and soil ground truth data of air temperature (Ta), RH, and soil moisture content (SMC)
were collected for each treatment plot during the imaging campaigns each year. The Ta
and RH parameters were recorded using the DHT22 module (Adafruit, New York, NY,
Plants 2022, 11, 3344
5 of 21
USA). SMC was monitored in the root zone depth (0–150 mm typical to wheat crops
grown in the experimental site, soil type: vertisols) using a soil moisture meter of 200 mm
sensing probe length (ICT, MPM-160-B, Armidale, Australia). The probe was inserted at
ﬁve different locations in each replication for measurement of soil moisture, acquiring 15
data points of soil moisture content per measurement. The relative water content (RWC)
of leaves was calculated as the crop ground truth data [33]. For this, 10 matured and fully
expanded leaves from each sample plot were collected and fresh weight was recorded on
each sampling date, immediately following the imagery acquisition. Collected samples
were then oven-dried at 70 ◦C, dry weight was recorded, and RWC was calculated. A
total of 30 samples were collected per treatment per campaign amounting to a total of
150 samples per treatment in each year for RWC calculations. End-season yield was also
recorded from 2 × 2 m areas from three plots in each replication, making nine sample
points (36 m2 area) per treatment to characterize the effects of crop water stress.
Plants 2022, 11, x FOR PEER REVIEW 
5 of 22 
 
 
Figure 2. Sample raw and canopy masked RGB images ((a) non-stressed; (b) stressed) and thermal 
images ((c) non-stressed, (d) stressed) captured 35 days after sowing. Pseudo-color thermal images 
here are only for presentation and were scaled between 10 °C (RGB: [25, 25, 113]) and 80 °C (RGB: 
[235, 246, 255]). 
2.2.2. Weather and Ground Truth Data 
Weather data were acquired for the imaging days from a standard station (Indian 
Meteorological Department, Pune, India) installed at 300 m from the study site. The pa-
rameters included, pan evaporation (mm/day), rainfall (mm), maximum and minimum 
air temperature (°C), relative humidity (RH, %), and wind velocity (m/s). The ambient 
and soil ground truth data of air temperature (Ta), RH, and soil moisture content (SMC) 
were collected for each treatment plot during the imaging campaigns each year. The Ta 
and RH parameters were recorded using the DHT22 module (Adafruit, New York, NY, 
USA). SMC was monitored in the root zone depth (0–150 mm typical to wheat crops 
grown in the experimental site, soil type: vertisols) using a soil moisture meter of 200 mm 
sensing probe length (ICT, MPM-160-B, Armidale, Australia). The probe was inserted at 
five different locations in each replication for measurement of soil moisture, acquiring 15 
data points of soil moisture content per measurement. The relative water content (RWC) 
of leaves was calculated as the crop ground truth data [33]. For this, 10 matured and fully 
expanded leaves from each sample plot were collected and fresh weight was recorded on 
each sampling date, immediately following the imagery acquisition. Collected samples 
were then oven-dried at 70 °C, dry weight was recorded, and RWC was calculated. A 
total of 30 samples were collected per treatment per campaign amounting to a total of 150 
samples per treatment in each year for RWC calculations. End-season yield was also 
recorded from 2 × 2 m areas from three plots in each replication, making nine sample 
points (36 m2 area) per treatment to characterize the effects of crop water stress. 
Figure 2. Sample raw and canopy masked RGB images ((a) non-stressed; (b) stressed) and thermal
images ((c) non-stressed, (d) stressed) captured 35 days after sowing. Pseudo-color thermal images
here are only for presentation and were scaled between 10 ◦C (RGB: [25, 25, 113]) and 80 ◦C (RGB:
[235, 246, 255]).
2.2.3. Statistical Analysis
The impact of irrigation type (ﬂood and sprinkler), rate (100, 75, 50, and 25% ETc),
and interaction of both on crop biophysical parameters were statistically evaluated using a
one-way analysis of variance at a 5% level of signiﬁcance [34].
2.3. Crop Water Stress Classiﬁcation
Two different approaches (1) feature extraction-based (DL models: AlexNet, GoogLeNet,
Inception V3, MobileNet V2, and ResNet50) and (2) function approximation-based ML
models (Artiﬁcial neural network (ANN), K-nearest neighbors (KNN), Support vector
machine (SVM), and Logistic regression (LR)); and a DL model (DL-LSTM) were adopted
for crop water stress classiﬁcation. Feature extraction-based models were trained on thermal
as well as RGB imagery. Function approximation-based models were trained on ambient
weather and soil parameters, and Tc inputs from thermal imagery.
Deep CNNs typically have complex architecture and some may require signiﬁcant
computational resources. All CNN model training and validation processes were performed
on a desktop computer (Intel Core I7 Processor with base frequency 2.60 GHz, 16 GB RAM,
6 GB NVIDIA GeForce GTX 1660 Ti GPU) with Windows 10 operating system (64 bits).
Plants 2022, 11, 3344
6 of 21
CNN models were developed in MATLAB 2019b using the deep learning and machine
learning toolbox. All the models are detailed in the following sub-sections.
2.3.1. Feature Extraction-Based Approaches
Five DL models were selected as the feature extraction-based approaches (1) AlexNet;
(2) GoogLeNet; (3) Inception V3; (4) MobileNet V2; and (5) ResNet50. These models were se-
lected for their extraordinary capabilities of automated feature extraction, easy and efﬁcient
training of the raw images with optimum computation resources, and their transferability
to edge computation devices [10,17]. The selected models ranged from the simplest architec-
ture (AlexNet and MobileNet V2) to the most complex architecture (GoogLeNet, Inception
V3, and ResNet50) in order to evaluate their robustness and efﬁciencies for crop water stress
prediction. Successful application of these models has been reported with accuracies up to
100% for crop abiotic and biotic stress classiﬁcation in recent studies [35–37]. Standardized
architectures were used in the models for performance comparisons (Table 1).
Table 1. Architecture parameters in the feature extraction-based models for crop water stress classification.
Architecture Parameters
AlexNet
GoogLeNet
Inception V3
MobileNet V2
ResNet50
Input image size
227 × 227 × 3
224 × 224 × 3
299 × 299 × 3
224 × 224 × 3
224 × 224 × 3
No. of layers
25
141
316
154
177
Relu layer
7
57
95
35
49
Max Pooling layer
3
13
4
-
01
Convolutional layers
5
57
94
35
53
Dropout layer
2
1
-
-
-
Fully connected
3
1
1
1
1
Fully connected layer Function
FC8
Loss3 classiﬁer
Predictions
Logits
FC1000
Depth
8
22
48
53
50
Parameters
61 × 106
7 × 106
23.9 × 106
3.5 × 106
25.6 × 106
The DL-based classification includes steps of pre-trained model selection, data pre-
processing using morphological operators, data splitting, setting the training hyper-parameters,
model training, model tuning, cross-validation, evaluation, and model testing (Figure 3).
DL models were developed in MATLAB (version 2019a, Mathworks, Natick, Boston, MA,
USA) using libraries of AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50.
The convolutional kernels in AlexNet were extracted using the cost function optimized by
a stochastic gradient descent with momentum (Sgdm) algorithm. While GoogLeNet pro-
cesses and classiﬁes images by alternately factorizing the convolutions and regularization
layers. To train a GoogLeNet model, the model’s loss 3-classiﬁer, prob, and output layers
were replaced by fully connected, softmax and output class layers which connected with
other traditional layers. The inception V3 extracted (a) local features of the stressed crop by
using small convolutions and (b) high abstracted features with large convolutions. The last
three prediction layers in inception V3 were replaced by three new layers; fully connected,
softmax, and classiﬁcation output layer. These layers were interconnected with average
pooling and a fully connected layer of the pre-trained DL. MobileNet V2 and ResNet50 are
the very recently proposed DL models for classiﬁcation problems. MobileNet V2 requires
less computational power compared to conventional CNN. ResNet50 is a deep residual
network that uses the shortcut connections by reducing the convolutional layers and by
also solving the vanishing gradient issue typical to CNN. The residual modules in ResNet50
were used to connect different layers of CNN to improve the model performance [38].
Generalization can be poor for feature extraction-based models when the number of
epochs and batch sizes are more than the optimum [39]. This is because the model can
overlearn when trained on a speciﬁc dataset at large epochs and batch sizes, and may lose
its performance and generalization capability when trained on new datasets. Conversely,
the smaller epochs and bath sizes may lead to insufﬁcient learning and underﬁtting of the
model and hence may not perform as expected with the new datasets [40]. Therefore, to
Plants 2022, 11, 3344
7 of 21
maximize the model performance and minimize their overﬁtting, optimum hyperparameter
tuning is required. In this study, all the selected feature extraction-based models were
extensively tuned with learning rates, solvers, epochs, and batch sizes as detailed in Table 2.
Plants 2022, 11, x FOR PEER REVIEW 
7 of 22 
 
 
These layers were interconnected with average pooling and a fully connected layer of the 
pre-trained DL. MobileNet V2 and ResNet50 are the very recently proposed DL models 
for classification problems. MobileNet V2 requires less computational power compared 
to conventional CNN. ResNet50 is a deep residual network that uses the shortcut con-
nections by reducing the convolutional layers and by also solving the vanishing gradient 
issue typical to CNN. The residual modules in ResNet50 were used to connect different 
layers of CNN to improve the model performance [38].  
 
Figure 3. Data processing pipeline for stress prediction using selected deep learning and machine 
learning models. 
Generalization can be poor for feature extraction-based models when the number of 
epochs and batch sizes are more than the optimum [39]. This is because the model can 
overlearn when trained on a specific dataset at large epochs and batch sizes, and may 
lose its performance and generalization capability when trained on new datasets. Con-
versely, the smaller epochs and bath sizes may lead to insufficient learning and under-
fitting of the model and hence may not perform as expected with the new datasets [40]. 
Therefore, to maximize the model performance and minimize their overfitting, optimum 
hyperparameter tuning is required. In this study, all the selected feature extraction-based 
models were extensively tuned with learning rates, solvers, epochs, and batch sizes as 
detailed in Table 2. 
Table 2. Hyperparameter tuning considerations to reduce overfitting and performance enhance-
ment of the feature extraction-based models. 
Figure 3. Data processing pipeline for stress prediction using selected deep learning and machine
learning models.
Collected thermal and RGB images (1600 each) were labeled into stressed and non-
stressed classes by the domain experts based on the values of crop water stress indicators of
SMC, RWC, and Tc (Table 3). After this, 80% of the labeled dataset (separately for thermal
and RGB images) was used for DL model training based on features of object dimensions,
pixel intensity, pixel values (Tc), edges, etc. The remaining 20% of the labeled dataset was
used for model validations and testing.
Table 2. Hyperparameter tuning considerations to reduce overﬁtting and performance enhancement
of the feature extraction-based models.
Parameters
Value
Epoch
5, 10, and 20
Batchsize
5, 10, 15, and 20
Iterations
250 and 300
Solver
Sgdm and Adam
Learning rate
1 × 10−4, 2 × 10−4, and 3 × 10−4
Sgdm: stochastic gradient descent with momentum; Adam: adaptive moment estimation.
Plants 2022, 11, 3344
8 of 21
Table 3. Crop and auxiliary data ranges for stressed and non-stressed labeling.
Crop Label
Parameter
Output
References
Stressed
Canopy temperature (Tc): >23 ◦C &
Relative water content (RWC): <90% &
Soil moisture content (SMC): <25%
0
[41–46]
Non-Stressed
neither of the “stressed” conditions
1
2.3.2. Function Approximation-Based Approaches
Four ML models; ANN, KNN, LR, and SVM and a DL-based LSTM (DL-LSTM) were
selected as the function approximation approaches for crop water stress classiﬁcation. The
ML models were selected as those provide an opportunity to analyze numerous features
simultaneously unlike traditional methods. ANN is effective in learning complex nonlinear
functions and segmenting data based on the learned weights. The input layer had four
variables to extract features from 1600 samples while the output layer had one neuron to
calculate the probability of each class [47]. KNN classiﬁes a data point based on its distance
from the maximum number of training data points in the neighborhood. Typically, KNN
uses Euclidean, Minkowski, Manhattan, or Hamming distances out of which Minkowski
distance has been reported to be more reliable [48] and was therefore selected in the model.
LR classiﬁes data points into discrete classes based on probability using a sigmoid or logistic
function [49]. SVM shifts data points to a higher dimension using linear, non-linear, and
radial kernels to achieve linear separability [50] and then identiﬁes a hyperplane for the
highest possible distance between data points of the two classes. DL-LSTM uses a chain of
repeated modules comprising memory cells with a backpropagation algorithm to solve the
classiﬁcation problems. This model solves premature overﬁtting and vanishing gradient
issues by using the previously stored information in the memory cell. The information
is then used to generate the features during the training process to predict the output
class [51]. ML models automatically tuned their hyperparameter values by using Bayesian
optimization. The optimization minimizes the model loss based on the hyperparameter
combination and yields the best possible set of parameters. Further, the models were
trained and validated on these tuned hyperparameters. All function-approximation models
were deployed on crop environment (Ta, RH, and SMC) and temperature (Tc, from thermal
images) inputs for classiﬁcation into stressed and non-stressed through binary outputs (0
or 1, Table 3). The models (operating parameters in Table 4) were developed in Python 3.7
with Keras and TensorFlow libraries.
Table 4. Training parameters of function approximation-based classiﬁcation models.
Function Approximation Model
Parameters
Artiﬁcial Neural Network (ANN)
Hidden layers: 2
Neurons: 64, 32
Learning rate (alpha): 0.01
Activation functions: sigmoid
Batch size: 8
Number of epochs: 300
Optimizer: Adam
Loss function: binary cross entropy
Kernel Nearest Neighbour (KNN)
Number of Neighbors (K): 8
Distance Metric: minkowski
Weights: uniform
Algorithm: ball-tree
Logistic Regression (LR)
Penalty parameter: L1
Inverse of regularization parameter (C): 5
Maximum iteration: 100
Tolerance: 0.0001
Plants 2022, 11, 3344
9 of 21
Table 4. Cont.
Function Approximation Model
Parameters
Support Vector Machine (SVM)
Kernel Type (Kernel): RBF (Radial basis Function)
Penalty parameter (C): 100
bandwidth parameter (gamma): 0.001
Degree of the polynomial kernel: 3
Deep Learning-Long Short Term Memory (DL-LSTM)
Number of neurons: 180
Epochs: 200
Batch size: 10
Optimizer: Adam
Number of hidden layers: 2
Loss activation function: MAE (Mean absolute error)
Adam: adaptive moment estimation.
2.4. Model Performance Evaluation
The performance of both feature extraction and function approximation-based models
was evaluated through accuracy (A), sensitivity (Se), speciﬁcity (Sp), precision (P), and F1
score parameters (Equations (1)–(5)). Accuracy is the correct prediction rate of non-stressed
and stressed crops, precision is the fraction of true positive (TS) or correctly predicted
stressed crop from an overall prediction of the stressed crop (PS), speciﬁcity is the true
negative (TN) or correctly predicted non-stressed crops from the actual non-stressed crops
(AN). Sensitivity represents a fraction of the correctly predicted stressed crops (TS) from the
actual stressed crops (AS) and the F1 score is the harmonic mean of precision and sensitivity.
The F1 score evaluates the accuracy of a binary classiﬁcation problem as in this study, which
aims to classify the crops into two classes (stressed and non-stressed). Often, the accuracy
estimate is affected by true negatives and therefore F1 score is highly used over accuracy to
seek a balance between the precision and recall (sensitivity) parameters and when there is
an uneven class distribution (a large number of actual negatives).
A = TS + TN
TT
(1)
Se = TS
AS
(2)
Sp = TN
AN
(3)
P = TS
PS
(4)
F1 =
2 ∗ TS
AS + PS
(5)
where TT is the total number of predictions. Stress/non-stress misclassiﬁcation was rep-
resented by type1 (TE1) (false positive) and type2 errors (TE2) (false negative). TE1 is the
number of actual stressed crops misclassiﬁed as non-stressed (row 1-column 2 of the confu-
sion matrix) while TE2 is the number of actual non-stressed crops misclassiﬁed as stressed
(row 2-column 1 of the confusion matrix).
3. Results
3.1. Plant Water Stress Indicators
The thermal imagery derived canopy temperatures (Tc (◦C)) under sprinkler irrigation
at 100, 75, 50 and 25% of ETc irrigation levels were 22.1 (2.0) (Mean, standard deviation
(SD)), 25.6 (1.6), 26.4 (2.2), and 27.9 ◦C (3.0 ◦C), respectively (Figure 4). While Tc for ﬂood
irrigation at the above irrigation levels were 23.2 (2.0), 25.9 (1.5), 26.8 (2.4), and 28.1 ◦C
(3.1 ◦C), respectively. Similarly, mean RWC (%) at selected sprinkler irrigation rates were
Plants 2022, 11, 3344
10 of 21
90.4 (2.7), 87.7 (4.2), 75.8 (9.4), and 74.2% (8.2%) while at corresponding irrigation levels in
ﬂood irrigation were 89.8 (2.7), 87.2 (4.3), 75.0 (9.4) and 73.9% (8.3%), respectively. The mean
SMCs (%) for respective sprinkler irrigation were 26.6 (2.3), 26.2 (2.7), 22.5 (3.3), and 21.1%
(3.0%) while those for respective ﬂood irrigation were 24.9 (2.0), 24.4 (2.5), 21.4 (3.0), and
20.4% (3.1%). When analyzed statistically, Tc, RWC, and SMC were signiﬁcantly affected
by the irrigation method (ﬂood and sprinkler), irrigation rate (100, 75, 50, and 25% ETc), as
well as their interaction (One-way ANOVA, p < 0.001). The RWC and SMC decreased with
the decrease in irrigation level, while the Tc increased. Based on the categories detailed in
Table 3, the mean Tc for the stressed crop was 26.6 ◦C (±2.6), and that for the non-stressed
crop was 21.2 ◦C (±1.4). The mean RWC for the non-stressed crop was 92.2% (±1.5) and
for the stressed crop was 78.9% (±9.2) while the mean SMC for the non-stressed crop was
27.1% (1.6) and for the stressed crop was 21.2% (±2.4).
3.2. Water Stress Prediction
3.2.1. Feature Extraction-Based Approaches
The performances of AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50
models for RGB and thermal imagery were tested for different combinations of epochs
and batch sizes (Table 5). The model training accuracies increased with the increase in
the number of epochs from 5 to 10 and over-ﬁtting was observed for all the models when
epochs increased to 20. Over different epochs, accuracy increased with the increase in
batch size from 5 to 20. For the batch size of 20 and 250 iterations, overﬁtting was observed
in Inception and ResNet50 with RGB imagery inputs and in AlexNet, GoogLeNet, and
ResNet50 with thermal imagery inputs (Table 5). Extensive hyperparameter tuning was
performed with parameters listed in Table 2 to minimize overﬁtting and maximize the
model accuracies. Post-tuning, the maximum training accuracies of 94.6%, 96.7%, and 95.6%
were observed for AlexNet, GoogLeNet, and MobileNet V2, respectively with RGB imagery
inputs at 10 epochs and batch size of 20 (Figure 5). While the Inception V3 and ResNet50
for RGB imagery inputs converged at 10 epochs, batch size of 15, and 300 iterations with
respective accuracies of 92.7% and 97.1% (Figure 5c,e). For the thermal imagery inputs, the
optimum hyperparameters were 10 epochs and a batch size of 15, which yielded maximum
accuracies of 96.4%, 97.2%, and 98.5% for AlexNet, GoogLeNet, and ResNet50, respectively.
Furthermore, 10 epochs and a batch size of 20 were found optimum for Inception V3
and MobileNet V2 models, and pertinent maximum accuracies were 98.0% and 95.3%,
respectively (Figure 6). During hyperparameter tuning, the model overﬁtting reduced
signiﬁcantly at 10 epochs without sacriﬁcing accuracy. The training accuracies fell below
50% for learning rates of 1 × 10−4 and 4 × 10−4 and went over 50% for the learning rate of
3 × 10−4. Moreover, the model overﬁtting was reduced when the solver was shifted from
Sgdm to Adam. All the models converged with training accuracies > 90% at the learning
rate of 3 × 10−4 and Adam as the solver (Figures 5 and 6).
Table 5. Training accuracies of feature extraction-based models to characterize wheat water stress
using RGB and thermal imagery inputs under different epoch and batch size combinations.
Accuracy (%)
Epochs
Batch Size
AlexNet
GoogLeNet
Inception V3
MobileNet V2
ResNet50
Feature Extraction-Based Approaches with RGB Imagery Inputs
5
5
90.4
95.2
91.9
95.1
96.3
5
10
89.4
94.3
90.5
93.0
92.7
5
15
92.3
94.6
90.4
92.3
93.5
5
20
92.6
95.0
90.8
92.7
94.6
10
5
93.8
95.5
92.2
93.1
95.8
10
10
92.7
95.7
92.4
94.2
95.1
10
15
93.4
95.9
92.7
94.4
97.1
10
20
94.6
96.7
93.6
95.6
97.2
20
5
95.3
97.2
93.8
94.4
92.3
Plants 2022, 11, 3344
11 of 21
Table 5. Cont.
Accuracy (%)
Epochs
Batch Size
AlexNet
GoogLeNet
Inception V3
MobileNet V2
ResNet50
Feature Extraction-Based Approaches with RGB Imagery Inputs
20
10
95.6
97.5
94.2
95.5
97.2
20
15
96.6 *
98.0
94.5
96.7 *
97.9 *
20
20
96.2
98.2 *
95.0 *
96.1
95.8
Feature extraction-based approaches with thermal imagery inputs
5
5
94.4
96.2
97.0
94.8
95.9
5
10
95.9
95.8
96.8
94.7
95.9
5
15
96.4
95.4
95.9
93.1
98.4
5
20
92.7
96.0
96.2
92.7
97.6
10
5
94.5
96.5
97.2
93.5
96.7
10
10
96.0
96.7
97.4
94.2
97.3
10
15
96.4
97.2
97.5
94.7
98.5
10
20
96.5
97.2
98.0
95.3
98.7
20
5
97.2
97.6
98.2
97.2
99.0
20
10
97.4
98.1
98.5
97.5
99.2
20
15
98.2 *
98.5 *
98.7 *
98.1 *
99.5 *
20
20
98.0
98.0
98.5
97.9
99.0
* Highest accuracy for the epoch and batch size combinations.
Plants 2022, 11, x FOR PEER REVIEW 
11 of 22 
 
 
Figure 4. Variations in (a) canopy temperature; (b) soil moisture content; (c) relative water content; 
and (d) grain yield from wheat plots irrigated at different rates. S and F represent sprinkler and 
flood irrigations, respectively and the numbers followed by these letters denote irrigation rates 
levels as % of full crop evapotranspiration (ETc). 
3.2. Water Stress Prediction 
3.2.1. Feature Extraction-Based Approaches 
The performances of AlexNet, GoogLeNet, Inception V3, MobileNet V2, and Res-
Net50 models for RGB and thermal imagery were tested for different combinations of 
epochs and batch sizes (Table 5) The model training accuracies increased with the in
Figure 4. Variations in (a) canopy temperature; (b) soil moisture content; (c) relative water content;
and (d) grain yield from wheat plots irrigated at different rates. S and F represent sprinkler and ﬂood
irrigations, respectively and the numbers followed by these letters denote irrigation rates levels as %
of full crop evapotranspiration (ETc).
Plants 2022, 11, 3344
12 of 21
 
 
higher for the models with thermal imagery inputs compared to those with RGB imagery 
inputs. The individual accuracy and errors for all the feature extraction-based models 
with validation datasets are shown in Figure 7. The mean errors were higher for the RGB 
imagery compared to the thermal imagery irrespective of the selected models.  
 
Figure 5. Accuracy and loss curves for (a) AlexNet; (b) GoogLeNet; (c) Inception V3; (d) MobileNet 
V2; and (e) ResNet50 models with RGB imagery inputs for crop water stress identification. 
Figure 5. Accuracy and loss curves for (a) AlexNet; (b) GoogLeNet; (c) Inception V3; (d) MobileNet
V2; and (e) ResNet50 models with RGB imagery inputs for crop water stress identiﬁcation.
The training time elapsed for AlexNet, GoogLeNet, Inception V3, MobileNet V2, and
ResNet50 was 76, 92, 609, 149, and 217 min with RGB imagery inputs, and 42, 88, 287,
134, 168 min with thermal imagery inputs, respectively. While the classiﬁcation of an
independent image using trained models into stressed/non-stressed class consumed less
than 5 s. The overall validation accuracies (combined for stressed and non-stressed classes)
for AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50 models were 93.4%,
95.9%, 92.5%, 94.4%, and 96.9%, respectively with RGB imagery inputs (Figure 7). The
highest precision (100%) and F1 score (96.6%) were observed for GoogLeNet and ResNet50,
respectively while maximum sensitivity was achieved for MobileNet V2 (Table 6). Pertinent
to thermal imagery inputs, overall validation accuracies (combined for stressed and non-
stressed classes) with AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50
models were 96.2%, 96.9%, 97.5%, 94.7%, and 98.4%, respectively. Alike RGB imagery,
ResNet50 for thermal imagery had the highest precision (96.7%), sensitivity (100%), and
F1 score (98.3%) (Table 6). Additionally, the accuracies were higher for the models with
thermal imagery inputs compared to those with RGB imagery inputs. The individual
accuracy and errors for all the feature extraction-based models with validation datasets
are shown in Figure 7. The mean errors were higher for the RGB imagery compared to the
thermal imagery irrespective of the selected models.
Plants 2022, 11, 3344
13 of 21
Plants 2022, 11, x FOR PEER REVIEW 
14 of 22 
 
 
 
Figure 6. Accuracy and loss curves for (a) AlexNet; (b) GoogLeNet; (c) Inception V3; (d) MobileNet 
V2; and (e) ResNet50 models with thermal imagery inputs for crop water stress identification. 
Table 6. Validation performance of feature extraction and function approximation models to 
characterize wheat water stress. 
Models 
Accuracy (%) 
Precision (%) 
Sensitivity (%) 
F1 Score (%) 
Feature Extraction-Based Approaches with only RGB Imagery Inputs 
AlexNet 
93.4 
91.4 
94.5 
92.2 
GoogLeNet 
95.9 
100 
91.1 
95.3 
Inception V3 
92.5 
94.4 
89.4 
91.8 
MobileNet V2 
94.4 
89.0 
100.0 
94.1 
ResNet50 
96.9 
95.9 
97.3 
96.6 
Feature extraction-based approaches with only thermal imagery inputs 
AlexNet 
96.2 
95.9 
95.9 
95.9 
GoogLeNet 
96.9 
96.6 
96.6 
96.6 
Inception V3 
97.5 
96.6 
98.0 
97.3 
MobileNet V2 
94.7 
94.0 
94.7 
94.3 
ResNet50 
98.4 
96.7 
100.0 
98.3 
Function approximation-based approaches (with RWC, SMC, Tc, and RH inputs) 
ANN 
93.5 
92.7 
92.7 
93.0 
KNN 
88.1 
90.2 
84.1 
86.9 
LR 
89.2 
95.1 
82.9 
88.6 
SVM 
91.4 
95.1 
86.7 
90.8 
DL-LSTM 
96.7 
96.0 
97.9 
97.0 
Figure 6. Accuracy and loss curves for (a) AlexNet; (b) GoogLeNet; (c) Inception V3; (d) MobileNet
V2; and (e) ResNet50 models with thermal imagery inputs for crop water stress identiﬁcation.
Table 6. Validation performance of feature extraction and function approximation models to charac-
terize wheat water stress.
Models
Accuracy (%)
Precision (%)
Sensitivity (%)
F1 Score (%)
Feature Extraction-Based Approaches with only RGB Imagery Inputs
AlexNet
93.4
91.4
94.5
92.2
GoogLeNet
95.9
100
91.1
95.3
Inception V3
92.5
94.4
89.4
91.8
MobileNet V2
94.4
89.0
100.0
94.1
ResNet50
96.9
95.9
97.3
96.6
Feature extraction-based approaches with only thermal imagery inputs
AlexNet
96.2
95.9
95.9
95.9
GoogLeNet
96.9
96.6
96.6
96.6
Inception V3
97.5
96.6
98.0
97.3
MobileNet V2
94.7
94.0
94.7
94.3
ResNet50
98.4
96.7
100.0
98.3
Function approximation-based approaches (with RWC, SMC, Tc, and RH inputs)
ANN
93.5
92.7
92.7
93.0
KNN
88.1
90.2
84.1
86.9
LR
89.2
95.1
82.9
88.6
SVM
91.4
95.1
86.7
90.8
DL-LSTM
96.7
96.0
97.9
97.0
Plants 2022, 11, 3344
14 of 21
Plants 2022, 11, x FOR PEER REVIEW 
15 of 22 
 
 
 
Figure 7. Confusion matrices for AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50 
models pertinent validation datasets of RGB imagery (a–e) and thermal imagery (f–j). Cell values 
(%) in row 1 column 2 represent type 1 error (TE1) while those in row 2 column 1 represent type 2 
error (TE2) (details in Section 2.4). Numbers (% and actual counts) in green color indicate prediction 
accuracy while those in red color are prediction errors for stressed and non-stressed crop classes. 
Numbers in green box represent correct prediction and those in red box represent misclassification 
of non-stressed/stressed classes. 
3.2.2. Function Approximation-Based Approaches 
Amongst the function approximation approaches, the highest prediction accuracy 
was obtained with the DL-LSTM model (96.7%) followed by ANN (93.5%), SVM (91.4%), 
LR (89.2%), and KNN models (88.1%) (Table 6). Moreover, the precision, sensitivity, and 
F1 score were also highest for the DL-LSTM (96.0, 97.9, and 97.0%, respectively) com-
pared to other ML models. The training and validation accuracies with DL-LSTM 
showed early convergence for which the loss on the validation dataset reached minima at 
40 epochs (Figure 8). The TE1 for ANN, KNN, LR, SVM, and LSTM were 3.2, 4.3, 2.2, 2.2, 
and 2.1%, respectively and TE2 were 3.2, 7.5, 8.6, 6.5, and 1.1%, respectively (Figure 9). The 
DL-LSTM outperformed ML models with the lowest mean error (Figure 9). 
 
Figure 8. Accuracy and loss corves for Long Short Term memory based deep learning model for 
crop water stress identification. 
Figure 7. Confusion matrices for AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50
models pertinent validation datasets of RGB imagery (a–e) and thermal imagery (f–j). Cell values (%)
in row 1 column 2 represent type 1 error (TE1) while those in row 2 column 1 represent type 2 error
(TE2) (details in Section 2.4). Numbers (% and actual counts) in green color indicate prediction
accuracy while those in red color are prediction errors for stressed and non-stressed crop classes.
Numbers in green box represent correct prediction and those in red box represent misclassiﬁcation of
non-stressed/stressed classes.
3.2.2. Function Approximation-Based Approaches
Amongst the function approximation approaches, the highest prediction accuracy was
obtained with the DL-LSTM model (96.7%) followed by ANN (93.5%), SVM (91.4%), LR
(89.2%), and KNN models (88.1%) (Table 6). Moreover, the precision, sensitivity, and F1
score were also highest for the DL-LSTM (96.0, 97.9, and 97.0%, respectively) compared
to other ML models. The training and validation accuracies with DL-LSTM showed early
convergence for which the loss on the validation dataset reached minima at 40 epochs
(Figure 8). The TE1 for ANN, KNN, LR, SVM, and LSTM were 3.2, 4.3, 2.2, 2.2, and 2.1%,
respectively and TE2 were 3.2, 7.5, 8.6, 6.5, and 1.1%, respectively (Figure 9). The DL-LSTM
outperformed ML models with the lowest mean error (Figure 9).
Plants 2022, 11, x FOR PEER REVIEW 
15 of 22 
 
 
 
Figure 7. Confusion matrices for AlexNet, GoogLeNet, Inception V3, MobileNet V2, and ResNet50 
models pertinent validation datasets of RGB imagery (a–e) and thermal imagery (f–j). Cell values 
(%) in row 1 column 2 represent type 1 error (TE1) while those in row 2 column 1 represent type 2 
error (TE2) (details in Section 2.4). Numbers (% and actual counts) in green color indicate prediction 
accuracy while those in red color are prediction errors for stressed and non-stressed crop classes. 
Numbers in green box represent correct prediction and those in red box represent misclassification 
of non-stressed/stressed classes. 
3.2.2. Function Approximation-Based Approaches 
Amongst the function approximation approaches, the highest prediction accuracy 
was obtained with the DL-LSTM model (96.7%) followed by ANN (93.5%), SVM (91.4%), 
LR (89.2%), and KNN models (88.1%) (Table 6). Moreover, the precision, sensitivity, and 
F1 score were also highest for the DL-LSTM (96.0, 97.9, and 97.0%, respectively) com-
pared to other ML models. The training and validation accuracies with DL-LSTM 
showed early convergence for which the loss on the validation dataset reached minima at 
40 epochs (Figure 8). The TE1 for ANN, KNN, LR, SVM, and LSTM were 3.2, 4.3, 2.2, 2.2, 
and 2.1%, respectively and TE2 were 3.2, 7.5, 8.6, 6.5, and 1.1%, respectively (Figure 9). The 
DL-LSTM outperformed ML models with the lowest mean error (Figure 9). 
 
Figure 8. Accuracy and loss corves for Long Short Term memory based deep learning model for 
crop water stress identification. 
Figure 8. Accuracy and loss corves for Long Short Term memory based deep learning model for crop
water stress identiﬁcation.
Plants 2022, 11, 3344
15 of 21
Plants 2022, 11, x FOR PEER REVIEW 
16 of 22 
 
 
 
Figure 9. The confusion matrices for function approximation-based (a) ANN; (b) KNN; (c) LR; (d) 
SVM; and (e) DL-LSTM models. Cell values (%) in row 1 column 2 represent type 1 error (TE1) while 
those in row 2 column 1 represent type 2 error (TE2) (details in Section 2.4). Numbers (% and actual 
counts) in green color indicate prediction accuracy while those in red color are prediction errors for 
stressed and non-stressed crop classes. Numbers in green box represent correct prediction and 
those in red box represent misclassification of non-stressed/stressed classes. 
4. Discussion 
Sprinkler irrigation applies a predetermined quantity of water and wets the entire 
canopy, unlike traditional flood irrigation. This cools down the microclimate and in-
creases relative air humidity to reduce the microclimate’s water demand [52]. This could 
be the reason for lower Tc in all the sprinkler irrigation treatments compared to the cor-
responding flood irrigation treatments (Figure 4). Lowered microclimate water demand 
could have also resulted in lower soil moisture depletion from the root zone and there-
fore higher SMC with sprinkler irrigation [53]. In addition to sufficient SMC, sprinkler 
irrigation results in lower deep percolation and nutrient leaching compared to conven-
tional flood irrigation [54–56]. This could have resulted in a higher average yield for 
sprinkler irrigation treatment plots (5719 kg/ha) compared to the flood irrigation treat-
ment plots (4898 kg/ha). With the projected future climate change impacts in the form of 
low rainfall frequencies and high ambient temperatures, crop water stresses are further 
expected to multiply, which will multiply the penalties in yield potentials [3]. Therefore, 
stress-tolerant crop cultivars need to be developed and planted for uncompromised yield 
goals. As also reported in our prior work based on canopy reflectance [57], water stress 
started to occur before the CRI stage in both methods of irrigation. RWCs were lower at 
late jointing and flowering stages in case of flood irrigation. Water stress at the flowering 
stage can result in significant yield and biomass reductions [58] suggesting that it is also 
influenced by the phenological growth stage. For robust analysis of this aspect, large 
datasets are being collected at each phenological growth stage. Water stress lowers CO2 
availability due to stomatal closure, thereby affecting photosynthesis and ultimately 
growth, yield, and biomass [59,60]. 
CNNs have been increasingly used for plant phenotyping applications over the past 
decade for their capability of modeling complicated plant processes by distinguishing 
and extracting regularized data patterns [61,62]. It is for this reason; CNN models were 
highly accurate in predicting stressed and non-stressed crops using thermal and RGB 
imagery. Chlorophyll is vital for photosynthesis, while carotenoids are critical 
non-enzymatic antioxidants. Water stress reduces chlorophyll and carotenoid contents, 
as well as the ratio of chlorophyll ‘a’ to ‘b’, leading to leaf coloration changes. This is the 
reason for RGB images also yielding satisfactory accuracy of up to 94.6% for tracing leaf 
color changes [63]. Compared to RGB imagery, thermal imagery is a more detailed and 
better presenter of the crop stress that alters the emissivity patterns proportionally 
[64,65]. The canopy temperature is affected by the microclimate conditions and the 
available soil moisture [53]. This is the reason for the relatively lower accuracy of water 
stress detection with RGB images (94.6%) than with thermal images (96.7%) irrespective 
Figure 9. The confusion matrices for function approximation-based (a) ANN; (b) KNN; (c) LR;
(d) SVM; and (e) DL-LSTM models. Cell values (%) in row 1 column 2 represent type 1 error (TE1)
while those in row 2 column 1 represent type 2 error (TE2) (details in Section 2.4). Numbers (% and
actual counts) in green color indicate prediction accuracy while those in red color are prediction
errors for stressed and non-stressed crop classes. Numbers in green box represent correct prediction
and those in red box represent misclassiﬁcation of non-stressed/stressed classes.
4. Discussion
Sprinkler irrigation applies a predetermined quantity of water and wets the entire
canopy, unlike traditional ﬂood irrigation. This cools down the microclimate and increases
relative air humidity to reduce the microclimate’s water demand [52]. This could be the
reason for lower Tc in all the sprinkler irrigation treatments compared to the corresponding
ﬂood irrigation treatments (Figure 4). Lowered microclimate water demand could have
also resulted in lower soil moisture depletion from the root zone and therefore higher
SMC with sprinkler irrigation [53]. In addition to sufﬁcient SMC, sprinkler irrigation
results in lower deep percolation and nutrient leaching compared to conventional ﬂood
irrigation [54–56]. This could have resulted in a higher average yield for sprinkler irrigation
treatment plots (5719 kg/ha) compared to the ﬂood irrigation treatment plots (4898 kg/ha).
With the projected future climate change impacts in the form of low rainfall frequencies
and high ambient temperatures, crop water stresses are further expected to multiply, which
will multiply the penalties in yield potentials [3]. Therefore, stress-tolerant crop cultivars
need to be developed and planted for uncompromised yield goals. As also reported in
our prior work based on canopy reﬂectance [57], water stress started to occur before the
CRI stage in both methods of irrigation. RWCs were lower at late jointing and ﬂowering
stages in case of ﬂood irrigation. Water stress at the ﬂowering stage can result in signiﬁcant
yield and biomass reductions [58] suggesting that it is also inﬂuenced by the phenological
growth stage. For robust analysis of this aspect, large datasets are being collected at each
phenological growth stage. Water stress lowers CO2 availability due to stomatal closure,
thereby affecting photosynthesis and ultimately growth, yield, and biomass [59,60].
CNNs have been increasingly used for plant phenotyping applications over the past
decade for their capability of modeling complicated plant processes by distinguishing and
extracting regularized data patterns [61,62]. It is for this reason; CNN models were highly
accurate in predicting stressed and non-stressed crops using thermal and RGB imagery.
Chlorophyll is vital for photosynthesis, while carotenoids are critical non-enzymatic an-
tioxidants. Water stress reduces chlorophyll and carotenoid contents, as well as the ratio
of chlorophyll ‘a’ to ‘b’, leading to leaf coloration changes. This is the reason for RGB
images also yielding satisfactory accuracy of up to 94.6% for tracing leaf color changes [63].
Compared to RGB imagery, thermal imagery is a more detailed and better presenter of the
crop stress that alters the emissivity patterns proportionally [64,65]. The canopy tempera-
ture is affected by the microclimate conditions and the available soil moisture [53]. This
is the reason for the relatively lower accuracy of water stress detection with RGB images
(94.6%) than with thermal images (96.7%) irrespective of the selected DL models (Table 5).
A similar observation is reported in a prior study [64] where higher accuracy was obtained
Plants 2022, 11, 3344
16 of 21
with thermal imagery (89%) compared to RGB imagery (82%) for wheat ear counting using
DCNN models. Since thermal imaging is often affected by the wind or RH factors of the
environment, the quality of data will be critical for training the DL models, especially when
acquired using aerial platforms [30,64]. Therefore, to maintain thermal data quality, imag-
ing campaigns were launched when wind velocities were below 5 kmph. The ResNet50
had relatively the highest accuracy among the feature extraction models. Although it
is the basic version of GoogLeNet and Inception V3, the performance would be highly
impacted by the quality of input imagery, size, and robustness of the dataset, especially
for the agricultural environments. ResNet50 addresses the neural network degradation
problem by introducing identity mapping, which results in the disappearance of gradient
parameters and the non-ideal convergence effect on the deeper networks [66,67]. This fea-
ture contributed to the enhanced performance of ResNet50 compared to the other models
thereby suggesting the suitability of ResNet50 for agricultural applications for various
crop biotic and abiotic stress characterizations. CNN models were also applied to thermal
imagery for water stress classiﬁcation in maize under well-irrigated, moderately irrigated,
and water-stressed treatments, obtaining an overall accuracy of 89% [68]. Color and grey
images of maize were also used as inputs to the DCNN model for water stress identiﬁcation
where stress identiﬁcation and classiﬁcation accuracies were 98% and 95%, respectively [26].
The inception-ResNet V2 framework utilized for water stress identiﬁcation in sugarcane
yielded an accuracy of 83% with available soil water capacity as input [65]. Thus far, most
of the computer vision models have utilized single-dimensional data inputs, unlike this
study which advances water-stress identiﬁcation in wheat crops using multidimensional
data inputs. Multidimensional data modeling enhances the robustness and applicability of
developed approaches across various agroclimatic conditions.
Crop growth or its water stress response is not necessarily linear to the weather or
soil conditions [69]. Therefore, the linear (LR) and non-linear function approximation
approaches (ANN, KNN, SVM, and DL-LSTM) were evaluated to predict the stress class of
the crop. ANN and SVM had a better stress prediction accuracy (Table 6) compared to KNN
and LR possibly due to two reasons (1) KNN or LR either use locally linear segments or a
generalized linear approach for making predictions [66,69] and (2) KNN and LR models
train on an unsupervised learning approach, unlike ANN and SVM, which train on a
supervised learning approach [18]. ANN and SVM had comparable accuracies for crop
stress prediction. However, SVM suits small datasets; while ANN can process relatively
larger datasets. Therefore, ANN would have more conﬁdence in prediction classes.
Crop phenotyping with traditional function approximation approaches (ML mod-
els) is often subjective compared to the advanced DL-LSTM approach as those require
manual feature selection of Tc, Ta, RH, and SMC. This restricts the robustness and accu-
racy of the ML models. Therefore, DL-LSTM outperformed the traditional ML models
(Figure 9) due to its automated and stabilized feature selection advantage [12,70]. This
was supported by minimum model loss compared to other function approximation-based
ML models. DL-LSTM not only integrates the thermal imagery features employed in
DL models but also combines the auxiliary soil and weather data inputs, of function ap-
proximation models. This eventually led to its superior performance over the other ML
models evaluated in this study as well as in prior studies of crop stress and yield phenotyp-
ing [51] or irrigation forecasting [22]. However, GoogleNet, Inception V3, and ResNet50
provided comparable or higher stress prediction accuracy compared to the DL-LSTM model
(Table 6). Stress/non-stress misclassiﬁcation could be minimized through improved data
sampling, increasing training data size, and optimizing hyper-parameters, or by merging
different ML and DL models for crop’s thermal emissivity and environment data inputs.
Among the feature extraction and function approximation-based approaches, the feature
extraction-based models outperformed all the function approximation-based models for
water stress classiﬁcation.
The CNN models evaluated in this study can be adopted for water stress identiﬁ-
cation in other wheat cultivars while for other crops and their cultivars, sufﬁcient data
Plants 2022, 11, 3344
17 of 21
acquisition, model training, and validations would be required. Along similar lines, gath-
ering sufﬁcient data at different crop phenological stages will enable growth stage-wise
accuracy evaluation of ML and DL models in future studies. The developed algorithms
required below 5 sec to be successfully implemented on independent images for classiﬁca-
tion into stressed/non-stressed classes. This is critical from a real-time stress diagnosis and
management perspective. Trained algorithms are therefore transferrable to handheld or
edge devices for real-time stress detection by breeders, researchers, farmers, and students,
among others. For commercial adoption of the developed and tested approaches, capital
investment would be initially required following which high returns may be expected
through improvements in crop stress mitigation and management at reduced costs [11].
5. Conclusions
The canopy temperatures, relative water content, soil moisture content, and grain
yield for the wheat crop were signiﬁcantly affected by the irrigation type and rates. Lower
Tc and higher RWC, SMC, and yield were observed for irrigation at 100% of ETc compared
to deﬁcit irrigation (75, 50, and 25% of ETc). Moreover, a comparable or higher yield was
observed for sprinkler irrigation compared to conventional ﬂood irrigation and amounted
to 20% of the water savings.
Thermal images resulted in higher crop water stress classification accuracy (94.7–98.4%)
compared to RGB imagery (92.5–96.9%). Moreover, the DL models (including DL-LSTM)
performed better than the ML models for stressed and non-stressed crop classiﬁcation.
Among the function approximation-based approaches, DL-LSTM had the highest accuracy
(96.7%). Among the feature extraction-based methods, ResNet50 had the highest accuracy
of 96.9% and 98.4% with RGB and thermal imagery inputs, respectively.
Overall, DL models with thermal imagery inputs could be highly efﬁcient for crop
water stress phenotyping. As a future scope, feature extraction-based DL models could
be implemented on edge-computing devices for real-time water stress monitoring and
actuation of irrigation systems through the internet of things.
Author Contributions: Conceptualization, Y.A.R. and N.S.C.; methodology, N.S.C. and M.K.T.;
software, K.D. and A.S.; validation, A.S., K.D., N.S.C. and A.K.C.; resources, Y.A.R.; data curation,
K.D., M.K.T. and A.K.C.; writing—original draft preparation, N.S.C., Y.A.R., and A.K.C.; writing—
review and editing, A.K.C. and M.K.T. All authors have read and agreed to the published version of
the manuscript.
Funding: This research was supported by the Indian Council of Agricultural Research-Central
Institute of Agricultural Engineering Bhopal, India, project# 824.
Data Availability Statement: Data will be made available on personalized requests due to restrictions
from the parent organization.
Acknowledgments: The authors would like to thank C.R. Mehta and P.S. Tiwari from ICAR-CIAE
Bhopal, for their technical support in the conduct of this study.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
Abbreviations
Abbreviation
Expanded Form
Adam
Adaptive Moment Estimation
AN
Actual Non-Stressed Crop
ANN
Artiﬁcial Neural Network
ANOVA
Analysis of Variance
CIAE
Central Institute of Agricultural Engineering
CNN
Convolution Neural Network
DAS
Day After Sowing
DCNN
Deep Convolution Neural Network
DL
Deep Learning
Plants 2022, 11, 3344
18 of 21
Abbreviation
Expanded Form
DL-LSTM
Deep Learning-Long Short Term Memory
ETc
Evapotranspiration
F1
F1 Score
ICAR
Indian Council of Agricultural Research
KNN
Kernel Nearest Neighbor
LR
Logistic Regression
LSTM
Long Short Term Memory
MAE
Mean Absolute Error
ML
Machine Learning
P
Precision
PS
Correctly Predicted Stressed Crop From all the predictions
RBF
Radial Basis Function
RF
Random Forest
RGB
Red Green Blue
RH
Relative Humidity
RWC
Relative Water Content
SD
Standard Deviation
Se
Sensitivity
Sgdm
Stochastic Gradient Descent with Momentum
SMC
Soil Moisture Content
S
Speciﬁcity
VM
Support Vector Machine
Ta
Air Temperature
Tc
Canopy Temperature
TE1
Type 1 Error
TE2
Type 2 Error
TN
True Negative
TS
True Positive
UAS
Unmanned Aerial System
References
1.
Mega, R.; Abe, F.; Kim, J.-S.; Tsuboi, Y.; Tanaka, K.; Kobayashi, H.; Sakata, Y.; Hanada, K.; Tsujimoto, H.; Kikuchi, J. Tuning
Water-Use Efﬁciency and Drought Tolerance in Wheat Using Abscisic Acid Receptors. Nat. Plants 2019, 5, 153–159. [CrossRef]
2.
Ihuoma, S.O.; Madramootoo, C.A. Recent Advances in Crop Water Stress Detection. Comput. Electron. Agric. 2017, 141, 267–275.
[CrossRef]
3.
Seiﬁkalhor, M.; Niknam, V.; Aliniaeifard, S.; Didaran, F.; Tsaniklidis, G.; Fanourakis, D.; Teymoorzadeh, M.; Mousavi, S.H.;
Bosacchi, M.; Li, T. The Regulatory Role of γ-Aminobutyric Acid in Chickpea Plants Depends on Drought Tolerance and Water
Scarcity Level. Sci. Rep. 2022, 12, 7034. [CrossRef]
4.
Oletic, D.; Bilas, V. How Thirsty the Crops Are: Emerging Instrumentation for Plant-Based Field Measurement of Water Stress.
IEEE Instrum. Meas. Mag. 2020, 23, 37–46. [CrossRef]
5.
Zhang, L.; Niu, Y.; Zhang, H.; Han, W.; Li, G.; Tang, J.; Peng, X. Maize Canopy Temperature Extracted from UAV Thermal and
RGB Imagery and Its Application in Water Stress Monitoring. Front. Plant Sci. 2019, 10, 1270. [CrossRef]
6.
Agam, N.; Cohen, Y.; Berni, J.A.J.; Alchanatis, V.; Kool, D.; Dag, A.; Yermiyahu, U.; Ben-Gal, A. An Insight to the Performance of
Crop Water Stress Index for Olive Trees. Agric. Water Manag. 2013, 118, 79–86. [CrossRef]
7.
Elsayed, S.; Elhoweity, M.; Ibrahim, H.H.; Dewir, Y.H.; Migdadi, H.M.; Schmidhalter, U. Thermal Imaging and Passive Reﬂectance
Sensing to Estimate the Water Status and Grain Yield of Wheat under Different Irrigation Regimes. Agric. Water Manag. 2017, 189,
98–110. [CrossRef]
8.
Chandel, A.K.; Khot, L.R.; Osroosh, Y.; Peters, T.R. Thermal-RGB Imager Derived in-Field Apple Surface Temperature Estimates
for Sunburn Management. Agric. For. Meteorol. 2018, 253, 132–140. [CrossRef]
9.
Chandel, A.K.; Khot, L.R.; Molaei, B.; Peters, R.T.; Stöckle, C.O.; Jacoby, P.W. High-Resolution Spatiotemporal Water Use Mapping
of Surface and Direct-Root-Zone Drip-Irrigated Grapevines Using Uas-Based Thermal and Multispectral Remote Sensing. Remote
Sens. 2021, 13, 954. [CrossRef]
10.
Chandel, N.S.; Chakraborty, S.K.; Rajwade, Y.A.; Dubey, K.; Tiwari, M.K.; Jat, D. Identifying Crop Water Stress Using Deep
Learning Models. Neural Comput. Appl. 2021, 33, 5353–5367. [CrossRef]
11.
Taheri-Garavand, A.; Mumivand, H.; Fanourakis, D.; Fatahi, S.; Taghipour, S. An Artiﬁcial Neural Network Approach for
Non-Invasive Estimation of Essential Oil Content and Composition through Considering Drying Processing Factors: A Case
Study in Mentha Aquatica. Ind. Crops Prod. 2021, 171, 113985. [CrossRef]
Plants 2022, 11, 3344
19 of 21
12.
Singh, A.K.; Ganapathysubramanian, B.; Sarkar, S.; Singh, A. Deep Learning for Plant Stress Phenotyping: Trends and Future
Perspectives. Trends Plant Sci. 2018, 23, 883–898. [CrossRef]
13.
Goldstein, A.; Fink, L.; Meitin, A.; Bohadana, S.; Lutenberg, O.; Ravid, G. Applying Machine Learning on Sensor Data for
Irrigation Recommendations: Revealing the Agronomist’s Tacit Knowledge. Precis. Agric. 2018, 19, 421–444. [CrossRef]
14.
Petrie, P.R.; Wang, Y.; Liu, S.; Lam, S.; Whitty, M.A.; Skewes, M.A. The Accuracy and Utility of a Low Cost Thermal Camera and
Smartphone-Based System to Assess Grapevine Water Status. Biosyst. Eng. 2019, 179, 126–139. [CrossRef]
15.
Subeesh, A.; Bhole, S.; Singh, K.; Chandel, N.S.; Rajwade, Y.A.; Rao, K.V.R.; Kumar, S.P.; Jat, D. Deep Convolutional Neural
Network Models for Weed Detection in Polyhouse Grown Bell Peppers. Artif. Intell. Agric. 2022, 6, 47–54. [CrossRef]
16.
Gutiérrez, S.; Diago, M.P.; Fernández-Novales, J.; Tardaguila, J. Vineyard Water Status Assessment Using On-the-Go Thermal
Imaging and Machine Learning. PLoS ONE 2018, 13, e0192037. [CrossRef]
17.
Ghosal, S.; Blystone, D.; Singh, A.K.; Ganapathysubramanian, B.; Singh, A.; Sarkar, S. An Explainable Deep Machine Vision
Framework for Plant Stress Phenotyping. Proc. Natl. Acad. Sci. USA 2018, 115, 4613–4618. [CrossRef]
18.
Schmidhuber, J. Deep Learning in Neural Networks: An Overview. Neural Netw. 2015, 61, 85–117. [CrossRef]
19.
Chakraborty, S.K.; Chandel, N.S.; Jat, D.; Tiwari, M.K.; Rajwade, Y.A.; Subeesh, A. Deep Learning Approaches and Interventions
for Futuristic Engineering in Agriculture. Neural Comput. Appl. 2022. [CrossRef]
20.
Yalcin, H. Plant Phenology Recognition Using Deep Learning: Deep-Pheno. In Proceedings of the 2017 6th International
Conference on Agro-Geoinformatics, Fairfax VA, USA, 7–10 August 2017; pp. 1–5.
21.
Haider, S.A.; Naqvi, S.R.; Akram, T.; Umar, G.A.; Shahzad, A.; Sial, M.R.; Khaliq, S.; Kamran, M. LSTM Neural Network Based
Forecasting Model for Wheat Production in Pakistan. Agronomy 2019, 9, 72. [CrossRef]
22.
Mouatadid, S.; Adamowski, J.F.; Tiwari, M.K.; Quilty, J.M. Coupling the Maximum Overlap Discrete Wavelet Transform and
Long Short-Term Memory Networks for Irrigation Flow Forecasting. Agric. Water Manag. 2019, 219, 72–85. [CrossRef]
23.
Yoo, T.-W.; Oh, I.-S. Time Series Forecasting of Agricultural Products’ Sales Volumes Based on Seasonal Long Short-Term Memory.
Appl. Sci. 2020, 10, 8169. [CrossRef]
24.
Arif, S.; Kumar, R.; Abbasi, S.; Mohammadani, K.; Dev, K. Weeds Detection and Classiﬁcation Using Convolutional Long-Short-Term
Memory; Research Square: Durham, NC, USA, 2021.
25.
Zhuang, S.; Wang, P.; Jiang, B.; Li, M.; Gong, Z. Early Detection of Water Stress in Maize Based on Digital Images. Comput. Electron.
Agric. 2017, 140, 461–468. [CrossRef]
26.
An, J.; Li, W.; Li, M.; Cui, S.; Yue, H. Identiﬁcation and Classiﬁcation of Maize Drought Stress Using Deep Convolutional Neural
Network. Symmetry 2019, 11, 256. [CrossRef]
27.
Niu, Y.; Zhang, H.; Han, W.; Zhang, L.; Chen, H. A Fixed-Threshold Method for Estimating Fractional Vegetation Cover of Maize
under Different Levels of Water Stress. Remote Sens. 2021, 13, 1009. [CrossRef]
28.
Biju, S.; Fuentes, S.; Gupta, D. The Use of Infrared Thermal Imaging as a Non-Destructive Screening Tool for Identifying
Drought-Tolerant Lentil Genotypes. Plant Physiol. Biochem. 2018, 127, 11–24. [CrossRef]
29.
Chandel, A.K.; Khot, L.R.; Yu, L.-X. Alfalfa (Medicago Sativa L.) Crop Vigor and Yield Characterization Using High-Resolution
Aerial Multispectral and Thermal Infrared Imaging Technique. Comput. Electron. Agric. 2021, 182, 105999. [CrossRef]
30.
Prashar, A.; Jones, H.G. Infra-Red Thermography as a High-Throughput Tool for Field Phenotyping. Agronomy 2014, 4, 397–417.
[CrossRef]
31.
Allen, R.G.; Pereira, L.S.; Raes, D.; Smith, M. Crop Evapotranspiration-Guidelines for Computing Crop Water Requirements-FAO
Irrigation and Drainage Paper 56. FAO: Rome, Italy, 1998; Volume 300, p. D05109.
32.
Google Experimental Layout of Winter Wheat Crop at Different Rates Using Sprinkler and Flood Irrigation. 2022. Available
online: https://www.google.com/maps/ (accessed on 8 October 2022).
33.
Panigrahi, N.; Das, B.S. Canopy Spectral Reﬂectance as a Predictor of Soil Water Potential in Rice. Water Resour. Res. 2018, 54,
2544–2560. [CrossRef]
34.
Gomez, K.A.; Gomez, A.A. Statistical Procedures for Agricultural Research; John Wiley & Sons: Hoboken, NJ, USA, 1984; ISBN
978-0-471-87092-0.
35.
Türko˘glu, M.; Hanbay, D. Plant Disease and Pest Detection Using Deep Learning-Based Features. Turk. J. Electr. Eng. Comput. Sci.
2019, 27, 1636–1651. [CrossRef]
36.
Hendrawan, Y.; Damayanti, R.; Al Riza, D.F.; Hermanto, M.B. Classiﬁcation of Water Stress in Cultured Sunagoke Moss Using
Deep Learning. TELKOMNIKA (Telecommun. Comput. Electron. Control) 2021, 19, 1594–1604. [CrossRef]
37.
Esgario, J.G.; Krohling, R.A.; Ventura, J.A. Deep Learning for Classiﬁcation and Severity Estimation of Coffee Leaf Biotic Stress.
Comput. Electron. Agric. 2020, 169, 105162. [CrossRef]
38.
Fulton, L.V.; Dolezel, D.; Harrop, J.; Yan, Y.; Fulton, C.P. Classiﬁcation of Alzheimer’s Disease with and without Imagery Using
Gradient Boosted Machines and ResNet-50. Brain Sci. 2019, 9, 212. [CrossRef]
39.
Turkoglu, M.; Hanbay, D.; Sengur, A. Multi-Model LSTM-Based Convolutional Neural Networks for Detection of Apple Diseases
and Pests. J Ambient Intell Hum. Comput 2022, 13, 3335–3345. [CrossRef]
40.
Kandel, I.; Castelli, M. The Effect of Batch Size on the Generalizability of the Convolutional Neural Networks on a Histopathology
Dataset. ICT Express 2020, 6, 312–315. [CrossRef]
41.
Blum, A.; Shpiler, L.; Golan, G.; Mayer, J. Yield Stability and Canopy Temperature of Wheat Genotypes under Drought-Stress.
Field Crops Res. 1989, 22, 289–296. [CrossRef]
Plants 2022, 11, 3344
20 of 21
42.
Rashid, A.; Stark, J.C.; Tanveer, A.; Mustafa, T. Use of Canopy Temperature Measurements as a Screening Tool for Drought
Tolerance in Spring Wheat. J. Agron. Crop Sci. 1999, 182, 231–238. [CrossRef]
43.
DeJonge, K.C.; Taghvaeian, S.; Trout, T.J.; Comas, L.H. Comparison of Canopy Temperature-Based Water Stress Indices for Maize.
Agric. Water Manag. 2015, 156, 51–62. [CrossRef]
44.
Olsovska, K.; Kovar, M.; Brestic, M.; Zivcak, M.; Slamka, P.; Shao, H.B. Genotypically Identifying Wheat Mesophyll Conductance
Regulation under Progressive Drought Stress. Front. Plant Sci. 2016, 7, 1111. [CrossRef]
45.
Laxa, M.; Liebthal, M.; Telman, W.; Chibani, K.; Dietz, K.-J. The Role of the Plant Antioxidant System in Drought Tolerance.
Antioxidants 2019, 8, 94. [CrossRef]
46.
Wang, X.; Vignjevic, M.; Jiang, D.; Jacobsen, S.; Wollenweber, B. Improved Tolerance to Drought Stress after Anthesis Due to
Priming before Anthesis in Wheat (Triticum Aestivum L.) Var. Vinjett. J. Exp. Bot. 2014, 65, 6441–6456. [CrossRef]
47.
Kukanov, I.; Hautamäki, V.; Lee, K.A. Recurrent Neural Network and Maximal Figure of Merit for Acoustic Event Detection.
In Proceedings of the Proceedings of the Workshop on Detection and Classiﬁcation of Acoustic Scenes and Events, Munich,
Germany, 16–17 November 2017.
48.
Castro-Zunti, R.; Park, E.H.; Choi, Y.; Jin, G.Y.; Ko, S. Early Detection of Ankylosing Spondylitis Using Texture Features and
Statistical Machine Learning, and Deep Learning, with Some Patient Age Analysis. Comput. Med. Imaging Graph. 2020, 82, 101718.
[CrossRef]
49.
Fan, Y.; Bai, J.; Lei, X.; Zhang, Y.; Zhang, B.; Li, K.-C.; Tan, G. Privacy Preserving Based Logistic Regression on Big Data. J. Netw.
Comput. Appl. 2020, 171, 102769. [CrossRef]
50.
Rehman, T.U.; Mahmud, M.S.; Chang, Y.K.; Jin, J.; Shin, J. Current and Future Applications of Statistical Machine Learning
Algorithms for Agricultural Machine Vision Systems. Comput. Electron. Agric. 2019, 156, 585–605. [CrossRef]
51.
Zhang, J.; Zhu, Y.; Zhang, X.; Ye, M.; Yang, J. Developing a Long Short-Term Memory (LSTM) Based Model for Predicting Water
Table Depth in Agricultural Areas. J. Hydrol. 2018, 561, 918–929. [CrossRef]
52.
Fanourakis, D.; Aliniaeifard, S.; Sellin, A.; Giday, H.; Körner, O.; Nejad, A.R.; Delis, C.; Bouranis, D.; Koubouris, G.;
Kambourakis, E. Stomatal Behavior Following Mid-or Long-Term Exposure to High Relative Air Humidity: A Review. Plant
Physiol. Biochem. 2020, 153, 92–105. [CrossRef]
53.
Zhang, W.-Z.; Han, Y.-D.; Du, H.-J. Relationship between Canopy Temperature at Flowering Stage and Soil Water Content, Yield
Components in Rice. Rice Sci. 2007, 14, 67–70. [CrossRef]
54.
Cavero, J.; Medina, E.T.; Puig, M.; Martínez-Cob, A. Sprinkler Irrigation Changes Maize Canopy Microclimate and Crop Water
Status, Transpiration, and Temperature. Agron. J. 2009, 101, 854–864. [CrossRef]
55.
Home, P.G.; Panda, R.K.; Kar, S. Effect of Method and Scheduling of Irrigation on Water and Nitrogen Use Efﬁciencies of Okra
(Abelmoschus Esculentus). Agric. Water Manag. 2002, 55, 159–170. [CrossRef]
56.
Wang, P.; Song, X.; Han, D.; Zhang, Y.; Zhang, B. Determination of Evaporation, Transpiration and Deep Percolation of Summer
Corn and Winter Wheat after Irrigation. Agric. Water Manag. 2012, 105, 32–37. [CrossRef]
57.
Chandel, N.S.; Rajwade, Y.A.; Golhani, K.; Tiwari, P.S.; Dubey, K.; Jat, D. Canopy Spectral Reﬂectance for Crop Water Stress
Assessment in Wheat (Triticum Aestivum, L.). Irrig. Drain. 2021, 70, 321–331. [CrossRef]
58.
Gupta, N.K.; Gupta, S.; Kumar, A. Effect of Water Stress on Physiological Attributes and Their Relationship with Growth and
Yield of Wheat Cultivars at Different Stages. J. Agron. Crop Sci. 2001, 186, 55–62. [CrossRef]
59.
Yousefzadeh, K.; Houshmand, S.; Shiran, B.; Mousavi-Fard, S.; Zeinali, H.; Nikoloudakis, N.; Gheisari, M.M.; Fanourakis, D.
Joint Effects of Developmental Stage and Water Deﬁcit on Essential Oil Traits (Content, Yield, Composition) and Related Gene
Expression: A Case Study in Two Thymus Species. Agronomy 2022, 12, 1008. [CrossRef]
60.
Osakabe, Y.; Osakabe, K.; Shinozaki, K.; Tran, L.-S. Response of Plants to Water Stress. Front. Plant Sci. 2014, 5, 86. [CrossRef]
61.
Nasiri, A.; Taheri-Garavand, A.; Fanourakis, D.; Zhang, Y.-D.; Nikoloudakis, N. Automated Grapevine Cultivar Identiﬁcation via
Leaf Imaging and Deep Convolutional Neural Networks: A Proof-of-Concept Study Employing Primary Iranian Varieties. Plants
2021, 10, 1628. [CrossRef]
62.
Taheri-Garavand, A.; Rezaei Nejad, A.; Fanourakis, D.; Fatahi, S.; Ahmadi Majd, M. Employment of Artiﬁcial Neural Networks
for Non-Invasive Estimation of Leaf Water Status Using Color Features: A Case Study in Spathiphyllum Wallisii. Acta Physiol.
Plant. 2021, 43, 78. [CrossRef]
63.
Zomorrodi, N.; Rezaei Nejad, A.; Mousavi-Fard, S.; Feizi, H.; Tsaniklidis, G.; Fanourakis, D. Potency of Titanium Dioxide
Nanoparticles, Sodium Hydrogen Sulﬁde and Salicylic Acid in Ameliorating the Depressive Effects of Water Deﬁcit on Periwinkle
Ornamental Quality. Horticulturae 2022, 8, 675. [CrossRef]
64.
Grbovic, Z.; Panic, M.; Marko, O.; Brdar, S.; Crnojevic, V. Wheat Ear Detection in RGB and Thermal Images Using Deep Neural
Networks. Environments 2019, 11, 13.
65.
de Melo, L.L.; de Melo, V.G.M.L.; Marques, P.A.A.; Frizzone, J.A.; Coelho, R.D.; Romero, R.A.F.; Barros, T.H. da S. Deep Learning
for Identiﬁcation of Water Deﬁcits in Sugarcane Based on Thermal Images. Agric. Water Manag. 2022, 272, 107820. [CrossRef]
66.
Mhapsekar, M.; Mhapsekar, P.; Mhatre, A.; Sawant, V. Implementation of Residual Network (ResNet) for Devanagari Handwritten
Character Recognition. In Advanced Computing Technologies and Applications; Springer: Berlin/Heidelberg, Germany, 2020;
pp. 137–148.
67.
Wang, F.; Qiu, J.; Wang, Z.; Li, W. Intelligent Recognition of Surface Defects of Parts by Resnet. J. Phys. Conf. Ser. 2021, 1883, 012178.
[CrossRef]
Plants 2022, 11, 3344
21 of 21
68.
Zhuang, S.; Wang, P.; Jiang, B.; Li, M. Learned Features of Leaf Phenotype to Monitor Maize Water Status in the Fields. Comput.
Electron. Agric. 2020, 172, 105347. [CrossRef]
69.
Archontoulis, S.V.; Miguez, F.E. Nonlinear Regression Models and Applications in Agricultural Research. Agron. J. 2015, 107,
786–798. [CrossRef]
70.
Wijaya, D.R.; Sarno, R.; Zulaika, E. DWTLSTM for Electronic Nose Signal Processing in Beef Quality Monitoring. Sens. Actuators
B Chem. 2021, 326, 128931. [CrossRef]


Paper 7:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: **Model Description and Performance**

The authors used three different deep learning models (BLSTM, CNN-LSTM, and LSTM) and three traditional machine learning models (RF, SVR, and LR) to estimate daily reference evapotranspiration and soil–water content. The models were trained and evaluated on data from three sites in Portugal, and the BLSTM model was found to outperform the other models in terms of accuracy and generalization ability. The BLSTM model achieved an MSE of 0.014 to 0.056, while the other models achieved MSE values ranging from 0.021 to 0.108. The authors also found that the BLSTM model was able to generalize well to new data, while the other models experienced a decrease in accuracy when tested on new data.

**Conclusion**

The authors conclude that the BLSTM model could be used to predict evapotranspiration and soil–water content in other regions with similar climatic conditions. They also suggest that the BLSTM model could be used to develop irrigation scheduling systems and other water management tools.
  Extract 2: **Limitations of the Study**

The authors acknowledge that their study has some limitations. First, the models were only trained and evaluated on data from three sites in Portugal. It is possible that the models would not perform as well on data from other regions with different climatic conditions. Second, the models were only trained on a relatively small dataset. It is possible that the models would perform better if they were trained on a larger dataset.
  Limitations: >
  Relevance Evaluation: 0.9934388000828682
  Relevance Score: 0.9934388000828682
  Inline Citation: >
  Explanation: The paper by Alibabaei et al. [102] used three different deep learning models (BLSTM, CNN-LSTM, and LSTM) and three traditional machine learning models (RF, SVR, and LR) to estimate daily reference evapotranspiration and soil–water content. The models were trained and evaluated on data from three sites in Portugal, and the BLSTM model was found to outperform the other models in terms of accuracy and generalization ability. The authors suggest that the BLSTM model could be used to predict evapotranspiration and soil–water content in other regions with similar climatic conditions.

 Full Text: >


Citation: Alibabaei, K.; Gaspar, P.D.;
Lima, T.M.; Campos, R.M.; Girão, I.;
Monteiro, J.; Lopes, C.M. A Review of
the Challenges of Using Deep
Learning Algorithms to Support
Decision-Making in Agricultural
Activities. Remote Sens. 2022, 14, 638.
https://doi.org/10.3390/rs14030638
Academic Editor: Juan Ignacio
Arribas
Received: 21 December 2021
Accepted: 26 January 2022
Published: 28 January 2022
Publisher’s Note: MDPI stays neutral
with regard to jurisdictional claims in
published maps and institutional afﬁl-
iations.
Copyright:
© 2022 by the authors.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed
under
the
terms
and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
remote sensing  
Review
A Review of the Challenges of Using Deep Learning Algorithms
to Support Decision-Making in Agricultural Activities
Khadijeh Alibabaei 1,2
, Pedro D. Gaspar 1,2,*
, Tânia M. Lima 1,2
, Rebeca M. Campos 3
, Inês Girão 4
,
Jorge Monteiro 1,2,5
and Carlos M. Lopes 3
1
Department of Electromechanical Engineering, University of Beira Interior, Rua Marquês d’Ávila e Bolama,
6201-001 Covilhã, Portugal; k.alibabaei@ubi.pt (K.A.); tmlima@ubi.pt (T.M.L.); jorge@spaceway.pt (J.M.)
2
C-MAST Center for Mechanical and Aerospace Science and Technologies, University of Beira Interior,
6201-001 Covilhã, Portugal
3
Linking Landscape, Environment, Agriculture and Food (LEAF), Instituto Superior de Agronomia,
Universidade de Lisboa, 1349-017 Lisboa, Portugal; rmcampos@isa.ulisboa.pt (R.M.C.);
carlosmlopes@isa.ulisboa.pt (C.M.L.)
4
Center of Geographical Studies, Institute of Geography and Spatial Planning, University of Lisbon,
1600-276 Lisboa, Portugal; inesgirao@campus.ul.pt
5
SpaceWay, R. Pedro Nunes, 3030-199 Coimbra, Portugal
*
Correspondence: dinis@ubi.pt
Abstract: Deep Learning has been successfully applied to image recognition, speech recognition,
and natural language processing in recent years. Therefore, there has been an incentive to apply
it in other ﬁelds as well. The ﬁeld of agriculture is one of the most important ﬁelds in which the
application of deep learning still needs to be explored, as it has a direct impact on human well-being.
In particular, there is a need to explore how deep learning models can be used as a tool for optimal
planting, land use, yield improvement, production/disease/pest control, and other activities. The
vast amount of data received from sensors in smart farms makes it possible to use deep learning as a
model for decision-making in this ﬁeld. In agriculture, no two environments are exactly alike, which
makes testing, validating, and successfully implementing such technologies much more complex
than in most other industries. This paper reviews some recent scientiﬁc developments in the ﬁeld of
deep learning that have been applied to agriculture, and highlights some challenges and potential
solutions using deep learning algorithms in agriculture. The results in this paper indicate that by
employing new methods from deep learning, higher performance in terms of accuracy and lower
inference time can be achieved, and the models can be made useful in real-world applications. Finally,
some opportunities for future research in this area are suggested.
Keywords: agriculture; deep learning; smart farm; support decision-making algorithms
1. Introduction
European landscapes have been transformed primarily by human activities, so that
pristine vegetation and real wilderness are currently extremely rare in the European Union
(EU). Agriculture plays a particularly important role in the development of European
landscapes, as it now accounts for almost half of the total area of the EU [1]. On the other
hand, we are already exceeding the Earth’s capacity with the current type of agricultural
production. Climate change, degradation of soils, pollution, rising costs of groundwater
and pump irrigation, the transition from a fuel-based to a bio-based economy, the scarcity
of freshwater as demand increases, and other environmental and economic issues will
make access to fresh food an ever-greater challenge [2,3].
Moreover, it has already been shown that some of the aforementioned practices such
as climate changes and scarcity of freshwater lead to stagnation and sometimes even a
decline in production. Thus, the question arises whether transforming all agricultural
systems into high-intensity farming systems alone is not counterproductive in an attempt
Remote Sens. 2022, 14, 638. https://doi.org/10.3390/rs14030638
https://www.mdpi.com/journal/remotesensing
Remote Sens. 2022, 14, 638
2 of 43
to solve the world’s food problems. It is understandable, then, that the implementation of
practices adapted to the reality of a given production will have positive effects in terms of
better use of resources and even a different approach to their use.
One way to address this challenge is to use new technologies, supplement workers
with robots and machines, and better address biodiversity parameters and functions
as well as ecosystem state. Smart farms include farm management systems that use
new technologies to increase food safety, quality, and quantity and reduce environmental
impact. Increased control of production leads to better cost management and reduced
waste [2,4]. These farms use sensors to monitor, control, and treat animals and plants [2,4,5].
With the help of sensors in the ﬁeld, we can collect data such as soil mapping, climate
changes, weather data, among others [2,4,5]. The combined analysis of this data can provide
information to make the appropriate management decisions. Artiﬁcial Intelligence (AI)
receives signiﬁcant attention in the development of decision-making algorithms. AI is any
technique that enables machines to learn from experience, adapt to new inputs, and mimic
human behavior [6,7].
Machine Learning (ML) is a sub-area of AI that uses computational algorithms to
convert raw data from the real world into useful models and decision advice. By using
ML models, the system can automatically learn from previous experiences and improve
itself. ML techniques include Support Vector Machines (SVM), decision trees, Bayesian
learning, K-means clustering, association rule learning, regression, neural networks, and
many others [6]. Liakos et al. [8] presented an overview of the application of the ML model
in various agricultural activities of agriculture.
Deep learning (DL) is a subﬁeld of ML. The algorithms of DL are more complex than
traditional ML models. In a network, the layers between input and output are called hidden
layers. A shallow network has one hidden layer, while a deep network has more than one.
With multiple hidden layers, deep neural networks can learn the features of data and solve
more complex problems [6,7]. Since the models of DL are faster and more efﬁcient compared
to the shallow algorithms in ML, and unlike them, they can automatically extract features
from the input data, they have been the most widely used models in recent years [6,7].
In 2012, AlexNet [9] won the LSVRC competition for classiﬁcation. Sermanet et al. [10]
showed that DL models could be used for classiﬁcation, recognition, and localization and
achieved excellent results. These achievements encourage researchers to apply DL models
to other areas of human life, including agriculture.
Liu et al. [11] reviewed advances in combining edge intelligence and remote sensing
with Unmanned Aerial Vehicles (UAV) in precision agriculture. This paper presented a list
of recent works using UAVs in combination with DL models. Since the focus of the paper
was on UAV devices, this work was listed based only on the application and model used in
the paper and did not include reviews and analysis of the work.
Regarding the diversity of environments in agriculture, the result of a trained model
on one environment may not be transferable to others [12]. This makes the application of
deep learning models in agriculture more challenging and requires more attention. This
paper aims to review newly published works to ﬁnd new techniques, challenges, and
possible solutions for using deep learning in agriculture since 2018. The following are the
main objectives of this paper:
•
To provide an overview of recent work and identify challenges related to data acquisi-
tion and preparation for deep learning models;
•
To review of the new DL model algorithms used in agriculture;
•
Highlight the challenges in training the model;
•
Examine the challenges associated with applying the trained model in the real world;
•
Review the new edge devices used to implement the trained models.
Remote Sens. 2022, 14, 638
3 of 43
2. Materials and Methods
The two most reputable databases for scientiﬁc papers, the Web of Science and Sci-
enceDirect, were searched for relevant journal articles and conference proceedings. The
term “deep learning” was used in the keywords of the screening titles with one of the
following keywords: “agriculture”, “plant diseases”, “weed detection”, “yield estima-
tion”, “fruit detection”, “species identiﬁcation”, “crop classiﬁcation”, “soil management”,
“automation and robotics” and “irrigation”.
The articles that did not deal with Deep Learning in agriculture were excluded. In
the end, forty-six articles remained. Of these, ten articles were related to plant diseases,
eleven articles were related to fruit detection, ﬁve articles were related to weed detection,
six articles were related to species detection, three articles were related to soil management,
ﬁve articles were related to water management, and six articles were related to automation
in agriculture.
The following criteria were considered in the analysis of the articles:
•
The way the dataset was collected for training the model and the challenges regarding
the dataset.
•
The DL models/architectures used in the article and the performance of the models.
•
The metrics that were used to evaluate the model.
•
The inference time of the model (if speciﬁed), as it is a very important critical for the
use of the model in the real-time application.
•
The analysis of the failure predicted by the model.
•
Whether the authors used a low-cost device to deploy the trained model.
These articles base on the above criteria are discussed in Section 3.8 and listed in the
Tables 1–9.
3. An Overview of Deep Learning
DL models were inspired by human neural networks in the brain. The word “deep”
refers to the number of hidden layers through which the data is transformed. Through
training, they send the input through a deep network with different layers, where each layer
hierarchically extracts speciﬁc features at different scales or resolutions from the data and
combines them into a higher-level feature, and uses these features to make predictions [6].
DL models are divided into supervised learning, unsupervised learning, and rein-
forcement learning [6]. Supervised learning is the task of learning a function from labeled
training data. In supervised learning, all data in the dataset is a pair consisting of an input
object and the desired output value. A supervised learning model analyzes the training
data and produces a function that can be used for prediction [6]. The most commonly
used DL models included in this review are Convolutional Neural Networks (CNN) and
Recurrent Neural Networks (RNN). Unsupervised learning was used in three papers.
3.1. Convolutional Neural Network
The CNN model is a supervised learning model speciﬁcally designed for classiﬁcation,
recognition, and segmentation. A CNN model consists of a stack of convolutional layers,
nonlinear functions, pooling layers, and fully connected layers. A convolutional layer
contains a set of kernels whose parameters must be learned and is used to extract features
from the data. Each kernel slides over the height and width of the input, and the dot
product between the kernel entries and each position of the input is computed (Figure 1).
The output of a convolutional layer can be calculated by Equation (1):
yi = X ∗ Wi + bi,
i = 1, · · · , m
(1)
where X is the input of the layer, yi is the output corresponding to the i-th convolutional
kernel, Wi is a matrix of the trainable weights of the i-th kernel, bi is the i-th bias, and m is
the number of kernels.
Remote Sens. 2022, 14, 638
4 of 43
After each convolutional layer, a nonlinear activation function is used to introduce
nonlinear features into the model. Rectiﬁed Linear Units (ReLU) have become state-of-the-
art and are the most commonly used activation function in Deep Learning models [6]. A
pooling layer is usually located between two convolutional layers and is used to reduce the
number of parameters to minimize overﬁtting [6,7].
Figure 1. The left side image is the example of the convolutional operation, and the right side is the
example of a max-pooling operation with pooling size (2,2).
The ﬁnal layers consist of fully connected layers that take the features extracted by the
previous layer and generate class probabilities or scores. These layers are fully connected to
all neurons in the previous layer. Figure 2 shows the architecture of the well-known CNN
model called VGG19 and the visualization of the last layer of the VGG19 model in plant
disease classiﬁcation, respectively.
conv1
conv2
conv3
conv4
conv5
fc6
fc7
fc8
224 x 224 x 64
112 x 112 x 128
56 x 56 x 256
56 x 56 x 256
28 x 28 x 512
14x 14 x 512
1 x 1 x 4096
1 x 1 x 1000
convolutional + ReLU
max pooling
fully connected + ReLU
softmax
7x 7 x 512
Figure 2. Architecture of the well-known CNN model VGG19. The VGG19 network contains
convolutional layers, max-pool layers, fully connected layers, and a soft-max classiﬁcation layer.
3.1.1. Classiﬁcation/Regression by CNN
The CNN model can be used for classiﬁcation or regression problems.
For the
classiﬁcation task, the last layer of the model is chosen as a fully connected layer with
softmax activation function and for the regression task as a fully connected layer, usu-
ally with linear function. The most popular CNN architectures for classiﬁcation include
AlexNet [9], GoogleNet [13], VGG [14], and ResNet [15], as well as the new lightweight
models such as MobileNet [16], and EfﬁcientNet [17]. The lightweight models enable
to use mobile and low cost edge devices such as Jetson nano (https://developer.nvidia.
com/embedded/jetson-nano-developer-kit, accessed on 8 November 2021), Raspberrypi
(https://www.raspberrypi.com/, accessed on 15 November 2021) and Google TPU Coral
(https://coral.ai/, accessed on 8 November 2021) to deploy the trained model in robots
and use them in the ﬁeld [11,18] (Figure 3).
Remote Sens. 2022, 14, 638
5 of 43
Figure 3. From left to right: Jetson nano, Raspberrypi, and Google TPU Coral.
3.1.2. Detection by CNN
The CNN model can also be used for object detection. There are two types of modern
object detection algorithms, the two-stage detectors such as R-CNN [19], Fast R-CNN [20],
and Faster R-CNN [21] as well as single-stage detectors such as You Look Once (YOLO) [22],
Single Shot multi-box Detector (SSD) [23], and LedNet [24]. In the two-stage detector,
regions of interest are generated in one stage using a Region Proposal Network (RPN). In
the other stage, the proposed regions are evaluated for object classiﬁcation and bounding
box regression using convolutional layers. Such models achieve high accuracy rates but
are very slow [23]. Single-stage detectors, on the other hand, contain a single feed-forward
convolutional network that directly provides the bounding boxes and objects classiﬁcation.
The single-stage detectors are faster in detection but less accurate than two-stage detectors,
and it depends on the application which model should be chosen. Figure 4 shows the
architecture of Faster R-CNN and SDD, and Figure 5 shows the result of peach detection
using the Faster R-CNN model [25].
VGG Conv
layers
RPN
classifier
A. Faster R-CNN
Feature maps
Fully connected
layers
backbone 
VGG-16
conv
1 x 1 x 128 
3x 3x 256-S1
1 x 1 x 128 
3x 3x 256-S1
512
38 
38 
conv 4_3
Detection: 8732 per class
classifier:conv 3 x3 x(4x(classes+4))
classifier:conv 3 x3 x(6x(classes+4))
 3 x3 x(4 x(classes+4))
B. SSD model
1 x 1 x 256 
3x 3x 512-S2
1 x 1 x 1024
 3 x 3 x 1024
1 x 1 x 128 
3x 3x 256-S2
Extra Conv layers 
Figure 4. (A) Faster R-CNN model and (B) SSD model with VGG16 as the backbone. In the faster
R-CNN, a series of convolutional layers (Conv layer) is used to extract features from the input, and
then an RPN algorithm is used to ﬁnd the region of interest, but in the SSD model the features and
bounding box are extracted using only convolutional layers.
Remote Sens. 2022, 14, 638
6 of 43
Figure 5. Detection of peaches in the image using Faster R-CNN model. Each bounding box contains
peach and the score above the box shows the conﬁdence score for each detected object [25].
3.1.3. Segmentation by CNN
The segmentation task can also be performed with CNN models. In segmentation, an
image is divided into groups of pixels, and each group is assigned a class. Figure 6 shows
the segmentation of the grape in the image.
Figure 6. The left side shows the original image and the right side shows the task of segmentation for
and the right side shows the task of segmentation for grapes [26]. Reprinted with permission from
ref. [26]. Copyright 2020 Elsevier.
The fully Convolutional Networks (FCN) [27], Mask R-CNN [28], and Deeplab [29] are
DL models for segmentation. Lottes et al. [30] used an encoder-decoder Fully Convolutional
Network (FCN) model to identify crops and weeds during ﬁeld operations. Ghiani et al. [31]
used Mask R-CNN with ResNet101 which was trained with the dataset COCO, as a back-
bone for detecting grape branches in the tree.
3.2. Recurrent Neural Network
RNN is specially designed for handling sequential data. In RNN, the output from the
previous step is fed into the current step as input. The output of an RNN unit is determined
using a tanh function by Equation (2):
ht = tanh(Wxxt + Whht−1 + bt)
(2)
The main problem with RNN is the vanishing gradient, i.e., the gradient of the loss
function approaches zero [32]. Long Short-Term Memory networks (LSTM) [33] is a special
type of RNN created to solve the vanishing problem in RNN. A standard LSTM unit
Remote Sens. 2022, 14, 638
7 of 43
consists of an input gate (3), forget gate (4), an output gate (7), and a memory cell (6).
Figure 7 shows an LSTM unit and an RNN unit.
it = σ(Wixxt + Wihht−1 + bi),
(3)
ft = σ(Wf xxt + Wf hht−1 + bf ),
(4)
zt = tanh(Wzxxt + Wzhht−1 + bz),
(5)
ct = ft ∗ ct−1 + it ∗ zt.
(6)
ot = σ(Woxxt + Wohht−1 + bo)
(7)
The weights (W) and biases (b) are trainable parameters that are adjusted and opti-
mized during the training of the model.
Figure 7. (A) LSTM unit diagram, (B) regular RNN unit. In an RNN unit, all input data is used for
output. However, in an LSTM unit, a set of gates is used to control the information in memory and
decide how long and how much information may be stored.
3.3. Unsupervised Learning
Unsupervised learning is a type of learning in which hidden structures are found in
unlabeled data with minimal human supervision [6]. The primary method of unsupervised
learning is cluster analysis, such as K-Means clustering. Cluster analysis groups or segments
datasets with common attributes. In supervised learning, labeling a large amount of
agricultural data to train the model is expensive and time-consuming. Deep clustering
models can be used to avoid labeling and make the model more robust. Kang and Chen [34]
used automatic label generation by a clustering RCNN (C-RCNN) model to identify the
apple on the trees. Tang et al. [35] used K-means clustering to label the dataset and
identify weeds in the ﬁeld. Ferreira et al. [36] used DeepCluster and Joint Unsupervised
Learning from Deep Representations and Image Clusters (JULE) to identify weeds in the
ﬁeld. However, many other new deep clustering algorithms can be explored to avoid
labeling in agriculture [37].
3.4. Reinforcement Learning
Reinforcement Learning (RL) is concerned with how an agent performs appropriate
actions in an environment to maximize the rewards in a given situation. RL agents must
determine the best strategy to maximize their expected cumulative rewards. An interactive
environment receives the current state and the action chosen by the agent and indicates
the next state and reward (see Figure 8). This interaction between the DRL agent and the
training environment is repeated until the DRL agent converges to an optimal strategy for
choosing an action.
Remote Sens. 2022, 14, 638
8 of 43
Figure 8. Interaction of the agent with the environment [38]. The agent chooses an action at in
the current state st based on a policy. The environment receives the action and the current state
and outputs the next state and the reward. Reprinted with permission from ref. [38]. Copyright
2022 Elsevier.
Deep reinforcement learning (DRL) combines deep learning and reinforcement learn-
ing [39]. As Bu and Wang [39] mentioned, DRL is a promising model for building smart
farms. Chen et al. [40] used Deep Q-Network to build a decision-making system for rice
irrigation based on weather forecasts.
3.5. Data Acquired and Data Preparation
AI models convert raw data into usable models, so a training dataset is required to
train a model. The more data available, the better results are obtained. A dataset can be
collected using advanced technologies such as sensors mounted on ground-based platforms,
satellites, and unmanned aerial vehicles (UAVs) [41–46].
A sensor node is a specialized device capable of sensing physical parameters and
processing the sensed parameters using a microcontroller. In addition to processing, it can
also transmit the processed data wirelessly to neighboring nodes or router nodes using
transceiver [47]. Sensors mounted on ground-based platforms are divided into hand-held,
free-standing in the ﬁeld (Figure 9), and agricultural machinery-mounted sensors that can
measure soil, plant, and weather characteristics [41,42,48]. The advantages of ground-based
sensors are that they are less expensive than other sensors, they are not sensitive to humid
conditions, and they are more suitable for small farms. The disadvantage of these types of
sensors is that they are very time-consuming and, even when attached to farm machinery,
the information is very inefﬁcient for larger ﬁelds. Furthermore, some of these sensors are
inﬂexible in terms of the type of spectral data that can be collected [49].
Figure 9. From left to right: sensors mounted on ground-based platforms to test vineyard stress
(https://www.goodfruit.com/using-sensors-to-test-vineyard-stress/, accessed on 9 December 2021),
Sentinel2 satellites (https://www.esa.int, accessed on 3 November 2021), and unmanned aerial
vehicles (UAVs: https://precisionagricultu.re/12-potential-uses-for-uas-in-agriculture/, accessed
on 9 December 2021).
Satellite remote sensing provides synoptic, objective, and homogeneous data that
can be captured geographically and temporally, and therefore could be an efﬁcient tool to
provide high-quality information about agriculture over large areas, even across national
Remote Sens. 2022, 14, 638
9 of 43
borders [50]. Depending on the spatial and spectral resolution, repetition frequency, and
cost, the multitude of satellites and sensors orbiting the Earth can be used to provide data
for many types of applications [48]. The main disadvantage of satellite imagery is that it is
expensive at high spatial resolution. Another disadvantage is their ﬁxed schedule, thus the
data cannot be acquired in a speciﬁc time step. For example, the time step for Sentinel2 is
ﬁve days. Another disadvantage of satellite images is that they highly depend on climate
and cannot be post-processed on cloudy days [48]. For a list of satellites launched since
1970, we refer to [48,51].
An aircraft system with no pilot on board that, once programmed, allows no outside
intervention during ﬂight. Originally intended for military use, they are now used in
agriculture to monitor crops and collect images and data from anywhere in the ﬁeld [11,49].
Unlike satellites, unmanned aerial systems can collect data at a speciﬁc time step, and the
results of the collected data have a higher resolution than that of satellites. Most unmanned
aerial systems can ﬂy in precipitation, but cloud cover can affect the data unless a second
sensor is used to measure the amount of sunlight reaching the aircraft. The unmanned
aerial systems can also be expensive, but there are models that are inexpensive. The
disadvantages of unmanned aerial systems are the requirement of a human operator [49],
limited ﬂight duration, the limited weight of cargo carried, energy consumption [41], and
dependence on weather conditions [41,52]. In addition, the processing of data collected by
UAS is higher than that of satellite imagery [49].
In addition to using sensors, the dataset can also be collected from free online datasets
such as ImageNet, Microsoft COCO, and PlantVillage [46] or images can be generated
synthetically as described in [53] or by using simulation software in agriculture such as
AguaCrop and DSSAT [54]. For DL models, a large dataset is required for training to
extract appropriate features [55]. Collating and labeling a large amount of data is time-
consuming. One strategy to overcome these challenges is to increase the size of the dataset
using augmentation techniques [55]. Augmentation techniques artiﬁcially create different
versions of a real dataset to increase its size. These include rotation, blurring, scaling, and
ﬂipping of images in the dataset [55,56].
Another strategy is transfer learning and ﬁne-tuning the model [57]. In transfer
learning, the model is trained with a large dataset such as ImageNet or COCO and then
the same model is reused and re-trained for a similar task. If the dataset does not contain
enough data to train a model from scratch, this strategy can be used. Ghazi et al. [58]
investigated how ﬁne-tuning pre-trained models affects plant classiﬁcation results. For
this purpose, the AlexNet, GoogLeNet, and VGGNet models were trained, once from
scratch, and another time using ﬁne-tuning from Caffe Models. The results showed that
ﬁne-tuning the models improved their performance. Barbedo [55], however, investigated
how the size and diversity of the dataset affect the performance of DL techniques applied
to plant diseases. The results showed that even with transfer learning and augmentation
techniques, CNN might require a large number of images to extract useful features from
the data. Figure 10 shows the transfer learning task.
The next challenge is how well the trained datasets represent the real world. Ramcha-
ran et al. [12] trained the SSD object detection model to identify three diseases in cassava.
Although the model was trained on the dataset collected in the ﬁeld with a camera, the
F1-score decreased by 32% on the images from other sources. Therefore, the main focus
when collecting datasets should be how well the dataset represents the ﬁeld study.
Remote Sens. 2022, 14, 638
10 of 43
A common Large
Dataset
Model
Last layer 1
Prediction1
Custom Dataset
Hidden layers
Custom Last layer
Prediction2
Task 1
Task 2
Transfer  
weights
Figure 10. Transfer learning task. The weights and biases of a previously trained model are transferred
to a similar model, the ﬁnal layers are replaced with modiﬁed new layers, and then the model is
trained with a custom dataset.
3.6. Training and Learning
In the training step of a DL model, the dataset is divided into the training set, the
validation set, and the test set. The training set is used to train the model. The validation
dataset is a sample of data retained by the training model and used for model selection. The
model structure is determined using hyperparameters. Hyperparameters are parameters
whose values are set before the learning process begins, such as the number of hidden
layers in the model, the number of kernels in the CNN model, and the number of nodes in
each LSTM layer [32]. A test set is used to test a machine learning model after it has been
trained on an initial training dataset. When the test set is used during the training of the
model, it does not provide information about how the network will perform on unseen
data, and the evaluation of the result has no statistical signiﬁcance [32]. Figure 11 shows
the general steps from preprocessing the data to ﬁnalizing the model for prediction.
The error of a model is deﬁned as the difference between the actual value the predicted
output, and it must be minimized in the training step. The function that is used to compute
this error is known as the loss function. It can be categorized into two types: Classiﬁcation
and Regression Loss. The loss function used for the classiﬁcation contains Hinge loss,
Expositional loss, cross-entropy, Log loss, and many more. For the regression problems,
the loss function such as Mean Square Error (MSE), Mean Absolute Error (MAE), Huber
loss, and log cosh loss can be used. Each of these gives a different error for the same
prediction. The choice of a loss function depends on the algorithm. Training DL models
are based on backpropagation [59]. Backpropagation uses the chain rule and computes the
loss function’s gradient concerning the network’s weights and biases for a single input–
output example, adjusted network weights, and biases. The optimization algorithm must
be selected to minimize the loss function. The choice of optimization algorithm and loss
functions are critical. The same as loss function, there are several ways to optimize the error,
such as Stochastic Gradient Descent (SGD), SGD with momentum, Root Means Square
propagation (RMSprop), and Adam [6]. Zhang et al. [60] built up an experience to compare
the performance between SGD and Adam in identifying tomato leaf disease. The ResNet
with the SGD optimization method obtained the highest test accuracy of 96.51%. Figure 12
shows the learning steps of a DL model.
Remote Sens. 2022, 14, 638
11 of 43
Collect, clean, and label data
       training set     
test set 
validation
set
Train the model
Evaluate the model using
performance metricsl
Prediction using
trained model
acceptable
result?
Yes
No
Select the model and
hyperparameters
Change
hyperparameters
Data preprocessing (scaling, normalization, etc.)
Select the loss function,
optimization algorithm, and
and performance metrics
1. Dataset preparation
2. Training process 
3. Prediction 
Figure 11. Flowchart for DL algorithm tasks. The test data is obtained by splitting the original
dataset, which is not used for training and validation. The training data is passed to the model to
perform automatic feature extraction and validation to evaluate the model during training and tune
the hyperparameters.
Initial weights and
biases randomly
Compute the output
from successive layers
for an input batch
Compute the error
using the loss function
The error is
acceptable?
No
Compute the gradients w.r.t
weights and biases using the
backpropagation algorithm
Update weights and biases
w.r.t. gradients using the
optimization algorithm
Yes
Finish 
Start
Figure 12. During training, the parameters of the model (weights and biases) are modiﬁed using the
backpropagation and optimization algorithms to minimize loss.
Remote Sens. 2022, 14, 638
12 of 43
3.7. Evaluating the Models
Once the model is trained, the most crucial question is how good the model is. There
are several metrics for evaluating DL models. The most commonly used metrics in this
review for the regression problems are:
•
MSE: is the average of the squared differences between prediction and actual observation.
•
Root Mean Square Error (RMSE): is the square root of MSE.
•
MAE: is the average of the absolute differences between prediction and actual obser-
vation.
•
R2: is a statistical measure calculated from the variance explained by the model versus
the total variance. The higher R2 indicates, the smaller the differences between the
observed data and the ﬁtted values.
The metrics that can be used in evaluating a classiﬁcation or segmentation problem
are as follows:
•
Accuracy (AC) is the ratio of correctly predicted observation of the total observations.
•
Recall (R): also known as sensitivity, measures how many actual positives capture by
the model correctly.
•
Precision (P): also known as a positive predictive value, measures how accurate the
prediction is in classiﬁcation, i.e., the correct prediction.
•
The Average Precision (AP) is given by the area under the precision–recall curve
above. Since Precision and Recall always lie between 0 and 1, AP also lies between 0
and 1. The Mean Average Precision (mAP) is calculated by taking the mean AP over
all classes.
•
F1-score: is the weighted average of Precision and Recall.
•
Intersection Over Union (IOU): is an evaluation metric used to measure an object
detector’s accuracy on a particular dataset.
•
Area Under the ROC Curve (AUC): measures the area underneath the entire ROC curve.
3.8. Brief Review of Papers
3.8.1. Disease Detection
Plant diseases cause losses in agricultural production and endanger food security. The
most common practice in pest and disease control is to spray the crop area evenly with
pesticides [8]. This method requires signiﬁcant amounts of pesticides, which results in
high ﬁnancial and human resources and signiﬁcantly changes the environment. The use
of a deep learning algorithm that detects the exact time, location, and affected crops and
sprays the pesticides only on the affected plants can reduce resource consumption and
environmental changes.
Kerkech et al. [61] used the SegNet model to segment and detect grapevine diseases
using images with RGB and infrared ranges. The dataset was acquired using a UAV
device with two MAPIR Survey2 camera sensors, including a visible light (RGB) sensor
set for automatic illumination and an infrared sensor. The dataset was labeled using a
semi-automatic method, i.e., a sliding window to identify potentially diseased areas. Then,
each block was classiﬁed by a LeNet5 network for pre-labeling. In the end, the labeled
images were manually corrected. The SegNet recognizes four classes including the shaded
areas, soil, healthy and symptomatic vines. Two models were trained, one for the RGB
images and the other for the infrared images. The segmentation results of the two models
were also fused in two ways. The ﬁrst case was called “Fusion AND”, which means that
the symptom is considered detected if it is present in both the RGB and infrared images.
The second case is called “fusion by the union” and has the symbol ”fusion OR”, which
means that the symptom is considered detected if it is present in either the RGB or the
infrared image. The model trained with RGB images (AC = 85.13) outperformed the model
trained with infrared images (78.72). The fusion AND had the best performance, and the
fusion OR had the worst accuracy. The runtime of SegNet on a UAV image was reported to
Remote Sens. 2022, 14, 638
13 of 43
be 140 s for visible and infrared images. The fusion between the two segmented images
takes less than 2 s.
Kerkech et al. [62] used a CNN model to detect Esca disease in grapevine using UAV
RGB images. A CNN model was trained with different combinations of patch sizes 16 × 16,
32 × 32 and 64 × 64 with different color spaces including RGB, HSV, LAB, and YUV, and
vegetation indices such as ExG, ExR, ExGR, GRVI, NDI, and RGI. All the different color
spaces and vegetation indices used in this study can be calculated from the RGB images.
The results show that the CNN model trained with the RGB and YUV color spaces has a
better performance compared to the models trained with HSV and LAB. It was pointed
out that the lower accuracy of the models trained with HSV could be due to the Hue (H)
channel in HSV, which combines all color information into a single channel and is less
relevant for the network to learn the best color features. The LAB color space has one
luminance channel (L) and two chrominance channels, which do not reproduce the colors
of the diseased vineyard well.
In the next experiment, vegetation indices were added to the RGB and YUV data.
Combining vegetation indices with RGB and YUV improved classiﬁcation results in most
cases. The ﬁnal investigation concerned the models trained by combining the vegetation
indices alone. The combination of ExR, ExG, and ExGR vegetation indices with a size of
16 × 16 gave the best performance among the other inputs (including color space) and sizes
with an accuracy of 95.80%. Furthermore, the combination of YUV and ExGR vegetation
indices with sizes of 32 × 32 and 64 × 64 achieved similar performance but the run-time
was longer.
From the results, the color of the images and leaves is very important in the detection
of grapevine diseases. Furthermore, the number of channels in the input does not affect the
run-time of the model, but the size of the input and the model structure do.
Barbedo [55] investigated how dataset size and diversity affect the performance of
DL techniques applied to plant diseases. An image dataset of leaves with a small number
of samples for the CNN model was used to investigate the behavior of GoogLeNet under
different conditions. Data augmentation and transfer learning methods were used to
train the CNN. The results showed that even with transfer learning and augmentation
techniques, CNN requires a large number of images to extract useful features from the data.
Even though a large number of images can be easily acquired with the new technology,
labeling the dataset is time-consuming. One option proposed in this paper was to share
the dataset, but as mentioned earlier, the two environments are not the same in agriculture.
The effect of removing the background of the images on the accuracy of the model was
also investigated. The model has trained again with the images without background. The
model has trained again with the images without background. The results show different
behaviors with respect to the accuracy of the model, including no signiﬁcant effect, a
signiﬁcant improvement in accuracy in some cases, a signiﬁcant decrease in accuracy, and
mixed results (improved accuracy in some diseases while the error rate increased in others).
From the signiﬁcant decrease in accuracy for some plants, it was inferred that the CNN
model sometimes uses the background of the model to classify the images. An attempt that
can be made here is to train the model with both datasets (with and without background)
and investigate the accuracy of the model in this case.
Ferentinos (2018) [63] used AlexNet, AlexNetOWTBn [64], GoogLeNet, Overfeat [10],
and VGG models to identify 25 plant disease in 58 different classes of (plant, disease) com-
binations, including some healthy plants. The dataset used was images of healthy and in-
fected leaves of the plants from the Plantvillag database (https://github.com/spMohanty/
PlantVillage-Dataset, accessed on 17 November 2021). More than 37.3% of the images in
the dataset were taken under real cultivation conditions in the ﬁeld, and the other images
were taken under laboratory conditions. In the ﬁrst experiment, the number of images
acquired under laboratory conditions and real conditions was kept similar in the training
and test set, and the models were trained using this dataset. The VGG model performed
best on the test set with an accuracy of 99.53%.
Remote Sens. 2022, 14, 638
14 of 43
They also investigated the signiﬁcance of the presence of ﬁeld-captured images in
the training set. From the 58 available classes of the form (plant, disease), the 12 that
contained images of both types were selected. Two experiments were conducted with
these 12 classes, and two CNN models were developed: one was trained with images
under laboratory conditions and tested with images under ﬁeld conditions, and another
was trained with images under ﬁeld conditions and tested with images under laboratory
conditions. Although the number of images acquired under ﬁeld conditions was less than
the number of images acquired under laboratory conditions, the CNN model trained only
with images under ﬁeld conditions performed better with an accuracy of 68% than the
CNN model trained only with images under laboratory conditions with an accuracy of
33%. This result shows the importance of the presence of the images acquired under ﬁeld
conditions. From the misclassiﬁcation image, they point out some problematic situations,
including images with extensive partial shading on the leaves, images with multiple objects
in addition to the image, images where the leaf occupies a very small and non-centric part
of the frame, and images without leaves.
Jiang et al. [65] implemented the CNN models to detect ﬁve common apple leaf
diseases using images from the ﬁeld. By applying data augmentation, such as rotational
transformations, horizontal and vertical ﬂips, intensity disturbances, and Gaussian noise,
26,377 disease images were generated. The problem with SDD is that it cannot detect
a small object, and also, an object can be detected multiple times. To overcome these
drawbacks, they developed an SSD model with a VGG-INCEP as the backbone, where
two GoogLeNet inception layers replace two convolutional layers of the VGG model.
Moreover, the structure of feature extraction and fusion is designed by applying the
Rainbow concatenation method instead of the pyramid (which is used in the SSD model) to
improve the performance of feature fusion. The results showed that the data augmentation
improved the accuracy of the model by 6.91% compared to the original dataset. Moreover,
the proposed model achieved the best performance compared to faster R -CNN and SSD
with VGG and Rainbow SSD (RSSD) model.
To investigate the effect of using a deep model as a backbone, ResNet-101 was used
as a feature extractor for SSD. The results show that ResNet-101 does not lead to any
improvement. In terms of speed, Faster RNN was the slower model with more accuracy.
The proposed model with 78.80% mAP and 23.13 Frames Per Second (FPS) was more
accurate than SDD and RSSD, but SSD outperformed the other models in terms of time
inference. By examining the misclassiﬁed images, it was indicated that similarity between
diseases, misclassiﬁed background, and light condition were the challenges in classiﬁcation.
Karthik et al. [66] proposed a Residual Attention Network for disease detection in
tomato leaves. The main idea of attention is to focus on the relevant parts of the input to
produce outputs. The dataset was collected from the open-source website Plantvillage and
contained one healthy class and three diseases. They implemented three models. One was
a traditional CNN model, the second used the three residual layers introduced into the
CNN model as part of the ResNet architecture, and the last used an attention mechanism
on top of the residual CNN for effective feature learning. The traditional CNN-based
methods focus on ordered feature learning, starting from basic image-level features such
as edges, color, etc., to complex texture-based differences [66]. In the deeper layer, some
important features extracted in the ﬁrst layer may be lost. The residual layers are designed
to avoid this problem [66]. They concatenate the extracted features from the earlier layers
with the deeper layers. In addition, the attention mechanism is used to extract the relevant
parts of the feature maps. The Residual Attention Network CNN performed better with an
overall accuracy of 98% than the Vanilla Residual Network with an accuracy of 95% and
the traditional CNN model with an accuracy of 84%.
Remote Sens. 2022, 14, 638
15 of 43
Liu et al. [67] implemented the model Cascade Inception to detect four common apple
leaf diseases in images captured in the ﬁeld. The Cascade Inception was a modiﬁed AlexNet
model with inception layers from GoogleNet. Various data enhancement methods such as
image rotation, mirror symmetry, brightness adjustment, and PCA jittering were applied to
the training images. Moreover, the fully connected layers were replaced by convolutional
layers, which results in fewer parameters and avoids overﬁtting. The proposed model was
trained using the optimization method Nesterov Accelerated Gradient (NAG) and achieved
an accuracy of 97.62%. The performance of the proposed model was compared with
SVM and BP neural networks, standard AlexNet, GoogLeNet, ResNet-20, and VGGNet-
16. Transfer learning method was used to train VGGNet-16 and achieved 96% accuracy.
Standard AlexNet, GoogLeNet, and ResNet-20 were trained from scratch using SGD-
optimization and achieved a maximum accuracy of 95.69%. The SVM and BP, which
achieved an accuracy of less than 60%, show that the traditional approaches rely heavily
on the expert developed classiﬁcation features to improve the recognition accuracy. They
also investigated the effect of data augmentation methods and optimization algorithms
on accuracy. The model with the SGD optimizer achieved 93.32% accuracy, while the
model with NAG achieved 97.62% accuracy. The data augmentation methods improved the
performance of the model by 10.83%. The advantage of the model is that it outperformed
other CNN models in terms of training time and memory required. Furthermore, the
number of parameters of the model was less than AlexNet and GoogleNet. One point
that emerges from the paper is that GoogleNet and AlexNet were trained using the SGD
optimizer, and the proposed model was trained using the NAG method, but as mentioned
in the paper, SGD has the “local optimum” problem. In addition, the models were not
compared based on the inference time.
Ramcharan et al. [12] trained the SSD object detection model to identify three diseases,
two types of pest damage, and nutrient deﬁciency in cassava at the mild and pronounced
stages. A dataset was collected from the ﬁeld, which was divided into 80–20 as training
and testing sets. The model achieved 94 ± 5.7% mAP on the test dataset. The trained model
was used on a mobile phone to investigate the performance of the model in the real world.
One hundred twenty images of leaves were captured using a mobile device of the study
experiment, and the model inference was run on a desktop and mobile phone to calculate
the performance metrics of the trained model. The results show that the average precision
of the model on the real dataset decreases by almost 5%, but the average recall decreases
by almost half, and the F1-score decreases by 32%. Furthermore, the results show that the
model performs better on the leaves with pronounced symptoms than on the leaves where
the symptoms are only mildly pronounced.
Remote Sens. 2022, 14, 638
16 of 43
Table 1. Feature descriptions of recent published papers in the ﬁeld of “Disease Detection”.
References
Application
Data Used
Model
Metric Used
Model Performance
Kerkech et al. [61]
Detect Esca disease in grapevine
using UAV RGB images.
The images were collected using
a UAV system with an
RGB sensor.
A CNN model was trained with
different combinations of patch
sizes and different color spaces.
AC
The CNN model trained with the RGB
and YUV color spaces has a better
performance compared to the models
trained with HSV and LAB. Moreover,
The model was obtained by combining
YUV and RGB trained with vegetation
indices gave better performances than
the models trained with YUV and RGB.
Kerkech et al. [62]
Segmentation of the plant
symptomatic area
A Quadcopter drone with two
camera sensors
SegNet
P, R, F1, AC
The model trained with RGB images
outperformed the model trained with
infrared images.
Barbedo [55]
Disease detection on 12 plants
with a variety of diseases.
The images were taken with a
variety of digital cameras and
mobile devices.
GoogleNet
AC
CNN’s AC using the original image as
the dataset was 84% and using the
removed background was 87%.
Ferentinos (2018) [63]
Identiﬁcation of 25 plant disease
in 58 different classes of
(plant, disease).
https:
//github.com/spMohanty/
PlantVillage-Dataset, accessed on
17 November 2021
AlexNet, AlexNetOWTBn,
GoogLeNet, Overfeat, and
VGG models
AC
The VGG model performed best on the
test set. Furthermore, the CNN model
trained only with images under ﬁeld
conditions performed better than the
CNN model trained only with images
under laboratory conditions.
Jiang et al. [65]
Identiﬁcation of apple
leaf diseases.
Images were taken in the ﬁeld,
and some of them were in
the laboratory.
SSD with base VGG-INCEP.
mAP
SSD with VGG-INCEP as base achieved
better performance with an mAP of
78.80% compared to FR-CCN and SSD
with VGG and ResNet as the base.
Remote Sens. 2022, 14, 638
17 of 43
Picon et al. [68] used DL model to detect seventeen diseases of ﬁve crops (wheat,
barley, corn, rice, and rapeseed) in images captured in the ﬁeld. The dataset contained
several challenges, such as multiple diseases on the same plant, similar visual symptoms
among diseases, images of early and early-stage diseases, and diseases of leaves, and stems.
To improve the accuracy of the model, the crop ID was used in the network. The crop ID
was deﬁned as a categorical vector with K components, where K is the number of crops in
the model. Several models were trained. The ﬁrst approach was to train an independent
model for each crop and the second approach was to train a single model for the entire
dataset. The results show that the multi-crop model had a similar performance to splitting
the training dataset into the different crops (1% increased accuracy). However, the class of
diseases with fewer images in the training set may beneﬁt from the multi-crop model. The
second approach was to add the crop ID to the multi-crop model. The results show that by
adding crop id, the model can still beneﬁt from more images for training, while crop ID
information helps the network to discriminate between similar diseases.
Chen et al. [69] used pre-trained MobileNet V2 networks to identify twelve rice
plant diseases. The dataset was collected from online sources and real agricultural ﬁelds.
An attention mechanism was added to the model, and transfer learning was performed
twice during model training to achieve better performance. The MobileNet-V2 achieved
94.12% accuracy on the PlantVillage dataset, while the MobileNet-V2 with attention and
transfer learning achieved 98.26%. The ﬁve CNNs such as MobileNetv1, MobileNet-V2,
NASNetMobile, EfﬁcientNet-B0, and DenseNet121 were selected for comparison with
the proposed models. In addition, two other networks named MobileNetv2-2stage and
MobileAtten-alpha were trained. In the MobileNetv2-2stage model, transfer learning was
performed twice to identify the images of plant diseases.
Similarly, in MobileAtten-alpha, the attention method was used instead of transfer
learning twice. The proposed model (using attention and transfer learning twice) achieved
the the second best accuracy of 98.84%. The DenseNet121 with an accuracy of 98.93%
outperformed other models. MobileNetv2-2stage and MobileAtten-alpha achieved an
accuracy of 98.68% and 96.80%, respectively. The proposed model was trained with images
from the ﬁeld and achieved an accuracy of 89.78%.
3.8.2. Fruit Detection and Yield Forecast
Yield forecasting is one of the most important and popular topics in precision agricul-
ture because it is the basis for yield mapping and estimation, supply and demand matching,
and crop and harvest management [8]. Modern approaches go far beyond simple forecast-
ing based on historical data but incorporate methods from DL to provide a comprehensive
multidimensional analysis of crop, climatic and economic conditions to maximize yields.
Remote Sens. 2022, 14, 638
18 of 43
Table 2. Feature descriptions of recent published papers in the ﬁeld of “Disease Detection”.
References
Application
Data Used
Model
Metric Used
Model Performance
Karthik et al. [66]
Identifying the type of infection
in tomato leaves.
Plant Village Dataset.
Residual CNN with attention.
AC
Residual CNN with attention
with an AC of 98% achieved
better performance compared to
CNN and residual CNN.
Liu et al. [67]
Identiﬁcation of 4 apple leaves
diseases.
Images were taken in ﬁeld using
digital color camera.
CNN (AlexNet+ +Inception
layers from GoogleNet).
AC
Their model with an AC of
97.62% performed better than
GoogLeNet, ResNet-20,
VGGNet16, SVM, and BP,
AlexNet.
Ramcharan et al. [12]
Identiﬁcation of cassava pests
and diseases.
Dataset from [70]
SSD
F1-score
The F1-score decreased by 32%
when moving from the test set to
real images.
Picon et al. [68]
Identiﬁcation of 17 diseases and
ﬁve crops by adding metadata to
the model.
Images were taken by cell phone
in real ﬁeld wild conditions.
CNN (ResNet50
AC, R2, Negative and positive
predictive value
Adding plants species
information to the model by
concatenating plant information
in the embedding layer improved
the performance of the model
(AC = 0.98)
Chen et al. [69]
Identify rice plant diseases from
collected real-life images.
Online sources and agricultural
ﬁelds.
MobileNet-V1, MobileNet-V2,
DenseNet-121, NASNetMobile,
EfﬁcientNet-B0, proposed model.
AC, R, P, F1-score
The proposed model with an
accuracy of 0.98 out- performed
the other models.
Remote Sens. 2022, 14, 638
19 of 43
Silver and Monga [71] trained ﬁve CNN models to estimate grape yield from RGB
images taken in a vineyard on harvest day using the camera of a Samsung Galaxy S3. The
images of 40 grapevines were split into two parts, one for the left cordon and one for the
right cordon, resulting in a total of 80 cordons. A simple CNN was trained by inputting
the RGB images of the left and right cordons and estimating the grape yield. The second
model was the same as the ﬁrst model, but the input to the model was the right cordon
images and the inversion of the left cordon images to look similar to right cordon images.
The third model, an autoencoder network, is trained to a high level of accuracy and the
CNN encoder weights are transferred as starting weights into the CNN model for the yield
estimation model. In the fourth model, an autoencoder model was trained to output the
density map of the grapes in the image. Then, the weights of the encoder are transferred as
initial parameters into the CNN model for yield estimation. The last model was trained
with the output of the autoencoder for the density map as input to the CNN model for yield
estimation instead of the RGB images. The CNN models with ﬂipped images outperformed
the simple CNN model with an MAE % of 15.43. The models of transfer learning from
Density Map Network Representation with MAE % of 11.79 achieved the best performance
among the other models. The last model with MAE % of 15.99 did not perform as well as
the fourth model because the accuracy of the density map estimates was quite low. The
results show that transfer learning, when used properly, can improve recognition accuracy.
Aguiar et al. [72] trained SSD MobilenetV1 and the Inception model to detect Grape
Bunch in Mid Stage and early stages and then transferred the trained model to the TPU-
Edge device to investigate the temporal accuracy of the model. The same strategy in [18]
was used to collect the dataset and it is publicly available (https://doi.org/10.5281/zenodo.
5114142, accessed on 3 November 2021) with 1929 vineyard images and their annotation.
Overall, SSD MobileNet-V1 performed better than the Inception model, as it had a higher
F_1 score, AP, and mAP. The early stage was more difﬁcult to detect than the middle growth
stage. The ﬁrst class represented smaller clusters that were more similar in color and
texture to the surrounding foliage, making them more difﬁcult to detect. SSD MobileNet-V1
showed an AP of 40.38% in detecting clusters at an early growth stage and 49.48% at a
medium growth stage. In terms of time, SSD MobileNet-V1 was more than four times faster
than the Inception model on TPU-Edge Device.
Ghiani et al. [31] used Mask R-CNN with ResNet101 as a backbone which was pre-
trained with the dataset COCO (https://cocodataset.org/#home, accessed on 18 November
2021) for detecting grape branches on the tree. An open-source dataset GrapeCS-ML [73]
containing more than 2000 images without annotation of ﬁfteen grape varieties at different
stages of development in three Australian vineyards was used to train the model. In
addition to the GrapeCS-ML dataset, 400 images were collected from the island of Sardinia
(Italy). The result obtained by applying the detector to the test samples was an mAP value
of 92.78%. To investigate the generalizability of the proposed model, the model trained on
the GrapeCS-ML dataset was tested on its internal dataset. The dataset contained different
grape varieties, vegetation, and colors than the GrapeCS-ML dataset. An mAP of 89.90%
was obtained with the internal dataset, indicating that the model can be used in other ﬁelds.
To investigate the signiﬁcance of the size of the dataset used for training and the importance
of the augmentation techniques, the size of the original dataset was reduced to 10% of the
training images in one case with augmentation and the other case without augmentation of
the dataset. The mAP was reduced by up to 5%, especially in the experiments performed
without augmentation. It was observed that the recognition accuracy decreased for images
with overlap between clusters.
In Milella et al. [74], a system for the automatic estimation of harvest volume and for
detecting grapes in vineyards using an RGB-D sensor on board an agricultural vehicle has
been proposed. An RGB-D sensor is a special type of depth detection device that works in
conjunction with an RGB camera and is able to add depth information to the conventional
image pixel by pixel. The approach to determine the crop volume involved three steps: the
3D reconstruction of the vine rows, the segmentation of the vines using a deep learning
method, and the estimation of the volume of each plant. In the ﬁrst step, the depth output
Remote Sens. 2022, 14, 638
20 of 43
from the camera was not used because the parameters of the algorithm are ﬁxed and cannot
be conﬁgured. Instead, the semi Global Matching (SGM) algorithm was used, which is a
computer vision algorithm for estimating a dense disparity map from a rectiﬁed stereo
image pair. A box-grid ﬁlter is then used to merge the point clouds.
In segmentation, a segmentation algorithm was ﬁrst used to separate the canopy from
the background using the green–red vegetation index (GRVI), and then k-means were
used to identify each plant. Based on the results of the clustering algorithm, different
plants were calculated and an estimate of the volume per plant was performed. Finally, the
pre-trained AlexNet, VGG16 and VGG19, and GoogLeNet were trained to perform grape
cluster detection in 5 different classes (grapes, vineyard stakes, vine stems, cordons, canes,
leaves, and background). The VGG model performed the best with an accuracy of 91.52.
Santos et al. [26] used deep learning models and computer vision models to estimate
grape wine yield from RGB images. Images were captured with a Canon EOS REBEL T3i DSLR
camera and a Motorola Z2 Play smartphone from five different grape varieties. The dataset
named Embrapa Wine Grape Instance Segmentation Dataset (WGISD) with 300 RGB images
is publicly available (https://doi.org/10.5281/zenodo3361736, accessed on 18 November
2021). Models from DL such as Mask R-CNN, YOLOv2, and YOLOv3 were trained to detect
and segment grapes in the images. Then, an image processing algorithm called Structure-
from-Motion (SfM) was used to perform spatial registration, integrating the data generated by
the CNN-based step. In the final step, the results of the CV model were used to remove the
clusters detected in different images to avoid counting the same clusters in several images. The
Mask R-CNN with ResNet101 as the backbone outperformed YOLOv2 and YOLOv3 in terms
of object detection, but the YOLO model outperformed the Mask R-CNN in terms of detection
time. The worst performance was obtained with YOLOv3. To verify the performance of Mask
R-CNN+SfM, 500 key-frames of a video were used, and the result is shown in a video at
https://youtu.be/1Hji3GS4mm4, accessed on 17 November 2021.
Palacios et al. [75] applied the method of deep learning to detect the flowering of
the vine and used it for the estimation of early yield estimation. Images of six grapevine
varieties were acquired using a mobile platform developed at the University of La Rioja.
The RGB camera was a Canon EOS 5D Mark IV RGB with a full-frame CMOS sensor. The
ground truth was acquired using the algorithm in [76]. This algorithm was developed to
process only images with a single inflorescence and a dark background. In the first step,
SegNet was used with VGG (VGG16 and VGG19) as a backbone to segment and extract
the inflorescences contained in the images. Then, these regions were used to count the
flowers in each inflorescence using three algorithms, including SegNet, Watershed Flower
Segmentation, and a linear model. The SegNet with VGG19 as backbone outperformed the
model with VGG16 in terms of IOU and F1-score. For flower recognition, the SegNet model
with VGG19 was trained to classify a group of flowers per image into three classes including
contour, center, and background. After segmentation, false-positive filtering of flower
segmentation was performed. Here, the flowers whose center and contour was segmented,
and whose contour surrounded the center above a certain threshold were considered as
true positives. The F1-score reached its highest value when contour filtering was set to 50%,
resulting in an F1-score of 0.729. The best F1-score for the watershed approach was 0.708
and the worst performance in counting flowers was obtained with linear regression in the
form of the Root Mean Square metric. The number of flowers counted using SegNet-VGG19
for inflorescence extraction and flower detection, and flower counting using the algorithm
of [76] showed a correlation with R2 close to or above 0.75 for all cultivars.
Remote Sens. 2022, 14, 638
21 of 43
Table 3. Feature descriptions of recent published papers in the ﬁeld of “Fruit detection and Yield estimation”.
References
Application
Data Used
Model
Metric Used
Model Performance
Silver and Monga [71]
Estimate grape yield from RGB
images.
Images were taken in of a
vineyard on harvest day using
the camera of a Samsung Galaxy
S3.
Five CNN models from scratch
trained with ﬁve different
techniques for training
MAE
The models of transfer learning
from Density Map Network
Representation. with MAE% of
11.79 achieved the best
performance among the other
models.
Aguiar et al. [72]
Detect Grape Bunch in Mide
Stage and early stages.
The images were acquired from
four different vineyards in
Portugal.
SSD Inception-V2, SSD
MobileNet- V1
IOU, mAP, R
The SSD Inception-V2 had higher
precision than the SSD
MobileNet-V1 at all conﬁdence
values, but lower recall. In terms
of time, SSD MobileNet-V1 was
more than four times faster than
the Inception
Ghiani et al. [31]
Detecting grape branches in the
tree
GrapeCS-ML [73] and 400 images
were collected from ﬁeld
Mask R-CNN with ResNet101 as
back- bone
IOU, mAP
The model achieved an mAP
value of 92.78%
In Milella et al. [74]
Estimation of harvest volume
and for detecting grapes in
vine-yards
Images was collected from ﬁeld
using RGB-D sensor
AlexNet, VGG, GoogleNet
P, R, AC, TP (true positive)
The VGG model performed the
best with an accuracy of 91.52%.
Santos et al. [26]
Estimate grape wine yield from
RGB images.
Images were captured with a
camera from ﬁve different grape
varieties.
Mask R-CNN and YOLOv2 and
YOLOv3
P, R, F1-score
The Mask R-CNN with ResNet
101 as the back-bone
outperformed YOLOv2 and
YOLOv3 in terms of object
detection, but the YOLO model
outperformed the Mask R-CNN
in terms of detection time.
Palacios et al. [75]
Detect the ﬂowering of the vine,
and used it for the estimation of
early yield estimation
Images of six grapevine varieties
were acquired using a mobile
platform
SegNet model with VGG19
IOU and F1-Score
The number of ﬂowers counted
using SegNet- VGG19, and
ﬂower counting using the
algorithm of [76] showed a
correlation with R2 close to or
above 0.75 for all cultivars.
Remote Sens. 2022, 14, 638
22 of 43
Kang and Chen [34] implemented DaSNet-v2, which is an ’Encoder–Decoder with
atrous convolution developed in Deeplab-v3+ to detect and segment the apple in an
orchard for harvesting by a robot. Atrous convolution is a type of convolutional layer that
allows control of the resolution of the features computed by the CNN. The dataset was
collected from an apple orchard as RGB-D and RGB. The RGB-D was used to visualize the
environment. A lightweight model, Resnet 18, was used as the backbone of the DaNet-v2
to ensure its deployment on the Jetson-TX2 with limited computing capacity. In addition,
the model was trained with the Resnet50 and Resnet101 backbones. The performance of
the model with the Resnet101 backbone was compared with DaSNet-v1, YOLO-v3, faster-
RCNN, and the Mask-RCNN. DaSNet-v2 and Mask-RCNN with F1-score of 0.873 and
0.868, respectively, outperformed the other models. However, DaSNet-v2 outperformed
mask-RCNN with a computational efﬁciency between 306 and 436 ms with a time of
1.3 s. The results also show that single-stage detection models such as Yolo have better
computational efﬁciency compared to two-stage detectors. The model was implemented
on Jetson-TX2, a lightweight backbone of Resnet-18, and the experimental results show
that DaSNet-v2 with Resnet-18 can achieve similar performance in recall and precision of
detection compared to YOLO-v3. Environmental factors such as strong sunlight reﬂection,
shadows, and appearance variations of fruits in color, shape, occlusion, or viewing angle
could lead to false-negative detection results. RGB-D images were processed using DaSNet-
v2 and the PPTK toolbox, a Python package for image visualization, to deploy the robot in
the orchard.
Koirala et al. [77] developed a DL model, called Mango-YOLO, based on YOLO-v3
and YOLO-v2 (tiny) for counting mangoes on trees. YOLOv2 (tiny) has a small architecture
with only nine convolutional layers, six pooling layers, and one detection layer, sacriﬁcing
accuracy for speed. YOLOv3 [22] is based on Darknet-53 and improves upon YOLOv2 [78].
The Mango YOLO had 33 layers compared to 106 layers in YOLO-v3 and 16 layers in YOLO-
v2 (tiny). The reduction in the number of layers is expected to reduce computation time
and detect mangoes more accurately. The model was trained on the dataset collected from
ﬁve orchards. The Mango-YOLO achieved better performance with an accuracy of 0.967%
compared to YOLO-v2 (tiny) (0.9% ) and YOLO-v3 (0.951%). In terms of time inference,
the Mango YOLO with 15 ms was faster than YOLO-v3 (25 ms) and slower than YOLO-v2
(tiny) (10 ms). Moreover, Mango-YOLO was trained once from scratch on the augmented
dataset, and the second time transfer learning was used using the COCO dataset. The
models had the same performance on the test set, and the reason was explained by the fact
that the COCO dataset does not contain Mango images. The false detection over images
taken with Canon camera shows resizing of the images and results in image distortion
with leaves taking a curved shape resembling the fruit and overexposed areas on branches,
trunks, and leaves.
Liang et al. [79] applied the SSD network to detect mango and almond on tree fruits.
The dataset in [80] was used to train the model. The SSD model used the original and
sampled a patch such that the minimum Jaccard overlap with the objects is 0.1, 0.3, 0.5,
0.7, or 0.9, and ﬁnally randomly sampled the input image. The size of each sampled area
and the minimum Jaccard overlap are critical for object detection. These two parameters
were changed to adopt the SSD model for small mango detection. Using VGG16 as the
basic framework for the SDD outperformed the SSD with ZFNet. Furthermore, using the
input image size of 400 × 400 and 500 × 500 as the input of the model, the model achieved
better performance than SSD with an input size of 300 × 300. The model outperformed the
faster RCNN in terms of speed and accuracy. The challenges related to mango detection
on the tree were considered in the paper: the size of mango on the whole image, blocking
the mango with leaves, branches, resizing the original image, making mango smaller, and
similarity between mango and background.
Tian et al. [81] developed YOLO-V3 with DenseNet as the backbone to detect apples
on trees. They used two datasets for training. The ﬁrst one contained images of apples at
one growth stage, and the second one contained images taken at different growth stages.
Remote Sens. 2022, 14, 638
23 of 43
The model showed better performance for mature apples than for young and growing
apples because the color features were more prominent, the individual volume was larger,
and there was less overlap. The results also showed that the F1-score of the model trained
with the ﬁrst dataset was higher than that of the model trained with the second dataset.
The performance of the trained model decreased for images with partial occlusion of apples
with branches and leaves but is still an acceptable result (IOU = 0.889 for mature apples ).
The model achieved the best performance compared to Faster R-CNN, YOLOV2, and
the original YOLOv3. In terms of time inference, the model was faster than Faster R-CNN
and similar to YOLOv3. The F1-score and IOU of the model without data augmentation
methods decreased by 0.033 and 0.058, respectively.
Zhou et al. [82] implemented an SSD model with two lightweight backbones Mo-
bileNetV2 and InceptionV3, to develop an Android APP called KiwiDetector that detects
kiwis in the ﬁeld. Quantization is a technique for performing computations and storing
tensors with bit widths smaller than ﬂoating-point numbers. When training a neural net-
work, 32-bit ﬂoating-point weights and activation values are typically used. A quantized
model performs some or all operations with tensors using integers instead of ﬂoating-
point values. This allows the computational complexity to be reduced and the trained
model can be used on devices with lower resource requirements. The quantization method
was used to compress the model size and improve the detection speed by quantizing
the weight tensor and activation function data of convolutional neural networks from 32
to bit ﬂoating-point numbers to an 8-bit integer. The results showed that MobileNetV2,
quantized MobileNetV2, InceptionV3, and quantized InceptionV3 achieve a true detec-
tion rate of 90.8%, 89.7%, 87.6%, and 72.8%, respectively. The quantized MobileNetV2 on
the Huawei P20 smartphone outperformed the other models in terms of detection speed
(103 ms/frame) and size. Although the SSD with MobileNetV2 was more accurate than the
SSD with quantized MobileNetV2, the SSD with quantized MobileNetV2 was 37% faster.
The problem with kiwi detection was that overlapping kiwis were reported, which the
model counts as one kiwi.
3.8.3. Weed Detection
Besides disease, weeds are considered to be a prevalent threat to agricultural produc-
tion. These are plants considered undesirable in a particular situation, as they may compete
with crops for sunlight and water, resulting in crop and economic loss. One signiﬁcant
problem in weed control is that they are difﬁcult to detect and distinguish from crops
[8]. DL algorithms can improve weed detection and discrimination at a lower cost with
reduced environmental problems and side effects. These technologies could power robots
that detect and remove weeds.
Bah et al. [83] proposed a CNN model with unsupervised training dataset annotation
collection for weed detection in UAV images of bean and spinach ﬁelds. They assumed that
crops are grown in regular rows and that plants growing between the rows are considered
weeds. The Hough transform was applied to the skeleton to detect the rate of plant rows,
and then a simple linear iterative clustering (SLIC) algorithm was applied to create a
marker and delineate the plant rows. This algorithm generated superpixels based on
k-mean clustering. After row detection, a blob coloring algorithm was used to identify the
weeds. The unsupervised training dataset was used to train ResNet18 for weed detection
in the images. The supervised learning method performed 6% better than the unsupervised
learning method in the bean ﬁeld and about 1.5% better in the spinach ﬁeld. The low
number of weeds between rows may explain the difference in performance in the bean
ﬁeld. The performance of the model was compared with SVM and RF. In general, ResNet18
shows better performance in supervised and unsupervised learning methods than SVM
and RF.
Remote Sens. 2022, 14, 638
24 of 43
Table 4. Feature descriptions of recent published papers in the ﬁeld of “Fruit detection and Yield estimation”.
References
Application
Data Used
Model
Metric Used
Model Performance
Kang and Chen [34]
Counting apple on tree.
The images were taken in the
ﬁeld with a camera.
C-RCNN+LedNet with a
light-weight (LW) as backbone,
resnet-50, resnet-101, darknet-53.
IOU, P, R, F1-score
LedNet with resnet-101 achieved
an AC of 0.864 and LedNetwith
LW achieved an Ac of 0.853.
Koirala et al. [77]
Counting mango on trees.
The images were taken in the
ﬁeld.
CNN (Mango-YOLO)
F1-score
Mango-YOLO with an F1-score of
0.97 achieved better performance
compared to faster R-CNN, SSD,
and YOLO.
Liang et al. [79]
Detection of mango and almond
fruits on the tree.
https:
//arxiv.org/abs/1610.03677,
accessed on 15 November 20221
SSD with VGG-16 and ZFNet
IOU, F1-score
The model outperformed the
faster RCNN in terms of speed
and accuracy.
Tian et al. [81]
Detection of apple in image and
yield estimation.
Image capture was performed
with a camera in the ﬁeld.
Improved YOLO-V3 with
DenseNet as the backbone.
F1-score
The proposed model with an
F1-score of 0.817 had better
performance compared to
YOLO-V2, YOLOV3, and Faster
R-CNN.
Zhou et al. [82]
Detection of kiwi fruit in the
orchard with android
smartphones.
Collected from the orchard.
MobilNetV2, quantized
MobileNetV2, InceptionV3,
quantized InceptionV3.
IOU, TDR, FDR
Quantized MobileNetV2
outperformed the other models
in terms of accuracy, speed,
and size.
Remote Sens. 2022, 14, 638
25 of 43
Ferreira et al. [36] implemented the unsupervised learning models JULE and Deep-
Cluster to detect weeds in the ﬁeld. The JULE consists of stacked multiple combinations of
convolutional layer, batch normalization layer, ReLU layer, and pooling layer. AlexNet and
VGG16 were implemented as the basis of the DeepCluster model to extract features, and
then K-means is used as the clustering algorithm. Two datasets, Grass-Broadleaf [84] and
DeepWeeds [85] were used in this work. The DeepCluster model performed better than
the JULE model on both datasets with a large number of clusters. The DeepCluster with a
base of Alexnet and VGG achieved similar performance, with Alexnet performing better
on DeepWeed and VGG on the other dataset. To investigate the effect of transfer learning
on unsupervised learning, the pre-trained VGG and AlexNet were used on ImageNet. The
pre-trained model did not improve the accuracy of Grass-Broadleaf, but it did improve the
accuracy of DeepWeed. The data augmentation also improved the accuracy of the unsuper-
vised learning methods. They also used semi-supervised data labeling. Semi-supervised
learning is a machine learning approach that deals with the use of labeled and unlabeled
data. In the semi-supervised method, labeled images from the DeepCluster model were
used to train Inception-V3, VGG, and ResNet. Inception-V3 and VGG outperformed ResNet
on the Grass-Broadleaf and DeepWeeds dataset, respectively.
Milioto et al. [86] modiﬁed Encoder–Decoder CNN architecture in [87] to distinguish
weeds from crops and soil. The number of convolutional layers was decreased to reduce
time inference, and additional vegetation indices (14 channels) were included in the input
for more accurate detection. The dataset of three ﬁelds was used. Three networks were
trained with different inputs: one with RGB images, another with RGB and near-infrared
(NIR) images, and the last one was trained with 14 channels such as RGB, Excess Green
(ExG), Excess Red (ExR), color index of Vegetation Extraction (CIVE), and Normalized
Difference Index (NDI). To investigate the generalization ability of the proposed model,
the model was trained on the images of one ﬁeld and tested on images of all ﬁelds. The
results indicate that feeding these 14-channels into the input can speed up the training
and improve the performance of the model on the unseen dataset compared to the model
trained on RGB images and RGB+NRI but still, the recall and precision of the model on the
unseen ﬁeld drop sharply (11–50%).
Another experience was conducted to investigate the generalization capacity of the
proposed model. The trained model was retrained on the unseen dataset with 10, 20, 50, or
100 images in the training set. The performance of the RGB network when retrained with
100 images is almost the same as the performance of the proposed model trained with ten
images. The inference time of the proposed model on PC and Jetson TX2 platform was also
found to be 44 ms and 210 ms, respectively, which is slower than the model trained with
RGB images with 31 ms and 190 ms, respectively.
Lottes et al. [30] developed an encoder–decoder Fully Convolutional Network (FCN)
with the sequential model for weed detection in sugar beet ﬁelds. The encoder–decoder
FCN was used to extract features from the input images, and the sequential model processed
the ﬁve images in a sequence using 3D convolution and output a sequence code that was
used to learn sequential information about the weeds in ﬁve images in a sequence. The
results showed that the encoder-decoder with a sequential model improved the F1-score of
the module by almost 11–14% compared to the encoder-decoder FCN. The results indicated
that the changes in the visual appearance of the images in the training and test dataset
could lead to a decrease in model performance, and adding additional information, such as
vegetation indices, leads to better generalization for other ﬁelds.
Remote Sens. 2022, 14, 638
26 of 43
Table 5. Feature descriptions of recent published papers in the ﬁeld of “Weed Detection”.
References
Application
Data Used
Model
Metric Used
Model Performance
Bah et al. [83]
Weed detection in bean and
spinach ﬁelds.
The images were taken with a DJI
Phantom 3 Pro drone.
Simple linear iterative clustering
(unsupervised)+ CNN (Resnet18)
AC
CNN trained with unsupervised
labeling achieved an AC of 88.73
(spinach) and 94.34 (bean), and with
supervised labeling achieved an AC
of 94.84 (spinach) and 95.70 (bean).
Ferreira et al. [36]
Identiﬁcation of weeds with
unsupervised clustering.
The Grass-Broadleaf Dataset
in [84] and DeepWeed in [85] .
JULE, DeepCluster
AC, NMI
DeepCluster achieved better
performance than JULE.
Milioto et al. [86]
Identiﬁcation of weeds
(additional vegetation indices
added to the input).
Data was taken with a 4-channel
RGB+NIR camera.
Mask R-CNN.
IOU, mIOU
The model achieved better
performance by adding an extra
channel at the input of the model
(IOU = 80.8%)
Lottes et al. [30]
Crop and weed detection in the
sugar ﬁeld.
Dataset was taken with robots
equipped with a 4-channel with
RGB+NIR camera
Encoder–Decoder FCN
(FC-DenseNet) sequential model.
Average F1-score
The proposed model achieved better
performance with a F1-score of 92.3
compared to encoder-decoder FCN
without a sequential model, random
forests, and vanilla FCN.
Wang et al. [88]
Pixel-wise segmentation of ﬁeld
images into soil, crop, and weeds.
Two datasets used: the ﬁrst
Dataset in [89] and oilseed image
acquired in the ﬁeld
Encoder-decoder CNN with
different inputs.
AC, IOU
The model with RGB input with an
AC of 96.06 on dataset1 and 96.12 on
dataset2 achieved the best
performance. Image enhancement
improved the results.
Remote Sens. 2022, 14, 638
27 of 43
Wang et al. [88] used the encoder–decoder with Atrous Convolution for pixel-wise
semantic segmentation of crops and weeds. The two datasets for sugar beet and oilseed
included in the paper were taken under completely different lighting conditions. To mit-
igate the effects of the different lighting conditions, three image enhancement methods
were evaluated, including Histogram Equalization (HE), Auto Contrast, and Deep Photo
Enhancer. The models were also trained with various inputs, including YCrCb and YCgCb
color spaces and vegetation indices such as Normalized Difference Index (NDI), Normal-
ized Difference Vegetation Index (NDVI), Excess Green (ExG), Excess Red (ExR), Excess
Green minus Excess Red (ExGR), Color Index of Vegetation (CIVE), Vegetative Index (VEG),
and Modiﬁed Excess Green Index (MExG), Combined Indices (COM1), and COM2. For
the sugar beet dataset, the model trained with NIR images enhanced by Auto Contrast
outperformed the other models with a mean IOU of 87.13%. For the Oilseeds dataset, the
models were trained with RGB images only, and the model trained with images enhanced
by Deep Photo Enhancer outperformed the other models (mIOU = 88.91%). Moreover, the
auto-contrast method outperforms other methods in terms of time inference.
3.8.4. Species Recognition
The classiﬁcation of species (e.g., insects, birds, and plants) is another critical aspect of
agricultural management. The traditional human approach to species classiﬁcation requires
specialists in the ﬁeld and is time-consuming. Deep learning can provide more accurate
and faster results by analyzing real-world data.
Rußwurm and Körner [90] trained LSTM and GRU models for multitemporal classiﬁ-
cation, which achieved high accuracy in crop classiﬁcation tasks for many crops. Images
were collected from SENTINEL 2A images between 31 December 2015 and 30 September
2016. For consistency with the LANDSAT series, the blue, green, red, near-infrared, and
shortwave infrared 1 and 2 bands were selected for this assessment. The performance of the
LSTM model was compared to the RNNs, the CNN model, and a baseline SVM. The LSTM
model outperformed the other models in terms of accuracy in land cover classiﬁcation.
Lee et al. [91] used CNN to classify 44 plants based on leaf images. Two datasets were
prepared. One contained the entire image of a leaf, and for the other, each leaf image was
manually cropped. The accuracy of the CNN model trained with the second dataset was
higher than that obtained with the ﬁrst dataset. The results showed that CNN can extract
high-level features such as structural subdivisions, leaf tip, leaf base, leaf margin, etc., and
is not limited to shape, color, and texture.
Ayhan et al. [92] implement DeeplabeV3+, a CNN model developed from scratch
and a machine learning method that uses NDVI (NDVI+ML) to segment vegetation and
non-vegetation in the images. The dataset of [93] belongs to two studied sites, Vasiliko in
Cyprus and Kimisala in Rhodes Island, were used. The images were acquired using a UAV
and a modiﬁed, uncalibrated near-infrared camera. The image resolution of the Vasiliko
image is 20 cm per pixel and these images were used to train the models. On the other
hand, the Kimisala dataset was used as a test set. The images in this dataset contain two
different resolutions of 10 cm per pixel and 20 cm per pixel.
Two DeeplabeV3+ models were trained with RGB images as input and G, B bands
plus NDVI as the third channel. Although the loss of the DeeplabeV3+ model trained from
scratch with NDVI+GB was decreased, the test result was very poor. However, the same
model trained with transfer learning and NDVI+GB channels improved the accuracy of the
model compared to the model trained with RGB images (almost one percent). The CNN
developed from scratch was also trained with two different channels. The ﬁrst was trained
with RGB images and the second with four channels of RGB and NIR. The model trained
with RGB and NIR outperformed the model trained with RGB images with an accuracy of
80.9% and an accuracy of 76%.
In the last experience, the NDVI and the Gaussian Mixture Model (GMM) of the
machine learning model were used to classify the images. This method includes several
thresholds that need to be adjusted by the user. The NDVI+ML method outperformed the
Remote Sens. 2022, 14, 638
28 of 43
models from DL with an accuracy of 87%. Note that the deep learning method in this work
was trained with a dataset from one location and tested at another location with a different
land cover. This could be a reason why NDVI+ML outperformed the DL models.
Bhusal et al. [94] used the pre-trained MobileNet on the ImageNet to classify bird
pests in the image. Video data from a commercial vineyard captured with a GoPro Hero
4 outdoor camera with 1080P resolution was used as the dataset. In their work, a motion
detection algorithm was used that is capable of detecting moving objects. For each of these
moving objects, the abounded rectangle was extracted. These moving objects were cropped
from the original RGB image and reduced to 32 × 32. Each of these cropped images was
referred to as motion instance images (MIIs). More than 5000 MIIs were collected from
different videos and classiﬁed as bird or non-bird. In the next step, a CNN model developed
in [95] was used to improve image resolution. The images were converted from 32 × 32
to 64 × 64, 96 × 96, and 128 × 128 and denoted as MIIs (e-MIIs), 2e-MIIs, 3e-MIIs, and
4e-MIIs, respectively. Five MobilNet models were trained with the MIIs, 2e-MIIs, 3e-MIIs,
4e-MIIs, and the entire Dataset. The worth results in terms of accuracy were obtained with
a model trained with MIIs, and the best result was obtained with the model trained with
all the datasets.
Mac Aodha et al. [96] used the CNN models from scratch to detect bats from audio
ﬁles. Two CNN models called CNNFULL with three convolutional layers and 32 ﬁlters and
CNNFAST consisting of two convolutional layers and 16 ﬁlters were trained. The audio
ﬁles were converted to a spectrogram and used as input to the CNN model. CNNFULL and
CNNFAST took 53 and 9.5 s, respectively, to run the entire detection pipeline on the 3.2-min
full-spectrum test dataset. CNNFAST showed a trade-off between speed and accuracy with
slightly lower performance compared to CNNFULL.
The performance of the models was compared with three existing commercial closed-
source detection systems, including SonoBat (version 3.1.7p) (https://sonobat.com/, ac-
cessed on 26 November 2021); SCAN’R (version 1.7.7), and Kaleidoscope (version 4.2.0
alpha4) (https://www.wildlifeacoustics.com/products/kaleidoscope-pro, accessed on 26
November 2021), as well as a machine learning method RF. The CNN model signiﬁcantly
outperformed the other algorithms in terms of mAP.
Ramalingam et al. [97] used Internet of Things (IoT) based architecture for insect
detection. The Internet is a global system of interconnected computer networks that use
Transmission Control Protocol/Internet Protocol (TCP/IP) to connect billions of computers
worldwide [98]. The IoT, on the other hand, is a global network of physical objects equipped
with sensors and actuators that connect to the Internet in real-time to be identiﬁed, sensed,
and controlled remotely [98]. The IoT architecture used in [97] consists of four layers:
perception layer, transport layer, processing layer, and application layer. In the perception
layer, a smart wireless camera captures an image of a sticky insect trap. The transport
layer uses WiFi communication and TCP/IP to send images to the processing layer and
transmit processed data to the application layer. In the processing layer, an Fast RCNN
with ResNet50 is used to detect the insect in the images. In the ﬁnal stage, smartphones and
web interfaces are used to perform the application layer tasks. The experimental results
show that the trained model achieves 96% accuracy in insect detection and outperforms
YOLO and SSD in terms of accuracy.
3.8.5. Soil Management
For experts in agriculture, soil is a heterogeneous natural resource with complex
processes and unclear mechanisms [8]. Its temperature alone can provide insight into
the impact of climate change on regional yields. Deep learning algorithms study the
processes of evaporation, moisture, and soil temperature to understand the dynamics of
the ecosystem and the implications for agriculture.
Remote Sens. 2022, 14, 638
29 of 43
Table 6. Feature descriptions of recent published papers in the ﬁeld of “Species recognition”.
References
Application
Data Used
Model
Metric Used
Model Performance
Rußwurm and Körner [90]
Segmentation of land cover with
sequential models.
Images were collected from the
SENTINEL2A satellite.
LSTM, RNN, CNN, SVM
F1-score, P, AC, R
LSTM networks and RNN achieved
better results.
Lee et al. [91]
Classiﬁcation of plants based on
leaf images.
MalayaKew (MK) Leaf dataset
was collected at Royal Botanic
Gardens Kew, England.
CNN+SVM, CNN+MLP
AC
CNN+SVM with an AC of 0.993
achieved better performance compared
to RBF, CNN+MLP.
Ayhan et al. [92]
Classiﬁcation of land into
vegetation and non-vegetation
Images were collected
using UAV.
Deeplabv3+, CNN model,
GMM+NDVI
AC, IOU
GMM+NDVI outperformed DL models.
The DeeplabeV3+ outperformed the
CNN model developed from scratched
Bhusal et al. [94]
Classify bird pests in the image.
Video data from a commercial
vineyard captured with cameras.
MobileNet with different input
AC
The best result was obtained with the
model trained with all the datasets.
Mac Aodha et al. [96]
Insects detection
Images taken with a WiFi camera
F-RCNN with Resnet50
AC, R, P, F1-score
The model achieved an accuracy of 96%.
Ramalingam et al. [97]
Insect detection using Internet of
Things (IoT) base architecture.
Images from the traps.
Fast RCNN with ResNet 50,
YOLO, SSD
Ac
The trained model achieves 96%
accuracy in insect detection and
outperforms YOLO and SSD in terms
of accuracy. .
Remote Sens. 2022, 14, 638
30 of 43
Li et al. [99] used a bidirectional LSTM model to estimate soil temperature at 30 sites
under ﬁve different climate types. Soil temperature (ST) measurements were obtained
from the U.S. Department of Agriculture’s National Water and Climate Center, which
has established more than 200 sites across the country to collect data on meteorology,
soil, and solar radiation. Two models were trained with different inputs and outputs.
The ﬁrst model received the meteorological weather conditions including daily hours,
minimum and maximum air temperature, minimum and maximum relative humidity,
vapor pressure, average solar radiation, and average wind speed, and outputted the soil
temperature amplitude obtained by subtracting the daily average soil temperature from the
hourly soil temperature. The second model obtained the meteorological weather conditions
including month, day of the month, observed air temperature, dew point temperature,
minimum and maximum air temperature, minimum and maximum relative humidity,
vapor pressure, average solar radiation, average wind speed, and outputted the daily
average ST. To calculate the hourly ST, the output of the ﬁrst model was added with the
output of the second model and called the integrated BiLSTM model. The result of the
model was compared with the BiLSTM model, which directly estimates the hourly ST, the
LSTM model, the deep neural network, random forest, SVR, and Linear Regression. The
integrated BiLSTM model outperformed the other models in terms of MAE, RMSE, and R2.
The LSTM model achieved the second-best performance.
It was also found that the performance of each model is not as good in snowy areas as
in warm or dry areas and that, the accuracy of the other models increases with soil depth
(except for RF). This behavior could be due to a change in the standard deviation of the soil
temperature at different depths and climate types, but this is not investigated in the study.
Yu et al. [100] implement CNN (Conv2D, Conv3D), ConvLSTM to estimate the soil
temperature. The difference between Conv2D and Conv3D is the size of the input channels.
In the ConvLSTM model [101], there are convolution structures in both the input-to-state
and state-to-state transitions. The model obtains the last ten days of historical data from
spatiotemporal ST and predicts the ST one, three, and ﬁve days in advance. Each model
was trained with two different input channels. The ﬁrst time the raw data from ST was
fed into the model, the second time, the input was processed using the Empirical Mode
Decomposition (EMD) method, which is a proposed method for processing signals. In
the EMD method, the number of channels was increased from one to ten. To complement
the model DL, persistent prediction (PF) is used, a simple prediction method that treats
the temperature of the ﬁrst day as a prediction for the next day. When forecasting ST
with one-day historical data, PF outperformed the models of DL with raw data input.
On the other hand, when the models of DL used the EEMD- processed data as input, the
prediction performance was signiﬁcantly improved. Among all the models, EEMD-Conv3D
performed the best in predicting the spatiotemporal ST. It could be noted that ST depends
not only on the historical data of ST but also on the meteorological weather conditions,
which can be used as input to the model to improve the accuracy.
Alibabaei et al. [102] used Bidirectional LSTM (BLSTM), CNN-LSTM, and a simple
LSTM model to model daily reference evapotranspiration and soil–water content. Meteo-
rological weather data for three sites in Portugal were collected from the stations Póvoa
de Atalaia, Estação Borralheira, and Direção Regional de Agricultura e Pescas do Centro,
Portugal. Evapotranspiration was calculated from meteorological data using the FAO
Penman–Monteith equation and soil water content was retrieved from ERA5 land. The
BLSTM model with an MSE of 0.014 to 0.056 outperformed the LSTM, CNN, and CNN-
LSTM models. The performance of BLSTM was also compared with traditional machine
learning methods such as Random Forest and SVR and outperformed these two models.
Among the machine learning methods, RF outperformed the SVR model. The model was
not tested with data measured in the ﬁeld. For use in the ﬁeld, it can be re-trained with a
small set of ﬁeld-measured data to be used with more conﬁdence in real-world applications.
Remote Sens. 2022, 14, 638
31 of 43
Table 7. Feature descriptions of recent published papers in the ﬁeld of “Soil management”.
References
Application
Data Used
Model
Metric Used
Model Performance
Li et al. [99]
Estimation of soil temperature
https://www.wcc.nrcs.usda.
gov/scan/, accessed on 20
November 2021
Integrated BiLSTM, BiLSTM,
LSTM, RF, SVR, DDN, LR
RMSE, MAE, R2, MSE
Integrated BiLSTM model
outperformed the other models
Yu et al. [100]
Estimation of soil temperature
https:
//cds.climate.copernicus.eu/,
accessed on 20 November 2021
CNN (Conv2D, Conv3D),
ConvLSTM
RMSE, MAE, R2, MSE
EEMD-Conv3D performed the
best in predicting the
spatiotemporal.
Alibabaei et al. [102]
Estimation of soil water content
and evapotranspiration
https:
//cds.climate.copernicus.eu/,
accessed on 20 May 2020 and
weather stations in Portugal
BLSTM, CNNLSTM, simple
LSTM, CNN, RF, SVR
MAE, R2, MSE
BLSTM outperformed
other models.
Remote Sens. 2022, 14, 638
32 of 43
3.8.6. Water Management
Water management in agriculture has implications for hydrological, climatological,
and agronomic balance [8]. Five papers on the topic were reviewed, where machine learning
models are employed to estimate various values, such as evapotransition, allowing for
more effective use of irrigation systems, and water table detection, which helps determine
crop water needs.
Saggi and Jain [103] used multilayer perceptrons (MLP) to evaluate daily evapotranspi-
ration for irrigation scheduling. They developed their model from scratch. The developed
DL model performed well in estimating evapotranspiration and outperformed ML models
such as RF, Generalized Linear Model (GLM), and Gradient Boosting Models (GBM).
Zhang et al. [104] presented an LSTM-based model for water management in agri-
cultural areas. The LSTM model with a R2 value of 0.789–0.952 outperformed the fully
connected network. As mentioned in the paper, the prediction of water table depth can
help engineers and decision-makers to develop an optimal irrigation scheduling system
while controlling the effects of salinity on intensive irrigation.
Loggenberg et al. [105] applied hyperspectral sensing and machine learning to model
water stress in vineyards. Stem water potential (SWP) was measured in the ﬁeld by using a
pressure chamber to determine vine water stress status. Vines with SWP values between
−1.0 MPa and −1.8 MPa were classiﬁed as water-stressed, while vines with SWP values
−0.7 MPa were classiﬁed as not stressed. Images were acquired using the SIMERA HX MkII
hyperspectral sensor, which detects 340 spectral wavebands in the VIS and NIR. A spectral
subset consisting of 176 wavebands with a spectral range of 473–708 nm was used as
input to the models. Two ML models Random Forest (RF) and Extreme Gradient Boosting
(XGBoost) were used for classiﬁcation. In the ﬁrst experience, RF and XGBoost models
used all wavebands (176 bands) as input. RF with an accuracy of 83.3% outperformed
XGBoost with an accuracy of 78%. When using a subset of important wavebands (18 bands),
the accuracy of RF and XGBoost was improved (RF = 93.3% and XGBoost = 90%). The
results show that the choice of input to the model in ML is crucial and should be carefully
selected. The effect of smoothing the spectral data with the Savitzky–Golay ﬁlter in the data
preprocessing step was also investigated in the paper. The Savitzky–Golay ﬁlter reduces
the model accuracy ranging between 0.7% and 3.3%.
Chen et al. [40] used a deep Q-learning (DQN) model for an irrigation decision
strategy based on short-term weather forecasts for rice. Daily observed meteorological
data of the rice-growing period at three stations, including daily minimum and maximum
temperature, average temperature, average wind speed, sunshine duration, average relative
humidity, and precipitation were collected. The state-space consisted of Pt is the predicted
precipitation sequence for the next 7 days on day t , mm; ht is the water depth on day t, mm;
hmin is the lower limit of water depth, mm; hmax is the upper limit of water depth, mm;
Hp is the maximum allowable water depth after precipitation. In the action space, three
possible actions were included, representing the fraction of the irrigation quota (irrigation
to hmax) to be supplied to the ﬁeld on day t. Action 0 returns 0%, action 1 returns 50%, and
action 2 returns 100%. The reward is based on the rainfall use reward and the yield reward.
The results of the DQN irrigation strategy compared to the results of the conventional
irrigation strategy showed a signiﬁcant reduction in irrigation water volume, irrigation
timing, and drainage water without yield loss.
Alibabaei et al. [38] uses the DQN model to schedule irrigation of a tomato ﬁeld in
Portugal using climate Big Data. Historical data are collected from various sources and
processed for use as input. Two LSTM models are trained on the obtained historical data to
predict the total soil water in the soil proﬁle for the next day and the tomato yield at the
end of a season, respectively.
The trained LSTM models were used in the DRL training environment, which takes
the current state (historical climate data) and action (amount of irrigation) and then returns
the next state and reward. The reward was calculated as the net return and the Q-value
Remote Sens. 2022, 14, 638
33 of 43
was estimated using an LSTM model. The results show that the agent learns to avoid water
waste at the beginning of the season and water stress at the end of the season. Compared
to the threshold and ﬁxed irrigation method, the DQN agent increases productivity by 11%
and avoids water waste by 20–30%.
3.8.7. Automation in Agriculture
Deep learning is also being used to control sensors and robots that enable automation
and optimization of agricultural processes. These robots can be used for a variety of
purposes, including automated seeding, pesticide, and crop nutrient application, damage
repair, irrigation, weed detection and removal, harvesting, etc.
Li et al. [52] used a deep-learning algorithm to quickly and accurately detect and
locate longan fruit in imagery and pick the fruit with a UAV device. An RGB-D camera
on the UAV was used to collect images of the fruits. As mentioned in the paper, one of
the disadvantages of UAVs is that they are easily affected by local circulation and airﬂow
when capturing images, resulting in blurred images of the fruits. In the preprocessing of
the data, a Fuzzy image processing algorithm was used to remove the blurred images from
the data set.
FPN, YOLOv3, YOLOv4, MobileNet-SSD, YOLOv4-tiny, and MobileNet-YOLOv4
models were trained on the images to detect and locate string fruits, simple fruits, and fruit
branches. In the ﬁnal phase, the detection results are mapped onto the optimized depth
image to extract the contours and spatial information of the three targets. Based on this in-
formation, the drone can detect and locate the fruits and use them in harvesting. In general,
the YOLO models had faster detection speed and achieved better accuracy than the FPN
and SSD models. MobileNet-YOLOv4 achieved the best performance in terms of accuracy
(mAP = 89.73) and inference time (68 s), while FPN achieved the worst performance.
To test the model in orchards, a picking platform was developed with a UAV, a Jetson
TX2, an RGB-D camera, a set of scissors with clamps, and a support frame. The accuracy
rate of successful harvesting in four cases was reported as 75, 75, 69.23, and 68.42.
Aghi et al. [106] presents a low-cost, energy-efﬁcient local motion planner for au-
tonomous navigation of robots in vineyards based on RGB-D images, low-range hardware
(a low-cost device with low power and limited computational capabilities), and two control
algorithms. The ﬁrst algorithm uses the disparity map and its depth representation to
generate proportional control for the robot platform. The second backup algorithm, based
on a deep learning algorithm, takes control of the machine when the ﬁrst block brieﬂy fails
and generates high-level motion primitives.
An Intel RealSense Depth Camera D435i RGB-D camera was used to capture images
and compute the depth map on the platform. The video was captured in different terrain,
quality, and time of day. Then, a light depth map-based algorithm processes the depth
maps to detect the end of the vineyard row and then calculates control values for linear and
angular velocities using a proportional controller. Since, as in many outdoor applications,
sunlight negatively affects the quality of the results and interferes with the control provided
by the local navigation algorithm, MobileNet was trained to classify whether the camera
was pointed at the center of the end of the vineyard row or one of its sides, and it was used
when the ﬁrst algorithm failed due to outdoor conditions. The CNN model was trained
with transfer learning and classiﬁed the images into three classes: Middle, Left, and Right.
For the middle class, the video was taken in rows with the camera pointed at the center,
and for the other two classes, the videos were rotated left and right with the camera at a
45-degree angle to the long axis of the row. The accuracy of the model on the test set was
one. The model was trained on a small portion of the data set to investigate the signiﬁcance
of the size of the data set. The accuracy of the model decreased by 6% with the small
data set.
Remote Sens. 2022, 14, 638
34 of 43
Table 8. Feature descriptions of recent published papers in the ﬁeld of “Water Management”.
References
Application
Data Used
Model
Metric Used
Model Performance
Saggi and Jain [103]
Estimation of evapotranspiration
for irrigation scheduling.
Fourteen years of time-series
data were used.
Multi-layer DL
RMSE
MLDL achieved better
performance compared to RF,
GLM, and GBM.
Zhang et al. [104]
Prediction of water table depth in
agriculture areas
Daily meteorological data of
31 years for Hoshiarpur and
38 years for Patiala was
considered for the study.
LSTM
R2, RMSE
LSTM achieved better
performance.
Loggenberg et al. [105]
Model water stress in vineyards
Stem water potential (SWP) was
measured in the ﬁeld using a
pressure chamber. Images were
acquired using the SIMERA HX
MkII hyperspectral Sensor
RF and XGBoost
AC
RF outperformed XGBoost
Chen et al. [40]
Irrigation decision-making for
rice base on weather forecasts
http://data.cma.gov.cn,
accessed on 2 November 2021
DQN, CNN
The threat score (TS), missing
alarm rate (MAR) and false alarm
rate (FAR)
The DQN irrigation strategy
compared to the results of the
conventional irrigation strategy
showed a signiﬁcant reduction in
irrigation water volume.
Alibabaei et al. [38]
Irrigation decision-making for
tomato base on weather forecasts
www.drapc.gov.pt, accessed on 1
May 2021
DQN, LSTM
R2-score, RMSE
Compared to the threshold and
ﬁxed irrigation method, the DQN
agent increases productivity by
11% and avoids water waste by
20–30%.
Remote Sens. 2022, 14, 638
35 of 43
Finally, the CNN model was optimized by discarding all redundant operations and
reducing the ﬂoating-point accuracy from 32 to 16 bits. The accuracy of the optimized
model was the same as the original and the time inference was improved. The proposed
model was implemented on a robot and the tests were performed in a new vineyard
scenario. The ﬁrst algorithm can detect the end of the vineyard regardless of the direction
of the long axis of the robot. When the ﬁrst algorithm fails, the CNN model jumps in and
detects the end of the vineyard.
Badeka et al. [107] trained YOLOv3 to detect grape crates in the ﬁeld for use on robots
harvesting grapes. The images of the crate were taken under natural ﬁeld conditions. Three
data enhancement techniques were used, including rotation, noise, processing, and blur
processing. The model achieved an accuracy of 99.74% (mAP%) with an inference time
of 0.26 s. To use the trained model on robots, it must be deployed on edge devices and
report the inference time and accuracy of the model on these devices. Another interesting
problem is that the robot can detect whether the box is full or not.
Majeed et al. [108] combined the DL model with mathematical models to detect
cordons in grape canopies and determine their trajectories. Images were taken so that a tree
trunk was approximately in the center of the ﬁeld of view of a high-resolution camera (Sony
Cyber-shot RX100 IV). A total of 191 images of random RGB images were captured from two
different vineyard blocks with different cultivars. Each image in the dataset was classiﬁed
into three classes: Background, Trunk, and Cordon (http://hdl.handle.net/2376/16939,
accessed on 1 September 2021). Since the background pixels in the labeled images covered
most of the images, a weight was assigned to each class in the preprocessing of the data,
which was calculated using a median frequency class balancing method to avoid bias during
training. Data augmentation and transfer learning techniques were used in this work.
A fully convolutional neural network (FCN) and SegNet with VGG and AlexNet
backbones were trained to segment the cordons in the images. The FCN-VGG16 network
achieved the best performance in terms of mean accuracy and F1-score compared to the
other networks. In the next step, the mathematical model including the Fourier model,
Gaussian model, polynomial model, and sine sum model was applied to estimate the
trajectory of the cordons. The sixth-order polynomial equation with an average R2 value of
0.99 had the best ﬁt for the trajectories of the cordons compared to the other mathematical
models tested.
Pinto de Aguiar et al. [109] trained seven different DL models for detecting grapevine
stems in two vineyards in Portugal. The trained models included Single Shot Multi-
box (SSD) MobileNet-V1 (α = 0.75), SSD MobileNet-V1 with different hyperparameters
(α = 0.75), SSD MobileNet-V2, Pooling Pyramid Network (PPN) MobileNet-V1, SSDLite
MobileNet-V2, SSD Inception-V2, Tiny YOLO-V3. In this work, Transfer Learning was ap-
plied using the COCO dataset. A dataset was created using a robotic platform. This dataset
contains images captured in two different vineyards, using two cameras each, including
the Raspberry Pi cameras and a conventional infrared ﬁlter, and the other camera Mako
G-125C and an infrared ﬁlter (dataset is available at http://vcriis01.inesctec.pt/-DS_AG_39,
accessed on 1 September 2021). After training the model, two edge devices, including
Google’s USB Accelerator and NVIDIA’s Jetson Nano were used for real-time inference
of the model in a real-world application. The advantage of NVIDIA’s Jetson Nano over
Google’s USB Accelerator is that it supports ﬂoating points and more models. However,
Google’s USB Accelerator outperformed NVIDIA’s Jetson Nano in terms of inference time
(about 49 frames per second), average accuracy, and time to load models. The combination
of edge devices and lightweight deep learning models makes the model DL applicable
in practice.
Remote Sens. 2022, 14, 638
36 of 43
Table 9. Feature descriptions of recent published papers in the ﬁeld of “Automation in agriculture”.
References
Application
Data Used
Model
Metric Used
Model Performance
Li et al. [52]
Pick longan fruits with a UAV
device
A RGB-D camera on the UAV
device used to capture images
from the ﬁeld.
FPN, YOLOv3, YOLOv4,
MobileNet-SSD, YOLOv4- tiny
and MobileNet-YOLOv4
mAP, AC, R, P
The accuracy rate of successful
harvesting using a picking platform
in four cases was reported as 75, 75,
69.23, and 68.42.
Aghi et al. [106]
Local motion planner for
autonomous navigation of robots
in vineyards
A camera D435i RGB-D camera
was used to capture images from
the ﬁeld.
MobileNet
AC, R, P, F1-score
The accuracy of the model on the test
set was given as one and it was
decreased 6% with the small dataset.
Badeka et al. [107]
Detect grape Crates in the ﬁeld
The images of the crate were
taken under natural ﬁeld
conditions
YOLOv3
AC
The model achieved an average
detection rate of 99.74%.
Majeed et al. [108]
Detect cordons in grape canopies
and then de- determine their
trajectories
Images were taken so that a tree
trunk was approximately in the
center of the ﬁeld of view of a
high-resolution camera
FCN and Seg-Net with VGG and
AlexNet
R, P, F1-score
The FCN-VGG16 network achieved
the best performance in terms of
mean accuracy and F_1 score
compared to the other networks.
Pinto de Aguiar et al. [109]
Detect grapevine trunk in two
vineyards in Portugal using TPU
and NVIDIA’s Jetson Nano
This dataset contains images
captured in two different
vineyards, using two cameras
FCN and Seg-Net with VGG and
AlexNet, SSD MobileNet-V2,
Pooling Pyramid Network,
MobileNet-V1, SS- DLite
MobileNet-V2, SSD Inception-V2,
Tiny YOLO-V3.
IOU, F1-score
SSD MobileNet-V2 on the TPU coral
with an average precision of 52.98%
and approximately 49 f/s achieved
the best
Aguiar et al. [18]
Detect the trunk in a vine
The images were acquired from
four different vineyards in
Portugal
SSD MobileNetv1, SSD
MobileNetv2, SSD Inception
mAP, IOU, R
The SSD MobileNetv1 and the SSD
MobileNetv2 achieved similar
performance (maximum AP of
84.16%), but the SSD Inception
achieved an AP of 75.78.
Remote Sens. 2022, 14, 638
37 of 43
Aguiar et al. [18] trained the SSD model using MobileNetv1 and MobileNetv2 as
backbones to detect the stem in a vine. The model was deployed on an edge AI mode
(Google’s USB Accelerator) in order to investigate accuracy and penetration. The images
were acquired from four different vineyards in Portugal and published under the name
VineSet. They contain RGB and thermal images of a single vineyard and include the anno-
tations for each image (http://vcriis01.inesctec.pt/datasets/DataSet/VineSet.zip, accessed
on 2 September 2021). A robotic platform AgRob V16 with a frontal stereo RGB camera
and a frontal thermal camera was used to capture a video from which the images were
extracted. Data augmentation methods such as rotation, translation, scaling, ﬂipping, hue
and saturation, Gaussian noise, and random combination were used to resize the dataset
to a suitable size for the seepage learning method. Two training datasets were used to
evaluate the effect of the training dataset size on the performance of the detectors. The
original VineSet dataset and a small subset of it containing 336 non-augmented images
were used. The SSD MobileNetv1 and the SSD MobileNetv2 trained with VineSet and
using transfer learning achieved similar performance, a maximum AP of 84.16%, but the
SSD Inception achieved an AP of 75.78. In terms of inference time, the MobileNets on
the TPU achieved an average inference time of 21.18 ms and 23.14 ms, which was faster
than SSD Inception. The performance of the models trained with a small dataset dropped
signiﬁcantly (with a maximum of AP = 34.42), reinforcing the importance of the dataset
size for the performance of the deep learning model.
The SSD MobileNet-V1 trained with VineSet was published on the Google Colabora-
tory platform (https://colab.research.google.com, accessed on 1 September 2021) to help
researchers automatically label the new dataset and then manually correct the labeling.
Labeling the data is one of the challenges of using the DL model. In this way, labeling the
images of the trunk becomes less time-consuming.
4. Discussion
Deep learning is already being used in various areas of agriculture, but it is still far
from being widely applied in agriculture. In this paper, we reviewed 46 recent research
papers to examine the challenges of using deep learning in agriculture. Figure 13 shows
the pie chart of the researched papers based on the application domain.
Disease Detection
Yield Prediction
Weed Detection
Species Detection
Soil Management
Water Management
Automation 
Figure 13. Pie chart representing the papers by application area.
The following challenges can be pointed out from the reviewed articles. The most
critical point concerns the dataset. Training the model with a small dataset can lead to
signiﬁcant failures [18,72,106] and even with transfer learning and data augmentation,
training the model may require a sufﬁcient amount of data [55]. The presence of the image
under ﬁeld conditions in the data set is very important [63]. Therefore, collecting authentic
ﬁeld images and datasets under different conditions is the ﬁrst and most important step.
Remote Sens. 2022, 14, 638
38 of 43
Using open-source datasets, sharing the dataset with other researchers, data augmentation,
and transfer learning properly can help to overcome these challenges [71,77].
In addition, agricultural image datasets are more complex due to outdoor conditions,
the object of interest usually occupying a very small and uncentered part of the image,
similarity between objects and background, blocking the object with leaves and branches,
multiple objects in one image, and many more [31,63,65,68,79,82]. To be applicable in the
real world, the dataset should fully represent the state of the environment. In some cases,
such as variable illuminance, data augmentation may also be helpful.
The type of input affects the performance of the model [55,62,88,92]. Removing
background from images [55], using different color spaces and vegetarian indices as in-
put [62], detecting crop at different growth stages [81], adding vegetarian indices to the
input [30,86], cropping the input image [91], and data from different climate types [99]
change the performance of the model. The size of the input also affects the runtime and
accuracy of the model [62,79]. Therefore, it is challenging to determine the best input set
for the speciﬁc task.
Labeling large amounts of data is expensive and time-consuming [55]. In addition,
there are some tasks, such as those related to plant diseases, that can only be performed
by specialists in the ﬁeld. Even when using open-source datasets with already annotated
data, there is no way to ﬁnd out who actually did the annotation. As it was seen in
several papers, data augmentation and transfer learning are ways to avoid labeling a
large dataset, but labeling a small dataset is still time-consuming [55]. Unsupervised and
semi-supervised learning methods can be of great help but need further investigation in
this area [35,36,61,83].
When choosing a model for a task, there is a tradeoff between accuracy and inference
time [26,34,65,67,77,96]. Depending on the application, the model can be chosen.
Neither environment is similar in the ﬁeld of agriculture, and each environment and
problem requires its own dataset, and therefore the DL model may not be universally
applicable, i.e., if a model has been trained with a dataset from a particular site or a dataset
from an open-source site such as ImageNet, it may not be able to be used at another site, or
accuracy may decrease when applied to the dataset collected in the real world [12,69]. The
changes in the visual appearance of the images in the training and test dataset could lead
to a decrease in model performance [30]. One way to overcome this is to retrain the already
trained model with a small dataset from the new environment [86].
The design of deep models is complex and they are referred to as black boxes [7]. One
of the challenges in training DL models is that a system with very high computational
power (GPU) is needed [7]. Moreover, the performance of these models depends on the
choice of hyperparameters, loss functions, and optimization algorithm [60,67]. Algorithms
such as Bayesian optimization [110] can help to ﬁnd the right hyperparameters [102].
Google researchers used neural architecture search (NAS) algorithm [111] to ﬁnd state of
the art MobilenetV3 [112]. NAS is a method that searches among all possible combinations
of submodules that can be repeatedly assembled to obtain the entire model with the best
possible accuracy.
The other challenge relates to the real-time applicability of the models. Most deep
learning models have many parameters that need to be trained, and after training the
model, inference of the model is not made in real-time. In some applications, such as using
a robot for harvesting, time inference is essential. As we see in this work, most of the
models are implemented and tested on the PC, which requires power and it is impractical
in real applications. Moreover, implementation on devices such as smartphones still, brings
various challenges that need to be considered, such as memory consumption, speed, etc.
Single-stage detection models such as YOLO and SSD, lightweight classiﬁcation models
such as MobileNet, the development of edge devices such as Raspberry Pi and Jetson nano,
and the use of cloud computing have made it possible to deploy Deep Learning models in
real-world applications and practical ways [34,52,72,86,109]. The quantization method can
be also used to compress the model size and improve the detection speed [82].
Remote Sens. 2022, 14, 638
39 of 43
On small farms, the use of some methods is sometimes impractical because farmers
must have some knowledge to interpret the results obtained. For example, the model
that predicts soil moisture for irrigation scheduling requires a human expert to use this
information to determine the best time and amount of water for irrigation. As mentioned
earlier, Deep Reinforcement Learning is showing great success in several areas as a promis-
ing model for building smart farms in several areas [39]. The model can be trained to
make decisions about when and how much to irrigate [38,40]. Information generated by
IoT devices also helps farmers track agricultural operations and make better decisions to
improve agricultural productivity [97].
5. Conclusions
This paper discussed some recent work on the application of DL to agriculture and
biodiversity and highlighted some challenges in this area. More sustainable agriculture
and the promotion of biodiversity in agricultural systems can be achieved by reducing the
use of agrochemicals, low pesticide use and organic farming, appropriate crop rotations,
small-scale ﬁelds, and the preservation of natural spaces between agroecosystems [113]. As
mentioned, this can be achieved through the new IoT technology in combination with the
new biodiversity algorithms and Artiﬁcial Intelligence model. They can be used to detect
and control species and also to improve ecosystem state and thus productivity having to
resort to the use of environmentally damaging practices.
The novelty of the application of DL models and the challenges identiﬁed in agriculture
demonstrates the need for further research. CNN is the most widely used DL model in
agriculture. The use of new methods, such as attention mechanisms, new lightweight
models, single-stage detection models, can improve the performance of the model, as a
slight improvement in accuracy and run time can signiﬁcantly improve the ﬁnal results.
In the future, we expect to develop or improve models that help farmers make crop
management decisions. These models can be integrated into decision support tools, and
these tools can guide users through precise steps and suggest optimal decision paths. It is
expected that the development of these models will also enable biodiversity monitoring.
Consequently, the adoption of new sustainable practices supported by DL models and
biodiversity monitoring will help manage the farm with minimal human intervention and
greater effectiveness.
Author Contributions: K.A.: Investigation; Methodology; Writing—Review, and Software. P.D.G.:
Supervision, Writing—Review, and Project Administration and Funding acquisition. T.M.L.: Writing—
Review and Editing. R.M.C.: Writing—Review and Editing. I.G.: Writing—Review and Editing. J.M.:
Writing—Review and Editing. C.M.L.: Writing—Review and Editing; All authors have read and
agreed to the published version of the manuscript.
Funding: This work is supported by the R&D Project BioDAgro—Sistema operacional inteligente de
informação e suporte á decisão em AgroBiodiversidade, project PD20-00011, promoted by Fundação
La Caixa and Fundação para a Ciência e a Tecnologia, taking place at the C-MAST-Centre for
Mechanical and Aerospace Sciences and Technology, Department of Electromechanical Engineering
of the University of Beira Interior, Covilhã, Portugal.
Data Availability Statement: Not applicable.
Acknowledgments: P.D.G. and T.M.L. acknowledge Fundação para a Ciência e a Tecnologia (FCT—
MCTES) for its ﬁnancial support via the project UIDB/00151/2020 (C-MAST).
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1.
Oppermann, R.; Paracchini, M. HNV Farming–Central to European Cultural Landscapes and Biodiversity. High Nature Value Farming
in Europe: 35 European Countries—Experiences and Perspectives; Verlag Regionalkultur: Ubstadt-Weiher, Germany, 2012.
2.
Sundmaeker, H.; Verdouw, C.N.; Wolfert, J.; Freire, L.P. Internet of Food and Farm 2020. In Digitising the Industry; Vermesan, O.,
Friess, P., Eds.; River Publishers: Ljubljana, Slovenia, 2016; pp. 129–150.
Remote Sens. 2022, 14, 638
40 of 43
3.
Rosegrant, M.W.; Ringler, C.; Zhu, T. Water for Agriculture: Maintaining Food Security under Growing Scarcity. Annu. Rev.
Environ. Resour. 2009, 34, 205–222. [CrossRef]
4.
Lohchab, V.; Kumar, M.; Suryan, G.; Gautam, V.; Das, R.K. A Review of IoT based Smart Farm Monitoring. In Proceedings of the
2018 Second International Conference on Inventive Communication and Computational Technologies (ICICCT), Coimbatore,
India, 20–21 April 2018 ; pp. 1620–1625. [CrossRef]
5.
Doshi, J.; Patel, T.; kumar Bharti, S. Smart Farming using IoT, a solution for optimally monitoring farming conditions. Procedia
Comput. Sci. 2019, 160, 746–751. [CrossRef]
6.
Nguyen, G.; Dlugolinsky, S.; Bobak, M.; Tran, V.; Garcia, A.L.; Heredia, I.; Malik, P.; Hluchy, L. Machine Learning and Deep
Learning frameworks and libraries for large-scale data mining: A survey. Artif. Intell. Rev. 2019, 52, 77–124. [CrossRef]
7.
Dargan, S.; Kumar, M.; Ayyagari, M.R.; Kumar, G. A Survey of Deep Learning and Its Applications: A New Paradigm to Machine
Learning. Arch. Comput. Methods Eng. 2019, 27, 1071–1092. [CrossRef]
8.
Liakos, K.; Busato, P.B.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture: A Review. Sensors 2018, 18, 2674.
[CrossRef] [PubMed]
9.
Krizhevsky, A.; Sutskever, I.; Hinton, G.E. ImageNet Classiﬁcation with Deep Convolutional Neural Networks. Commun. ACM
2017, 60, 84–90. [CrossRef]
10.
Sermanet, P.; Eigen, D.; Zhang, X.; Mathieu, M.; Fergus, R.; LeCun, Y. OverFeat: Integrated Recognition, Localization and
Detection using Convolutional Networks. arXiv 2013, arXiv:1312.6229.
11.
Liu, J.; Xiang, J.; Jin, Y.; Liu, R.; Yan, J.; Wang, L. Boost Precision Agriculture with Unmanned Aerial Vehicle Remote Sensing and
Edge Intelligence: A Survey. Remote Sens. 2021, 13, 4387. [CrossRef]
12.
Ramcharan, A.; McCloskey, P.; Baranowski, K.; Mbilinyi, N.; Mrisho, L.; Ndalahwa, M.; Legg, J.; Hughes, D.P. A Mobile-Based
Deep Learning Model for Cassava Disease Diagnosis. Front. Plant Sci. 2019, 10, 272. [CrossRef]
13.
Szegedy, C.; Liu, W.; Jia, Y.; Sermanet, P.; Reed, S.; Anguelov, D.; Erhan, D.; Vanhoucke, V.; Rabinovich, A. Going deeper with
convolutions. In Proceedings of the 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Boston, MA,
USA, 7–12 June 2015; pp. 1–9.
14.
Simonyan, K.; Zisserman, A. Very Deep Convolutional Networks for Large-Scale Image Recognition. arXiv 2015, arXiv:1409.1556.
15.
He, K.; Zhang, X.; Ren, S.; Sun, J. Deep Residual Learning for Image Recognition. In Proceedings of the 2016 IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), Las Vegas, NV, USA, 26 June–1 July 2016; pp. 770–778.
16.
Howard, A.G.; Zhu, M.; Chen, B.; Kalenichenko, D.; Wang, W.; Weyand, T.; Andreetto, M.; Adam, H. MobileNets: Efﬁcient
Convolutional Neural Networks for Mobile Vision Applications. arXiv 2017, arXiv:1704.04861.
17.
Tan, M.; Le, Q.V. EfﬁcientNet: Rethinking Model Scaling for Convolutional Neural Networks. 2020. Available online: http:
//xxx.lanl.gov/abs/1905.11946 (accessed on 1 May 2021) .
18.
Aguiar, A.S.; Monteiro, N.N.; Santos, F.N.d.; Solteiro Pires, E.J.; Silva, D.; Sousa, A.J.; Boaventura-Cunha, J. Bringing Semantics to
the Vineyard: An Approach on Deep Learning-Based Vine Trunk Detection. Agriculture 2021, 11, 131. [CrossRef]
19.
Girshick, R.; Donahue, J.; Darrell, T.; Malik, J. Rich Feature Hierarchies for Accurate Object Detection and Semantic Segmentation.
In Proceedings of the 2014 IEEE Conference on Computer Vision and Pattern Recognition, Columbus, OH, USA, 23–28 June 2014;
IEEE Computer Society: Piscataway, NJ, USA; pp. 580–587.
20.
Girshick, R. Fast R-CNN. In Proceedings of the 2015 IEEE International Conference on Computer Vision (ICCV), Santiago, Chile,
7–13 December 2015; IEEE Computer Society: Piscataway, NJ, USA, 2015; pp. 1440–1448. [CrossRef]
21.
Ren, S.; He, K.; Girshick, R.; Sun, J. Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks. IEEE
Trans. Pattern Anal. Mach. Intell. 2017, 39, 1137–1149. [CrossRef] [PubMed]
22.
Redmon, J.; Farhadi, A. YOLOv3: An Incremental Improvement. 2018. Available online: http://xxx.lanl.gov/abs/1804.02767
(accessed on 1 September 2021) .
23.
Liu, W.; Anguelov, D.; Erhan, D.; Szegedy, C.; Reed, S.; Fu, C.Y.; Berg, A.C. SSD: Single Shot MultiBox Detector. In Computer
Vision—ECCV 2016; Springer International Publishing: Cham, Switzerland, 2016; pp. 21–37.
24.
Wang, Y.; Zhou, Q.; Liu, J.; Xiong, J.; Gao, G.; Wu, X.; Latecki, L.J. Lednet: A Lightweight Encoder-Decoder Network for Real-Time
Semantic Segmentation. In Proceedings of the 2019 IEEE International Conference on Image Processing (ICIP), Taipei, Taiwan,
22–25 September 2019; pp. 1860–1864.
25.
Assunção, E.T.; Gaspar, P.D.; Mesquita, R.J.M.; Simões, M.P.; Ramos, A.; Proença, H.; Inacio, P.R.M. Peaches Detection Using a
Deep Learning Technique—A Contribution to Yield Estimation, Resources Management, and Circular Economy. Climate 2022,
10, 11. [CrossRef]
26.
Santos, T.T.; de Souza, L.L.; dos Santos, A.A.; Avila, S. Grape detection, segmentation, and tracking using deep neural networks
and three-dimensional association. Comput. Electron. Agric. 2020, 170, 105247. [CrossRef]
27.
Long, J.; Shelhamer, E.; Darrell, T. Fully convolutional networks for semantic segmentation. In Proceedings of the 2015 IEEE
Conference on Computer Vision and Pattern Recognition (CVPR), Boston, MA, USA, 7–12 June 2015; pp. 3431–3440. [CrossRef]
28.
He, K.; Gkioxari, G.; Dollár, P.; Girshick, R. Mask R-CNN. arXiv 2017, arXiv:1703.06870.
29.
Chen, L.C.; Papandreou, G.; Kokkinos, I.; Murphy, K.; Yuille, A.L.
DeepLab: Semantic Image Segmentation with Deep
Convolutional Nets, Atrous Convolution, and Fully Connected CRFs. 2017. Available online: http://xxx.lanl.gov/abs/1606.00915
(accessed on 1 October 2021 ).
Remote Sens. 2022, 14, 638
41 of 43
30.
Lottes, P.; Behley, J.; Milioto, A.; Stachniss, C. Fully Convolutional Networks with Sequential Information for Robust Crop and
Weed Detection in Precision Farming. IEEE Robot. Autom. Lett. 2018, 3, 2870–2877. [CrossRef]
31.
Ghiani, L.; Sassu, A.; Palumbo, F.; Mercenaro, L.; Gambella, F. In-Field Automatic Detection of Grape Bunches under a Totally
Uncontrolled Environment. Sensors 2021, 21, 3908. [CrossRef]
32.
Patterson, J.; Gibson, A. Deep Learning: A Practitioner’s Approach; O’Reilly: Beijing, China, 2017.
33.
Hochreiter, S.; Schmidhuber, J. Long Short-Term Memory. Neural. Comput. 1997, 9, 1735–1780. [CrossRef]
34.
Kang, H.; Chen, C. Fruit detection, segmentation and 3D visualisation of environments in apple orchards. Comput. Electron.
Agric. 2020, 171, 105302. [CrossRef]
35.
Tang, J.; Wang, D.; Zhang, Z.; He, L.; Xin, J.; Xu, Y. Weed identiﬁcation based on K-means feature learning combined with
convolutional neural network. Comput. Electron. Agric. 2017, 135, 63–70. [CrossRef]
36.
Ferreira, A.D.S.; Freitas, D.M.; da Silva, G.G.; Pistori, H.; Folhes, M.T. Unsupervised deep learning and semi-automatic data
labeling in weed discrimination. Comput. Electron. Agric. 2019, 165, 104963. [CrossRef]
37.
Min, E.; Guo, X.; Liu, Q.; Zhang, G.; Cui, J.; Long, J. A Survey of Clustering With Deep Learning: From the Perspective of Network
Architecture. IEEE Access 2018, 6, 39501–39514. [CrossRef]
38.
Alibabaei, K.; Gaspar, P.D.; Assunção, E.; Alirezazadeh, S.; Lima, T.M. Irrigation optimization with a deep reinforcement learning
model: Case study on a site in Portugal. Agric. Water Manag. 2022, 263, 107480. [CrossRef]
39.
Bu, F.; Wang, X. A smart agriculture IoT system based on deep reinforcement learning. Future Gener. Comput. Syst. 2019,
99, 500–507. [CrossRef]
40.
Chen, M.; Cui, Y.; Wang, X.; Xie, H.; Liu, F.; Luo, T.; Zheng, S.; Luo, Y. A reinforcement learning approach to irrigation
decision-making for rice using weather forecasts. Agric. Water Manag. 2021, 250, 106838. [CrossRef]
41.
Loukatos, D.; Templalexis, C.; Lentzou, D.; Xanthopoulos, G.; Arvanitis, K.G. Enhancing a ﬂexible robotic spraying platform for
distant plant inspection via high-quality thermal imagery data. Comput. Electron. Agric. 2021, 190, 106462. [CrossRef]
42.
Rey, B.; Aleixos, N.; Cubero, S.; Blasco, J. Xf-Rovim. A Field Robot to Detect Olive Trees Infected by Xylella Fastidiosa Using
Proximal Sensing. Remote Sens. 2019, 11, 221. [CrossRef]
43.
Rußwurm, M.; Körner, M. Multi-Temporal Land Cover Classiﬁcation with Sequential Recurrent Encoders. ISPRS Int. J. -Geo-Inf.
2018, 7, 129. [CrossRef]
44.
Ma, J.W.; Nguyen, C.H.; Lee, K.; Heo, J. Regional-scale rice-yield estimation using stacked auto-encoder with climatic and MODIS
data: a case study of South Korea. Int. J. Remote. Sens. 2019, 40, 51–71. [CrossRef]
45.
Bargoti, S.; Underwood, J. Deep Fruit Detection in Orchards. In Proceedings of the 2017 IEEE International Conference on
Robotics and Automation (ICRA), Singapore, 29 May–3 June 2017; pp. 3626–3633. [CrossRef]
46.
Brahimi, M.; Boukhalfa, K.; Moussaoui, A. Deep Learning for Tomato Diseases: Classiﬁcation and Symptoms Visualization. Appl.
Artif. Intell. 2017, 31, 299–315. [CrossRef]
47.
Kumar, P.; Reddy, S.R.N. Wireless sensor networks: a review of motes, wireless technologies, routing algorithms and static
deployment strategies for agriculture applications. CSI Trans. ICT 2020, 8, 331–345. [CrossRef]
48.
Sishodia, R.P.; Ray, R.L.; Singh, S.K. Applications of Remote Sensing in Precision Agriculture: A Review. Remote Sens. 2020,
12. 3136. [CrossRef]
49.
Rudd, J.; Roberson, G.; Classen, J. Application of satellite, Unmanned Aircraft System, and Ground-Based Sensor Data for Precision
Agriculture: A Review; American Society of Agricultural and Biological Engineers: St. Joseph, MI, USA, 2017. [CrossRef]
50.
Terres, J.M.; Delince, J.; van de Steene, M.; Hawkins, A. The use of remote sensing and GIS capabilities to support the reform of
the common agricultural policy of the European community. Remote Sens. Rev. 1995, 12, 53–60. [CrossRef]
51.
Ouhami, M.; Haﬁane, A.; Es-Saady, Y.; El Hajji, M.; Canals, R. Computer Vision, IoT and Data Fusion for Crop Disease Detection
Using Machine Learning: A Survey and Ongoing Research. Remote Sens. 2021, 13, 2486. [CrossRef]
52.
Li, D.; Sun, X.; Elkhouchlaa, H.; Jia, Y.; Yao, Z.; Lin, P.; Li, J.; Lu, H. Fast detection and location of longan fruits using UAV images.
Comput. Electron. Agric. 2021, 190, 106465. [CrossRef]
53.
Rahnemoonfar, M.; Sheppard, C. Deep Count: Fruit Counting Based on Deep Simulated Learning.
Sensors 2017, 17, 905.
[CrossRef]
54.
Alibabaei, K.; Gaspar, P.D.; Lima, T.M. Crop Yield Estimation Using Deep Learning Based on Climate Big Data and Irrigation
Scheduling. Energies 2021, 14, 3004. [CrossRef]
55.
Barbedo, J.G.A. Impact of dataset size and variety on the effectiveness of deep learning and transfer learning for plant disease
classiﬁcation. Comput. Electron. Agric. 2018, 153, 46–53. [CrossRef]
56.
Yang, Q.; Shi, L.; Han, J.; Zha, Y.; Zhu, P. Deep convolutional neural networks for rice grain yield estimation at the ripening stage
using UAV-based remotely sensed images. Field Crop. Res. 2019, 235, 142–153. [CrossRef]
57.
Pan, J.S.; Yang, Q. A survey on transfer learning. IEEE Trans. Knowl. Data Eng. 2010, 22, 1345–1359. [CrossRef]
58.
Ghazi, M.M.; Yanikoglu, B.; Aptoula, E. Plant identiﬁcation using deep neural networks via optimization of transfer learning
parameters. Neurocomputing 2017, 235, 228–235. [CrossRef]
59.
Dreyfus, S. The numerical solution of variational problems. J. Math. Anal. Appl. 1962, 5, 30–45. [CrossRef]
60.
Zhang, X.; Qiao, Y.; Meng, F.; Fan, C.; Zhang, M. Identiﬁcation of Maize Leaf Diseases Using Improved Deep Convolutional
Neural Networks. IEEE Access 2018, 6, 30370–30377. [CrossRef]
Remote Sens. 2022, 14, 638
42 of 43
61.
Kerkech, M.; Haﬁane, A.; Canals, R. Vine disease detection in UAV multispectral images using optimized image registration and
deep learning segmentation approach. Comput. Electron. Agric. 2020, 174, 105446. [CrossRef]
62.
Kerkech, M.; Haﬁane, A.; Canals, R. Deep leaning approach with colorimetric spaces and vegetation indices for vine diseases
detection in UAV images. Comput. Electron. Agric. 2018, 155, 237–243. [CrossRef]
63.
Ferentinos, K.P. Deep learning models for plant disease detection and diagnosis. Comput. Electron. Agric. 2018, 145, 311–318.
[CrossRef]
64.
Krizhevsky, A. One Weird Trick for Parallelizing Convolutional Neural Networks. 2014. Available online: http://xxx.lanl.gov/
abs/1404.5997 (accessed on 1 November 2021) .
65.
Jiang, P.; Chen, Y.; Liu, B.; He, D.; Liang, C. Real-Time Detection of Apple Leaf Diseases Using Deep Learning Approach Based on
Improved Convolutional Neural Networks. IEEE Access 2019, 7, 59069–59080. [CrossRef]
66.
Karthik, R.; Hariharan, M.; Anand, S.; Mathikshara, P.; Johnson, A.; Menaka, R. Attention embedded residual CNN for disease
detection in tomato leaves. Appl. Soft Comput. 2020, 86, 105933.
67.
Liu, B.; Zhang, Y.; He, D.; Li, Y. Identiﬁcation of Apple Leaf Diseases Based on Deep Convolutional Neural Networks. Symmetry
2018, 10, 11. [CrossRef]
68.
Picon, A.; Seitz, M.; Alvarez-Gila, A.; Mohnke, P.; Ortiz-Barredo, A.; Echazarra, J. Crop conditional Convolutional Neural
Networks for massive multi-crop plant disease classiﬁcation over cell phone acquired images taken on real ﬁeld conditions.
Comput. Electron. Agric. 2019, 167, 105093. [CrossRef]
69.
Chen, J.; Zhang, D.; Zeb, A.; Nanehkaran, Y.A. Identiﬁcation of rice plant diseases using lightweight attention networks. Expert
Syst. Appl. 2021, 169, 114514. [CrossRef]
70.
Ramcharan, A.; Baranowski, K.; McCloskey, P.; Ahmed, B.; Legg, J.; Hughes, D.P. Deep Learning for Image-Based Cassava
Disease Detection. Front. Plant Sci. 2017, 8. 1852. [CrossRef] [PubMed]
71.
Silver, D.L.; Monga, T. In Vino Veritas: Estimating Vineyard Grape Yield from Images Using Deep Learning. In Advances in
Artiﬁcial Intelligence; Meurs, M.J., Rudzicz, F., Eds.; Springer International Publishing: Cham, Switzerland, 2019; pp. 212–224.
72.
Aguiar, A.S.; Magalhães, S.A.; dos Santos, F.N.; Castro, L.; Pinho, T.; Valente, J.; Martins, R.; Boaventura-Cunha, J. Grape Bunch
Detection at Different Growth Stages Using Deep Learning Quantized Models. Agronomy 2021, 11, 1890 . [CrossRef]
73.
Seng, K.P.; Ang, L.M.; Schmidtke, L.M.; Rogiers, S.Y. Computer Vision and Machine Learning for Viticulture Technology. IEEE
Access 2018, 6, 67494–67510. [CrossRef]
74.
Milella, A.; Marani, R.; Petitti, A.; Reina, G. In-ﬁeld high throughput grapevine phenotyping with a consumer-grade depth
camera. Comput. Electron. Agric. 2019, 156, 293–306. [CrossRef]
75.
Palacios, F.; Bueno, G.; Salido, J.; Diago, M.P.; Hernández, I.; Tardaguila, J. Automated grapevine ﬂower detection and
quantiﬁcation method based on computer vision and deep learning from on-the-go imaging using a mobile sensing platform
under ﬁeld conditions. Comput. Electron. Agric. 2020, 178, 105796. [CrossRef]
76.
Millán, B.; Aquino, A.; Diago, M.P.; Tardáguila, J. Image analysis-based modelling for ﬂower number estimation in grapevine.
J. Sci. Food Agric. 2017, 97 3, 784–792. [CrossRef]
77.
Koirala, A.; Walsh, K.B.; Wang, Z.; McCarthy, C. Deep learning for real-time fruit detection and orchard fruit load estimation:
benchmarking of ‘MangoYOLO’. Precis. Agric. 2019, 20, 1107–1135. [CrossRef]
78.
Redmon, J.; Farhadi, A. YOLO9000: Better, Faster, Stronger. In Proceedings of the 2017 IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), Honolulu, HI, USA, 21–26 July 2017; pp. 6517–6525. [CrossRef]
79.
Liang, Q.; Zhu, W.; Long, J.; Wang, Y.; Sun, W.; Wu, W. A Real-Time Detection Framework for On-Tree Mango Based on SSD
Network. In Intelligent Robotics and Applications; Springer International Publishing: Cham, Switzerland, 2018; pp. 423–436.
80.
Bargoti, S.; Underwood, J.P. Image Segmentation for Fruit Detection and Yield Estimation in Apple Orchards. J. Field Robot. 2017,
34, 1039–1060. [CrossRef]
81.
Tian, Y.; Yang, G.; Wang, Z.; Wang, H.; Li, E.; Liang, Z. Apple detection during different growth stages in orchards using the
improved YOLO-V3 model. Comput. Electron. Agric. 2019, 157, 417–426.10.1016/j.compag.2019.01.012. [CrossRef]
82.
Zhou, Z.; Song, Z.; Fu, L.; Gao, F.; Li, R.; Cui, Y. Real-time kiwifruit detection in orchard using deep learning on Android™
smartphones for yield estimation. Comput. Electron. Agric. 2020, 179, 105856. [CrossRef]
83.
Bah, M.D.; Haﬁane, A.; Canals, R. Deep Learning with Unsupervised Data Labeling for Weed Detection in Line Crops in UAV
Images. Remote Sens. 2018, 10, 1690. [CrossRef]
84.
Ferreira, A.D.S.; Freitas, D.M.; da Silva, G.G.; Pistori, H.; Folhes, M.T. Weed detection in soybean crops using ConvNets. Comput.
Electron. Agric. 2017, 143, 314–324. [CrossRef]
85.
Olsen, A.; Konovalov, D.A.; Philippa, B.; Ridd, P.; Wood, J.C.; Banks, W.; Girgenti, B.; Kenny, O.; Whinney, J.; Calvert, B.; et al.
DeepWeeds: A Multiclass Weed Species Image Dataset for Deep Learning. Sci. Rep. 2019, 9, 2058. [CrossRef]
86.
Milioto, A.; Lottes, P.; Stachniss, C. Real-time Semantic Segmentation of Crop and Weed for Precision Agriculture Robots
Leveraging Background Knowledge in CNNs.
In Proceedings of the 2018 IEEE International Conference on Robotics and
Automation (ICRA), Brisbane, Australia, 21–25 May 2018; pp. 2229–2235.
87.
Badrinarayanan, V.; Kendall, A.; Cipolla, R. SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation.
IEEE Trans. Pattern Anal. Mach. Intell. 2017, 39, 2481–2495. [CrossRef]
88.
Wang, A.; Xu, Y.; Wei, X.; Cui, B. Semantic Segmentation of Crop and Weed using an Encoder-Decoder Network and Image
Enhancement Method under Uncontrolled Outdoor Illumination. IEEE Access 2020, 8, 81724–81734. [CrossRef]
Remote Sens. 2022, 14, 638
43 of 43
89.
Chebrolu, N.; Lottes, P.; Schaefer, A.; Winterhalter, W.; Burgard, W.; Stachniss, C. Agricultural robot dataset for plant classiﬁcation,
localization and mapping on sugar beet ﬁelds. Int. J. Robot. Res. 2017, 36, 1045–1052. [CrossRef]
90.
Rußwurm, M.; Körner, M. Multi-Temporal Land Cover Classiﬁcation with Long Short-Term Memory Neural Networks. ISPRS
2017, 42W1, 551–558. [CrossRef]
91.
Lee, S.H.; Chan, C.S.; Mayo, S.J.; Remagnino, P. How deep learning extracts and learns leaf features for plant classiﬁcation.
Pattern Recognit. 2017, 71, 1–13. [CrossRef]
92.
Ayhan, B.; Kwan, C.; Budavari, B.; Kwan, L.; Lu, Y.; Perez, D.; Li, J.; Skarlatos, D.; Vlachos, M. Vegetation Detection Using Deep
Learning and Conventional Methods. Remote Sens. 2020, 12, 2502. [CrossRef]
93.
Skarlatos, D.; Vlachos, M. Vegetation Removal From Uav Derived Dsms, Using Combination of Rgb and Nir Imagery. ISPRS
Ann. Photogramm. Remote Sens. Spat. Inf. Sci. 2018, IV-2, 255–262. [CrossRef]
94.
Bhusal, S.; Bhattarai, U.; Karkee, M. Improving Pest Bird Detection in a Vineyard Environment using Super-Resolution and Deep
Learning. IFAC-PapersOnLine 2019, 52, 18–23. [CrossRef]
95.
Yamanaka, J.; Kuwashima, S.; Kurita, T. Fast and Accurate Image Super Resolution by Deep CNN with Skip Connection and
Network in Network. In Neural Information Processing; Liu, D., Xie, S., Li, Y., Zhao, D., El-Alfy, E.S.M., Eds.; Springer International
Publishing: Cham, Switzerland, 2017; pp. 217–225.
96.
Mac Aodha, O.; Gibb, R.; Barlow, K.E.; Browning, E.; Firman, M.; Freeman, R.; Harder, B.; Kinsey, L.; Mead, G.R.; Newson, S.E.;
et al. Bat detective—Deep learning tools for bat acoustic signal detection. PLoS Comput. Biol. 2018, 14, e1005995. [CrossRef]
[PubMed]
97.
Ramalingam, B.; Mohan, R.E.; Pookkuttath, S.; Gómez, B.F.; Sairam Borusu, C.S.C.; Wee Teng, T.; Tamilselvam, Y.K. Remote
Insects Trap Monitoring System Using Deep Learning Framework and IoT. Sensors 2020, 20, 5280. [CrossRef]
98.
Verdouw, C.; Wolfert, S.; Tekinerdogan, B. Internet of Things in agriculture. CAB Rev. 2016, 11, 1–12. SNNR201611035. [CrossRef]
99.
Li, C.; Zhang, Y.; Ren, X. Modeling Hourly Soil Temperature Using Deep BiLSTM Neural Network. Algorithms 2020, 13, 173.
[CrossRef]
100. Yu, F.; Hao, H.; Li, Q. An Ensemble 3D Convolutional Neural Network for Spatiotemporal Soil Temperature Forecasting.
Sustainability 2021, 13, 9174. [CrossRef]
101. Shi, X.; Chen, Z.; Wang, H.; Yeung, D.Y.; Wong, W.K.; Woo, W.c. Convolutional LSTM Network: A Machine Learning Approach
for Precipitation Nowcasting. In Advances in Neural Information Processing Systems; Cortes, C., Lawrence, N., Lee, D., Sugiyama,
M., Garnett, R., Eds.; Curran Associates, Inc.: New York, NY, USA, 2015; Volume 28.
102. Alibabaei, K.; Gaspar, P.D.; Lima, T.M. Modeling Soil Water Content and Reference Evapotranspiration from Climate Data Using
Deep Learning Method. Appl. Sci. 2021, 11, 5029. [CrossRef]
103. Saggi, M.K.; Jain, S. Reference evapotranspiration estimation and modeling of the Punjab Northern India using deep learning.
Comput. Electron. Agric. 2019, 156, 387–398. [CrossRef]
104. Zhang, J.; Zhu, Y.; Zhang, X.; Ye, M.; Yang, J. Developing a Long Short-Term Memory (LSTM) based model for predicting water
table depth in agricultural areas. J. Hydrol. 2018, 561, 918–929. [CrossRef]
105. Loggenberg, K.; Strever, A.; Greyling, B.; Poona, N. Modelling Water Stress in a Shiraz Vineyard Using Hyperspectral Imaging
and Machine Learning. Remote Sens. 2018, 10, 202. [CrossRef]
106. Aghi, D.; Mazzia, V.; Chiaberge, M. Local Motion Planner for Autonomous Navigation in Vineyards with a RGB-D Camera-Based
Algorithm and Deep Learning Synergy. Machines 2020, 8, 27. [CrossRef]
107. Badeka, E.; Vrochidou, E.; Papakostas, G.A.; Pachidis, T.; Kaburlasos, V.G. Harvest Crate Detection for Grapes Harvesting Robot
Based on YOLOv3 Model. In Proceedings of the 2020 Fourth International Conference On Intelligent Computing in Data Sciences
(ICDS), Fez, Morocco, 21–23 October 2020; pp. 1–5. [CrossRef]
108. Majeed, Y.; Karkee, M.; Zhang, Q.; Fu, L.; Whiting, M.D. Determining grapevine cordon shape for automated green shoot
thinning using semantic segmentation-based deep learning networks. Comput. Electron. Agric. 2020, 171, 105308. [CrossRef]
109. Pinto de Aguiar, A.S.; Neves dos Santos, F.B.; Feliz dos Santos, L.C.; de Jesus Filipe, V.M.; Miranda de Sousa, A.J. Vineyard trunk
detection using deep learning—An experimental device benchmark. Comput. Electron. Agric. 2020, 175, 105535. [CrossRef]
110. Mockus, J. Bayesian approach to global optimization. In Mathematics and its Applications (Soviet Series); Kluwer Academic
Publishers Group: Dordrecht, The Netherlands, 1989; Volume 37, p. xiv+254.
111. Zoph, B.; Le, Q.V. Neural Architecture Search with Reinforcement Learning. arXiv 2016, arXiv:1611.01578.
112. Howard, A.; Sandler, M.; Chu, G.; Chen, L.C.; Chen, B.; Tan, M.; Wang, W.; Zhu, Y.; Pang, R.; Vasudevan, V.; et al. Searching for
MobileNetV3. 2019. Available online: http://xxx.lanl.gov/abs/1905.02244 (accessed on 13 November 2020) .
113. Nentwig, W.; Frank, T.; Lethmayer, C. Sown weed strips: Artiﬁcial ecological compensation areas as an important tool in
conservation biological control. In Conservation Biological Control; Academic Press: Cambridge, MA, USA, 1998; pp. 133–153.


Paper 8:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: The paper by Khorrami and Gunduz (2021) presents a novel approach for downscaling GRACE satellite data to estimate groundwater storage changes (GWSC) at a finer spatial resolution. The downscaling approach addresses several challenges associated with using GRACE data for irrigation management, including data gaps and missing values, coarse spatial resolution, and data uncertainty. The downscaled GWSC estimates are validated against in-situ groundwater level measurements and show good agreement, indicating their accuracy. The study provides a comprehensive analysis of GWSC in the North China Plain (NCP), highlighting areas with the most significant groundwater depletion.
  Extract 2: The paper by Khorrami and Gunduz (2021) is highly relevant to the specific point you are making in your literature review, which is about strategies for handling data heterogeneity, uncertainty, and quality issues in real-time irrigation management systems. The paper presents a novel approach for downscaling GRACE satellite data to estimate groundwater storage changes (GWSC) at a finer spatial resolution, which is critical for improving the accuracy of irrigation management decisions.
  Limitations: >
  Relevance Evaluation: The paper by Khorrami and Gunduz (2021) is highly relevant to the specific point you are making in your literature review, which is about strategies for handling data heterogeneity, uncertainty, and quality issues in real-time irrigation management systems. The paper presents a novel approach for downscaling GRACE satellite data to estimate groundwater storage changes (GWSC) at a finer spatial resolution, which is critical for improving the accuracy of irrigation management decisions.

The downscaling approach developed in the paper addresses several challenges associated with using GRACE data for irrigation management, including:

1. Data gaps and missing values: GRACE data often contains missing values due to instrument errors or data processing issues. The modified STL method used in the paper effectively fills in these gaps and ensures the continuity of the time series.

2. Coarse spatial resolution: GRACE data has a coarse spatial resolution, which limits its applicability for local-scale irrigation management. The geographically weighted regression (GWR) model used in the paper improves the spatial resolution of GWSC estimates by incorporating local environmental variables.

3. Data uncertainty: GRACE data is subject to uncertainties due to factors such as measurement errors and model assumptions. The paper quantifies these uncertainties and provides a reliability assessment of the downscaled GWSC estimates.

By addressing these challenges, the downscaling approach developed in the paper provides a valuable tool for improving the accuracy and reliability of real-time irrigation management systems. It enables irrigation managers to make informed decisions based on more accurate and up-to-date information about GWSC, which can lead to more efficient water use and improved crop yields.
  Relevance Score: 0.9640022138853277
  Inline Citation: >
  Explanation: The paper by Khorrami and Gunduz (2021) used GRACE satellite data to estimate groundwater storage changes (GWSC) in the North China Plain (NCP) from 2003 to 2020. They developed a regional downscaling approach using a modified STL method to fill in missing data in GRACE and between GRACE and GRACE-FO and a regression model known as the geographically weighted regression (GWR) model to improve the spatial resolution of GWSC. Their results showed that the downscaled GWSC estimates captured spatial heterogeneity at a finer scale compared to coarse-resolution GRACE data and exhibited similar spatial patterns of GWSC. The downscaled GWSC data also agreed well with in-situ groundwater level measurements, indicating their accuracy.

The current work extends the previous study by Khorrami and Gunduz (2021) in several ways:

1. It uses a longer time series of GRACE data, extending from 2003 to 2022, to capture more recent GWSC trends.

2. It incorporates more environmental variables (e.g., soil moisture, evapotranspiration, land surface temperature, and vegetation index) into the GWR model to improve the accuracy of downscaling.

3. It provides a detailed analysis of the spatial and temporal variations of GWSC in different regions of the NCP, highlighting areas with the most significant groundwater depletion.

4. It compares the downscaled GWSC estimates with in-situ groundwater level measurements to validate the downscaling approach and assess its performance.

Overall, this study provides a more comprehensive and up-to-date analysis of GWSC in the NCP using GRACE satellite data and addresses the limitations of previous studies by incorporating more data and using a more sophisticated downscaling approach.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Graphical abstract Abbreviations Keywords 1. Introduction 2. Study area 3. Material and methods 4. Methods 5. Results 6. Conclusions CRediT authorship contribution statement Declaration of competing interest Acknowledgments Appendix A. Supplementary data Data availability References Show full outline Cited by (4) Figures (12) Show 6 more figures Tables (1) Table 1 Extras (1) Supplementary material Science of The Total Environment Volume 908, 15 January 2024, 168239 The GWR model-based regional downscaling of GRACE/GRACE-FO derived groundwater storage to investigate local-scale variations in the North China Plain Author links open overlay panel Shoaib Ali a, Jiangjun Ran a, Yi Luan a, Behnam Khorrami b, Yun Xiao c, Natthachet Tangdamrongsub d Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.scitotenv.2023.168239 Get rights and content Highlights • Filled in missing data in GRACE and the gap between GRACE and GRACE-FO utilizing a modified STL approach. • The impact of climatic variables on the filled-in gap between GRACE and GRACE-FO. • GWR-based regional downscaling of GWSA at spatiotemporal scale. • Estimated spatial and temporal variations of GWSA at 0.25° and 0.05° • GWSA was decreasing with varying intensity in each sub-region of the NCP and observed recovery of GWSA between 2021 and 2022. Abstract Groundwater storage and depletion fluctuations in response to groundwater availability for irrigation require understanding on a local scale to ensure a reliable groundwater supply. However, the coarser spatial resolution and intermittent data gaps to estimate the regional groundwater storage anomalies (GWSA) prevent the Gravity Recovery and Climate Experiment (GRACE) and GRACE Follow-On (GARCE-FO) mission from being applied at the local scale. To enhance the resolution of GWSA measurements using machine learning approaches, numerous recent efforts have been made. With a focus on the development of a new algorithm, this study enhanced the GWSA resolution estimates to 0.05° by extensively investigating the continuous spatiotemporal variations of GWSA based on the regional downscaling approach using a regression algorithm known as the geographically weighted regression model (GWR). First, the modified seasonal decomposition LOESS method (STL) was used to estimate the continuous terrestrial water storage anomaly (TWSA). Secondly, to separate GWSA from TWSA, a water balance equation was used. Third, the continuous GWSA was downscaled to 0.05° based on the GWR model. Finally, spatio-temporal properties of downscaled GWSA were investigated in the North China Plain (NCP), China's fastest-urbanizing area, from 2003 to 2022. The results of the downscaled GWSA were spatially compatible with GRACE-derived GWSA. The downscaled GWSA results are validated (R = 0.83) using in-situ groundwater level data. The total loss of GWSA in cities of the NCP fluctuated between 2003 and 2022, with the largest loss seen in Handan ( 15.21 ± 7.25 mm/yr), Xingtai ( 14.98 ± 7.25 mm/yr), and Shijiazhuang ( 14.58 ± 7.25 mm/yr). The irrigated winter-wheat farming strategy is linked to greater groundwater depletion in several cities of NCP (e.g., Xingtai, Handan, Anyang, Hebi, Puyang, and Xinxiang). The study's high-resolution findings can help with understanding local groundwater depletion that takes agricultural water utilization and provide quantitative data for water management. Graphical abstract Download : Download high-res image (245KB) Download : Download full-size image Previous article in issue Next article in issue Abbreviations NCPNorth China PlainGRACEGravity Recovery and Climate ExperimentGRACE-FOGravity Recovery and Climate Experiment Follow-OnTWSATerrestrial Water Storage AnomalyGWSAGroundwater Storage AnomalySTLSeasonal Trend Decomposition LOESSGWRGeographically Weighted RegressionSHCsspherical harmonic coefficientsCSRCenter for Space Research at the University of Texas at AustinJPLJet Propulsion Laboratory Keywords North China PlainGRACEGWSASTLGWRDownscaling 1. Introduction In many arid and semi-arid countries, groundwater provides social and environmental development; yet, excessive groundwater extraction, brought on by drought and high-water demand for domestic and agricultural use, has turned into a global problem (Famiglietti, 2014; Richey et al., 2015; Long et al., 2015; Long et al., 2016; Khorrami and Gunduz, 2019; Arshad et al., 2020). Due to the GRACE satellite's advantages, the identification of GWSA depletion has been successfully carried out throughout the world in the past 18 years (Zhao et al., 2019; Fok and Liu, 2019; He et al., 2020; Khorrami and Gunduz, 2021a; Zhang et al., 2021a; Liu et al., 2022). Compared to the suggested worldwide water availability baseline (1700 m3/person/year), the North China Plain (NCP) has significantly lower available water resources per person (910 m3/year), groundwater has significant importance in the agriculture and economy of NCP. The agricultural irrigation needs in NCP rely on groundwater more than 40 % (HRWCC, 2003–2020). With the recent rapid urbanization and agricultural expansion, issues resulting from excessive groundwater use, such as groundwater depletion, deterioration, and surface deformation, have become critical issues (Cai, 2008; Gong et al., 2018; Khorrami et al., 2023b; Amiri et al., 2023). For the assessment of changing climate and the sustainable usage of water resources, a precise understanding of the spatiotemporal aspects of water storage variation is essential (Rodell et al., 2007; Tapley et al., 2019). To provide crucial information for decision-makers and managers of water resources, groundwater has to be quantified and mapped. The lack of gauged stations makes it difficult to manage the dynamic changes in groundwater storage using in-situ data. Typically, water-level changes in monitoring wells and computed storage coefficients form the basis of in-situ assessments of groundwater storage variability. Our capacity to comprehensively characterize the regional groundwater fluctuations is hampered by the intrinsic constraints of in-situ observations, although they are the only source for verifying the auxiliary data (Abhishek and Kinouchi, 2021). Unreliable data formatting across mechanical and human monitoring wells, as well as the high expenses of installation and maintenance, are additional issues (Chen et al., 2016; Abhishek and Kinouchi, 2021). Additionally, when converting the groundwater level to groundwater storage data, uncertainties associated with specific yield or specific storage arising from the aquifer features are inevitable (Bierkens, 2015). The most accurate method for calibrating and validating satellite and hydrological models' data is to measure the in-situ water levels, which makes them a potential metric for applications such as water security. Particularly in places with limited measurable data, GRACE is a reliable tool to track variations in total water storage at large-scale, which includes ice, snow, surface water, soil moisture, and groundwater with an acceptable level of accuracy (Famiglietti, 2014; Ran et al., 2021; Yang et al., 2020). GRACE TWSA has offered a supplement to GWSA over large regions. To assess the depletion of groundwater conditions in the Mississippi River basin and India, Rodell et al., 2007, Rodell et al., 2009 extracted the GWSA variations based on GRACE data. GRACE has so far been extensively used for a variety of purposes, including groundwater assessment (Feng et al., 2013; Huang et al., 2015; Tangdamrongsub et al., 2018), immense flooding event estimation (Han et al., 2021a, Han et al., 2021b), reservoir influencing mass transportation (Ran et al., 2019), evapotranspiration estimation (Long et al., 2014), and exposure of land subsidence (Wang et al., 2017; Tangdamrongsub et al., 2019). The GWSA in the NCP has been the subject of other comparable investigations. Huang et al. (2015) found that shallow GWSA was declining more at the rate of 45.6 ± 6.8 mm/yr in comparison to deep GWSA (16.9 ± 3 mm/yr) in the NCP from 2003 to 2013. GRACE data have also been used to access a trend of 38 ± 1 mm/yr increase in groundwater depletion between 2013 and 2016 (Zhao et al., 2019). Vast North China was found to have a GWSA declining trend of 16.8 to 27.2 mm/yr (Moiwo et al., 2013; Feng et al., 2013; Wang et al., 2017). Furthermore, Tang et al. (2013) calculated depletion of groundwater ranged from 14.0 to 8.4 mm/yr in North China from 2003 to 2011 while taking the effects of water diversion, reservoir regulation, and coal transport into account. The long-term (1971–2015) decreasing trend of GWSA 17.8 ± 0.1 mm/yr in the NCP was computed using GRACE and in-situ groundwater data (Gong et al., 2018). After combining GRACE mascon outputs from several datasets, Zhao et al. (2019) estimated that GWSA is decreasing at the rate of 38.0 ± 1 mm/yr in NCP from 2013 to 2016. Despite these outcomes, the application of this method to long-term hydrological changes is still constrained by various shortcomings such as missing months and the gap between GRACE and GRACE-FO (Sun et al., 2020; Li et al., 2020; Li et al., 2021b; Khorrami and Gunduz, 2021b). GRACE was decommissioned in June 2017; nevertheless, the GRACE-FO was launched in June 2018 and continues to provide TWSA data that is being used in investigations of oceanography, hydrology, and geology (Ciraci et al., 2020; Ghobadi et al., 2020). To fill in the data gap, machine learning models have been used to reconstruct missing TWSA data. For instance, support vector regression, artificial neural networks, and other innovative approaches have been applied (Mukherjee and Ramachandran, 2018; Zhang et al., 2021a). Data-driven approaches, GRACE solutions, and input variables were compared on a global scale, and the results showed that filling in the missing gap between GRACE and GRACE-FO data could offer continuous measurements of Earth's gravitational field (Li et al., 2020; Sun et al., 2020). Approximately 3° × 3° GRACE Level-2 data were gridded to produce the 1° resolution GRACE Level-3 products consisting of 3-spherical harmonic and 2-mascon products at a resolution of 0.5° and 0.25° (Watkins et al., 2015; Wiese et al., 2016). Since mascon solutions from the University of Texas Centre for Space Research (CSR) have been proven to be more accurate (Zheng et al., 2020; Wang et al., 2023), we choose to employ them in our analysis. GRACE mascon products remain too coarse to assess groundwater depletion at the local scale, despite the spatial resolution of Level-3 solutions being improved (Śliwińska et al., 2021; Ali et al., 2022a). Improved physical information can be retrieved from downscaling GRACE mascon solutions data to a precise spatial resolution for local scale application (Vishwakarma et al., 2021; Ali et al., 2021). GRACE observations can be downscaled using either a dynamical methodology or a statistical approach. The dynamical downscaling, which integrates observations of GRACE and simulated estimates of water storage from hydrological models, is also known as data assimilation (DA) (Tangdamrongsub et al., 2015). Zhong et al. (2020a) observed that the main disadvantage of DA is its high computational cost and reliance on the hydrological model's uncertain boundary conditions. The downscaling of GRACE data using the statistical method can be taken as a substitute; the spatial resolution improvement of GRACE data is shown in recent studies based on the statistical approach (Milewski et al., 2019; Sahour et al., 2020; Vishwakarma et al., 2021; Ali et al., 2021; Ali et al., 2022b; Ali et al., 2023). Based on the strong association between evapotranspiration and GRACE GWSA over the NCP a downscaling method was developed (Yin et al., 2018), successfully improving the resolution to 0.02° from 1°. The outcome showed that the downscaling of GWSA estimates to 0.25° from 1° based on the random forest model has considerable potential (Chen et al., 2019). To increase the resolution of GRACE data to 0.25°, Yin et al. (2022b) used three different downscaling models: random forest, Noah V2.1, and multivariable linear regression model. The outcomes of the downscaling, however, abruptly changed across adjacent pixels (Yin et al., 2018; Yin et al., 2022b; Ali et al., 2021, Ali et al., 2022b, Ali et al., 2023). The applicability in local water resource management was constrained by the systematic impacts of downscaled data and coarser spatial resolution. Furthermore, Zhang et al. (2021b) used the random forest and extreme gradient boosting methods to estimate GWSA over China, producing datasets at high resolution (1 km) from 2003 to 2016. The primary shortcoming of this study, though, is the question of whether models for downscaling established at the country level can be applied to small regions arbitrarily. The inability of the produced products to catch monthly variations, such as flood and drought occurrences, severely restricts their use in hydrological research because the temporal resolution of downscaled results is annual. Using GRACE data, the aforementioned studies have identified the variations in groundwater storage during the past few decades in the NCP. However, considering the missing gap between GRACE and GRACE-FO data, systematic groundwater variability detection has not yet been achieved for the downscaling of the GRACE data perspective. Therefore, the novelty resides in this study to integrate filling in the missing intermittent months (GRACE) and missing gap data between GRACE and GRACE-FO using modified STL at first and then regression GWR model-based regional downscaling of continuous GWSA data was performed. The strength of the GWR model regional-scale downscaling scheme was comprehensively evaluated to improve the resolution of GRACE-based GWSA to 0.05° between 2003 and 2022. The accuracy of regional downscaled GWSA was assessed using in-situ groundwater level data for independent validation. The regional downscaling approach was carried out in the NCP, one of the primary bases producing grains in Northern China. 2. Study area The NCP, which is the area of interest in this study, is the 140,000 km2 area north of the Yellow River, south of the Yan Mountains, and east of the Taihang Mountains (Fig. 1). Since the 1970s, groundwater has been heavily utilized to fulfill water supply for industrial, agricultural, and urban purposes. The primary source of groundwater recharge, which accounts for 60 % to 90 % of the overall recharge with the majority of it occurring in summer, is precipitation infiltration (Liu et al., 2022). More than 80 % of the entire groundwater was used for agricultural irrigation in the region, although the average annual precipitation in the region is 400–500 mm (Zhang et al., 2019). The NCP has seen the most severe groundwater depletion as a result of the seasonal distribution of precipitation being irregular and the high-water demand. The NCP, China's most significant agricultural region, provides roughly 61 % and 31 % of the country's total production of maize and wheat, respectively (Cao et al., 2016). Download : Download high-res image (673KB) Download : Download full-size image Fig. 1. (a) The North China Plain (NCP). The background 3D layer generated from the Digital Elevation Model (DEM) in ArcGIS and the colored map shows the spatial distribution of specific yield (Sy), (b) averaged (2003−2022) annual rainfall estimated using Climate Hazards Group InfraRed Precipitation with Station (CHIRPS) data, (c) elevation variations derived from DEM, (d) Siebert et al. (2015) generated a spatial dataset of irrigated land area, and (e) the long term averaged (2003–2022) snow cover percentage per pixel at 0.05° estimated using MODIS data (https://modis.gsfc.nasa.gov/data/dataprod/mod10.php). The groundwater levels in the NCP are monitored via a network of 558 unconfined wells. To determine the amount of groundwater stored in the unconfined aquifer, the detected dynamics are multiplied by the specific yield (Sy) (Fig. 1a). The Sy has a range from 0.025 to 0.29 (Gong et al., 2018; Zhang et al., 2020). Based on unsteady-flow pumping studies, the uncertainty associated with groundwater storage brought on by the range of aquifer geometry and physical hydrogeological features, a Sy is estimated to have a 20 % inaccuracy (Huang et al., 2015; Pan et al., 2017; Gong et al., 2018). Due to the excessive water demand from industry, agriculture, and livestock over many years, the NCP has seen serious groundwater depletion (Feng et al., 2013; Huang et al., 2015; Gong et al., 2018; Zhao et al., 2019). 3. Material and methods 3.1. Input datasets We employed a variety of data sources, such as satellite measurements, model results, and in-situ data. Table 1 summarizes the datasets. Table 1. Summary of the data utilized. Data type Variables Units GRACE CSR Mascon RL-06 TWSA (0.25° × 0.25°), (2003–2022) https://www2.csr.utexas.edu/grace/RL06_mascons.html CHIRPS-v2 Precipitation (0.05° × 0.05°), (2003–2022) https://data.chc.ucsb.edu/products/CHIRPS2.0/global_monthly/tifs/ GLDAS (Noah v2.1) SMS, SWE, (0.25° × 0.25°), (2003–2022) https://disc.gsfc.nasa.gov/datasets/GLDAS_NOAH025_M_2.1/summary MODIS NDVI, LST, ETa, (2003–2022). (0.05° × 0.05°) LST and NDVI: Downloaded data through R Programming using MODIStsp package. ETa: https://earlywarning.usgs.gov/fews/product/460 In situ data Groundwater level anomaly data (2005–2018) http://www.geodata.cn/data/datadetails.html?dataguid=10392011028646 3.2. Datasets 3.2.1. TWSA derived from GRACE The GRACE mission, launched by the National Aeronautics and Space Administration (NASA) and German Aerospace Centre (DLR), consists of two satellites that monitor Earth's gravity properties to look into water resources (Rodell et al., 2007; Khorrami and Gunduz, 2021a; Khorrami et al., 2023c). An important dynamic component of the hydrologic cycle is the terrestrial water storage anomaly (TWSA). Groundwater, soil moisture, rivers, lakes, snowpack, glaciers, and canopy water are all included in the vertically accumulated amount of water storage of various elements of the hydrologic cycle (Pan et al., 2017; Humphrey et al., 2023). In this investigation, the GRACE RL06 Gridded CSR mascon solution with enhanced coastlines at a resolution of 0.25° product was used from 2003 to 2022 (Save et al., 2016; Sun et al., 2018; Yang et al., 2021). The uncertainties associated with CSR mascon solutions were estimated to be lower than other mascon products (Zheng et al., 2020; Wang et al., 2023). In our earlier study, the modified STL approach was used to fill in the missing data of GRACE and the gap between GRACE and GRACE-FO only at the temporal scale (Khorrami et al., 2023a). In this study, the modified STL approach was also used to fill in the gaps between GRACE and GRACE-FO measurements and the missing months within GRACE at the temporal scale (Fig. S1) and each pixel's scale level. 3.2.2. Water storage components To yield the best estimates of land surface fluxes, the GLDAS can benefit from ground-based- and satellite measurements and sophisticated land surface modeling (Rodell et al., 2004). The monthly water storage components such as soil moisture storage (SMS) and snow water equivalent (SWE) are derived from Noah-v2.1 at a 0.25° resolution. To disaggregate GWSA from GRACE-derived TWSA estimations, the SMS and SWE were converted to anomaly data similar to the GRACE data baseline (2004–2009). The goodness of match that the Noah-v2.1 products displayed to GRACE TWSA were superior to the other three models (i.e., CLM, Mosaic, and VIC) (Wang et al., 2023). In light of this, the GLDAS Noah-v2.1 model data from 2003 to 2022 were applied in this analysis. TWS data was derived from the Community Land Surface Model (CLSM) which is simulated GLDAS. Soil water up to a depth of 100 cm, snow water equivalent, water in the canopy, and shallow groundwater from 5 to 8 m deep in the aquifer all contribute to the CLSM-modeled TWS (Li et al., 2019). Note that CLSM TWS does not account for water stored on the surface in places like lakes, reservoirs, and rivers. Due to the negligible contribution of surface water storage to total water storage in arid NCP (0.28 mm/a during 2003–2010; Feng et al., 2013), biases in the calculations of GWSA produced by such impacts can be ignored. To validate STL-based filled-in missing months of GRACE TWSA data, CLSM TWSA was produced by subtracting the long-term baseline mean between 2004 and 2009 from the corresponding CLSM TWS data. 3.2.3. Environmental forcing variables Environmental factors such as SMS, precipitation (P), actual evapotranspiration (ETa), land surface temperature (LST), and normalized difference vegetation index (NDVI) were utilized as independent variables for downscaling GRACE data. These auxiliary datasets were selected based on their major contribution to GRACE data which was analyzed in a previous study (Yin et al., 2022). Fig. S2 displays the analysis of these variables in terms of temporal time series. The monthly scale and 0.05° resolution of MOD13C2 Version 6 were used to obtain the NDVI data. The MODIS MOD11C3 at a resolution of 0.05° provided the monthly LST measurements. The values from the respective monthly files are averaged to yield the daytime and nighttime observations that comprise the LST products (Wang et al., 2021). The operational simplified surface energy balance (SSEBop) model, which is used to calculate monthly MODIS ETa, was received from the USGS FEWS NET Data Portal (Senay et al., 2007). From Climate Hazards Group InfraRed Precipitation with Station (CHIRPS), 0.05° resolution gridded precipitation data were obtained. 3.2.4. Ground-based measurements From January 2005 to December 2018, the Beijing Water Resources Bulletin of China published monthly measurements of groundwater levels were taken to verify the validation of the downscaled GWSA estimations. The datasets are subject to a restricted quality control approach, and a recent study (Zhang et al., 2020) has verified their dependability. According to Fig. 1, the observation wells in the NCP were distributed equally. It is important to highlight that during the preprocessing stage, a few wells' observations with unusual jumps and outliers were removed. When calculating the groundwater level anomalies (GWLA) for specific bores, the monthly readings were subtracted from the long-term mean between 2005 and 2018 to obtain the GWLA. The observed GWSA was determined by multiplying the GWLA by the specific yield (Sy). After that, the average changes in groundwater storage from 2005 to 2018 were subtracted to generate the GWSA of each well monthly. 4. Methods We used four distinct methodologies: (1) using the modified STL method, we filled in missing months within GRACE and the gap between GRACE and GRACE-FO observations in both space and time before estimating the GWSA; (2) estimating the continuous GWSA using the modified STL-based imputed TWSA; (3) input the environmental variables and GRACE-derived GWSA data into the GWR model; (4) obtaining the intercepts, residuals, and regression coefficients from GWR model. The four statistical indicators of root mean square error (RMSE), Nash-Sutcliffe efficiency (NSE), correlation coefficient (CC), and bias were used to validate the GWR-predicted GWSA data with GRACE-derived GWSA. Sen's slope trend analysis was used to analyze the temporal variations of the downscaled GWSA data, respectively. To calculate the groundwater depletion in the various cities of the NCP, we employed the estimated downscaled GWSA fluctuations. 4.1. Gap filling of GRACE TWSA based on STL Intermittent missing months in GRACE and a continuous gap of 11 months between the GRACE and GRACE-FO prevent improved monitoring of water resources (Gong et al., 2018; Ali et al., 2021, Ali et al., 2022b, Ali et al., 2023; Yi and Sneeuw, 2021; Yin et al., 2022a, Yin et al., 2022b; Wang et al., 2023). Therefore, it is essential to complete the missing months in the data to accurately estimate the components of the hydrological cycle before downscaling GWSA. So far, different techniques such as Multilinear Regression Models, and different AI-based algorithms have been proposed and successfully applied to fill in the data gaps of the GRACE/GRACE-FO. However, since the used techniques mainly consider climatic variables, their optimal use is an issue of doubt because they may not model the exact variations of the GRACE-TWSA which is controlled not only by the climatic forces but also by anthropogenic drivers (Jing et al., 2020). The STL is a filtering method for decomposing time-series datasets. It is both simple and robust at the same time. The STL's simplicity makes it possible to quickly compute and analyze time series data (Cleveland et al., 1990). The STL-based approach is a simple technique to fill in the existing gaps of the global TWSA values and since it is based on decomposing the TWSA time series into its components, it is hypothesized that the reconstructed TWSA values could better represent and characterize the real GRACE-observed TWSA characteristics through reflecting both the natural and anthropogenic impacts. Between 2003 and 2022, there were 31 missing months in total (Fig. S1a). The TWSA data reveals both long-term and seasonal patterns. Using these characteristics of TWSA, the modified STL method was applied to fill in the gaps in the GRACE and GRACE-FO datasets. The R programming environment is used to develop a modified STL model for completing the spatial and temporal gaps in the GRACE and GRACE-FO data. Eq. (1) demonstrates how the trend, seasonal, and residual components of the data were decomposed by the STL model. (1) where , , and at time t are, respectively, the trend, seasonal, and remainder components (Cleveland et al., 1990). The average seasonal and residual values along with the trend component of that missing month were added to compute the missing month's values after the decomposition of TWSA. The modified STL model can be written as Eq. (2): (2) 4.2. Continuous groundwater storage anomaly estimation Snow, glaciers, surface water, soil moisture, and groundwater all contribute to the total water storage. We ignore the variation in surface water storage because around 40 % of the rivers in NCP are perennially dry (Wang et al., 2018; Gong et al., 2018; Zhang et al., 2021b). The main reservoirs have an estimated 2.47 billion m3 of water, or around 1.7 cm of equivalent thickness, according to statistics from the China Water Resources Bulletin (Yin et al., 2022). Water reserves in reservoirs can be disregarded in comparison to groundwater storage (Xiong et al., 2022). The GWSA is calculated by deducting the SMSA and SWEA from the TWSA on the basis that other water storage component's contributions to the NCP are insignificant (Yin et al., 2017; Feng et al., 2018; Gong et al., 2018; Xu et al., 2021). The changes in GWSA in the study area were derived using Eqs. (3), (4). (3) (4) where SMSA and SWEA are anomalies of soil moisture storage and snow water equivalent. 4.3. Geographically weighted regression model Brunsdon et al. (1996) first introduced the GWR as a regression model. It has been widely employed in research on the scale dynamic relationships between dependent and explanatory factors (Foody, 2003). The GWR model can be written as: (5) ɛ where , , , and ɛ are, respectively, the latitude and longitude of the locations, intercept, slope (regression coefficient), residual at the j th point, and p specifies the number of environmental variables. According to Fotheringham et al. (2002), the difference between the GRACE-derived and GWR model predicted values is residual, the estimation of the local constant term is the intercept, and the computation of the local coefficient for each variable is slope; yi denotes the i th observation of the dependent variable and Xi,j denotes the j th observation of i th independent variable. A fundamental idea of the GWR model is that observations nearer to the j th point have a greater influence on the local coefficient for the location, which functions as a distance decay based on the distances between the j th point and its surrounding points. As shown below, the coefficient can be determined as below: (6) where denotes the local coefficient to be estimated at the location ; X and Y represent the vectors of the independent variables and the dependent variables, respectively; and is the weight matrix (Gao et al., 2012). The higher the weight, the closer the j th point is to its neighboring points. The weights can be calculated as follows (Lu et al., 2019; Arshad et al., 2021; Arshad et al., 2022): (7) where, = estimation of coefficient at the i th location using the weight of observation at the j th point. = distance (Euclidean) between the i th and j th points. = adaptive bandwidth size determined by the k th nearest neighbor distance. The selection criterion (Cross-Validation (CV), Bayesian Information Criterion (BIC), Akaike Information Criterion (AIC), and small sample bias adjusted AIC (AICc)) and kernel function (fixed bi-square, fixed Gaussian, adaptive bi-square, and adaptive Gaussian) are the two most important variables in GWR model. weight matrix in Eq. (6) is estimated using the “kernel function”. The ‘selection criterion is used to calculate the adaptive bandwidth's size which is represented by the symbol in Eq. (7). In this work, the Adaptive Gaussian and Cross-Validation were employed as kernel function and selection criterion. As a result of these characteristics, the GWR model can be established with high accuracy (Xu et al., 2015). 4.3.1. Regional downscaling technique based on the GWR model Previous downscaling studies, such as 0.1° (Shang et al., 2019) and 0.25° (Chen et al., 2019; Zhang et al., 2021ab; Xiong et al., 2022), have a target resolution that is too coarse to meet the needs of water resources management in local areas. Based on the constructed regression model, we substitute 0.05° predictors to obtain the GWSA at a higher resolution in this research. To produce the GWSA at 0.05° resolution, we enhanced the regional downscaling model with extensive environmental variables. The developed GWR model at a coarse resolution can be utilized to anticipate high-resolution GWSA using environmental variables with high resolution (Xu et al., 2015). Fig. 2 depicts the information about the downscaling procedure. The following is a list of the specific steps of the GWSA downscaling method based on GWR: Download : Download high-res image (765KB) Download : Download full-size image Fig. 2. GWR regional downscaling of GRACE-derived GWSA from 0.25° to 0.05° process flowchart for the NCP region. (1) Data preparation: It includes the preparation of GWSA data, environmental variables at 0.25°, and environmental variables at 0.05° resolution. The environmental variables include P, SMS, NDVI, LST, and ET. (2) GWR model: The GWR model is developed using environmental variables and GRACE-derived GWSA at a coarse resolution of 0.25°. The output of the GWR model is the intercept, slope (regression coefficients), and regression residual. In this work, the GWR model is developed in R programming. (3) Interpolating the parameters: The bilinear approach is used to interpolate the intercept, slope (regression coefficients), and regression residual from step (2) to generate the data at 0.05°. (4) Downscaling: To obtain the model residuals ( ɛ ), the GWR model predicted GWSA was subtracted from the GRACE-derived GWSA in step (2). Following that, these residuals were bilinearly interpolated to a 0.05° resolution. Using high-resolution environmental variables, slope (regression coefficients), and regression residuals at 0.05° resolution, downscaled GWSA (0.05°) were derived using Eq. (5). (5) The random forest (RF) model's variable importance (VIMP) test was used to determine the parameters and significance of various environmental variables in the study area (Rahaman et al., 2019; Ali et al., 2021; Ali et al., 2022b). VIMP values near 0 show a variable's minimal influence, while higher values show a variable's larger significance in explaining variations in water storage. 4.4. Uncertainty analysis The input variables to the GWR model (NDVI, LST, ET, P, and SMS) are related to uncertainty in the downscaled GWSA. By multiplying each input variable's coefficient value (β) by the sample standard error derived from the standard deviation (σ) (Duan and Li, 2016), the uncertainty related to each input variable was calculated. Utilizing the propagation of errors by linearization method (Faber, 2002; Duan and Li, 2016; Seyoum et al., 2019), the overall uncertainty associated with GWR-based downscaled GWSA ( ) was calculated as follows: (8) The GWR model-based coefficient value (β) was calculated using (Eq. (6)). 4.5. Statistical measurements Over the period 2003–2022, the monthly GWSA estimations derived from GRACE are compared with GWR-based predicted GWSA. The accuracy of the predicted GWSA estimates is evaluated using correlation coefficient (CC), bias (B), Nash Sutcliffe efficiency (NSE), and root mean square error (RMSE) are the four statistical measures chosen for validation (Ali et al., 2021, Ali et al., 2022b, Ali et al., 2023; Khorrami et al., 2023a). The perfect value of CC and NSE ranges from 0 to 1. With a perfect value of 0, B indicates how much predicted GWSA estimates are exaggerated (positive) or underestimated (negative). The term “RMSE” refers to the size of error estimates; the lower the RMSE, the more accurate the predicted GWSA estimates are in comparison to GRACE-derived GWSA. The formulas are as follows: (9) (10) (11) (12) where o and y show GRACE-derived and GWR-based GWSA, the length of the time series is n, and are the mean values of y and o. 4.6. Sen's slope estimator Sen (1968) developed the Sen's slope estimator method as a non-parametric test to approximate the trend slope. In numerous studies (Yue and Hashino, 2003; Gocic and Trajkovic, 2013; Mohsin and Lone, 2021) it has been extensively used for trend analysis of a range of hydrometeorological variables. The Sen's Slope estimator performs the following phases in its computation process: (13) where, and represent the data values at times j and k (j > k) respectively (Gocic and Trajkovic, 2013). The Sen's slope is calculated as the median of the slope: (14) The calculated controls the reflection and the gradient of the current trend through its value and sign (Gocic and Trajkovic, 2013). The magnitude of the trend is estimated using Sen's slope method. 5. Results 5.1. Reconstruction of GRACE TWSA Together, the TWSA data for GRACE and GRACE-FO have 31 missing months. The decomposition components of the GRACE TWSA dataset for the NCP basin are shown in Fig. S3. Several methods have been put forth for reconstructing the GRACE TWSA values. Seasonality is a common feature of the global TWSA changes, and the seasonal changes of the GRACE-observed TWSA were utilized to fill in the missing observations based on the modified STL method which were then verified by the values obtained in the CLSM dataset. The CLSM is currently the only global model that generates hydrological fluxes using the GRACE estimates as part of its advanced data assimilation process (Khorrami et al., 2023a, Khorrami et al., 2023b, Khorrami et al., 2023c). In comparison to other methods, the primary advantage of the novel approach to filling in missing observations based on the modified STL technique is its capacity to more simply and conveniently provide correct estimates of the GRACE missing TWSA observation. The missing months of the GRACE TWSA were filled in at a temporal (Fig. 3a) and spatial scale for each pixel (Fig. 3b) which led to better estimations of hydrological components. Download : Download high-res image (1MB) Download : Download full-size image Fig. 3. (a) modified STL-based filled-in temporal time series and (b) modified STL-based gap-filling between GRACE and GRACE-FO at the pixels level. As a result, better estimates of the hydrological components were produced based on spatiotemporally downscaled and gap-less TWSA values (Kumar et al., 2016). As a result, the TWSA findings from the STL technique were compared to the TWSA over the NCP derived from the CLSM. Fig. 3a shows the TWSA time series of the suggested method along with the missing values obtained from the GRACE-derived, CLSM-derived, and STL-derived values. The STL-based and CLSM-derived TWSA have a 0.93 correlation. The findings show that the employed STL approach can successfully reconstruct the GRACE mission's missing TWSA values. As indicated in Fig. 3a, the TWSA time series show a remarkable decreasing trend for the whole NCP at the rate of 13.30 ± 8.20 mm/yr, 14.75 + 7.67 mm/yr, and 13.33 + 4.85 mm/yr with missing months, without missing months, and CLSM. Similar results were found in previous studies that GRACE-derived TWSA was observed to be declining with a trend of 11 mm/yr from August 2002 to August 2010 (Su et al., 2011), 12.4–15 mm/yr from 2003 to 2011 (Tang et al., 2013), 16.8 mm/yr from 2003 to 2009 (Moiwo et al., 2013), 12.9 mm/yr from April 2002 to March 2016 (Rodell et al., 2018), and 17.95 mm/yr from 2003 to 2017 (Xu et al., 2021). 5.2. Temporal variations characteristics of TWSA and gap-filling effect In comparison to the other GRACE solutions, the mascon solutions often exhibit significantly smaller amplitude variations (i.e., maximum and minimum TWSA) (Xiong et al., 2022; Yin et al., 2022a). It can be observed from Fig. 4 that TWSA sharply increases at a rate of 3.00 mm/yr from 2003 to 2004 with a maximum storage of TWSA (134.42 mm/month in August 2004), however, due to extensive groundwater extraction, TWSA abruptly declined with a rate of 6.79 mm/yr from 2005 to 2009 with depletion value of TWSA 110.95 mm/month in October 2009); however, a notable recharge between 2010 and 2013 was observed and TWSA values reached to 27.86 mm/month (August 2012) as a result of an increase in precipitation. TWSA was observed to stabilize during 2010–2013 with a moderate declining trend of 1.79 mm/yr (Huang et al., 2015). The TWSA was subsequently depleted between 2014 and 2015 because of severe drought (Zhao et al., 2019) with a maximum depletion of TWSA ( 277.25 mm/month). From 2016 to 2018, the stabilizing TWSA was detected with a general declining trend of 0.92 mm/month after the South-to-North Water Diversion Project (SNWDP) implementation along with precipitation. Thereafter, there was a further decline until mid of year 2021, after which there was another sharp recharge observed of TWSA with an increasing trend of 0.98 mm/yr due to an increase in precipitation up to the year 2022 (Fig. 4). Moreover, the modified STL approach successfully filled in the missing gap between GRACE and GRACE-FO TWSA values (Fig. 3a). It can be observed (Fig. 4) that TWSA is decreasing during this missing gap between GRACE and GRACE-FO following the trends of effective precipitation and anomalies of SMS and SWE. Download : Download high-res image (349KB) Download : Download full-size image Fig. 4. Time series of TWSA, GWSA, water storage anomalies, and precipitation from 2003 to 2022 in the NCP region. The red dotted box shows fill-in missing gap between GRACE and GRACE-FO using the modified STL method. Additionally, to calculate the GWSA, the SMSA and SWEA contributions were subtracted from TWSA (Fig. 4) because SMSA and SWEA are the major factors influencing TWSA in the NCP (Yin et al., 2022a; Yin et al., 2022b). Similar to TWSA, the GWSA (Fig. 4) showed a sharp decrease and subsequent increase, indicating a significant loss of groundwater in the region. While there are some changes in amplitude, the temporal distribution of GWSA trends and TWSA trends with CC up to 0.88 is similar. It suggests that GWSA is mostly responsible for the inter-annual trends in TWSA, which is consistent with findings from earlier studies (Rodell et al., 2018; Yin et al., 2020; Xu et al., 2021; Yin et al., 2022). The main cause of this phenomenon is that climate change and intensive irrigation for agriculture place a significant amount of pressure on water supplies (Yin et al., 2022). Due to the lower requirement for irrigation in fall and winter, groundwater is primarily extracted for agricultural use in late spring and summer while remaining in aquifers until the next spring (Liu et al., 2022). For instance, from 2003 to 2012, Hebei province was found to have the highest annual average use of groundwater within the NCP at 15.64 km3, followed by Henan province (2.54 km3) (WRPB, 2012). A following decreasing GWSA, however, was discovered from 2018 to the middle of 2021, which may have been brought on by a rise in groundwater depletion and a decline in precipitation. For instance, the year 2019 had the lowest annual precipitation of the previous years, at 532 mm (11.5 % decline from the long-term mean of 601 mm). This might reduce the net recharging of the aquifer and increase groundwater pumping due to the limited surface water availability. Precipitation, GRACE, and GLDAS (SMSA and SWEA) data for the period 2003–2022 generally show apparent stability and seasonal variation. Through complex hydrological processes such as surface runoff, evapotranspiration, and infiltration, precipitation must be redistributed before transforming into terrestrial water storage. As a result, there were periods in which the variations in precipitation and GRACE were not very consistent. According to Hocking and Kelly (2016) and Rossman et al. (2014), there is a lag in groundwater recharging. According to Liu et al. (2022), who examined changes in GWSA with precipitation 1–3 months lag, GWSA recharging in the NCP is more significantly influenced by and responds to precipitations more quickly. It is worth noting that the maximum monthly average precipitation of 235.03 mm, 261.65 mm, 243.75 mm, 296.82 mm, 350.73 mm, and 230.72 mm occurred in 2010, 2012, 2013, 2016, 2021, and 2022 with average GRACE monthly values (−72.36 mm, −105 mm, −51.90 mm, −213.54 mm, −268.25 mm, and − 76.64 mm) in these years. The comparison results of GRACE, GLDAS (SMSA and SWEA), and precipitation data showed that they presented regular seasonal fluctuations with consistencies. Rapid population growth and the expansion of irrigated agriculture have increased the pressure on the sustainability of groundwater storage. Overuse of groundwater is anticipated to increase when local surface water supplies become inadequate to meet rising demand. The rising water demand will inevitably have an impact on groundwater overexploitation in the region. Koch et al. (2020) estimated average annual net irrigation of 126 mm/yr (15.2 km3/yr) for NCP and annual winter wheat classifications reveal an increasing crop area with a trend of 2200 km2/yr. the NCP confronts significant issues in the management of water supplies, especially groundwater reserves, due to its status as a vital producing and living area in China. 5.3. Downscaling of continuous GWSA To predict the GWSA, all spatial independent and dependent variables at a coarse resolution of 0.25° were incorporated into the GWR model. The GWR model predicted GWSA was compared to GRACE-derived GWSA. To assess the spatial distribution differences between GRACE-derived and GWR-based GWSA maps are compared for March 2020. The particular month was chosen to observe the fluctuations in GWSA and because of the significant GWSA depletion in that month. The model-based approach under- and over-estimated the GWSA with biases of 1.60 % and 2.50 %, respectively, while CC ranged between 0.93 and 0.96, according to a statistical analysis of GWR model predicted and GRACE-derived GWSA (Fig. S4) from 2003 to 2022. The spatial distribution of the GWR model predicted GWSA substantially resembles the GRACE-derived GWSA, with small under/overestimations according to pixel-wise evaluation (Fig. 5b). With local R2 values ranging from 0.63 to 0.85, the GWR model performed effectively on the majority of pixels (Fig. 5c). Fig. 5d displays the residuals map, which represents the amount of GWSA that the model is unable to account for and is noisy in terms of under- and over-estimation in model prediction. When comparing the model-based GWSA (Fig. 5b) to the GRACE-derived GWSA (Fig. 5a), the largest under- and overestimations reported were 95 mm/month and 181 mm/month (Fig. 5d). To get the high-resolution GWSA estimates, intercept and regression coefficients at a resolution of 0.25° from the GWR model output were further interpolated to 0.05° using the bilinear interpolation method in R programming. Eq. (5) was applied to the interpolated intercept and regression coefficients along with environmental variables to estimate the GWSA at 0.05° (Fig. 5e). Residual corrections minimize the bias, or over- or under-estimation, in the results of downscaling. The GWR model interpolated regression residuals and estimated GWSA at a resolution of 0.05° are combined to perform residuals correction to compute GWR model-based downscaled GWSA at a resolution of 0.05° (Fig. 5f). The GWR model generated good results with high local R2 values and minimum residuals given the current arrangement of environmental variables, demonstrating its ability to forecast high-resolution GWSA in the research area. Because downscaled and GRACE-derived GWSA show similar spatial patterns, the spatial pattern is conserved while the downscaling approach improves spatial information of GRACE data at coarse resolution. Download : Download high-res image (828KB) Download : Download full-size image Fig. 5. Regional downscaling of GRACE-derived GWSA based on the GWR model. (a) GRACE-derived GWSA, (b) GWR-predicted GWSA, (c) local R2, (d) interpolated residuals to 0.05°, (e) GWR-based estimated GWSA at 0.05° without residuals correction, and (f) downscaled GWSA after residual correction at 0.05°. To produce high-resolution (0.05°) GWSA data for the NCP, GWR performance is examined for various months between 2003 and 2022. Fig. S5 contrasts the spatial distribution of monthly GWSA estimations derived from GWR-based downscaled and GRACE-derived for multiple selected months from 2003 to 2022. When compared to GRACE-derived estimations, it was found that downscaled GWSA estimates showed very similar spatial patterns of GWSA values. This showed that the downscaling method using the most recent high-resolution explanatory factors not only translated GWSA with improved information but also preserved the spatial pattern of GWSA. The downscaled GWSA using the GWR model has some uncertainty due to several sources of errors (such as input variables). Downscaled GWSA had an overall uncertainty of 14.39 mm, with particular uncertainties of 4.28 mm for SMS, 2.57 mm for rainfall, 1.62 mm for ETa, 0.50 mm for LST, and 3.16 for NDVI respectively. The capability of the model to estimate high-resolution GWSA changes is greatly influenced by the environmental variables that determine trending fluctuations in water storage variations (Ali et al., 2021; Ali et al., 2022b; Ali et al., 2023). The VIMP test revealed that the complex hydroclimatic and topographical aspects of the research region affected the geographical variation in the relevance of environmental variables (Fig. S6). For instance, it was discovered that NDVI, with a VIMP value of 49.80 %, was more significant in model prediction than precipitation (20.30 %) and SMS (20.00 %). To better show the features of the downscaled results, we compared the GWSA produced at 0.25° grid with one at 0.05° spatial resolution. The downscaled GWSA was consistent with the GRACE-derived 0.25° grid. Fig. 6 displays the geographical variations in March 2007 GWSA fluctuations between GRACE-derived and GWR-downscaled values. High-resolution GWSA measurements along the transects reveal the GWSA's spatial fluctuations, which are hidden in the coarse resolution of GRACE data. Each of the three transects (P1-P2, P3-P4, and P5-P6) covers 6, 4, and 2 pixels of the GRACE-derived GWSA data (Fig. 6a) and 30, 20, and 10 pixels of the downscaled GWSA data (Fig. 6b). High-resolution GWSA data is especially helpful for small regions where it is difficult to detect spatial distribution fluctuations. The downscaled data, for instance, reveal a large regional spatial variability in the GWSA fluctuations (56.51 to 84.68 mm EWH) in transect P1-P2 (Fig. 6d), whereas the GRACE-derived GWSA is represented by homogenized pixels (Fig. 6c). This means that the downscaling results are consistent with the GRACE-derived values and also display finer regional heterogeneity. Download : Download high-res image (547KB) Download : Download full-size image Fig. 6. GWSA spatial distribution comparison at a resolution of 0.25° and 0.05° in the NCP for March 2007 (a, b) and (c, d) shows temporal variations of GWSA at a resolution of 0.25° and 0.05° in different transects. The comparison of monthly GWR model-based downscaled and GRACE-derived GWSA variations over the NCP is shown in Fig. 7a. Similar variations in amplitudes may be seen in the time series of the coarse GRACE-derived and downscaled GWSA data, and both time series are consistent pre- and post-downscaling (Fig. 7a), demonstrating the suitability of the regional downscaling technique to estimate GWSA changes at a high resolution. Between 2003 and 2022, the downscaled GWSA in the NCP generally decreased by 17.51 ± 7.25 mm/yr, and the GRACE-derived GWSA decreased by 17.55 ± 7.19 mm/yr (Fig. 7a). Other studies using GRACE observations have also noted GWSA decline over a variety of periods, ranging from 16.6 to 19.1 mm/year from 2003 to 2020 (Liu et al., 2022; Xiong et al., 2022; Gong et al., 2018; Zhang et al., 2021a, Zhang et al., 2021b). Download : Download high-res image (877KB) Download : Download full-size image Fig. 7. (a) Time series of GRACE-derived and downscaled GWSA variations over the NCP from 2003 to 2022. The different shades of colors show sub-periods (I) increasing, (II) decreasing, (III) stabilizing, (IV) sharp decreasing, and (V) increasing trends of GWSA and (b) spatial distribution of GWSA in different sub-periods. Since GWSA fluctuations during the whole study period (2003–2022) were not consistent, the study duration was split into five distinct sub-periods (January 2003 to April 2007 (I), May 2007 to December 2014 (II), January 2015 to December 2018 (III), January 2019 to May 2021 (IV), and June 2021 to December 2022 (V)) to explore variations of the GWSA in more detail. The sub-periods are shown in different colors in Fig. 7a. The GWSA was increasing at the rate of 2.98 mm/yr in sub-period I, a decreasing trend of 8.45 mm/yr was observed in sub-period II, followed by 3.90 mm/yr in sub-period III and 3.97 mm/yr in sub-period IV. Among them, the rate of GWSA is recovered in sub-period V with a rate of 3.08 mm/yr. Despite the initial recovery in groundwater levels following the initiation of the South-to-North Water Diversion Project (SNWDP) from 2015 to 2018, further investigations have revealed negative trends in GWSA throughout period III. This can be attributed to the significant and persistent depletion of deep groundwater resources, exacerbated by inadequate precipitation, as documented by Li et al., 2021a, Li et al., 2021b and Xiong et al. (2022). According to a subsequent study (Guo et al., 2022), which similarly shows substantial growth in the deep groundwater funnel area from 2014 to 2020, similar behavior has been seen. The implementation of the SNWDP in 2014 enabled a shift from the previous water utilization approach to a conjunctive use of surface water and groundwater. However, the declining groundwater storage during period III indicates an increased water demand in arid conditions that cannot be adequately met solely through surface water sources such as diverted water and precipitation. Furthermore, it should be noted that the process of recovering from overexploitation, as observed in previous decades (Chen et al., 2005), is a gradual one. This is particularly evident when considering the increased extraction of groundwater and the subsequent decrease in net recharge due to the effects of a dry climate, as exemplified by the years 2019 and 2020. The spatial distribution of GWSA was also analyzed during different sub-periods between 2003 and 2022. In sub-period I, surpluses were observed overall in the NCP. Minor deficits were starting to be experienced in the southwest region of NCP (sub-period I). However, sub-periods (III and IV) showed serious losses in GWSA over the cities to the southwest region of NCP. The GWSA losses were reduced through recharging by precipitation impact observed in sub-period V (Fig. 7b). Additionally, there have been observed small upward trends in GWSA around Beijing and Tianjin, the primary cities that receive diverted water from the SNWDP. Feng et al. (2013) observed a spatial pattern in groundwater depletion rates across three regions in China, namely Hebei province, Tianjin, and Beijing, during the period from 2003 to 2010. The depletion of groundwater was most pronounced in Hebei province, followed by Tianjin and Beijing. A comparable spatial trend was also identified throughout the period from 2003 to 2015, as reported by Gong et al. (2018). The regional distribution of our downscaled GWSA exhibited a comparable pattern over the NCP from 2004 to 2014. From 2015 to 2020, the GWSA observed a spatial divergence at the subregional level, indicating the presence of groundwater recovery in the vicinity of Beijing and Tianjin. Additionally, the regions along the SNWDP route exhibited a less pronounced depletion compared to previous periods. These findings align with the in-situ results reported by Zhang et al. (2021a). The annual spatial distribution of GWSA also depicted that GWSA is declining from 2003 to 2022. However, a significant recovery of GWSA was observed in the year 2022 in comparison to the year 2021 due to the huge precipitation that occurred in 2021 and 2022. But the groundwater depletion is more pronounced in southwest regions (such as Xingtai, Handan, Anyang, Hebi, Puyang, and Xinxiang) (Fig. 8). Concerning the effects of evapotranspiration (ET) variations, it is important to acknowledge that the combination of elevated temperatures and abundant precipitation results in the highest estimated ET values during July (Fig. S2). Regarding the ET throughout August to October, as depicted in Fig. S2, it is observed that over 75 % of the overall precipitation takes place within these months. Additionally, it is worth noting that the groundwater, which is partially replenished by surface water, is utilized for irrigation purposes in preceding months. This utilization of groundwater for irrigation may potentially lead to a reduction in natural ET. The potential impact of reservoir regulation on both run-off control (Xu et al., 2013) and changes in TWSA (Melo et al., 2016) should also be considered, since it may influence the outcomes. High aquifer pumping for human consumption and agriculture water supply is related to this development, where GWSA is the primary component of the TWSA. The drought characteristics of the research region and the considerable human footprints in the already vulnerable areas are also related to the regional spatial heterogeneity in GWSA variations (Xiong et al., 2022; Yin et al., 2022a; Yin et al., 2022b). Download : Download high-res image (411KB) Download : Download full-size image Fig. 8. Averaged annual spatial distribution of downscaled GWSA in NCP from 2003 to 2022. The SNWDP construction considerably enhanced the water supply and security in the water-scarce areas along its path. Although there are obvious amplitude fluctuations within Tianjin and Hebei Province from 2015 to 2019 (Fig. 8), the spatial distribution reveals a steady GWSA decline from south to north. After 2015, the amplitude of the GWSA sequence significantly increased, yet it continued to exhibit a negative trend (Fig. 8). This suggests that groundwater over-extraction is turning into a more significant issue as a result of the increased demand for groundwater from industries and agriculture following the SNWDP. In the NCP, the regional distribution of GWSA is most noticeable, the amplitude of GWSA is substantially larger and these problems lasted until mid-2021. There was an obvious GWSA recovery observed from mid-2021 until 2022. In conclusion, the SNWDP does help GWSA mitigate a drought over the NCP. Data from 558 groundwater level observations and corresponding downscaled pixel values in the research area were averaged at the regional scale (Fig. S7) and were used to validate downscaled GWSA anomalies. Fig. 9, for instance, displays the mean monthly time series of the observed and downscaled GWSA. Downscaled GWSA exhibits a strong association with in-situ GWSA measurements from 2005 to 2018 when compared to observational data (R = 0.83), with decreasing rates of 15.22 ± 6.64 mm/yr and 13.36 ± 8.36 mm/yr, respectively. Nevertheless, according to the estimates derived from well data, the GWSA exhibited a positive trend of +1.88 mm/yr. In contrast, the estimates obtained by GRACE-based downscaled analysis suggested a decrease of −3.94 mm/yr. However, a period of recovery was observed between 2016 and 2018, which can be attributed to the implementation of the SNWDP in conjunction with an increase in precipitation. The discrepancies in trend values can be attributed to the relatively low seasonal amplitude of GRACE-based downscaled GWSA compared to well observations. This discrepancy is primarily caused by two factors: (1) contamination of sub-regional GRACE data by signal leakage and amplitude-damping effects, as discussed by Feng et al. (2013) and Huang et al. (2015); and (2) the utilization of an overestimated specific yield when converting groundwater levels to GWS. Download : Download high-res image (385KB) Download : Download full-size image Fig. 9. Temporal validation of downscaled GWSA at pixel scale from 2005 to 2018. Given the evidence that GRACE-based downscaled GWSA is indicative of groundwater depletion caused by climate factors, the differences observed between GRACE-based downscaled results and in situ measurements could potentially be attributed to the complex groundwater processes associated with prolonged groundwater extraction (Thomas and Famiglietti, 2019; Scanlon et al., 2021). The GRACE-based downscaled approach involves the subtraction of non-GWSA TWSA components of the NOAH model from TWSA. It is important to note that the uncertainty inherent in NOAH simulations, such as soil moisture, can affect the estimation of GWSA. This influence is particularly significant during extreme events, such as the drought experienced from 2014 to 2015. In addition, it should be noted that the NOAH model's soil moisture depth is limited, which might potentially lead to an inadequate representation of the unsaturated zone's impact on GRACE-based downscaled data. This limitation becomes apparent when comparing it to groundwater-level measurements since the recharge water must infiltrate beyond the root zone to be accurately reflected. In contrast to in-situ measurements that solely assess shallow unconfined aquifers, the GRACE-based downscaled approach includes variations in groundwater levels within deep confined aquifers. This inclusion may amplify differences, particularly in cases where significant extraction of deep groundwater occurs. In light of the aforementioned data limitations associated with the GRACE mission, it is worth noting that the differences observed between GRACE-based downscaled and in-situ findings could potentially be attributed to the very large spatial scale (i.e., 150,000 km2) at which raw GRACE observations are conducted. The fluctuations in specific yield (as depicted in Fig. 1) of the aquifer, along with its inherent uncertainty and regional heterogeneity, may potentially account for the observed discrepancies. 5.4. Estimation of GWSA variations over the local scale In different regions of the NCP from 2003 to 2022, Fig. 10 displays the averaged (2003–2022) annual spatial distribution of downscaled GWSA variations and temporal variations. Fig. 10 shows how downscaling enhanced the assessment of GWSA variations within each region of NCP. When compared to GRACE-derived GWSA at coarse resolution, the spatial fluctuation captured in the high-resolution GWSA data (Fig. 10) seems to be homogeneous in coarse resolution (Fig. S8). For example, in Xingtai, Handan, Anyang, Hebi, Jiaozuo, Xinxiang, and Puyang, downscaled GWSA observed strong spatial heterogeneity and temporal variations at a higher decline with primarily intensive winter-wheat and summer-maize cropping system and increasing agricultural land use area in recent years (Zhang et al., 2019; Koch et al., 2020). For instance, GRACE-derived GWSA shows homogenized spatial distribution at pixel scale over the Xingtai and Handan regions (Fig. S8), while spatially distributed GWSA variations are observed by downscaled GWSA within these regions (Fig. 10). GWSA variations were previously investigated using GRACE data also agreed that more GWSA depleted in southwest regions of NCP (Gong et al., 2018; Yin et al., 2022a, Yin et al., 2022b; Liu et al., 2022; Chen et al., 2021; Agarwal et al., 2022; Xiong et al., 2022). The GWSA estimations derived from the downscaled GRACE data offer a good level of precision to comprehend fluctuations at the local scale level. To understand fluctuations at the local scale level, downscaled GWSA estimations derived from the GWR model were utilized. Although the GWSA decreased overall between 2003 and 2022, hotspots of groundwater storage depletion are particularly obvious in the Xingtai and Handan regions. Comparing the southern areas to those in the upper areas, the GWSA drop is greater in the southern regions (Fig. 10). This is most likely due to the bigger consumptive fraction of irrigation withdrawal and the higher proportion of irrigation demand in the southern areas, which is mostly supplied by groundwater (Gong et al., 2018; Agarwal et al., 2022; Xiong et al., 2022). Download : Download high-res image (509KB) Download : Download full-size image Fig. 10. Averaged (2003–2022) annual spatial distribution of downscaled GWSA and temporal variations of GWSA in the NCP's cities from 2003 to 2022. 5.5. Groundwater storage trend variation in different regions of NCP The NCP uses 30 % of the nation's groundwater since it is China's political, economic, and agricultural center. The NCP's topographical features result in minimal surface water reserves and a predominance of groundwater for its freshwater resources. Groundwater accounts for more than 79 % of the water supply sources in Hebei Province and provides almost 60 % of the freshwater resources in Beijing and Henan Province. Groundwater reserves in the NCP have seen extensive exploitation recently as a result of the growth of industry and agriculture. Some areas experience groundwater depletion as a result of insufficient groundwater supplies. The NCP region's stability and economic growth are significantly hampered by this problem. Monitoring the NCP's unique groundwater changes is therefore required. Scholars have also conducted a considerable deal of research over the past two decades, which has greatly advanced knowledge (Huang et al., 2015; Moiwo et al., 2013; Gong et al., 2018; Li et al., 2021a, Li et al., 2021b). This section calculates the long-term trend values of GWSA (Fig. 11) in various cities over the NCP using the downscaled GWSA results from this study. Download : Download high-res image (353KB) Download : Download full-size image Fig. 11. Sen's slope derived GWSA trend values of cities in the NCP estimated from 2003 to 2022. Fig. 11 makes clear that the GWSA has a declining trend of cities in the southwest and small GWSA variations were observed in the northeast regions. Fig. S9 compares the temporal variations of in situ and downscaled GWSA from 2005 to 2018 in different cities of NCP. The highest CC was found in Anyang (0.91), Shijiazhuang (0.83), and Xingtai (0.74) with long-term trend values of 15.12 mm/yr, 15.61 mm/yr, and 11.44 mm/yr for in situ GWSA and 13.89 mm/yr, 13.61 mm/yr, and 14.17 mm/yr for downscaled GWSA. The downscaled GWSA data indicated similar temporal patterns of in situ GWSA. Table S1 represents the long-term trend values in different cities of NCP. The largest negative anomaly, up to 15.21 mm/yr, was recorded in Handan (Fig. 11). Tangshan has the lowest negative anomaly (Fig. 11, up to 9.08 mm/yr). According to Malekinezhad and Banadkooki (2018), this is the outcome of a combination of precipitation, evapotranspiration, hydrogeological conditions, and human activity. 5.6. Limitations and future directions The limitations of our study, which can be overcome by subsequent research to further enhance the ability to identify groundwater depletion hotspots, should be taken into account while evaluating the contributions of our study. First, the trend, seasonal, and remaining components of the modified STL model are employed to fill in the missing data in GRACE and between GRACE and GRACE-FO. Although this method takes advantage of seasonal fluctuations in GRACE data, other machine learning methods can be adopted to derive TWSA data and compare it to modified STL model-based continuous TWSA data. Second, the GRACE Level-3 CSR-Mascon solutions were only downscaled. By downscaling additional Spherical Harmonic and Mascon products, which are available at 1° and 0.50°, the hotspots of groundwater depletion analysis can be expanded to examine the consistency. Third, a thorough validation process is complicated by the few groundwater level observations that have been made across the entire NCP. The anticipated groundwater depletion, however, is consistent with estimations made using the observational groundwater level data that is currently available. Finally, a thorough examination of the effects of cropping systems on the depletion of groundwater storage may be carried out in the NCP. 6. Conclusions The coarse resolution of GRACE measurements has made it extremely difficult to understand how water resources are changing dynamically at the local scale. There have been numerous attempts made to downscale GRACE observations using machine learning methods. Prior to downscaling GRACE data, however, there hasn't been much research done to fill in the gaps in GRACE and between GRACE and GRACE-FO. Therefore, the modified STL model is initially used to generate continuous GRACE TWSA data before GRACE-derived GWSA downscaling. The modified STL-based continuous GRACE-derived GWSA along with environmental variables input to the GWR model to develop a unique regression regional downscaling model, which successfully improved the spatial resolution of GWSA to 0.05°. In general, a regional downscaling approach can identify spatial heterogeneity at a local scale while keeping the original GRACE-derived GWSA features. Based on the regional downscaling results, regions with maximum groundwater depletion can be located which seems to be uniform at the coarse resolution of GWSA. For instance, Handan ( 15.21 mm/yr), Xingtai ( 14.98 mm/yr), and Shijiazhuang ( 14.58 mm/yr) are the most depleted regions in the southwestern NCP. The validation results of selected pixels of downscaled GWSA against in-situ groundwater level measurements show a correlation of 0.83. In general, the downscaling scheme developed in this work suggests increased temporal coherence in addition to improved geographical variability. Higher resolution products may help with understanding the dynamics of local water resources and may offer quantitative data that is helpful for water management when taking regional agricultural water use into account. CRediT authorship contribution statement Shoaib Ali: Conceptualization, Methodology, Data processing, and analysis, Writing - original draft, Writing - review & editing. Jiangjun Ran: Methodology, Data processing, Writing - Review & editing, Yi Luan: Writing - Review & editing, and Behnam Khorrami: Writing - Review & editing, Yun Xiao: Writing - Review & editing, and Natthachet Tangdamrongsub: Writing - Review & editing. Declaration of competing interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgments The authors thank the Demonstration of Multiscale Remote Sensing Monitoring for Water Resources and Hydraulic Facilities in River Basins (2021YFB3900604) and the National Natural Science Foundation of China (42322403, 42174096) for their support. The groundwater level data are publicly available on the Data Sharing Repository of National Earth System Science Data Center (https://www.doi.org/10.12041/geodata.10392011028646.ver1.db). The authors are particularly grateful to the Center for Space Research (CSR), University of Texas for providing GRACE mascon solutions (http://www2.csr.utexas.edu/grace). The authors appreciate the constructive feedback from the editor, associate editor, and two reviewers. We also thank Dr. Yun Pan from the Beijing Laboratory of Water Resources Security, Capital Normal University for providing NCP groundwater level data and Dr. Chong Zhang from the Institute of Land Surface System and Sustainable Development, Beijing Normal University for providing rivers network, specific yield, and groundwater level data. Appendix A. Supplementary data Download : Download Word document (5MB) Supplementary material Data availability Data will be made available on request. References Abhishek and Kinouchi, 2021 Abhishek, T. Kinouchi Synergetic application of GRACE gravity data, global hydrological model, and in situ observations to quantify water storage dynamics over peninsular India during 2002-2017 J. Hydrol., 596 (2021), Article 126069 View PDFView articleView in ScopusGoogle Scholar Agarwal et al., 2022 V. Agarwal, O. Akyilmaz, C.K. Shum, et al. Machine Learning Application for Modeling High-resolution Groundwater Storage Variations in North China Plain, PREPRINT (Version 1) Available at Research Square (2022), 10.21203/rs.3.rs-2062965/v1 Google Scholar Ali et al., 2021 S. Ali, D. Liu, Q. Fu, M.J.M. Cheema, Q.B. Pham, M. Rahaman, T.D. Dang, D.T. Anh Improving the resolution of GRACE data for spatio-temporal groundwater storage assessment Remote Sens., 13 (17) (2021), p. 3513, 10.3390/rs13173513 View in ScopusGoogle Scholar Ali et al., 2022a S. Ali, Q. Wang, D. Liu, Q. Fu, M. Mafuzur Rahaman, M. Abrar Faiz, M. Jehanzeb Masud Cheema Estimation of spatio-temporal groundwater storage variations in the lower transboundary Indus Basin using GRACE satellite J. Hydrol., 605 (2022), Article 127315, 10.1016/j.jhydrol.2021.127315 View PDFView articleView in ScopusGoogle Scholar Ali et al., 2022b S. Ali, D. Liu, Q. Fu, M.J.M. Cheema, S. Chandra Pal, A. Arshad, Q.B. Pham, L. Zhang Constructing high-resolution groundwater drought at spatio-temporal scale using GRACE satellite data based on machine learning in the Indus Basin J. Hydrol., 612 (2022), Article 128295, 10.1016/j.jhydrol.2022.128295 View PDFView articleView in ScopusGoogle Scholar Ali et al., 2023 S. Ali, B. Khorrami, M. Jehanzaib, A. Tariq, M. Ajmal, A. Arshad, M. Shafeeque, A. Dilawar, I. Basit, L. Zhang, S. Sadri, M.A. Niaz, A. Jamil, S.N. Khan Spatial downscaling of GRACE data based on XGBoost model for improved understanding of hydrological droughts in the Indus Basin irrigation system (IBIS) Remote Sens., 15 (2023), p. 873, 10.3390/rs15040873 View in ScopusGoogle Scholar Amiri et al., 2023 V. Amiri, S. Ali, N. Sohrabi Estimating the spatio-temporal assessment of GRACE/GRACE-FO derived groundwater storage depletion and validation with in-situ water quality data (Yazd province, central Iran) J. Hydrol., 620 (2023), p. 129416 ISSN 0022-1694 https://doi.org/10.1016/j.jhydrol.2023.129416 View PDFView articleView in ScopusGoogle Scholar Arshad et al., 2020 A. Arshad, Z. Zhang, W. Zhang, A. Dilawar Mapping of favorable groundwater potential recharge zones using GIS-based analytical stratification process and probability frequency ratio model: a case study of agricultural urban areas in Pakistan Front. Earth Sci. (2020), 10.1016/j.gsf.2019.12.013 Google Scholar Arshad et al., 2021 A. Arshad, W. Zhang, Z. Zhang, S. Wang, B. Zhang, M.J.M. Cheema, M.J. Shalamzari Reconstructing high-resolution gridded precipitation data using an improved downscaling approach over the high altitude mountain regions of Upper Indus Basin (UIB) Sci. Total Environ., 784 (2021), Article 147140 View PDFView articleView in ScopusGoogle Scholar Arshad et al., 2022 A. Arshad, A. Mirchi, M. Samimi, B. Ahmad Combining downscaled-GRACE data with SWAT to improve the estimation of groundwater storage and depletion variations in the Irrigated Indus Basin (IIB) Sci. Total Environ., 838 (2022), Article 156044 View PDFView articleView in ScopusGoogle Scholar Bierkens, 2015 M.F.P. Bierkens Global hydrology 2015: state, trends, and directions Water Resour. Res., 51 (7) (2015), pp. 4923-4957 View in ScopusGoogle Scholar Brunsdon et al., 1996 C. Brunsdon, A.S. Fotheringham, M.E. Charlton Geographically weighted regression: a method for exploring spatial non-stationarity Geogr. Anal., 28 (1996), pp. 281-298 CrossRefGoogle Scholar Cai, 2008 X. Cai Water stress, water transfer and social equity in northern China—implications for policy reforms J. Environ. Manag., 87 (1) (2008), pp. 14-25, 10.1016/j.jenvman.2006.12.046 View PDFView articleView in ScopusGoogle Scholar Cao et al., 2016 G. Cao, B.R. Scanlon, D. Han, C. Zheng Impacts of thickening unsaturated zone on groundwater recharge in the North China Plain J. Hydrol., 537 (2016), pp. 260-270 View PDFView articleView in ScopusGoogle Scholar Chen et al., 2016 J. Chen, J.S. Famiglietti, B.R. Scanlon, M. Rodell Groundwater storage changes: present status from GRACE observations Surv. Geophys., 37 (2) (2016), pp. 397-417 CrossRefView in ScopusGoogle Scholar Chen et al., 2019 L. Chen, Q. He, K. Liu, J. Li, C. Jing Downscaling of GRACE-derived groundwater storage based on the random forest model Remote Sens., 11 (24) (2019), p. 2979 CrossRefView in ScopusGoogle Scholar Chen et al., 2005 Z. Chen, Z. Nie, Z. Zhang, J. Qi, Y. Nan Isotopes and sustainability of groundwater resources, North China Plain Groundwater, 43 (2005), pp. 485-493 Google Scholar Chen et al., 2021 Z. Chen, W. Zheng, W. Yin, X. Li, G. Zhang, J. Zhang Improving the spatial resolution of grace-derived terrestrial water storage changes in small areas using the machine learning spatial downscaling method Remote Sens., 13 (2021), 10.3390/rs13234760 Google Scholar Ciraci et al., 2020 E. Ciraci, I. Velicogna, S. Swenson Continuity of the mass loss of the world’s glaciers and ice caps from the GRACE and GRACE follow-on missions Geophys. Res. Lett., 47, no. 9 (2020), Article e2019GL086926 View in ScopusGoogle Scholar Cleveland et al., 1990 R.B. Cleveland, W.S. Cleveland, J.E. McRae, I. Terpenning STL: a seasonal-trend decomposition J. Off. Stat., 6 (1) (1990), pp. 3-73 Google Scholar Duan and Li, 2016 S.B. Duan, Z.L. Li Spatial downscaling of MODIS land surface temperatures using geographically weighted regression: case study in northern China IEEE Trans. Geosci. Remote Sens., 54 (11) (2016), pp. 6458-6469 View in ScopusGoogle Scholar Faber, 2002 N.K.M. Faber Uncertainty estimation for multivariate regression coefficients Chemom. Intell. Lab. Syst., 64 (2) (2002), pp. 169-179 View PDFView articleView in ScopusGoogle Scholar Famiglietti, 2014 J.S. Famiglietti The global groundwater crisis Nat. Clim. Chang., 4:11 (4) (2014), pp. 945-948, 10.1038/nclimate2425 View in ScopusGoogle Scholar Feng et al., 2013 W. Feng, M. Zhong, J.M. Lemoine, R. Biancale, H.T. Hsu, et al. Evaluation of groundwater depletion in North China using the Gravity Recovery and Climate Experiment (GRACE) data and ground-based measurements Water Resour. Res., 49 (2013), pp. 2110-2118 CrossRefView in ScopusGoogle Scholar Feng et al., 2018 Wei Feng, C.K. Shum, M. Zhong, Y. Pan Groundwater storage changes in China from satellite gravity: an overview Remote Sens., 10 (5) (2018), p. 674, 10.3390/rs10050674 View in ScopusGoogle Scholar Fok and Liu, 2019 H.S. Fok, Y. Liu An improved GNSS-inferred seasonal terrestrial water storage using terrain-corrected vertical crustal displacements constrained by GRACE Remote Sens., 11 (12) (2019), p. 1433 CrossRefView in ScopusGoogle Scholar Foody, 2003 G.M. Foody Geographical weighting as a further refinement to regression modelling: an example focused on the NDVI–rainfall relationship Remote Sens. Environ., 88 (2003), pp. 283-293 View PDFView articleView in ScopusGoogle Scholar Fotheringham et al., 2002 A.S. Fotheringham, C.F. Brunsdon, M.E. Charlton Geographically Weighted Regression: The Analysis of Spatially Varying Relationships John Wiley & Sons, Hoboken: NJ (2002) Google Scholar Gao et al., 2012 Y. Gao, J. Huang, S. Li, S. Li Spatial pattern of non-stationarity and scale-dependent relationships between NDVI and climatic factors—a case study in Qinghai-Tibet Plateau, China Ecol. Indic., 20 (2012), pp. 170-176 View PDFView articleView in ScopusGoogle Scholar Ghobadi et al., 2020 F.K. Ghobadi, S.C. Han, S. Allgeyer, P. Tregoning, J. Sauber, S. Behzadpour, G.T. Mayer, N. Sneeuw, E. Okal GRACE gravitational measurements of tsunamis after the 2004, 2010, and 2011 great earthquakes J. Geod., 94 (7) (2020), p. 65 Google Scholar Gocic and Trajkovic, 2013 M. Gocic, S. Trajkovic Analysis of changes in meteorological variables using Mann-Kendall and Sen’s slope estimator statistical tests in Serbia Glob. Planet. Chang., 100 (2013), pp. 172-182 View PDFView articleView in ScopusGoogle Scholar Gong et al., 2018 H. Gong, Y. Pan, L. Zheng, X. Li, L. Zhu, C. Zhang, Z. Huang, Z. Li, H. Wang, C. Zhou Long-term groundwater storage changes and land subsidence development in the North China Plain (1971–2015) Hydrogeol. J., 26 (5) (2018), pp. 1417-1427, 10.1007/s10040–018-1768–4 View in ScopusGoogle Scholar Guo et al., 2022 Y. Guo, F. Gan, B. Yan, J. Bai, F. Wang, R. Jiang, N. Xing Evaluation of groundwater storage depletion using GRACE/GRACE Follow On data with land surface models and its driving factors in Haihe River basin, China Sustainability, 14 (2022), p. 1108 CrossRefView in ScopusGoogle Scholar Haihe River Water Conservancy Commission (HRWCC), 2003–2020 Haihe River Water Conservancy Commission (HRWCC) Annual Bulletin of Water Resources in Haihe River Basin (2003–2020) Google Scholar Han et al., 2021a S.C. Han, K. Ghobadi-Far, I.Y. Yeo, C.M. McCullough, E. Lee, J. Sauber GRACE follow-on revealed Bangladesh was flooded early in the 2020 monsoon season due to premature soil saturation Proc. Natl. Acad. Sci., 118 (2021), Article e2109086118 View in ScopusGoogle Scholar Han et al., 2021b S.C. Han, I.Y. Yeo, M. Khaki, C.M. McCullough, E. Lee, J. Sauber Novel along-track processing of GRACE follow-on laser ranging measurements found abrupt water storage increase and land subsidence during the 2021 March Australian flooding Earth Space Sci., 8 (2021), Article e2021EA001941 View in ScopusGoogle Scholar He et al., 2020 Q. He, K.P. Chun, H.S. Fok, Q. Chen, B. Dieppois, N. Massei Water storage redistribution over East China, between 2003 and 2015, driven by intra- and inter-annual climate variability J. Hydrol., 583 (2020), Article 124475 View PDFView articleView in ScopusGoogle Scholar Hocking and Kelly, 2016 M. Hocking, B.J. Kelly Groundwater recharge and time lag measurement through vertosols using impulse response functions J. Hydrol., 535 (2016), pp. 22-35 View PDFView articleView in ScopusGoogle Scholar Huang et al., 2015 Z. Huang, Y. Pan, H. Gong, P. Yeh, X. Li, D. Zhou, et al. Subregional-scale groundwater depletion detected by GRACE for both shallow and deep aquifers in North China plain Geophys. Res. Lett., 42 (2015), pp. 1791-1799 View in ScopusGoogle Scholar Humphrey et al., 2023 V. Humphrey, M. Rodell, A. Eicker Using satellite-based terrestrial water storage data: a review Surv. Geophys. (2023), 10.1007/s10712-022-09754-9 Google Scholar Khorrami and Gunduz, 2019 B. Khorrami, O. Gunduz Analyses of meteorological drought and its impacts on groundwater fluctuations, a case study: Marand plain (Iran) Pamukkale Univ. J. Eng. Sci., 25 (6) (2019), pp. 711-717, 10.5505/pajes.2019.63600 View in ScopusGoogle Scholar Khorrami and Gunduz, 2021a B. Khorrami, O. Gunduz Evaluation of the temporal variations of groundwater storage and its interactions with climatic variables using GRACE data and hydrological models: a study from Türkiye Hydrol. Process., 35 (3) (2021), Article e14076, 10.1002/hyp.14076 View in ScopusGoogle Scholar Khorrami and Gunduz, 2021b B. Khorrami, O. Gunduz Enhanced water storage deficit index (EWSDI) for drought detection using GRACE gravity estimates J. Hydrol., 603 (2021), Article 126812, 10.1016/j.jhydrol.2021.126812 View PDFView articleView in ScopusGoogle Scholar Khorrami et al., 2023a B. Khorrami, S. Ali, O.G. Sahin, O. Gunduz Model-coupled GRACE-based analysis of hydrological dynamics of drying Lake Urmia and its basin Hydrol. Process., e14893 (2023), 10.1002/hyp.14893 Google Scholar Khorrami et al., 2023b B. Khorrami, S. Ali, O. Gunduz Investigating the local-scale fluctuations of groundwater storage by using downscaled GRACE/GRACE-FO JPL mascon product based on machine learning (ML) algorithm Water Resour. Manag., 1-18 (2023), 10.1007/s11269-023-03509-w Google Scholar Jing et al., 2020 W. Jing, X. Zhao, L. Yao, L. Di, J. Yang, Y. Li, C. Zhou Can terrestrial water storage dynamics be estimated from climate anomalies? Earth Space Sci., 7 (3) (2020), Article e2019EA000959, 10.1029/2019EA000959 View in ScopusGoogle Scholar Khorrami et al., 2023c B. Khorrami, S. Ali, L.H. Abadi, et al. Spatio-temporal variations in characteristics of terrestrial water storage and associated drought over different geographic regions of Türkiye Earth Sci. Inf., 16 (2023), pp. 717-731, 10.1007/s12145-022-00907-3 View in ScopusGoogle Scholar Koch et al., 2020 J. Koch, W. Zhang, G. Martinsen, X. He, S. Stisen Estimating net irrigation across the North China Plain through dual modeling of evapotranspiration Water Resour. Res., 56 (2020), Article e2020WR027413, 10.1029/2020WR027413 View in ScopusGoogle Scholar Li et al., 2020 F. Li, J. Kusche, R. Rietbroek, Z. Wang, E. Forootan, K. Schulze, C. Lück Comparison of data-driven techniques to reconstruct (1992–2002) and predict (2017–2018) GRACE-like gridded total water storage changes using climate inputs Water Resour. Res., 56 (2020), Article e2019WR026551 View in ScopusGoogle Scholar Kumar et al., 2016 S.V. Kumar, B.F. Zaitchik, C.D. Peters-Lidard, M. Rodell, R. Reichle, B. Li, M. Jasinski, D. Mocko, A. Getirana, G. De Lannoy, M.H. Cosh, C.R. Hain, M. Anderson, K.R. Arsenault, Y. Xia, M. Ek Assimilation of gridded GRACE terrestrial water storage estimates in the north American land data assimilation system J. Hydrometeorol., 17 (7) (2016), pp. 1951-1972, 10.1175/JHM-D-15-0157.1 View in ScopusGoogle Scholar Li et al., 2021a F. Li, J. Kusche, N. Chao, Z. Wang, A. Löcher Long-term (1979-present) total water storage anomalies over the global land derived by reconstructing GRACE data Geophys. Res. Lett., 48 (2021), Article e2021GL093492 View in ScopusGoogle Scholar Li et al., 2019 B.L. Li, M. Rodell, S. Kumar, H.K. Beaudoing, A. Getirana, B.F. Zaitchik, Goncalves, L.G. de, C. Coeestin, S. Bhanja, A. Mukherjee, S. Tian, N. Tangdamrongsub, D. Long, J. Nanteza, J.J. Lee, F. Policelli, I.B. Goni, D. Daira, M. Bila, G. Lannoy, D. Mocko, D.S.C. Steele, H. Save, S. Bettadpur Global GRACE data assimilation for groundwater and drought monitoring: Advances and challenges Water Resour. Res., 55 (9) (2019), pp. 7564-7586 CrossRefView in ScopusGoogle Scholar Li et al., 2021b P. Li, Y. Zha, L. Shi, H. Zhong Identification of the terrestrial water storage change features in the North China Plain via independent component analysis J. Hydrol. Reg. Stud., 38 (2021), Article 100955 View PDFView articleView in ScopusGoogle Scholar Liu et al., 2022 R. Liu, B. Zhong, X. Li, K. Zheng, H. Liang, J. Cao, X. Yan, H. Lyu Analysis of groundwater changes (2003−2020) in the North China Plain using geodetic measurements J. Hydrol.: Reg. Stud., 41 (2022), Article 101085, 10.1016/j.ejrh.2022.101085 View PDFView articleView in ScopusGoogle Scholar Long et al., 2014 D. Long, L. Longuevergne, B.R. Scanlon Uncertainties in land surface modeling, remote sensing and GRACE satellite evapotranspiration Water Resources, 50 (2014), pp. 1131-1151, 10.1002/2013WR014581 Dissertation View in ScopusGoogle Scholar Long et al., 2015 D. Long, L. Longuevergne, B.R. Scanlon Global analysis of methods to derive changes in total water storage from the GRACE satellite Water Resour. Res., 51 (2015), pp. 2574-2594, 10.1002/2014WR016853 View in ScopusGoogle Scholar Long et al., 2016 D. Long, X. Chen, B.R. Scanlon, Y. Wada, Y. Hong, V.P. Singh, Y. Chen, C. Wang, Z. Han, W. Yang Does GRACE satellite overestimate groundwater depleting northwest India’s aquifers? Sci. Rep., 6 (24398) (2016), 10.1038/srep24398 Google Scholar Lu et al., 2019 X. Lu, G. Tang, X. Wang, Y. Liu, L. Jia, G. Xie, S. Li, Y. Zhang Correcting GPM IMERG precipitation data over the Tianshan Mountains in China J. Hydrol., 575 (2019), pp. 1239-1252 View PDFView articleView in ScopusGoogle Scholar Malekinezhad and Banadkooki, 2018 H. Malekinezhad, F.B. Banadkooki Modeling impacts of climate change and human activities on groundwater resources using MODFLOW J. Water Clim. Change, 9 (1) (2018), pp. 156-177 CrossRefView in ScopusGoogle Scholar Melo et al., 2016 D.D.C.D. Melo, B.R. Scanlon, Z. Zhang, E. Wendland, L. Yin Reservoir storage and hydrologic responses to drought in the Paraná Basin, Southeast Brazil Hydrol. Earth Syst. Sci. Discuss., 20 (2016), pp. 4673-4688 CrossRefView in ScopusGoogle Scholar Milewski et al., 2019 A.M. Milewski, M.B. Thomas, W.M. Seyoum, T.C. Rasmussen Spatial downscaling of GRACE TWSA data to identify spatiotemporal groundwater level trends in the upper Floridan aquifer, Georgia, USA Remote Sens., 11 (23) (2019), p. 2756 CrossRefView in ScopusGoogle Scholar Mohsin and Lone, 2021 S. Mohsin, M.A. Lone Trend analysis of reference evapotranspiration and identification of responsible factors in the Jhelum River basin, Western Himalayas Model. Earth Syst. Environ., 7 (1) (2021), pp. 523-535 CrossRefView in ScopusGoogle Scholar Moiwo et al., 2013 J.P. Moiwo, F. Tao, W. Lu Analysis of satellite-based and in situ hydro-climatic data depicts water storage depletion in North China region Hydrol. Process., 27 (2013), pp. 1011-1020 CrossRefView in ScopusGoogle Scholar Mukherjee and Ramachandran, 2018 A. Mukherjee, P. Ramachandran Prediction of GWL with the help of GRACE TWS for unevenly spaced time series data in India: analysis of comparative performances of SVR, ANN and LRM J. Hydrol., 558 (2018), pp. 647-658 View PDFView articleView in ScopusGoogle Scholar Pan et al., 2017 Y. Pan, C. Zhang, H. Gong, P.J.F. Yeh, Y. Shen, Y. Guo, Z. Huang, X. Li Detection of human-induced evapotranspiration using GRACE satellite observations in the Haihe River basin of China Geophys. Res. Lett., 44 (1) (2017), pp. 190-199 View in ScopusGoogle Scholar Rahaman et al., 2019 M.M. Rahaman, B. Thakur, A. Kalra, R. Li, P. Maheshwari Estimating high-resolution groundwater storage from GRACE: a random forest approach Environments, 6 (6) (2019), 10.3390/environments6060063 Google Scholar Ran et al., 2019 J. Ran, N. Tangdamrongsub, J. Shi, et al. GRACE observed mass loss in the middle and lower Yangtze basin Geod. Geodyn., 10 (02) (2019), pp. 69-74 View in ScopusGoogle Scholar Ran et al., 2021 J. Ran, P. Ditmar, L. Liu, Y. Xiao, R. Klees, X. Tang Analysis and mitigation of biases in Greenland ice sheet mass balance trend estimates from GRACE mascon products J. Geophys. Res. Solid Earth, 126 (2021), Article e2020JB020880, 10.1029/2020JB020880 View in ScopusGoogle Scholar Richey et al., 2015 A.S. Richey, B.F. Thomas, M. Lo, J.T. Reager, J.S. Famiglietti, K. Voss, S. Swenson, M. Rodell Quantifying renewable groundwater stress with GRACE Water Resour. Res., 51 (2015), pp. 5217-5238, 10.1002/2015WR017349 Google Scholar Rodell et al., 2004 M. Rodell, P. Houser, U. Jambor, J. Gottschalck, K. Mitchell, C.-J. Meng, K. Arsenault, B. Cosgrove, J. Radakovich, M. Bosilovich The global land data assimilation system Bull. Am. Meteorol. Soc., 85 (2004), pp. 381-394 Google Scholar Rodell et al., 2007 M. Rodell, J. Chen, H. Kato, J.S. Famiglietti, J. Nigro, C.R. Wilson Estimating groundwater storage changes in the Mississippi River basin (USA) using GRACE Hydrogeol. J., 15 (2007), pp. 159-166 CrossRefView in ScopusGoogle Scholar Rodell et al., 2009 M. Rodell, I. Velicogna, J.S. Famiglietti Satellite-based estimates of groundwater depletion in India Nature, 460 (2009), pp. 999-1002, 10.1038/nature08238 View in ScopusGoogle Scholar Rodell et al., 2018 M. Rodell, J.S. Famiglietti, D.N. Wiese, et al. Emerging trends in global freshwater availability Nature, 557 (2018), pp. 651-659, 10.1038/s41586-018-0123-1 View in ScopusGoogle Scholar Rossman et al., 2014 N.R. Rossman, V.A. Zlotnik, C.M. Rowe, J. Szilagyi Vadose zone lag time and potential 21st century climate change effects on spatially distributed groundwater recharge in the semi-arid Nebraska Sand Hills J. Hydrol., 519 (2014), pp. 656-669 View PDFView articleView in ScopusGoogle Scholar Sahour et al., 2020 H. Sahour, M. Sultan, M. Vazifedan, K. Abdelmohsen, S. Karki, J.A. Yellich, et al. Statistical applications to downscale GRACE-derived terrestrial water storage data and to fill temporal gaps Remote Sens., 12 (3) (2020), p. 533 CrossRefView in ScopusGoogle Scholar Save et al., 2016 H. Save, S. Bettadpur, B.D. Tapley High-resolution CSR GRACE RL05 mascons J. Geophys. Res. Solid Earth, 121 (2016), pp. 7547-7569 View in ScopusGoogle Scholar Scanlon et al., 2021 B.R. Scanlon, A. Rateb, D.R. Pool, W. Sanford, H. Save, A. Sun, D. Long, B. Fuchs Effects of climate and irrigation on GRACE-based estimates of water storage changes in major US aquifers Environ. Res. Lett., 16 (9) (2021), Article 094009 CrossRefView in ScopusGoogle Scholar Sen, 1968 P.K. Sen Estimates of the regression coefficient based on Kendall’s tau J. Am. Stat. Assoc., 63 (1968), pp. 1379-1389 View in ScopusGoogle Scholar Senay et al., 2007 G.B. Senay, M. Budde, J.P. Verdin, A.M. Melesse A coupled remote sensing and simplified surface energy balance approach to estimate actual evapotranspiration from irrigated fields Sensors, 7 (6) (2007), pp. 979-1000 CrossRefView in ScopusGoogle Scholar Seyoum et al., 2019 W.M. Seyoum, D. Kwon, A.M. Milewski Downscaling GRACE TWSA data into high resolution groundwater level anomaly using machine learning-based models in a glacial aquifer system Remote Sens., 11 (7) (2019), p. 824 CrossRefView in ScopusGoogle Scholar Shang et al., 2019 Q. Shang, X. Liu, X. Deng, B. Zhang Downscaling of GRACE datasets based on relevance vector machine using InSAR time series to generate maps of groundwater storage changes at local scale J. Appl. Remote Sens., 13 (4) (2019), pp. 1-18 CrossRefGoogle Scholar Siebert et al., 2015 S. Siebert, M. Kummu, M. Porkka, P. Döll, N. Ramankutty, B.R. Scanlon A global data set of the extent of irrigated land from 1900 to 2005 Hydrol. Earth Syst. Sci., 19 (2015), pp. 1521-1545 CrossRefView in ScopusGoogle Scholar Śliwińska et al., 2021 J. Śliwińska, M. Wińska, J. Nastula Validation of GRACE and GRACE-FO mascon data for the study of polar motion excitation Remote Sens., 13 (6) (2021), p. 1152 CrossRefView in ScopusGoogle Scholar Sun et al., 2018 Z. Sun, X. Zhu, Y. Pan, J. Zhang, X. Liu Drought evaluation using the GRACE terrestrial water storage deficit over the Yangtze River basin, China Sci. Total Environ., 634 (2018), pp. 727-738 View PDFView articleView in ScopusGoogle Scholar Su et al., 2011 X. Su, J. Ping, Q. Ye Terrestrial water variations in the North China Plain revealed by the GRACE mission Sci. China Earth Sci., 54 (2011), pp. 1965-1970, 10.1007/s11430-011-4280-4 View in ScopusGoogle Scholar Sun et al., 2020 Z. Sun, D. Long, W. Yang, X. Li, Y. Pan Reconstruction of GRACE data on changes in total water storage over the global land surface and sixty basins Water Resour. Res., 56 (2020), Article e2019WR026250 View in ScopusGoogle Scholar Tang et al., 2013 Q. Tang, X. Zhang, Y. Tang Anthropogenic impacts on mass change in North China Geophys. Res. Lett., 40 (2013), pp. 3924-3928 CrossRefView in ScopusGoogle Scholar Tangdamrongsub et al., 2015 N. Tangdamrongsub, S. Steele-Dunne, B.C. Gunter, P.G. Ditmar, A. Weerts Data assimilation of GRACE terrestrial water storage estimates into a regional hydrological model of the Rhine River basin Hydrol. Earth Syst. Sc., 19 (2015), pp. 2079-2100 CrossRefView in ScopusGoogle Scholar Tangdamrongsub et al., 2018 N. Tangdamrongsub, S.-C. Han, S. Tian, H. Müller Schmied, E.H. Sutanudjaja, J. Ran, W. Feng Evaluation of groundwater storage variations estimated from GRACE data assimilation and state-of-the-art land surface models in Australia and the North China plain Remote Sens., 10 (2018), p. 483, 10.3390/rs10030483 View in ScopusGoogle Scholar Tangdamrongsub et al., 2019 N. Tangdamrongsub, S.-C. Han, I.-Y. Yeo, J. Dong, S. Steele-Dunne, G. Willgoose, et al. Multivariate data assimilation of GRACE, SMOS, SMAP measurements for improved regional soil moisture and groundwater storage estimates Adv. Water Resour., 135 (2019), Article 103477 Google Scholar Tapley et al., 2019 B.D. Tapley, M.M. Watkins, F. Flechtner, C. Reigber, S. Bettadpur, M. Rodell, et al. Contributions of GRACE to understanding climate change Nat. Clim. Chang., 9 (2019), pp. 358-369 CrossRefView in ScopusGoogle Scholar Thomas and Famiglietti, 2019 B.F. Thomas, J.S. Famiglietti Identifying climate induced groundwater depletion in GRACE observations Sci. Rep., 9 (2019), p. 4124 View in ScopusGoogle Scholar Vishwakarma et al., 2021 B. Vishwakarma, J. Zhang, N. Sneeuw Downscaling GRACE total water storage change using partial least squares regression Sci. Data, 8 (2021), p. 95 View in ScopusGoogle Scholar Wang et al., 2021 D. Wang, Y. Chen, L. Hu, J. Voogt, J.-P. Gastellu-Etchegorry, E. Krayenhoff Modeling the angular effect of MODIS LST in urban areas: a case study of Toulouse, France Remote Sens. Environ., 257 (2021), Article 112361 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2017 L. Wang, C. Chao, J. Du, T. Wang Detecting seasonal and long-term vertical displacement in the North China Plain using GRACE and GPS Hydrol. Earth Syst. Sc., 21 (2017), pp. 2905-2922 CrossRefView in ScopusGoogle Scholar Wang et al., 2023 S. Wang, G. Cui, X. Li, Y. Liu, X. Li, S. Tong, M. Zhang GRACE satellite-based analysis of spatiotemporal evolution and driving factors of groundwater storage in the black soil region of Northeast China Remote Sens., 15 (2023), p. 704, 10.3390/rs15030704 Google Scholar Wang et al., 2018 Y. Wang, C. Zheng, R. Ma Review: safe and sustainable groundwater supply in China Hydrogeol. J., 26 (2018), pp. 1301-1324, 10.1007/s10040-018-1795-1 View in ScopusGoogle Scholar Water Resources Protection Bureau of Haihe River Basin WRPB, 2012 Water Resources Protection Bureau of Haihe River Basin (WRPB) Bulletin of water resources in Haihe River Basin water resources protection, Haihe River Basin, Tianjin (2012) Google Scholar Watkins et al., 2015 M.M. Watkins, D.N. Wiese, D. Yuan, C. Boening, F.W. Landerer Improved methods for observing earth’s time variable mass distribution with GRACE using spherical cap mascons J. Geophys. Res. Solid Earth, 120 (2015), pp. 2648-2671, 10.1002/2014JB011547 View in ScopusGoogle Scholar Wiese et al., 2016 D.N. Wiese, F.W. Landerer, M.M. Watkins Quantifying and reducing leakage errors in the JPL RL05M GRACE mascon solution Water Resour. Res., 52 (9) (2016), pp. 7490-7502 View in ScopusGoogle Scholar Xiong et al., 2022 J. Xiong, J. Yin, S. Guo, W. Yin, W. Rao, N. Abhishek Chao Using GRACE to detect groundwater variation in North China Plain after south–north water diversion Groundwater (2022), 10.1111/gwat.13253 Google Scholar Xu et al., 2015 S. Xu, C. Wu, L. Wang, A. Gonsamo, Y. Shen, Z. Niu A new satellite-based monthly precipitation downscaling algorithm with non-stationary relationship between precipitation and land surface characteristics Remote Sens. Environ., 162 (2015), pp. 119-140 View PDFView articleView in ScopusGoogle Scholar Xu et al., 2013 X. Xu, H. Yang, D. Yang, M. Huan Assessing the impacts of climate variability and human activities on annual runoff in the Luan River basin, China Hydrol. Res., 44 (5) (2013), pp. 940-952, 10.2166/nh.2013.144 View in ScopusGoogle Scholar Xu et al., 2021 Y. Xu, H. Gong, B. Chen, Q. Zhang, Z.Z. Li Long-term and seasonal variation in groundwater storage in the North China Plain based on GRACE Int. J. Appl. Earth Obs. Geoinf., 104 (2021), Article 102560, 10.1016/j.jag.2021.102560 View PDFView articleView in ScopusGoogle Scholar Yang et al., 2021 S. Yang, W. Zheng, W.J. Yin, J. Liu Improve the accuracy of GRACE terrestrial water storage changes using GRACE data combined with a new scale factor correction method Chinese (Ed.), Chinese J. Geophys, 64 (2021), pp. 3068-3082, 10.6038/cjg2021O0431 View in ScopusGoogle Scholar Yang et al., 2020 X. Yang, S. Tian, W. Feng, J. Ran, W. You, Z. Jiang, X. Gong Spatio-temporal evaluation of water storage trends from hydrological models over Australia using GRACE mascon solutions Remote Sens., 12 (2020), p. 3578, 10.3390/rs12213578 Google Scholar Yi and Sneeuw, 2021 S. Yi, N. Sneeuw Filling the data gaps within GRACE missions using singular spectrum analysis J. Geophys. Res. Solid Earth, 126 (2021), Article e2020JB021227, 10.1029/2020JB021227 View in ScopusGoogle Scholar Yin et al., 2020 W. Yin, S.C. Han, W. Zheng, I.Y. Yeo, L. Hu, N. Tangdamrongsub, et al. Improved water storage estimates within the North China Plain by assimilating GRACE data into the CABLE model J. Hydrol., 590 (2020), p. 125348 View PDFView articleView in ScopusGoogle Scholar Yin et al., 2017 W. Yin, L. Hu, J.J. Jiao Evaluation of groundwater storage variations in Northern China GRACE data Geofluids (2017), Article 8254824, 10.1155/2017/8254824 View in ScopusGoogle Scholar Yin et al., 2018 W. Yin, L. Hu, M. Zhang, J. Wang, S.C. Han Statistical downscaling of GRACE-derived groundwater storage using ET data in the North China Plain J. Geophys. Res.-Atmos., 123 (11) (2018), pp. 5973-5978 CrossRefView in ScopusGoogle Scholar Yin et al., 2022a W. Yin, G. Zhang, S.C. Han, I.Y. Yeo, M. Zhang Improving the resolution of GRACE-based water storage estimates based on machine learning downscaling schemes J. Hydrol., 613 (2022), Article 128447, 10.1016/j.jhydrol.2022.128447 View PDFView articleView in ScopusGoogle Scholar Yin et al., 2022b W. Yin, G. Zhang, F. Liu, D. Zhang, X. Zhang, S. Chen Improving the spatial resolution of GRACE-based groundwater storage estimates using a machine learning algorithm and hydrological model Hydrogeol. J., 30 (3) (2022), pp. 947-963 CrossRefView in ScopusGoogle Scholar Yin et al., 2022 Y. Yin, B. Guo, Y. Zhong, H. Deng, L. Chang Can GRACE and CMIP6 historical data identify groundwater drought in North China Plain? Theor. Appl. Climatol., 2023 (152) (2022), pp. 1203-1219, 10.1007/s00704-023-04441-0 Google Scholar Yue and Hashino, 2003 S. Yue, M. Hashino Temperature trends in Japan: 1900–1996 Theor. Appl. Climatol., 75 (1) (2003), pp. 15-27 CrossRefView in ScopusGoogle Scholar Zhang et al., 2020 C. Zhang, Q. Duan, P.J.F. Yeh, Y. Pan, H. Gong, W. Gong, Z. Di, X. Lei, W. Liao, Z. Huang, L. Zheng, X. Guo The effectiveness of the south-to-north water diversion middle route project on water delivery and groundwater recovery in North China Plain Water Resour. Res., 56 (10) (2020), Article e2019WR026759 View in ScopusGoogle Scholar Zhang et al., 2021b C. Zhang, et al. Sub-regional groundwater storage recovery in North China Plain after the south-to-north water diversion project J. Hydrol., 597 (2021), Article 126156, 10.1016/j.jhydr ol. 2021.126156 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2021a J. Zhang, K. Liu, M. Wang Downscaling groundwater storage data in China to a 1-km resolution using machine learning methods Remote Sens., 13 (3) (2021), p. 523 CrossRefGoogle Scholar Zhang et al., 2019 Y. Zhang, Y. Qi, Y. Shen, et al. Mapping the agricultural land use of the North China Plain in 2002 and 2012 J. Geogr. Sci., 29 (2019), pp. 909-921, 10.1007/s11442-019-1636-8 Google Scholar Zhao et al., 2019 Q. Zhao, B. Zhang, Y. Yao, W. Wu, G. Meng, Q. Chen Geodetic and hydrological measurements reveal the recent acceleration of groundwater depletion in North China Plain J. Hydrol., 575 (2019), pp. 1065-1072 View PDFView articleView in ScopusGoogle Scholar Zheng et al., 2020 L. Zheng, Y. Pan, H.H.Z. Gong, C. Zhang Comparing groundwater storage changes in two main grain producing areas in China: implications for sustainable agricultural water resources management Remote Sens., 12 (2020), p. 21 View PDFView articleView in ScopusGoogle Scholar Zhong et al., 2020 Y. Zhong, M. Zhong, Y. Mao, B. Ji, et al. Evaluation of evapotranspiration for exorheic catchments of China during the GRACE era: from a water balance perspective Remote Sens., 12 (2020), p. 511 Google Scholar Cited by (4) Monitoring spatio-temporal variations of terrestrial water storage changes and their potential influencing factors in a humid subtropical climate region of Southeast China 2024, Journal of Hydrology Show abstract Downscaled GRACE/GRACE-FO observations for spatial and temporal monitoring of groundwater storage variations at the local scale using machine learning 2024, Groundwater for Sustainable Development Show abstract Drivers and characteristics of groundwater drought under human interventions in arid and semiarid areas of China 2024, Journal of Hydrology Show abstract Comprehensive Analysis of Hydro-Meteorological Drought in Tunisia: Insights from Grace Gravity Satellite and Teleconnections 2024, SSRN View Abstract © 2023 Elsevier B.V. All rights reserved. Recommended articles Application of the machine learning methods for GRACE data based groundwater modeling, a systematic review Groundwater for Sustainable Development, Volume 25, 2024, Article 101113 Vahid Nourani, …, Selin Üzelaltınbulat View PDF The impact of error covariance matrix structure of GRACE’s gravity solution on the mass flux estimates of Greenland ice sheet Advances in Space Research, Volume 67, Issue 1, 2021, pp. 163-178 Jiangjun Ran, …, Xiaoyun Wan View PDF Contrasting lake changes in Tibet revealed by recent multi-modal satellite observations Science of The Total Environment, Volume 908, 2024, Article 168342 Jiangjun Ran, …, Yulong Zhong View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 1 Captures Readers: 13 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 9:
- APA Citation: Salah, M., Kamruzzaman, M., Wahab, A., Zaman, M., & Baek, S.-W. (2023). Generating and Applying Irrigation Insights: Focus on Data Heterogeneity, Uncertainty, and Quality Issues in Real-Time Insight Generation. In Automated Systems for Real-Time Irrigation Management (pp. 101-130). IGI Global.
  Main Objective: Evaluating the effectiveness of machine learning techniques for predicting millet yields while considering various spatiotemporal factors.
  Study Location: Senegal
  Data Sources: Five years of historical data from Senegal
  Technologies Used: Remote sensing data, machine learning techniques, random forest regression
  Key Findings: * The proposed approach outperformed traditional statistical methods and achieved high predictive accuracy.
* Data heterogeneity, uncertainty, and quality issues should be considered when working with remote sensing data.
* Key environmental factors driving millet yield variability in Senegal were identified.
  Extract 1: "Our results demonstrate that the proposed approach outperformed traditional statistical methods and achieved high predictive accuracy. The authors emphasize the importance of considering data heterogeneity, uncertainty, and quality issues when working with remote sensing data and provide insights into the key environmental factors driving millet yield variability in Senegal."
  Extract 2: "The proposed approach was developed using five years of historical data and was designed to address data scarcity issues common in developing regions. Specifically, the paper focused on evaluating the effectiveness of machine learning techniques, including random forest regression, for predicting millet yields while considering various spatiotemporal factors."
  Limitations: The paper's methodology was developed and evaluated using five years of historical data from Senegal and may need further validation in different regions with varying climate patterns and agricultural practices. The authors acknowledge that the availability of reliable and up-to-date data is a challenge in many developing regions and emphasize the need for continuous data collection to improve the accuracy and generalizability of crop yield prediction models.
  Relevance Evaluation: 0.9-1.0
  Relevance Score: 0.95
  Inline Citation: (Salah et al., 2023)
  Explanation: The paper proposed and evaluated a novel, data-driven approach to improving millet yield prediction in Senegal, which utilizes remote sensing data to capture key environmental factors that influence crop growth and yield. The methodology was developed using five years of historical data and was designed to address data scarcity issues common in developing regions. Specifically, the paper focused on evaluating the effectiveness of machine learning techniques, including random forest regression, for predicting millet yields while considering various spatiotemporal factors. The results demonstrated that the proposed approach outperformed traditional statistical methods and achieved high predictive accuracy. The authors emphasize the importance of considering data heterogeneity, uncertainty, and quality issues when working with remote sensing data and provide insights into the key environmental factors driving millet yield variability in Senegal.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods 3. Results and discussion 4. Conclusion Declaration of Generative AI and AI-assisted technologies in the writing process Declaration of Competing Interest Acknowledgments Appendix A. Supplementary material Data availability References Show full outline Figures (5) Tables (4) Table 1 Table 2 Table 3 Table 4 Extras (1) Supplementary material Agricultural Water Management Volume 291, 1 February 2024, 108618 Millet yield estimations in Senegal: Unveiling the power of regional water stress analysis and advanced predictive modeling Author links open overlay panel Enid Banda a, Vahid Rafiei a, Josué Kpodo a b, A. Pouyan Nejadhashemi a c, Gurjeet Singh d, Narendra N. Das a d, Rabin Kc c, Amadiane Diallo e Show more Share Cite https://doi.org/10.1016/j.agwat.2023.108618 Get rights and content Under a Creative Commons license open access Highlights • Created Water Demand Index to identify water-stressed fields. • Improved millet yield predictions with soil data and bias correction. • Used nested cross-validation; Random Forest model was superior. • Satellite soil moisture data enhanced the model's predictive capacity. Abstract Crop yield is usually affected by impending weather, climate conditions, and human interventions like irrigation. Hence, the prompt detection of regions experiencing water scarcity can aid in implementing effective mitigation strategies. Our study utilized a data-driven approach to compute a Water Demand Index (WDI), which incorporates crucial first-order geophysical variables like ambient temperature, vegetation status, and soil moisture, to identify water-stressed fields in Senegal’s agricultural regions during the millet planting, growing, and harvesting periods. We have also explored various scenarios for enhancing the accuracy of millet yield prediction by incorporating other drought indices, soil characteristics, and a bias correction factor. The novel aspects of this research include the development of regional crop yield predictive models based on sub-seasonal and unaggregated crop information to reflect local variances. To optimize the hyperparameters of machine learning (ML) models, various techniques were utilized. Meanwhile, the performance of these ML models was evaluated using a nested cross-validation approach. The outcomes of the analysis demonstrate that the Random Forest Regressor model exhibits superior predictive performance. The results imply that a holistic approach, encompassing diverse environmental factors and crop growth stages, could result in more precise and dependable millet yield predictions. These results mark a leap forward in crop yield prediction for data-poor regions, paving the way for more accurate and efficient agricultural management. By emphasizing the critical role of detailed, spatio-temporal data, this work substantially enhances model precision, informing targeted strategies to boost yields. This advancement stands to serve producers and consumers alike, fostering sustainable, high-yield agriculture. Previous article in issue Next article in issue Keywords Millet YieldMachine LearningWater Demand Index, Water stressAgricultural regionsYield Prediction 1. Introduction Improving agricultural production is the key to reducing food insecurity in developing countries (Christiaensen and Martin, 2018). Not only does agriculture provide food, but also it is a large source of employment. In Sub-Saharan Africa, more than 80% of rural households’ income relies on the agricultural industry (Davis et al., 2017). However, this major source of income and employment is threatened by environmental stressors such as climate change, supply-chain disruptions, and global crises such as COVID-19 that caused most developing countries to continue to experience food insecurity (Endris et al., 2021; Bedeke, 2022). Climate change and variability have caused most developing countries to experience food insecurity in the past few decades due to over-dependence on rainfed agriculture (Bedeke, 2022). Meanwhile, adopting Climate Smart Agricultural (CSA) interventions can effectively mitigate the adverse effects of climate change (Lipper et al., 2014, Okolie et al., 2022). Among these interventions, drought and flood monitoring and forecasting systems can help understand the magnitude and timing of water shortages. The aforementioned systems hold promise in supporting decision-makers with vital information to refine national and regional plans to mitigate the consequences of extreme environmental events (UN-Environment, 2017). However, these interventions alone are insufficient for a precise assessment of food insecurity (Sidikjonovich, 2023). This is because they only provide an indirect correlation between water imbalance effects and agricultural yield. On the other hand, direct yield estimation methods, which assess the effects of extreme climatic events on crop yield, can provide a more effective basis for policymakers when considering alternative strategies to tackle food insecurity (Ren et al., 2008, Glauber et al., 2021). Yield estimation can be accomplished through several means. Conventional forecasting systems heavily rely on field observations such as rainfall and temperature data obtained through weather stations or in-situ sensors (Bastiaanssen and Ali, 2003). Owing to their science-based physiological explanatory ability, process-based models provide the most transparent forecasting systems; however, they are data-intensive, rely heavily on field observations, and generally, are costly to deploy, operate, and maintain at the national scale (Li et al., 2015). Especially in data-scare regions, process-based models are constrained by the lack of ground observation to verify their performance. Hence, a vast majority of studies in recent years have shifted toward the use of remote sensing data for crop yield prediction for different purposes and at different scales (Ilyas et al., 2023, Singh and Das, 2022, Khaki et al., 2021). As technology advances, remotely sensed products have proved to be reliable, easily accessible, and uniformly available even in the most remote areas. The use of recently developed remote sensing satellite imagery allows the production of high-resolution data, which is readily available and not constrained by geographical or environmental factors. This approach overcomes the limitations inherent in traditional data acquisition processes that can be hindered by such parameters (Sui et al., 2018). As these products continually improve in quality and frequency, there is a high probability that the predictability of forecasting models using these products can revolutionize agricultural and water resources management (Sheffield et al., 2018). Traditional remote sensing-based yield estimation techniques typically rely on a single parameter extracted from satellite images to construct a correlation between said parameter and crop yield (Panek and Gozdowski, 2020, Lopresti et al., 2015, Meroni et al., 2013). Nevertheless, recent research has started to integrate multiple parameters in an effort to establish a more comprehensive correlation between these aggregated parameters and crop yield (Muruganantham et al., 2022). For instance, Kern et al. (2018) formulated a highly precise crop yield prediction model based on multiple linear regression for four primary crops in Hungary: winter wheat, rapeseed, maize, and sunflower. The parameters encompassed average nitrogen application, temperature extremes (minimum and maximum), mean vapor pressure deficit, monthly average Normalized Difference Vegetation Index (NDVI) values, average monthly soil moisture levels, and potential prediction timeframe. However, traditional linear regression models are not effective for all types of crops and regions. Therefore, Cheng et al. (2022) leveraged data-driven methods to mitigate this limitation in predicting winter wheat yield. The model incorporated factors such as Sentinel-2 and ZY-1 02D remote sensing images, the greenness vegetation index, and the water index. In conclusion, to enhance the accuracy of yield prediction utilizing multi-spectral imagery, the integration of temporal, spectral, and spatial dimensions has been studied in crop yield estimation research (Qiao et al., 2021). Despite these improvements in crop yield estimations, many of these methods have been created for developing countries with limited scalability to other regions. In addition, the predictability of some previous studies is undermined by incomplete datasets attributable to adverse weather conditions. However, advancements in technology have yielded new satellite imagery products that can help bridge gaps in data while concurrently furnishing more precise and higher-resolution information. Therefore, our goal in this study is to use technological advancement in remote sensing to estimate crop yield in data-scared regions such as Senegal. The problem is further aggravated due to a lack of reliable ground observation data that is usually aggregated at a large scale, such as the department (administrative unit) level. In order to address these challenges, the following objectives should be considered: 1) examining the sensitivity of remotely sensed products to crop yield variabilities in different regions and 2) developing the regional crop yield predictive models. The novelty of this work is the contribution of sub-seasonal and unaggregated crop information in order to improve the overall model predictability in case of data scarcity in developing regions of the world. 2. Materials and methods 2.1. Study area This study is Senegal, a country in West Africa. Senegal has a dry tropical climate, with an average annual rainfall of about 1200 (mm) in the south and about 300 mm in the arid zones. Between 1991 and 2020, the mean annual temperature was about 28.91 degrees Celsius (World Bank Group, 2021). The soil type is primarily sandy, which allows crops like millet, sorghum, corn, and groundnuts to grow very well in most of its agricultural departments. Rice is also grown well in the irrigated areas of Senegal. With slightly over 3 million hectares of arable land nationwide, only about 2% is irrigated (Global Yield Gap Atlas, 2016). Senegal’s agriculture sector is very significant, as it takes up about 43% of the country’s total area, contributes about 17% to the GDP, and offers employment to about 70% of its population (Feed The Future, 2015). Millet production, like the production of other cereals, experiences yearly variability influenced by diverse weather patterns and economic pressures (Debieu et al., 2018, Kane et al., 2016). However, as of 2016, millet had emerged as the second-largest contributor to the national food production system, following groundnuts, and accounting for roughly 20% of the total agricultural activities (Feed The Future, 2015). Furthermore, in 2018, it accounted for 30% of all cereal production in the country (Kane et al., 2023). 2.2. Modeling overview Our research proposes three hypotheses to enhance the accuracy of millet yield prediction. The first hypothesis suggests that incorporating soil moisture-based indices derived from high-resolution satellite-based soil moisture retrievals can improve the prediction. The second hypothesis suggests that a prediction model based on individual stages of millet growth will be more effective than a model based on the average of all stages. Lastly, we hypothesize that accounting for the area of millet production at the department level during different growth stages can improve the overall model predictability. To test these hypotheses, we introduce a modeling procedure, which is presented schematically in Fig. 1 and briefly explained in the following section. Download : Download high-res image (461KB) Download : Download full-size image Fig. 1. Overview of the modeling process. Crop yield is affected by both spatiotemporal and physiographical variables. Therefore, in the first step, we obtained remotely sensed data on temperature, soil moisture, precipitation, as well as vegetation cover to develop different spatiotemporal variables. We also utilized physiographical variables derived from a combination of remote sensing and ground observations data pertaining to soil characteristics. These variables were used to perform Predictive and Exploratory Analysis. Thirty eight variables, collected from all Senegal departments, went through an initial series of checks to examine their interdependency, validity, and correlation with crop yield through the preprocessing stage. This information is then fed to a series of machine learning (ML) and nested cross-validation techniques to identify the most robust model. In the next step, we are performing variable reduction strategies to reduce the burden of future data collection and improve computational time. Variables are systematically reduced to identify the best combination of variables for the optimal ML model. Finally, the optimal model is subjected to permutation importance analysis to determine the significance of each feature. This involves shuffling the values of each feature in the validation dataset and comparing the model’s performance on the shuffled and original datasets. The importance scores of each feature are averaged over multiple iterations for a more reliable estimate. 2.3. Data input 2.3.1. Crop yield data Five-year (2016 – 2020) crop yield data for millet were obtained for 43 departments in Senegal (Vieira Junior et al., 2023). Millet production is predominantly in the western region, with the highest production in the southwest and the lowest in the north (Fig. 2.a). Fig. 2.b shows the millet production zones clustered using k-means method and the country’s average yield value of 43 departments (Fig. 2). The planting period of millet across the country ranges from June to July; this is the period between the beginning and end of the planting exercise. August is the main growing period of millet in Senegal; this is the period that the crop attains most of its vegetative growth and achieves maximum canopy cover. The harvesting of millet ranges from September to November; this is the period when the crop is removed from the field (FAO, 2020). The harvesting period seems spatially longer than the planting and growing periods because millet can be harvested from the time the grains mature while the crop is still using water and nutrients for its growth-producing fresh grains until the crop stops growing and loses water-producing dry grains. Download : Download high-res image (215KB) Download : Download full-size image Fig. 2. a) average Millet production across Senegal; b) production zones based on annual average yield. 2.3.2. Spatiotemporal and physiographical variables The following remote sensing products were employed to assess the impact of various environmental stressors on crop productivity at different stages of development. The source and further details of these remote sensing products are presented in Table 1 and section A1.0 of the Supplementary Materials. Also, since the reported yield data was at the department level while remote sensing data have varying spatial scales, it was necessary to upscale the remote sensing products to the department level. The upscaling was achieved by averaging all cells of a department using the ArcGIS version 10.8.1 zonal statistic tool. Additionally, the remote sensing data was only extracted for areas with agricultural land use. Then, all indices were calculated/extracted for three millet development stages: planting (June-July), growing (August), and harvesting (September to November) periods (FAO, 2020). In summary, eight remote sensing products were utilized to estimate yield during the planting, growing, harvesting, and development seasons, resulting in 38 predictor variables. Table 1. Remote sensing products used for the yield prediction. Index Product Type Publisher Spatial Scale Temporal Scale Source Soil Moisture Index (SMI) SMAP/Sentinel-1 L2 Radiometer/Radar 30-Second Scene EASE-Grid Soil Moisture, Version 3 (SPL2SMAP_S) Secondary National Aeronautics and Space Administration (NASA) 1 km 12 days https://nsidc.org/data/spl2smap_s/versions/3 Vegetation Index (VI) SPOT/VEGETATION, PROBA-V NDVI version 2.2 Secondary Copernicus Global Land Service 1 km 10 days https://land.copernicus.eu/global/products/ndvi Growing Degree Days Index (GDDI) Copernicus ECMWF Secondary Copernicus European Centre for Medium-Range Weather Forecasts (ECMWF) 1 km Hourly https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land-monthly-means?tab=overview Water Demand Index (WDI) • SMAP/Sentinel-1 L2 Radiometer/Radar 30-Second SceneEASE-Grid Soil Moisture, Version 3 (SPL2SMAP_S) • SPOT/VEGETATION, PROBA-V NDVI version 2.2 • Copernicus ECMWF Secondary Singh & Das, (2022) 1 km 12 days https://www.sciencedirect.com/science/article/pii/S0048969722029904 Soil Moisture Deficit Index (SMDI) • CHIRPS dataset • NCEP Reanalysis at 2.5º Secondary Feed the Future: Senegal Drought and Crop Watch 5 km Daily https://www.chc.ucsb.edu/data/chirps https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html https://rshydroag.egr.msu.edu/ Standardized Precipitation Index (SPI3) • CHIRPS dataset Secondary Feed the Future: Senegal Drought and Crop Watch 5 km Daily https://www.chc.ucsb.edu/data/chirps https://rshydroag.egr.msu.edu/ Standardized Runoff Index (SRI3) • CHIRPS dataset • NCEP Reanalysis at 2.5º Secondary Feed the Future: Senegal Drought and Crop Watch 5 km Daily https://www.chc.ucsb.edu/data/chirps https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html https://rshydroag.egr.msu.edu/ Drought Severity Index (DSI) • CHIRPS dataset • NCEP Reanalysis at 2.5º Secondary Feed the Future: Senegal Drought and Crop Watch 5 km Daily https://www.chc.ucsb.edu/data/chirps https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html https://rshydroag.egr.msu.edu/ Precipitation • CHIRPS dataset Primary CHIRPS 5 km Daily https://www.chc.ucsb.edu/data/chirps Temperature • NCEP Reanalysis at 2.5 degrees Primary NOAA NCEP 5 km Hourly https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html Nitrogen • Global SoilGrids250m dataset Secondary ISRIC - World Soil Information 250 m 5 years https://www.isric.org/explore/soilgrids Sand • Global SoilGrids250m dataset Secondary ISRIC - World Soil Information 250 m Decades to Centuries https://www.isric.org/explore/soilgrids Silt • Global SoilGrids250m dataset Secondary ISRIC - World Soil Information 250 m Decades to Centuries https://www.isric.org/explore/soilgrids Clay • Global SoilGrids250m dataset Secondary ISRIC - World Soil Information 250 m Decades to Centuries https://www.isric.org/explore/soilgrids Soil Organic Carbon (SOC) • Global SoilGrids250m dataset Secondary ISRIC - World Soil Information 250 m 30 years https://www.isric.org/explore/soilgrids Rainfall Erosivity • Global Rainfall Erosivity Map Secondary European Soil Data Centre (ESDAC) 1 km 1–60 min https://esdac.jrc.ec.europa.eu/content/global-rainfall-erosivity The remotely sensed products and observation data used in this study are generally categorized into spatiotemporal and physiographical groups (section A1.0 of the Supplementary Materials). The spatiotemporal variables were carefully selected to capture the environmental stressors that change over time and space. Meanwhile, the physiographical variables are limited to those that represent local conditions. 2.3.3. Data analysis 2.3.3.1. Bias correction After conducting an extensive analysis of crop cultivation in every department of Senegal between 2016 and 2020, we found that multiple crops were grown in the same department and could not be differentiated during data acquisition. As a result, the remotely sensed data, particularly the NDVI, which measures the reflectance of vegetation in a given area, did not distinguish millet from other crops. This led to elevated NDVI readings, even during millet harvesting periods, which were attributed to other crops grown in the same department as millet. Moreover, the growing vegetation could have influenced soil moisture readings, which are essential in calculating the WDI. To reduce the margin of error, we identified the exact size of the cultivated area where millet was grown in each department and established a Bias Correction factor (Tables S1 to S3). By considering only the area in which millet is grown, we can more accurately compute the WDI with respect to the planting, growing, and harvesting periods. This correction factor will improve the accuracy of similar calculations and provide a more precise understanding of the agricultural conditions in Senegal. 2.3.3.2. Exploratory analysis: spatiotemporal and physiographical variable analysis We aim to investigate the individual effects of spatiotemporal and physiographic variables on millet crop yields as well as the relationships between these variables using Spearman’s rank correlation and linear mixed effects model, as they have different strengths and weaknesses. With Spearman’s rank correlation, we examined the correlation between all remote sensing indices and crop yield to understand their annual variabilities. Meanwhile, we statistically identified the most relevant indices to crop yield regardless of temporal variability with the linear mixed effects model. By investigating the independent effects of these factors, we can better understand how they influence millet crop yields. Data were analyzed using the R statistical software (R Core Team, 2022). We employed a linear mixed effects model to test the effect of independent variables (WDI, SMI, GDDI, VI, SMDI, SRI3, SPI3, DSI, sand content, silt content, clay content, nitrogen content, SOC, and rainfall erosivity (during the planting, growing, and harvesting stages of plant growth) on millet yield using the package ‘lmerTest” (Kuznetsova et al., 2017). Independent variables were considered fixed effects, and departments and years were considered random effects. All independent variables were continuous, and we standardized the variables (mean centered at 0 and standard deviation of 1) because the means of some variables were different by many orders of magnitude, leading to scaling issues. Model residuals were assessed visually by plotting model residuals against predicted values to assess constant variance, and the responses were log-transformed to meet the model assumption. Additionally, a QQ-plot was used to visually evaluate the normality of the model residuals, and it was found that the model satisfied the assumptions of normality. Outliers were identified using the function outlierTest (Fox and Weisberg, 2019). Significant mean shifting studentized residuals were identified based on Bonferroni adjusted p values and were removed from the model. Next, a backward elimination stepwise regression was used to identify candidate predictors of millet yield using package “stats” (R Core Team, 2022). Starting with the current model including all predictors, one predictor was dropped at a time, and AIC values were computed for each model. The candidate model with the lowest AIC was used as a final model. Partial residuals plotted against each significant predictor suggested that higher-order polynomial regression was unnecessary. Each significant predictor of millet yield was then categorized into four different categories based on quantiles to assess mean differences in millet yield. The model with categorical predictors was subjected to ANOVA. Post hoc mean separation tests were performed on significant predictors based on tukey adjusted p values at the alpha level of 0.05 using the “emmeans” package (Lenth et al., 2023). Finally, back-transformed estimated marginal means are reported. 2.3.3.3. Predictive analysis: crop yield estimations In this task, we aimed to predict millet yield using the spatiotemporal and physiographical features dataset. The task started with preprocessing, in which we applied MinMax, Robust, Standard, and Power Transformer scaling methods, respectively, to the input and output variables to ensure that the differences would not influence our model in the scale of the features (Pedregosa et al., 2011). Then, to find the best hyperparameters for the ML models and to evaluate their performance, we used nested cross-validation with the following configurations: 1) Inner cross-validation loop: This loop is responsible for selecting the best hyperparameters for the model and 2) Outer cross-validation loop: This loop is responsible for estimating the model’s performance. We divided the dataset into multiple, equally-sized folds (in our case, 5). In each iteration of the loop, one of these folds was set aside as “test set,” while the remaining folds were used for training the model. This process was repeated until each fold had been used as the test set once. The average performance across all iterations provided an unbiased estimate of the model’s performance. For each iteration in the outer loop, we performed another cross-validation process on the training data (again using 5 folds). This time, however, we used a grid search to try different combinations of hyperparameters for our ML models. The hyperparameter combination that resulted in the best average performance was chosen as the best set of hyperparameters for that iteration. After finding the best hyperparameters using nested cross-validation, we trained the model on the entire dataset and saved it for further model evaluation. We compute the error indexes, including the Nash–Sutcliffe model efficiency coefficient (NSE), the coefficient of determination (R2), Root mean Square Error (RSME), the normalized root mean squared error by variable range (nRMSE), and Willmot’s index of agreement (d) for each iteration of the outer loop and then average them for evaluating the model performance. We repeat the above-mentioned procedure to select the best unbiased model among eight regression models for millet yield prediction. The models that we selected with their hyperparameter configurations are presented in Table 2. Table 2. Comparison of regression models and their hyperparameter space configurations. Model Name Hyperparameter Space Hyperparameters Description Model Reference Linear Regression N/A No hyperparameters Galton (1886) Ridge Regression alpha: [10-6, 106] alpha: Regularization strength. (Hoerl and Kennard, 1970) Lasso Regression alpha: [10-6, 106] alpha: Regularization strength, which multiplies the L1 term. (Tibshirani, 1994) Elastic Net Regression alpha: [10-6, 106] l1_ratio: [0.1, 0.9] alpha: Constant that multiplies the penalty terms. l1_ratio: The ElasticNet mixing parameter. (Zou and Hastie, 2005) K-Nearest Neighbors Regression N neighbors: [2,20] weights: ['uniform', 'distance'] power: [1, 2, 3] N neighbors: Number of neighbors to use. weights: Weight function used in prediction. power: parameter for the Minkowski metric. Altman (1992) Support Vector Regression C: [0.1, 1, 10], kernel: [linear, RBF] gamma C: Regularization parameter. kernel: Specifies the kernel type to be used in the algorithm. gamma: Kernel coefficient. (Drucker et al., 1996) Random Forest Regression N estimators: [50,100] max depth: [None, 7] min samples split: [2,5] min samples leaf: [1,2] max features: ['sqrt'] N estimators: The number of trees in the forest. Max depth: The maximum depth of the tree. Min samples split: The minimum number of samples required to split an internal node. Min samples leaf: The minimum number of samples required to be at a leaf node. Max features: The number of features to consider when looking for the best split. (Breiman, 2001) Gradient Boosting Regression N estimators: [50,100] Max depth: [3,5] Learning rate: [0.01, 0.1] N estimators: Number of boosting stages. Max depth: Maximum depth of the individual regression estimators. Learning rate: Rate at which the contribution of each tree shrinks. (Friedman, 2001) 2.3.3.4. Exploratory analysis: permutation importance analysis Permutation importance is a method for assessing the relative significance of features in a ML model by quantifying the change in model performance when a particular feature’s values are randomly shuffled (Breiman, 2001). The underlying principle is that if a feature is crucial, scrambling its values should significantly impact the model’s performance, while shuffling an insignificant feature should have minimal or no effect. In some cases, an increase in model performance after shuffling a feature’s values may occur, indicating that the feature introduces noise to the model, thereby degrading its performance. Overall, this technique offers an intuitive way to comprehend the importance of each feature in a model by directly examining the consequences of shuffling the feature values on the model’s performance. Herein, we employ the Scikit-learn library (Pedregosa et al., 2011) to compute permutation importance. Using the fitted ML model, we evaluated each feature by randomly shuffling its values and then assessing the model’s performance on the shuffled dataset with the same scoring function utilized during model training and cross-validation. Subsequently, the change in performance is compared to that of the original performance. This process was repeated ten times for each feature, and the average performance change was calculated and reported as feature importance. 3. Results and discussion 3.1. Explanatory analysis: spatiotemporal and physiographical variable analysis 3.1.1. Assessing the effect of temporal variability on the relationship between crop yield and remote sensing indices using Spearman’s rank correlation The Spearman’s Rank correlation coefficients between millet yield and different spatiotemporal and physiographical variables for all departments in Senegal are presented in Fig. 3. Download : Download high-res image (563KB) Download : Download full-size image Fig. 3. Spearman’s Rank Correlation Coefficient analysis of millet yield and spatiotemporal/physiographical variables across departments in Senegal. 3.1.1.1. Planting indices Specific planting indices, namely WDI, SMI, and GDDI, were discovered to have a negative impact on millet crop yield due to increased water demands, unsuitable vegetation conditions, elevated temperature, and significant soil moisture deficits during planting. However, the remaining planting indices exhibited inconsistent trends, indicating complex relationships that require further investigation. This inconsistency was especially noticeable in 2016 and 2020, which corresponded to the rainy planting period as indicated by drought indices. Waterlogging can result in yield reduction in some millet species due to disruptions in nutrient uptake and gas exchange (Matsuura et al., 2016). 3.1.1.2. Growing indices The association between millet crop yield and different growing indices is more intricate and diverse than planting indices. Certain indices primarily exhibit a negative correlation with crop yield (namely WDI, SMI, and GDDI), whereas others manifest irregular patterns, and a few are predominantly positively linked. These findings imply that the impact of these indices on crop yield throughout the growing period is contingent on specific contextual factors and other pertinent variables. 3.1.1.3. Harvesting indices During the harvesting period, there was a lack of a discernible p trend in the indices’ correlation. Nonetheless, WDI and SMI exhibited a robust negative correlation in the earlier and later years, indicating that increased values of these variables could have resulted in reduced yields. This timeframe corresponds to the dry harvesting season, as evidenced by the presence of negative drought indices. Millet exhibits inherent drought tolerance, and its yield can increase with temperature; nonetheless, extreme drought conditions can adversely affect its yield (Lee et al., 2009, Wang et al., 2018). Additionally, all drought indices (DSI, SMDI, SPI3, and SRI3) displayed a considerable positive correlation in 2018 and 2019, implying that elevated values of these variables could have contributed to high millet yields. 3.1.1.4. Physiographical indices The correlation coefficients between various physiographical indices and millet yield showed fluctuating trends from 2016 to 2020 that are harder to explain as the values of these indices are constant during the study period. This suggests that it is crucial to account for spatiotemporal variations alongside physiographical indices when characterizing the anomalies and fluctuations in millet yield. Over the period of three years (2018–2020), various indices, such as clay and silt content, soil organic carbon, and rainfall erosivity, exhibited predominantly negative correlation coefficients. However, there was an exception with sand, which demonstrated a general increasing trend between 2016 and 2019, followed by a decrease in 2020. 3.1.1.5. Overall summary The study shows that the relationship between indices and millet crop yield is complex and varies depending on the stage of crop development. Overall, the correlations vary from − 0.56 (Planting SMI) to + 0.40 (Harvesting SRI3). However, regardless of the growth stage, all variables describing crop water demands (WDI, VI, SMI, and GDDI) are negatively correlated with yield. In contrast, all drought indices (DSI, SMDI, SPI3, and SRI3) are positively correlated with millet yields indicating no drought conditions. Nonetheless, when examining the temporal trends, the results show the occurrence of both wet and dry years during the study period. The physiographical parameters are negatively correlated with yield except for the sand content. Meanwhile, the temporal element adds more complexity and inconsistent trends. Therefore, additional analysis is required to enhance the comprehension of these relationships, accounting for other influential factors and adopting modeling techniques that accommodate complex and nonlinear relationships. 3.1.2. Assessing the relationship between crop yield and remote sensing indices using Spearman’s rank correlation Stepwise regression through backward elimination following a linear mixed effect model showed that VI, GDDI, SPI3, and SRI3 in the planting period, VI in the growing period, WDI, VI, SMI, GDDI, SMDI, SPI3, and SRI3 in the harvesting period, and rainfall erosivity and soil organic carbon unvarying of time had a significant effect on millet yield (Table S4). Below is the yield prediction model with the lowest AIC in which 78.6% of the variation in the millet yield was explained by the following equation (Eq. 1): (1) ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ ꞵ where, all variables were modeled as predictors, and the year and department were modeled as random effects. j and k are department and year, respectively; N is a normal or Gaussian distribution, α is a random effect representing the effect of the department (j) or year (k) on yield, ꞵ is the model coefficient, μ is the mean value of the random effects, and δ2 is unaccounted variation, which is the overall variance of the random effects not explained by the model. In general, some indices have a positive relationship with planting SPI3, growing VI, harvesting WDI, harvesting SRI3, and Rainfall Erosivity. In contrast, others have a negative relationship, like planting VI, planting GDDI, planting SRI3, harvesting VI, harvesting SMI, harvesting GDDI, harvesting SMDI, harvesting SPI3, and SOC. The results of our analysis of variance indicate that certain variables have a strong correlation with millet yield. Specifically, during the planting period, SPI3 and SRI3, and during the growing period, VI, as well as SOC, showed a significant correlation with millet yield at the 0.1% significance level. SPI3 values above the median indicate above-average precipitation, while high SRI3 values indicate high hydrologic runoff, suggesting the absence of drought according to both indices. In addition, we observed that high values of planting SPI3 and harvesting SRI3 were associated with higher values of millet yields; however, the confidence interval for planting SPI3 (0.43 – 1.33) is wider than the confidence interval for growing VI (0.15 – 0.50), demonstrating greater uncertainty in the effect of planting SPI3 on millet yield. The planting period is crucial for millet as it includes plant emergence and early stages of development when adequate moisture is necessary for germination and early growth (Nivedita, 1992). The young plants are sensitive to dry spells, and high levels of runoff can cause erosion, making them fragile. Our findings align with Fall et al. (2021), who reported that very high precipitation could cause crop damage when associated with runoff, which explains why high values of SRI could be associated with low yield, as very high precipitation may have resulted in high surface runoff which could easily erode germinating plants. We also found that VI, derived from NDVI, had a strong correlation with millet yield during the growing period (August), consistent with Fall et al. (2021) and Panek and Gozdowski (2020), who reported the highest correlation between NDVI and cereal yield during the early stages of crop development. Our findings indicate a relationship between SOC levels and millet yields, with moderate SOC levels being associated with higher millet yields. Conversely, elevated SOC levels are correlated with reduced millet yields. This observation is in agreement with Oldfield et al. (2019), who reported a decline in maize yield when SOC concentrations exceeded 2%. The consistency between these studies underscores the potential influence of SOC on crop productivity and the importance of optimizing SOC levels for various crop types (Oldfield et al., 2019). 3.2. Predictive analysis: crop yield estimations 3.2.1. Predictive crop yield model selection Table 3 outlines the performance of different machine learning models evaluated for predicting millet yield with all available remote sensing data employed in this study. The nested cross-validation revealed that linear models, including Linear Regression, Ridge Regression, Lasso Regression, and Elastic Net Regression, had moderate predictive power, with Lasso Regression outperforming the others with an R2 score of 0.22. Also, the K-Nearest Neighbors Regression algorithm performed poorly, suggesting a potential need for future engineering or extensive training with better data in these models. Gradient Boosting and Support Vector Machine slightly improved, with R2 scores of 0.14 and 0.17, respectively. This improvement hints at the benefits of sequential learning and kernel methods, yet their moderate scores indicate that the current hyperparameters or data size may not suffice, and further data or broader hyperparameter exploration could improve outcomes. On the other hand, the Random Forest model stood out, which achieved an average R2 score of 0.25 and an RMSE of 0.59. Known for its robustness to data variability and ability to capture nonlinear relationships, we selected Random Forest as our preferred model for further analysis based on these performance metrics. This is also aligned with previous studies, where the Random Forest Regressor model performed its robustness in predicting cotton yield (Prasad et al., 2021), wheat yield (Jeong et al., 2016), and soybean yield (Sakamoto, 2020). Table 3. Average machine learning performance in nested cross-validation. Regression Model Average error scores in the nested 5-fold cross-validation NSE RMSE nRMSE R2 d Linear Regression 0.16 ± 0.12 0.61 ± 0.08 0.71 ± 0.08 0.16 ± 0.12 0.70 ± 0.05 Ridge Regression 0.21 ± 0.06 0.61 ± 0.11 0.69 ± 0.07 0.21 ± 0.06 0.65 ± 0.08 Lasso Regression 0.22 ± 0.06 0.60 ± 0.12 0.69 ± 0.07 0.22 ± 0.06 0.65 ± 0.10 ElasticNet Regression 0.20 ± 0.04 0.61 ± 0.10 0.69 ± 0.07 0.20 ± 0.04 0.64 ± 0.07 K-Nearest Neighbors Regression 0.01 ± 0.15 0.67 ± 0.11 0.77 ± 0.08 0.01 ± 0.15 0.57 ± 0.07 Support Vector Regression 0.17 ± 0.13 0.62 ± 0.15 0.70 ± 0.09 0.17 ± 0.13 0.62 ± 0.11 Random Forest Regressor 0.25 ± 0.08 0.59 ± 0.12 0.67 ± 0.09 0.25 ± 0.08 0.65 ± 0.07 Gradient Boosting Regressor 0.14 ± 0.14 0.63 ± 0.13 0.72 ± 0.09 0.14 ± 0.14 0.61 ± 0.09 3.2.2. Predictive crop yield model implementation and evaluation of its performance Table 4 and S5 present the results of the Random Forest Regressor models, which were trained using different sets of independent variables. The models’ performance was evaluated using several statistical indices, including NSE, R2, d, RMSE, and nRMSE. The best model was selected based on the highest NSE, R2, and d values and the lowest RMSE and nRMSE values. According to these criteria, the best model was identified as the one using all independent variables except Department, Harvesting, Total, Growing, Physiographical, and Planting SMI, VI, and GDDI (Fig. 4a). This model exhibited the highest NSE (0.831), the lowest RMSE (0.308) and nRMSE (0.077), and the highest R2 (0.831) and d (0.942) values. Conversely, the worst-performing model used all independent variables except Bias Correction factor and Department (Fig. 4b), which had the lowest NSE (0.730), the highest RMSE (0.391) and nRMSE (0.098), and the lowest R2 (0.730) and d (0.896) values. The exclusion of certain variables, including Department, Harvesting, Total, Growing, Physiographical, and some climate-related variables (SMI, VI, and GDDI) during the planting period, improved the Random Forest performance model. These variables may have had less influence on the response variable, or their exclusion may have reduced multicollinearity or noise in the data (Schroeder, 1990; Senaviratna and Cooray, 2019). However, these findings are dataset-specific and may not necessarily apply to other crops and regions. Table 4. The best-performing Random Forest Regressor models for different sets of variables. Independent Variables NSE RMSE nRMSE R2 d All variables except Bias Correction Harvesting, Total, Growing, and Physiographical 0.781 0.351 0.088 0.781 0.921 All variables except Bias Correction, Department, Harvesting, Total, Growing, Physiographical, and Planting SMI,VI, and GDDI 0.796 0.340 0.085 0.796 0.928 All variables except Bias Correction 0.756 0.371 0.093 0.756 0.909 All variables except Bias Correction and Department 0.730 0.391 0.098 0.730 0.896 All variables except Bias Correction, Department, and Physiographical 0.729 0.391 0.098 0.729 0.900 All variables except Bias Correction, Harvesting and Total 0.790 0.344 0.086 0.790 0.925 All variables except Bias Correction, Harvesting, Total, and Growing 0.798 0.337 0.085 0.798 0.928 All variables except Bias Correction, Department, Harvesting, Total, and Growing 0.767 0.362 0.091 0.767 0.915 All variables except Bias Correction, Department, Harvesting, and Total 0.735 0.387 0.097 0.735 0.902 All variables except Bias Correction and Total 0.756 0.371 0.093 0.756 0.907 All variables except Bias Correction, Department and Total 0.735 0.387 0.097 0.735 0.901 All variables except Harvesting, Total, Growing, and Physiographical 0.794 0.341 0.086 0.794 0.926 All variables 0.763 0.366 0.092 0.763 0.916 All variables except Department 0.740 0.383 0.096 0.740 0.900 All variables except Department and Physiographical 0.746 0.378 0.095 0.746 0.909 All variables except Harvesting and Total 0.793 0.342 0.086 0.793 0.925 All variables except Harvesting, Total, and Growing 0.820 0.319 0.080 0.820 0.938 All variables except, Department, Harvesting, Total, and Growing 0.795 0.340 0.086 0.795 0.927 All variables Department, Harvesting, and Total 0.768 0.362 0.091 0.768 0.916 All variables except Total 0.766 0.363 0.091 0.766 0.912 All variables except Department and Total 0.746 0.379 0.095 0.746 0.904 All variables except Department, Harvesting, Total, Growing, Physiographical and Planting SMI, VI, and GDDI 0.831 0.308 0.077 0.831 0.942 Download : Download high-res image (306KB) Download : Download full-size image Fig. 4. Comparing the predicted vs. actual millet yield for (a) the best- and (b) worst-performing Random Forest Regressor models. Meanwhile, the relatively lower statistical indices associated with the average-performing Random Forest Regressor models (refer to Table S5) could suggest the presence of other influential factors, currently unaccounted for or unidentified, that significantly impact millet yield predictions. These factors may not be entirely observable or quantifiable through the remote sensing products employed in this study. 3.2.3. Understanding the key predictors for millet crop yield using permutation importance analysis Fig. 5 illustrates the relative significance of the independent variables contributing to the optimal performance of the Random Forest Regressor model. The prominence of the WDI within the optimal model underscores the pivotal role of water availability in crop production, particularly during the planting phase. This suggests that any alterations in water accessibility, whether instigated by climatic extremes, farming management practices, or other elements, could profoundly affect millet yields. Singh and Das (2022) also found that WDI affected crop yield significantly (Singh and Das, 2022). However, soil fertility variations and pervasive striga infestations contribute to significant fluctuations in millet production across Asia and Africa (Singh et al., 2017). The Bias Correction factor emerged as the second most influential variable. This high ranking infers substantial variability in millet cultivation areas across different departments, a factor of paramount importance when production data is only available in aggregated forms, such as at departmental or district levels. Download : Download high-res image (186KB) Download : Download full-size image Fig. 5. The relative importance of independent variables in the overall performance of the optimal Random Forest Regressor model. The combined contribution of the indices related to drought and flood conditions (Planting SMI, Planting SPI3, Planting DSI, Planting SRI3, and Planting SMDI) accounts for approximately 49% of the variance, thereby signifying the substantial impact of extreme events on millet yield. Moreover, incorporating SPI3 and SRI3, representing precipitation and runoff data over three months, insinuates that recent climatic conditions during the planting phase can significantly influence overall crop yields. This is in line with other studies that have used these indices, SPI specifically, to monitor or predict yield (Mohammed et al., 2022, Tigkas et al., 2018). This underlines the necessity of incorporating temporal dynamics into agricultural modeling and planning. Consequently, identifying these crucial periods could aid in planning interventions or mitigation strategies to optimize yield. In summary, these findings emphasize the intricate nature of agricultural yield predictions, which are influenced by a multitude of interconnected environmental factors. They further underscore the necessity of maintaining comprehensive, spatially and temporally explicit data pertaining to these factors to enhance the precision and applicability of these predictive models. 4. Conclusion In this study, a systematic examination was conducted employing various spatiotemporal remote sensing data to construct a millet crop yield forecast model for Senegal using traditional statistical methods and more advanced approaches like machine learning based on five-year aggregated data at the departmental level. The key findings and subsequent steps are outlined as follows: • During the millet planting period, the availability of water has a substantial influence on the total crop yield. Consequently, remote sensing parameters that capture these factors, such as WDI, emerged as the highest-ranking variable in the predictive crop yield model. • The Bisa Correction factor’s relevance was underscored by its position immediately following WDI in terms of its ability to account for variabilities in crop yields. The emergence of this new Bisa Correction factor is encouraging and warrants additional investigation and validation across various regions and crop types. • Extreme weather events explain by different Severity Index (e.g., DSI) during the planting stage, capture around 50% of millet yield. • This study demonstrates the importance of integrating soil moisture-based indicators, considering distinct phases of millet development, considering production regions at the departmental level, and applying bias correction factors to enhance the accuracy of crop yield forecasts. This research focused on forecasting millet yields in Senegal, but subsequent studies could broaden the analysis to encompass additional crops and locales. Since various crops respond differently to extreme weather conditions, exploring these relationships across a spectrum of crops could enhance the creation of diverse crop yield prediction models. Moreover, examining various regions that experience distinct climate patterns would shed light on how well the study’s results apply to different settings and the overall applicability of the findings. Moreover, by incorporating socioeconomic information into crop yield forecasting models, we can uncover other factors that influence yield fluctuations and provide data-driven recommendations for policymaking to bolster food security. Declaration of Generative AI and AI-assisted technologies in the writing process During the preparation of this work, the authors used ChatGPT in order to improve readability. After using this tool/service, the authors reviewed and edited the content as needed and take full responsibility for the content of the publication. Declaration of Competing Interest The authors confirm that there are no known competing financial interests or personal relationships that could have influenced the research findings presented in this paper. Acknowledgments This study was funded by the United States Agency for International Development (USAID) Bureau for Resilience and Food Security/Center for Agriculture-led Growth under the Cooperative Agreement # AID-OAA-L-14–00006 as part of Feed the Future Innovation Lab for Collaborative Research on Sustainable Intensification (SIIL). Furthermore, this work has received partial support from the USDA National Institute of Food and Agriculture under the Hatch project 1019654. Any opinions, findings, conclusions, or recommendations expressed here are those of the authors alone. Appendix A. Supplementary material Download : Download Word document (73KB) Supplementary material . Data availability Data will be made available on request. References Altman, 1992 N.S. Altman An introduction to kernel and nearest neighbor nonparametric regression Am. Stat., 46 (1992), pp. 175-185, 10.2307/2685209 View in ScopusGoogle Scholar Bastiaanssen and Ali, 2003 W.G. Bastiaanssen, S. Ali A new crop yield forecasting model based on satellite measurements applied across the Indus Basin, Pakistan Agric. Ecosyst. Environ., 94 (3) (2003), pp. 321-340, 10.1016/S0167-8809(02)00034-8 View PDFView articleView in ScopusGoogle Scholar Bedeke, 2022 S.B. Bedeke Climate change vulnerability and adaptation of crop producers in sub-Saharan Africa: a review on concepts, approaches and methods In Environment, Development and Sustainability (Issue 0123456789), Springer Netherlands, (2022), 10.1007/s10668-022-02118-8 Google Scholar Breiman, 2001 L. Breiman Random Forests. 2021 IEEE International Conference on Consumer Electronics and Computer Engineering ICCECE 2021 (2001), pp. 542-545, 10.1109/ICCECE51280.2021.9342376 Google Scholar Cheng et al., 2022 E. Cheng, B. Zhang, D. Peng, L. Zhong, L. Yu, Y. Liu, C. Xiao, C. Li, X. Li, Y. Chen, H. Ye Wheat yield estimation using remote sensing data based on machine learning approaches Front. Plant Sci., 13 (2022), Article 1090970, 10.3389/fpls.2022.1090970 View in ScopusGoogle Scholar Christiaensen and Martin, 2018 L. Christiaensen, W. Martin Agriculture, structural transformation and poverty reduction: Eight new insights World Dev., 109 (2018), pp. 413-416, 10.1016/j.worlddev.2018.05.027 View PDFView articleView in ScopusGoogle Scholar Davis et al., 2017 B. Davis, S. Di Giuseppe, A. Zezza Are African households (not) leaving agriculture? Patterns of households’ income sources in rural Sub-Saharan Africa Food Policy, 67 (2017), pp. 153-174, 10.1016/j.foodpol.2016.09.018 View PDFView articleView in ScopusGoogle Scholar Debieu et al., 2018 M. Debieu, B. Sine, S. Passot, A. Grondin, E. Akata, P. Gangashetty, V. Vadez, P. Gantet, D. Foncéka, L. Cournac, C.T. Hash, N.A. Kane, Y. Vigouroux, L. Laplaze Response to early drought stress and identification of QTLs controlling biomass production under drought in pearl millet PLOS ONE, 13 (10) (2018), pp. 4-15, 10.1371/journal.pone.0201635 Google Scholar Drucker et al., 1996 H. Drucker, C.J. Burges, L. Kaufman, A. Smola, V. Vapnik Support vector regression machines Adv. Neural Inf. Process. Syst. (1996) Google Scholar Fall et al., 2021 C.M.N. Fall, C. Lavaysse, H. Kerdiles, M.S. Dramé, P. Roudier, A.T. Gaye Performance of dry and wet spells combined with remote sensing indicators for crop yield prediction in Senegal Clim. Risk Manag., 33 (2021), pp. 1-27, 10.1016/j.crm.2021.100331 Google Scholar FAO, 2020 FAO, 2020. GIEWS Country Brief Senegal. Glogbal Watch GIEWS, September-20, 2. Google Scholar Feed The Future, 2015 Feed The Future, 2015. Climate-smart agriculture in Senegal. CSA country profiles for Africa series. International Center for Tropical Agriculture, https://climateknowledgeportal.worldbank.org/sites/default/files/2019–06/SENEGAL_CSA_Profile.pdf (accessed 2 November 2023). Google Scholar Fox and Weisberg, 2019 Fox, J., Weisberg, S., 2019. An R Companion to Applied Regression, Third Edition. https://www.john-fox.ca/Companion/index.html (accessed 14 May 2023). Google Scholar Friedman, 2001 J. Friedman Greedy function approximation: a gradient boosting machine author (s): Jerome H. Friedman source Ann. Stat., 29 (5) (2001), pp. 1189-1232 View in ScopusGoogle Scholar Glauber et al., 2021 Glauber, J., Baldwin, K., Antón, J. and Ziebinska, U., 2021. Design principles for agricultural risk management policies. https://www.oecd-ilibrary.org/agriculture-and-food/design-principles-for-agricultural-risk-management-policies_1048819f-en. (accessed 1 November 2023). Google Scholar Global Yield Gap Atlas, 2016 Global Yield Gap Atlas, 2016. Senegal. https://www.yieldgap.org/senegal (accessed 14 May 2023). Google Scholar Hoerl and Kennard, 1970 A.E. Hoerl, R.W. Kennard Ridge regression: biased estimation for nonorthogonal problems Technometrics, 12 (1) (1970), pp. 55-67, 10.1080/00401706.1970.10488634 View in ScopusGoogle Scholar Ilyas et al., 2023 Q.M. Ilyas, M. Ahmad, A. Mehmood Automated estimation of crop yield using artificial intelligence and remote sensing technologies Bioeng, 10 (2) (2023), p. 125, 10.3390/bioengineering10020125 View in ScopusGoogle Scholar Jeong et al., 2016 J. Jeong, J. Resop, N. Mueller, D. Fleisher, K. Yun, E. Butler, D.J. Timlin, K.M. Shim, J.S. Gerber, V.R. Reddy, S.H. Kim Random forests for global and regional crop yield predictions PLOS ONE, 11 (6) (2016), pp. 1-15, 10.1371/journal.pone.0156571 Google Scholar Kane et al., 2016 S.N. Kane, A. Mishra, A.K. Dutta Preface: international conference on recent trends in physics (ICRTP 2016) J. Phys. Conf. Ser., 755 (1) (2016), 10.1088/1742-6596/755/1/011001 Google Scholar Kern et al., 2018 A. Kern, Z. Barcza, H. Marjanović, T. Árendás, N. Fodor, P. Bónis, P. Bognár, J. Lichtenberger Statistical modelling of crop yield in Central Europe using climate data and remote sensing vegetation indices Agric. . Meteor., 260 (2018), pp. 300-320, 10.1016/j.agrformet.2018.06.009 View PDFView articleView in ScopusGoogle Scholar Khaki et al., 2021 S. Khaki, H. Pham, L. Wang Simultaneous corn and soybean yield prediction from remote sensing data using deep transfer learning Sci. Rep., 11 (1) (2021), Article 11132, 10.1038/s41598-021-89779-z View in ScopusGoogle Scholar Kuznetsova et al., 2017 A. Kuznetsova, P.B. Brockhoff, R.H.B. Christensen lmerTest Package Tests Linear Mixed Eff. (2017), 10.18637/jss.v082.i13 Google Scholar Lee et al., 2009 Lee, R.D., Hanna, W.W., Buntin, G.D., Dozier, W., Timper, P., Wilson, J.P., 2009. Pearl millet for grain. https://secure.caes.uga.edu/extension/publications/files/pdf/B%201216_3.PDF (accessed 5 November 2023). Google Scholar Lenth et al., 2023 Lenth, R.V., Bolker, B., Buerkner, P., Giné-vázquez, I., Herve, M., Love, J., Singmann, H., 2023. Package ‘ emmeans.: https://cran.r-project.org/web/packages/emmeans/emmeans.pdf (accessed 14 May 2023). Google Scholar Li et al., 2015 T. Li, T. Hasegawa, X. Yin, Y. Zhu, K. Boote, M. Adam, S. Bregaglio, S. Buis, R. Confalonieri, T. Fumoto, D. Gaydon Uncertainties in predicting rice yield by current crop models under a wide range of climatic conditions Glob. Change Biol., 21 (3) (2015), pp. 1328-1341, 10.1111/gcb.12758 View in ScopusGoogle Scholar Lipper et al., 2014 L. Lipper, P. Thornton, B.M. Campbell, T. Baedeker, A. Braimoh, M. Bwalya, P. Caron, A. Cattaneo, D. Garrity, K. Henry, R. Hottle, L. Jackson, A. Jarvis, F. Kossam, W. Mann, N. McCarthy, A. Meybeck, H. Neufeldt, T. Remington, E.F. Torquebiau Climate-smart agriculture for food security Nat. Clim. Change, 4 (12) (2014), pp. 1068-1072, 10.1038/nclimate2437 View in ScopusGoogle Scholar Lopresti et al., 2015 M.F. Lopresti, C.M. Di Bella, A.J. Degioanni Relationship between MODIS-NDVI data and wheat yield: A case study in Northern Buenos Aires province, Argentina Inf. Process. Agric., 2 (2) (2015), pp. 73-84, 10.1016/j.inpa.2015.06.001 View PDFView articleView in ScopusGoogle Scholar Matsuura et al., 2016 A. Matsuura, P. An, K. Murata, S. Inanaga Effect of pre-and post-heading waterlogging on growth and grain yield of four millets Plant Prod. Sci., 19 (3) (2016), pp. 348-359, 10.1080/1343943X.2016.1146907 View in ScopusGoogle Scholar Meroni et al., 2013 M. Meroni, C. Atzberger, C. Vancutsem, N. Gobron, F. Baret, R. Lacaze, H. Eerens, O. Leo Evaluation of agreement between space remote sensing SPOT-VEGETATION fAPAR Time Series IEEE Trans. Geosci. Remote Sens., 51 (4) (2013), pp. 1951-1962, 10.1109/TGRS.2012.2212447 View in ScopusGoogle Scholar Mohammed et al., 2022 S. Mohammed, K. Alsafadi, G.O. Enaruvbe, B. Bashir, A. Elbeltagi, A. Széles, A. Alsalman, E. Harsanyi Assessing the impacts of agricultural drought (SPI/SPEI) on maize and wheat yields across Hungary Sci. Rep., 12 (1) (2022), pp. 1-19, 10.1038/s41598-022-12799-w Google Scholar Muruganantham et al., 2022 P. Muruganantham, S. Wibowo, S. Grandhi, N.H. Samrat, N. Islam A systematic literature review on crop yield prediction with deep learning and remote sensing Remote Sens, 14 (9) (2022), p. 1990, 10.3390/rs14091990 View in ScopusGoogle Scholar Nivedita, 1992 Nivedita, M., 1992. Effect of moisture status and bulk density on germination and emergence of pearl millet, sorghum and groundnut on an Alfisol (Doctoral dissertation, Andhra Pradesh Agricultural University). https://oar.icrisat.org/656/1/60606.pdf (accessed 5 November 2023). Google Scholar Okolie et al., 2022 C.C. Okolie, G. Danso-Abbeam, O. Groupson-Paul, A.A. Ogundeji Climate-smart agriculture amidst climate change to enhance agricultural production: a bibliometric analysis Land, 12 (1) (2022), p. 50, 10.3390/land12010050 Google Scholar Oldfield et al., 2019 E.E. Oldfield, M.A. Bradford, S.A. Wood Global meta-analysis of the relationship between soil organic matter and crop yields Soil, 5 (1) (2019), pp. 15-32, 10.5194/soil-5-15-2019 View in ScopusGoogle Scholar Panek and Gozdowski, 2020 E. Panek, D. Gozdowski Analysis of relationship between cereal yield and NDVI for selected regions of Central Europe based on MODIS satellite data Remote Sens. Appl. Soc. Environ., 17 (2020), Article 100286, 10.1016/j.rsase.2019.100286 View PDFView articleView in ScopusGoogle Scholar Pedregosa et al., 2011 F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion Scikit-learn: machine learning in python fabian. “ Environ. Health Perspect., 127 (9) (2011), pp. 2825-2830, 10.1289/EHP4713 Google Scholar Prasad et al., 2021 N.R. Prasad, N.R. Patel, A. Danodia Crop yield prediction in cotton for regional level using random forest approach Spa. Inf. Res., 29 (2) (2021), pp. 195-206, 10.1007/s41324-020-00346-6 View in ScopusGoogle Scholar Qiao et al., 2021 M. Qiao, X. He, X. Cheng, P. Li, H. Luo, L. Zhang, Z. Tian Crop yield prediction from multi-spectral, multi-temporal remotely sensed imagery using recurrent 3D convolutional neural networks Int. J. Appl. Earth Obs. Geoinf., 102 (2021), Article 102436, 10.1016/j.jag.2021.102436 View PDFView articleView in ScopusGoogle Scholar R Core Team, 2022 R Core Team, 2022. The R Project for Statistical Computing. https://www.r-project.org/ (accessed 14 May 2023). Google Scholar Ren et al., 2008 J. Ren, Z. Chen, Q. Zhou, H. Tang Regional yield estimation for winter wheat with MODIS-NDVI data in Shandong, China Int. J. Appl. Earth Obs. Geoinf., 10 (4) (2008), pp. 403-413, 10.1016/j.jag.2007.11.003 View PDFView articleView in ScopusGoogle Scholar Sakamoto, 2020 T. Sakamoto Incorporating environmental variables into a MODIS-based crop yield estimation method for United States corn and soybeans through the use of a random forest regression algorithm ISPRS J. Photogramm. Remote Sens., 160 (2020), pp. 208-228, 10.1016/j.isprsjprs.2019.12.012 View PDFView articleView in ScopusGoogle Scholar Schroeder, 1990 Schroeder, M.A., 1990. Diagnosing and Dealing with Multicollinearity. 1990 Sage Publications. Google Scholar Senaviratna and Cooray, 2019 N.A.M. Senaviratna, T.M.J. Cooray Diagnosing multicollinearity of logistic regression model Asian J. Math. Stat., 5 (2) (2019), pp. 1-9, 10.9734/ajpas/2019/v5i230132 Google Scholar Sheffield et al., 2018 J. Sheffield, E.F. Wood, M. Pan, H. Beck, G. Coccia, A. Serrat‐Capdevila, K. Verbist Satellite remote sensing for water resources management: Potential for supporting sustainable development in data‐poor regions Water Resour. Res., 54 (12) (2018), pp. 9724-9758, 10.1029/2017WR022437 View in ScopusGoogle Scholar Singh and Das, 2022 G. Singh, N.N. Das A data-driven approach using the remotely sensed soil moisture product to identify water-demand in agricultural regions Sci. Total Environ., 837 (2022), Article 155893, 10.1016/j.scitotenv.2022.155893 View PDFView articleView in ScopusGoogle Scholar Singh et al., 2017 P. Singh, K.J. Boote, M.D.M. Kadiyala, S. Nedumaran, S.K. Gupta, K. Srinivas, M.C.S. Bantilan An assessment of yield gains under climate change due to genetic modification of pearl millet Sci. Total Environ., 601 (2017), pp. 1226-1237, 10.1016/j.scitotenv.2017.06.002 View PDFView articleView in ScopusGoogle Scholar Sui et al., 2018 J. Sui, Q. Qin, H. Ren, Y. Sun Winter wheat production estimation based on environmental stress factors from satellite observations 10 (6) (2018), p. 962, 10.3390/rs10060962 View in ScopusGoogle Scholar Tibshirani, 1994 Tibshirani, R., 1994. Regression shrinkage and selection via the lasso. J. R. Stat. Soc. B. 58, 267. https://cir.nii.ac.jp/crid/1370004236282599299%22%0A%7D (accessed 14 May 2023). Google Scholar Tigkas et al., 2018 D. Tigkas, H. Vangelis, G. Tsakiris Drought characterisation based on an agriculture-oriented standardised precipitation index Theor. Appl. Climatol., 135 (3–4) (2018), pp. 1435-1447, 10.1007/s00704-018-2451-3 Google Scholar UN-Environment, 2017 UN-Environment, 2017. Climate Change Adaptation Technologies for Water. Google Scholar Vieira Junior et al., 2023 N. Vieira Junior, A.J.P. Carcedo, D. Min, A.A. Diatta, A. Araya, P.V.V. Prasad, A. Diallo, I. Ciampitti Management adaptations for water-limited pearl millet systems in Senegal Agric. Water Manag., 278 (2023), Article 108173, 10.1016/j.agwat.2023.108173 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2018 J. Wang, S.K. Vanga, R. Saxena, V. Orsat, V. Raghavan Effect of climate change on the yield of cereal crops: a review Climate, 6 (2) (2018), p. 41, 10.3390/cli6020041 Google Scholar World Bank Group, 2021 World Bank Group, 2021. Senegal, Current Climate > Climatology. https://climateknowledgeportal.worldbank.org/country/senegal/climate-data-historical (accessed 14 May 2023). Google Scholar Zou and Hastie, 2005 H. Zou, T. Hastie Regularization and variable selection via the elastic net J. R. Stat. Soc. Ser. B: Stat. Methodol., 67 (2) (2005), pp. 301-320, 10.1111/j.1467-9868.2005.00503.x View in ScopusGoogle Scholar Cited by (0) © 2023 The Author(s). Published by Elsevier B.V. Recommended articles A stochastic simulation-based method for predicting the carrying capacity of agricultural water resources Agricultural Water Management, Volume 291, 2024, Article 108630 Li He, …, Ying Xu View PDF Assessment of spatial and temporal seepage losses in large canal systems under current and future water-saving conditions: A case study in the Hetao Irrigation District, China Agricultural Water Management, Volume 291, 2024, Article 108615 Wei Mao, …, Jinzhong Yang View PDF How are physiological responses to drought modulated by water relations and leaf economics’ traits in woody plants? Agricultural Water Management, Volume 291, 2024, Article 108613 Luca Da Sois, …, Jordi Martínez-Vilalta View PDF Show 3 more articles Article Metrics Captures Readers: 10 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 10:
- APA Citation: Shangguan, W., Li, Q., & Shi, G. (2023). A 1 km Daily Soil Moisture Dataset over China Based on Situ Measurement (2000–2020). National Tibetan Plateau Data Center.
  Main Objective: Downscaling SMAP satellite soil moisture data to a higher resolution using a stacking fusion model integrated with terrain partitioning.
  Study Location: Anhui Province, China
  Data Sources: SMAP satellite soil moisture data, measured soil moisture at 87 sites, MODIS products, Sentinel-1 data, DEM, soil property data, precipitation data
  Technologies Used: Stacking fusion model, XGBoost, LightGBM, CatBoost, extreme gradient boosting, light gradient boosting machine, categorical boosting
  Key Findings: - The stacking model outperforms individual models in terms of downscaling accuracy.
- The downscaled soil moisture generally has high accuracy, with 60% of the sites exhibiting strong correlation (R > 0.6) and an average unbiased RMSE of 0.040 m3/m3.
- The downscaled SM was able to capture the temporal dynamics of SM and respond positively to rainfall events.
- The downscaling approach was able to preserve the overall trend of SMAP L4-SM while enriching the details.
- The most influential factors in the downscaling models include day of year (DOY), clay content, and digital elevation model (DEM).
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: {'extract_1': '"The specific objective of the study is to evaluate the effectiveness of this downscaling approach and the impact of terrain partitioning on downscaling accuracy. The research team selected Anhui Province, China, as the study area due to its diverse terrain features."', 'extract_2': '"Using a stacking strategy that combines extreme gradient boosting (XGBoost), light gradient boosting machine (LightGBM), and categorical boosting (CatBoost), the study demonstrates that the stacking model outperforms individual models in terms of downscaling accuracy. Specifically, they found that the stacking model achieved the highest correlation coefficients (R) and lowest root mean square errors (RMSE) across all regions in the study area."', 'relevance_score': 0.9}
  Relevance Score: 0.9
  Inline Citation: Shangguan et al., 2023
  Explanation: The primary purpose of this study is to downscale SMAP satellite soil moisture data to a higher resolution using a stacking fusion model integrated with terrain partitioning. The specific objective of the study is to evaluate the effectiveness of this downscaling approach and the impact of terrain partitioning on downscaling accuracy. The research team selected Anhui Province, China, as the study area due to its diverse terrain features. The main findings of the study are as follows:

Using a stacking strategy that combines extreme gradient boosting (XGBoost), light gradient boosting machine (LightGBM), and categorical boosting (CatBoost), the study demonstrates that the stacking model outperforms individual models in terms of downscaling accuracy. Specifically, they found that the stacking model achieved the highest correlation coefficients (R) and lowest root mean square errors (RMSE) across all regions in the study area.

In comparing the downscaled soil moisture (SM) with measured SM at 87 sites, the study shows that the downscaled SM generally has high accuracy, with 60% of the sites exhibiting strong correlation (R > 0.6) and an average unbiased RMSE of 0.040 m3/m3, meeting the accuracy requirements of SMAP products. Moreover, the downscaled SM was able to capture the temporal dynamics of SM and respond positively to rainfall events, with both downscaled SM and downscaled SM (WP) showing positive responses to rainfall events.

In analyzing the spatial distribution of downscaled SM, the study found that the downscaling approach was able to preserve the overall trend of SMAP L4-SM while enriching the details. The downscaled SM exhibited higher values in humid regions and lower values in semi-humid regions, consistent with the actual soil moisture conditions.

Through an analysis of the input predictors used in the downscaling models, the study reveals that the most influential factors include day of year (DOY), clay content, and digital elevation model (DEM). DOY was found to play a crucial role due to its ability to capture seasonal variations in SM. Clay content was identified as a significant factor due to its impact on water retention capacity, while DEM influenced SM dynamics based on the complex interactions with other factors such as land cover and vegetation.

 Full Text: >
"This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. Consent Selection Necessary Preferences Statistics Marketing Show details                 Deny Allow selection Allow all    Journals Topics Information Author Services Initiatives About Sign In / Sign Up Submit   Search for Articles: Remote Sensing All Article Types Advanced   Journals Remote Sensing Volume 16 Issue 1 10.3390/rs16010200 Submit to this Journal Review for this Journal Propose a Special Issue Article Menu Academic Editor Dusan Gleich Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links Article Views 1050 Table of Contents Abstract Introduction Study Area and Data Methods Results Discussion Conclusions Author Contributions Funding Data Availability Statement Acknowledgments Conflicts of Interest References share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle A Spatial Downscaling Framework for SMAP Soil Moisture Based on Stacking Strategy by Jiaxin Xu 1,2, Qiaomei Su 1,*, Xiaotao Li 2, Jianwei Ma 2, Wenlong Song 2, Lei Zhang 1 and Xiaoye Su 1,2 1 Department of Surveying and Mapping, College of Mining Engineering, Taiyuan University of Technology, Taiyuan 030024, China 2 China Institute of Water Resources and Hydropower Research, Beijing 100038, China * Author to whom correspondence should be addressed. Remote Sens. 2024, 16(1), 200; https://doi.org/10.3390/rs16010200 Submission received: 20 October 2023 / Revised: 22 December 2023 / Accepted: 28 December 2023 / Published: 3 January 2024 (This article belongs to the Special Issue Satellite Soil Moisture Estimation, Assessment, and Applications) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Soil moisture (SM) data can provide guidance for decision-makers in fields such as drought monitoring and irrigation management. Soil Moisture Active Passive (SMAP) satellite offers sufficient spatial resolution for global-scale applications, but its utility is limited in regional areas due to its lower spatial resolution. To address this issue, this study proposed a downscaling framework based on the Stacking strategy. The framework integrated extreme gradient boosting (XGBoost), light gradient boosting machine (LightGBM), and categorical boosting (CatBoost) to generate 1 km resolution SM data using 15 high-resolution factors derived from multi-source datasets. In particular, to test the influence of terrain partitioning on downscaling results, Anhui Province, which has diverse terrain features, was selected as the study area. The results indicated that the performance of the three base models varied, and the developed Stacking strategy maximized the potential of each model with encouraging downscaling results. Specifically, we found that: (1) The Stacking model achieved the highest accuracy in all regions, and the performance order of the base models was: XGBoost > CatBoost > LightGBM. (2) Compared with the measured SM at 87 sites, the downscaled SM outperformed other 1 km SM products as well as the downscaled SM without partitioning, with an average ubRMSE of 0.040 m3/m3. (3) The downscaled SM responded positively to rainfall events and mitigated the systematic bias of SMAP. It also preserved the spatial trend of the original SMAP, with higher levels in the humid region and relatively lower levels in the semi-humid region. Overall, this study provided a new strategy for soil moisture downscaling and revealed some interesting findings related to the effectiveness of the Stacking model and the impact of terrain partitioning on downscaling accuracy. Keywords: SMAP L4; soil moisture downscaling; Stacking; machine learning 1. Introduction Soil moisture (SM) is an important component of the global water cycle, affecting rainfall and temperature through evapotranspiration processes [1]. Its variation not only relates to plant growth and agricultural production, but also to global climate change and extreme climate events, such as droughts, floods, and heat waves [2]. In the past, the acquisition of SM data has mainly relied on manual sampling and site observations [3]. In situ SM can be interpolated to a larger area by geostatistical techniques. However, the practical application is unsatisfactory, and the interpolation results have great uncertainty in complex surfaces [4]. Therefore, the observation based on point scale makes it challenging to meet the monitoring needs of SM at a regional or global scale. The remote sensing technique reduces the cost of SM measurements and allows continuous monitoring over a large scale. Microwave remote sensing has unique advantages in SM monitoring, as it is not affected by weather conditions, has a certain penetration ability, and captures SM information in the vertical profile [5]. Previous studies have found that L-band is less affected by surface roughness and vegetation types [6], and Soil Moisture Active Passive (SMAP), represented by L-band, has higher accuracy and robustness than other remotely sensed SM products [7]. SMAP L4 products provide estimates of surface (0–5 cm) and root zone (0–100 cm) SM at a 9 km spatial resolution. These products also fill in the gaps in SMAP observations caused by orbit and land surface characteristics, thus providing spatially and temporally more complete SM products [8]. However, 9 km resolution is still too coarse for many applications that require finer scale data, such as in agriculture, hydrology, and ecology. Therefore, it is necessary to develop methods to downscale SMAP products to higher resolutions, such as 1 km or finer. There are many classifications for downscaling methods [9,10,11]. Zhao et al. [9] categorized downscaling methods into three types based on the relational models used: empirical methods, semi-empirical methods, and physics-based methods. Among these methods, empirical methods are based on a priori knowledge and operate under the assumption that the model’s scale remains consistent. They apply a relational model, established at a coarse resolution, to high-resolution downscaling factors, thereby producing the downscaled SM. This method has been widely used due to its simplicity. Machine learning (ML) belongs to the category of empirical methods, which has a strong ability to deal with nonlinear issues [12]. It expresses the relationship between SM and downscaling factors more reasonably under the lack of a physical background, overcoming the limitations of empirical methods and physical-based models. ML techniques have many cases in the field of passive microwave SM downscaling. Part of the studies performed downscaling directly through a single model. For instance, Wei et al. [13] used the gradient boosting decision tree (GBDT) algorithm to downscale SMAP products and obtained promising results in most regions, although improvements are still needed in areas with denser vegetation cover. Karthikeyan et al. [14] generated a multi-layer SM product using the extreme gradient boosting (XGBoost) algorithm, and demonstrated that the method has high accuracy, with ubRMSE less than 0.040 m3/m3 at most sites. Another part of the studies selected the best performing one for downscaling by comparing a series of models in the training phase. Rao et al. [15] adopted a combination of multiple ML methods to downscale SMAP SM, including multiple linear regression (MLR), support vector regression (SVR), artificial neural networks (ANNs), random forest (RF) and XGBoost. They found that XGBoost was selected most frequently and had the highest accuracy, followed by RF. Similarly, Yan et al. [16] compared three ML algorithms: RF, SVR, and k-nearest neighbors (KNN) for AMSR-E and AMSR2 products. They found that RF had the best accuracy and used it to establish seasonal downscaling models. Despite the success of these studies, there are still some potential concerns. A single ML model is prone to overfitting in a multidimensional feature space and may not fulfill both performance and stability requirements. The Stacking fusion model is a heterogeneous ensemble method that can effectively combine the advantages of multiple models and obtain better results than a single model. Its advancement has been verified in the landslide susceptibility assessment [17], biomass estimation [18], visibility prediction [19] and other remote sensing related fields. However, to our knowledge, the potential of this method in the field of SM downscaling has not been fully explored. Therefore, this study attempted to improve the resolution and accuracy of SMAP products by using the Stacking fusion model. We chose three models as the base estimators for Stacking: XGBoost, light gradient boosting machine (LightGBM), and categorical boosting (CatBoost). They are improved algorithms based on GBDT, with excellent generalization ability [20]. The superiority of XGBoost and LightGBM in SM downscaling has been confirmed [14,21]. CatBoost is widely used in various ML tasks due to its advantages in dealing with categorical features and regression issues [22,23]. But its applications in SM downscaling are relatively limited, and it is necessary to evaluate its applicability. To enhance the interpretability of the downscaling model, auxiliary data closely related to SM are required. Land Surface Temperature (LST) and Vegetation Index (VI) are the most commonly used factors that form a feature space to describe the surface water and heat exchange process, also known as the triangular feature space [24]. In addition, Bai et al. [25] found that combining optical/infrared data with synthetic aperture radar (SAR) data can obtain better downscaling results in semi-arid areas with low vegetation cover. This is due to the fact that C-band radar can penetrate the soil surface and directly detect the surface SM content, while optical data has an indirect relationship with SM. In other words, multi-source data can reflect SM changes from different perspectives, thereby complementing the limitations of each data type. Apart from the dynamic variables mentioned above, some static variables also have a significant impact on SM, such as topography, soil properties, and land cover [21,26]. They are more important than dynamic variables because they determine the primary level and spatial pattern of SM at a specific location, and act as constraint conditions for the downscaling model. Dynamic variables predominantly capture the short-term fluctuations of SM, which are influenced by climate and vegetation. Karthikeyan et al. [14] first identified homogeneous regions by predictors in their study, and then performed SM downscaling by region. They suggested that ML algorithms based on homogeneous regions may solve the extrapolation problem. This inspires our study: we want to explore whether downscaling accuracy can be improved by partitioning modeling in regions with complex topography. In summary, the main objective of this study is to downscale SMAP L4-SM products using multi-source data through the Stacking strategy. In particular, we selected Anhui Province, which has a rich and easily distinguishable terrain, as the study area. This study compared the accuracy differences between downscaling models with and without terrain partitioning. Furthermore, we performed a comprehensive validation of the downscaling results through ground measured SM and precipitation data, as well as other 1km SM products. We also analyzed the impact of different sources of downscaling factors on SM. The contributions of this study are (1) Validating the applicability of the Stacking fusion model in passive microwave SM downscaling. (2) Exploring whether the strategy based on terrain partitioning can improve the downscaling accuracy. (3) Analyzing how different downscaling factors influence SM. 2. Study Area and Data 2.1. Study Area Anhui Province (29°41′–34°38′N, 114°54′–119°37′E; Figure 1) is situated in eastern China and is significantly influenced by monsoon climate. It has an average annual temperature of 14–17 °C and an average annual precipitation of 773–1670 mm. The topography of Anhui province is diverse [27], with higher elevation in the south and lower in the north, consisting of five geomorphic units: Huai Bei Plain (HB), Jiang Huai Hilly (JH), Wan Xi Mountain (WX), Yan Jiang Plain (YJ), and Wan Nan Mountain (WN). This paper will use these abbreviations to describe these geomorphic units, respectively. Figure 1. Location of the study area. HB is located in the north of Anhui province, accounting for about 27% of the total area, with flat terrain and fertile soil, making it the largest agricultural center in the province. JH covers around 23% of the total area, characterized by relatively low terrain and abundant water resources. YJ, spanning about 21% of the total area, is situated along the Yangtze River. It has a dense river network and well-developed paddy agriculture. WX and WN make up approximately 29% of the total area and are dominated by forest, with higher elevation. 2.2. Research Data The data used in this study included ground measured SM, SMAP SM, MODIS products, Sentinel-1 data, DEM, soil property data, and precipitation data, all from the period of 1 April to 1 November 2019. Table 1 provides a description of these datasets. Table 1. Description of datasets used in this study. 2.2.1. Ground Measured SM Data The ground measured SM data are provided by the Anhui Hydrology Bureau. There are 87 SM sites, of which 11 are located in WN, 5 in WX, 18 in YJ, 16 in JH, and 37 in HB (Figure 1). These sites collect SM data at three standard depths (10 cm, 20 cm, and 40 cm) on the 1st, 11th, and 21st of each month at 8:00 AM using the drying method. Validation of downscaling results with measured SM at 10 cm may introduce some uncertainty as the SMAP L4 represents SM at a depth of 5 cm. It has been demonstrated that SM of two consecutive soil layers is strongly correlated [28], therefore inconsistency in measurement depths has little effect on the correlation assessment. Theoretically, SM at 10 cm will be slightly higher than that at 5 cm as a result of infiltration and evapotranspiration. 2.2.2. SMAP SM Data SMAP is a satellite mission launched by the National Aeronautics and Space Administration (NASA) in 2015 to monitor the global distribution of SM and freeze–thaw states at the Earth’s surface. The satellite is equipped with an L-band radar and an L-band radiometer, which synergistically enhance the accuracy and spatial resolution of SM retrievals [29]. The SMAP L4-SM data used in this study were acquired from the National Snow and Ice Data Centre (NSIDC) (https://nsidc.org/data/smap, accessed on 10 April 2023). It is generated every three hours, and data from 6:00 AM to 9:00 AM were selected to match the observation time of the measured SM. 2.2.3. Modis Products MODIS is a crucial data source for constructing downscaling models in this study, providing continuous data with a spatial resolution of 250 m–1 km for important features such as spectral indices and surface temperature. All MODIS products used in this paper have been listed in Table 1, among which the MCD12Q1 provides LC data at 500 m resolution for 2019, MOD15A2H provides LAI data at 500 m every 8 days, and MOD11A1 provides LST data at 1 km per day. Additionally, MOD09A1 provides reflectance data at 500 m resolution every 8 days, and four spectral indices were calculated to provide information on surface vegetation, water bodies, and soils. The expressions for these indices are as follows: 𝑁𝐷𝑉𝐼=(𝑛𝑖𝑟−𝑟𝑒𝑑)/(𝑛𝑖𝑟+𝑟𝑒𝑑) (1) 𝐸𝑉𝐼=2.5∗(𝑛𝑖𝑟−𝑟𝑒𝑑)/(𝑛𝑖𝑟+6∗𝑟𝑒𝑑−7.5∗𝑏𝑙𝑢𝑒+1) (2) 𝑁𝐷𝑊𝐼=(𝑔𝑟𝑒𝑒𝑛−𝑛𝑖𝑟)/(𝑔𝑟𝑒𝑒𝑛+𝑛𝑖𝑟) (3) 𝑁𝑆𝐷𝑆𝐼=(𝑠𝑤𝑖𝑟1−𝑠𝑤𝑖𝑟2)/𝑠𝑤𝑖𝑟1 (4) where red, nir, blue, and green correspond to bands 1–4 of MODIS, and swir1 and swir2 correspond to bands 6–7, respectively. Furthermore, MCD43A3 provides albedo data in visible, near infrared, and shortwave bands. Since the difference between the mean values of white-sky albedo and black-sky albedo is small and highly correlated [30], their mean values in the shortwave band were used as an approximation of surface albedo in this study. 2.2.4. Sentinel-1 Data Sentinel-1 is composed of two polar-orbiting satellites, Sentinel-1A and Sentinel-1B, both equipped with C-band synthetic aperture radar (SAR) sensors to monitor land and ocean surfaces. It has a 12-day repeat cycle and can operate in four imaging modes: strip map (SM), interferometric wide swath (IW), extra-wide swath (EW), and wave (WV). The IW mode is the main mode for land surface observation, providing 10 m resolution images in both VV and VH polarizations. In this study, the ascending orbit data of Sentinel-1 in the IW mode were utilized, and a sliding time window processing method was applied to generate daily radar data. The window had a size of 12 days, containing 6 days before and after each day. This setup ensured that each day’s radar data had an equal temporal span, thus avoiding data gaps. Within the sliding time window, daily radar data were obtained by averaging all the Sentinel-1 images. 2.2.5. Topographic Data Topography plays an important role in SM downscaling, which is closely related to the climate, surface runoff, and the water cycle, etc. The distribution of SM at different scales is strongly influenced by topography (e.g., elevation, slope), and many studies have used topographic features for SM downscaling [21]. In this study, the Shuttle Radar Topography Mission (SRTM) data from the GEE platform were used with a spatial resolution of 90 m. 2.2.6. Soil Property Data Soil properties (proportion of clay, sand, and silt) are also vital predictors, which determine the permeability of surface water and the water-holding capacity of soil. The soil property data used in this study were downloaded from the Harmonized World Soil Database (HWSD) [31]. This dataset adopted the FAO-90 soil classification system, which encompassed physical and chemical characteristics of topsoil (0–30 cm) and subsoil (30–100 cm). The clay, sand, and silt data of topsoil were extracted and cropped to the study area. 2.2.7. Precipitation Data Precipitation is another important climatic factor that affects SM dynamics besides surface temperature, and the soil response to rainfall differs across depths [32]. Time series precipitation data are commonly used to validate downscaled SM. The Climate Hazards Group InfraRed Precipitation with Station dataset (CHIRPS), which combines 0.05° resolution satellite imagery and in situ station data, is currently updated to version 2.0 and provides global precipitation data from 1981 to the present. In this study, CHIRPS data were acquired through the GEE platform as a validation set for the downscaling results. 2.2.8. Other SM Products Two SM products with a spatial resolution of 1 km were selected for comparison with downscaled SM. The first is SMCI1.0 (Soil Moisture of China by in situ data, version 1.0), produced by Shangguan et al. [33]. It provides daily SM data from 2000 to 2020 and consists of 10 depth layers (10–100 cm), offering two versions with different resolutions of 30 s (~1 km) and 0.1 deg (~9 km). The product is available from the National Tibetan Plateau Science Data Center (https://cstr.cn/18406.11.Terre.tpdc.272415, accessed on 6 May 2023). This study obtained SMCI1.0 SM at 10 cm depth with a spatial resolution of 1 km as one of the validation datasets. Moreover, SMAP released the SMAP-derived 1 km downscaled surface SM product (abbreviated as SMAP D-SM) in March 2023, which contains global daily 1 km resolution surface SM [34]. Currently version 1 data are available from the NSIDC Center, and daily SM data during the study period were obtained as another validation dataset (https://nsidc.org/data/smap, accessed on 25 April 2023). The product has two bands: band 1 represents the data for the ascending orbit (6 AM) and band 2 for the descending orbit (6 PM). Given the high number of missing values, we combined the two bands to fill in the missing values of the AM data with the PM data. 3. Methods Section 3.1 illustrates the data preparation process based on GEE. Section 3.2 introduces three improved algorithms for GBDT: XGBoost, CatBoost, and LightGBM, which are tree-based ML methods that differ in model construction, feature processing, and target optimization. To integrate the advantages of the three models, this study adopts the Stacking strategy. This subsection can be realized with the scikit-learn library for Python3 and Jupyter Notebook. Section 3.3 demonstrates the overall downscaling strategy and provides a schematic diagram. Finally, Section 3.4 presents several metrics to evaluate the downscaling results. 3.1. Data Preparation Some low-quality pixels may be observed in the MODIS products due to noise (mainly clouds). To maintain the spatial continuity and consistency of the data while minimizing the outliers, low-quality pixels were first filtered out through the quality control bands in each MODIS dataset. Then, for the daily-scale data (MOD11A1, MCD43A3), the missing values were filled in by linear interpolation using the valid values of the images within 15 days before and after. Similarly, for the 8-day scale data (MOD09A1, MOD15A2H), images of intermediate dates were generated by linear interpolation. To further improve the quality and smoothness of the interpolated data, the SG (Savitzky–Golay) filter was introduced. This method utilizes polynomials for the least-squares fitting of values within a moving window, effectively removing noise while preserving the trend of data [35]. There are two important parameters of the SG filter, the half-width of the sliding window, m, and the order of the polynomial, d. Specifically, m determines the amount of data considered by the filter, while d defines the order of the polynomial used in the filter. A larger m and smaller d result in a smoother filtering result. After several tests, this study set m to 5 and d to 4. MCD12Q1 is an annual product with five classification schemes. This study selected Land Cover Type 5, the Plant Functional Type (PFT) scheme, which includes 8 biomes and 4 other land cover types, totaling 12 types. The area of each class was calculated and reclassified to reduce the complexity and uncertainty of classification (Table 2). Water bodies were excluded to minimize the negative impacts on downscaling performance. Table 2. MCD12Q1 (PFT) land cover types and reclassification scheme. 3.2. Machine Learning Methods 3.2.1. XGBoost XGBoost is an ensemble learning method based on the GBDT algorithm proposed by Chen and Guestrin [36]. Compared to the traditional GBDT algorithm, XGBoost adopts the second-order derivative to expedite model convergence, thereby enhancing optimization efficiency. It also incorporates a regularization term to control the model complexity. Moreover, XGBoost can handle samples with missing features by assigning them to the left or right subtrees based on their gain. 3.2.2. LightGBM LightGBM was created by Microsoft in 2017 [37]. It is also based on GBDT and employs a histogram-splitting algorithm that greatly reduces the time complexity. Unlike other decision tree algorithms that operate level-wise, LightGBM uses a leaf-wise algorithm with depth limits, which reduces unnecessary computation. Additionally, LightGBM utilizes the gradient-based one-side sampling (GOSS) algorithm to remove samples with small gradients and prioritize under-trained data, making it particularly effective for handling large datasets. 3.2.3. CatBoost CatBoost is based on oblivious trees, developed by Yandex [38]. Oblivious trees are a special type of decision tree that are characterized by the use of the same features for node division at each level, which can minimize the depth of the tree and memory consumption. By using the ordered boosting method, CatBoost addresses the prediction shift problem inherent in traditional gradient boosting algorithms, thus avoiding target leakage and overfitting. 3.2.4. Stacking Model Current prevailing ensemble learning methods include Bagging, Boosting, and Stacking. Bagging and Boosting are homogeneous ensemble algorithms, and their base estimators are generated by the same algorithm. Stacking is a heterogeneous ensemble approach that observes different aspects of the data through different models. It is essentially a stratified structure where each layer can contain multiple estimators. In the case of two layers, the base estimator in the first layer receives its predictions from the training data and then passes them to the second layer for further study. This stratified structure allows different models to complement each other, ultimately creating a more powerful model. Considering the base models used in this study, the steps of Stacking are shown in Figure 2. Figure 2. Schematic of the Stacking strategy. 3.3. Construction of Downscaling Framework Based on Stacking Strategy ML methods have been widely applied in SM downscaling. Some studies experiment directly with a single model, while others compare the performance of models during the training phase to select the best one. However, relying on a single model may not fully capture the complexity of SM distribution, especially when dealing with multiple influencing factors. This study proposed a Stacking fusion model for SM downscaling with a total of 15 predictors, including NDVI, NDWI, NSDSI, EVI, VV, VH, LAI, LST, Albedo, sand, silt, clay, DEM, LC, and DOY (day of that year). Figure 3 illustrates the framework of downscaling, specifically: Figure 3. Schematic of the proposed downscaling framework. Data preparation: in Section 3.1, we performed quality control, gap-filling, and SG filtering on MODIS data through the GEE platform, simplifying the land cover types and removing the water bodies. Data processing: To standardize the spatial resolution of all predictors to 1 km and 9 km, the MCD12Q1 dataset was aggregated using the mode method and the remaining datasets were aggregated using the mean method. The coordinate systems for all datasets were unified to the UTM projection system with WGS84 datum. Sample generation: The 9 km features and SMAP L4-SM were sampled according to the terrain partition (HB, JH, WX, YJ, WN). Besides remotely sensed features, DOY was added to indicate the generation time of features. Model construction: Taking the WN region as an example, the samples collected in this region were randomly divided into the training set and test set with a ratio of 7:3. XGBoost, LightGBM, and CatBoost were trained using the five-fold cross validation method and fused through the Stacking strategy. The test set was not involved in training and only used for model evaluation. It is worth mentioning that, to test the effectiveness of terrain partitioning, we also trained a Stacking model without partitioning. Model application: The trained Stacking models were then applied to the 1 km resolution features to generate downscaled SM for each region, and finally the downscaled results were merged by date. Validation: The downscaling results were validated using the measured SM from 87 sites, together with precipitation data. Furthermore, we compared the SMCI1.0 and SMAP D-SM products as well as the downscaled SM without partitioning. 3.4. Evaluation Method To fully evaluate the proposed downscaling framework, several metrics were introduced [39]. The correlation coefficient (R) and the root mean square error (RMSE) were used to assess the performance of the trained model, measuring the difference between the predicted and true values. The bias and unbiased RMSE (ubRMSE) were also applied. UbRMSE is commonly used in SM downscaling studies, and the SMAP requirement for ubRMSE is less than 0.040 m3/m3. These four metrics are calculated as follows: 𝑅= 𝐸[( 𝑦 𝑆𝑀𝐴𝑃 −𝐸[ 𝑦 𝑆𝑀𝐴𝑃 ])( 𝑦 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 −𝐸[ 𝑦 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 ])] 𝜎 𝑆𝑀𝐴𝑃 𝜎 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 (5) 𝑅𝑀𝑆𝐸= 𝐸[ ( 𝑦 𝑆𝑀𝐴𝑃 − 𝑦 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 ) 2 − − − − − − − − − − − − − − − − − − √ ] (6) 𝑏𝑖𝑎𝑠=𝐸[ 𝑦 𝑆𝑀𝐴𝑃 ]−𝐸[ 𝑦 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 ] (7) 𝑢𝑏𝑅𝑀𝑆𝐸= 𝑅𝑀𝑆 𝐸 2 − 𝑏𝑖𝑎𝑠 2 − − − − − − − − − − − − √ (8) where E[•] represents the mean operator, 𝑦 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑  and 𝑦 𝑆𝑀𝐴𝑃 refer to the measured SM and SMAP SM; and 𝜎 𝑆𝑀𝐴𝑃 and 𝜎 𝑚𝑒𝑎𝑠𝑢𝑟𝑒𝑑 are the standard deviations of the SMAP SM and measured SM, respectively. 4. Results 4.1. Validation of Downscaling Framework A total of 310,935 samples were obtained by sampling the feature dataset and SMAP L4 dataset at 9 km spatial resolution during the study period. For each region, XGBoost, LightGBM, and CatBoost models were trained using the five-fold cross validation method, and their prediction results were fused by the Stacking strategy. Table 3 displays the number of samples for each region and the performance of the models in the training and test sets. It is evident that all models achieved R values exceeding 0.9 and RMSE values below 0.028 m3/m3 on both training and testing sets, indicating a strong correlation between the model predictions and the actual values. The four models successfully captured the relationship among the features and target at a coarse scale. In addition, they exhibited similar R and RMSE values on their respective training and test sets, which further demonstrated that they were not overfitted. Table 3. Number of samples and performance of XGBoost, LightGBM, CatBoost and Stacking models on training and test sets for each region (HB, JH, WX, YJ, and WN). Bold indicates the best model score. The unit of RMSE is m3/m3. The model’s performance on the test set determines its ability to generalize to unknown data. Figure 4 reveals that the Stacking model outperformed the others, with the highest R and the lowest RMSE in each region. XGBoost had comparable performance to Stacking model and was the most robust of the three base models. CatBoost also showed reliable accuracy, confirming its feasibility for the SM downscaling task. While LightGBM had the fastest training speed, its performance was slightly inferior to the other models. Surprisingly, the WN region had the best simulation results among the five regions (Stacking: R:0.989; RMSE:0.011 m3/m3), followed by the WX region (Stacking: R:0.981; RMSE:0.014 m3/m3), which may be attributed to the quality of the samples. Figure 4. Performance of XGBoost, LightGBM, CatBoost, and Stacking on the test set. 4.2. Overall Performance of Downscaled SM Downscaled SM was validated using the measured SM data collected from April to November 2019. Figure 5 shows the distribution of R and ubRMSE values for 87 sites. Overall, most sites exhibited satisfactory performance. Regarding R values, 52 sites performed well (R > 0.60; 60% of the total), 26 sites showed moderate performance (0.4 < R < 0.6; 30%), and 9 sites performed poorly (R < 0.4; 10%), including one with extremely weak correlation (R < 0). The 9 poorly performing sites were mainly located in the HB and JH regions, characterized by flat terrain and predominantly agricultural, so the weaker correlation may be attributed to the irrigation conditions in these regions. This emphasizes the influence of human activities on SM and the sensitivity of the downscaling approach to such impacts. In addition, the average ubRMSE value for these 87 sites was 0.040 m3/m3, with 45 sites that met the SMAP accuracy requirements for ubRMSE (ubRMSE < 0.040 m3/m3), 38 sites showed acceptable errors (0.040 m3/m3 < ubRMSE < 0.060 m3/m3), and 4 sites underperformed (ubRMSE > 0.060 m3/m3), mainly in the JH and WN regions. Figure 5. Spatial distribution of (a) R and (b) ubRMSE between downscaled SM and measured SM at 87 SM sites from 1 April to 1 November 2019. To further compare the downscaled SM across different regions, bias was introduced to assess the deviation between downscaled SM and measured SM. As shown in Figure 6, the positions of points represent the values of R and ubRMSE, and the colors reflect the bias values. Red indicates a dry bias, while blue signifies a wet bias, and the darker the color, the more severe the deviation. The results revealed that the downscaled SM in the HB and JH regions exhibited significant dry bias. Among the 37 sites in the HB region, 33 sites had bias values less than 0, as well as for 14 out of 16 sites in the JH region. The average bias values for these two regions were −0.050 m3/m3 and −0.034 m3/m3. Conversely, the WX, YJ, and WN regions displayed a clear wet bias, especially in the WN region, with average bias values of 0.029 m3/m3, 0.026 m3/m3, and 0.090 m3/m3, respectively. The fundamental reason for deviation was that the original SMAP products had certain uncertainties due to the coarse resolution as well as the effects of vegetation and surface roughness, which inevitably affected the performance of the downscaled SM. Moreover, the deviation was related to the methods of obtaining SM data at different scales. The measured SM was collected based on ground observations, representing specific SM values at 10 cm depth, while the downscaled SM represented approximate average SM values at 5 cm depth within 1 km. Figure 6. The relationships between measured SM and downscaled SM. (a) HB, (b) JH, (c) WX, (d) YJ, and (e) WN. The color of the points represents the bias value. n represents the number of sites, and sites with a correlation coefficient less than 0 are excluded from the figure. We compared all SM products with measured SM and plotted their R, bias, RMSE, and ubRMSE values. As shown in Figure 7, the downscaled SM generally had higher correlation coefficients, with a mean R value of 0.613 and a median R value of 0.659. SMAP L4-SM is the original coarse-resolution product, which had comparable accuracy with the downscaled SM (mean R: 0.605; median R: 0.648). Yet, the downscaled SM showed a significant reduction in R outliers. The downscaled SM(WP) is a downscaled version of SM obtained without partition modeling. It also showed reliable accuracy, with a mean R value of 0.551 and a median R value of 0.610. Compared with SMAP L4-SM, both downscaled SM and downscaled SM(WP) displayed a narrower range of bias values and were closer to 0. This may be explained by the fact that the downscaling process introduced more details, making the results closer to the measured SM. Although the RMSE values of the downscaled SM were slightly higher than downscaled SM(WP), its ubRMSE values were generally lower and exhibited less variability, suggesting higher overall accuracy. This demonstrated the feasibility of the Stacking model in SM downscaling field and proved the effectiveness of the terrain-based partitioning modeling strategy. The SMAP D-SM showed the most significant variation of all the metrics, implying the instability of its performance. This product consists of two bands representing SM values at 6 AM and 6 PM. Given the high number of missing values in a single band, the practice of using the 6 PM values to fill in the 6 AM missing values may have introduced additional uncertainties, leading to inconsistent overall performance. Furthermore, the algorithm of the product itself also has an impact. The SMCI1.0 product presented the lowest R level and the highest wet bias (mean bias: 0.089 m3/m3; median bias: 0.076 m3/m3), probably related to the data and method used by the authors. In summary, the Stacking model successfully improved the accuracy of SM, especially under the terrain partitioning modeling strategy. Figure 7. Comparison of all SM products with measured SM. SMAP L4-SM denotes the original 9 km SMAP product. SMCI1.0 refers to the 1 km SM product of Shangguan et al. SMAP D-SM is the 1 km SM product released by SMAP in March 2023. Downscaled SM is the 1 km downscaling results of this study. Downscaled SM(WP) indicates the 1 km downscaling results without partition modeling. 4.3. Temporal Dynamics of Downscaled SM To verify whether downscaled SM can capture the temporal dynamics of SM and respond to rainfall events, we randomly selected 11 sites and plotted a series of charts. In Figure 8, the first column shows the analysis results of all SM products (SMCI1.0, SMAP D-SM, SMAP L4-SM, downscaled SM, downscaled SM (WP)) along with measured SM, and precipitation data. The second column keeps only SMAP L4-SM, downscaled SM, and measured SM, highlighting the R, bias, and ubRMSE metrics before and after downscaling. We identified these sites using CODE-Region-LC numbers, where CODE stands for site code, Region for location, and LC for land cover type. The findings suggested that both downscaled SM and downscaled SM(WP) had strong temporally consistent behavior with SMAP L4-SM and captured the dynamic changes of SM. This observation was consistent for all sites. Surprisingly, downscaled SM eliminated the systematic deviation of SMAP to a certain extent, making the results closer to the measured SM. For instance, SMAP L4 underestimated the surface SM at site 50,637,471, resulting in a strong dry bias (bias = 0.094 m3/m3), while downscaled SM minimized it to 0.010 m3/m3. Similar dry bias corrections were found at sites 50,435,400 and 50,901,400. Overestimation can also be mitigated by downscaled SM, as exemplified by sites 62,905,301 and 70,140,600, where the bias was adjusted from 0.068 m3/m3 and 0.093 m3/m3 to 0.017 m3/m3 and −0.025 m3/m3, respectively. Figure 8. Time series comparisons of SMCI1.0, SMAP D-SM, SMAP L4-SM, downscaled SM, downscaled SM (WP), measured SM, and precipitation data at 11 selected SM sites. Note: 2019-10-01 is not displayed because only one site had valid measured SM data on that day. Although in some cases, the downscaled SM still had a large bias, such as the wet bias of 0.071 m3/m3 at site 62,909,502; there was already a noticeable improvement compared to the original SMAP L4-SM which had a wet bias of 0.138 m3/m3. In contrast, the bias correction ability of downscaled SM (WP) was relatively unstable. Some sites improved (50,801,100, 62,921,000), while others actually worsened (50,637,471, 62,802,800), which reaffirmed the advancement of the partitioning strategy. Moreover, Figure 8 illustrates that almost every rainfall event corresponded with an increase in SM, and both SMAP L4-SM and downscaled SM responded positively. The blue boxes in Figure 8 highlight significant increases in SM during rainfall events, and the yellow boxes indicate a gradual return of SM after rainfall. Such phenomena have existed at any time period. SMCI1.0 tended to overestimate at most sites, and SMAP D-SM fluctuated wildly, with only a few valid values from mid-June to August. This is consistent with the findings presented in Figure 7. 4.4. Spatial Distribution of Downscaled SM To visualize the spatial heterogeneity of the downscaled SM, this section presents average distribution maps of SMAP L4-SM, downscaled SM, precipitation, LST during the study period, as well as DEM and clay. As can be seen from Figure 9, the downscaled SM not only retained the spatial pattern of the original SMAP L4-SM, but also provided a higher resolution. The SM pattern in Anhui Province presented a clear north–south variation, being lower in the north and higher in the south. Such difference is a consequence of combined climatic conditions, land cover, and topography [10]. The southern regions are located in the humid zone and enjoy abundant precipitation under the influence of monsoon. They are predominantly forested, which reduces water evaporation and runoff, thus increasing SM retention. Meanwhile, the northern areas experience a semi-humid climate characterized by limited precipitation. Coupled with extensive cultivation, the soil in this region is loose and has difficulty retaining water [40]. Figure 9. Mean distribution maps from April to November 2019 for SMAP L4-SM, downscaled SM, precipitation, LST, and distribution maps for DEM and clay. Note that water bodies are not excluded from the plots. We additionally conducted a detailed examination of three regions, labeled A, B, and C, which display unique topographic and climatic features. Region A is characterized by low elevation, limited precipitation, and high temperature; region C is marked by high elevation, abundant precipitation, and low temperature; and region B has a medium elevation between the two, with mild temperature and precipitation. The local maps show that downscaled SM was sensitive to changes in precipitation and LST, indicating its strong spatial heterogeneity. And the distribution of downscaled SM in the three regions demonstrated characteristics consistent with topography and climate: region A had generally low SM values, suggesting a drier environment; region C tended to have higher SM values, indicating ample water resources; and region B had intermediate SM values and did not show significant dryness or wetness. It is noteworthy that the downscaled SM showed high spatial correlation with DEM and clay, highlighting their dominant roles in the downscaling models, while other features modulate the local changes and heterogeneity of SM. This finding will be further verified in the subsequent section. 5. Discussion 5.1. Analysis of Input Predictors We developed a SM downscaling framework based on the Stacking strategy using 15 predictors: NDVI, NDWI, NSDSI, EVI, VV, VH, LAI, LST, Albedo, sand, silt, clay, DEM, LC, and DOY, which successfully generated SM at 1 km resolution on a daily scale. The relative importance of the predictors and their effects on the model’s output were also investigated. The feature importance provided by the tree models can reveal some of the black-box nature of the model and identify the influential features, but they do not indicate the exact relationship between the features and target, such as positive or negative correlation. SHAP [41] values can measure the magnitude and direction of each feature’s influence. They treat each prediction as a collaborative result of all features and assign a SHAP value to each feature based on its contribution to the prediction. We used SHAP values to analyze how each feature affects the prediction result in this study. To approximate the SHAP values of the Stacking model, we combined the SHAP values of the XGBoost, LightGBM, and CatBoost models in each region on the training set. Feature importance was obtained by taking the mean of absolute SHAP values for each feature. Figure 10 displays the SHAP values of the features for each region, with the most influential features near the top of the y-axis. It is evident that DOY plays the most crucial role in downscaling models for all regions. This suggests that it is advisable to introduce time as a feature since it can capture the seasonal variation of SM. Moreover, the time feature can help the model identify anomalous data caused by noise like cloud cover or signal interference and adjust the predicted values promptly. Shangguan et al. [42] also found the importance of the DOY in their study. Figure 10. SHAP values and feature importance of Stacking models in different regions: (a) HB, (b) JH, (c) WX, (d) YJ, and (e) WN. LC_1.0, LC_2.0, LC_3.0, and LC_4.0 are new features generated by the one-hot encoding of LC features. (f) Feature importance plot obtained by averaging the absolute values of SHAP values; note that the new features derived from one-hot encoding of LC have been summed up as LC. Clay is the second most influential feature, which along with sand and silt, determines the physical properties of the soil, and in turn affects the storage and movement of SM [43]. Clay has the finest particles, and soils with more clay content generally have lower infiltration and permeability rates but higher water-holding capacity. Figure 10d shows a positive correlation between clay and SM, meaning that higher clay content leads to higher SM. Conversely, sand has the coarsest particles, and soils with more sand content have better permeability and drainage properties but lower water-holding capacity. Figure 10c demonstrates that sand is negatively correlated with SM, implying that higher sand content results in lower SM. Silt has a particle size between clay and sand, which can retain some water making the soil moist. DEM is the third significant feature, supported by previous studies demonstrating that topography and soil property are crucial factors influencing SM dynamics [14,21]. In HB, JH, and YJ regions, DEM was negatively correlated with SM, which is consistent with the results of Fu et al. [44]. These regions have lower elevations, typically below 100 m, and mainly consist of cropland. The negative correlation may be due to the flat topography, which allows moisture to accumulate. Unlike other regions, WX and WN have higher elevations and are predominantly forested, where a positive trend in the correlation between DEM and SM is observed. This could be explained by the role of trees in improving soil water retention capacity [45]. Generally, higher elevations have more forest cover, while lower elevations are dominated by grasslands or croplands. Forested land has more canopy and leaves, which shade solar radiation and reduce heat from the soil surface, thereby increasing SM content. On the other hand, temperature variations caused by elevation change are also a significant factor; higher elevations usually have lower temperatures, which reduces the evaporation rate and favors SM retention. We plotted the co-interaction of DEM and LST on SM in the JH and WX regions (Figure 11). The results show that DEM was more variable in the WX region, and there was a noticeable interaction between LST and DEM. In areas with higher DEM, LST tended to be lower and SHAP values were positive, indicating a positive effect on SM. On the contrary, the JH region had a small range of DEM variation, and the interaction between LST and DEM was less pronounced. These findings suggest that the impact of DEM on SM is complex, and it depends not only on the variation of DEM itself but also on the interaction effects of DEM with other factors. This is exactly the purpose of our downscaling strategy based on terrain partitioning, which simplifies the complex influence of terrain and improves the stability and consistency of downscaling models. Figure 11. Co-interaction of LST and DEM on SM in the JH and WX regions. (a) JH, (b) WX. LST controls the surface thermal changes and is the most significant dynamic variable besides DOY. Many studies have confirmed its importance [13,46]. As shown in Figure 10, the red LST point is on the left side of the y-axis, which means the increase of LST will bring negative feedback to the SM. This finding is further supported by Figure 11, as the SHAP value is less than 0 when the LST exceeds about 25 °C, indicating a negative effect on SM at this point. Albedo is also of high importance as it represents the proportion of solar radiation reflected by the Earth’s surface. Studies have shown a typical exponential relationship between Albedo and SM, and the surface Albedo will decrease with the increase of SM [47]. This is due to the fact that wet soils are darker than dry soils and darker soils have lower albedo values. The negative correlation is more significant in the YJ, WX, and WN regions. VV and VH have a certain penetration ability and can directly detect the surface SM. Figure 10f shows that VV is more significant than VH, which agrees with the findings of Bai [25]. It is noteworthy that the influence of vegetation on the backscattering coefficient under the VV mode is less than that of VH. This is because under VH polarization, the radar microwave is vertically transmitted and horizontally received, which is more susceptible to vegetation, resulting in more vegetation information in the backscatter. Whereas VV polarization is vertically transmitted and vertically received, and so this mode penetrates the vegetation better and contains more soil information in the backscatter. Among the four spectral indices (NDVI, EVI, NDWI, and NSDSI), NSDSI has the highest importance, followed by NDWI and EVI, and NDVI is the least. NSDSI is an index calculated by the reflectance of the swir bands, which is sensitive to the changes of SM [48]. NDVI has been proven essential in previous SM downscaling studies, but it has little effect in this study. This is not an isolated case; Yang et al. [49] also found that NDVI had a low score in their study. The role of vegetation was significant in some studies [6,50], but others found that vegetation played a limited role at the 1 km scale [51]. This may be caused by the nonlinear and threshold effects of vegetation on SM, and the relationship between NDVI and SM may be positive, negative, or irrelevant for different vegetation cover. In terms of this study, these indices including LAI played a minor role in the downscaling models, while clay, DEM, and LST played a major role. 5.2. Uncertainty of This Study Despite the encouraging results of our downscaling study, as with most studies, there are some unavoidable uncertainties. The first is the quality of the remote sensing data sources, including both the predictors and target. During the data preparation step, we performed interpolation and filtering operations on the quality-controlled feature datasets to obtain more reliable continuous data. In fact, there were still missing values and outliers, especially in the LST data. Missing values reduced the number of valid samples, while outliers interfered with the judgement of the downscaling models to make inaccurate predictions. On the other hand, the accuracy of downscaling results is highly dependent on the coarse-resolution SM products. Since the model was constructed based on the relationship between the aggregated high-resolution predictors and coarse-resolution SM products, the uncertainty of the original SM products directly affected the accuracy of the downscaling results. As can be seen from Figure 7 and Figure 8, SMAP L4 products tended to underestimate at lower SM levels (HB, JH) and overestimate at higher SM levels (WX, YJ, and WN). These uncertainties were propagated and amplified during the downscaling process, leading to biases in the downscaled SM. Future research should aim to enhance the reliability of data sources and minimize the losses associated with data quality. The second uncertainty relates to scale. To align the resolution of the predictors with SMAP L4, the numerical features were aggregated using the average method. However, this process led to a loss of extreme values. For instance, the range of DEM changed from 1–1683 m to 4–1212 m. These extreme values reappeared when the model was applied, and the unlearned data may affect the accuracy of the model’s output. The third uncertainty occurs in the validation phase since the measured SM and the remotely sensed SM have different depths and breadths. On the one hand, the measured SM is acquired manually by the drying method, which always represents the SM condition at a depth of 10 cm, while the remotely sensed SM is obtained by inverting the microwave signal. SMAP L4 claims that the depth of the surface SM is the top 5 cm of the soil, but the actual penetration depth of the microwave signal is not fixed and varies with the soil water content [52]. This means that the remotely sensed SM may contain SM information from different depths, not just from the top 5 cm. On the other hand, the measured SM only reflects the SM condition in a small area, while the downscaled SM represents the average SM condition within 1 km. In summary, the inconsistency of depth and breadth will affect the representativeness of the measured SM collected at a specific depth, thus reducing the comparability of the results. 6. Conclusions This study proposed a downscaling framework for SMAP soil moisture based on a Stacking strategy that considers the geomorphic units. The spatial resolution of the SMAP L4-SM product was successfully improved from the original 9 km to 1 km by using multi-source datasets including: MODIS, Sentinel-1, topography, and soil property. The main findings are summarized as follows. The framework incorporated three ML models, XGBoost, LightGBM, and CatBoost. Comparison revealed that the Stacking model achieved the highest accuracy in all regions, followed by XGBoost, CatBoost, and LightGBM. Validation with measured SM showed that 60% of the sites were highly correlated with downscaled SM (R > 0.6), with an average ubRMSE of 0.040 m3/m3, which satisfied the accuracy requirements of the SMAP products. Moreover, the downscaling results outperformed the available 1 km resolution SM products (SMCI1.0, SMAP D-SM) and method without partitioning (downscaled SM (WP)). Both downscaled SM and downscaled SM (WP) exhibited temporal consistency with SMAP L4-SM and responded positively to rainfall events. They also mitigated the systematic bias of the SMAP L4 product, but downscaled SM (WP) performed inconsistently and sometimes even aggravated the bias. The spatial pattern analysis indicated that the downscaled SM preserved the overall trend of SMAP L4-SM while enriching the details. The downscaled SM was higher in the humid regions and lower in the semi-humid regions, which agreed with the actual situation. Among the 15 predictors, DOY, clay, and DEM were the most important and determined the overall distribution of SM. It is worth noting that the relationship between DEM and SM was complex; they exhibited a negative correlation in the plains and a positive correlation in the mountains. LST and Albedo reflected the dynamics of surface energy and showed a negative correlation with SM in all regions. VV polarization was less affected by vegetation and thus captured SM changes more effectively than VH. NSDSI was found to be more sensitive to SM than the other spectral indices, and together they regulated local variations and spatial heterogeneity of SM. In conclusion, this study provides evidence supporting the applicability of the Stacking model in SM downscaling studies. Furthermore, it validates the effectiveness of the terrain-based partitioning strategy. Future studies can further explore the effects of long series data in practical applications, such as assessing the response of SM to climate change and human activities and analyzing the variability of downscaling results in different seasons. Author Contributions Conceptualization, J.X., J.M. and X.L.; methodology, J.X. and L.Z.; software, J.M. and W.S.; validation, J.X., X.L. and J.M.; formal analysis, J.X., Q.S. and X.S.; investigation, J.X., X.S. and X.L.; resources, X.L., W.S. and J.M.; data curation, J.X. and L.Z.; writing—original draft preparation, J.X.; writing—review and editing, J.X., X.L. and J.M.; visualization, J.X. and L.Z.; supervision, X.L., J.M. and Q.S.; project administration, J.X. and W.S.; funding acquisition, X.L. and W.S. All authors have read and agreed to the published version of the manuscript. Funding This research was funded by the Three Gorges Follow-up Work “Remote Sensing Investigation and Evaluation of Flood Control Safety in the Three Gorges Section” (JZ0161A012023); the Youth Innovation Talents Promotion Plan of the Research Center of Flood and Drought Disaster Reduction of the Ministry of Water Resources; and the Key Research and Development Program of Jiang Xi Province (20212BBG71008). Data Availability Statement The data presented in this study are available upon request from the corresponding author. Acknowledgments The authors would like to thank the National Snow and Ice Data Center for providing the SMAP product, the Harmonized World Soil Database for providing the soil property data, and the Google Earth Engine platform for providing the remotely sensed data, which are available to all users free of charge. We also thank the Anhui Hydrology Bureau for providing the measured soil moisture data. Finally, we sincerely appreciate the suggestions and comments made by the reviewers and the managing editor, which improved this paper. Conflicts of Interest The authors declare no conflicts of interest. References Huntington, T.G. Evidence for intensification of the global water cycle: Review and synthesis. J. Hydrol. 2006, 319, 83–95. [Google Scholar] [CrossRef] Seneviratne, S.I.; Corti, T.; Davin, E.L.; Hirschi, M.; Jaeger, E.B.; Lehner, I.; Orlowsky, B.; Teuling, A.J. Investigating soil moisture-climate interactions in a changing climate: A review. Earth Sci. Rev. 2010, 99, 125–161. [Google Scholar] [CrossRef] Dorigo, W.A.; Wagner, W.; Hohensinn, R.; Hahn, S.; Paulik, C.; Xaver, A.; Gruber, A.; Drusch, M.; Mecklenburg, S.; van Oevelen, P.; et al. The International Soil Moisture Network: A data hosting facility for global in situ soil moisture measurements. Hydrol. Earth Syst. Sci. 2011, 15, 1675–1698. [Google Scholar] [CrossRef] Qin, J.; Yang, K.; Lu, N.; Chen, Y.Y.; Zhao, L.; Han, M.L. Spatial upscaling of in-situ soil moisture measurements based on MODIS-derived apparent thermal inertia. Remote Sens. Environ. 2013, 138, 1–9. [Google Scholar] [CrossRef] Paloscia, S.; Pettinato, S.; Santi, E.; Notarnicola, C.; Pasolli, L.; Reppucci, A. Soil moisture mapping using Sentinel-1 images: Algorithm and preliminary validation. Remote Sens. Environ. 2013, 134, 234–248. [Google Scholar] [CrossRef] Abbaszadeh, P.; Moradkhani, H.; Zhan, X.W. Downscaling SMAP Radiometer Soil Moisture Over the CONUS Using an Ensemble Learning Method. Water Resour. Res. 2019, 55, 324–344. [Google Scholar] [CrossRef] Liu, J.; Chai, L.N.; Lu, Z.; Liu, S.M.; Qu, Y.Q.; Geng, D.Y.; Song, Y.Z.; Guan, Y.B.; Guo, Z.X.; Wang, J.; et al. Evaluation of SMAP, SMOS-IC, FY3B, JAXA, and LPRM Soil Moisture Products over the Qinghai-Tibet Plateau and Its Surrounding Areas. Remote Sens. 2019, 11, 792. [Google Scholar] [CrossRef] Entekhabi, D.; Njoku, E.G.; O’Neill, P.E.; Kellogg, K.H.; Crow, W.T.; Edelstein, W.N.; Entin, J.K.; Goodman, S.D.; Jackson, T.J.; Johnson, J.; et al. The Soil Moisture Active Passive (SMAP) Mission. Proc. IEEE 2010, 98, 704–716. [Google Scholar] [CrossRef] Zhao, W.; Wen, F.; Cai, J. Methods, progresses and challenges of passive microwave soil moisture spatial downscaling. Natl. Remote Sens. Bull. 2022, 26, 1699–1722. [Google Scholar] [CrossRef] Peng, J.; Loew, A.; Merlin, O.; Verhoest, N.E.C. A review of spatial downscaling of satellite remotely sensed soil moisture. Rev. Geophys. 2017, 55, 341–366. [Google Scholar] [CrossRef] Sabaghy, S.; Walker, J.P.; Renzullo, L.J.; Jackson, T.J. Spatially enhanced passive microwave derived soil moisture: Capabilities and opportunities. Remote Sens. Environ. 2018, 209, 551–580. [Google Scholar] [CrossRef] Srivastava, P.K.; Han, D.W.; Ramirez, M.R.; Islam, T. Machine Learning Techniques for Downscaling SMOS Satellite Soil Moisture Using MODIS Land Surface Temperature for Hydrological Application. Water Resour. Manag. 2013, 27, 3127–3144. [Google Scholar] [CrossRef] Wei, Z.S.; Meng, Y.Z.; Zhang, W.; Peng, J.; Meng, L.K. Downscaling SMAP soil moisture estimation with gradient boosting decision tree regression over the Tibetan Plateau. Remote Sens. Environ. 2019, 225, 30–44. [Google Scholar] [CrossRef] Karthikeyan, L.; Mishra, A.K. Multi-layer high-resolution soil moisture estimation using machine learning over the United States. Remote Sens. Environ. 2021, 266, 19. [Google Scholar] [CrossRef] Rao, P.Z.; Wang, Y.C.; Wang, F.; Liu, Y.; Wang, X.Y.; Wang, Z. Daily soil moisture mapping at 1 km resolution based on SMAP data for desertification areas in northern China. Earth Syst. Sci. Data 2022, 14, 3053–3073. [Google Scholar] [CrossRef] Yan, R.; Bai, J.J. A New Approach for Soil Moisture Downscaling in the Presence of Seasonal Difference. Remote Sens. 2020, 12, 2818. [Google Scholar] [CrossRef] Gao, B.H.; He, Y.; Chen, X.Y.; Zheng, X.Y.; Zhang, L.F.; Zhang, Q.; Lu, J.G. Landslide Risk Evaluation in Shenzhen Based on Stacking Ensemble Learning and InSAR. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens. 2023, 16, 1–18. [Google Scholar] [CrossRef] Zhang, Y.Z.; Ma, J.; Liang, S.L.; Li, X.S.; Liu, J.D. A stacking ensemble algorithm for improving the biases of forest aboveground biomass estimations from multiple remotely sensed datasets. GISci. Remote Sens. 2022, 59, 234–249. [Google Scholar] [CrossRef] Zhen, M.; Yi, M.; Luo, T.; Wang, F.; Yang, K.; Ma, X.; Cui, S.; Li, X. Application of a Fusion Model Based on Machine Learning in Visibility Prediction. Remote Sens. 2023, 15, 1450. [Google Scholar] [CrossRef] Bentejac, C.; Csorgo, A.; Martinez-Munoz, G. A comparative analysis of gradient boosting algorithms. Artif. Intell. Rev. 2021, 54, 1937–1967. [Google Scholar] [CrossRef] Huang, S.Z.; Zhang, X.; Wang, C.; Chen, N.C. Two-step fusion method for generating 1 km seamless multi-layer soil moisture with high accuracy in the Qinghai-Tibet plateau. ISPRS J. Photogramm. Remote Sens. 2023, 197, 346–363. [Google Scholar] [CrossRef] Huang, G.M.; Wu, L.F.; Ma, X.; Zhang, W.Q.; Fan, J.L.; Yu, X.; Zeng, W.Z.; Zhou, H.M. Evaluation of CatBoost method for prediction of reference evapotranspiration in humid regions. J. Hydrol. 2019, 574, 1029–1041. [Google Scholar] [CrossRef] Li, H.M.; Zhang, G.L.; Zhong, Q.C.; Xing, L.Q.; Du, H.Q. Prediction of Urban Forest Aboveground Carbon Using Machine Learning Based on Landsat 8 and Sentinel-2: A Case Study of Shanghai, China. Remote Sens. 2023, 15, 284. [Google Scholar] [CrossRef] Carlson, T. An overview of the “triangle method” for estimating surface evapotranspiration and soil moisture from satellite imagery. Sensors 2007, 7, 1612–1629. [Google Scholar] [CrossRef] Bai, J.Y.; Cui, Q.; Zhang, W.; Meng, L.K. An Approach for Downscaling SMAP Soil Moisture by Combining Sentinel-1 SAR and MODIS Data. Remote Sens. 2019, 11, 2736. [Google Scholar] [CrossRef] Zhang, Y.F.; Liang, S.L.; Zhu, Z.L.; Ma, H.; He, T. Soil moisture content retrieval from Landsat 8 data using ensemble learning. ISPRS J. Photogramm. Remote Sens. 2022, 185, 32–47. [Google Scholar] Wang, C.H.; Lin, Q.G.; Wang, L.B.; Jiang, T.; Su, B.D.; Wang, Y.J.; Mondal, S.K.; Huang, J.L.; Wang, Y. The influences of the spatial extent selection for non-landslide samples on statistical-based landslide susceptibility modelling: A case study of Anhui Province in China. Nat. Hazard. 2022, 112, 1967–1988. [Google Scholar] [CrossRef] Kedzior, M.; Zawadzki, J. Comparative study of soil moisture estimations from SMOS satellite mission, GLDAS database, and cosmic-ray neutrons measurements at COSMOS station in Eastern Poland. Geoderma. 2016, 283, 21–31. [Google Scholar] [CrossRef] Reichle, R.; De Lannoy, G.; Koster, R.D.; Crow, W.T.; Kimball, J.S.; Liu, Q.; Bechtold, M. SMAP L4 Global 3-hourly 9 km EASE-Grid Surface and Root Zone Soil Moisture Geophysical Data, 7th ed.; Distributed by NASA National Snow and Ice Data Center Distributed Active Archive Center, 2022. [Google Scholar] [CrossRef] Wang, Z.S.; Schaaf, C.B.; Sun, Q.S.; Shuai, Y.M.; Roman, M.O. Capturing rapid land surface dynamics with Collection V006 MODIS BRDF/NBAR/Albedo (MCD43) products. Remote Sens. Environ. 2018, 207, 50–64. [Google Scholar] [CrossRef] Fischer, G.; Nachtergaele, F.; Prieler, S.; van Velthuizen, H.T.; Verelst, L.; Wiberg, D. Global Agro-ecological Zones Assessment for Agriculture (GAEZ 2008); IIASA: Laxenburg, Austria; FAO: Rome, Italy, 2008. [Google Scholar] Chen, L.; Zhang, K.L.; Zhang, Z.D.; Cao, Z.H.; Ke, Q.H. Response of soil water movement to rainfall under different land uses in karst regions. Environ. Earth Sci. 2023, 82, 17. [Google Scholar] [CrossRef] Shangguan, W.; Li, Q.; Shi, G. A 1 km Daily Soil Moisture Dataset over China Based on Situ Measurement (2000–2020); National Tibetan Plateau Data Center, 2022. [Google Scholar] Lakshmi, V.; Fang, B. SMAP-Derived 1-km Downscaled Surface Soil Moisture Product, Version 1; Distributed by NASA National Snow and Ice Data Center Distributed Active Archive Center, 2023. [Google Scholar] [CrossRef] Chen, J.; Jonsson, P.; Tamura, M.; Gu, Z.; Matsushita, B.; Eklundh, L. A simple method for reconstructing a high-quality NDVI time-series data set based on the Savitzky-Golay filter. Remote Sens. Environ. 2004, 91, 332–344. [Google Scholar] [CrossRef] Chen, T.; Guestrin, C. Xgboost: A scalable tree boosting system. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, San Francisco, CA, USA, 13–17 August 2016; pp. 785–794. [Google Scholar] Ke, G.; Meng, Q.; Finley, T.; Wang, T.; Chen, W.; Ma, W.; Ye, Q.; Liu, T.Y. Lightgbm: A highly efficient gradient boosting decision tree. In Proceedings of the 31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA, 8–9 December 2017; p. 30. [Google Scholar] Prokhorenkova, L.; Gusev, G.; Vorobev, A.; Dorogush, A.V.; Gulin, A. CatBoost: Unbiased boosting with categorical features. Adv. Neural Inf. Process. Syst. 2018, 6637–6647. [Google Scholar] Xu, M.Y.; Yao, N.; Yang, H.X.; Xu, J.; Hu, A.N.; de Goncalves, L.G.G.; Liu, G. Downscaling SMAP soil moisture using a wide & deep learning method over the Continental United States. J. Hydrol. 2022, 609, 22. [Google Scholar] Liu, X.W.; Zhang, X.Y.; Chen, S.Y.; Sun, H.Y.; Shao, L.W. Subsoil compaction and irrigation regimes affect the root-shoot relation and grain yield of winter wheat. Agric. Water Manag. 2015, 154, 59–67. [Google Scholar] [CrossRef] Lundberg, S.M.; Lee, S.I. A Unified Approach to Interpreting Model Predictions. Adv. Neural Inf. Process. Syst. 2017, 30, 1–10. [Google Scholar] Shangguan, Y.L.; Min, X.X.; Shi, Z. Inter-comparison and integration of different soil moisture downscaling methods over the Qinghai-Tibet Plateau. J. Hydrol. 2023, 617, 17. [Google Scholar] [CrossRef] Xu, X.L.; Ma, K.M.; Fu, B.J.; Song, C.J.; Liu, W. Relationships between vegetation and soil and topography in a dry warm river valley, SW China. Catena 2008, 75, 138–145. [Google Scholar] [CrossRef] Fu, H.; Yuan, G.X.; Ge, D.B.; Li, W.; Zou, D.S.; Huang, Z.R.; Wu, A.P.; Liu, Q.L.; Jeppesen, E. Cascading effects of elevation, soil moisture and soil nutrients on plant traits and ecosystem multi-functioning in Poyang Lake wetland, China. Aquat. Sci. 2020, 82, 10. [Google Scholar] [CrossRef] Chia, R.W.; Yong, L.J.; Jang, J.; Lee, S.-b. Effects of land use change on soil moisture content at different soil depths. J. Geol. Soc. Korea 2022, 58, 117–135. [Google Scholar] [CrossRef] Zhao, W.; Sanchez, N.; Lu, H.; Li, A.N. A spatial downscaling approach for the SMAP passive surface soil moisture product using random forest regression. J. Hydrol. 2018, 563, 1009–1024. [Google Scholar] [CrossRef] Guan, X.D.; Huang, J.P.; Guo, N.; Bi, J.R.; Wang, G.Y. Variability of Soil Moisture and Its Relationship with Surface Albedo and Soil Thermal Parameters over the Loess Plateau. Adv. Atmos. Sci. 2009, 26, 692–700. [Google Scholar] [CrossRef] Sadeghi, M.; Jones, S.B.; Philpot, W.D. A linear physically-based model for remote sensing of soil moisture using short wave infrared bands. Remote Sens. Environ. 2015, 164, 66–76. [Google Scholar] [CrossRef] Yang, Z.J.; He, Q.S.; Miao, S.Q.; Wei, F.; Yu, M.X. Surface Soil Moisture Retrieval of China Using Multi-Source Data and Ensemble Learning. Remote Sens. 2023, 15, 2786. [Google Scholar] [CrossRef] Hu, F.M.; Wei, Z.S.; Zhang, W.; Dorjee, D.; Meng, L.K. A spatial downscaling method for SMAP soil moisture through visible and shortwave-infrared remote sensing data. J. Hydrol. 2020, 590, 11. [Google Scholar] [CrossRef] Joshi, C.; Mohanty, B.P. Physical controls of near-surface soil moisture across varying spatial scales in an agricultural landscape during SMEX02. Water Resour. Res. 2010, 46, 21. [Google Scholar] [CrossRef] Piles, M.; Camps, A.; Vall-Llossera, M.; Corbella, I.; Panciera, R.; Rudiger, C.; Kerr, Y.H.; Walker, J. Downscaling SMOS-Derived Soil Moisture Using MODIS Visible/Infrared Data. IEEE Trans. Geosci. Remote Sens. 2011, 49, 3156–3166. [Google Scholar] [CrossRef]   Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style Xu, J.; Su, Q.; Li, X.; Ma, J.; Song, W.; Zhang, L.; Su, X. A Spatial Downscaling Framework for SMAP Soil Moisture Based on Stacking Strategy. Remote Sens. 2024, 16, 200. https://doi.org/10.3390/rs16010200 AMA Style Xu J, Su Q, Li X, Ma J, Song W, Zhang L, Su X. A Spatial Downscaling Framework for SMAP Soil Moisture Based on Stacking Strategy. Remote Sensing. 2024; 16(1):200. https://doi.org/10.3390/rs16010200 Chicago/Turabian Style Xu, Jiaxin, Qiaomei Su, Xiaotao Li, Jianwei Ma, Wenlong Song, Lei Zhang, and Xiaoye Su. 2024. \"A Spatial Downscaling Framework for SMAP Soil Moisture Based on Stacking Strategy\" Remote Sensing 16, no. 1: 200. https://doi.org/10.3390/rs16010200 Note that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here. Article Metrics Citations No citations were found for this article, but you may check on Google Scholar Article Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 1000 250 500 750 1250 For more information on the journal statistics, click here. Multiple requests from the same IP address are counted as one view.   Remote Sens., EISSN 2072-4292, Published by MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"

</subsection_point_Point 3>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.

3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
Real-time irrigation management systems heavily rely on the efficient and reliable transmission of data from sensors and weather stations to the cloud for processing and decision-making. However, agricultural environments present unique challenges to wireless communication, including adverse weather conditions, physical obstacles, and the limitations of wireless technologies. These challenges necessitate robust and adaptive solutions to ensure the consistent and timely flow of data, enabling truly autonomous irrigation scheduling.
Environmental factors, such as heavy rain, fog, and strong winds, can significantly disrupt wireless communication by attenuating or even blocking radio signals, leading to data loss and compromised system performance (Ed-daoudi et al., 2023; Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). Dense vegetation, buildings, and uneven terrain create further complications by causing multipath propagation and shadowing effects (Yim et al., 2018; Gautam and Pagay, 2020). The study by Yim et al. (2018) on LoRa networks in a tree farm environment exemplifies these challenges, revealing reduced communication range and data reliability compared to theoretical expectations. This underscores the need for carefully selecting and optimizing communication protocols and network parameters to ensure reliable data transmission in such environments.
The study by Guzinski et al. (2014a) using a modified TSEB model further highlights the importance of high-resolution data in accurately capturing the spatial and temporal dynamics of energy fluxes influenced by environmental factors. This emphasizes the need for advanced data acquisition and processing techniques that can effectively represent the complexities of agricultural settings.
The limitations of traditional wireless communication technologies, such as limited range and network congestion, pose additional challenges for large-scale agricultural operations. Long-distance data transmission can be hindered by range limitations, while network congestion arising from numerous sensors transmitting concurrently can lead to delays and data loss, hindering real-time decision-making (Hameed et al., 2020). Addressing these challenges requires the exploration of advanced networking technologies that can optimize spectrum utilization, mitigate interference, and improve reliability and efficiency.
Cognitive Radio Networks (CRNs) and Dynamic Spectrum Access (DSA) offer promising solutions for optimizing wireless communication in agricultural settings. CRNs empower devices with the ability to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). Research has explored the potential of CRNs in predicting Radio Frequency (RF) power to avoid noisy channels and optimize spectrum utilization (Iliya et al., 2014; Iliya et al., 2014). These studies demonstrate the effectiveness of combining optimization algorithms with artificial neural networks (ANNs) to enhance the accuracy and generalization of RF power prediction, enabling CRNs to make informed decisions about channel selection and avoid interference.
DSA complements CRN technology by dynamically allocating unused spectrum, further enhancing spectrum utilization and reducing congestion (Shi et al., 2023). The numerical model developed by Shi et al. (2023) showcases the potential of CRNs and DSA for optimizing wireless communication in challenging environments.
The integration of CRNs and DSA into the IoT network architecture requires careful consideration of spectrum sensing techniques, network topology, and data security. Research on cooperative spectrum sensing suggests that distributed approaches, where sensor nodes collaborate and share information, can significantly improve the accuracy and efficiency of spectrum sensing, particularly in dynamic environments (Trigka and Dritsas, 2022; Khalid & Yu, 2019). This collaborative approach enables a more comprehensive understanding of the radio environment and facilitates the identification of available frequency bands for data transmission.
The choice of network topology also impacts the performance and scalability of CRN-based irrigation systems. Mesh networks, where sensor nodes are interconnected and relay data for each other, offer enhanced resilience and coverage compared to star topologies where nodes communicate directly with a central gateway (Akyildiz & Vuran, 2010). However, mesh networks can be more complex to manage and may introduce additional routing overhead. The trade-off between network resilience and complexity needs to be carefully evaluated to select the most appropriate topology for a specific agricultural setting.
Data security and privacy are paramount concerns in IoT-based irrigation systems due to the sensitive nature of agricultural data (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential for protecting data integrity and ensuring system trustworthiness. Research on secure spectrum leasing and resource allocation algorithms for CR-WSN-based irrigation systems has demonstrated the potential of these technologies for enhancing security and efficiency (Hassan, 2023; Afghah et al., 2018).
In conclusion, the development of effective and reliable real-time irrigation management systems requires a comprehensive approach that addresses the challenges of data transmission in agricultural environments. The integration of robust and adaptive communication protocols, optimized network architectures, and advanced networking technologies like CRNs and DSA, along with a focus on data security and privacy, can contribute significantly to achieving the goal of autonomous and efficient irrigation scheduling.
4. AUTOMATED DATA PROCESSING IN THE CLOUD
4.1. Data Quality and Preprocessing
Data quality is paramount in automated irrigation systems as it directly influences the effectiveness of decision-making and water use efficiency. Issues like missing values, inconsistencies, and outliers arising from sensor malfunctions, environmental interference, or network problems (Lv et al., 2023) can significantly impact the performance of machine learning models used for irrigation scheduling and management.
Real-time data cleaning techniques are essential for addressing these challenges. Kalman filtering proves particularly effective in handling missing values and correcting erroneous readings by recursively estimating the system's state based on previous measurements and current sensor data, taking into account noise and uncertainty (Kim et al., 2020). Moving average techniques, by averaging consecutive data points, provide a more stable representation of the underlying trend, filtering out short-term fluctuations (Chhetri, 2023). For outlier detection, adaptive thresholding methods offer a dynamic approach, adjusting thresholds based on the statistical properties of the data to effectively identify anomalies and minimize false positives (Bah et al., 2021). These techniques are crucial in maintaining the integrity of real-time data streams and ensuring the accuracy of subsequent analyses.
Adaptive data preprocessing is essential for managing the diversity of data sources and formats commonly found in irrigation systems. Data normalization techniques, such as min-max scaling or z-score normalization, ensure that all features contribute equally to the analysis by transforming data values to a common scale (Pradal et al., 2016). This is crucial for preventing features with larger values from dominating the analysis and ensuring that all features are given equal consideration. Similarly, feature scaling methods, like standardization or normalization, optimize the range of feature values to improve the performance and convergence of machine learning models (Tortorici et al., 2024). By scaling features to a similar range, the influence of outliers is reduced, and the model's ability to learn from the data is enhanced.
Data fusion techniques play a critical role in integrating information from diverse sources, creating a more comprehensive and reliable dataset for irrigation management. Dempster-Shafer theory, a generalization of probability theory, allows for the expression of both uncertainty and the degree of conflict in evidence, making it suitable for fusing uncertain and conflicting data from heterogeneous sources (Sadiq and Rodriguez, 2004). This is particularly relevant in irrigation systems where data from different sensors may provide slightly different or even contradictory information due to sensor variations or environmental factors. Bayesian inference offers another powerful framework for combining information from multiple sources, updating the probability of a hypothesis as new evidence becomes available. By applying these techniques, data from soil moisture sensors, canopy temperature sensors, weather stations, and other sources can be integrated to provide a holistic understanding of crop water requirements and environmental conditions, leading to more informed and accurate irrigation decisions.
The impact of data quality extends beyond model accuracy to the robustness of machine learning models under varying conditions. Robust models should maintain consistent performance even when faced with data inconsistencies or unexpected situations. Techniques like data augmentation and domain adaptation can enhance model robustness by exposing the model to a wider range of data variations during training. Data augmentation involves generating additional training data by applying transformations or introducing noise to existing data, making the model more resilient to noise and variations in the real-world data. Domain adaptation techniques aim to adapt a model trained on one domain (e.g., a specific crop or geographic location) to perform well on another domain with different data characteristics. This is particularly relevant in irrigation management, where models may need to be applied to different crops, soil types, or climatic conditions.
The choice of data cleaning, preprocessing, and fusion techniques should be carefully considered based on the specific characteristics of the irrigation system and the available data. By selecting and implementing appropriate techniques, the accuracy, reliability, and robustness of machine learning models can be significantly improved, leading to more efficient and sustainable irrigation management practices.
4.2. Scalable and Autonomous Deployment using Containerization Strategies
The transition from data collection and transmission to efficient data processing requires a robust infrastructure capable of handling diverse workloads and data volumes. Containerization technologies, specifically Docker and Kubernetes, offer a promising solution for deploying and scaling data processing and machine learning modules within cloud environments like AWS, Azure, and GCP (Vargas-Rojas et al., 2024; Rosendo et al., 2022; Solayman & Qasha, 2023). Docker provides a standardized way to package applications and their dependencies into self-contained units known as containers, ensuring consistent and reproducible execution across different platforms (Rosendo et al., 2022). Kubernetes, acting as a container orchestrator, manages their deployment, scaling, and networking across a cluster of machines (Rosendo et al., 2022). This combination presents several advantages for automated irrigation management systems.
Firstly, containerization facilitates efficient resource utilization and scalability. By encapsulating applications and their dependencies, containers enable the isolation of resources and prevent conflicts between different modules (Vargas-Rojas et al., 2024; Solayman & Qasha, 2023). This isolation allows for the efficient allocation of resources, such as CPU, memory, and storage, to each container based on its specific needs. Kubernetes further enhances scalability by allowing for the automatic scaling of containers based on real-time demand, ensuring the system can adapt to varying workloads and data volumes, preventing bottlenecks, and ensuring responsiveness to changing conditions (Karamolegkos et al., 2023).
Secondly, containerization promotes portability and reproducibility. By packaging applications and their dependencies into a single unit, containers make it easy to move and deploy them across different cloud environments without the need for environment-specific configurations (Rosendo et al., 2022; Solayman & Qasha, 2023). This portability simplifies the development and deployment process, reducing the time and effort required to set up and manage the system. Additionally, containers ensure reproducibility by providing a consistent execution environment, regardless of the underlying infrastructure. This eliminates variability and ensures that the system will behave consistently across different deployments (Zhou et al., 2023).
Optimizing container orchestration and resource allocation is crucial to minimizing latency and maximizing throughput in real-time data processing pipelines. Techniques like auto-scaling and dynamic resource allocation play a critical role in this context (Hethcoat et al., 2024; Werner and Tai, 2023; Kumar et al., 2024). Auto-scaling automatically adjusts the number of container instances based on real-time demand, ensuring that sufficient resources are available to handle peak workloads while avoiding over-provisioning during periods of low demand (Hethcoat et al., 2024; Kumar et al., 2024). Dynamic resource allocation enables the fine-grained adjustment of resources allocated to each container based on its specific needs and the current workload (Werner and Tai, 2023). This ensures efficient resource allocation and provides each container with the necessary resources to perform its tasks effectively.
Performance monitoring tools, such as Kubernetes Metrics Server and Prometheus, are essential for gaining insights into the performance of containers and the overall system (Hethcoat et al., 2024; Kuity & Peddoju, 2023). These tools provide valuable data on key performance indicators, such as CPU and memory usage, network traffic, and application-specific metrics. By monitoring this data, administrators can identify bottlenecks, optimize resource allocation strategies, and continuously improve system performance (Hethcoat et al., 2024). This data-driven approach ensures that automated irrigation management systems can operate efficiently and reliably.
By integrating containerization technologies with optimization techniques and performance monitoring, automated irrigation management systems achieve the scalability, autonomy, and efficiency required for effective real-time data processing and decision-making. This approach facilitates a seamless and responsive system that can adapt to changing conditions and contribute to the overall goal of optimizing water resource management and increasing agricultural productivity.

4.3. Deploying ML Models for Data Processing
Transitioning from data collection, preprocessing, and transmission, the deployment of machine learning (ML) models marks a pivotal stage in the automated irrigation management pipeline. This stage entails utilizing cloud platforms to facilitate real-time data processing and inference, enabling data-driven decision-making for optimal irrigation management and ultimately contributing to fully autonomous, scalable irrigation management.
Several architectures and frameworks exist for deploying ML models on cloud platforms, each offering unique advantages and catering to different requirements. TensorFlow Serving, for instance, provides a high-performance system specifically designed for serving TensorFlow models (Abadi et al., 2016). This framework enables efficient and scalable inference, making it suitable for real-time applications where low latency and high throughput are crucial. For instance, in a large-scale irrigation system with numerous sensors generating data continuously, TensorFlow Serving can efficiently handle the high volume of inference requests and provide timely predictions for irrigation scheduling. Similarly, Apache MXNet Model Server offers a flexible and efficient solution for deploying models trained with MXNet, supporting a wide range of deep learning models and inference backends (MXNet Developers, 2015). This versatility makes it suitable for complex irrigation systems that may utilize different types of ML models for various tasks, such as predicting crop water requirements, detecting plant stress, or forecasting weather conditions. ONNX Runtime, on the other hand, provides a cross-platform inference engine compatible with various ML frameworks, including PyTorch, TensorFlow, and MXNet (Microsoft, 2017). This versatility enables the deployment of models in diverse environments, facilitating interoperability and reducing the need for model conversion. For example, an irrigation system that uses models trained in different frameworks can utilize ONNX Runtime to deploy them on a single platform without the need for time-consuming and error-prone model conversion processes.
Choosing the appropriate architecture or framework depends on several factors, including the specific ML framework used for model training, the desired level of performance and scalability, and the need for cross-platform compatibility. For instance, if the primary concern is low latency and high throughput for real-time inference, TensorFlow Serving might be the optimal choice for TensorFlow models. However, if flexibility and support for various deep learning models are required, Apache MXNet Model Server could be more suitable. In cases where cross-platform compatibility is essential, ONNX Runtime offers a versatile solution.
Once the ML model is deployed, optimizing its performance and resource utilization becomes crucial for ensuring the efficiency of integrated end-to-end automated irrigation systems. Model compression techniques, such as pruning and quantization, offer effective methods for reducing the size and computational requirements of ML models without compromising accuracy (Premkumar & Sigappi, 2022). Pruning involves eliminating unnecessary connections or neurons from the model, effectively streamlining its structure and reducing computational complexity. This can be particularly beneficial for deep learning models, which often have a large number of parameters and can be prone to overfitting. By removing redundant or less important connections, pruning can improve modelgeneralizability and reduce inference time. Quantization, on the other hand, involves reducing the precision of model parameters, typically from 32-bit floating-point numbers to lower-precision formats such as 8-bit integers. This reduction in precision leads to smaller model sizes and faster inference speeds, making it particularly beneficial for resource-constrained environments or real-time applications. For instance, in edge computing scenarios where ML models are deployed on devices with limited computational resources, quantization can enable efficient inference without sacrificing accuracy.
Furthermore, hardware acceleration through the utilization of GPUs or TPUs can significantly enhance model performance by leveraging specialized hardware designed for parallel processing (Premkumar & Sigappi, 2022). GPUs, with their massive parallelism and high memory bandwidth, excel at accelerating matrix operations and convolutions, which are fundamental computations in many deep learning models. This acceleration can significantly reduce inference time and enable real-time processing of sensor data for timely irrigation decisions. TPUs, specifically designed for deep learning workloads, offer even greater performance and energy efficiency for specific model architectures. These hardware accelerators can drastically reduce inference time, enabling near real-time decision-making and enhancing the responsiveness of automated irrigation systems. For example, in a scenario where immediate response to changing weather conditions or soil moisture levels is critical, hardware acceleration can ensure that irrigation decisions are made and executed promptly.
In addition to model compression and hardware acceleration, distributed training techniques play a crucial role in optimizing the training process for large-scale ML models. Techniques such as Horovod and BytePS enable the distribution of training across multiple machines, effectively parallelizing the process and reducing training time (Premkumar & Sigappi, 2022). This is particularly beneficial for complex models with a large number of parameters or when dealing with large datasets. By leveraging distributed training, irrigation management systems can train more sophisticated models and improve their predictive capabilities, leading to more accurate and efficient irrigation decisions. For instance, a system that utilizes a deep learning model with millions of parameters can benefit from distributed training to reduce training time from days to hours, enabling faster model iteration and improvement.
Integrating the deployed ML models with other components of the automated irrigation management pipeline is essential for achieving a fully autonomous and cohesive system and addressing the need for seamless integration across the automated irrigation management system. Standardized protocols, such as MQTT and CoAP, provide lightweight and efficient communication channels for exchanging data between these components (Poojara et al., 2023; Jimenez et al., 2020a; Gour et al., 2023). MQTT, with its publish-subscribe architecture, enables real-time data streaming and event-driven communication, making it suitable for transmitting sensor data, control signals, and inference results (Raikar & M, 2023). This enables the ML model to receive real-time updates on soil moisture, weather conditions, and plant health, allowing for dynamic adjustments to irrigation schedules based on the latest data. CoAP, designed for constrained devices and low-power networks, offers a web-transfer protocol for resource-constrained environments, enabling efficient communication between sensors, actuators, and the ML models (Raikar & M, 2023). This is particularly relevant in situations where sensors or actuators have limited processing power or battery life, as CoAP minimizes communication overhead and energy consumption. Additionally, RESTful APIs provide a standardized interface for accessing and controlling the ML models, enabling seamless integration with other software components and facilitating system management and monitoring (Wang et al., 2022). This allows for easy integration with existing farm management systems or third-party applications, creating a unified platform for comprehensive irrigation management.4.4. Online Learning in the Cloud
The complexities of real-time data processing in irrigation management necessitate the exploration of advanced techniques to continuously learn and adapt to the dynamic nature of agricultural environments. Online learning algorithms offer a promising solution, enabling the continuous update and improvement of machine learning models based on incoming real-time data. This adaptability is crucial for addressing the challenges of changing environmental conditions, such as weather patterns and crop growth stages, and optimizing irrigation decision-making to enhance water usage efficiency and crop productivity.
Several online learning algorithms have demonstrated potential for real-time data processing and model adaptation in the context of irrigation management. Stochastic Gradient Descent (SGD) facilitates the incremental update of model parameters with each new data point, allowing for efficient adaptation to changing data distributions (Bottou, 2010). This incremental learning process ensures that the model remains responsive to the latest conditions, minimizing the risk of outdated predictions and improving the accuracy of irrigation decisions. Passive-Aggressive algorithms, on the other hand, adjust model parameters only when a misclassification occurs, providing a computationally efficient approach for handling large data streams (Crammer et al., 2006). These algorithms offer a robust approach to handling noisy data, a common challenge in real-world sensor readings, by making small adjustments only when the model's prediction deviates significantly from the actual value (Fei et al., 2019). Online Random Forests extend the concept of random forests to the online setting, enabling the incremental construction and update of decision trees as new data arrives (Saffari et al., 2009). The continuous evolution of the ensemble ensures that the model remains relevant to the changing environment, capturing intricate relationships between variables and leading to more informed irrigation decisions.
Research in various domains highlights the importance of online learning for real-time data stream analytics. Snyder et al. (2020) explored the application of online learning techniques for identifying relevant tweets in real-time, improving situational awareness for first responders. The proposed interactive learning framework allows users to continuously label the relevance of incoming tweets, enabling the real-time refinement of the underlying machine learning model. This user-guided approach aligns well with the dynamic nature of irrigation management, where models need to continuously adjust to varying environmental conditions and crop water requirements. Similarly, research in the field of cyber-physical systems (CPS) underscores the need for online learning algorithms to effectively extract insights and knowledge from continuously generated data streams (Fei et al., 2019). These capabilities are crucial for enabling feedback loops between physical processes and cyber elements, facilitating the integration and optimization of CPS in irrigation management systems.
To implement online learning in cloud-based irrigation management systems, various architectures and frameworks can be considered. Apache Spark Streaming, Apache Flink, and AWS Kinesis provide scalable and fault-tolerant platforms for processing real-time data streams, allowing for the development of online learning pipelines that continuously ingest and analyze data to update machine learning models (Zaharia et al., 2012; Carbone et al., 2015; Amazon Web Services, 2023). These frameworks leverage serverless computing paradigms, automatically scaling resources based on the volume and velocity of incoming data, ensuring efficient resource utilization and responsiveness to fluctuations in demand (Fei et al., 2019).
Effectively managing the exploration-exploitation trade-off is crucial for optimizing online learning in irrigation management. Techniques such as Multi-armed bandits (Sutton & Barto, 2018), Bayesian optimization (Shahriari et al., 2016), and Reinforcement Learning (RL) (Sutton & Barto, 2018) can be employed to balance the allocation of resources between exploring new irrigation strategies and exploiting the current best-performing approaches. These techniques enable the identification of optimal irrigation policies, adapting to changing environmental conditions and maximizing long-term rewards.
In conclusion, online learning techniques, coupled with scalable cloud-based architectures, offer a powerful solution for real-time data processing and continuous adaptation in irrigation management systems. By leveraging algorithms like SGD, Passive-Aggressive, and Online Random Forests, along with stream processing frameworks like Apache Spark Streaming, Apache Flink, and AWS Kinesis, irrigation management systems can effectively handle the complexities of real-time data, optimize water usage, and enhance crop productivity in the face of dynamic environmental conditions.

5. GENERATING AND APPLYING IRRIGATION INSIGHTS 
5.1. Real-Time Generation of Actionable Irrigation Insights
•	Advanced predictive models, such as deep learning (e.g., LSTM, CNN) and ensemble methods (e.g., Random Forests), for precise, site-specific irrigation recommendations
•	Integration of IoT sensor data (e.g., soil moisture probes, weather stations) and cloud-based data sources (e.g., weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filtering) to enhance insight accuracy and resolution
•	Strategies for handling data heterogeneity, uncertainty, and quality issues in real-time insight generation, such as data preprocessing and outlier detection
•	Techniques for reducing computational complexity and latency, such as edge computing (e.g., fog computing), model compression (e.g., quantization), and hardware accelerators (e.g., GPUs)
5.2. Automated Application of Irrigation Insights
•	Architectures and protocols for seamless integration of ML-generated insights with IoT-enabled irrigation control systems, such as MQTT and CoAP for lightweight, real-time communication
•	Analysis of industry-leading products and services, such as smart irrigation controllers (e.g., Rachio) and cloud-based irrigation management platforms (e.g., CropX)
•	Strategies for ensuring reliability, security, and scalability of automated insight application, such as redundant communication channels and secure edge-to-cloud architectures
•	Case studies of successful implementations of closed-loop, autonomous irrigation systems in research and commercial settings, highlighting technologies used and benefits achieved

6. INTEGRATION, INTEROPERABILITY, AND STANDARDIZATION 
6.1. Interoperability and Standardization
•	Importance of interoperability and standardization in enabling seamless integration of automated irrigation components
•	Overview of existing and emerging standards for IoT devices, communication protocols, and data formats in precision agriculture (e.g., ISOBUS, agroXML, SensorML)
•	Role of standardization bodies and industry consortia in promoting interoperability (e.g., AgGateway, Open Ag Data Alliance, Agricultural Industry Electronics Foundation)
•	Challenges in adopting and implementing standards across diverse hardware and software platforms
•	Strategies for encouraging widespread adoption of standards and best practices for interoperability in automated irrigation systems
6.2. Integration with Existing Irrigation Infrastructure
•	Challenges and strategies for retrofitting legacy irrigation systems with IoT sensors, actuators, and communication devices
•	Hardware compatibility issues and solutions (e.g., adapters, modular designs)
•	Software and firmware updates to enable integration with automated decision-making systems
•	Data integration and normalization techniques for merging legacy and new data sources
•	Economic and practical considerations for transitioning from manual to automated irrigation management
•	Cost-benefit analysis of upgrading existing infrastructure vs. implementing new systems
•	Phased implementation approaches to minimize disruption and optimize resource allocation
•	Training and support requirements for farmers and irrigation managers adopting automated systems
•	Case studies and real-world examples of successful integration of automated irrigation with existing infrastructure
6.3. Integration with Other Precision Agriculture Technologies
•	Synergies between automated irrigation and complementary technologies
•	Remote sensing (satellite, UAV, and ground-based) for crop monitoring and evapotranspiration estimation
•	Soil moisture sensors and weather stations for real-time, localized data collection
•	Variable rate application systems for precise irrigation delivery based on crop requirements
•	Yield mapping and analytics for assessing the impact of automated irrigation on crop productivity
•	Architectures and frameworks for integrating diverse data sources and technologies into a unified precision agriculture ecosystem
•	Edge computing and fog computing paradigms for real-time data processing and decision-making
•	Cloud-based platforms for data storage, analysis, and visualization
•	API-driven approaches for modular integration of third-party services and applications
•	Challenges and solutions for ensuring data quality, consistency, and security across integrated precision agriculture systems
•	Data cleaning, preprocessing, and harmonization techniques
•	Blockchain and distributed ledger technologies for secure, tamper-proof data sharing and traceability
•	Access control and authentication mechanisms for protecting sensitive data and resources
•	Future trends and research directions in the integration of automated irrigation with advanced precision agriculture technologies (e.g., AI-driven crop modeling, robotics, and autonomous vehicles)
6.4. Cybersecurity Considerations for Integrated Automated Irrigation Systems
•	Unique security risks and vulnerabilities associated with IoT-based automated irrigation systems
•	Potential for unauthorized access, data tampering, and system manipulation
•	Implications of security breaches for crop health, water resource management, and farm productivity
•	Best practices and strategies for securing automated irrigation systems
•	Secure device provisioning and authentication (e.g., hardware security modules, certificates)
•	Encryption and secure communication protocols (e.g., TLS, DTLS)
•	Firmware and software updates to address emerging security threats
•	Network segmentation and access control to limit the impact of breaches
•	Role of cybersecurity standards and frameworks in guiding the development and deployment of secure automated irrigation systems (e.g., NIST CSF, IEC 62443)
•	Importance of user awareness, training, and incident response planning in maintaining the security of integrated automated irrigation systems

7. MONITORING AND ENSURING SYSTEM RELIABILITY
7.1. Resilience and Fault Tolerance in Automated Irrigation Systems
•	Strategies for ensuring robustness and reliability in the face of failures, disruptions, or unexpected events
•	Redundancy: Implementing redundant components, such as duplicate sensors (e.g., soil moisture sensors, weather stations), controllers (e.g., PLCs, microcontrollers), and communication channels (e.g., cellular, satellite, LoRaWAN) to maintain system functionality during component failures
•	Failover mechanisms: Designing seamless failover mechanisms that automatically switch to backup components or systems in case of primary system failure, such as hot-standby controllers or multi-path communication protocols (e.g., mesh networks, software-defined networking)
•	Self-healing capabilities: Incorporating AI-driven self-healing mechanisms that can detect, diagnose, and recover from faults without human intervention, using techniques like reinforcement learning, Bayesian networks, or self-organizing maps
•	The role of distributed architectures and edge computing in enhancing system resilience
•	Decentralizing critical functions and data processing to minimize the impact of single points of failure, using fog computing or multi-agent systems
•	Leveraging edge computing to enable localized decision-making and control, reducing dependence on cloud connectivity and improving response times, using technologies like Raspberry Pi, NVIDIA Jetson, or Intel NUC
•	Anomaly detection and predictive maintenance using AI techniques
•	Employing unsupervised learning algorithms (e.g., autoencoders, clustering) to detect anomalies in sensor data, system performance, and water usage patterns
•	Developing predictive maintenance models using techniques like long short-term memory (LSTM) networks, convolutional neural networks (CNNs), or gradient boosting machines (GBMs) to anticipate and prevent potential system failures based on historical data and real-time monitoring
7.2. Advanced Monitoring Techniques for Automated Irrigation Systems
•	Remote monitoring using IoT-enabled sensors and computer vision
•	Deploying a heterogeneous network of IoT sensors to collect real-time data on soil moisture (e.g., capacitive, tensiometric), temperature (e.g., thermocouples, thermistors), humidity (e.g., capacitive, resistive), and plant health (e.g., sap flow, leaf wetness)
•	Integrating high-resolution cameras (e.g., multispectral, hyperspectral) and computer vision algorithms for visual monitoring of crop growth, disease detection (e.g., using deep learning-based object detection and segmentation), and irrigation system performance (e.g., leak detection, sprinkler uniformity)
•	Transmitting sensor and camera data to cloud-based platforms (e.g., AWS IoT, Google Cloud IoT, Microsoft Azure IoT) for remote access and analysis using protocols like MQTT, CoAP, or AMQP
•	Innovative approaches for real-time system health assessment
•	Developing novel algorithms and metrics for evaluating the health and performance of automated irrigation systems, such as entropy-based measures, network resilience indices, or multi-criteria decision analysis (MCDA) frameworks
•	Combining data from multiple sources (e.g., sensors, weather forecasts, satellite imagery) using data fusion techniques (e.g., Kalman filters, Dempster-Shafer theory) to create a comprehensive view of system health
•	Employing advanced data visualization techniques (e.g., interactive dashboards, augmented reality) to present system health information in an intuitive and actionable format
7.3. Closed-Loop Control and Feedback Mechanisms
•	Exploring the concept of closed-loop control in autonomous irrigation systems
•	Implementing feedback loops that continuously monitor system performance and adjust irrigation schedules based on real-time data, using control techniques like proportional-integral-derivative (PID), model predictive control (MPC), or fuzzy logic control (FLC)
•	Integrating machine learning algorithms (e.g., reinforcement learning, genetic algorithms) to optimize closed-loop control strategies over time, adapting to changing environmental conditions and crop requirements
•	Designing effective feedback mechanisms for user interaction and system optimization
•	Providing user-friendly interfaces (e.g., mobile apps, web dashboards) for farmers to input preferences, constraints, and expert knowledge into the automated irrigation system, using techniques like participatory design or user-centered design
•	Incorporating user feedback and domain expertise to refine irrigation strategies and improve system performance
8. CASE STUDIES AND REAL-WORLD IMPLEMENTATIONS OF FULLY AUTONOMOUS IRRIGATION SYSTEMS
8.1. Fully Autonomous Irrigation Systems in Diverse Agricultural Settings
•	Row Crops: maize, wheat, soybean with real-time soil moisture monitoring and weather-based irrigation scheduling for fully automated precision irrigation
•	Orchards: citrus, apple, almond with plant health monitoring and precision water application for fully autonomous orchard management
•	Greenhouses: tomato, lettuce, herbs with automated drip irrigation and climate control integration for fully automated greenhouse operations
•	Urban Farming: rooftop gardens, vertical farms with IoT-enabled hydroponic systems and remote management for fully autonomous urban crop production
8.2. Integration of Advanced System Components for End-to-End Automation
•	Wireless sensor networks: soil moisture probes, weather stations, plant health monitoring cameras with low-power, long-range communication for fully automated data acquisition
•	Secure data transmission: LoRaWAN, NB-IoT, 5G, satellite communication for reliable, real-time data transfer from field to cloud in fully autonomous irrigation systems
•	Intelligent data processing: edge computing for local data filtering, cloud platforms for scalable storage and analysis, machine learning algorithms for predictive insights in fully automated irrigation management
•	Autonomous decision-making: advanced irrigation scheduling algorithms, precise valve control, closed-loop feedback systems for optimal water management in fully autonomous irrigation systems
8.3. Quantitative Performance Evaluation of Fully Automated Irrigation Systems
•	Water use efficiency: percent reduction in water consumption compared to conventional methods, improved water productivity (yield per unit of water) achieved through fully autonomous irrigation
•	Crop yield and quality improvements: percent increase in yield, enhanced crop uniformity, improved nutritional content attributed to fully automated precision irrigation
•	Labor and energy savings: quantified reduction in labor hours for irrigation management, decreased energy consumption for pumping due to optimized scheduling in fully autonomous systems
•	Economic viability: detailed return on investment analysis, payback period calculations, comprehensive cost-benefit analysis for fully autonomous irrigation management systems
8.4. Lessons Learned and Challenges Encountered in Deploying Autonomous Irrigation Systems
•	Technical challenges and solutions: ensuring reliable data transmission in remote locations, addressing interoperability issues between diverse system components, optimizing power consumption for extended battery life, adapting algorithms to local soil and weather conditions in fully autonomous irrigation systems
•	Operational and logistical hurdles: streamlining installation and maintenance procedures, providing effective user training, seamlessly integrating with existing farm management practices and legacy systems for fully automated irrigation management
•	Regulatory and socio-economic considerations: navigating complex water use regulations, addressing data privacy and security concerns, ensuring equitable access and affordability for smallholder farmers adopting fully autonomous irrigation technologies
8.5. Best Practices and Recommendations for Successful Implementation
•	Designing scalable, modular, and adaptable autonomous irrigation systems to accommodate future growth and changing requirements for fully automated water management
•	Prioritizing user-centered design principles and actively engaging stakeholders throughout the development and deployment process of fully autonomous irrigation solutions
•	Adopting open standards and communication protocols to enable seamless integration of system components and interoperability with third-party platforms in fully automated irrigation setups
•	Implementing robust data validation, filtering, and quality control mechanisms to ensure data integrity and reliability for decision-making in fully autonomous irrigation systems
•	Establishing clear data governance policies and security frameworks to protect sensitive information and maintain user trust in fully automated irrigation management
•	Developing intuitive user interfaces and decision support tools to facilitate easy adoption and effective use of fully autonomous irrigation systems
•	Collaborating with local extension services, agribusinesses, and technology providers for knowledge transfer, technical support, and continuous improvement of fully automated irrigation solutions
8.6. Synthesis of Case Studies and Implications for Autonomous Irrigation Adoption
•	Cross-case analysis of key performance indicators and critical success factors for fully autonomous irrigation scheduling systems in various contexts
•	Identification of common themes, challenges, and innovative solutions across diverse implementations of end-to-end fully automated irrigation management
•	Assessment of the potential for replicability and scaling of successful fully autonomous irrigation projects in different regions and farming systems
•	Implications for future research priorities, technology development roadmaps, and policy interventions to support widespread adoption of fully autonomous irrigation technologies

CONCLUSION/FUTURE DIRECTIONS AND UNANSWERED QUESTIONS
•	Summarize the key insights gained from the question-driven review, emphasizing how each section contributes to the overarching goal of achieving real-time, end-to-end automation in irrigation management
•	Based on the questions addressed, propose new research directions and unanswered questions
•	Identify key research gaps and propose concrete research questions and hypotheses for advancing the field of real-time, automated irrigation management
•	Highlight the need for collaborative research efforts across disciplines, such as computer science, agricultural engineering, and environmental science, to address the complex challenges of automated irrigation systems
•	Emphasize the need for further innovation and exploration in real-time, automated irrigation systems




</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper. 

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 5.2. Automated Application of Irrigation Insights
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

